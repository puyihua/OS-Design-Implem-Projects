!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ALT	kbd.h	11;"	d
APP_SEG	mmu.h	101;"	d
AS	Makefile	/^AS = $(TOOLPREFIX)gas$/;"	m
ASFLAGS	Makefile	/^ASFLAGS = -gdwarf-2 -Wa,-divide -Iinclude $(XFLAGS)$/;"	m
ASSERT	lapic.c	26;"	d	file:
Align	umalloc.c	/^typedef long Align;$/;"	t	file:
BACK	sh.c	12;"	d	file:
BACKSPACE	console.c	139;"	d	file:
BBLOCK	fs.h	48;"	d
BCAST	lapic.c	29;"	d	file:
BIG	usertests.asm	/^#define BIG (100*1024*1024)$/;"	d
BIG	usertests.c	1452;"	d	file:
BPB	fs.h	45;"	d
BSIZE	fs.h	6;"	d
BUSY	lapic.c	30;"	d	file:
B_DIRTY	buf.h	13;"	d
B_VALID	buf.h	12;"	d
C	console.c	199;"	d	file:
C	kbd.h	32;"	d
C	kernel.asm	/^#define C(x)  ((x)-'@')  \/\/ Control-x$/;"	d
CALL_GATE	mmu.h	62;"	d
CAPSLOCK	kbd.h	13;"	d
CC	Makefile	/^CC = $(TOOLPREFIX)gcc$/;"	m
CFLAGS	Makefile	/^CFLAGS = -fno-pic -static -fno-builtin -fno-strict-aliasing -Wall -MD -ggdb -fno-omit-frame-pointer$/;"	m
CMOS_PORT	lapic.c	144;"	d	file:
CMOS_RETURN	lapic.c	145;"	d	file:
CMOS_STATA	lapic.c	184;"	d	file:
CMOS_STATB	lapic.c	185;"	d	file:
CMOS_UIP	lapic.c	186;"	d	file:
COM1	uart.c	15;"	d	file:
CONSOLE	file.h	38;"	d
CONV	kernel.asm	/^#define    CONV(x)     (t1.x = ((t1.x >> 4) * 10) + (t1.x & 0xf))$/;"	d
CONV	lapic.c	236;"	d	file:
CONV	lapic.c	243;"	d	file:
CPUS	Makefile	/^CPUS := 2$/;"	m
CR0_AM	mmu.h	35;"	d
CR0_CD	mmu.h	37;"	d
CR0_EM	mmu.h	30;"	d
CR0_ET	mmu.h	32;"	d
CR0_MP	mmu.h	29;"	d
CR0_NE	mmu.h	33;"	d
CR0_NW	mmu.h	36;"	d
CR0_PE	mmu.h	28;"	d
CR0_PG	mmu.h	38;"	d
CR0_TS	mmu.h	31;"	d
CR0_WP	mmu.h	34;"	d
CR4_OSXFSR	mmu.h	42;"	d
CR4_OSXMMEXCPT	mmu.h	43;"	d
CR4_PAE	mmu.h	41;"	d
CR4_PSE	mmu.h	40;"	d
CRTPORT	console.c	140;"	d	file:
CRTPORT	kernel.asm	/^#define CRTPORT 0x3d4$/;"	d
CTL	kbd.h	10;"	d
DAY	kernel.asm	/^#define DAY     0x07$/;"	d
DAY	lapic.c	191;"	d	file:
DEASSERT	lapic.c	27;"	d	file:
DEBUG	Makefile	/^DEBUG=TRUE$/;"	m
DELIVS	lapic.c	25;"	d	file:
DIRSIZ	fs.h	51;"	d
DPL_USER	mmu.h	100;"	d
Disassembly	bootblock.asm	/^Disassembly of section .text:$/;"	l
Disassembly	cat.asm	/^Disassembly of section .text:$/;"	l
Disassembly	divide.asm	/^Disassembly of section .text:$/;"	l
Disassembly	echo.asm	/^Disassembly of section .text:$/;"	l
Disassembly	entryother.asm	/^Disassembly of section .text:$/;"	l
Disassembly	forktest.asm	/^Disassembly of section .text:$/;"	l
Disassembly	grep.asm	/^Disassembly of section .text:$/;"	l
Disassembly	init.asm	/^Disassembly of section .text:$/;"	l
Disassembly	initcode.asm	/^Disassembly of section .text:$/;"	l
Disassembly	kernel.asm	/^Disassembly of section .text:$/;"	l
Disassembly	kill.asm	/^Disassembly of section .text:$/;"	l
Disassembly	ln.asm	/^Disassembly of section .text:$/;"	l
Disassembly	ls.asm	/^Disassembly of section .text:$/;"	l
Disassembly	mkdir.asm	/^Disassembly of section .text:$/;"	l
Disassembly	rm.asm	/^Disassembly of section .text:$/;"	l
Disassembly	sh.asm	/^Disassembly of section .text:$/;"	l
Disassembly	stressfs.asm	/^Disassembly of section .text:$/;"	l
Disassembly	usertests.asm	/^Disassembly of section .text:$/;"	l
Disassembly	wc.asm	/^Disassembly of section .text:$/;"	l
Disassembly	zombie.asm	/^Disassembly of section .text:$/;"	l
E0ESC	kbd.h	17;"	d
ELF_MAGIC	elf.h	3;"	d
ELF_PROG_FLAG_EXEC	elf.h	40;"	d
ELF_PROG_FLAG_READ	elf.h	42;"	d
ELF_PROG_FLAG_WRITE	elf.h	41;"	d
ELF_PROG_LOAD	elf.h	37;"	d
EMBRYO	proc.h	/^enum procstate { UNUSED, EMBRYO, SLEEPING, RUNNABLE, RUNNING, ZOMBIE };$/;"	e	enum:procstate
ENABLE	lapic.c	20;"	d	file:
EOI	lapic.c	18;"	d	file:
ERROR	lapic.c	39;"	d	file:
ESR	lapic.c	21;"	d	file:
EXEC	sh.c	8;"	d	file:
EXTMEM	memlayout.h	3;"	d
EXTRA	Makefile	/^EXTRA=\\$/;"	m
FD_INODE	file.h	/^  enum { FD_NONE, FD_PIPE, FD_INODE } type;$/;"	e	enum:file::__anon3
FD_NONE	file.h	/^  enum { FD_NONE, FD_PIPE, FD_INODE } type;$/;"	e	enum:file::__anon3
FD_PIPE	file.h	/^  enum { FD_NONE, FD_PIPE, FD_INODE } type;$/;"	e	enum:file::__anon3
FILES	Makefile	/^FILES = $(shell grep -v '^\\#' runoff.list)$/;"	m
FIXED	lapic.c	31;"	d	file:
FL_AC	mmu.h	22;"	d
FL_AF	mmu.h	7;"	d
FL_CF	mmu.h	5;"	d
FL_DF	mmu.h	12;"	d
FL_ID	mmu.h	25;"	d
FL_IF	mmu.h	11;"	d
FL_IOPL_0	mmu.h	15;"	d
FL_IOPL_1	mmu.h	16;"	d
FL_IOPL_2	mmu.h	17;"	d
FL_IOPL_3	mmu.h	18;"	d
FL_IOPL_MASK	mmu.h	14;"	d
FL_NT	mmu.h	19;"	d
FL_OF	mmu.h	13;"	d
FL_PF	mmu.h	6;"	d
FL_RF	mmu.h	20;"	d
FL_SF	mmu.h	9;"	d
FL_TF	mmu.h	10;"	d
FL_VIF	mmu.h	23;"	d
FL_VIP	mmu.h	24;"	d
FL_VM	mmu.h	21;"	d
FL_ZF	mmu.h	8;"	d
FSSIZE	param.h	13;"	d
GDBPORT	Makefile	/^GDBPORT = $(shell expr `id -u` % 5000 + 25000)$/;"	m
HOURS	lapic.c	190;"	d	file:
Header	umalloc.c	/^typedef union header Header;$/;"	t	typeref:union:header	file:
IBLOCK	fs.h	42;"	d
ICRHI	lapic.c	32;"	d	file:
ICRLO	lapic.c	22;"	d	file:
ID	lapic.c	15;"	d	file:
IDE_BSY	ide.c	17;"	d	file:
IDE_CMD_RDMUL	ide.c	24;"	d	file:
IDE_CMD_READ	ide.c	22;"	d	file:
IDE_CMD_WRITE	ide.c	23;"	d	file:
IDE_CMD_WRMUL	ide.c	25;"	d	file:
IDE_DF	ide.c	19;"	d	file:
IDE_DRDY	ide.c	18;"	d	file:
IDE_ERR	ide.c	20;"	d	file:
INIT	lapic.c	23;"	d	file:
INPUT_BUF	console.c	190;"	d	file:
INT_ACTIVELOW	ioapic.c	23;"	d	file:
INT_DISABLED	ioapic.c	21;"	d	file:
INT_LEVEL	ioapic.c	22;"	d	file:
INT_LOGICAL	ioapic.c	24;"	d	file:
IOAPIC	ioapic.c	10;"	d	file:
IPB	fs.h	39;"	d
IRQ_COM1	traps.h	34;"	d
IRQ_ERROR	traps.h	36;"	d
IRQ_IDE	traps.h	35;"	d
IRQ_KBD	traps.h	33;"	d
IRQ_SPURIOUS	traps.h	37;"	d
IRQ_TIMER	traps.h	32;"	d
I_VALID	file.h	27;"	d
KBDATAP	kbd.h	5;"	d
KBSTATP	kbd.h	3;"	d
KBS_DIB	kbd.h	4;"	d
KERNBASE	kernel.asm	/^#define KERNBASE 0xFFFF800000000000 \/\/ First kernel virtual address$/;"	d
KERNBASE	memlayout.h	7;"	d
KERNEL_CS	mmu.h	67;"	d
KERNLINK	kernel.asm	/^#define KERNLINK (KERNBASE+EXTMEM)  \/\/ Address where kernel is linked$/;"	d
KERNLINK	memlayout.h	9;"	d
KEY_DEL	kbd.h	29;"	d
KEY_DN	kbd.h	23;"	d
KEY_END	kbd.h	21;"	d
KEY_HOME	kbd.h	20;"	d
KEY_INS	kbd.h	28;"	d
KEY_LF	kbd.h	24;"	d
KEY_PGDN	kbd.h	27;"	d
KEY_PGUP	kbd.h	26;"	d
KEY_RT	kbd.h	25;"	d
KEY_UP	kbd.h	22;"	d
KSTACKSIZE	param.h	2;"	d
LD	Makefile	/^LD = $(TOOLPREFIX)ld$/;"	m
LDFLAGS	Makefile	/^LDFLAGS = -m elf_x86_64 -nodefaultlibs$/;"	m
LEVEL	lapic.c	28;"	d	file:
LINT0	lapic.c	37;"	d	file:
LINT1	lapic.c	38;"	d	file:
LIST	sh.c	11;"	d	file:
LOGSIZE	param.h	11;"	d
MASKED	lapic.c	40;"	d	file:
MAXARG	param.h	9;"	d
MAXARGS	sh.c	14;"	d	file:
MAXFILE	fs.h	26;"	d
MAXOPBLOCKS	param.h	10;"	d
MEMFSOBJS	Makefile	/^MEMFSOBJS = $(filter-out ide.o,$(OBJS)) memide.o$/;"	m
MINS	lapic.c	189;"	d	file:
MONTH	kernel.asm	/^#define MONTH   0x08$/;"	d
MONTH	lapic.c	192;"	d	file:
MPBOOT	mp.h	34;"	d
MPBUS	mp.h	50;"	d
MPIOAPIC	mp.h	51;"	d
MPIOINTR	mp.h	52;"	d
MPLINTR	mp.h	53;"	d
MPPROC	mp.h	49;"	d
MSR_CSTAR	mmu.h	49;"	d
MSR_EFER	mmu.h	46;"	d
MSR_LSTAR	mmu.h	48;"	d
MSR_SFMASK	mmu.h	50;"	d
MSR_STAR	mmu.h	47;"	d
N	forktest.asm	/^#define N  1000$/;"	d
N	forktest.c	8;"	d	file:
NBUF	param.h	12;"	d
NCPU	param.h	3;"	d
NDEV	param.h	7;"	d
NDIRECT	fs.h	24;"	d
NELEM	defs.h	190;"	d
NFILE	param.h	5;"	d
NINDIRECT	fs.h	25;"	d
NINODE	param.h	6;"	d
NINODES	mkfs.c	18;"	d	file:
NO	kbd.h	7;"	d
NOFILE	param.h	4;"	d
NPDENTRIES	mmu.h	143;"	d
NPROC	param.h	1;"	d
NPTENTRIES	mmu.h	144;"	d
NSEGS	mmu.h	61;"	d
NUMLOCK	kbd.h	14;"	d
OBJCOPY	Makefile	/^OBJCOPY = $(TOOLPREFIX)objcopy$/;"	m
OBJDUMP	Makefile	/^OBJDUMP = $(TOOLPREFIX)objdump$/;"	m
OBJS	Makefile	/^OBJS = \\$/;"	m
OPT	Makefile	/^OPT ?= -O0$/;"	m
O_CREATE	fcntl.h	4;"	d
O_RDONLY	fcntl.h	1;"	d
O_RDWR	fcntl.h	3;"	d
O_WRONLY	fcntl.h	2;"	d
P2V	memlayout.h	21;"	d
P2V_WO	memlayout.h	24;"	d
PCINT	lapic.c	36;"	d	file:
PDPX	mmu.h	136;"	d
PDPXSHIFT	mmu.h	149;"	d
PDX	mmu.h	138;"	d
PDXSHIFT	mmu.h	148;"	d
PERIODIC	lapic.c	35;"	d	file:
PGROUNDDOWN	mmu.h	154;"	d
PGROUNDUP	mmu.h	153;"	d
PGSHIFT	mmu.h	146;"	d
PGSIZE	mmu.h	145;"	d
PHYSTOP	memlayout.h	4;"	d
PIPE	sh.c	10;"	d	file:
PIPESIZE	pipe.c	11;"	d	file:
PML4XSHIFT	mmu.h	150;"	d
PMX	mmu.h	134;"	d
PRINT	Makefile	/^PRINT = runoff.list runoff.spec README toc.hdr toc.ftr $(FILES)$/;"	m
PTE_A	mmu.h	162;"	d
PTE_ADDR	mmu.h	168;"	d
PTE_D	mmu.h	163;"	d
PTE_FLAGS	mmu.h	169;"	d
PTE_MBZ	mmu.h	165;"	d
PTE_P	mmu.h	157;"	d
PTE_PCD	mmu.h	161;"	d
PTE_PS	mmu.h	164;"	d
PTE_PWT	mmu.h	160;"	d
PTE_U	mmu.h	159;"	d
PTE_W	mmu.h	158;"	d
PTX	mmu.h	140;"	d
PTXSHIFT	mmu.h	147;"	d
PXMASK	mmu.h	151;"	d
QEMU	Makefile	/^ QEMU = qemu-system-x86_64$/;"	m
QEMU	Makefile	/^QEMU = $(shell if which qemu > \/dev\/null; \\$/;"	m
QEMUGDB	Makefile	/^QEMUGDB = $(shell if $(QEMU) -help | grep -q '^-gdb'; \\$/;"	m
QEMUOPTS	Makefile	/^QEMUOPTS = -net none -hdb fs.img xv6.img -smp $(CPUS) -m 512 $(QEMUEXTRA)$/;"	m
REDIR	sh.c	9;"	d	file:
REG_ID	ioapic.c	12;"	d	file:
REG_TABLE	ioapic.c	14;"	d	file:
REG_VER	ioapic.c	13;"	d	file:
ROOTDEV	param.h	8;"	d
ROOTINO	fs.h	5;"	d
RTC_ADDR	usertests.c	1701;"	d	file:
RTC_DATA	usertests.c	1702;"	d	file:
RUNNABLE	proc.h	/^enum procstate { UNUSED, EMBRYO, SLEEPING, RUNNABLE, RUNNING, ZOMBIE };$/;"	e	enum:procstate
RUNNING	proc.h	/^enum procstate { UNUSED, EMBRYO, SLEEPING, RUNNABLE, RUNNING, ZOMBIE };$/;"	e	enum:procstate
SCROLLLOCK	kbd.h	15;"	d
SECS	lapic.c	188;"	d	file:
SECTOR_SIZE	ide.c	16;"	d	file:
SECTSIZE	bootmain.c	12;"	d	file:
SEG	mmu.h	89;"	d
SEG16	mmu.h	94;"	d
SEG_ASM	asm.h	11;"	d
SEG_KCODE	mmu.h	53;"	d
SEG_KCPU	mmu.h	58;"	d
SEG_KDATA	mmu.h	54;"	d
SEG_NULLASM	asm.h	5;"	d
SEG_TSS	mmu.h	59;"	d
SEG_UCODE	mmu.h	57;"	d
SEG_UCODE32	mmu.h	55;"	d
SEG_UDATA	mmu.h	56;"	d
SETCALLGATE	mmu.h	243;"	d
SHIFT	kbd.h	9;"	d
SLEEPING	proc.h	/^enum procstate { UNUSED, EMBRYO, SLEEPING, RUNNABLE, RUNNING, ZOMBIE };$/;"	e	enum:procstate
STARTUP	lapic.c	24;"	d	file:
STA_A	asm.h	21;"	d
STA_A	mmu.h	109;"	d
STA_C	asm.h	18;"	d
STA_C	mmu.h	106;"	d
STA_E	asm.h	17;"	d
STA_E	mmu.h	105;"	d
STA_R	asm.h	20;"	d
STA_R	mmu.h	108;"	d
STA_W	asm.h	19;"	d
STA_W	mmu.h	107;"	d
STA_X	asm.h	16;"	d
STA_X	mmu.h	104;"	d
STS_CG16	mmu.h	115;"	d
STS_CG64	mmu.h	121;"	d
STS_IG16	mmu.h	117;"	d
STS_IG64	mmu.h	122;"	d
STS_LDT	mmu.h	113;"	d
STS_T16A	mmu.h	112;"	d
STS_T16B	mmu.h	114;"	d
STS_T64A	mmu.h	119;"	d
STS_T64B	mmu.h	120;"	d
STS_TG	mmu.h	116;"	d
STS_TG16	mmu.h	118;"	d
STS_TG64	mmu.h	123;"	d
SVR	lapic.c	19;"	d	file:
SYSCALL	usys.S	/^#define SYSCALL(name) \\$/;"	d
SYS_chdir	syscall.h	10;"	d
SYS_close	syscall.h	22;"	d
SYS_dup	syscall.h	11;"	d
SYS_exec	syscall.h	8;"	d
SYS_exit	syscall.h	3;"	d
SYS_fork	syscall.h	2;"	d
SYS_fstat	syscall.h	9;"	d
SYS_getpid	syscall.h	12;"	d
SYS_kill	syscall.h	7;"	d
SYS_link	syscall.h	20;"	d
SYS_mkdir	syscall.h	21;"	d
SYS_mknod	syscall.h	18;"	d
SYS_open	syscall.h	16;"	d
SYS_pipe	syscall.h	5;"	d
SYS_read	syscall.h	6;"	d
SYS_sbrk	syscall.h	13;"	d
SYS_sleep	syscall.h	14;"	d
SYS_unlink	syscall.h	19;"	d
SYS_uptime	syscall.h	15;"	d
SYS_wait	syscall.h	4;"	d
SYS_write	syscall.h	17;"	d
TCCR	lapic.c	42;"	d	file:
TDCR	lapic.c	43;"	d	file:
TICR	lapic.c	41;"	d	file:
TIMER	lapic.c	33;"	d	file:
TOOLPREFIX	Makefile	/^TOOLPREFIX := $(shell if i386-jos-elf-objdump -i 2>&1 | grep '^elf32-i386$$' >\/dev\/null 2>&1; \\$/;"	m
TPR	lapic.c	17;"	d	file:
TRAP_GATE	mmu.h	171;"	d
T_ALIGN	traps.h	21;"	d
T_BOUND	traps.h	9;"	d
T_BRKPT	traps.h	7;"	d
T_DBLFLT	traps.h	12;"	d
T_DEBUG	traps.h	5;"	d
T_DEFAULT	traps.h	28;"	d
T_DEV	stat.h	3;"	d
T_DEVICE	traps.h	11;"	d
T_DIR	stat.h	1;"	d
T_DIVIDE	traps.h	4;"	d
T_FILE	stat.h	2;"	d
T_FPERR	traps.h	20;"	d
T_GPFLT	traps.h	17;"	d
T_ILLOP	traps.h	10;"	d
T_IRQ0	traps.h	30;"	d
T_MCHK	traps.h	22;"	d
T_NMI	traps.h	6;"	d
T_OFLOW	traps.h	8;"	d
T_PGFLT	traps.h	18;"	d
T_SEGNP	traps.h	15;"	d
T_SIMDERR	traps.h	23;"	d
T_STACK	traps.h	16;"	d
T_SYSCALL	traps.h	27;"	d
T_TSS	traps.h	14;"	d
ULIB	Makefile	/^ULIB = ulib.o usys.o printf.o umalloc.o$/;"	m
UNUSED	proc.h	/^enum procstate { UNUSED, EMBRYO, SLEEPING, RUNNABLE, RUNNING, ZOMBIE };$/;"	e	enum:procstate
UPROGS	Makefile	/^UPROGS=\\$/;"	m
USER_CS	mmu.h	65;"	d
USER_DS	mmu.h	66;"	d
V2P	memlayout.h	20;"	d
V2P_WO	memlayout.h	23;"	d
VER	lapic.c	16;"	d	file:
X1	lapic.c	34;"	d	file:
XFLAGS	Makefile	/^XFLAGS = -m64 -DX64 -mcmodel=large -mtls-direct-seg-refs -mno-red-zone$/;"	m
YEAR	kernel.asm	/^#define YEAR    0x09$/;"	d
YEAR	lapic.c	193;"	d	file:
ZOMBIE	proc.h	/^enum procstate { UNUSED, EMBRYO, SLEEPING, RUNNABLE, RUNNING, ZOMBIE };$/;"	e	enum:procstate
__deadloop	entry.S	/^__deadloop:$/;"	l
__deadloop	kernel.asm	/^__deadloop:$/;"	l
_cat	cat.asm	/^_cat:     file format elf64-x86-64$/;"	l
_divide	divide.asm	/^_divide:     file format elf64-x86-64$/;"	l
_echo	echo.asm	/^_echo:     file format elf64-x86-64$/;"	l
_forktest	forktest.asm	/^_forktest:     file format elf64-x86-64$/;"	l
_grep	grep.asm	/^_grep:     file format elf64-x86-64$/;"	l
_init	init.asm	/^_init:     file format elf64-x86-64$/;"	l
_kill	kill.asm	/^_kill:     file format elf64-x86-64$/;"	l
_ln	ln.asm	/^_ln:     file format elf64-x86-64$/;"	l
_ls	ls.asm	/^_ls:     file format elf64-x86-64$/;"	l
_mkdir	mkdir.asm	/^_mkdir:     file format elf64-x86-64$/;"	l
_rm	rm.asm	/^_rm:     file format elf64-x86-64$/;"	l
_sh	sh.asm	/^_sh:     file format elf64-x86-64$/;"	l
_start	entry.S	/^_start:$/;"	l
_start	kernel.asm	/^_start:$/;"	l
_stressfs	stressfs.asm	/^_stressfs:     file format elf64-x86-64$/;"	l
_usertests	usertests.asm	/^_usertests:     file format elf64-x86-64$/;"	l
_wc	wc.asm	/^_wc:     file format elf64-x86-64$/;"	l
_zombie	zombie.asm	/^_zombie:     file format elf64-x86-64$/;"	l
a	kernel.asm	/^    a = (uint*)bp->data;$/;"	d
a	kernel.asm	/^  a = (char*)PGROUNDDOWN((addr_t)va);$/;"	d
a	kernel.asm	/^  a = PGROUNDUP(newsz);$/;"	d
a	kernel.asm	/^  a = PGROUNDUP(oldsz);$/;"	d
a	usertests.asm	/^    a = b + 1;$/;"	d
a	usertests.asm	/^  a = sbrk(0);$/;"	d
a0	divide.asm	/^  a0:	89 45 f0             	mov    %eax,-0x10(%rbp)$/;"	l
a0	forktest.asm	/^  a0:	00 00 00 $/;"	l
a0	usertests.asm	/^      a0:	8b 00                	mov    (%rax),%eax$/;"	l
a0	zombie.asm	/^  a0:	84 c0                	test   %al,%al$/;"	l
a00	cat.asm	/^ a00:	ff d0                	callq  *%rax$/;"	l
a00	init.asm	/^ a00:	48 89 e5             	mov    %rsp,%rbp$/;"	l
a00	ln.asm	/^ a00:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
a00	zombie.asm	/^ a00:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
a01	sh.asm	/^     a01:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
a01	usertests.asm	/^     a01:	00 00 00 $/;"	l
a02	cat.asm	/^ a02:	c7 85 40 ff ff ff 00 	movl   $0x0,-0xc0(%rbp)$/;"	l
a02	divide.asm	/^ a02:	89 d6                	mov    %edx,%esi$/;"	l
a02	echo.asm	/^ a02:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
a02	grep.asm	/^ a02:	0f be c0             	movsbl %al,%eax$/;"	l
a02	kill.asm	/^ a02:	75 27                	jne    a2b <free+0x113>$/;"	l
a02	ls.asm	/^     a02:	c7 85 44 ff ff ff 00 	movl   $0x0,-0xbc(%rbp)$/;"	l
a02	mkdir.asm	/^ a02:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
a02	rm.asm	/^ a02:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
a03	init.asm	/^ a03:	48 83 ec 18          	sub    $0x18,%rsp$/;"	l
a03	zombie.asm	/^ a03:	c1 e0 04             	shl    $0x4,%eax$/;"	l
a04	divide.asm	/^ a04:	89 c7                	mov    %eax,%edi$/;"	l
a04	kill.asm	/^ a04:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
a04	ln.asm	/^ a04:	48 89 10             	mov    %rdx,(%rax)$/;"	l
a04	usertests.asm	/^     a04:	89 c7                	mov    %eax,%edi$/;"	l
a05	grep.asm	/^ a05:	25 ff 00 00 00       	and    $0xff,%eax$/;"	l
a05	sh.asm	/^     a05:	48 89 c7             	mov    %rax,%rdi$/;"	l
a06	divide.asm	/^ a06:	48 b8 a2 05 00 00 00 	movabs $0x5a2,%rax$/;"	l
a06	echo.asm	/^ a06:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
a06	mkdir.asm	/^ a06:	48 89 10             	mov    %rdx,(%rax)$/;"	l
a06	rm.asm	/^ a06:	48 89 10             	mov    %rdx,(%rax)$/;"	l
a06	stressfs.asm	/^ a06:	00 00 00 $/;"	l
a06	usertests.asm	/^     a06:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
a06	wc.asm	/^ a06:	8b 95 20 ff ff ff    	mov    -0xe0(%rbp),%edx$/;"	l
a06	zombie.asm	/^ a06:	89 c7                	mov    %eax,%edi$/;"	l
a07	init.asm	/^ a07:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
a07	ln.asm	/^ a07:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
a08	kill.asm	/^ a08:	8b 50 08             	mov    0x8(%rax),%edx$/;"	l
a08	sh.asm	/^     a08:	48 b8 b2 12 00 00 00 	movabs $0x12b2,%rax$/;"	l
a08	zombie.asm	/^ a08:	48 b8 f3 03 00 00 00 	movabs $0x3f3,%rax$/;"	l
a09	cat.asm	/^ a09:	00 00 00 $/;"	l
a09	echo.asm	/^ a09:	01 c2                	add    %eax,%edx$/;"	l
a09	ls.asm	/^     a09:	00 00 00 $/;"	l
a09	mkdir.asm	/^ a09:	eb 0e                	jmp    a19 <free+0xcf>$/;"	l
a09	rm.asm	/^ a09:	eb 0e                	jmp    a19 <free+0xcf>$/;"	l
a09	stressfs.asm	/^ a09:	ff d0                	callq  *%rax$/;"	l
a0a	grep.asm	/^ a0a:	89 85 3c ff ff ff    	mov    %eax,-0xc4(%rbp)$/;"	l
a0b	echo.asm	/^ a0b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
a0b	init.asm	/^ a0b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
a0b	kill.asm	/^ a0b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
a0b	ln.asm	/^ a0b:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
a0b	mkdir.asm	/^ a0b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
a0b	rm.asm	/^ a0b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
a0b	stressfs.asm	/^ a0b:	c7 85 40 ff ff ff 00 	movl   $0x0,-0xc0(%rbp)$/;"	l
a0b	usertests.asm	/^     a0b:	48 ba c7 61 00 00 00 	movabs $0x61c7,%rdx$/;"	l
a0c	cat.asm	/^ a0c:	83 85 44 ff ff ff 01 	addl   $0x1,-0xbc(%rbp)$/;"	l
a0c	ls.asm	/^     a0c:	e9 e6 02 00 00       	jmpq   cf7 <printf+0x384>$/;"	l
a0c	wc.asm	/^ a0c:	89 d2                	mov    %edx,%edx$/;"	l
a0d	divide.asm	/^ a0d:	00 00 00 $/;"	l
a0e	ln.asm	/^ a0e:	89 c0                	mov    %eax,%eax$/;"	l
a0e	wc.asm	/^ a0e:	48 01 d0             	add    %rdx,%rax$/;"	l
a0f	echo.asm	/^ a0f:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
a0f	init.asm	/^ a0f:	48 83 e8 10          	sub    $0x10,%rax$/;"	l
a0f	kill.asm	/^ a0f:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
a0f	mkdir.asm	/^ a0f:	48 8b 10             	mov    (%rax),%rdx$/;"	l
a0f	rm.asm	/^ a0f:	48 8b 10             	mov    (%rax),%rdx$/;"	l
a0f	sh.asm	/^     a0f:	00 00 00 $/;"	l
a0f	zombie.asm	/^ a0f:	00 00 00 $/;"	l
a1	cat.asm	/^  a1:	48 ba 8f 06 00 00 00 	movabs $0x68f,%rdx$/;"	l
a1	ls.asm	/^      a1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
a1	stressfs.asm	/^  a1:	bf 01 00 00 00       	mov    $0x1,%edi$/;"	l
a10	divide.asm	/^ a10:	ff d0                	callq  *%rax$/;"	l
a10	grep.asm	/^ a10:	83 bd 40 ff ff ff 00 	cmpl   $0x0,-0xc0(%rbp)$/;"	l
a10	ln.asm	/^ a10:	48 c1 e0 04          	shl    $0x4,%rax$/;"	l
a11	ls.asm	/^     a11:	8b 85 44 ff ff ff    	mov    -0xbc(%rbp),%eax$/;"	l
a11	wc.asm	/^ a11:	8b 95 20 ff ff ff    	mov    -0xe0(%rbp),%edx$/;"	l
a12	divide.asm	/^ a12:	c7 85 40 ff ff ff 00 	movl   $0x0,-0xc0(%rbp)$/;"	l
a12	echo.asm	/^ a12:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
a12	kill.asm	/^ a12:	01 c2                	add    %eax,%edx$/;"	l
a12	mkdir.asm	/^ a12:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
a12	rm.asm	/^ a12:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
a12	sh.asm	/^     a12:	ff d0                	callq  *%rax$/;"	l
a12	stressfs.asm	/^ a12:	00 00 00 $/;"	l
a12	usertests.asm	/^     a12:	00 00 00 $/;"	l
a12	zombie.asm	/^ a12:	ff d0                	callq  *%rax$/;"	l
a13	cat.asm	/^ a13:	8b 85 44 ff ff ff    	mov    -0xbc(%rbp),%eax$/;"	l
a13	init.asm	/^ a13:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
a14	kill.asm	/^ a14:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
a14	ln.asm	/^ a14:	48 89 c2             	mov    %rax,%rdx$/;"	l
a14	sh.asm	/^     a14:	89 c0                	mov    %eax,%eax$/;"	l
a14	zombie.asm	/^ a14:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
a15	stressfs.asm	/^ a15:	83 85 44 ff ff ff 01 	addl   $0x1,-0xbc(%rbp)$/;"	l
a15	usertests.asm	/^     a15:	ff d2                	callq  *%rdx$/;"	l
a16	echo.asm	/^ a16:	48 8b 10             	mov    (%rax),%rdx$/;"	l
a16	mkdir.asm	/^ a16:	48 89 10             	mov    %rdx,(%rax)$/;"	l
a16	rm.asm	/^ a16:	48 89 10             	mov    %rdx,(%rax)$/;"	l
a16	sh.asm	/^     a16:	48 01 d8             	add    %rbx,%rax$/;"	l
a17	grep.asm	/^ a17:	75 3c                	jne    a55 <printf+0x107>$/;"	l
a17	init.asm	/^ a17:	48 b8 d0 0f 00 00 00 	movabs $0xfd0,%rax$/;"	l
a17	ln.asm	/^ a17:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
a17	ls.asm	/^     a17:	48 63 d0             	movslq %eax,%rdx$/;"	l
a17	usertests.asm	/^     a17:	48 b8 02 60 00 00 00 	movabs $0x6002,%rax$/;"	l
a17	wc.asm	/^ a17:	83 c2 08             	add    $0x8,%edx$/;"	l
a18	kill.asm	/^ a18:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
a18	zombie.asm	/^ a18:	48 83 7d f8 ff       	cmpq   $0xffffffffffffffff,-0x8(%rbp)$/;"	l
a19	cat.asm	/^ a19:	48 63 d0             	movslq %eax,%rdx$/;"	l
a19	divide.asm	/^ a19:	00 00 00 $/;"	l
a19	echo.asm	/^ a19:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
a19	grep.asm	/^ a19:	83 bd 3c ff ff ff 25 	cmpl   $0x25,-0xc4(%rbp)$/;"	l
a19	mkdir.asm	/^ a19:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
a19	rm.asm	/^ a19:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
a19	sh.asm	/^     a19:	48 89 45 e8          	mov    %rax,-0x18(%rbp)$/;"	l
a1a	ls.asm	/^     a1a:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax$/;"	l
a1a	wc.asm	/^ a1a:	89 95 20 ff ff ff    	mov    %edx,-0xe0(%rbp)$/;"	l
a1b	kill.asm	/^ a1b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
a1b	ln.asm	/^ a1b:	48 01 d0             	add    %rdx,%rax$/;"	l
a1c	cat.asm	/^ a1c:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax$/;"	l
a1c	divide.asm	/^ a1c:	83 85 44 ff ff ff 01 	addl   $0x1,-0xbc(%rbp)$/;"	l
a1c	stressfs.asm	/^ a1c:	8b 85 44 ff ff ff    	mov    -0xbc(%rbp),%eax$/;"	l
a1d	echo.asm	/^ a1d:	48 89 10             	mov    %rdx,(%rax)$/;"	l
a1d	mkdir.asm	/^ a1d:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
a1d	rm.asm	/^ a1d:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
a1d	sh.asm	/^     a1d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx$/;"	l
a1d	zombie.asm	/^ a1d:	75 07                	jne    a26 <morecore+0x41>$/;"	l
a1e	init.asm	/^ a1e:	00 00 00 $/;"	l
a1e	ln.asm	/^ a1e:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax$/;"	l
a1e	usertests.asm	/^     a1e:	00 00 00 $/;"	l
a1f	kill.asm	/^ a1f:	48 8b 10             	mov    (%rax),%rdx$/;"	l
a1f	zombie.asm	/^ a1f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
a2	init.asm	/^  a2:	ff d2                	callq  *%rdx$/;"	l
a2	kill.asm	/^  a2:	89 75 f4             	mov    %esi,-0xc(%rbp)$/;"	l
a2	mkdir.asm	/^  a2:	48 b9 a5 05 00 00 00 	movabs $0x5a5,%rcx$/;"	l
a2	rm.asm	/^  a2:	48 b9 a5 05 00 00 00 	movabs $0x5a5,%rcx$/;"	l
a2	usertests.asm	/^      a2:	48 be 9f 68 00 00 00 	movabs $0x689f,%rsi$/;"	l
a2	zombie.asm	/^  a2:	75 dc                	jne    80 <strcpy+0x19>$/;"	l
a20	echo.asm	/^ a20:	eb 0b                	jmp    a2d <free+0x11e>$/;"	l
a20	grep.asm	/^ a20:	75 0f                	jne    a31 <printf+0xe3>$/;"	l
a20	mkdir.asm	/^ a20:	89 c0                	mov    %eax,%eax$/;"	l
a20	rm.asm	/^ a20:	89 c0                	mov    %eax,%eax$/;"	l
a20	wc.asm	/^ a20:	eb 12                	jmp    a34 <printf+0x2f4>$/;"	l
a21	init.asm	/^ a21:	48 8b 00             	mov    (%rax),%rax$/;"	l
a21	ls.asm	/^     a21:	48 01 d0             	add    %rdx,%rax$/;"	l
a21	sh.asm	/^     a21:	48 8d 45 d8          	lea    -0x28(%rbp),%rax$/;"	l
a21	usertests.asm	/^     a21:	ff d0                	callq  *%rax$/;"	l
a22	echo.asm	/^ a22:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
a22	grep.asm	/^ a22:	c7 85 40 ff ff ff 25 	movl   $0x25,-0xc0(%rbp)$/;"	l
a22	kill.asm	/^ a22:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
a22	ln.asm	/^ a22:	75 27                	jne    a4b <free+0x113>$/;"	l
a22	mkdir.asm	/^ a22:	48 c1 e0 04          	shl    $0x4,%rax$/;"	l
a22	rm.asm	/^ a22:	48 c1 e0 04          	shl    $0x4,%rax$/;"	l
a22	stressfs.asm	/^ a22:	48 63 d0             	movslq %eax,%rdx$/;"	l
a22	wc.asm	/^ a22:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax$/;"	l
a23	cat.asm	/^ a23:	48 01 d0             	add    %rdx,%rax$/;"	l
a23	divide.asm	/^ a23:	8b 85 44 ff ff ff    	mov    -0xbc(%rbp),%eax$/;"	l
a23	usertests.asm	/^     a23:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)$/;"	l
a24	init.asm	/^ a24:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
a24	ln.asm	/^ a24:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
a24	ls.asm	/^     a24:	0f b6 00             	movzbl (%rax),%eax$/;"	l
a24	zombie.asm	/^ a24:	eb 36                	jmp    a5c <morecore+0x77>$/;"	l
a25	sh.asm	/^     a25:	48 89 d6             	mov    %rdx,%rsi$/;"	l
a25	stressfs.asm	/^ a25:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax$/;"	l
a26	cat.asm	/^ a26:	0f b6 00             	movzbl (%rax),%eax$/;"	l
a26	echo.asm	/^ a26:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
a26	kill.asm	/^ a26:	48 89 10             	mov    %rdx,(%rax)$/;"	l
a26	mkdir.asm	/^ a26:	48 89 c2             	mov    %rax,%rdx$/;"	l
a26	rm.asm	/^ a26:	48 89 c2             	mov    %rax,%rdx$/;"	l
a26	zombie.asm	/^ a26:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
a27	ls.asm	/^     a27:	0f be c0             	movsbl %al,%eax$/;"	l
a28	init.asm	/^ a28:	eb 2f                	jmp    a59 <free+0x5a>$/;"	l
a28	ln.asm	/^ a28:	8b 50 08             	mov    0x8(%rax),%edx$/;"	l
a28	sh.asm	/^     a28:	48 89 c7             	mov    %rax,%rdi$/;"	l
a29	cat.asm	/^ a29:	84 c0                	test   %al,%al$/;"	l
a29	divide.asm	/^ a29:	48 63 d0             	movslq %eax,%rdx$/;"	l
a29	grep.asm	/^ a29:	00 00 00 $/;"	l
a29	kill.asm	/^ a29:	eb 0b                	jmp    a36 <free+0x11e>$/;"	l
a29	mkdir.asm	/^ a29:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
a29	rm.asm	/^ a29:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
a29	wc.asm	/^ a29:	48 8d 50 08          	lea    0x8(%rax),%rdx$/;"	l
a2a	echo.asm	/^ a2a:	48 89 10             	mov    %rdx,(%rax)$/;"	l
a2a	init.asm	/^ a2a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
a2a	ls.asm	/^     a2a:	25 ff 00 00 00       	and    $0xff,%eax$/;"	l
a2a	usertests.asm	/^     a2a:	eb 72                	jmp    a9e <writetest1+0x105>$/;"	l
a2a	zombie.asm	/^ a2a:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
a2b	cat.asm	/^ a2b:	0f 85 fc fc ff ff    	jne    72d <printf+0x9e>$/;"	l
a2b	kill.asm	/^ a2b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
a2b	ln.asm	/^ a2b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
a2b	sh.asm	/^     a2b:	48 b8 c4 0a 00 00 00 	movabs $0xac4,%rax$/;"	l
a2c	divide.asm	/^ a2c:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax$/;"	l
a2c	grep.asm	/^ a2c:	e9 9a 02 00 00       	jmpq   ccb <printf+0x37d>$/;"	l
a2c	stressfs.asm	/^ a2c:	48 01 d0             	add    %rdx,%rax$/;"	l
a2c	usertests.asm	/^     a2c:	48 b8 40 88 00 00 00 	movabs $0x8840,%rax$/;"	l
a2d	echo.asm	/^ a2d:	48 b8 80 0e 00 00 00 	movabs $0xe80,%rax$/;"	l
a2d	mkdir.asm	/^ a2d:	48 01 d0             	add    %rdx,%rax$/;"	l
a2d	rm.asm	/^ a2d:	48 01 d0             	add    %rdx,%rax$/;"	l
a2d	wc.asm	/^ a2d:	48 89 95 28 ff ff ff 	mov    %rdx,-0xd8(%rbp)$/;"	l
a2e	init.asm	/^ a2e:	48 8b 00             	mov    (%rax),%rax$/;"	l
a2e	zombie.asm	/^ a2e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
a2f	kill.asm	/^ a2f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
a2f	ln.asm	/^ a2f:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
a2f	ls.asm	/^     a2f:	89 85 3c ff ff ff    	mov    %eax,-0xc4(%rbp)$/;"	l
a2f	stressfs.asm	/^ a2f:	0f b6 00             	movzbl (%rax),%eax$/;"	l
a3	divide.asm	/^  a3:	8b 55 f0             	mov    -0x10(%rbp),%edx$/;"	l
a3	echo.asm	/^  a3:	8b 55 f0             	mov    -0x10(%rbp),%edx$/;"	l
a3	forktest.asm	/^  a3:	bf 01 00 00 00       	mov    $0x1,%edi$/;"	l
a3	grep.asm	/^  a3:	48 83 c0 01          	add    $0x1,%rax$/;"	l
a3	sh.asm	/^      a3:	48 8b 40 08          	mov    0x8(%rax),%rax$/;"	l
a3	wc.asm	/^  a3:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)$/;"	l
a30	mkdir.asm	/^ a30:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax$/;"	l
a30	rm.asm	/^ a30:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax$/;"	l
a31	cat.asm	/^ a31:	90                   	nop$/;"	l
a31	grep.asm	/^ a31:	8b 85 3c ff ff ff    	mov    -0xc4(%rbp),%eax$/;"	l
a31	init.asm	/^ a31:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax$/;"	l
a32	cat.asm	/^ a32:	c9                   	leaveq $/;"	l
a32	ln.asm	/^ a32:	01 c2                	add    %eax,%edx$/;"	l
a32	sh.asm	/^     a32:	00 00 00 $/;"	l
a32	stressfs.asm	/^ a32:	84 c0                	test   %al,%al$/;"	l
a32	zombie.asm	/^ a32:	8b 55 ec             	mov    -0x14(%rbp),%edx$/;"	l
a33	cat.asm	/^ a33:	c3                   	retq   $/;"	l
a33	divide.asm	/^ a33:	48 01 d0             	add    %rdx,%rax$/;"	l
a33	kill.asm	/^ a33:	48 89 10             	mov    %rdx,(%rax)$/;"	l
a33	usertests.asm	/^     a33:	00 00 00 $/;"	l
a34	cat.asm	/^ a34:	55                   	push   %rbp$/;"	l
a34	echo.asm	/^ a34:	00 00 00 $/;"	l
a34	ln.asm	/^ a34:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
a34	mkdir.asm	/^ a34:	75 27                	jne    a5d <free+0x113>$/;"	l
a34	rm.asm	/^ a34:	75 27                	jne    a5d <free+0x113>$/;"	l
a34	stressfs.asm	/^ a34:	0f 85 fc fc ff ff    	jne    736 <printf+0x9e>$/;"	l
a34	wc.asm	/^ a34:	8b 00                	mov    (%rax),%eax$/;"	l
a35	cat.asm	/^ a35:	48 89 e5             	mov    %rsp,%rbp$/;"	l
a35	init.asm	/^ a35:	77 17                	ja     a4e <free+0x4f>$/;"	l
a35	ls.asm	/^     a35:	83 bd 40 ff ff ff 00 	cmpl   $0x0,-0xc0(%rbp)$/;"	l
a35	sh.asm	/^     a35:	ff d0                	callq  *%rax$/;"	l
a35	zombie.asm	/^ a35:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
a36	divide.asm	/^ a36:	0f b6 00             	movzbl (%rax),%eax$/;"	l
a36	kill.asm	/^ a36:	48 b8 90 0e 00 00 00 	movabs $0xe90,%rax$/;"	l
a36	mkdir.asm	/^ a36:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
a36	rm.asm	/^ a36:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
a36	usertests.asm	/^     a36:	8b 55 fc             	mov    -0x4(%rbp),%edx$/;"	l
a36	wc.asm	/^ a36:	0f be d0             	movsbl %al,%edx$/;"	l
a37	echo.asm	/^ a37:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx$/;"	l
a37	grep.asm	/^ a37:	0f be d0             	movsbl %al,%edx$/;"	l
a37	init.asm	/^ a37:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
a37	sh.asm	/^     a37:	48 89 45 e0          	mov    %rax,-0x20(%rbp)$/;"	l
a38	cat.asm	/^ a38:	48 83 ec 18          	sub    $0x18,%rsp$/;"	l
a38	ln.asm	/^ a38:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
a38	zombie.asm	/^ a38:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
a39	divide.asm	/^ a39:	84 c0                	test   %al,%al$/;"	l
a39	usertests.asm	/^     a39:	89 10                	mov    %edx,(%rax)$/;"	l
a39	wc.asm	/^ a39:	8b 85 1c ff ff ff    	mov    -0xe4(%rbp),%eax$/;"	l
a3a	grep.asm	/^ a3a:	8b 85 1c ff ff ff    	mov    -0xe4(%rbp),%eax$/;"	l
a3a	mkdir.asm	/^ a3a:	8b 50 08             	mov    0x8(%rax),%edx$/;"	l
a3a	rm.asm	/^ a3a:	8b 50 08             	mov    0x8(%rax),%edx$/;"	l
a3a	stressfs.asm	/^ a3a:	90                   	nop$/;"	l
a3b	divide.asm	/^ a3b:	0f 85 fc fc ff ff    	jne    73d <printf+0x9e>$/;"	l
a3b	echo.asm	/^ a3b:	48 89 10             	mov    %rdx,(%rax)$/;"	l
a3b	init.asm	/^ a3b:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax$/;"	l
a3b	ln.asm	/^ a3b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
a3b	sh.asm	/^     a3b:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx$/;"	l
a3b	stressfs.asm	/^ a3b:	c9                   	leaveq $/;"	l
a3b	usertests.asm	/^     a3b:	8b 45 f4             	mov    -0xc(%rbp),%eax$/;"	l
a3c	cat.asm	/^ a3c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
a3c	ls.asm	/^     a3c:	75 3c                	jne    a7a <printf+0x107>$/;"	l
a3c	stressfs.asm	/^ a3c:	c3                   	retq   $/;"	l
a3c	zombie.asm	/^ a3c:	48 83 c0 10          	add    $0x10,%rax$/;"	l
a3d	kill.asm	/^ a3d:	00 00 00 $/;"	l
a3d	mkdir.asm	/^ a3d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
a3d	rm.asm	/^ a3d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
a3d	stressfs.asm	/^ a3d:	55                   	push   %rbp$/;"	l
a3e	echo.asm	/^ a3e:	90                   	nop$/;"	l
a3e	ls.asm	/^     a3e:	83 bd 3c ff ff ff 25 	cmpl   $0x25,-0xc4(%rbp)$/;"	l
a3e	stressfs.asm	/^ a3e:	48 89 e5             	mov    %rsp,%rbp$/;"	l
a3e	usertests.asm	/^     a3e:	ba 00 02 00 00       	mov    $0x200,%edx$/;"	l
a3f	echo.asm	/^ a3f:	c9                   	leaveq $/;"	l
a3f	init.asm	/^ a3f:	77 2f                	ja     a70 <free+0x71>$/;"	l
a3f	ln.asm	/^ a3f:	48 8b 10             	mov    (%rax),%rdx$/;"	l
a3f	sh.asm	/^     a3f:	48 8d 45 d8          	lea    -0x28(%rbp),%rax$/;"	l
a3f	wc.asm	/^ a3f:	89 d6                	mov    %edx,%esi$/;"	l
a4	init.asm	/^  a4:	48 b8 8b 04 00 00 00 	movabs $0x48b,%rax$/;"	l
a4	ln.asm	/^  a4:	00 00 00 $/;"	l
a4	zombie.asm	/^  a4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
a40	cat.asm	/^ a40:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
a40	echo.asm	/^ a40:	c3                   	retq   $/;"	l
a40	grep.asm	/^ a40:	89 d6                	mov    %edx,%esi$/;"	l
a40	kill.asm	/^ a40:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx$/;"	l
a40	zombie.asm	/^ a40:	48 89 c7             	mov    %rax,%rdi$/;"	l
a41	divide.asm	/^ a41:	90                   	nop$/;"	l
a41	echo.asm	/^ a41:	55                   	push   %rbp$/;"	l
a41	init.asm	/^ a41:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
a41	mkdir.asm	/^ a41:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
a41	rm.asm	/^ a41:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
a41	stressfs.asm	/^ a41:	48 83 ec 18          	sub    $0x18,%rsp$/;"	l
a41	wc.asm	/^ a41:	89 c7                	mov    %eax,%edi$/;"	l
a42	divide.asm	/^ a42:	c9                   	leaveq $/;"	l
a42	echo.asm	/^ a42:	48 89 e5             	mov    %rsp,%rbp$/;"	l
a42	grep.asm	/^ a42:	89 c7                	mov    %eax,%edi$/;"	l
a42	ln.asm	/^ a42:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
a43	divide.asm	/^ a43:	c3                   	retq   $/;"	l
a43	sh.asm	/^     a43:	48 ba e2 1d 00 00 00 	movabs $0x1de2,%rdx$/;"	l
a43	usertests.asm	/^     a43:	48 be 40 88 00 00 00 	movabs $0x8840,%rsi$/;"	l
a43	wc.asm	/^ a43:	48 b8 43 06 00 00 00 	movabs $0x643,%rax$/;"	l
a43	zombie.asm	/^ a43:	48 b8 b3 08 00 00 00 	movabs $0x8b3,%rax$/;"	l
a44	cat.asm	/^ a44:	48 83 e8 10          	sub    $0x10,%rax$/;"	l
a44	divide.asm	/^ a44:	55                   	push   %rbp$/;"	l
a44	grep.asm	/^ a44:	48 b8 51 08 00 00 00 	movabs $0x851,%rax$/;"	l
a44	kill.asm	/^ a44:	48 89 10             	mov    %rdx,(%rax)$/;"	l
a44	mkdir.asm	/^ a44:	01 c2                	add    %eax,%edx$/;"	l
a44	rm.asm	/^ a44:	01 c2                	add    %eax,%edx$/;"	l
a45	divide.asm	/^ a45:	48 89 e5             	mov    %rsp,%rbp$/;"	l
a45	echo.asm	/^ a45:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
a45	init.asm	/^ a45:	48 8b 00             	mov    (%rax),%rax$/;"	l
a45	ls.asm	/^     a45:	75 0f                	jne    a56 <printf+0xe3>$/;"	l
a45	stressfs.asm	/^ a45:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
a46	ln.asm	/^ a46:	48 89 10             	mov    %rdx,(%rax)$/;"	l
a46	mkdir.asm	/^ a46:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
a46	rm.asm	/^ a46:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
a47	kill.asm	/^ a47:	90                   	nop$/;"	l
a47	ls.asm	/^     a47:	c7 85 40 ff ff ff 25 	movl   $0x25,-0xc0(%rbp)$/;"	l
a48	cat.asm	/^ a48:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
a48	divide.asm	/^ a48:	48 83 ec 18          	sub    $0x18,%rsp$/;"	l
a48	init.asm	/^ a48:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax$/;"	l
a48	kill.asm	/^ a48:	c9                   	leaveq $/;"	l
a49	echo.asm	/^ a49:	89 7d ec             	mov    %edi,-0x14(%rbp)$/;"	l
a49	kill.asm	/^ a49:	c3                   	retq   $/;"	l
a49	ln.asm	/^ a49:	eb 0b                	jmp    a56 <free+0x11e>$/;"	l
a49	stressfs.asm	/^ a49:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
a4a	kill.asm	/^ a4a:	55                   	push   %rbp$/;"	l
a4a	mkdir.asm	/^ a4a:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
a4a	rm.asm	/^ a4a:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
a4a	sh.asm	/^     a4a:	00 00 00 $/;"	l
a4a	usertests.asm	/^     a4a:	00 00 00 $/;"	l
a4a	wc.asm	/^ a4a:	00 00 00 $/;"	l
a4a	zombie.asm	/^ a4a:	00 00 00 $/;"	l
a4b	grep.asm	/^ a4b:	00 00 00 $/;"	l
a4b	kill.asm	/^ a4b:	48 89 e5             	mov    %rsp,%rbp$/;"	l
a4b	ln.asm	/^ a4b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
a4c	cat.asm	/^ a4c:	48 b8 f0 11 00 00 00 	movabs $0x11f0,%rax$/;"	l
a4c	divide.asm	/^ a4c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
a4c	echo.asm	/^ a4c:	81 7d ec ff 0f 00 00 	cmpl   $0xfff,-0x14(%rbp)$/;"	l
a4c	init.asm	/^ a4c:	77 22                	ja     a70 <free+0x71>$/;"	l
a4d	mkdir.asm	/^ a4d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
a4d	rm.asm	/^ a4d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
a4d	sh.asm	/^     a4d:	48 89 ce             	mov    %rcx,%rsi$/;"	l
a4d	stressfs.asm	/^ a4d:	48 83 e8 10          	sub    $0x10,%rax$/;"	l
a4d	usertests.asm	/^     a4d:	89 c7                	mov    %eax,%edi$/;"	l
a4d	wc.asm	/^ a4d:	ff d0                	callq  *%rax$/;"	l
a4d	zombie.asm	/^ a4d:	ff d0                	callq  *%rax$/;"	l
a4e	grep.asm	/^ a4e:	ff d0                	callq  *%rax$/;"	l
a4e	init.asm	/^ a4e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
a4e	kill.asm	/^ a4e:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
a4e	ls.asm	/^     a4e:	00 00 00 $/;"	l
a4f	ln.asm	/^ a4f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
a4f	usertests.asm	/^     a4f:	48 b8 2a 60 00 00 00 	movabs $0x602a,%rax$/;"	l
a4f	wc.asm	/^ a4f:	eb 62                	jmp    ab3 <printf+0x373>$/;"	l
a4f	zombie.asm	/^ a4f:	48 b8 20 0e 00 00 00 	movabs $0xe20,%rax$/;"	l
a5	kill.asm	/^  a5:	89 55 f0             	mov    %edx,-0x10(%rbp)$/;"	l
a5	ls.asm	/^      a5:	48 89 c7             	mov    %rax,%rdi$/;"	l
a50	divide.asm	/^ a50:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
a50	grep.asm	/^ a50:	e9 76 02 00 00       	jmpq   ccb <printf+0x37d>$/;"	l
a50	sh.asm	/^     a50:	48 89 c7             	mov    %rax,%rdi$/;"	l
a51	ls.asm	/^     a51:	e9 9a 02 00 00       	jmpq   cf0 <printf+0x37d>$/;"	l
a51	mkdir.asm	/^ a51:	48 8b 10             	mov    (%rax),%rdx$/;"	l
a51	rm.asm	/^ a51:	48 8b 10             	mov    (%rax),%rdx$/;"	l
a51	stressfs.asm	/^ a51:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
a51	wc.asm	/^ a51:	83 bd 3c ff ff ff 25 	cmpl   $0x25,-0xc4(%rbp)$/;"	l
a52	init.asm	/^ a52:	48 8b 00             	mov    (%rax),%rax$/;"	l
a52	kill.asm	/^ a52:	89 7d ec             	mov    %edi,-0x14(%rbp)$/;"	l
a53	cat.asm	/^ a53:	00 00 00 $/;"	l
a53	echo.asm	/^ a53:	77 07                	ja     a5c <morecore+0x1b>$/;"	l
a53	ln.asm	/^ a53:	48 89 10             	mov    %rdx,(%rax)$/;"	l
a53	sh.asm	/^     a53:	48 b8 51 09 00 00 00 	movabs $0x951,%rax$/;"	l
a54	divide.asm	/^ a54:	48 83 e8 10          	sub    $0x10,%rax$/;"	l
a54	mkdir.asm	/^ a54:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
a54	rm.asm	/^ a54:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
a55	echo.asm	/^ a55:	c7 45 ec 00 10 00 00 	movl   $0x1000,-0x14(%rbp)$/;"	l
a55	grep.asm	/^ a55:	83 bd 40 ff ff ff 25 	cmpl   $0x25,-0xc0(%rbp)$/;"	l
a55	init.asm	/^ a55:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
a55	kill.asm	/^ a55:	81 7d ec ff 0f 00 00 	cmpl   $0xfff,-0x14(%rbp)$/;"	l
a55	stressfs.asm	/^ a55:	48 b8 d0 0f 00 00 00 	movabs $0xfd0,%rax$/;"	l
a56	cat.asm	/^ a56:	48 8b 00             	mov    (%rax),%rax$/;"	l
a56	ln.asm	/^ a56:	48 b8 d0 0e 00 00 00 	movabs $0xed0,%rax$/;"	l
a56	ls.asm	/^     a56:	8b 85 3c ff ff ff    	mov    -0xc4(%rbp),%eax$/;"	l
a56	usertests.asm	/^     a56:	00 00 00 $/;"	l
a56	zombie.asm	/^ a56:	00 00 00 $/;"	l
a58	divide.asm	/^ a58:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
a58	mkdir.asm	/^ a58:	48 89 10             	mov    %rdx,(%rax)$/;"	l
a58	rm.asm	/^ a58:	48 89 10             	mov    %rdx,(%rax)$/;"	l
a58	wc.asm	/^ a58:	75 21                	jne    a7b <printf+0x33b>$/;"	l
a59	cat.asm	/^ a59:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
a59	init.asm	/^ a59:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
a59	usertests.asm	/^     a59:	ff d0                	callq  *%rax$/;"	l
a59	zombie.asm	/^ a59:	48 8b 00             	mov    (%rax),%rax$/;"	l
a5a	sh.asm	/^     a5a:	00 00 00 $/;"	l
a5a	wc.asm	/^ a5a:	8b 85 3c ff ff ff    	mov    -0xc4(%rbp),%eax$/;"	l
a5b	mkdir.asm	/^ a5b:	eb 0b                	jmp    a68 <free+0x11e>$/;"	l
a5b	rm.asm	/^ a5b:	eb 0b                	jmp    a68 <free+0x11e>$/;"	l
a5b	usertests.asm	/^     a5b:	3d 00 02 00 00       	cmp    $0x200,%eax$/;"	l
a5c	divide.asm	/^ a5c:	48 b8 e0 0f 00 00 00 	movabs $0xfe0,%rax$/;"	l
a5c	echo.asm	/^ a5c:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
a5c	grep.asm	/^ a5c:	0f 85 69 02 00 00    	jne    ccb <printf+0x37d>$/;"	l
a5c	kill.asm	/^ a5c:	77 07                	ja     a65 <morecore+0x1b>$/;"	l
a5c	ls.asm	/^     a5c:	0f be d0             	movsbl %al,%edx$/;"	l
a5c	stressfs.asm	/^ a5c:	00 00 00 $/;"	l
a5c	zombie.asm	/^ a5c:	c9                   	leaveq $/;"	l
a5d	cat.asm	/^ a5d:	eb 2f                	jmp    a8e <free+0x5a>$/;"	l
a5d	init.asm	/^ a5d:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax$/;"	l
a5d	ln.asm	/^ a5d:	00 00 00 $/;"	l
a5d	mkdir.asm	/^ a5d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
a5d	rm.asm	/^ a5d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
a5d	sh.asm	/^     a5d:	ff d0                	callq  *%rax$/;"	l
a5d	zombie.asm	/^ a5d:	c3                   	retq   $/;"	l
a5e	kill.asm	/^ a5e:	c7 45 ec 00 10 00 00 	movl   $0x1000,-0x14(%rbp)$/;"	l
a5e	zombie.asm	/^ a5e:	55                   	push   %rbp$/;"	l
a5f	cat.asm	/^ a5f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
a5f	echo.asm	/^ a5f:	c1 e0 04             	shl    $0x4,%eax$/;"	l
a5f	ls.asm	/^     a5f:	8b 85 1c ff ff ff    	mov    -0xe4(%rbp),%eax$/;"	l
a5f	sh.asm	/^     a5f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
a5f	stressfs.asm	/^ a5f:	48 8b 00             	mov    (%rax),%rax$/;"	l
a5f	zombie.asm	/^ a5f:	48 89 e5             	mov    %rsp,%rbp$/;"	l
a6	divide.asm	/^  a6:	89 d0                	mov    %edx,%eax$/;"	l
a6	echo.asm	/^  a6:	8b 45 f4             	mov    -0xc(%rbp),%eax$/;"	l
a6	stressfs.asm	/^  a6:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
a60	ln.asm	/^ a60:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx$/;"	l
a60	usertests.asm	/^     a60:	74 38                	je     a9a <writetest1+0x101>$/;"	l
a60	wc.asm	/^ a60:	0f be d0             	movsbl %al,%edx$/;"	l
a61	init.asm	/^ a61:	76 c7                	jbe    a2a <free+0x2b>$/;"	l
a61	mkdir.asm	/^ a61:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
a61	rm.asm	/^ a61:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
a62	echo.asm	/^ a62:	89 c7                	mov    %eax,%edi$/;"	l
a62	grep.asm	/^ a62:	83 bd 3c ff ff ff 64 	cmpl   $0x64,-0xc4(%rbp)$/;"	l
a62	stressfs.asm	/^ a62:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
a62	usertests.asm	/^     a62:	48 b8 08 88 00 00 00 	movabs $0x8808,%rax$/;"	l
a62	zombie.asm	/^ a62:	48 83 ec 30          	sub    $0x30,%rsp$/;"	l
a63	cat.asm	/^ a63:	48 8b 00             	mov    (%rax),%rax$/;"	l
a63	divide.asm	/^ a63:	00 00 00 $/;"	l
a63	init.asm	/^ a63:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
a63	sh.asm	/^     a63:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax$/;"	l
a63	wc.asm	/^ a63:	8b 85 1c ff ff ff    	mov    -0xe4(%rbp),%eax$/;"	l
a64	echo.asm	/^ a64:	48 b8 4f 04 00 00 00 	movabs $0x44f,%rax$/;"	l
a64	ln.asm	/^ a64:	48 89 10             	mov    %rdx,(%rax)$/;"	l
a65	kill.asm	/^ a65:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
a65	ls.asm	/^     a65:	89 d6                	mov    %edx,%esi$/;"	l
a65	mkdir.asm	/^ a65:	48 89 10             	mov    %rdx,(%rax)$/;"	l
a65	rm.asm	/^ a65:	48 89 10             	mov    %rdx,(%rax)$/;"	l
a66	cat.asm	/^ a66:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax$/;"	l
a66	divide.asm	/^ a66:	48 8b 00             	mov    (%rax),%rax$/;"	l
a66	stressfs.asm	/^ a66:	eb 2f                	jmp    a97 <free+0x5a>$/;"	l
a66	zombie.asm	/^ a66:	89 7d dc             	mov    %edi,-0x24(%rbp)$/;"	l
a67	init.asm	/^ a67:	48 8b 00             	mov    (%rax),%rax$/;"	l
a67	ln.asm	/^ a67:	90                   	nop$/;"	l
a67	ls.asm	/^     a67:	89 c7                	mov    %eax,%edi$/;"	l
a67	sh.asm	/^     a67:	74 3d                	je     aa6 <parsecmd+0xb6>$/;"	l
a68	kill.asm	/^ a68:	c1 e0 04             	shl    $0x4,%eax$/;"	l
a68	ln.asm	/^ a68:	c9                   	leaveq $/;"	l
a68	mkdir.asm	/^ a68:	48 b8 f0 0e 00 00 00 	movabs $0xef0,%rax$/;"	l
a68	rm.asm	/^ a68:	48 b8 e0 0e 00 00 00 	movabs $0xee0,%rax$/;"	l
a68	stressfs.asm	/^ a68:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
a69	divide.asm	/^ a69:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
a69	grep.asm	/^ a69:	75 65                	jne    ad0 <printf+0x182>$/;"	l
a69	ln.asm	/^ a69:	c3                   	retq   $/;"	l
a69	ls.asm	/^     a69:	48 b8 76 08 00 00 00 	movabs $0x876,%rax$/;"	l
a69	sh.asm	/^     a69:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
a69	usertests.asm	/^     a69:	00 00 00 $/;"	l
a69	wc.asm	/^ a69:	89 d6                	mov    %edx,%esi$/;"	l
a69	zombie.asm	/^ a69:	8b 45 dc             	mov    -0x24(%rbp),%eax$/;"	l
a6a	cat.asm	/^ a6a:	77 17                	ja     a83 <free+0x4f>$/;"	l
a6a	init.asm	/^ a6a:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax$/;"	l
a6a	ln.asm	/^ a6a:	55                   	push   %rbp$/;"	l
a6b	echo.asm	/^ a6b:	00 00 00 $/;"	l
a6b	grep.asm	/^ a6b:	8b 85 20 ff ff ff    	mov    -0xe0(%rbp),%eax$/;"	l
a6b	kill.asm	/^ a6b:	89 c7                	mov    %eax,%edi$/;"	l
a6b	ln.asm	/^ a6b:	48 89 e5             	mov    %rsp,%rbp$/;"	l
a6b	wc.asm	/^ a6b:	89 c7                	mov    %eax,%edi$/;"	l
a6c	cat.asm	/^ a6c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
a6c	stressfs.asm	/^ a6c:	48 8b 00             	mov    (%rax),%rax$/;"	l
a6c	usertests.asm	/^     a6c:	8b 00                	mov    (%rax),%eax$/;"	l
a6c	zombie.asm	/^ a6c:	48 83 c0 0f          	add    $0xf,%rax$/;"	l
a6d	divide.asm	/^ a6d:	eb 2f                	jmp    a9e <free+0x5a>$/;"	l
a6d	kill.asm	/^ a6d:	48 b8 58 04 00 00 00 	movabs $0x458,%rax$/;"	l
a6d	sh.asm	/^     a6d:	48 89 c2             	mov    %rax,%rdx$/;"	l
a6d	wc.asm	/^ a6d:	48 b8 43 06 00 00 00 	movabs $0x643,%rax$/;"	l
a6e	echo.asm	/^ a6e:	ff d0                	callq  *%rax$/;"	l
a6e	init.asm	/^ a6e:	76 ba                	jbe    a2a <free+0x2b>$/;"	l
a6e	ln.asm	/^ a6e:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
a6e	usertests.asm	/^     a6e:	8b 55 fc             	mov    -0x4(%rbp),%edx$/;"	l
a6f	divide.asm	/^ a6f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
a6f	mkdir.asm	/^ a6f:	00 00 00 $/;"	l
a6f	rm.asm	/^ a6f:	00 00 00 $/;"	l
a6f	stressfs.asm	/^ a6f:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax$/;"	l
a7	grep.asm	/^  a7:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
a7	ln.asm	/^  a7:	41 ff d0             	callq  *%r8$/;"	l
a7	sh.asm	/^      a7:	48 89 c2             	mov    %rax,%rdx$/;"	l
a7	wc.asm	/^  a7:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
a70	cat.asm	/^ a70:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax$/;"	l
a70	echo.asm	/^ a70:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
a70	init.asm	/^ a70:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
a70	ls.asm	/^     a70:	00 00 00 $/;"	l
a70	sh.asm	/^     a70:	48 be e3 1d 00 00 00 	movabs $0x1de3,%rsi$/;"	l
a70	zombie.asm	/^ a70:	48 c1 e8 04          	shr    $0x4,%rax$/;"	l
a71	grep.asm	/^ a71:	83 f8 30             	cmp    $0x30,%eax$/;"	l
a71	usertests.asm	/^     a71:	48 be 6a 6b 00 00 00 	movabs $0x6b6a,%rsi$/;"	l
a72	ln.asm	/^ a72:	89 7d ec             	mov    %edi,-0x14(%rbp)$/;"	l
a72	mkdir.asm	/^ a72:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx$/;"	l
a72	rm.asm	/^ a72:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx$/;"	l
a73	divide.asm	/^ a73:	48 8b 00             	mov    (%rax),%rax$/;"	l
a73	ls.asm	/^     a73:	ff d0                	callq  *%rax$/;"	l
a73	stressfs.asm	/^ a73:	77 17                	ja     a8c <free+0x4f>$/;"	l
a74	cat.asm	/^ a74:	77 2f                	ja     aa5 <free+0x71>$/;"	l
a74	echo.asm	/^ a74:	48 83 7d f8 ff       	cmpq   $0xffffffffffffffff,-0x8(%rbp)$/;"	l
a74	grep.asm	/^ a74:	73 23                	jae    a99 <printf+0x14b>$/;"	l
a74	init.asm	/^ a74:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
a74	kill.asm	/^ a74:	00 00 00 $/;"	l
a74	wc.asm	/^ a74:	00 00 00 $/;"	l
a74	zombie.asm	/^ a74:	83 c0 01             	add    $0x1,%eax$/;"	l
a75	ln.asm	/^ a75:	81 7d ec ff 0f 00 00 	cmpl   $0xfff,-0x14(%rbp)$/;"	l
a75	ls.asm	/^     a75:	e9 76 02 00 00       	jmpq   cf0 <printf+0x37d>$/;"	l
a75	stressfs.asm	/^ a75:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
a76	cat.asm	/^ a76:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
a76	divide.asm	/^ a76:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax$/;"	l
a76	grep.asm	/^ a76:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax$/;"	l
a76	mkdir.asm	/^ a76:	48 89 10             	mov    %rdx,(%rax)$/;"	l
a76	rm.asm	/^ a76:	48 89 10             	mov    %rdx,(%rax)$/;"	l
a77	init.asm	/^ a77:	89 c0                	mov    %eax,%eax$/;"	l
a77	kill.asm	/^ a77:	ff d0                	callq  *%rax$/;"	l
a77	sh.asm	/^     a77:	00 00 00 $/;"	l
a77	wc.asm	/^ a77:	ff d0                	callq  *%rax$/;"	l
a77	zombie.asm	/^ a77:	89 45 ec             	mov    %eax,-0x14(%rbp)$/;"	l
a78	usertests.asm	/^     a78:	00 00 00 $/;"	l
a79	echo.asm	/^ a79:	75 07                	jne    a82 <morecore+0x41>$/;"	l
a79	init.asm	/^ a79:	48 c1 e0 04          	shl    $0x4,%rax$/;"	l
a79	kill.asm	/^ a79:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
a79	mkdir.asm	/^ a79:	90                   	nop$/;"	l
a79	rm.asm	/^ a79:	90                   	nop$/;"	l
a79	stressfs.asm	/^ a79:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax$/;"	l
a79	wc.asm	/^ a79:	eb 38                	jmp    ab3 <printf+0x373>$/;"	l
a7a	cat.asm	/^ a7a:	48 8b 00             	mov    (%rax),%rax$/;"	l
a7a	divide.asm	/^ a7a:	77 17                	ja     a93 <free+0x4f>$/;"	l
a7a	ls.asm	/^     a7a:	83 bd 40 ff ff ff 25 	cmpl   $0x25,-0xc0(%rbp)$/;"	l
a7a	mkdir.asm	/^ a7a:	c9                   	leaveq $/;"	l
a7a	rm.asm	/^ a7a:	c9                   	leaveq $/;"	l
a7a	sh.asm	/^     a7a:	bf 02 00 00 00       	mov    $0x2,%edi$/;"	l
a7a	zombie.asm	/^ a7a:	48 b8 20 0e 00 00 00 	movabs $0xe20,%rax$/;"	l
a7b	echo.asm	/^ a7b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
a7b	mkdir.asm	/^ a7b:	c3                   	retq   $/;"	l
a7b	rm.asm	/^ a7b:	c3                   	retq   $/;"	l
a7b	usertests.asm	/^     a7b:	89 c7                	mov    %eax,%edi$/;"	l
a7b	wc.asm	/^ a7b:	8b 85 1c ff ff ff    	mov    -0xe4(%rbp),%eax$/;"	l
a7c	divide.asm	/^ a7c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
a7c	ln.asm	/^ a7c:	77 07                	ja     a85 <morecore+0x1b>$/;"	l
a7c	mkdir.asm	/^ a7c:	55                   	push   %rbp$/;"	l
a7c	rm.asm	/^ a7c:	55                   	push   %rbp$/;"	l
a7d	cat.asm	/^ a7d:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax$/;"	l
a7d	grep.asm	/^ a7d:	8b 95 20 ff ff ff    	mov    -0xe0(%rbp),%edx$/;"	l
a7d	init.asm	/^ a7d:	48 89 c2             	mov    %rax,%rdx$/;"	l
a7d	kill.asm	/^ a7d:	48 83 7d f8 ff       	cmpq   $0xffffffffffffffff,-0x8(%rbp)$/;"	l
a7d	mkdir.asm	/^ a7d:	48 89 e5             	mov    %rsp,%rbp$/;"	l
a7d	rm.asm	/^ a7d:	48 89 e5             	mov    %rsp,%rbp$/;"	l
a7d	stressfs.asm	/^ a7d:	77 2f                	ja     aae <free+0x71>$/;"	l
a7d	usertests.asm	/^     a7d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
a7e	ln.asm	/^ a7e:	c7 45 ec 00 10 00 00 	movl   $0x1000,-0x14(%rbp)$/;"	l
a7f	sh.asm	/^     a7f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
a7f	stressfs.asm	/^ a7f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
a8	cat.asm	/^  a8:	00 00 00 $/;"	l
a8	divide.asm	/^  a8:	c1 e0 02             	shl    $0x2,%eax$/;"	l
a8	forktest.asm	/^  a8:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
a8	kill.asm	/^  a8:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx$/;"	l
a8	ls.asm	/^      a8:	48 b8 62 05 00 00 00 	movabs $0x562,%rax$/;"	l
a8	zombie.asm	/^  a8:	c9                   	leaveq $/;"	l
a80	divide.asm	/^ a80:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax$/;"	l
a80	echo.asm	/^ a80:	eb 36                	jmp    ab8 <morecore+0x77>$/;"	l
a80	init.asm	/^ a80:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
a80	mkdir.asm	/^ a80:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
a80	rm.asm	/^ a80:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
a81	cat.asm	/^ a81:	77 22                	ja     aa5 <free+0x71>$/;"	l
a81	ls.asm	/^     a81:	0f 85 69 02 00 00    	jne    cf0 <printf+0x37d>$/;"	l
a81	wc.asm	/^ a81:	be 25 00 00 00       	mov    $0x25,%esi$/;"	l
a81	zombie.asm	/^ a81:	00 00 00 $/;"	l
a82	echo.asm	/^ a82:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
a82	kill.asm	/^ a82:	75 07                	jne    a8b <morecore+0x41>$/;"	l
a82	usertests.asm	/^     a82:	48 b9 c7 61 00 00 00 	movabs $0x61c7,%rcx$/;"	l
a83	cat.asm	/^ a83:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
a83	grep.asm	/^ a83:	89 d2                	mov    %edx,%edx$/;"	l
a83	stressfs.asm	/^ a83:	48 8b 00             	mov    (%rax),%rax$/;"	l
a84	divide.asm	/^ a84:	77 2f                	ja     ab5 <free+0x71>$/;"	l
a84	init.asm	/^ a84:	48 01 c2             	add    %rax,%rdx$/;"	l
a84	kill.asm	/^ a84:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
a84	mkdir.asm	/^ a84:	89 7d ec             	mov    %edi,-0x14(%rbp)$/;"	l
a84	rm.asm	/^ a84:	89 7d ec             	mov    %edi,-0x14(%rbp)$/;"	l
a84	sh.asm	/^     a84:	48 b9 c3 16 00 00 00 	movabs $0x16c3,%rcx$/;"	l
a84	zombie.asm	/^ a84:	48 8b 00             	mov    (%rax),%rax$/;"	l
a85	grep.asm	/^ a85:	48 01 d0             	add    %rdx,%rax$/;"	l
a85	ln.asm	/^ a85:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
a86	divide.asm	/^ a86:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
a86	echo.asm	/^ a86:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
a86	stressfs.asm	/^ a86:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax$/;"	l
a86	wc.asm	/^ a86:	89 c7                	mov    %eax,%edi$/;"	l
a87	cat.asm	/^ a87:	48 8b 00             	mov    (%rax),%rax$/;"	l
a87	init.asm	/^ a87:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
a87	ls.asm	/^     a87:	83 bd 3c ff ff ff 64 	cmpl   $0x64,-0xc4(%rbp)$/;"	l
a87	mkdir.asm	/^ a87:	81 7d ec ff 0f 00 00 	cmpl   $0xfff,-0x14(%rbp)$/;"	l
a87	rm.asm	/^ a87:	81 7d ec ff 0f 00 00 	cmpl   $0xfff,-0x14(%rbp)$/;"	l
a87	zombie.asm	/^ a87:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
a88	grep.asm	/^ a88:	8b 95 20 ff ff ff    	mov    -0xe0(%rbp),%edx$/;"	l
a88	ln.asm	/^ a88:	c1 e0 04             	shl    $0x4,%eax$/;"	l
a88	wc.asm	/^ a88:	48 b8 43 06 00 00 00 	movabs $0x643,%rax$/;"	l
a89	kill.asm	/^ a89:	eb 36                	jmp    ac1 <morecore+0x77>$/;"	l
a89	usertests.asm	/^     a89:	00 00 00 $/;"	l
a8a	cat.asm	/^ a8a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
a8a	divide.asm	/^ a8a:	48 8b 00             	mov    (%rax),%rax$/;"	l
a8a	echo.asm	/^ a8a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
a8a	stressfs.asm	/^ a8a:	77 22                	ja     aae <free+0x71>$/;"	l
a8b	init.asm	/^ a8b:	48 8b 00             	mov    (%rax),%rax$/;"	l
a8b	kill.asm	/^ a8b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
a8b	ln.asm	/^ a8b:	89 c7                	mov    %eax,%edi$/;"	l
a8b	sh.asm	/^     a8b:	00 00 00 $/;"	l
a8b	zombie.asm	/^ a8b:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)$/;"	l
a8c	stressfs.asm	/^ a8c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
a8c	usertests.asm	/^     a8c:	ff d1                	callq  *%rcx$/;"	l
a8d	divide.asm	/^ a8d:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax$/;"	l
a8d	ln.asm	/^ a8d:	48 b8 78 04 00 00 00 	movabs $0x478,%rax$/;"	l
a8e	cat.asm	/^ a8e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
a8e	echo.asm	/^ a8e:	8b 55 ec             	mov    -0x14(%rbp),%edx$/;"	l
a8e	grep.asm	/^ a8e:	83 c2 08             	add    $0x8,%edx$/;"	l
a8e	init.asm	/^ a8e:	48 39 c2             	cmp    %rax,%rdx$/;"	l
a8e	ls.asm	/^     a8e:	75 65                	jne    af5 <printf+0x182>$/;"	l
a8e	mkdir.asm	/^ a8e:	77 07                	ja     a97 <morecore+0x1b>$/;"	l
a8e	rm.asm	/^ a8e:	77 07                	ja     a97 <morecore+0x1b>$/;"	l
a8e	sh.asm	/^     a8e:	ff d1                	callq  *%rcx$/;"	l
a8e	usertests.asm	/^     a8e:	48 b8 02 60 00 00 00 	movabs $0x6002,%rax$/;"	l
a8f	kill.asm	/^ a8f:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
a8f	wc.asm	/^ a8f:	00 00 00 $/;"	l
a9	echo.asm	/^  a9:	48 89 ce             	mov    %rcx,%rsi$/;"	l
a9	mkdir.asm	/^  a9:	00 00 00 $/;"	l
a9	rm.asm	/^  a9:	00 00 00 $/;"	l
a9	usertests.asm	/^      a9:	00 00 00 $/;"	l
a9	zombie.asm	/^  a9:	c3                   	retq   $/;"	l
a90	ls.asm	/^     a90:	8b 85 20 ff ff ff    	mov    -0xe0(%rbp),%eax$/;"	l
a90	mkdir.asm	/^ a90:	c7 45 ec 00 10 00 00 	movl   $0x1000,-0x14(%rbp)$/;"	l
a90	rm.asm	/^ a90:	c7 45 ec 00 10 00 00 	movl   $0x1000,-0x14(%rbp)$/;"	l
a90	sh.asm	/^     a90:	48 bf f2 1d 00 00 00 	movabs $0x1df2,%rdi$/;"	l
a90	stressfs.asm	/^ a90:	48 8b 00             	mov    (%rax),%rax$/;"	l
a90	zombie.asm	/^ a90:	75 4a                	jne    adc <malloc+0x7e>$/;"	l
a91	divide.asm	/^ a91:	77 22                	ja     ab5 <free+0x71>$/;"	l
a91	echo.asm	/^ a91:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
a91	grep.asm	/^ a91:	89 95 20 ff ff ff    	mov    %edx,-0xe0(%rbp)$/;"	l
a91	init.asm	/^ a91:	75 2d                	jne    ac0 <free+0xc1>$/;"	l
a92	cat.asm	/^ a92:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax$/;"	l
a92	wc.asm	/^ a92:	ff d0                	callq  *%rax$/;"	l
a92	zombie.asm	/^ a92:	48 b8 10 0e 00 00 00 	movabs $0xe10,%rax$/;"	l
a93	divide.asm	/^ a93:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
a93	init.asm	/^ a93:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
a93	kill.asm	/^ a93:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
a93	stressfs.asm	/^ a93:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
a94	echo.asm	/^ a94:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
a94	ln.asm	/^ a94:	00 00 00 $/;"	l
a94	wc.asm	/^ a94:	8b 85 3c ff ff ff    	mov    -0xc4(%rbp),%eax$/;"	l
a95	usertests.asm	/^     a95:	00 00 00 $/;"	l
a96	cat.asm	/^ a96:	76 c7                	jbe    a5f <free+0x2b>$/;"	l
a96	ls.asm	/^     a96:	83 f8 30             	cmp    $0x30,%eax$/;"	l
a97	divide.asm	/^ a97:	48 8b 00             	mov    (%rax),%rax$/;"	l
a97	grep.asm	/^ a97:	eb 12                	jmp    aab <printf+0x15d>$/;"	l
a97	init.asm	/^ a97:	8b 50 08             	mov    0x8(%rax),%edx$/;"	l
a97	kill.asm	/^ a97:	8b 55 ec             	mov    -0x14(%rbp),%edx$/;"	l
a97	ln.asm	/^ a97:	ff d0                	callq  *%rax$/;"	l
a97	mkdir.asm	/^ a97:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
a97	rm.asm	/^ a97:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
a97	sh.asm	/^     a97:	00 00 00 $/;"	l
a97	stressfs.asm	/^ a97:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
a98	cat.asm	/^ a98:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
a98	echo.asm	/^ a98:	48 83 c0 10          	add    $0x10,%rax$/;"	l
a98	usertests.asm	/^     a98:	ff d0                	callq  *%rax$/;"	l
a99	grep.asm	/^ a99:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax$/;"	l
a99	ln.asm	/^ a99:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
a99	ls.asm	/^     a99:	73 23                	jae    abe <printf+0x14b>$/;"	l
a99	zombie.asm	/^ a99:	00 00 00 $/;"	l
a9a	divide.asm	/^ a9a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
a9a	init.asm	/^ a9a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
a9a	kill.asm	/^ a9a:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
a9a	mkdir.asm	/^ a9a:	c1 e0 04             	shl    $0x4,%eax$/;"	l
a9a	rm.asm	/^ a9a:	c1 e0 04             	shl    $0x4,%eax$/;"	l
a9a	sh.asm	/^     a9a:	48 b8 26 05 00 00 00 	movabs $0x526,%rax$/;"	l
a9a	usertests.asm	/^     a9a:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)$/;"	l
a9a	wc.asm	/^ a9a:	0f be d0             	movsbl %al,%edx$/;"	l
a9b	ls.asm	/^     a9b:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax$/;"	l
a9b	stressfs.asm	/^ a9b:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax$/;"	l
a9c	cat.asm	/^ a9c:	48 8b 00             	mov    (%rax),%rax$/;"	l
a9c	echo.asm	/^ a9c:	48 89 c7             	mov    %rax,%rdi$/;"	l
a9c	zombie.asm	/^ a9c:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
a9d	kill.asm	/^ a9d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
a9d	ln.asm	/^ a9d:	48 83 7d f8 ff       	cmpq   $0xffffffffffffffff,-0x8(%rbp)$/;"	l
a9d	mkdir.asm	/^ a9d:	89 c7                	mov    %eax,%edi$/;"	l
a9d	rm.asm	/^ a9d:	89 c7                	mov    %eax,%edi$/;"	l
a9d	wc.asm	/^ a9d:	8b 85 1c ff ff ff    	mov    -0xe4(%rbp),%eax$/;"	l
a9e	divide.asm	/^ a9e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
a9e	init.asm	/^ a9e:	48 8b 00             	mov    (%rax),%rax$/;"	l
a9e	usertests.asm	/^     a9e:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
a9f	cat.asm	/^ a9f:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax$/;"	l
a9f	echo.asm	/^ a9f:	48 b8 0f 09 00 00 00 	movabs $0x90f,%rax$/;"	l
a9f	mkdir.asm	/^ a9f:	48 b8 8a 04 00 00 00 	movabs $0x48a,%rax$/;"	l
a9f	rm.asm	/^ a9f:	48 b8 8a 04 00 00 00 	movabs $0x48a,%rax$/;"	l
a9f	stressfs.asm	/^ a9f:	76 c7                	jbe    a68 <free+0x2b>$/;"	l
aa	ln.asm	/^  aa:	48 b8 ce 03 00 00 00 	movabs $0x3ce,%rax$/;"	l
aa	sh.asm	/^      aa:	48 be 67 1d 00 00 00 	movabs $0x1d67,%rsi$/;"	l
aa	wc.asm	/^  aa:	3b 45 e8             	cmp    -0x18(%rbp),%eax$/;"	l
aa	zombie.asm	/^  aa:	55                   	push   %rbp$/;"	l
aa0	grep.asm	/^ aa0:	48 8d 50 08          	lea    0x8(%rax),%rdx$/;"	l
aa0	zombie.asm	/^ aa0:	48 b8 20 0e 00 00 00 	movabs $0xe20,%rax$/;"	l
aa1	init.asm	/^ aa1:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
aa1	kill.asm	/^ aa1:	48 83 c0 10          	add    $0x10,%rax$/;"	l
aa1	sh.asm	/^     aa1:	00 00 00 $/;"	l
aa1	stressfs.asm	/^ aa1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
aa1	usertests.asm	/^     aa1:	3d 8b 00 00 00       	cmp    $0x8b,%eax$/;"	l
aa2	divide.asm	/^ aa2:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax$/;"	l
aa2	ln.asm	/^ aa2:	75 07                	jne    aab <morecore+0x41>$/;"	l
aa2	ls.asm	/^     aa2:	8b 95 20 ff ff ff    	mov    -0xe0(%rbp),%edx$/;"	l
aa3	cat.asm	/^ aa3:	76 ba                	jbe    a5f <free+0x2b>$/;"	l
aa3	wc.asm	/^ aa3:	89 d6                	mov    %edx,%esi$/;"	l
aa4	grep.asm	/^ aa4:	48 89 95 28 ff ff ff 	mov    %rdx,-0xd8(%rbp)$/;"	l
aa4	init.asm	/^ aa4:	01 c2                	add    %eax,%edx$/;"	l
aa4	ln.asm	/^ aa4:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
aa4	sh.asm	/^     aa4:	ff d0                	callq  *%rax$/;"	l
aa5	cat.asm	/^ aa5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
aa5	kill.asm	/^ aa5:	48 89 c7             	mov    %rax,%rdi$/;"	l
aa5	stressfs.asm	/^ aa5:	48 8b 00             	mov    (%rax),%rax$/;"	l
aa5	wc.asm	/^ aa5:	89 c7                	mov    %eax,%edi$/;"	l
aa6	divide.asm	/^ aa6:	76 c7                	jbe    a6f <free+0x2b>$/;"	l
aa6	echo.asm	/^ aa6:	00 00 00 $/;"	l
aa6	init.asm	/^ aa6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
aa6	mkdir.asm	/^ aa6:	00 00 00 $/;"	l
aa6	rm.asm	/^ aa6:	00 00 00 $/;"	l
aa6	sh.asm	/^     aa6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
aa6	usertests.asm	/^     aa6:	76 84                	jbe    a2c <writetest1+0x93>$/;"	l
aa7	wc.asm	/^ aa7:	48 b8 43 06 00 00 00 	movabs $0x643,%rax$/;"	l
aa7	zombie.asm	/^ aa7:	00 00 00 $/;"	l
aa8	divide.asm	/^ aa8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
aa8	kill.asm	/^ aa8:	48 b8 18 09 00 00 00 	movabs $0x918,%rax$/;"	l
aa8	ls.asm	/^     aa8:	89 d2                	mov    %edx,%edx$/;"	l
aa8	stressfs.asm	/^ aa8:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax$/;"	l
aa8	usertests.asm	/^     aa8:	8b 45 f4             	mov    -0xc(%rbp),%eax$/;"	l
aa9	cat.asm	/^ aa9:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
aa9	echo.asm	/^ aa9:	ff d0                	callq  *%rax$/;"	l
aa9	ln.asm	/^ aa9:	eb 36                	jmp    ae1 <morecore+0x77>$/;"	l
aa9	mkdir.asm	/^ aa9:	ff d0                	callq  *%rax$/;"	l
aa9	rm.asm	/^ aa9:	ff d0                	callq  *%rax$/;"	l
aaa	init.asm	/^ aaa:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
aaa	ls.asm	/^     aaa:	48 01 d0             	add    %rdx,%rax$/;"	l
aaa	sh.asm	/^     aaa:	48 89 c7             	mov    %rax,%rdi$/;"	l
aaa	zombie.asm	/^ aaa:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
aab	echo.asm	/^ aab:	48 b8 80 0e 00 00 00 	movabs $0xe80,%rax$/;"	l
aab	grep.asm	/^ aab:	8b 30                	mov    (%rax),%esi$/;"	l
aab	ln.asm	/^ aab:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
aab	mkdir.asm	/^ aab:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
aab	rm.asm	/^ aab:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
aab	usertests.asm	/^     aab:	89 c7                	mov    %eax,%edi$/;"	l
aac	cat.asm	/^ aac:	89 c0                	mov    %eax,%eax$/;"	l
aac	divide.asm	/^ aac:	48 8b 00             	mov    (%rax),%rax$/;"	l
aac	stressfs.asm	/^ aac:	76 ba                	jbe    a68 <free+0x2b>$/;"	l
aad	grep.asm	/^ aad:	8b 85 1c ff ff ff    	mov    -0xe4(%rbp),%eax$/;"	l
aad	init.asm	/^ aad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
aad	ls.asm	/^     aad:	8b 95 20 ff ff ff    	mov    -0xe0(%rbp),%edx$/;"	l
aad	sh.asm	/^     aad:	48 b8 95 10 00 00 00 	movabs $0x1095,%rax$/;"	l
aad	usertests.asm	/^     aad:	48 b8 34 60 00 00 00 	movabs $0x6034,%rax$/;"	l
aae	cat.asm	/^ aae:	48 c1 e0 04          	shl    $0x4,%rax$/;"	l
aae	stressfs.asm	/^ aae:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
aae	wc.asm	/^ aae:	00 00 00 $/;"	l
aae	zombie.asm	/^ aae:	48 89 10             	mov    %rdx,(%rax)$/;"	l
aaf	divide.asm	/^ aaf:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax$/;"	l
aaf	kill.asm	/^ aaf:	00 00 00 $/;"	l
aaf	ln.asm	/^ aaf:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
aaf	mkdir.asm	/^ aaf:	48 83 7d f8 ff       	cmpq   $0xffffffffffffffff,-0x8(%rbp)$/;"	l
aaf	rm.asm	/^ aaf:	48 83 7d f8 ff       	cmpq   $0xffffffffffffffff,-0x8(%rbp)$/;"	l
ab	cat.asm	/^  ab:	ff d2                	callq  *%rdx$/;"	l
ab	divide.asm	/^  ab:	01 d0                	add    %edx,%eax$/;"	l
ab	grep.asm	/^  ab:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ab	init.asm	/^  ab:	00 00 00 $/;"	l
ab	stressfs.asm	/^  ab:	48 b9 98 06 00 00 00 	movabs $0x698,%rcx$/;"	l
ab	zombie.asm	/^  ab:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ab1	init.asm	/^ ab1:	48 8b 00             	mov    (%rax),%rax$/;"	l
ab1	wc.asm	/^ ab1:	ff d0                	callq  *%rax$/;"	l
ab1	zombie.asm	/^ ab1:	48 b8 20 0e 00 00 00 	movabs $0xe20,%rax$/;"	l
ab2	cat.asm	/^ ab2:	48 89 c2             	mov    %rax,%rdx$/;"	l
ab2	echo.asm	/^ ab2:	00 00 00 $/;"	l
ab2	kill.asm	/^ ab2:	ff d0                	callq  *%rax$/;"	l
ab2	stressfs.asm	/^ ab2:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
ab3	divide.asm	/^ ab3:	76 ba                	jbe    a6f <free+0x2b>$/;"	l
ab3	grep.asm	/^ ab3:	b9 01 00 00 00       	mov    $0x1,%ecx$/;"	l
ab3	ln.asm	/^ ab3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ab3	ls.asm	/^     ab3:	83 c2 08             	add    $0x8,%edx$/;"	l
ab3	wc.asm	/^ ab3:	c7 85 40 ff ff ff 00 	movl   $0x0,-0xc0(%rbp)$/;"	l
ab4	init.asm	/^ ab4:	48 8b 10             	mov    (%rax),%rdx$/;"	l
ab4	kill.asm	/^ ab4:	48 b8 90 0e 00 00 00 	movabs $0xe90,%rax$/;"	l
ab4	mkdir.asm	/^ ab4:	75 07                	jne    abd <morecore+0x41>$/;"	l
ab4	rm.asm	/^ ab4:	75 07                	jne    abd <morecore+0x41>$/;"	l
ab4	sh.asm	/^     ab4:	00 00 00 $/;"	l
ab4	usertests.asm	/^     ab4:	00 00 00 $/;"	l
ab5	cat.asm	/^ ab5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ab5	divide.asm	/^ ab5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ab5	echo.asm	/^ ab5:	48 8b 00             	mov    (%rax),%rax$/;"	l
ab5	stressfs.asm	/^ ab5:	89 c0                	mov    %eax,%eax$/;"	l
ab6	ls.asm	/^     ab6:	89 95 20 ff ff ff    	mov    %edx,-0xe0(%rbp)$/;"	l
ab6	mkdir.asm	/^ ab6:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ab6	rm.asm	/^ ab6:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ab7	init.asm	/^ ab7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ab7	ln.asm	/^ ab7:	8b 55 ec             	mov    -0x14(%rbp),%edx$/;"	l
ab7	sh.asm	/^     ab7:	ff d0                	callq  *%rax$/;"	l
ab7	stressfs.asm	/^ ab7:	48 c1 e0 04          	shl    $0x4,%rax$/;"	l
ab7	usertests.asm	/^     ab7:	ff d0                	callq  *%rax$/;"	l
ab8	echo.asm	/^ ab8:	c9                   	leaveq $/;"	l
ab8	grep.asm	/^ ab8:	ba 0a 00 00 00       	mov    $0xa,%edx$/;"	l
ab8	zombie.asm	/^ ab8:	00 00 00 $/;"	l
ab9	cat.asm	/^ ab9:	48 01 c2             	add    %rax,%rdx$/;"	l
ab9	divide.asm	/^ ab9:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
ab9	echo.asm	/^ ab9:	c3                   	retq   $/;"	l
ab9	sh.asm	/^     ab9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ab9	usertests.asm	/^     ab9:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
aba	echo.asm	/^ aba:	55                   	push   %rbp$/;"	l
aba	ln.asm	/^ aba:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
aba	wc.asm	/^ aba:	00 00 00 $/;"	l
abb	echo.asm	/^ abb:	48 89 e5             	mov    %rsp,%rbp$/;"	l
abb	init.asm	/^ abb:	48 89 10             	mov    %rdx,(%rax)$/;"	l
abb	kill.asm	/^ abb:	00 00 00 $/;"	l
abb	mkdir.asm	/^ abb:	eb 36                	jmp    af3 <morecore+0x77>$/;"	l
abb	rm.asm	/^ abb:	eb 36                	jmp    af3 <morecore+0x77>$/;"	l
abb	stressfs.asm	/^ abb:	48 89 c2             	mov    %rax,%rdx$/;"	l
abb	zombie.asm	/^ abb:	48 8b 10             	mov    (%rax),%rdx$/;"	l
abc	cat.asm	/^ abc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
abc	divide.asm	/^ abc:	89 c0                	mov    %eax,%eax$/;"	l
abc	ls.asm	/^     abc:	eb 12                	jmp    ad0 <printf+0x15d>$/;"	l
abd	grep.asm	/^ abd:	89 c7                	mov    %eax,%edi$/;"	l
abd	ln.asm	/^ abd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
abd	mkdir.asm	/^ abd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
abd	rm.asm	/^ abd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
abd	sh.asm	/^     abd:	48 83 c4 28          	add    $0x28,%rsp$/;"	l
abd	wc.asm	/^ abd:	83 85 44 ff ff ff 01 	addl   $0x1,-0xbc(%rbp)$/;"	l
abe	divide.asm	/^ abe:	48 c1 e0 04          	shl    $0x4,%rax$/;"	l
abe	echo.asm	/^ abe:	48 83 ec 30          	sub    $0x30,%rsp$/;"	l
abe	init.asm	/^ abe:	eb 0e                	jmp    ace <free+0xcf>$/;"	l
abe	kill.asm	/^ abe:	48 8b 00             	mov    (%rax),%rax$/;"	l
abe	ls.asm	/^     abe:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax$/;"	l
abe	stressfs.asm	/^ abe:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
abe	usertests.asm	/^     abe:	48 bf 4c 6b 00 00 00 	movabs $0x6b4c,%rdi$/;"	l
abe	zombie.asm	/^ abe:	48 b8 10 0e 00 00 00 	movabs $0xe10,%rax$/;"	l
abf	grep.asm	/^ abf:	48 b8 81 08 00 00 00 	movabs $0x881,%rax$/;"	l
ac	echo.asm	/^  ac:	48 89 f7             	mov    %rsi,%rdi$/;"	l
ac	kill.asm	/^  ac:	8b 55 f0             	mov    -0x10(%rbp),%edx$/;"	l
ac	mkdir.asm	/^  ac:	ff d1                	callq  *%rcx$/;"	l
ac	rm.asm	/^  ac:	ff d1                	callq  *%rcx$/;"	l
ac	usertests.asm	/^      ac:	89 c7                	mov    %eax,%edi$/;"	l
ac0	cat.asm	/^ ac0:	48 8b 00             	mov    (%rax),%rax$/;"	l
ac0	init.asm	/^ ac0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ac1	kill.asm	/^ ac1:	c9                   	leaveq $/;"	l
ac1	ln.asm	/^ ac1:	48 83 c0 10          	add    $0x10,%rax$/;"	l
ac1	mkdir.asm	/^ ac1:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ac1	rm.asm	/^ ac1:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ac1	sh.asm	/^     ac1:	5b                   	pop    %rbx$/;"	l
ac2	divide.asm	/^ ac2:	48 89 c2             	mov    %rax,%rdx$/;"	l
ac2	echo.asm	/^ ac2:	89 7d dc             	mov    %edi,-0x24(%rbp)$/;"	l
ac2	kill.asm	/^ ac2:	c3                   	retq   $/;"	l
ac2	sh.asm	/^     ac2:	5d                   	pop    %rbp$/;"	l
ac2	stressfs.asm	/^ ac2:	48 01 c2             	add    %rax,%rdx$/;"	l
ac3	cat.asm	/^ ac3:	48 39 c2             	cmp    %rax,%rdx$/;"	l
ac3	kill.asm	/^ ac3:	55                   	push   %rbp$/;"	l
ac3	sh.asm	/^     ac3:	c3                   	retq   $/;"	l
ac4	init.asm	/^ ac4:	48 8b 10             	mov    (%rax),%rdx$/;"	l
ac4	kill.asm	/^ ac4:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ac4	sh.asm	/^     ac4:	55                   	push   %rbp$/;"	l
ac4	wc.asm	/^ ac4:	8b 85 44 ff ff ff    	mov    -0xbc(%rbp),%eax$/;"	l
ac5	divide.asm	/^ ac5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ac5	echo.asm	/^ ac5:	8b 45 dc             	mov    -0x24(%rbp),%eax$/;"	l
ac5	ln.asm	/^ ac5:	48 89 c7             	mov    %rax,%rdi$/;"	l
ac5	ls.asm	/^     ac5:	48 8d 50 08          	lea    0x8(%rax),%rdx$/;"	l
ac5	mkdir.asm	/^ ac5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ac5	rm.asm	/^ ac5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ac5	sh.asm	/^     ac5:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ac5	stressfs.asm	/^ ac5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ac5	usertests.asm	/^     ac5:	00 00 00 $/;"	l
ac5	zombie.asm	/^ ac5:	00 00 00 $/;"	l
ac6	cat.asm	/^ ac6:	75 2d                	jne    af5 <free+0xc1>$/;"	l
ac6	grep.asm	/^ ac6:	00 00 00 $/;"	l
ac7	init.asm	/^ ac7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ac7	kill.asm	/^ ac7:	48 83 ec 30          	sub    $0x30,%rsp$/;"	l
ac8	cat.asm	/^ ac8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ac8	echo.asm	/^ ac8:	48 83 c0 0f          	add    $0xf,%rax$/;"	l
ac8	ln.asm	/^ ac8:	48 b8 38 09 00 00 00 	movabs $0x938,%rax$/;"	l
ac8	sh.asm	/^     ac8:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ac8	usertests.asm	/^     ac8:	48 b8 52 60 00 00 00 	movabs $0x6052,%rax$/;"	l
ac8	zombie.asm	/^ ac8:	48 89 10             	mov    %rdx,(%rax)$/;"	l
ac9	divide.asm	/^ ac9:	48 01 c2             	add    %rax,%rdx$/;"	l
ac9	grep.asm	/^ ac9:	ff d0                	callq  *%rax$/;"	l
ac9	ls.asm	/^     ac9:	48 89 95 28 ff ff ff 	mov    %rdx,-0xd8(%rbp)$/;"	l
ac9	mkdir.asm	/^ ac9:	8b 55 ec             	mov    -0x14(%rbp),%edx$/;"	l
ac9	rm.asm	/^ ac9:	8b 55 ec             	mov    -0x14(%rbp),%edx$/;"	l
ac9	stressfs.asm	/^ ac9:	48 8b 00             	mov    (%rax),%rax$/;"	l
aca	wc.asm	/^ aca:	48 63 d0             	movslq %eax,%rdx$/;"	l
acb	grep.asm	/^ acb:	e9 f1 01 00 00       	jmpq   cc1 <printf+0x373>$/;"	l
acb	init.asm	/^ acb:	48 89 10             	mov    %rdx,(%rax)$/;"	l
acb	kill.asm	/^ acb:	89 7d dc             	mov    %edi,-0x24(%rbp)$/;"	l
acb	zombie.asm	/^ acb:	48 b8 10 0e 00 00 00 	movabs $0xe10,%rax$/;"	l
acc	cat.asm	/^ acc:	8b 50 08             	mov    0x8(%rax),%edx$/;"	l
acc	divide.asm	/^ acc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
acc	echo.asm	/^ acc:	48 c1 e8 04          	shr    $0x4,%rax$/;"	l
acc	mkdir.asm	/^ acc:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
acc	rm.asm	/^ acc:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
acc	sh.asm	/^     acc:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
acc	stressfs.asm	/^ acc:	48 39 c2             	cmp    %rax,%rdx$/;"	l
acd	wc.asm	/^ acd:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax$/;"	l
ace	init.asm	/^ ace:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ace	kill.asm	/^ ace:	8b 45 dc             	mov    -0x24(%rbp),%eax$/;"	l
acf	cat.asm	/^ acf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
acf	ln.asm	/^ acf:	00 00 00 $/;"	l
acf	mkdir.asm	/^ acf:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
acf	rm.asm	/^ acf:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
acf	stressfs.asm	/^ acf:	75 2d                	jne    afe <free+0xc1>$/;"	l
acf	usertests.asm	/^     acf:	00 00 00 $/;"	l
acquire	spinlock.c	/^acquire(struct spinlock *lk)$/;"	f
acquiresleep	sleeplock.c	/^acquiresleep(struct sleeplock *lk)$/;"	f
ad	cat.asm	/^  ad:	48 b8 ca 04 00 00 00 	movabs $0x4ca,%rax$/;"	l
ad	divide.asm	/^  ad:	01 c0                	add    %eax,%eax$/;"	l
ad	forktest.asm	/^  ad:	48 ba 00 00 00 00 00 	movabs $0x0,%rdx$/;"	l
ad	wc.asm	/^  ad:	7c 88                	jl     37 <wc+0x37>$/;"	l
ad0	divide.asm	/^ ad0:	48 8b 00             	mov    (%rax),%rax$/;"	l
ad0	echo.asm	/^ ad0:	83 c0 01             	add    $0x1,%eax$/;"	l
ad0	grep.asm	/^ ad0:	83 bd 3c ff ff ff 78 	cmpl   $0x78,-0xc4(%rbp)$/;"	l
ad0	ls.asm	/^     ad0:	8b 30                	mov    (%rax),%esi$/;"	l
ad0	sh.asm	/^     ad0:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)$/;"	l
ad1	kill.asm	/^ ad1:	48 83 c0 0f          	add    $0xf,%rax$/;"	l
ad1	stressfs.asm	/^ ad1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ad2	init.asm	/^ ad2:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
ad2	ln.asm	/^ ad2:	ff d0                	callq  *%rax$/;"	l
ad2	ls.asm	/^     ad2:	8b 85 1c ff ff ff    	mov    -0xe4(%rbp),%eax$/;"	l
ad2	usertests.asm	/^     ad2:	ff d0                	callq  *%rax$/;"	l
ad2	zombie.asm	/^ ad2:	00 00 00 $/;"	l
ad3	cat.asm	/^ ad3:	48 8b 00             	mov    (%rax),%rax$/;"	l
ad3	divide.asm	/^ ad3:	48 39 c2             	cmp    %rax,%rdx$/;"	l
ad3	echo.asm	/^ ad3:	89 45 ec             	mov    %eax,-0x14(%rbp)$/;"	l
ad3	mkdir.asm	/^ ad3:	48 83 c0 10          	add    $0x10,%rax$/;"	l
ad3	rm.asm	/^ ad3:	48 83 c0 10          	add    $0x10,%rax$/;"	l
ad4	ln.asm	/^ ad4:	48 b8 d0 0e 00 00 00 	movabs $0xed0,%rax$/;"	l
ad4	sh.asm	/^     ad4:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx$/;"	l
ad4	usertests.asm	/^     ad4:	89 45 f4             	mov    %eax,-0xc(%rbp)$/;"	l
ad4	wc.asm	/^ ad4:	48 01 d0             	add    %rdx,%rax$/;"	l
ad5	init.asm	/^ ad5:	89 c0                	mov    %eax,%eax$/;"	l
ad5	kill.asm	/^ ad5:	48 c1 e8 04          	shr    $0x4,%rax$/;"	l
ad5	stressfs.asm	/^ ad5:	8b 50 08             	mov    0x8(%rax),%edx$/;"	l
ad5	zombie.asm	/^ ad5:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%rax)$/;"	l
ad6	cat.asm	/^ ad6:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
ad6	divide.asm	/^ ad6:	75 2d                	jne    b05 <free+0xc1>$/;"	l
ad6	echo.asm	/^ ad6:	48 b8 80 0e 00 00 00 	movabs $0xe80,%rax$/;"	l
ad7	grep.asm	/^ ad7:	74 09                	je     ae2 <printf+0x194>$/;"	l
ad7	init.asm	/^ ad7:	48 c1 e0 04          	shl    $0x4,%rax$/;"	l
ad7	mkdir.asm	/^ ad7:	48 89 c7             	mov    %rax,%rdi$/;"	l
ad7	rm.asm	/^ ad7:	48 89 c7             	mov    %rax,%rdi$/;"	l
ad7	usertests.asm	/^     ad7:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)$/;"	l
ad7	wc.asm	/^ ad7:	0f b6 00             	movzbl (%rax),%eax$/;"	l
ad8	divide.asm	/^ ad8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ad8	ls.asm	/^     ad8:	b9 01 00 00 00       	mov    $0x1,%ecx$/;"	l
ad8	sh.asm	/^     ad8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ad8	stressfs.asm	/^ ad8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ad9	cat.asm	/^ ad9:	01 c2                	add    %eax,%edx$/;"	l
ad9	grep.asm	/^ ad9:	83 bd 3c ff ff ff 70 	cmpl   $0x70,-0xc4(%rbp)$/;"	l
ad9	kill.asm	/^ ad9:	83 c0 01             	add    $0x1,%eax$/;"	l
ada	mkdir.asm	/^ ada:	48 b8 4a 09 00 00 00 	movabs $0x94a,%rax$/;"	l
ada	rm.asm	/^ ada:	48 b8 4a 09 00 00 00 	movabs $0x94a,%rax$/;"	l
ada	wc.asm	/^ ada:	84 c0                	test   %al,%al$/;"	l
adb	cat.asm	/^ adb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
adb	init.asm	/^ adb:	48 89 c2             	mov    %rax,%rdx$/;"	l
adb	ln.asm	/^ adb:	00 00 00 $/;"	l
adb	usertests.asm	/^     adb:	79 35                	jns    b12 <writetest1+0x179>$/;"	l
adc	divide.asm	/^ adc:	8b 50 08             	mov    0x8(%rax),%edx$/;"	l
adc	kill.asm	/^ adc:	89 45 ec             	mov    %eax,-0x14(%rbp)$/;"	l
adc	sh.asm	/^     adc:	48 89 d6             	mov    %rdx,%rsi$/;"	l
adc	stressfs.asm	/^ adc:	48 8b 00             	mov    (%rax),%rax$/;"	l
adc	wc.asm	/^ adc:	0f 85 fc fc ff ff    	jne    7de <printf+0x9e>$/;"	l
adc	zombie.asm	/^ adc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
add	echo.asm	/^ add:	00 00 00 $/;"	l
add	ls.asm	/^     add:	ba 0a 00 00 00       	mov    $0xa,%edx$/;"	l
add	usertests.asm	/^     add:	48 b8 08 88 00 00 00 	movabs $0x8808,%rax$/;"	l
addr	kernel.asm	/^  addr = (uint64) tss;$/;"	d
addr	kernel.asm	/^  addr = P2V(a);$/;"	d
addr	kernel.asm	/^  addr = proc->sz;$/;"	d
addr_p	mp.h	/^  uint32 addr_p;                  \/\/ I\/O APIC address$/;"	m	struct:mpioapic
addr_t	types.h	/^typedef unsigned long addr_t;$/;"	t
addrs	file.h	/^  uint addrs[NDIRECT+1];$/;"	m	struct:inode
addrs	fs.h	/^  uint addrs[NDIRECT+1];   \/\/ Data block addresses$/;"	m	struct:dinode
ade	init.asm	/^ ade:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ade	ln.asm	/^ ade:	48 8b 00             	mov    (%rax),%rax$/;"	l
adf	cat.asm	/^ adf:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
adf	divide.asm	/^ adf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
adf	kill.asm	/^ adf:	48 b8 90 0e 00 00 00 	movabs $0xe90,%rax$/;"	l
adf	sh.asm	/^     adf:	48 89 c7             	mov    %rax,%rdi$/;"	l
adf	stressfs.asm	/^ adf:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
ae	init.asm	/^  ae:	ff d0                	callq  *%rax$/;"	l
ae	mkdir.asm	/^  ae:	eb 0c                	jmp    bc <main+0xbc>$/;"	l
ae	rm.asm	/^  ae:	eb 0c                	jmp    bc <main+0xbc>$/;"	l
ae	usertests.asm	/^      ae:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ae	zombie.asm	/^  ae:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ae0	echo.asm	/^ ae0:	48 8b 00             	mov    (%rax),%rax$/;"	l
ae0	grep.asm	/^ ae0:	75 65                	jne    b47 <printf+0x1f9>$/;"	l
ae0	zombie.asm	/^ ae0:	48 8b 00             	mov    (%rax),%rax$/;"	l
ae1	ln.asm	/^ ae1:	c9                   	leaveq $/;"	l
ae1	mkdir.asm	/^ ae1:	00 00 00 $/;"	l
ae1	rm.asm	/^ ae1:	00 00 00 $/;"	l
ae2	cat.asm	/^ ae2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ae2	grep.asm	/^ ae2:	8b 85 20 ff ff ff    	mov    -0xe0(%rbp),%eax$/;"	l
ae2	init.asm	/^ ae2:	48 01 d0             	add    %rdx,%rax$/;"	l
ae2	ln.asm	/^ ae2:	c3                   	retq   $/;"	l
ae2	ls.asm	/^     ae2:	89 c7                	mov    %eax,%edi$/;"	l
ae2	sh.asm	/^     ae2:	48 b8 da 0b 00 00 00 	movabs $0xbda,%rax$/;"	l
ae2	stressfs.asm	/^ ae2:	01 c2                	add    %eax,%edx$/;"	l
ae2	wc.asm	/^ ae2:	90                   	nop$/;"	l
ae3	divide.asm	/^ ae3:	48 8b 00             	mov    (%rax),%rax$/;"	l
ae3	echo.asm	/^ ae3:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ae3	ln.asm	/^ ae3:	55                   	push   %rbp$/;"	l
ae3	wc.asm	/^ ae3:	c9                   	leaveq $/;"	l
ae3	zombie.asm	/^ ae3:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ae4	ln.asm	/^ ae4:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ae4	ls.asm	/^     ae4:	48 b8 a6 08 00 00 00 	movabs $0x8a6,%rax$/;"	l
ae4	mkdir.asm	/^ ae4:	ff d0                	callq  *%rax$/;"	l
ae4	rm.asm	/^ ae4:	ff d0                	callq  *%rax$/;"	l
ae4	stressfs.asm	/^ ae4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ae4	usertests.asm	/^     ae4:	00 00 00 $/;"	l
ae4	wc.asm	/^ ae4:	c3                   	retq   $/;"	l
ae5	init.asm	/^ ae5:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax$/;"	l
ae5	wc.asm	/^ ae5:	55                   	push   %rbp$/;"	l
ae6	cat.asm	/^ ae6:	48 8b 00             	mov    (%rax),%rax$/;"	l
ae6	divide.asm	/^ ae6:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
ae6	kill.asm	/^ ae6:	00 00 00 $/;"	l
ae6	mkdir.asm	/^ ae6:	48 b8 f0 0e 00 00 00 	movabs $0xef0,%rax$/;"	l
ae6	rm.asm	/^ ae6:	48 b8 e0 0e 00 00 00 	movabs $0xee0,%rax$/;"	l
ae6	wc.asm	/^ ae6:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ae7	echo.asm	/^ ae7:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)$/;"	l
ae7	ln.asm	/^ ae7:	48 83 ec 30          	sub    $0x30,%rsp$/;"	l
ae7	usertests.asm	/^     ae7:	8b 00                	mov    (%rax),%eax$/;"	l
ae7	zombie.asm	/^ ae7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ae8	grep.asm	/^ ae8:	83 f8 30             	cmp    $0x30,%eax$/;"	l
ae8	stressfs.asm	/^ ae8:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
ae9	cat.asm	/^ ae9:	48 8b 10             	mov    (%rax),%rdx$/;"	l
ae9	divide.asm	/^ ae9:	01 c2                	add    %eax,%edx$/;"	l
ae9	init.asm	/^ ae9:	75 27                	jne    b12 <free+0x113>$/;"	l
ae9	kill.asm	/^ ae9:	48 8b 00             	mov    (%rax),%rax$/;"	l
ae9	sh.asm	/^     ae9:	00 00 00 $/;"	l
ae9	usertests.asm	/^     ae9:	48 be 88 6b 00 00 00 	movabs $0x6b88,%rsi$/;"	l
ae9	wc.asm	/^ ae9:	48 83 ec 18          	sub    $0x18,%rsp$/;"	l
aeb	divide.asm	/^ aeb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
aeb	grep.asm	/^ aeb:	73 23                	jae    b10 <printf+0x1c2>$/;"	l
aeb	init.asm	/^ aeb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
aeb	ln.asm	/^ aeb:	89 7d dc             	mov    %edi,-0x24(%rbp)$/;"	l
aeb	ls.asm	/^     aeb:	00 00 00 $/;"	l
aeb	stressfs.asm	/^ aeb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
aeb	zombie.asm	/^ aeb:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
aec	cat.asm	/^ aec:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
aec	echo.asm	/^ aec:	75 4a                	jne    b38 <malloc+0x7e>$/;"	l
aec	kill.asm	/^ aec:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
aec	sh.asm	/^     aec:	ff d0                	callq  *%rax$/;"	l
aed	grep.asm	/^ aed:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax$/;"	l
aed	mkdir.asm	/^ aed:	00 00 00 $/;"	l
aed	rm.asm	/^ aed:	00 00 00 $/;"	l
aed	wc.asm	/^ aed:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
aee	echo.asm	/^ aee:	48 b8 70 0e 00 00 00 	movabs $0xe70,%rax$/;"	l
aee	ln.asm	/^ aee:	8b 45 dc             	mov    -0x24(%rbp),%eax$/;"	l
aee	ls.asm	/^     aee:	ff d0                	callq  *%rax$/;"	l
aee	sh.asm	/^     aee:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
aee	zombie.asm	/^ aee:	3b 45 ec             	cmp    -0x14(%rbp),%eax$/;"	l
aef	divide.asm	/^ aef:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
aef	init.asm	/^ aef:	8b 50 08             	mov    0x8(%rax),%edx$/;"	l
aef	stressfs.asm	/^ aef:	48 8b 00             	mov    (%rax),%rax$/;"	l
af	divide.asm	/^  af:	29 c1                	sub    %eax,%ecx$/;"	l
af	echo.asm	/^  af:	89 d1                	mov    %edx,%ecx$/;"	l
af	grep.asm	/^  af:	be 0a 00 00 00       	mov    $0xa,%esi$/;"	l
af	kill.asm	/^  af:	8b 45 f4             	mov    -0xc(%rbp),%eax$/;"	l
af	ls.asm	/^      af:	00 00 00 $/;"	l
af	wc.asm	/^  af:	8b 45 dc             	mov    -0x24(%rbp),%eax$/;"	l
af0	cat.asm	/^ af0:	48 89 10             	mov    %rdx,(%rax)$/;"	l
af0	kill.asm	/^ af0:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)$/;"	l
af0	ls.asm	/^     af0:	e9 f1 01 00 00       	jmpq   ce6 <printf+0x373>$/;"	l
af0	mkdir.asm	/^ af0:	48 8b 00             	mov    (%rax),%rax$/;"	l
af0	rm.asm	/^ af0:	48 8b 00             	mov    (%rax),%rax$/;"	l
af0	usertests.asm	/^     af0:	00 00 00 $/;"	l
af1	ln.asm	/^ af1:	48 83 c0 0f          	add    $0xf,%rax$/;"	l
af1	wc.asm	/^ af1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
af1	zombie.asm	/^ af1:	72 65                	jb     b58 <malloc+0xfa>$/;"	l
af2	divide.asm	/^ af2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
af2	init.asm	/^ af2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
af2	sh.asm	/^     af2:	eb 38                	jmp    b2c <parseline+0x68>$/;"	l
af2	stressfs.asm	/^ af2:	48 8b 10             	mov    (%rax),%rdx$/;"	l
af3	cat.asm	/^ af3:	eb 0e                	jmp    b03 <free+0xcf>$/;"	l
af3	mkdir.asm	/^ af3:	c9                   	leaveq $/;"	l
af3	rm.asm	/^ af3:	c9                   	leaveq $/;"	l
af3	usertests.asm	/^     af3:	89 c7                	mov    %eax,%edi$/;"	l
af3	zombie.asm	/^ af3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
af4	grep.asm	/^ af4:	8b 95 20 ff ff ff    	mov    -0xe0(%rbp),%edx$/;"	l
af4	mkdir.asm	/^ af4:	c3                   	retq   $/;"	l
af4	rm.asm	/^ af4:	c3                   	retq   $/;"	l
af4	sh.asm	/^     af4:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi$/;"	l
af5	cat.asm	/^ af5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
af5	echo.asm	/^ af5:	00 00 00 $/;"	l
af5	kill.asm	/^ af5:	75 4a                	jne    b41 <malloc+0x7e>$/;"	l
af5	ln.asm	/^ af5:	48 c1 e8 04          	shr    $0x4,%rax$/;"	l
af5	ls.asm	/^     af5:	83 bd 3c ff ff ff 78 	cmpl   $0x78,-0xc4(%rbp)$/;"	l
af5	mkdir.asm	/^ af5:	55                   	push   %rbp$/;"	l
af5	rm.asm	/^ af5:	55                   	push   %rbp$/;"	l
af5	stressfs.asm	/^ af5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
af5	usertests.asm	/^     af5:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
af5	wc.asm	/^ af5:	48 83 e8 10          	sub    $0x10,%rax$/;"	l
af6	divide.asm	/^ af6:	48 8b 00             	mov    (%rax),%rax$/;"	l
af6	init.asm	/^ af6:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
af6	mkdir.asm	/^ af6:	48 89 e5             	mov    %rsp,%rbp$/;"	l
af6	rm.asm	/^ af6:	48 89 e5             	mov    %rsp,%rbp$/;"	l
af7	kill.asm	/^ af7:	48 b8 80 0e 00 00 00 	movabs $0xe80,%rax$/;"	l
af7	zombie.asm	/^ af7:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
af8	echo.asm	/^ af8:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
af8	sh.asm	/^     af8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
af9	cat.asm	/^ af9:	48 8b 10             	mov    (%rax),%rdx$/;"	l
af9	divide.asm	/^ af9:	48 8b 10             	mov    (%rax),%rdx$/;"	l
af9	init.asm	/^ af9:	01 c2                	add    %eax,%edx$/;"	l
af9	ln.asm	/^ af9:	83 c0 01             	add    $0x1,%eax$/;"	l
af9	mkdir.asm	/^ af9:	48 83 ec 30          	sub    $0x30,%rsp$/;"	l
af9	rm.asm	/^ af9:	48 83 ec 30          	sub    $0x30,%rsp$/;"	l
af9	stressfs.asm	/^ af9:	48 89 10             	mov    %rdx,(%rax)$/;"	l
af9	wc.asm	/^ af9:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
afa	grep.asm	/^ afa:	89 d2                	mov    %edx,%edx$/;"	l
afa	usertests.asm	/^     afa:	48 ba c7 61 00 00 00 	movabs $0x61c7,%rdx$/;"	l
afa	zombie.asm	/^ afa:	3b 45 ec             	cmp    -0x14(%rbp),%eax$/;"	l
afb	init.asm	/^ afb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
afc	cat.asm	/^ afc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
afc	divide.asm	/^ afc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
afc	echo.asm	/^ afc:	48 b8 80 0e 00 00 00 	movabs $0xe80,%rax$/;"	l
afc	grep.asm	/^ afc:	48 01 d0             	add    %rdx,%rax$/;"	l
afc	ln.asm	/^ afc:	89 45 ec             	mov    %eax,-0x14(%rbp)$/;"	l
afc	ls.asm	/^     afc:	74 09                	je     b07 <printf+0x194>$/;"	l
afc	sh.asm	/^     afc:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
afc	stressfs.asm	/^ afc:	eb 0e                	jmp    b0c <free+0xcf>$/;"	l
afd	mkdir.asm	/^ afd:	89 7d dc             	mov    %edi,-0x24(%rbp)$/;"	l
afd	rm.asm	/^ afd:	89 7d dc             	mov    %edi,-0x24(%rbp)$/;"	l
afd	wc.asm	/^ afd:	48 b8 b0 12 00 00 00 	movabs $0x12b0,%rax$/;"	l
afd	zombie.asm	/^ afd:	75 10                	jne    b0f <malloc+0xb1>$/;"	l
afe	kill.asm	/^ afe:	00 00 00 $/;"	l
afe	ls.asm	/^     afe:	83 bd 3c ff ff ff 70 	cmpl   $0x70,-0xc4(%rbp)$/;"	l
afe	stressfs.asm	/^ afe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
aff	grep.asm	/^ aff:	8b 95 20 ff ff ff    	mov    -0xe0(%rbp),%edx$/;"	l
aff	init.asm	/^ aff:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
aff	ln.asm	/^ aff:	48 b8 d0 0e 00 00 00 	movabs $0xed0,%rax$/;"	l
aff	zombie.asm	/^ aff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
align	elf.h	/^  uint64 align;$/;"	m	struct:proghdr
allocproc	proc.c	/^allocproc(void)$/;"	f	file:
allocuvm	vm.c	/^allocuvm(pde_t *pgdir, uint oldsz, uint newsz)$/;"	f
alltraps	kernel.asm	/^alltraps:$/;"	l
alltraps	trapasm.S	/^alltraps:$/;"	l
amt	usertests.asm	/^  amt = (BIG) - (addr_t)a;$/;"	d
apicid	kernel.asm	/^  apicid = lapic[ID] >> 24;$/;"	d
apicid	mp.h	/^  uchar apicid;                 \/\/ local APIC id$/;"	m	struct:mpproc
apicid	proc.h	/^  uchar apicid;                \/\/ Local APIC ID$/;"	m	struct:cpu
apicno	mp.h	/^  uchar apicno;                 \/\/ I\/O APIC id$/;"	m	struct:mpioapic
argaddr	syscall.c	/^argaddr(int n, addr_t *ip)$/;"	f
argc	sh.asm	/^  argc = 0;$/;"	d
argfd	sysfile.c	/^argfd(int n, int *pfd, struct file **pf)$/;"	f	file:
argint	syscall.c	/^argint(int n, int *ip)$/;"	f
argptest	usertests.c	/^void argptest()$/;"	f
argptr	syscall.c	/^argptr(int n, char **pp, int size)$/;"	f
args	mmu.h	/^  uint args : 5;        \/\/ # args, 0 for interrupt\/trap gates$/;"	m	struct:gatedesc
argstr	syscall.c	/^argstr(int n, char **pp)$/;"	f
argv	init.c	/^char *argv[] = { "sh", 0 };$/;"	v
argv	initcode.S	/^argv:$/;"	l
argv	sh.c	/^  char *argv[MAXARGS];$/;"	m	struct:execcmd	file:
atoi	ulib.c	/^atoi(const char *s)$/;"	f
avl	mmu.h	/^  uint avl : 1;        \/\/ Unused (available for software use)$/;"	m	struct:segdesc
b	cat.asm	/^   b:	eb 51                	jmp    5e <cat+0x5e>$/;"	l
b	divide.asm	/^   b:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)$/;"	l
b	echo.asm	/^   b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)$/;"	l
b	forktest.asm	/^   b:	89 bd 4c ff ff ff    	mov    %edi,-0xb4(%rbp)$/;"	l
b	kernel.asm	/^  b = bget(dev, blockno);$/;"	d
b	kill.asm	/^   b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)$/;"	l
b	ln.asm	/^   b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)$/;"	l
b	mkdir.asm	/^   b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)$/;"	l
b	rm.asm	/^   b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)$/;"	l
b	stressfs.asm	/^   b:	89 bd dc fd ff ff    	mov    %edi,-0x224(%rbp)$/;"	l
b	usertests.asm	/^       b:	00 00 00 $/;"	l
b	usertests.asm	/^    b = sbrk(1);$/;"	d
b	wc.asm	/^   b:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)$/;"	l
b	zombie.asm	/^   b:	00 00 00 $/;"	l
b0	init.asm	/^  b0:	89 45 fc             	mov    %eax,-0x4(%rbp)$/;"	l
b0	mkdir.asm	/^  b0:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)$/;"	l
b0	rm.asm	/^  b0:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)$/;"	l
b00	cat.asm	/^ b00:	48 89 10             	mov    %rdx,(%rax)$/;"	l
b00	divide.asm	/^ b00:	48 89 10             	mov    %rdx,(%rax)$/;"	l
b00	mkdir.asm	/^ b00:	8b 45 dc             	mov    -0x24(%rbp),%eax$/;"	l
b00	rm.asm	/^ b00:	8b 45 dc             	mov    -0x24(%rbp),%eax$/;"	l
b01	kill.asm	/^ b01:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
b01	sh.asm	/^     b01:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
b01	usertests.asm	/^     b01:	00 00 00 $/;"	l
b02	init.asm	/^ b02:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
b02	stressfs.asm	/^ b02:	48 8b 10             	mov    (%rax),%rdx$/;"	l
b03	cat.asm	/^ b03:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b03	divide.asm	/^ b03:	eb 0e                	jmp    b13 <free+0xcf>$/;"	l
b03	echo.asm	/^ b03:	00 00 00 $/;"	l
b03	mkdir.asm	/^ b03:	48 83 c0 0f          	add    $0xf,%rax$/;"	l
b03	rm.asm	/^ b03:	48 83 c0 0f          	add    $0xf,%rax$/;"	l
b03	zombie.asm	/^ b03:	48 8b 10             	mov    (%rax),%rdx$/;"	l
b04	usertests.asm	/^     b04:	ff d2                	callq  *%rdx$/;"	l
b04	wc.asm	/^ b04:	00 00 00 $/;"	l
b05	divide.asm	/^ b05:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b05	grep.asm	/^ b05:	83 c2 08             	add    $0x8,%edx$/;"	l
b05	kill.asm	/^ b05:	48 b8 90 0e 00 00 00 	movabs $0xe90,%rax$/;"	l
b05	ls.asm	/^     b05:	75 65                	jne    b6c <printf+0x1f9>$/;"	l
b05	stressfs.asm	/^ b05:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
b06	echo.asm	/^ b06:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
b06	init.asm	/^ b06:	48 8b 10             	mov    (%rax),%rdx$/;"	l
b06	ln.asm	/^ b06:	00 00 00 $/;"	l
b06	sh.asm	/^     b06:	48 89 c7             	mov    %rax,%rdi$/;"	l
b06	usertests.asm	/^     b06:	48 b8 02 60 00 00 00 	movabs $0x6002,%rax$/;"	l
b06	zombie.asm	/^ b06:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
b07	cat.asm	/^ b07:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
b07	ls.asm	/^     b07:	8b 85 20 ff ff ff    	mov    -0xe0(%rbp),%eax$/;"	l
b07	mkdir.asm	/^ b07:	48 c1 e8 04          	shr    $0x4,%rax$/;"	l
b07	rm.asm	/^ b07:	48 c1 e8 04          	shr    $0x4,%rax$/;"	l
b07	wc.asm	/^ b07:	48 8b 00             	mov    (%rax),%rax$/;"	l
b08	grep.asm	/^ b08:	89 95 20 ff ff ff    	mov    %edx,-0xe0(%rbp)$/;"	l
b09	divide.asm	/^ b09:	48 8b 10             	mov    (%rax),%rdx$/;"	l
b09	init.asm	/^ b09:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b09	ln.asm	/^ b09:	48 8b 00             	mov    (%rax),%rax$/;"	l
b09	sh.asm	/^     b09:	48 b8 aa 07 00 00 00 	movabs $0x7aa,%rax$/;"	l
b09	stressfs.asm	/^ b09:	48 89 10             	mov    %rdx,(%rax)$/;"	l
b0a	cat.asm	/^ b0a:	89 c0                	mov    %eax,%eax$/;"	l
b0a	echo.asm	/^ b0a:	48 89 10             	mov    %rdx,(%rax)$/;"	l
b0a	wc.asm	/^ b0a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
b0a	zombie.asm	/^ b0a:	48 89 10             	mov    %rdx,(%rax)$/;"	l
b0b	mkdir.asm	/^ b0b:	83 c0 01             	add    $0x1,%eax$/;"	l
b0b	rm.asm	/^ b0b:	83 c0 01             	add    $0x1,%eax$/;"	l
b0c	cat.asm	/^ b0c:	48 c1 e0 04          	shl    $0x4,%rax$/;"	l
b0c	divide.asm	/^ b0c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
b0c	kill.asm	/^ b0c:	00 00 00 $/;"	l
b0c	ln.asm	/^ b0c:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
b0c	stressfs.asm	/^ b0c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b0d	echo.asm	/^ b0d:	48 b8 80 0e 00 00 00 	movabs $0xe80,%rax$/;"	l
b0d	init.asm	/^ b0d:	48 89 10             	mov    %rdx,(%rax)$/;"	l
b0d	ls.asm	/^     b0d:	83 f8 30             	cmp    $0x30,%eax$/;"	l
b0d	usertests.asm	/^     b0d:	00 00 00 $/;"	l
b0d	zombie.asm	/^ b0d:	eb 2e                	jmp    b3d <malloc+0xdf>$/;"	l
b0e	grep.asm	/^ b0e:	eb 12                	jmp    b22 <printf+0x1d4>$/;"	l
b0e	mkdir.asm	/^ b0e:	89 45 ec             	mov    %eax,-0x14(%rbp)$/;"	l
b0e	rm.asm	/^ b0e:	89 45 ec             	mov    %eax,-0x14(%rbp)$/;"	l
b0e	wc.asm	/^ b0e:	eb 2f                	jmp    b3f <free+0x5a>$/;"	l
b0f	kill.asm	/^ b0f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
b0f	zombie.asm	/^ b0f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b1	divide.asm	/^  b1:	89 c8                	mov    %ecx,%eax$/;"	l
b1	echo.asm	/^  b1:	fc                   	cld    $/;"	l
b1	ln.asm	/^  b1:	00 00 00 $/;"	l
b1	sh.asm	/^      b1:	00 00 00 $/;"	l
b10	cat.asm	/^ b10:	48 89 c2             	mov    %rax,%rdx$/;"	l
b10	divide.asm	/^ b10:	48 89 10             	mov    %rdx,(%rax)$/;"	l
b10	grep.asm	/^ b10:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax$/;"	l
b10	init.asm	/^ b10:	eb 0b                	jmp    b1d <free+0x11e>$/;"	l
b10	ln.asm	/^ b10:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)$/;"	l
b10	ls.asm	/^     b10:	73 23                	jae    b35 <printf+0x1c2>$/;"	l
b10	sh.asm	/^     b10:	00 00 00 $/;"	l
b10	stressfs.asm	/^ b10:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
b10	usertests.asm	/^     b10:	ff d0                	callq  *%rax$/;"	l
b10	wc.asm	/^ b10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b11	mkdir.asm	/^ b11:	48 b8 f0 0e 00 00 00 	movabs $0xef0,%rax$/;"	l
b11	rm.asm	/^ b11:	48 b8 e0 0e 00 00 00 	movabs $0xee0,%rax$/;"	l
b12	init.asm	/^ b12:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b12	ls.asm	/^     b12:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax$/;"	l
b12	usertests.asm	/^     b12:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)$/;"	l
b13	cat.asm	/^ b13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b13	divide.asm	/^ b13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b13	kill.asm	/^ b13:	48 89 10             	mov    %rdx,(%rax)$/;"	l
b13	sh.asm	/^     b13:	ff d0                	callq  *%rax$/;"	l
b13	stressfs.asm	/^ b13:	89 c0                	mov    %eax,%eax$/;"	l
b13	zombie.asm	/^ b13:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
b14	echo.asm	/^ b14:	00 00 00 $/;"	l
b14	wc.asm	/^ b14:	48 8b 00             	mov    (%rax),%rax$/;"	l
b15	ln.asm	/^ b15:	75 4a                	jne    b61 <malloc+0x7e>$/;"	l
b15	sh.asm	/^     b15:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b15	stressfs.asm	/^ b15:	48 c1 e0 04          	shl    $0x4,%rax$/;"	l
b16	init.asm	/^ b16:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
b16	kill.asm	/^ b16:	48 b8 90 0e 00 00 00 	movabs $0xe90,%rax$/;"	l
b16	zombie.asm	/^ b16:	2b 45 ec             	sub    -0x14(%rbp),%eax$/;"	l
b17	cat.asm	/^ b17:	48 01 d0             	add    %rdx,%rax$/;"	l
b17	divide.asm	/^ b17:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
b17	echo.asm	/^ b17:	48 8b 10             	mov    (%rax),%rdx$/;"	l
b17	grep.asm	/^ b17:	48 8d 50 08          	lea    0x8(%rax),%rdx$/;"	l
b17	ln.asm	/^ b17:	48 b8 c0 0e 00 00 00 	movabs $0xec0,%rax$/;"	l
b17	wc.asm	/^ b17:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax$/;"	l
b18	mkdir.asm	/^ b18:	00 00 00 $/;"	l
b18	rm.asm	/^ b18:	00 00 00 $/;"	l
b19	ls.asm	/^     b19:	8b 95 20 ff ff ff    	mov    -0xe0(%rbp),%edx$/;"	l
b19	sh.asm	/^     b19:	48 89 c7             	mov    %rax,%rdi$/;"	l
b19	stressfs.asm	/^ b19:	48 89 c2             	mov    %rax,%rdx$/;"	l
b19	usertests.asm	/^     b19:	8b 45 f4             	mov    -0xc(%rbp),%eax$/;"	l
b19	zombie.asm	/^ b19:	89 c2                	mov    %eax,%edx$/;"	l
b1a	cat.asm	/^ b1a:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax$/;"	l
b1a	divide.asm	/^ b1a:	89 c0                	mov    %eax,%eax$/;"	l
b1a	echo.asm	/^ b1a:	48 b8 70 0e 00 00 00 	movabs $0xe70,%rax$/;"	l
b1a	init.asm	/^ b1a:	48 89 10             	mov    %rdx,(%rax)$/;"	l
b1b	grep.asm	/^ b1b:	48 89 95 28 ff ff ff 	mov    %rdx,-0xd8(%rbp)$/;"	l
b1b	mkdir.asm	/^ b1b:	48 8b 00             	mov    (%rax),%rax$/;"	l
b1b	rm.asm	/^ b1b:	48 8b 00             	mov    (%rax),%rax$/;"	l
b1b	wc.asm	/^ b1b:	77 17                	ja     b34 <free+0x4f>$/;"	l
b1b	zombie.asm	/^ b1b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b1c	divide.asm	/^ b1c:	48 c1 e0 04          	shl    $0x4,%rax$/;"	l
b1c	sh.asm	/^     b1c:	48 b8 50 07 00 00 00 	movabs $0x750,%rax$/;"	l
b1c	stressfs.asm	/^ b1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b1c	usertests.asm	/^     b1c:	ba 00 02 00 00       	mov    $0x200,%edx$/;"	l
b1d	init.asm	/^ b1d:	48 b8 d0 0f 00 00 00 	movabs $0xfd0,%rax$/;"	l
b1d	kill.asm	/^ b1d:	00 00 00 $/;"	l
b1d	wc.asm	/^ b1d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
b1e	cat.asm	/^ b1e:	75 27                	jne    b47 <free+0x113>$/;"	l
b1e	ln.asm	/^ b1e:	00 00 00 $/;"	l
b1e	mkdir.asm	/^ b1e:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
b1e	rm.asm	/^ b1e:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
b1f	ls.asm	/^     b1f:	89 d2                	mov    %edx,%edx$/;"	l
b1f	zombie.asm	/^ b1f:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
b2	echo.asm	/^  b2:	f3 aa                	rep stos %al,%es:(%rdi)$/;"	l
b2	kill.asm	/^  b2:	48 89 ce             	mov    %rcx,%rsi$/;"	l
b2	ls.asm	/^      b2:	ff d0                	callq  *%rax$/;"	l
b2	stressfs.asm	/^  b2:	00 00 00 $/;"	l
b2	wc.asm	/^  b2:	ba 00 02 00 00       	mov    $0x200,%edx$/;"	l
b2	zombie.asm	/^  b2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)$/;"	l
b20	cat.asm	/^ b20:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b20	divide.asm	/^ b20:	48 89 c2             	mov    %rax,%rdx$/;"	l
b20	kill.asm	/^ b20:	48 8b 10             	mov    (%rax),%rdx$/;"	l
b20	stressfs.asm	/^ b20:	48 01 d0             	add    %rdx,%rax$/;"	l
b21	echo.asm	/^ b21:	00 00 00 $/;"	l
b21	ln.asm	/^ b21:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
b21	ls.asm	/^     b21:	48 01 d0             	add    %rdx,%rax$/;"	l
b21	usertests.asm	/^     b21:	48 be 40 88 00 00 00 	movabs $0x8840,%rsi$/;"	l
b21	wc.asm	/^ b21:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax$/;"	l
b22	grep.asm	/^ b22:	8b 30                	mov    (%rax),%esi$/;"	l
b22	mkdir.asm	/^ b22:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)$/;"	l
b22	rm.asm	/^ b22:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)$/;"	l
b22	zombie.asm	/^ b22:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b23	divide.asm	/^ b23:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b23	kill.asm	/^ b23:	48 b8 80 0e 00 00 00 	movabs $0xe80,%rax$/;"	l
b23	sh.asm	/^     b23:	00 00 00 $/;"	l
b23	stressfs.asm	/^ b23:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax$/;"	l
b24	cat.asm	/^ b24:	8b 50 08             	mov    0x8(%rax),%edx$/;"	l
b24	echo.asm	/^ b24:	48 89 10             	mov    %rdx,(%rax)$/;"	l
b24	grep.asm	/^ b24:	8b 85 1c ff ff ff    	mov    -0xe4(%rbp),%eax$/;"	l
b24	init.asm	/^ b24:	00 00 00 $/;"	l
b24	ls.asm	/^     b24:	8b 95 20 ff ff ff    	mov    -0xe0(%rbp),%edx$/;"	l
b25	ln.asm	/^ b25:	48 b8 d0 0e 00 00 00 	movabs $0xed0,%rax$/;"	l
b25	wc.asm	/^ b25:	77 2f                	ja     b56 <free+0x71>$/;"	l
b26	sh.asm	/^     b26:	ff d0                	callq  *%rax$/;"	l
b26	zombie.asm	/^ b26:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
b27	cat.asm	/^ b27:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
b27	divide.asm	/^ b27:	48 01 d0             	add    %rdx,%rax$/;"	l
b27	echo.asm	/^ b27:	48 b8 70 0e 00 00 00 	movabs $0xe70,%rax$/;"	l
b27	init.asm	/^ b27:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx$/;"	l
b27	mkdir.asm	/^ b27:	75 4a                	jne    b73 <malloc+0x7e>$/;"	l
b27	rm.asm	/^ b27:	75 4a                	jne    b73 <malloc+0x7e>$/;"	l
b27	stressfs.asm	/^ b27:	75 27                	jne    b50 <free+0x113>$/;"	l
b27	wc.asm	/^ b27:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b28	sh.asm	/^     b28:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
b28	usertests.asm	/^     b28:	00 00 00 $/;"	l
b29	mkdir.asm	/^ b29:	48 b8 e0 0e 00 00 00 	movabs $0xee0,%rax$/;"	l
b29	rm.asm	/^ b29:	48 b8 d0 0e 00 00 00 	movabs $0xed0,%rax$/;"	l
b29	stressfs.asm	/^ b29:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b29	zombie.asm	/^ b29:	89 c0                	mov    %eax,%eax$/;"	l
b2a	divide.asm	/^ b2a:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax$/;"	l
b2a	grep.asm	/^ b2a:	b9 01 00 00 00       	mov    $0x1,%ecx$/;"	l
b2a	kill.asm	/^ b2a:	00 00 00 $/;"	l
b2a	ls.asm	/^     b2a:	83 c2 08             	add    $0x8,%edx$/;"	l
b2b	cat.asm	/^ b2b:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
b2b	init.asm	/^ b2b:	48 89 10             	mov    %rdx,(%rax)$/;"	l
b2b	usertests.asm	/^     b2b:	89 c7                	mov    %eax,%edi$/;"	l
b2b	wc.asm	/^ b2b:	48 8b 00             	mov    (%rax),%rax$/;"	l
b2b	zombie.asm	/^ b2b:	48 c1 e0 04          	shl    $0x4,%rax$/;"	l
b2c	ln.asm	/^ b2c:	00 00 00 $/;"	l
b2c	sh.asm	/^     b2c:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx$/;"	l
b2d	kill.asm	/^ b2d:	48 89 10             	mov    %rdx,(%rax)$/;"	l
b2d	ls.asm	/^     b2d:	89 95 20 ff ff ff    	mov    %edx,-0xe0(%rbp)$/;"	l
b2d	stressfs.asm	/^ b2d:	8b 50 08             	mov    0x8(%rax),%edx$/;"	l
b2d	usertests.asm	/^     b2d:	48 b8 20 60 00 00 00 	movabs $0x6020,%rax$/;"	l
b2e	cat.asm	/^ b2e:	01 c2                	add    %eax,%edx$/;"	l
b2e	divide.asm	/^ b2e:	75 27                	jne    b57 <free+0x113>$/;"	l
b2e	echo.asm	/^ b2e:	00 00 00 $/;"	l
b2e	init.asm	/^ b2e:	90                   	nop$/;"	l
b2e	wc.asm	/^ b2e:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax$/;"	l
b2f	grep.asm	/^ b2f:	ba 0a 00 00 00       	mov    $0xa,%edx$/;"	l
b2f	init.asm	/^ b2f:	c9                   	leaveq $/;"	l
b2f	ln.asm	/^ b2f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
b2f	zombie.asm	/^ b2f:	48 01 45 f8          	add    %rax,-0x8(%rbp)$/;"	l
b3	divide.asm	/^  b3:	89 45 f0             	mov    %eax,-0x10(%rbp)$/;"	l
b3	init.asm	/^  b3:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)$/;"	l
b3	usertests.asm	/^      b3:	48 ba c7 61 00 00 00 	movabs $0x61c7,%rdx$/;"	l
b30	cat.asm	/^ b30:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b30	divide.asm	/^ b30:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b30	init.asm	/^ b30:	c3                   	retq   $/;"	l
b30	kill.asm	/^ b30:	48 b8 80 0e 00 00 00 	movabs $0xe80,%rax$/;"	l
b30	mkdir.asm	/^ b30:	00 00 00 $/;"	l
b30	rm.asm	/^ b30:	00 00 00 $/;"	l
b30	sh.asm	/^     b30:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
b30	stressfs.asm	/^ b30:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
b31	echo.asm	/^ b31:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%rax)$/;"	l
b31	init.asm	/^ b31:	55                   	push   %rbp$/;"	l
b32	init.asm	/^ b32:	48 89 e5             	mov    %rsp,%rbp$/;"	l
b32	wc.asm	/^ b32:	77 22                	ja     b56 <free+0x71>$/;"	l
b33	ln.asm	/^ b33:	48 89 10             	mov    %rdx,(%rax)$/;"	l
b33	ls.asm	/^     b33:	eb 12                	jmp    b47 <printf+0x1d4>$/;"	l
b33	mkdir.asm	/^ b33:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
b33	rm.asm	/^ b33:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
b33	zombie.asm	/^ b33:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b34	cat.asm	/^ b34:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
b34	divide.asm	/^ b34:	8b 50 08             	mov    0x8(%rax),%edx$/;"	l
b34	grep.asm	/^ b34:	89 c7                	mov    %eax,%edi$/;"	l
b34	sh.asm	/^     b34:	48 ba f9 1d 00 00 00 	movabs $0x1df9,%rdx$/;"	l
b34	stressfs.asm	/^ b34:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
b34	usertests.asm	/^     b34:	00 00 00 $/;"	l
b34	wc.asm	/^ b34:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b35	init.asm	/^ b35:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
b35	ls.asm	/^     b35:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax$/;"	l
b36	grep.asm	/^ b36:	48 b8 81 08 00 00 00 	movabs $0x881,%rax$/;"	l
b36	ln.asm	/^ b36:	48 b8 d0 0e 00 00 00 	movabs $0xed0,%rax$/;"	l
b37	cat.asm	/^ b37:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
b37	divide.asm	/^ b37:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
b37	kill.asm	/^ b37:	00 00 00 $/;"	l
b37	mkdir.asm	/^ b37:	48 b8 f0 0e 00 00 00 	movabs $0xef0,%rax$/;"	l
b37	rm.asm	/^ b37:	48 b8 e0 0e 00 00 00 	movabs $0xee0,%rax$/;"	l
b37	stressfs.asm	/^ b37:	01 c2                	add    %eax,%edx$/;"	l
b37	usertests.asm	/^     b37:	ff d0                	callq  *%rax$/;"	l
b37	zombie.asm	/^ b37:	8b 55 ec             	mov    -0x14(%rbp),%edx$/;"	l
b38	echo.asm	/^ b38:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
b38	wc.asm	/^ b38:	48 8b 00             	mov    (%rax),%rax$/;"	l
b39	init.asm	/^ b39:	89 7d ec             	mov    %edi,-0x14(%rbp)$/;"	l
b39	stressfs.asm	/^ b39:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b39	usertests.asm	/^     b39:	89 45 fc             	mov    %eax,-0x4(%rbp)$/;"	l
b3a	kill.asm	/^ b3a:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%rax)$/;"	l
b3a	zombie.asm	/^ b3a:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
b3b	cat.asm	/^ b3b:	48 8b 10             	mov    (%rax),%rdx$/;"	l
b3b	divide.asm	/^ b3b:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
b3b	sh.asm	/^     b3b:	00 00 00 $/;"	l
b3b	wc.asm	/^ b3b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
b3c	echo.asm	/^ b3c:	48 8b 00             	mov    (%rax),%rax$/;"	l
b3c	init.asm	/^ b3c:	81 7d ec ff 0f 00 00 	cmpl   $0xfff,-0x14(%rbp)$/;"	l
b3c	ls.asm	/^     b3c:	48 8d 50 08          	lea    0x8(%rax),%rdx$/;"	l
b3c	usertests.asm	/^     b3c:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)$/;"	l
b3d	grep.asm	/^ b3d:	00 00 00 $/;"	l
b3d	ln.asm	/^ b3d:	00 00 00 $/;"	l
b3d	stressfs.asm	/^ b3d:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
b3d	zombie.asm	/^ b3d:	48 b8 20 0e 00 00 00 	movabs $0xe20,%rax$/;"	l
b3e	cat.asm	/^ b3e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b3e	divide.asm	/^ b3e:	01 c2                	add    %eax,%edx$/;"	l
b3e	mkdir.asm	/^ b3e:	00 00 00 $/;"	l
b3e	rm.asm	/^ b3e:	00 00 00 $/;"	l
b3e	sh.asm	/^     b3e:	48 89 ce             	mov    %rcx,%rsi$/;"	l
b3f	echo.asm	/^ b3f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
b3f	wc.asm	/^ b3f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
b4	cat.asm	/^  b4:	00 00 00 $/;"	l
b4	echo.asm	/^  b4:	89 ca                	mov    %ecx,%edx$/;"	l
b4	forktest.asm	/^  b4:	00 00 00 $/;"	l
b4	grep.asm	/^  b4:	48 89 c7             	mov    %rax,%rdi$/;"	l
b4	ln.asm	/^  b4:	ff d0                	callq  *%rax$/;"	l
b4	ls.asm	/^      b4:	ba 0e 00 00 00       	mov    $0xe,%edx$/;"	l
b4	mkdir.asm	/^  b4:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
b4	rm.asm	/^  b4:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
b4	sh.asm	/^      b4:	bf 02 00 00 00       	mov    $0x2,%edi$/;"	l
b40	divide.asm	/^ b40:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b40	grep.asm	/^ b40:	ff d0                	callq  *%rax$/;"	l
b40	ln.asm	/^ b40:	48 8b 10             	mov    (%rax),%rdx$/;"	l
b40	ls.asm	/^     b40:	48 89 95 28 ff ff ff 	mov    %rdx,-0xd8(%rbp)$/;"	l
b40	stressfs.asm	/^ b40:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
b40	usertests.asm	/^     b40:	75 45                	jne    b87 <writetest1+0x1ee>$/;"	l
b41	kill.asm	/^ b41:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
b41	mkdir.asm	/^ b41:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
b41	rm.asm	/^ b41:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
b41	sh.asm	/^     b41:	48 89 c7             	mov    %rax,%rdi$/;"	l
b42	cat.asm	/^ b42:	48 89 10             	mov    %rdx,(%rax)$/;"	l
b42	grep.asm	/^ b42:	e9 7a 01 00 00       	jmpq   cc1 <printf+0x373>$/;"	l
b42	usertests.asm	/^     b42:	81 7d f8 8b 00 00 00 	cmpl   $0x8b,-0x8(%rbp)$/;"	l
b43	echo.asm	/^ b43:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b43	init.asm	/^ b43:	77 07                	ja     b4c <morecore+0x1b>$/;"	l
b43	ln.asm	/^ b43:	48 b8 c0 0e 00 00 00 	movabs $0xec0,%rax$/;"	l
b43	wc.asm	/^ b43:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax$/;"	l
b44	divide.asm	/^ b44:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
b44	sh.asm	/^     b44:	48 b8 51 09 00 00 00 	movabs $0x951,%rax$/;"	l
b44	stressfs.asm	/^ b44:	48 8b 10             	mov    (%rax),%rdx$/;"	l
b44	zombie.asm	/^ b44:	00 00 00 $/;"	l
b45	cat.asm	/^ b45:	eb 0b                	jmp    b52 <free+0x11e>$/;"	l
b45	init.asm	/^ b45:	c7 45 ec 00 10 00 00 	movl   $0x1000,-0x14(%rbp)$/;"	l
b45	kill.asm	/^ b45:	48 8b 00             	mov    (%rax),%rax$/;"	l
b45	mkdir.asm	/^ b45:	48 89 10             	mov    %rdx,(%rax)$/;"	l
b45	rm.asm	/^ b45:	48 89 10             	mov    %rdx,(%rax)$/;"	l
b47	cat.asm	/^ b47:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b47	divide.asm	/^ b47:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
b47	echo.asm	/^ b47:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
b47	grep.asm	/^ b47:	83 bd 3c ff ff ff 73 	cmpl   $0x73,-0xc4(%rbp)$/;"	l
b47	ls.asm	/^     b47:	8b 30                	mov    (%rax),%esi$/;"	l
b47	stressfs.asm	/^ b47:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b47	wc.asm	/^ b47:	76 c7                	jbe    b10 <free+0x2b>$/;"	l
b47	zombie.asm	/^ b47:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
b48	kill.asm	/^ b48:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
b48	mkdir.asm	/^ b48:	48 b8 f0 0e 00 00 00 	movabs $0xef0,%rax$/;"	l
b48	rm.asm	/^ b48:	48 b8 e0 0e 00 00 00 	movabs $0xee0,%rax$/;"	l
b49	ls.asm	/^     b49:	8b 85 1c ff ff ff    	mov    -0xe4(%rbp),%eax$/;"	l
b49	usertests.asm	/^     b49:	0f 85 d8 00 00 00    	jne    c27 <writetest1+0x28e>$/;"	l
b49	wc.asm	/^ b49:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b4a	echo.asm	/^ b4a:	3b 45 ec             	cmp    -0x14(%rbp),%eax$/;"	l
b4a	ln.asm	/^ b4a:	00 00 00 $/;"	l
b4b	cat.asm	/^ b4b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
b4b	divide.asm	/^ b4b:	48 8b 10             	mov    (%rax),%rdx$/;"	l
b4b	sh.asm	/^     b4b:	00 00 00 $/;"	l
b4b	stressfs.asm	/^ b4b:	48 89 10             	mov    %rdx,(%rax)$/;"	l
b4b	zombie.asm	/^ b4b:	48 89 10             	mov    %rdx,(%rax)$/;"	l
b4c	init.asm	/^ b4c:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
b4c	kill.asm	/^ b4c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b4d	echo.asm	/^ b4d:	72 65                	jb     bb4 <malloc+0xfa>$/;"	l
b4d	ln.asm	/^ b4d:	48 89 10             	mov    %rdx,(%rax)$/;"	l
b4d	wc.asm	/^ b4d:	48 8b 00             	mov    (%rax),%rax$/;"	l
b4e	divide.asm	/^ b4e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b4e	grep.asm	/^ b4e:	0f 85 a5 00 00 00    	jne    bf9 <printf+0x2ab>$/;"	l
b4e	sh.asm	/^     b4e:	ff d0                	callq  *%rax$/;"	l
b4e	stressfs.asm	/^ b4e:	eb 0b                	jmp    b5b <free+0x11e>$/;"	l
b4e	zombie.asm	/^ b4e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b4f	cat.asm	/^ b4f:	48 89 10             	mov    %rdx,(%rax)$/;"	l
b4f	echo.asm	/^ b4f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b4f	init.asm	/^ b4f:	c1 e0 04             	shl    $0x4,%eax$/;"	l
b4f	ls.asm	/^     b4f:	b9 01 00 00 00       	mov    $0x1,%ecx$/;"	l
b4f	mkdir.asm	/^ b4f:	00 00 00 $/;"	l
b4f	rm.asm	/^ b4f:	00 00 00 $/;"	l
b4f	usertests.asm	/^     b4f:	48 b8 08 88 00 00 00 	movabs $0x8808,%rax$/;"	l
b5	kill.asm	/^  b5:	48 89 f7             	mov    %rsi,%rdi$/;"	l
b5	stressfs.asm	/^  b5:	ff d1                	callq  *%rcx$/;"	l
b50	kill.asm	/^ b50:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
b50	ln.asm	/^ b50:	48 b8 c0 0e 00 00 00 	movabs $0xec0,%rax$/;"	l
b50	sh.asm	/^     b50:	85 c0                	test   %eax,%eax$/;"	l
b50	stressfs.asm	/^ b50:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b50	wc.asm	/^ b50:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax$/;"	l
b52	cat.asm	/^ b52:	48 b8 f0 11 00 00 00 	movabs $0x11f0,%rax$/;"	l
b52	divide.asm	/^ b52:	48 89 10             	mov    %rdx,(%rax)$/;"	l
b52	init.asm	/^ b52:	89 c7                	mov    %eax,%edi$/;"	l
b52	mkdir.asm	/^ b52:	48 8b 10             	mov    (%rax),%rdx$/;"	l
b52	rm.asm	/^ b52:	48 8b 10             	mov    (%rax),%rdx$/;"	l
b52	sh.asm	/^     b52:	75 a0                	jne    af4 <parseline+0x30>$/;"	l
b52	zombie.asm	/^ b52:	48 83 c0 10          	add    $0x10,%rax$/;"	l
b53	echo.asm	/^ b53:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
b53	kill.asm	/^ b53:	3b 45 ec             	cmp    -0x14(%rbp),%eax$/;"	l
b54	grep.asm	/^ b54:	8b 85 20 ff ff ff    	mov    -0xe0(%rbp),%eax$/;"	l
b54	init.asm	/^ b54:	48 b8 3f 05 00 00 00 	movabs $0x53f,%rax$/;"	l
b54	ls.asm	/^     b54:	ba 0a 00 00 00       	mov    $0xa,%edx$/;"	l
b54	sh.asm	/^     b54:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx$/;"	l
b54	stressfs.asm	/^ b54:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
b54	wc.asm	/^ b54:	76 ba                	jbe    b10 <free+0x2b>$/;"	l
b55	divide.asm	/^ b55:	eb 0b                	jmp    b62 <free+0x11e>$/;"	l
b55	mkdir.asm	/^ b55:	48 b8 e0 0e 00 00 00 	movabs $0xee0,%rax$/;"	l
b55	rm.asm	/^ b55:	48 b8 d0 0e 00 00 00 	movabs $0xed0,%rax$/;"	l
b56	echo.asm	/^ b56:	3b 45 ec             	cmp    -0x14(%rbp),%eax$/;"	l
b56	kill.asm	/^ b56:	72 65                	jb     bbd <malloc+0xfa>$/;"	l
b56	usertests.asm	/^     b56:	00 00 00 $/;"	l
b56	wc.asm	/^ b56:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
b56	zombie.asm	/^ b56:	eb 4e                	jmp    ba6 <malloc+0x148>$/;"	l
b57	divide.asm	/^ b57:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b57	ln.asm	/^ b57:	00 00 00 $/;"	l
b58	kill.asm	/^ b58:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b58	sh.asm	/^     b58:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
b58	stressfs.asm	/^ b58:	48 89 10             	mov    %rdx,(%rax)$/;"	l
b58	zombie.asm	/^ b58:	48 b8 20 0e 00 00 00 	movabs $0xe20,%rax$/;"	l
b59	cat.asm	/^ b59:	00 00 00 $/;"	l
b59	echo.asm	/^ b59:	75 10                	jne    b6b <malloc+0xb1>$/;"	l
b59	ls.asm	/^     b59:	89 c7                	mov    %eax,%edi$/;"	l
b59	usertests.asm	/^     b59:	8b 00                	mov    (%rax),%eax$/;"	l
b5a	grep.asm	/^ b5a:	83 f8 30             	cmp    $0x30,%eax$/;"	l
b5a	ln.asm	/^ b5a:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%rax)$/;"	l
b5a	wc.asm	/^ b5a:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
b5b	divide.asm	/^ b5b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
b5b	echo.asm	/^ b5b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b5b	init.asm	/^ b5b:	00 00 00 $/;"	l
b5b	ls.asm	/^     b5b:	48 b8 a6 08 00 00 00 	movabs $0x8a6,%rax$/;"	l
b5b	stressfs.asm	/^ b5b:	48 b8 d0 0f 00 00 00 	movabs $0xfd0,%rax$/;"	l
b5b	usertests.asm	/^     b5b:	8b 55 f8             	mov    -0x8(%rbp),%edx$/;"	l
b5c	cat.asm	/^ b5c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx$/;"	l
b5c	kill.asm	/^ b5c:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
b5c	mkdir.asm	/^ b5c:	00 00 00 $/;"	l
b5c	rm.asm	/^ b5c:	00 00 00 $/;"	l
b5c	sh.asm	/^     b5c:	48 ba fb 1d 00 00 00 	movabs $0x1dfb,%rdx$/;"	l
b5d	grep.asm	/^ b5d:	73 23                	jae    b82 <printf+0x234>$/;"	l
b5d	wc.asm	/^ b5d:	89 c0                	mov    %eax,%eax$/;"	l
b5e	init.asm	/^ b5e:	ff d0                	callq  *%rax$/;"	l
b5e	usertests.asm	/^     b5e:	48 be a1 6b 00 00 00 	movabs $0x6ba1,%rsi$/;"	l
b5f	divide.asm	/^ b5f:	48 89 10             	mov    %rdx,(%rax)$/;"	l
b5f	echo.asm	/^ b5f:	48 8b 10             	mov    (%rax),%rdx$/;"	l
b5f	grep.asm	/^ b5f:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax$/;"	l
b5f	kill.asm	/^ b5f:	3b 45 ec             	cmp    -0x14(%rbp),%eax$/;"	l
b5f	mkdir.asm	/^ b5f:	48 89 10             	mov    %rdx,(%rax)$/;"	l
b5f	rm.asm	/^ b5f:	48 89 10             	mov    %rdx,(%rax)$/;"	l
b5f	wc.asm	/^ b5f:	48 c1 e0 04          	shl    $0x4,%rax$/;"	l
b5f	zombie.asm	/^ b5f:	00 00 00 $/;"	l
b6	divide.asm	/^  b6:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
b6	echo.asm	/^  b6:	48 89 fe             	mov    %rdi,%rsi$/;"	l
b6	ln.asm	/^  b6:	55                   	push   %rbp$/;"	l
b6	zombie.asm	/^  b6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)$/;"	l
b60	cat.asm	/^ b60:	48 89 10             	mov    %rdx,(%rax)$/;"	l
b60	init.asm	/^ b60:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
b61	ln.asm	/^ b61:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
b62	divide.asm	/^ b62:	48 b8 e0 0f 00 00 00 	movabs $0xfe0,%rax$/;"	l
b62	echo.asm	/^ b62:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
b62	kill.asm	/^ b62:	75 10                	jne    b74 <malloc+0xb1>$/;"	l
b62	ls.asm	/^     b62:	00 00 00 $/;"	l
b62	mkdir.asm	/^ b62:	48 b8 e0 0e 00 00 00 	movabs $0xee0,%rax$/;"	l
b62	rm.asm	/^ b62:	48 b8 d0 0e 00 00 00 	movabs $0xed0,%rax$/;"	l
b62	stressfs.asm	/^ b62:	00 00 00 $/;"	l
b62	zombie.asm	/^ b62:	48 8b 00             	mov    (%rax),%rax$/;"	l
b63	cat.asm	/^ b63:	90                   	nop$/;"	l
b63	sh.asm	/^     b63:	00 00 00 $/;"	l
b63	wc.asm	/^ b63:	48 89 c2             	mov    %rax,%rdx$/;"	l
b64	cat.asm	/^ b64:	c9                   	leaveq $/;"	l
b64	init.asm	/^ b64:	48 83 7d f8 ff       	cmpq   $0xffffffffffffffff,-0x8(%rbp)$/;"	l
b64	kill.asm	/^ b64:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b65	cat.asm	/^ b65:	c3                   	retq   $/;"	l
b65	ln.asm	/^ b65:	48 8b 00             	mov    (%rax),%rax$/;"	l
b65	ls.asm	/^     b65:	ff d0                	callq  *%rax$/;"	l
b65	stressfs.asm	/^ b65:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx$/;"	l
b65	usertests.asm	/^     b65:	00 00 00 $/;"	l
b65	zombie.asm	/^ b65:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)$/;"	l
b66	cat.asm	/^ b66:	55                   	push   %rbp$/;"	l
b66	echo.asm	/^ b66:	48 89 10             	mov    %rdx,(%rax)$/;"	l
b66	grep.asm	/^ b66:	8b 95 20 ff ff ff    	mov    -0xe0(%rbp),%edx$/;"	l
b66	sh.asm	/^     b66:	48 89 ce             	mov    %rcx,%rsi$/;"	l
b66	wc.asm	/^ b66:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
b67	cat.asm	/^ b67:	48 89 e5             	mov    %rsp,%rbp$/;"	l
b67	ls.asm	/^     b67:	e9 7a 01 00 00       	jmpq   ce6 <printf+0x373>$/;"	l
b68	kill.asm	/^ b68:	48 8b 10             	mov    (%rax),%rdx$/;"	l
b68	ln.asm	/^ b68:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
b68	usertests.asm	/^     b68:	89 c7                	mov    %eax,%edi$/;"	l
b69	divide.asm	/^ b69:	00 00 00 $/;"	l
b69	echo.asm	/^ b69:	eb 2e                	jmp    b99 <malloc+0xdf>$/;"	l
b69	init.asm	/^ b69:	75 07                	jne    b72 <morecore+0x41>$/;"	l
b69	mkdir.asm	/^ b69:	00 00 00 $/;"	l
b69	rm.asm	/^ b69:	00 00 00 $/;"	l
b69	sh.asm	/^     b69:	48 89 c7             	mov    %rax,%rdi$/;"	l
b69	stressfs.asm	/^ b69:	48 89 10             	mov    %rdx,(%rax)$/;"	l
b69	zombie.asm	/^ b69:	75 23                	jne    b8e <malloc+0x130>$/;"	l
b6a	cat.asm	/^ b6a:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
b6a	usertests.asm	/^     b6a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
b6a	wc.asm	/^ b6a:	48 01 c2             	add    %rax,%rdx$/;"	l
b6b	echo.asm	/^ b6b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b6b	init.asm	/^ b6b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
b6b	kill.asm	/^ b6b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
b6b	zombie.asm	/^ b6b:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
b6c	divide.asm	/^ b6c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx$/;"	l
b6c	grep.asm	/^ b6c:	89 d2                	mov    %edx,%edx$/;"	l
b6c	ln.asm	/^ b6c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b6c	ls.asm	/^     b6c:	83 bd 3c ff ff ff 73 	cmpl   $0x73,-0xc4(%rbp)$/;"	l
b6c	mkdir.asm	/^ b6c:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%rax)$/;"	l
b6c	rm.asm	/^ b6c:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%rax)$/;"	l
b6c	sh.asm	/^     b6c:	48 b8 51 09 00 00 00 	movabs $0x951,%rax$/;"	l
b6c	stressfs.asm	/^ b6c:	90                   	nop$/;"	l
b6d	stressfs.asm	/^ b6d:	c9                   	leaveq $/;"	l
b6d	wc.asm	/^ b6d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b6e	cat.asm	/^ b6e:	89 7d ec             	mov    %edi,-0x14(%rbp)$/;"	l
b6e	grep.asm	/^ b6e:	48 01 d0             	add    %rdx,%rax$/;"	l
b6e	stressfs.asm	/^ b6e:	c3                   	retq   $/;"	l
b6e	zombie.asm	/^ b6e:	89 c7                	mov    %eax,%edi$/;"	l
b6f	echo.asm	/^ b6f:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
b6f	kill.asm	/^ b6f:	48 89 10             	mov    %rdx,(%rax)$/;"	l
b6f	stressfs.asm	/^ b6f:	55                   	push   %rbp$/;"	l
b6f	usertests.asm	/^     b6f:	48 b9 c7 61 00 00 00 	movabs $0x61c7,%rcx$/;"	l
b7	cat.asm	/^  b7:	ff d0                	callq  *%rax$/;"	l
b7	forktest.asm	/^  b7:	ff d2                	callq  *%rdx$/;"	l
b7	grep.asm	/^  b7:	48 b8 a2 05 00 00 00 	movabs $0x5a2,%rax$/;"	l
b7	init.asm	/^  b7:	79 2c                	jns    e5 <main+0xe5>$/;"	l
b7	ln.asm	/^  b7:	48 89 e5             	mov    %rsp,%rbp$/;"	l
b7	mkdir.asm	/^  b7:	3b 45 ec             	cmp    -0x14(%rbp),%eax$/;"	l
b7	rm.asm	/^  b7:	3b 45 ec             	cmp    -0x14(%rbp),%eax$/;"	l
b7	stressfs.asm	/^  b7:	0f b6 45 e8          	movzbl -0x18(%rbp),%eax$/;"	l
b7	wc.asm	/^  b7:	48 be a0 10 00 00 00 	movabs $0x10a0,%rsi$/;"	l
b70	divide.asm	/^ b70:	48 89 10             	mov    %rdx,(%rax)$/;"	l
b70	init.asm	/^ b70:	eb 36                	jmp    ba8 <morecore+0x77>$/;"	l
b70	ln.asm	/^ b70:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
b70	stressfs.asm	/^ b70:	48 89 e5             	mov    %rsp,%rbp$/;"	l
b70	zombie.asm	/^ b70:	48 b8 e5 09 00 00 00 	movabs $0x9e5,%rax$/;"	l
b71	cat.asm	/^ b71:	81 7d ec ff 0f 00 00 	cmpl   $0xfff,-0x14(%rbp)$/;"	l
b71	grep.asm	/^ b71:	8b 95 20 ff ff ff    	mov    -0xe0(%rbp),%edx$/;"	l
b71	wc.asm	/^ b71:	48 8b 00             	mov    (%rax),%rax$/;"	l
b72	echo.asm	/^ b72:	2b 45 ec             	sub    -0x14(%rbp),%eax$/;"	l
b72	init.asm	/^ b72:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b72	kill.asm	/^ b72:	eb 2e                	jmp    ba2 <malloc+0xdf>$/;"	l
b73	divide.asm	/^ b73:	90                   	nop$/;"	l
b73	ln.asm	/^ b73:	3b 45 ec             	cmp    -0x14(%rbp),%eax$/;"	l
b73	ls.asm	/^     b73:	0f 85 a5 00 00 00    	jne    c1e <printf+0x2ab>$/;"	l
b73	mkdir.asm	/^ b73:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
b73	rm.asm	/^ b73:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
b73	sh.asm	/^     b73:	00 00 00 $/;"	l
b73	stressfs.asm	/^ b73:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
b74	divide.asm	/^ b74:	c9                   	leaveq $/;"	l
b74	kill.asm	/^ b74:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b74	wc.asm	/^ b74:	48 39 c2             	cmp    %rax,%rdx$/;"	l
b75	divide.asm	/^ b75:	c3                   	retq   $/;"	l
b75	echo.asm	/^ b75:	89 c2                	mov    %eax,%edx$/;"	l
b76	divide.asm	/^ b76:	55                   	push   %rbp$/;"	l
b76	init.asm	/^ b76:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
b76	ln.asm	/^ b76:	72 65                	jb     bdd <malloc+0xfa>$/;"	l
b76	sh.asm	/^     b76:	ff d0                	callq  *%rax$/;"	l
b76	usertests.asm	/^     b76:	00 00 00 $/;"	l
b77	divide.asm	/^ b77:	48 89 e5             	mov    %rsp,%rbp$/;"	l
b77	echo.asm	/^ b77:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b77	grep.asm	/^ b77:	83 c2 08             	add    $0x8,%edx$/;"	l
b77	mkdir.asm	/^ b77:	48 8b 00             	mov    (%rax),%rax$/;"	l
b77	rm.asm	/^ b77:	48 8b 00             	mov    (%rax),%rax$/;"	l
b77	stressfs.asm	/^ b77:	89 7d ec             	mov    %edi,-0x14(%rbp)$/;"	l
b77	wc.asm	/^ b77:	75 2d                	jne    ba6 <free+0xc1>$/;"	l
b77	zombie.asm	/^ b77:	00 00 00 $/;"	l
b78	cat.asm	/^ b78:	77 07                	ja     b81 <morecore+0x1b>$/;"	l
b78	kill.asm	/^ b78:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
b78	ln.asm	/^ b78:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b78	sh.asm	/^     b78:	85 c0                	test   %eax,%eax$/;"	l
b79	ls.asm	/^     b79:	8b 85 20 ff ff ff    	mov    -0xe0(%rbp),%eax$/;"	l
b79	usertests.asm	/^     b79:	ff d1                	callq  *%rcx$/;"	l
b79	wc.asm	/^ b79:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
b7a	cat.asm	/^ b7a:	c7 45 ec 00 10 00 00 	movl   $0x1000,-0x14(%rbp)$/;"	l
b7a	divide.asm	/^ b7a:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
b7a	grep.asm	/^ b7a:	89 95 20 ff ff ff    	mov    %edx,-0xe0(%rbp)$/;"	l
b7a	init.asm	/^ b7a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
b7a	mkdir.asm	/^ b7a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
b7a	rm.asm	/^ b7a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
b7a	sh.asm	/^     b7a:	74 58                	je     bd4 <parseline+0x110>$/;"	l
b7a	stressfs.asm	/^ b7a:	81 7d ec ff 0f 00 00 	cmpl   $0xfff,-0x14(%rbp)$/;"	l
b7a	zombie.asm	/^ b7a:	ff d0                	callq  *%rax$/;"	l
b7b	echo.asm	/^ b7b:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
b7b	kill.asm	/^ b7b:	2b 45 ec             	sub    -0x14(%rbp),%eax$/;"	l
b7b	usertests.asm	/^     b7b:	48 b8 02 60 00 00 00 	movabs $0x6002,%rax$/;"	l
b7c	ln.asm	/^ b7c:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
b7c	sh.asm	/^     b7c:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi$/;"	l
b7c	zombie.asm	/^ b7c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
b7d	wc.asm	/^ b7d:	8b 50 08             	mov    0x8(%rax),%edx$/;"	l
b7e	divide.asm	/^ b7e:	89 7d ec             	mov    %edi,-0x14(%rbp)$/;"	l
b7e	echo.asm	/^ b7e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b7e	init.asm	/^ b7e:	8b 55 ec             	mov    -0x14(%rbp),%edx$/;"	l
b7e	kill.asm	/^ b7e:	89 c2                	mov    %eax,%edx$/;"	l
b7e	mkdir.asm	/^ b7e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b7e	rm.asm	/^ b7e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b7f	ln.asm	/^ b7f:	3b 45 ec             	cmp    -0x14(%rbp),%eax$/;"	l
b7f	ls.asm	/^     b7f:	83 f8 30             	cmp    $0x30,%eax$/;"	l
b8	kill.asm	/^  b8:	89 d1                	mov    %edx,%ecx$/;"	l
b80	grep.asm	/^ b80:	eb 12                	jmp    b94 <printf+0x246>$/;"	l
b80	kill.asm	/^ b80:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b80	sh.asm	/^     b80:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
b80	wc.asm	/^ b80:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b80	zombie.asm	/^ b80:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)$/;"	l
b81	cat.asm	/^ b81:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
b81	divide.asm	/^ b81:	81 7d ec ff 0f 00 00 	cmpl   $0xfff,-0x14(%rbp)$/;"	l
b81	init.asm	/^ b81:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
b81	stressfs.asm	/^ b81:	77 07                	ja     b8a <morecore+0x1b>$/;"	l
b82	echo.asm	/^ b82:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
b82	grep.asm	/^ b82:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax$/;"	l
b82	ln.asm	/^ b82:	75 10                	jne    b94 <malloc+0xb1>$/;"	l
b82	ls.asm	/^     b82:	73 23                	jae    ba7 <printf+0x234>$/;"	l
b82	mkdir.asm	/^ b82:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
b82	rm.asm	/^ b82:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
b82	usertests.asm	/^     b82:	00 00 00 $/;"	l
b83	stressfs.asm	/^ b83:	c7 45 ec 00 10 00 00 	movl   $0x1000,-0x14(%rbp)$/;"	l
b84	cat.asm	/^ b84:	c1 e0 04             	shl    $0x4,%eax$/;"	l
b84	init.asm	/^ b84:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
b84	kill.asm	/^ b84:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
b84	ln.asm	/^ b84:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b84	ls.asm	/^     b84:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax$/;"	l
b84	sh.asm	/^     b84:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
b84	wc.asm	/^ b84:	48 8b 00             	mov    (%rax),%rax$/;"	l
b85	echo.asm	/^ b85:	89 c0                	mov    %eax,%eax$/;"	l
b85	mkdir.asm	/^ b85:	3b 45 ec             	cmp    -0x14(%rbp),%eax$/;"	l
b85	rm.asm	/^ b85:	3b 45 ec             	cmp    -0x14(%rbp),%eax$/;"	l
b85	usertests.asm	/^     b85:	ff d0                	callq  *%rax$/;"	l
b85	zombie.asm	/^ b85:	75 07                	jne    b8e <malloc+0x130>$/;"	l
b87	cat.asm	/^ b87:	89 c7                	mov    %eax,%edi$/;"	l
b87	echo.asm	/^ b87:	48 c1 e0 04          	shl    $0x4,%rax$/;"	l
b87	kill.asm	/^ b87:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b87	usertests.asm	/^     b87:	81 7d fc 00 02 00 00 	cmpl   $0x200,-0x4(%rbp)$/;"	l
b87	wc.asm	/^ b87:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
b87	zombie.asm	/^ b87:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
b88	divide.asm	/^ b88:	77 07                	ja     b91 <morecore+0x1b>$/;"	l
b88	init.asm	/^ b88:	48 83 c0 10          	add    $0x10,%rax$/;"	l
b88	ln.asm	/^ b88:	48 8b 10             	mov    (%rax),%rdx$/;"	l
b88	mkdir.asm	/^ b88:	72 65                	jb     bef <malloc+0xfa>$/;"	l
b88	rm.asm	/^ b88:	72 65                	jb     bef <malloc+0xfa>$/;"	l
b89	cat.asm	/^ b89:	48 b8 74 05 00 00 00 	movabs $0x574,%rax$/;"	l
b89	grep.asm	/^ b89:	48 8d 50 08          	lea    0x8(%rax),%rdx$/;"	l
b89	sh.asm	/^     b89:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
b8a	divide.asm	/^ b8a:	c7 45 ec 00 10 00 00 	movl   $0x1000,-0x14(%rbp)$/;"	l
b8a	mkdir.asm	/^ b8a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b8a	rm.asm	/^ b8a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b8a	stressfs.asm	/^ b8a:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
b8a	wc.asm	/^ b8a:	01 c2                	add    %eax,%edx$/;"	l
b8b	echo.asm	/^ b8b:	48 01 45 f8          	add    %rax,-0x8(%rbp)$/;"	l
b8b	kill.asm	/^ b8b:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
b8b	ln.asm	/^ b8b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
b8b	ls.asm	/^     b8b:	8b 95 20 ff ff ff    	mov    -0xe0(%rbp),%edx$/;"	l
b8c	init.asm	/^ b8c:	48 89 c7             	mov    %rax,%rdi$/;"	l
b8c	wc.asm	/^ b8c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
b8c	zombie.asm	/^ b8c:	eb 18                	jmp    ba6 <malloc+0x148>$/;"	l
b8d	grep.asm	/^ b8d:	48 89 95 28 ff ff ff 	mov    %rdx,-0xd8(%rbp)$/;"	l
b8d	stressfs.asm	/^ b8d:	c1 e0 04             	shl    $0x4,%eax$/;"	l
b8e	kill.asm	/^ b8e:	89 c0                	mov    %eax,%eax$/;"	l
b8e	mkdir.asm	/^ b8e:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
b8e	rm.asm	/^ b8e:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
b8e	sh.asm	/^     b8e:	48 89 c7             	mov    %rax,%rdi$/;"	l
b8e	usertests.asm	/^     b8e:	74 38                	je     bc8 <writetest1+0x22f>$/;"	l
b8e	zombie.asm	/^ b8e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b8f	echo.asm	/^ b8f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b8f	init.asm	/^ b8f:	48 b8 ff 09 00 00 00 	movabs $0x9ff,%rax$/;"	l
b8f	ln.asm	/^ b8f:	48 89 10             	mov    %rdx,(%rax)$/;"	l
b9	cat.asm	/^  b9:	90                   	nop$/;"	l
b9	divide.asm	/^  b9:	6b c0 64             	imul   $0x64,%eax,%eax$/;"	l
b9	echo.asm	/^  b9:	48 89 75 f8          	mov    %rsi,-0x8(%rbp)$/;"	l
b9	forktest.asm	/^  b9:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)$/;"	l
b9	init.asm	/^  b9:	48 be 12 0d 00 00 00 	movabs $0xd12,%rsi$/;"	l
b9	ls.asm	/^      b9:	89 d3                	mov    %edx,%ebx$/;"	l
b9	sh.asm	/^      b9:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
b90	cat.asm	/^ b90:	00 00 00 $/;"	l
b90	kill.asm	/^ b90:	48 c1 e0 04          	shl    $0x4,%rax$/;"	l
b90	stressfs.asm	/^ b90:	89 c7                	mov    %eax,%edi$/;"	l
b90	usertests.asm	/^     b90:	48 b8 08 88 00 00 00 	movabs $0x8808,%rax$/;"	l
b90	wc.asm	/^ b90:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
b91	divide.asm	/^ b91:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
b91	ls.asm	/^     b91:	89 d2                	mov    %edx,%edx$/;"	l
b91	mkdir.asm	/^ b91:	3b 45 ec             	cmp    -0x14(%rbp),%eax$/;"	l
b91	rm.asm	/^ b91:	3b 45 ec             	cmp    -0x14(%rbp),%eax$/;"	l
b91	sh.asm	/^     b91:	48 b8 aa 07 00 00 00 	movabs $0x7aa,%rax$/;"	l
b92	ln.asm	/^ b92:	eb 2e                	jmp    bc2 <malloc+0xdf>$/;"	l
b92	stressfs.asm	/^ b92:	48 b8 7d 05 00 00 00 	movabs $0x57d,%rax$/;"	l
b92	zombie.asm	/^ b92:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
b93	cat.asm	/^ b93:	ff d0                	callq  *%rax$/;"	l
b93	echo.asm	/^ b93:	8b 55 ec             	mov    -0x14(%rbp),%edx$/;"	l
b93	ls.asm	/^     b93:	48 01 d0             	add    %rdx,%rax$/;"	l
b93	wc.asm	/^ b93:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b94	divide.asm	/^ b94:	c1 e0 04             	shl    $0x4,%eax$/;"	l
b94	grep.asm	/^ b94:	48 8b 00             	mov    (%rax),%rax$/;"	l
b94	kill.asm	/^ b94:	48 01 45 f8          	add    %rax,-0x8(%rbp)$/;"	l
b94	ln.asm	/^ b94:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b94	mkdir.asm	/^ b94:	75 10                	jne    ba6 <malloc+0xb1>$/;"	l
b94	rm.asm	/^ b94:	75 10                	jne    ba6 <malloc+0xb1>$/;"	l
b95	cat.asm	/^ b95:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
b96	echo.asm	/^ b96:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
b96	init.asm	/^ b96:	00 00 00 $/;"	l
b96	ls.asm	/^     b96:	8b 95 20 ff ff ff    	mov    -0xe0(%rbp),%edx$/;"	l
b96	mkdir.asm	/^ b96:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b96	rm.asm	/^ b96:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b96	zombie.asm	/^ b96:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b97	divide.asm	/^ b97:	89 c7                	mov    %eax,%edi$/;"	l
b97	grep.asm	/^ b97:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)$/;"	l
b97	usertests.asm	/^     b97:	00 00 00 $/;"	l
b97	wc.asm	/^ b97:	48 8b 00             	mov    (%rax),%rax$/;"	l
b98	kill.asm	/^ b98:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b98	ln.asm	/^ b98:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
b98	sh.asm	/^     b98:	00 00 00 $/;"	l
b99	cat.asm	/^ b99:	48 83 7d f8 ff       	cmpq   $0xffffffffffffffff,-0x8(%rbp)$/;"	l
b99	divide.asm	/^ b99:	48 b8 84 05 00 00 00 	movabs $0x584,%rax$/;"	l
b99	echo.asm	/^ b99:	48 b8 80 0e 00 00 00 	movabs $0xe80,%rax$/;"	l
b99	init.asm	/^ b99:	ff d0                	callq  *%rax$/;"	l
b99	stressfs.asm	/^ b99:	00 00 00 $/;"	l
b9a	mkdir.asm	/^ b9a:	48 8b 10             	mov    (%rax),%rdx$/;"	l
b9a	rm.asm	/^ b9a:	48 8b 10             	mov    (%rax),%rdx$/;"	l
b9a	usertests.asm	/^     b9a:	8b 00                	mov    (%rax),%eax$/;"	l
b9a	wc.asm	/^ b9a:	48 8b 10             	mov    (%rax),%rdx$/;"	l
b9a	zombie.asm	/^ b9a:	48 8b 00             	mov    (%rax),%rax$/;"	l
b9b	init.asm	/^ b9b:	48 b8 d0 0f 00 00 00 	movabs $0xfd0,%rax$/;"	l
b9b	ln.asm	/^ b9b:	2b 45 ec             	sub    -0x14(%rbp),%eax$/;"	l
b9b	sh.asm	/^     b9b:	ff d0                	callq  *%rax$/;"	l
b9c	kill.asm	/^ b9c:	8b 55 ec             	mov    -0x14(%rbp),%edx$/;"	l
b9c	ls.asm	/^     b9c:	83 c2 08             	add    $0x8,%edx$/;"	l
b9c	stressfs.asm	/^ b9c:	ff d0                	callq  *%rax$/;"	l
b9c	usertests.asm	/^     b9c:	8b 55 fc             	mov    -0x4(%rbp),%edx$/;"	l
b9d	mkdir.asm	/^ b9d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
b9d	rm.asm	/^ b9d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
b9d	sh.asm	/^     b9d:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx$/;"	l
b9d	wc.asm	/^ b9d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
b9d	zombie.asm	/^ b9d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
b9e	cat.asm	/^ b9e:	75 07                	jne    ba7 <morecore+0x41>$/;"	l
b9e	grep.asm	/^ b9e:	48 83 bd 48 ff ff ff 	cmpq   $0x0,-0xb8(%rbp)$/;"	l
b9e	ln.asm	/^ b9e:	89 c2                	mov    %eax,%edx$/;"	l
b9e	stressfs.asm	/^ b9e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
b9f	kill.asm	/^ b9f:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
b9f	ls.asm	/^     b9f:	89 95 20 ff ff ff    	mov    %edx,-0xe0(%rbp)$/;"	l
b9f	usertests.asm	/^     b9f:	48 be be 6b 00 00 00 	movabs $0x6bbe,%rsi$/;"	l
ba	cat.asm	/^  ba:	c9                   	leaveq $/;"	l
ba	kill.asm	/^  ba:	fc                   	cld    $/;"	l
ba	ln.asm	/^  ba:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ba	mkdir.asm	/^  ba:	7c 8e                	jl     4a <main+0x4a>$/;"	l
ba	rm.asm	/^  ba:	7c 8e                	jl     4a <main+0x4a>$/;"	l
ba	usertests.asm	/^      ba:	00 00 00 $/;"	l
ba	zombie.asm	/^  ba:	eb 0a                	jmp    c6 <strcmp+0x1c>$/;"	l
ba0	cat.asm	/^ ba0:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ba0	divide.asm	/^ ba0:	00 00 00 $/;"	l
ba0	echo.asm	/^ ba0:	00 00 00 $/;"	l
ba0	ln.asm	/^ ba0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ba1	mkdir.asm	/^ ba1:	48 89 10             	mov    %rdx,(%rax)$/;"	l
ba1	rm.asm	/^ ba1:	48 89 10             	mov    %rdx,(%rax)$/;"	l
ba1	sh.asm	/^     ba1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ba1	wc.asm	/^ ba1:	48 89 10             	mov    %rdx,(%rax)$/;"	l
ba1	zombie.asm	/^ ba1:	e9 41 ff ff ff       	jmpq   ae7 <malloc+0x89>$/;"	l
ba2	init.asm	/^ ba2:	00 00 00 $/;"	l
ba2	kill.asm	/^ ba2:	48 b8 90 0e 00 00 00 	movabs $0xe90,%rax$/;"	l
ba2	stressfs.asm	/^ ba2:	48 83 7d f8 ff       	cmpq   $0xffffffffffffffff,-0x8(%rbp)$/;"	l
ba3	divide.asm	/^ ba3:	ff d0                	callq  *%rax$/;"	l
ba3	echo.asm	/^ ba3:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
ba4	ln.asm	/^ ba4:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
ba4	mkdir.asm	/^ ba4:	eb 2e                	jmp    bd4 <malloc+0xdf>$/;"	l
ba4	rm.asm	/^ ba4:	eb 2e                	jmp    bd4 <malloc+0xdf>$/;"	l
ba4	wc.asm	/^ ba4:	eb 0e                	jmp    bb4 <free+0xcf>$/;"	l
ba5	cat.asm	/^ ba5:	eb 36                	jmp    bdd <morecore+0x77>$/;"	l
ba5	divide.asm	/^ ba5:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ba5	grep.asm	/^ ba5:	00 $/;"	l
ba5	init.asm	/^ ba5:	48 8b 00             	mov    (%rax),%rax$/;"	l
ba5	ls.asm	/^     ba5:	eb 12                	jmp    bb9 <printf+0x246>$/;"	l
ba5	sh.asm	/^     ba5:	48 89 d6             	mov    %rdx,%rsi$/;"	l
ba6	grep.asm	/^ ba6:	75 3e                	jne    be6 <printf+0x298>$/;"	l
ba6	mkdir.asm	/^ ba6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ba6	rm.asm	/^ ba6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ba6	usertests.asm	/^     ba6:	00 00 00 $/;"	l
ba6	wc.asm	/^ ba6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ba6	zombie.asm	/^ ba6:	c9                   	leaveq $/;"	l
ba7	cat.asm	/^ ba7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ba7	echo.asm	/^ ba7:	48 89 10             	mov    %rdx,(%rax)$/;"	l
ba7	ln.asm	/^ ba7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ba7	ls.asm	/^     ba7:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax$/;"	l
ba7	stressfs.asm	/^ ba7:	75 07                	jne    bb0 <morecore+0x41>$/;"	l
ba7	zombie.asm	/^ ba7:	c3                   	retq   $/;"	l
ba8	grep.asm	/^ ba8:	48 b8 1e 10 00 00 00 	movabs $0x101e,%rax$/;"	l
ba8	init.asm	/^ ba8:	c9                   	leaveq $/;"	l
ba8	sh.asm	/^     ba8:	48 89 c7             	mov    %rax,%rdi$/;"	l
ba9	divide.asm	/^ ba9:	48 83 7d f8 ff       	cmpq   $0xffffffffffffffff,-0x8(%rbp)$/;"	l
ba9	init.asm	/^ ba9:	c3                   	retq   $/;"	l
ba9	kill.asm	/^ ba9:	00 00 00 $/;"	l
ba9	stressfs.asm	/^ ba9:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ba9	usertests.asm	/^     ba9:	89 c7                	mov    %eax,%edi$/;"	l
baa	echo.asm	/^ baa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
baa	init.asm	/^ baa:	55                   	push   %rbp$/;"	l
baa	mkdir.asm	/^ baa:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
baa	rm.asm	/^ baa:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
baa	wc.asm	/^ baa:	48 8b 10             	mov    (%rax),%rdx$/;"	l
bab	cat.asm	/^ bab:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
bab	init.asm	/^ bab:	48 89 e5             	mov    %rsp,%rbp$/;"	l
bab	ln.asm	/^ bab:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
bab	sh.asm	/^     bab:	48 b8 c4 0a 00 00 00 	movabs $0xac4,%rax$/;"	l
bab	usertests.asm	/^     bab:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
bac	kill.asm	/^ bac:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
backcmd	sh.c	/^backcmd(struct cmd *subcmd)$/;"	f
backcmd	sh.c	/^struct backcmd {$/;"	s	file:
bad	kernel.asm	/^ bad:$/;"	l
bad	kernel.asm	/^bad:$/;"	l
bad	mkdir.asm	/^ bad:	2b 45 ec             	sub    -0x14(%rbp),%eax$/;"	l
bad	rm.asm	/^ bad:	2b 45 ec             	sub    -0x14(%rbp),%eax$/;"	l
bad	wc.asm	/^ bad:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
bae	divide.asm	/^ bae:	75 07                	jne    bb7 <morecore+0x41>$/;"	l
bae	echo.asm	/^ bae:	48 83 c0 10          	add    $0x10,%rax$/;"	l
bae	init.asm	/^ bae:	48 83 ec 30          	sub    $0x30,%rsp$/;"	l
bae	ln.asm	/^ bae:	89 c0                	mov    %eax,%eax$/;"	l
bae	ls.asm	/^     bae:	48 8d 50 08          	lea    0x8(%rax),%rdx$/;"	l
bae	stressfs.asm	/^ bae:	eb 36                	jmp    be6 <morecore+0x77>$/;"	l
baf	cat.asm	/^ baf:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
baf	grep.asm	/^ baf:	00 00 00 $/;"	l
balloc	fs.c	/^balloc(uint dev)$/;"	f	file:
balloc	mkfs.c	/^balloc(int used)$/;"	f
base	umalloc.c	/^static Header base;$/;"	v	file:
base_15_0	mmu.h	/^  uint base_15_0 : 16; \/\/ Low bits of segment base address$/;"	m	struct:segdesc
base_23_16	mmu.h	/^  uint base_23_16 : 8; \/\/ Middle bits of segment base address$/;"	m	struct:segdesc
base_31_24	mmu.h	/^  uint base_31_24 : 8; \/\/ High bits of segment base address$/;"	m	struct:segdesc
bb	cat.asm	/^  bb:	c3                   	retq   $/;"	l
bb	kill.asm	/^  bb:	f3 aa                	rep stos %al,%es:(%rdi)$/;"	l
bb	ls.asm	/^      bb:	29 c3                	sub    %eax,%ebx$/;"	l
bb	stressfs.asm	/^  bb:	89 c2                	mov    %eax,%edx$/;"	l
bb0	divide.asm	/^ bb0:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
bb0	kill.asm	/^ bb0:	48 89 10             	mov    %rdx,(%rax)$/;"	l
bb0	ln.asm	/^ bb0:	48 c1 e0 04          	shl    $0x4,%rax$/;"	l
bb0	mkdir.asm	/^ bb0:	89 c2                	mov    %eax,%edx$/;"	l
bb0	rm.asm	/^ bb0:	89 c2                	mov    %eax,%edx$/;"	l
bb0	stressfs.asm	/^ bb0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
bb0	usertests.asm	/^     bb0:	48 b9 c7 61 00 00 00 	movabs $0x61c7,%rcx$/;"	l
bb1	wc.asm	/^ bb1:	48 89 10             	mov    %rdx,(%rax)$/;"	l
bb2	echo.asm	/^ bb2:	eb 4e                	jmp    c02 <malloc+0x148>$/;"	l
bb2	grep.asm	/^ bb2:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)$/;"	l
bb2	init.asm	/^ bb2:	89 7d dc             	mov    %edi,-0x24(%rbp)$/;"	l
bb2	ls.asm	/^     bb2:	48 89 95 28 ff ff ff 	mov    %rdx,-0xd8(%rbp)$/;"	l
bb2	mkdir.asm	/^ bb2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
bb2	rm.asm	/^ bb2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
bb2	sh.asm	/^     bb2:	00 00 00 $/;"	l
bb3	cat.asm	/^ bb3:	8b 55 ec             	mov    -0x14(%rbp),%edx$/;"	l
bb3	kill.asm	/^ bb3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
bb4	echo.asm	/^ bb4:	48 b8 80 0e 00 00 00 	movabs $0xe80,%rax$/;"	l
bb4	ln.asm	/^ bb4:	48 01 45 f8          	add    %rax,-0x8(%rbp)$/;"	l
bb4	stressfs.asm	/^ bb4:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
bb4	wc.asm	/^ bb4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
bb5	divide.asm	/^ bb5:	eb 36                	jmp    bed <morecore+0x77>$/;"	l
bb5	init.asm	/^ bb5:	8b 45 dc             	mov    -0x24(%rbp),%eax$/;"	l
bb5	sh.asm	/^     bb5:	ff d0                	callq  *%rax$/;"	l
bb6	cat.asm	/^ bb6:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
bb6	mkdir.asm	/^ bb6:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
bb6	rm.asm	/^ bb6:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
bb7	divide.asm	/^ bb7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
bb7	kill.asm	/^ bb7:	48 83 c0 10          	add    $0x10,%rax$/;"	l
bb7	sh.asm	/^     bb7:	48 89 c2             	mov    %rax,%rdx$/;"	l
bb7	usertests.asm	/^     bb7:	00 00 00 $/;"	l
bb8	init.asm	/^ bb8:	48 83 c0 0f          	add    $0xf,%rax$/;"	l
bb8	ln.asm	/^ bb8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
bb8	stressfs.asm	/^ bb8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
bb8	wc.asm	/^ bb8:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
bb9	cat.asm	/^ bb9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
bb9	grep.asm	/^ bb9:	eb 2b                	jmp    be6 <printf+0x298>$/;"	l
bb9	ls.asm	/^     bb9:	48 8b 00             	mov    (%rax),%rax$/;"	l
bb9	mkdir.asm	/^ bb9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
bb9	rm.asm	/^ bb9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
bba	sh.asm	/^     bba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
bba	usertests.asm	/^     bba:	ff d1                	callq  *%rcx$/;"	l
bbb	divide.asm	/^ bbb:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
bbb	echo.asm	/^ bbb:	00 00 00 $/;"	l
bbb	grep.asm	/^ bbb:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax$/;"	l
bbb	kill.asm	/^ bbb:	eb 4e                	jmp    c0b <malloc+0x148>$/;"	l
bbb	wc.asm	/^ bbb:	89 c0                	mov    %eax,%eax$/;"	l
bbc	init.asm	/^ bbc:	48 c1 e8 04          	shr    $0x4,%rax$/;"	l
bbc	ln.asm	/^ bbc:	8b 55 ec             	mov    -0x14(%rbp),%edx$/;"	l
bbc	ls.asm	/^     bbc:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)$/;"	l
bbc	stressfs.asm	/^ bbc:	8b 55 ec             	mov    -0x14(%rbp),%edx$/;"	l
bbc	usertests.asm	/^     bbc:	48 b8 02 60 00 00 00 	movabs $0x6002,%rax$/;"	l
bbd	cat.asm	/^ bbd:	48 83 c0 10          	add    $0x10,%rax$/;"	l
bbd	kill.asm	/^ bbd:	48 b8 90 0e 00 00 00 	movabs $0xe90,%rax$/;"	l
bbd	mkdir.asm	/^ bbd:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
bbd	rm.asm	/^ bbd:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
bbd	wc.asm	/^ bbd:	48 c1 e0 04          	shl    $0x4,%rax$/;"	l
bbe	echo.asm	/^ bbe:	48 8b 00             	mov    (%rax),%rax$/;"	l
bbe	sh.asm	/^     bbe:	48 89 d6             	mov    %rdx,%rsi$/;"	l
bbf	divide.asm	/^ bbf:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
bbf	ln.asm	/^ bbf:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
bbf	stressfs.asm	/^ bbf:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
bc	cat.asm	/^  bc:	55                   	push   %rbp$/;"	l
bc	divide.asm	/^  bc:	99                   	cltd   $/;"	l
bc	mkdir.asm	/^  bc:	48 b8 e0 03 00 00 00 	movabs $0x3e0,%rax$/;"	l
bc	rm.asm	/^  bc:	48 b8 e0 03 00 00 00 	movabs $0x3e0,%rax$/;"	l
bc	zombie.asm	/^  bc:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)$/;"	l
bc0	init.asm	/^ bc0:	83 c0 01             	add    $0x1,%eax$/;"	l
bc0	mkdir.asm	/^ bc0:	89 c0                	mov    %eax,%eax$/;"	l
bc0	rm.asm	/^ bc0:	89 c0                	mov    %eax,%eax$/;"	l
bc1	cat.asm	/^ bc1:	48 89 c7             	mov    %rax,%rdi$/;"	l
bc1	echo.asm	/^ bc1:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)$/;"	l
bc1	sh.asm	/^     bc1:	48 89 c7             	mov    %rax,%rdi$/;"	l
bc1	wc.asm	/^ bc1:	48 89 c2             	mov    %rax,%rdx$/;"	l
bc2	grep.asm	/^ bc2:	0f b6 00             	movzbl (%rax),%eax$/;"	l
bc2	ln.asm	/^ bc2:	48 b8 d0 0e 00 00 00 	movabs $0xed0,%rax$/;"	l
bc2	mkdir.asm	/^ bc2:	48 c1 e0 04          	shl    $0x4,%rax$/;"	l
bc2	rm.asm	/^ bc2:	48 c1 e0 04          	shl    $0x4,%rax$/;"	l
bc2	stressfs.asm	/^ bc2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
bc3	divide.asm	/^ bc3:	8b 55 ec             	mov    -0x14(%rbp),%edx$/;"	l
bc3	init.asm	/^ bc3:	89 45 ec             	mov    %eax,-0x14(%rbp)$/;"	l
bc3	ls.asm	/^     bc3:	48 83 bd 48 ff ff ff 	cmpq   $0x0,-0xb8(%rbp)$/;"	l
bc3	usertests.asm	/^     bc3:	00 00 00 $/;"	l
bc4	cat.asm	/^ bc4:	48 b8 34 0a 00 00 00 	movabs $0xa34,%rax$/;"	l
bc4	kill.asm	/^ bc4:	00 00 00 $/;"	l
bc4	sh.asm	/^     bc4:	48 b8 e6 06 00 00 00 	movabs $0x6e6,%rax$/;"	l
bc4	wc.asm	/^ bc4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
bc5	echo.asm	/^ bc5:	75 23                	jne    bea <malloc+0x130>$/;"	l
bc5	grep.asm	/^ bc5:	0f be d0             	movsbl %al,%edx$/;"	l
bc6	divide.asm	/^ bc6:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
bc6	init.asm	/^ bc6:	48 b8 d0 0f 00 00 00 	movabs $0xfd0,%rax$/;"	l
bc6	mkdir.asm	/^ bc6:	48 01 45 f8          	add    %rax,-0x8(%rbp)$/;"	l
bc6	rm.asm	/^ bc6:	48 01 45 f8          	add    %rax,-0x8(%rbp)$/;"	l
bc6	stressfs.asm	/^ bc6:	48 83 c0 10          	add    $0x10,%rax$/;"	l
bc6	usertests.asm	/^     bc6:	ff d0                	callq  *%rax$/;"	l
bc7	echo.asm	/^ bc7:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
bc7	kill.asm	/^ bc7:	48 8b 00             	mov    (%rax),%rax$/;"	l
bc8	grep.asm	/^ bc8:	8b 85 1c ff ff ff    	mov    -0xe4(%rbp),%eax$/;"	l
bc8	usertests.asm	/^     bc8:	48 b8 40 88 00 00 00 	movabs $0x8840,%rax$/;"	l
bc8	wc.asm	/^ bc8:	48 01 d0             	add    %rdx,%rax$/;"	l
bc9	divide.asm	/^ bc9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
bc9	ln.asm	/^ bc9:	00 00 00 $/;"	l
bca	echo.asm	/^ bca:	89 c7                	mov    %eax,%edi$/;"	l
bca	kill.asm	/^ bca:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)$/;"	l
bca	ls.asm	/^     bca:	00 $/;"	l
bca	mkdir.asm	/^ bca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
bca	rm.asm	/^ bca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
bca	stressfs.asm	/^ bca:	48 89 c7             	mov    %rax,%rdi$/;"	l
bcache	bio.c	/^} bcache;$/;"	v	typeref:struct:__anon4
bcb	cat.asm	/^ bcb:	00 00 00 $/;"	l
bcb	ls.asm	/^     bcb:	75 3e                	jne    c0b <printf+0x298>$/;"	l
bcb	sh.asm	/^     bcb:	00 00 00 $/;"	l
bcb	wc.asm	/^ bcb:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax$/;"	l
bcc	echo.asm	/^ bcc:	48 b8 41 0a 00 00 00 	movabs $0xa41,%rax$/;"	l
bcc	ln.asm	/^ bcc:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
bcd	divide.asm	/^ bcd:	48 83 c0 10          	add    $0x10,%rax$/;"	l
bcd	init.asm	/^ bcd:	00 00 00 $/;"	l
bcd	kernel.asm	/^  bcd = (sb & (1 << 2)) == 0;$/;"	d
bcd	ls.asm	/^     bcd:	48 b8 57 10 00 00 00 	movabs $0x1057,%rax$/;"	l
bcd	stressfs.asm	/^ bcd:	48 b8 3d 0a 00 00 00 	movabs $0xa3d,%rax$/;"	l
bce	cat.asm	/^ bce:	ff d0                	callq  *%rax$/;"	l
bce	grep.asm	/^ bce:	89 d6                	mov    %edx,%esi$/;"	l
bce	kill.asm	/^ bce:	75 23                	jne    bf3 <malloc+0x130>$/;"	l
bce	mkdir.asm	/^ bce:	8b 55 ec             	mov    -0x14(%rbp),%edx$/;"	l
bce	rm.asm	/^ bce:	8b 55 ec             	mov    -0x14(%rbp),%edx$/;"	l
bce	sh.asm	/^     bce:	ff d0                	callq  *%rax$/;"	l
bcf	usertests.asm	/^     bcf:	00 00 00 $/;"	l
bcf	wc.asm	/^ bcf:	75 27                	jne    bf8 <free+0x113>$/;"	l
bcmd	sh.asm	/^    bcmd = (struct backcmd*)cmd;$/;"	d
bd	cat.asm	/^  bd:	48 89 e5             	mov    %rsp,%rbp$/;"	l
bd	divide.asm	/^  bd:	f7 7d f8             	idivl  -0x8(%rbp)$/;"	l
bd	echo.asm	/^  bd:	89 55 f0             	mov    %edx,-0x10(%rbp)$/;"	l
bd	kill.asm	/^  bd:	89 ca                	mov    %ecx,%edx$/;"	l
bd	ls.asm	/^      bd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
bd	stressfs.asm	/^  bd:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
bd	usertests.asm	/^      bd:	ff d2                	callq  *%rdx$/;"	l
bd0	cat.asm	/^ bd0:	48 b8 f0 11 00 00 00 	movabs $0x11f0,%rax$/;"	l
bd0	grep.asm	/^ bd0:	89 c7                	mov    %eax,%edi$/;"	l
bd0	init.asm	/^ bd0:	48 8b 00             	mov    (%rax),%rax$/;"	l
bd0	kill.asm	/^ bd0:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
bd0	ln.asm	/^ bd0:	48 89 10             	mov    %rdx,(%rax)$/;"	l
bd0	sh.asm	/^     bd0:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
bd1	divide.asm	/^ bd1:	48 89 c7             	mov    %rax,%rdi$/;"	l
bd1	mkdir.asm	/^ bd1:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
bd1	rm.asm	/^ bd1:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
bd1	wc.asm	/^ bd1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
bd2	grep.asm	/^ bd2:	48 b8 51 08 00 00 00 	movabs $0x851,%rax$/;"	l
bd2	usertests.asm	/^     bd2:	8b 00                	mov    (%rax),%eax$/;"	l
bd3	echo.asm	/^ bd3:	00 00 00 $/;"	l
bd3	init.asm	/^ bd3:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
bd3	kill.asm	/^ bd3:	89 c7                	mov    %eax,%edi$/;"	l
bd3	ln.asm	/^ bd3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
bd4	divide.asm	/^ bd4:	48 b8 44 0a 00 00 00 	movabs $0xa44,%rax$/;"	l
bd4	ls.asm	/^     bd4:	00 00 00 $/;"	l
bd4	mkdir.asm	/^ bd4:	48 b8 f0 0e 00 00 00 	movabs $0xef0,%rax$/;"	l
bd4	rm.asm	/^ bd4:	48 b8 e0 0e 00 00 00 	movabs $0xee0,%rax$/;"	l
bd4	sh.asm	/^     bd4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
bd4	stressfs.asm	/^ bd4:	00 00 00 $/;"	l
bd4	usertests.asm	/^     bd4:	3b 45 f8             	cmp    -0x8(%rbp),%eax$/;"	l
bd5	kill.asm	/^ bd5:	48 b8 4a 0a 00 00 00 	movabs $0xa4a,%rax$/;"	l
bd5	wc.asm	/^ bd5:	8b 50 08             	mov    0x8(%rax),%edx$/;"	l
bd6	echo.asm	/^ bd6:	ff d0                	callq  *%rax$/;"	l
bd7	cat.asm	/^ bd7:	00 00 00 $/;"	l
bd7	init.asm	/^ bd7:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)$/;"	l
bd7	ln.asm	/^ bd7:	48 83 c0 10          	add    $0x10,%rax$/;"	l
bd7	ls.asm	/^     bd7:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)$/;"	l
bd7	stressfs.asm	/^ bd7:	ff d0                	callq  *%rax$/;"	l
bd7	usertests.asm	/^     bd7:	74 45                	je     c1e <writetest1+0x285>$/;"	l
bd8	echo.asm	/^ bd8:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
bd8	sh.asm	/^     bd8:	c9                   	leaveq $/;"	l
bd8	wc.asm	/^ bd8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
bd9	grep.asm	/^ bd9:	00 00 00 $/;"	l
bd9	sh.asm	/^     bd9:	c3                   	retq   $/;"	l
bd9	stressfs.asm	/^ bd9:	48 b8 d0 0f 00 00 00 	movabs $0xfd0,%rax$/;"	l
bd9	usertests.asm	/^     bd9:	48 b8 40 88 00 00 00 	movabs $0x8840,%rax$/;"	l
bda	cat.asm	/^ bda:	48 8b 00             	mov    (%rax),%rax$/;"	l
bda	kernel.asm	/^  bda = (uchar *) P2V(0x400);$/;"	d
bda	sh.asm	/^     bda:	55                   	push   %rbp$/;"	l
bdb	divide.asm	/^ bdb:	00 00 00 $/;"	l
bdb	ln.asm	/^ bdb:	eb 4e                	jmp    c2b <malloc+0x148>$/;"	l
bdb	mkdir.asm	/^ bdb:	00 00 00 $/;"	l
bdb	rm.asm	/^ bdb:	00 00 00 $/;"	l
bdb	sh.asm	/^     bdb:	48 89 e5             	mov    %rsp,%rbp$/;"	l
bdc	echo.asm	/^ bdc:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)$/;"	l
bdc	grep.asm	/^ bdc:	ff d0                	callq  *%rax$/;"	l
bdc	init.asm	/^ bdc:	75 4a                	jne    c28 <malloc+0x7e>$/;"	l
bdc	kill.asm	/^ bdc:	00 00 00 $/;"	l
bdc	wc.asm	/^ bdc:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
bdd	cat.asm	/^ bdd:	c9                   	leaveq $/;"	l
bdd	ln.asm	/^ bdd:	48 b8 d0 0e 00 00 00 	movabs $0xed0,%rax$/;"	l
bde	cat.asm	/^ bde:	c3                   	retq   $/;"	l
bde	divide.asm	/^ bde:	ff d0                	callq  *%rax$/;"	l
bde	grep.asm	/^ bde:	48 83 85 48 ff ff ff 	addq   $0x1,-0xb8(%rbp)$/;"	l
bde	init.asm	/^ bde:	48 b8 c0 0f 00 00 00 	movabs $0xfc0,%rax$/;"	l
bde	ls.asm	/^     bde:	eb 2b                	jmp    c0b <printf+0x298>$/;"	l
bde	mkdir.asm	/^ bde:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
bde	rm.asm	/^ bde:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
bde	sh.asm	/^     bde:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
bdf	cat.asm	/^ bdf:	55                   	push   %rbp$/;"	l
bdf	kill.asm	/^ bdf:	ff d0                	callq  *%rax$/;"	l
bdf	wc.asm	/^ bdf:	01 c2                	add    %eax,%edx$/;"	l
be	grep.asm	/^  be:	00 00 00 $/;"	l
be	ln.asm	/^  be:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)$/;"	l
be	sh.asm	/^      be:	48 b9 c3 16 00 00 00 	movabs $0x16c3,%rcx$/;"	l
be	wc.asm	/^  be:	00 00 00 $/;"	l
be0	cat.asm	/^ be0:	48 89 e5             	mov    %rsp,%rbp$/;"	l
be0	divide.asm	/^ be0:	48 b8 e0 0f 00 00 00 	movabs $0xfe0,%rax$/;"	l
be0	ls.asm	/^     be0:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax$/;"	l
be0	stressfs.asm	/^ be0:	00 00 00 $/;"	l
be0	usertests.asm	/^     be0:	00 00 00 $/;"	l
be1	echo.asm	/^ be1:	75 07                	jne    bea <malloc+0x130>$/;"	l
be1	kill.asm	/^ be1:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
be1	wc.asm	/^ be1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
be2	mkdir.asm	/^ be2:	48 89 10             	mov    %rdx,(%rax)$/;"	l
be2	rm.asm	/^ be2:	48 89 10             	mov    %rdx,(%rax)$/;"	l
be2	sh.asm	/^     be2:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
be3	cat.asm	/^ be3:	48 83 ec 30          	sub    $0x30,%rsp$/;"	l
be3	echo.asm	/^ be3:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
be3	stressfs.asm	/^ be3:	48 8b 00             	mov    (%rax),%rax$/;"	l
be3	usertests.asm	/^     be3:	8b 08                	mov    (%rax),%ecx$/;"	l
be4	ln.asm	/^ be4:	00 00 00 $/;"	l
be5	grep.asm	/^ be5:	01 $/;"	l
be5	init.asm	/^ be5:	00 00 00 $/;"	l
be5	kill.asm	/^ be5:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)$/;"	l
be5	mkdir.asm	/^ be5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
be5	rm.asm	/^ be5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
be5	usertests.asm	/^     be5:	48 b8 08 88 00 00 00 	movabs $0x8808,%rax$/;"	l
be5	wc.asm	/^ be5:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
be6	grep.asm	/^ be6:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax$/;"	l
be6	sh.asm	/^     be6:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)$/;"	l
be6	stressfs.asm	/^ be6:	c9                   	leaveq $/;"	l
be7	cat.asm	/^ be7:	89 7d dc             	mov    %edi,-0x24(%rbp)$/;"	l
be7	divide.asm	/^ be7:	00 00 00 $/;"	l
be7	ln.asm	/^ be7:	48 8b 00             	mov    (%rax),%rax$/;"	l
be7	ls.asm	/^     be7:	0f b6 00             	movzbl (%rax),%eax$/;"	l
be7	stressfs.asm	/^ be7:	c3                   	retq   $/;"	l
be8	echo.asm	/^ be8:	eb 18                	jmp    c02 <malloc+0x148>$/;"	l
be8	init.asm	/^ be8:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
be8	stressfs.asm	/^ be8:	55                   	push   %rbp$/;"	l
be8	wc.asm	/^ be8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
be9	mkdir.asm	/^ be9:	48 83 c0 10          	add    $0x10,%rax$/;"	l
be9	rm.asm	/^ be9:	48 83 c0 10          	add    $0x10,%rax$/;"	l
be9	stressfs.asm	/^ be9:	48 89 e5             	mov    %rsp,%rbp$/;"	l
bea	cat.asm	/^ bea:	8b 45 dc             	mov    -0x24(%rbp),%eax$/;"	l
bea	divide.asm	/^ bea:	48 8b 00             	mov    (%rax),%rax$/;"	l
bea	echo.asm	/^ bea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
bea	kill.asm	/^ bea:	75 07                	jne    bf3 <malloc+0x130>$/;"	l
bea	ln.asm	/^ bea:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)$/;"	l
bea	ls.asm	/^     bea:	0f be d0             	movsbl %al,%edx$/;"	l
bea	sh.asm	/^     bea:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx$/;"	l
bec	init.asm	/^ bec:	48 b8 d0 0f 00 00 00 	movabs $0xfd0,%rax$/;"	l
bec	kill.asm	/^ bec:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
bec	stressfs.asm	/^ bec:	48 83 ec 30          	sub    $0x30,%rsp$/;"	l
bec	usertests.asm	/^     bec:	00 00 00 $/;"	l
bec	wc.asm	/^ bec:	48 8b 10             	mov    (%rax),%rdx$/;"	l
bed	cat.asm	/^ bed:	48 83 c0 0f          	add    $0xf,%rax$/;"	l
bed	divide.asm	/^ bed:	c9                   	leaveq $/;"	l
bed	grep.asm	/^ bed:	0f b6 00             	movzbl (%rax),%eax$/;"	l
bed	ls.asm	/^     bed:	8b 85 1c ff ff ff    	mov    -0xe4(%rbp),%eax$/;"	l
bed	mkdir.asm	/^ bed:	eb 4e                	jmp    c3d <malloc+0x148>$/;"	l
bed	rm.asm	/^ bed:	eb 4e                	jmp    c3d <malloc+0x148>$/;"	l
bee	divide.asm	/^ bee:	c3                   	retq   $/;"	l
bee	echo.asm	/^ bee:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
bee	ln.asm	/^ bee:	75 23                	jne    c13 <malloc+0x130>$/;"	l
bee	sh.asm	/^     bee:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
bef	divide.asm	/^ bef:	55                   	push   %rbp$/;"	l
bef	mkdir.asm	/^ bef:	48 b8 f0 0e 00 00 00 	movabs $0xef0,%rax$/;"	l
bef	rm.asm	/^ bef:	48 b8 e0 0e 00 00 00 	movabs $0xee0,%rax$/;"	l
bef	usertests.asm	/^     bef:	8b 00                	mov    (%rax),%eax$/;"	l
bef	wc.asm	/^ bef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
begin_op	log.c	/^begin_op(void)$/;"	f
bf	kill.asm	/^  bf:	48 89 fe             	mov    %rdi,%rsi$/;"	l
bf	usertests.asm	/^      bf:	48 b8 02 60 00 00 00 	movabs $0x6002,%rax$/;"	l
bf0	divide.asm	/^ bf0:	48 89 e5             	mov    %rsp,%rbp$/;"	l
bf0	grep.asm	/^ bf0:	84 c0                	test   %al,%al$/;"	l
bf0	ln.asm	/^ bf0:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
bf0	stressfs.asm	/^ bf0:	89 7d dc             	mov    %edi,-0x24(%rbp)$/;"	l
bf1	cat.asm	/^ bf1:	48 c1 e8 04          	shr    $0x4,%rax$/;"	l
bf1	kill.asm	/^ bf1:	eb 18                	jmp    c0b <malloc+0x148>$/;"	l
bf1	usertests.asm	/^     bf1:	8b 55 f8             	mov    -0x8(%rbp),%edx$/;"	l
bf2	echo.asm	/^ bf2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
bf2	grep.asm	/^ bf2:	75 c7                	jne    bbb <printf+0x26d>$/;"	l
bf2	sh.asm	/^     bf2:	48 89 d6             	mov    %rdx,%rsi$/;"	l
bf3	divide.asm	/^ bf3:	48 83 ec 30          	sub    $0x30,%rsp$/;"	l
bf3	init.asm	/^ bf3:	00 00 00 $/;"	l
bf3	kill.asm	/^ bf3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
bf3	ln.asm	/^ bf3:	89 c7                	mov    %eax,%edi$/;"	l
bf3	ls.asm	/^     bf3:	89 d6                	mov    %edx,%esi$/;"	l
bf3	stressfs.asm	/^ bf3:	8b 45 dc             	mov    -0x24(%rbp),%eax$/;"	l
bf3	wc.asm	/^ bf3:	48 89 10             	mov    %rdx,(%rax)$/;"	l
bf4	grep.asm	/^ bf4:	e9 c8 00 00 00       	jmpq   cc1 <printf+0x373>$/;"	l
bf4	usertests.asm	/^     bf4:	48 be d0 6b 00 00 00 	movabs $0x6bd0,%rsi$/;"	l
bf5	cat.asm	/^ bf5:	83 c0 01             	add    $0x1,%eax$/;"	l
bf5	ln.asm	/^ bf5:	48 b8 6a 0a 00 00 00 	movabs $0xa6a,%rax$/;"	l
bf5	ls.asm	/^     bf5:	89 c7                	mov    %eax,%edi$/;"	l
bf5	sh.asm	/^     bf5:	48 89 c7             	mov    %rax,%rdi$/;"	l
bf6	echo.asm	/^ bf6:	48 8b 00             	mov    (%rax),%rax$/;"	l
bf6	init.asm	/^ bf6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
bf6	mkdir.asm	/^ bf6:	00 00 00 $/;"	l
bf6	rm.asm	/^ bf6:	00 00 00 $/;"	l
bf6	stressfs.asm	/^ bf6:	48 83 c0 0f          	add    $0xf,%rax$/;"	l
bf6	wc.asm	/^ bf6:	eb 0b                	jmp    c03 <free+0x11e>$/;"	l
bf7	divide.asm	/^ bf7:	89 7d dc             	mov    %edi,-0x24(%rbp)$/;"	l
bf7	kill.asm	/^ bf7:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
bf7	ls.asm	/^     bf7:	48 b8 76 08 00 00 00 	movabs $0x876,%rax$/;"	l
bf8	cat.asm	/^ bf8:	89 45 ec             	mov    %eax,-0x14(%rbp)$/;"	l
bf8	sh.asm	/^     bf8:	48 b8 e5 0e 00 00 00 	movabs $0xee5,%rax$/;"	l
bf8	wc.asm	/^ bf8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
bf9	echo.asm	/^ bf9:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
bf9	grep.asm	/^ bf9:	83 bd 3c ff ff ff 63 	cmpl   $0x63,-0xc4(%rbp)$/;"	l
bf9	mkdir.asm	/^ bf9:	48 8b 00             	mov    (%rax),%rax$/;"	l
bf9	rm.asm	/^ bf9:	48 8b 00             	mov    (%rax),%rax$/;"	l
bfa	divide.asm	/^ bfa:	8b 45 dc             	mov    -0x24(%rbp),%eax$/;"	l
bfa	init.asm	/^ bfa:	48 89 10             	mov    %rdx,(%rax)$/;"	l
bfa	stressfs.asm	/^ bfa:	48 c1 e8 04          	shr    $0x4,%rax$/;"	l
bfb	cat.asm	/^ bfb:	48 b8 f0 11 00 00 00 	movabs $0x11f0,%rax$/;"	l
bfb	kill.asm	/^ bfb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
bfb	usertests.asm	/^     bfb:	00 00 00 $/;"	l
bfc	ln.asm	/^ bfc:	00 00 00 $/;"	l
bfc	mkdir.asm	/^ bfc:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)$/;"	l
bfc	rm.asm	/^ bfc:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)$/;"	l
bfc	wc.asm	/^ bfc:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
bfd	divide.asm	/^ bfd:	48 83 c0 0f          	add    $0xf,%rax$/;"	l
bfd	echo.asm	/^ bfd:	e9 41 ff ff ff       	jmpq   b43 <malloc+0x89>$/;"	l
bfd	init.asm	/^ bfd:	48 b8 d0 0f 00 00 00 	movabs $0xfd0,%rax$/;"	l
bfe	ls.asm	/^     bfe:	00 00 00 $/;"	l
bfe	stressfs.asm	/^ bfe:	83 c0 01             	add    $0x1,%eax$/;"	l
bfe	usertests.asm	/^     bfe:	89 c7                	mov    %eax,%edi$/;"	l
bff	kill.asm	/^ bff:	48 8b 00             	mov    (%rax),%rax$/;"	l
bff	ln.asm	/^ bff:	ff d0                	callq  *%rax$/;"	l
bff	sh.asm	/^     bff:	00 00 00 $/;"	l
bfree	fs.c	/^bfree(int dev, uint b)$/;"	f	file:
bget	bio.c	/^bget(uint dev, uint blockno)$/;"	f	file:
bi	kernel.asm	/^  bi = b % BPB;$/;"	d
bigargtest	usertests.c	/^bigargtest(void)$/;"	f
bigdir	usertests.c	/^bigdir(void)$/;"	f
bigfile	usertests.c	/^bigfile(void)$/;"	f
bigwrite	usertests.c	/^bigwrite(void)$/;"	f
binit	bio.c	/^binit(void)$/;"	f
block	log.c	/^  int block[LOGSIZE];$/;"	m	struct:logheader	file:
blockno	buf.h	/^  uint blockno;$/;"	m	struct:buf
bmap	fs.c	/^bmap(struct inode *ip, uint bn)$/;"	f	file:
bmapstart	fs.h	/^  uint bmapstart;    \/\/ Block number of first free map block$/;"	m	struct:superblock
bootmain	bootmain.c	/^bootmain(void)$/;"	f
bp	cat.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	divide.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	echo.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	grep.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	init.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	kernel.asm	/^    bp = bread(dev, BBLOCK(b, sb));$/;"	d
bp	kernel.asm	/^    bp = bread(dev, IBLOCK(inum, sb));$/;"	d
bp	kernel.asm	/^    bp = bread(ip->dev, IBLOCK(ip->inum, sb));$/;"	d
bp	kernel.asm	/^    bp = bread(ip->dev, addr);$/;"	d
bp	kernel.asm	/^    bp = bread(ip->dev, bmap(ip, off\/BSIZE));$/;"	d
bp	kernel.asm	/^    bp = bread(ip->dev, ip->addrs[NDIRECT]);$/;"	d
bp	kernel.asm	/^  bp = 0;$/;"	d
bp	kernel.asm	/^  bp = bread(dev, 1);$/;"	d
bp	kernel.asm	/^  bp = bread(dev, BBLOCK(b, sb));$/;"	d
bp	kernel.asm	/^  bp = bread(dev, bno);$/;"	d
bp	kernel.asm	/^  bp = bread(ip->dev, IBLOCK(ip->inum, sb));$/;"	d
bp	kill.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	ln.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	ls.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	mkdir.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	rm.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	sh.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	stressfs.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	usertests.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	wc.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	zombie.asm	/^  bp = (Header*)ap - 1;$/;"	d
bread	bio.c	/^bread(uint dev, uint blockno)$/;"	f
brelse	bio.c	/^brelse(struct buf *b)$/;"	f
bss_end_addr	bootmain.c	/^  uint64 bss_end_addr;$/;"	m	struct:mbheader	file:
bsstest	usertests.c	/^bsstest(void)$/;"	f
buf	bio.c	/^  struct buf buf[NBUF];$/;"	m	struct:__anon4	typeref:struct:__anon4::buf	file:
buf	buf.h	/^struct buf {$/;"	s
buf	cat.c	/^char buf[512];$/;"	v
buf	console.c	/^  char buf[INPUT_BUF];$/;"	m	struct:__anon8	file:
buf	grep.c	/^char buf[1024];$/;"	v
buf	kernel.asm	/^  buf = (char*)p;$/;"	d
buf	usertests.c	/^char buf[8192];$/;"	v
buf	wc.c	/^char buf[512];$/;"	v
bwrite	bio.c	/^bwrite(struct buf *b)$/;"	f
bzero	fs.c	/^bzero(int dev, int bno)$/;"	f	file:
c	cat.asm	/^    c = fmt[i] & 0xff;$/;"	d
c	divide.asm	/^    c = fmt[i] & 0xff;$/;"	d
c	echo.asm	/^    c = fmt[i] & 0xff;$/;"	d
c	grep.asm	/^    c = fmt[i] & 0xff;$/;"	d
c	grep.asm	/^   c:	89 75 d4             	mov    %esi,-0x2c(%rbp)$/;"	l
c	init.asm	/^    c = fmt[i] & 0xff;$/;"	d
c	kernel.asm	/^        c = (c == '\\r') ? '\\n' : c;$/;"	d
c	kernel.asm	/^    c = fmt[++i] & 0xff;$/;"	d
c	kernel.asm	/^    c = input.buf[input.r++ % INPUT_BUF];$/;"	d
c	kernel.asm	/^  c = &cpus[cpunum()];$/;"	d
c	kernel.asm	/^  c = charcode[shift & (CTL | SHIFT)][data];$/;"	d
c	kill.asm	/^    c = fmt[i] & 0xff;$/;"	d
c	ln.asm	/^    c = fmt[i] & 0xff;$/;"	d
c	ls.asm	/^    c = fmt[i] & 0xff;$/;"	d
c	mkdir.asm	/^    c = fmt[i] & 0xff;$/;"	d
c	rm.asm	/^    c = fmt[i] & 0xff;$/;"	d
c	sh.asm	/^       c:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)$/;"	l
c	sh.asm	/^    c = fmt[i] & 0xff;$/;"	d
c	stressfs.asm	/^    c = fmt[i] & 0xff;$/;"	d
c	usertests.asm	/^    c = fmt[i] & 0xff;$/;"	d
c	usertests.asm	/^  c = sbrk(-(sbrk(0) - oldbrk));$/;"	d
c	usertests.asm	/^  c = sbrk(-4096);$/;"	d
c	usertests.asm	/^  c = sbrk(0);$/;"	d
c	usertests.asm	/^  c = sbrk(1);$/;"	d
c	usertests.asm	/^  c = sbrk(4096);$/;"	d
c	wc.asm	/^    c = fmt[i] & 0xff;$/;"	d
c	zombie.asm	/^    c = fmt[i] & 0xff;$/;"	d
c0	cat.asm	/^  c0:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
c0	divide.asm	/^  c0:	89 c1                	mov    %eax,%ecx$/;"	l
c0	echo.asm	/^  c0:	90                   	nop$/;"	l
c0	forktest.asm	/^  c0:	eb 2b                	jmp    ed <forktest+0x5c>$/;"	l
c0	init.asm	/^  c0:	00 00 00 $/;"	l
c0	stressfs.asm	/^  c0:	01 d0                	add    %edx,%eax$/;"	l
c00	grep.asm	/^ c00:	75 5d                	jne    c5f <printf+0x311>$/;"	l
c00	mkdir.asm	/^ c00:	75 23                	jne    c25 <malloc+0x130>$/;"	l
c00	rm.asm	/^ c00:	75 23                	jne    c25 <malloc+0x130>$/;"	l
c00	usertests.asm	/^     c00:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c00	wc.asm	/^ c00:	48 89 10             	mov    %rdx,(%rax)$/;"	l
c01	divide.asm	/^ c01:	48 c1 e8 04          	shr    $0x4,%rax$/;"	l
c01	ln.asm	/^ c01:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
c01	ls.asm	/^     c01:	ff d0                	callq  *%rax$/;"	l
c01	stressfs.asm	/^ c01:	89 45 ec             	mov    %eax,-0x14(%rbp)$/;"	l
c02	cat.asm	/^ c02:	00 00 00 $/;"	l
c02	echo.asm	/^ c02:	c9                   	leaveq $/;"	l
c02	grep.asm	/^ c02:	8b 85 20 ff ff ff    	mov    -0xe0(%rbp),%eax$/;"	l
c02	kill.asm	/^ c02:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
c02	mkdir.asm	/^ c02:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
c02	rm.asm	/^ c02:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
c02	sh.asm	/^     c02:	ff d0                	callq  *%rax$/;"	l
c03	echo.asm	/^ c03:	c3                   	retq   $/;"	l
c03	ls.asm	/^     c03:	48 83 85 48 ff ff ff 	addq   $0x1,-0xb8(%rbp)$/;"	l
c03	wc.asm	/^ c03:	48 b8 b0 12 00 00 00 	movabs $0x12b0,%rax$/;"	l
c04	init.asm	/^ c04:	00 00 00 $/;"	l
c04	sh.asm	/^     c04:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
c04	stressfs.asm	/^ c04:	48 b8 d0 0f 00 00 00 	movabs $0xfd0,%rax$/;"	l
c05	cat.asm	/^ c05:	48 8b 00             	mov    (%rax),%rax$/;"	l
c05	divide.asm	/^ c05:	83 c0 01             	add    $0x1,%eax$/;"	l
c05	ln.asm	/^ c05:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)$/;"	l
c05	mkdir.asm	/^ c05:	89 c7                	mov    %eax,%edi$/;"	l
c05	rm.asm	/^ c05:	89 c7                	mov    %eax,%edi$/;"	l
c05	usertests.asm	/^     c05:	49 b8 c7 61 00 00 00 	movabs $0x61c7,%r8$/;"	l
c06	kill.asm	/^ c06:	e9 41 ff ff ff       	jmpq   b4c <malloc+0x89>$/;"	l
c07	init.asm	/^ c07:	48 8b 10             	mov    (%rax),%rdx$/;"	l
c07	mkdir.asm	/^ c07:	48 b8 7c 0a 00 00 00 	movabs $0xa7c,%rax$/;"	l
c07	rm.asm	/^ c07:	48 b8 7c 0a 00 00 00 	movabs $0xa7c,%rax$/;"	l
c08	cat.asm	/^ c08:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
c08	divide.asm	/^ c08:	89 45 ec             	mov    %eax,-0x14(%rbp)$/;"	l
c08	grep.asm	/^ c08:	83 f8 30             	cmp    $0x30,%eax$/;"	l
c08	sh.asm	/^     c08:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx$/;"	l
c0a	init.asm	/^ c0a:	48 b8 c0 0f 00 00 00 	movabs $0xfc0,%rax$/;"	l
c0a	ln.asm	/^ c0a:	75 07                	jne    c13 <malloc+0x130>$/;"	l
c0a	ls.asm	/^     c0a:	01 $/;"	l
c0a	wc.asm	/^ c0a:	00 00 00 $/;"	l
c0b	divide.asm	/^ c0b:	48 b8 e0 0f 00 00 00 	movabs $0xfe0,%rax$/;"	l
c0b	grep.asm	/^ c0b:	73 23                	jae    c30 <printf+0x2e2>$/;"	l
c0b	kill.asm	/^ c0b:	c9                   	leaveq $/;"	l
c0b	ls.asm	/^     c0b:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax$/;"	l
c0b	stressfs.asm	/^ c0b:	00 00 00 $/;"	l
c0c	cat.asm	/^ c0c:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)$/;"	l
c0c	kill.asm	/^ c0c:	c3                   	retq   $/;"	l
c0c	ln.asm	/^ c0c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0c	sh.asm	/^     c0c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
c0c	usertests.asm	/^     c0c:	00 00 00 $/;"	l
c0d	grep.asm	/^ c0d:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax$/;"	l
c0d	wc.asm	/^ c0d:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx$/;"	l
c0e	mkdir.asm	/^ c0e:	00 00 00 $/;"	l
c0e	rm.asm	/^ c0e:	00 00 00 $/;"	l
c0e	stressfs.asm	/^ c0e:	48 8b 00             	mov    (%rax),%rax$/;"	l
c0f	usertests.asm	/^     c0f:	41 ff d0             	callq  *%r8$/;"	l
c1	echo.asm	/^  c1:	c9                   	leaveq $/;"	l
c1	grep.asm	/^  c1:	ff d0                	callq  *%rax$/;"	l
c1	ls.asm	/^      c1:	48 89 c7             	mov    %rax,%rdi$/;"	l
c1	wc.asm	/^  c1:	89 c7                	mov    %eax,%edi$/;"	l
c1	zombie.asm	/^  c1:	48 83 45 f0 01       	addq   $0x1,-0x10(%rbp)$/;"	l
c10	sh.asm	/^     c10:	48 ba fd 1d 00 00 00 	movabs $0x1dfd,%rdx$/;"	l
c11	cat.asm	/^ c11:	75 4a                	jne    c5d <malloc+0x7e>$/;"	l
c11	init.asm	/^ c11:	00 00 00 $/;"	l
c11	ln.asm	/^ c11:	eb 18                	jmp    c2b <malloc+0x148>$/;"	l
c11	mkdir.asm	/^ c11:	ff d0                	callq  *%rax$/;"	l
c11	rm.asm	/^ c11:	ff d0                	callq  *%rax$/;"	l
c11	stressfs.asm	/^ c11:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
c11	wc.asm	/^ c11:	48 89 10             	mov    %rdx,(%rax)$/;"	l
c12	divide.asm	/^ c12:	00 00 00 $/;"	l
c12	ls.asm	/^     c12:	0f b6 00             	movzbl (%rax),%eax$/;"	l
c12	usertests.asm	/^     c12:	48 b8 02 60 00 00 00 	movabs $0x6002,%rax$/;"	l
c13	cat.asm	/^ c13:	48 b8 e0 11 00 00 00 	movabs $0x11e0,%rax$/;"	l
c13	ln.asm	/^ c13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
c13	mkdir.asm	/^ c13:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
c13	rm.asm	/^ c13:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
c14	grep.asm	/^ c14:	8b 95 20 ff ff ff    	mov    -0xe0(%rbp),%edx$/;"	l
c14	init.asm	/^ c14:	48 89 10             	mov    %rdx,(%rax)$/;"	l
c14	wc.asm	/^ c14:	90                   	nop$/;"	l
c15	divide.asm	/^ c15:	48 8b 00             	mov    (%rax),%rax$/;"	l
c15	ls.asm	/^     c15:	84 c0                	test   %al,%al$/;"	l
c15	stressfs.asm	/^ c15:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)$/;"	l
c15	wc.asm	/^ c15:	c9                   	leaveq $/;"	l
c16	wc.asm	/^ c16:	c3                   	retq   $/;"	l
c17	init.asm	/^ c17:	48 b8 c0 0f 00 00 00 	movabs $0xfc0,%rax$/;"	l
c17	ln.asm	/^ c17:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
c17	ls.asm	/^     c17:	75 c7                	jne    be0 <printf+0x26d>$/;"	l
c17	mkdir.asm	/^ c17:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)$/;"	l
c17	rm.asm	/^ c17:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)$/;"	l
c17	sh.asm	/^     c17:	00 00 00 $/;"	l
c17	wc.asm	/^ c17:	55                   	push   %rbp$/;"	l
c18	divide.asm	/^ c18:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
c18	wc.asm	/^ c18:	48 89 e5             	mov    %rsp,%rbp$/;"	l
c19	ls.asm	/^     c19:	e9 c8 00 00 00       	jmpq   ce6 <printf+0x373>$/;"	l
c19	usertests.asm	/^     c19:	00 00 00 $/;"	l
c1a	cat.asm	/^ c1a:	00 00 00 $/;"	l
c1a	grep.asm	/^ c1a:	89 d2                	mov    %edx,%edx$/;"	l
c1a	sh.asm	/^     c1a:	48 89 ce             	mov    %rcx,%rsi$/;"	l
c1a	stressfs.asm	/^ c1a:	75 4a                	jne    c66 <malloc+0x7e>$/;"	l
c1b	ln.asm	/^ c1b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
c1b	wc.asm	/^ c1b:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
c1c	divide.asm	/^ c1c:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)$/;"	l
c1c	grep.asm	/^ c1c:	48 01 d0             	add    %rdx,%rax$/;"	l
c1c	mkdir.asm	/^ c1c:	75 07                	jne    c25 <malloc+0x130>$/;"	l
c1c	rm.asm	/^ c1c:	75 07                	jne    c25 <malloc+0x130>$/;"	l
c1c	stressfs.asm	/^ c1c:	48 b8 c0 0f 00 00 00 	movabs $0xfc0,%rax$/;"	l
c1c	usertests.asm	/^     c1c:	ff d0                	callq  *%rax$/;"	l
c1d	cat.asm	/^ c1d:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
c1d	sh.asm	/^     c1d:	48 89 c7             	mov    %rax,%rdi$/;"	l
c1e	init.asm	/^ c1e:	00 00 00 $/;"	l
c1e	ls.asm	/^     c1e:	83 bd 3c ff ff ff 63 	cmpl   $0x63,-0xc4(%rbp)$/;"	l
c1e	mkdir.asm	/^ c1e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c1e	rm.asm	/^ c1e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c1e	usertests.asm	/^     c1e:	83 45 f8 01          	addl   $0x1,-0x8(%rbp)$/;"	l
c1f	grep.asm	/^ c1f:	8b 95 20 ff ff ff    	mov    -0xe0(%rbp),%edx$/;"	l
c1f	ln.asm	/^ c1f:	48 8b 00             	mov    (%rax),%rax$/;"	l
c1f	wc.asm	/^ c1f:	89 7d ec             	mov    %edi,-0x14(%rbp)$/;"	l
c2	divide.asm	/^  c2:	ba 67 66 66 66       	mov    $0x66666667,%edx$/;"	l
c2	echo.asm	/^  c2:	c3                   	retq   $/;"	l
c2	forktest.asm	/^  c2:	48 b8 03 05 00 00 00 	movabs $0x503,%rax$/;"	l
c2	kill.asm	/^  c2:	48 89 75 f8          	mov    %rsi,-0x8(%rbp)$/;"	l
c2	ln.asm	/^  c2:	89 75 f4             	mov    %esi,-0xc(%rbp)$/;"	l
c2	stressfs.asm	/^  c2:	88 45 e8             	mov    %al,-0x18(%rbp)$/;"	l
c20	sh.asm	/^     c20:	48 b8 51 09 00 00 00 	movabs $0x951,%rax$/;"	l
c21	cat.asm	/^ c21:	48 b8 f0 11 00 00 00 	movabs $0x11f0,%rax$/;"	l
c21	divide.asm	/^ c21:	75 4a                	jne    c6d <malloc+0x7e>$/;"	l
c21	init.asm	/^ c21:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%rax)$/;"	l
c22	ln.asm	/^ c22:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
c22	usertests.asm	/^     c22:	e9 f2 fe ff ff       	jmpq   b19 <writetest1+0x180>$/;"	l
c22	wc.asm	/^ c22:	81 7d ec ff 0f 00 00 	cmpl   $0xfff,-0x14(%rbp)$/;"	l
c23	divide.asm	/^ c23:	48 b8 d0 0f 00 00 00 	movabs $0xfd0,%rax$/;"	l
c23	mkdir.asm	/^ c23:	eb 18                	jmp    c3d <malloc+0x148>$/;"	l
c23	rm.asm	/^ c23:	eb 18                	jmp    c3d <malloc+0x148>$/;"	l
c23	stressfs.asm	/^ c23:	00 00 00 $/;"	l
c25	grep.asm	/^ c25:	83 c2 08             	add    $0x8,%edx$/;"	l
c25	ls.asm	/^     c25:	75 5d                	jne    c84 <printf+0x311>$/;"	l
c25	mkdir.asm	/^ c25:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
c25	rm.asm	/^ c25:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
c26	ln.asm	/^ c26:	e9 41 ff ff ff       	jmpq   b6c <malloc+0x89>$/;"	l
c26	stressfs.asm	/^ c26:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
c27	ls.asm	/^     c27:	8b 85 20 ff ff ff    	mov    -0xe0(%rbp),%eax$/;"	l
c27	sh.asm	/^     c27:	00 00 00 $/;"	l
c27	usertests.asm	/^     c27:	90                   	nop$/;"	l
c28	cat.asm	/^ c28:	00 00 00 $/;"	l
c28	grep.asm	/^ c28:	89 95 20 ff ff ff    	mov    %edx,-0xe0(%rbp)$/;"	l
c28	init.asm	/^ c28:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
c28	usertests.asm	/^     c28:	8b 45 f4             	mov    -0xc(%rbp),%eax$/;"	l
c29	mkdir.asm	/^ c29:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
c29	rm.asm	/^ c29:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
c29	wc.asm	/^ c29:	77 07                	ja     c32 <morecore+0x1b>$/;"	l
c2a	divide.asm	/^ c2a:	00 00 00 $/;"	l
c2a	sh.asm	/^     c2a:	ff d0                	callq  *%rax$/;"	l
c2a	stressfs.asm	/^ c2a:	48 b8 d0 0f 00 00 00 	movabs $0xfd0,%rax$/;"	l
c2b	cat.asm	/^ c2b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
c2b	ln.asm	/^ c2b:	c9                   	leaveq $/;"	l
c2b	usertests.asm	/^     c2b:	89 c7                	mov    %eax,%edi$/;"	l
c2b	wc.asm	/^ c2b:	c7 45 ec 00 10 00 00 	movl   $0x1000,-0x14(%rbp)$/;"	l
c2c	init.asm	/^ c2c:	48 8b 00             	mov    (%rax),%rax$/;"	l
c2c	ln.asm	/^ c2c:	c3                   	retq   $/;"	l
c2c	sh.asm	/^     c2c:	85 c0                	test   %eax,%eax$/;"	l
c2d	divide.asm	/^ c2d:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
c2d	ls.asm	/^     c2d:	83 f8 30             	cmp    $0x30,%eax$/;"	l
c2d	mkdir.asm	/^ c2d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
c2d	rm.asm	/^ c2d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
c2d	usertests.asm	/^     c2d:	48 b8 34 60 00 00 00 	movabs $0x6034,%rax$/;"	l
c2e	grep.asm	/^ c2e:	eb 12                	jmp    c42 <printf+0x2f4>$/;"	l
c2e	sh.asm	/^     c2e:	74 58                	je     c88 <parsepipe+0xae>$/;"	l
c2f	cat.asm	/^ c2f:	48 89 10             	mov    %rdx,(%rax)$/;"	l
c2f	init.asm	/^ c2f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
c3	echo.asm	/^  c3:	55                   	push   %rbp$/;"	l
c3	grep.asm	/^  c3:	48 89 45 e0          	mov    %rax,-0x20(%rbp)$/;"	l
c3	init.asm	/^  c3:	bf 01 00 00 00       	mov    $0x1,%edi$/;"	l
c3	mkdir.asm	/^  c3:	00 00 00 $/;"	l
c3	rm.asm	/^  c3:	00 00 00 $/;"	l
c3	wc.asm	/^  c3:	48 b8 99 05 00 00 00 	movabs $0x599,%rax$/;"	l
c30	grep.asm	/^ c30:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax$/;"	l
c30	ls.asm	/^     c30:	73 23                	jae    c55 <printf+0x2e2>$/;"	l
c30	sh.asm	/^     c30:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi$/;"	l
c31	divide.asm	/^ c31:	48 b8 e0 0f 00 00 00 	movabs $0xfe0,%rax$/;"	l
c31	mkdir.asm	/^ c31:	48 8b 00             	mov    (%rax),%rax$/;"	l
c31	rm.asm	/^ c31:	48 8b 00             	mov    (%rax),%rax$/;"	l
c31	stressfs.asm	/^ c31:	00 00 00 $/;"	l
c32	cat.asm	/^ c32:	48 b8 f0 11 00 00 00 	movabs $0x11f0,%rax$/;"	l
c32	ls.asm	/^     c32:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax$/;"	l
c32	wc.asm	/^ c32:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
c33	init.asm	/^ c33:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
c34	mkdir.asm	/^ c34:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
c34	rm.asm	/^ c34:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
c34	sh.asm	/^     c34:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
c34	stressfs.asm	/^ c34:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
c34	usertests.asm	/^     c34:	00 00 00 $/;"	l
c35	wc.asm	/^ c35:	c1 e0 04             	shl    $0x4,%eax$/;"	l
c37	grep.asm	/^ c37:	48 8d 50 08          	lea    0x8(%rax),%rdx$/;"	l
c37	init.asm	/^ c37:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
c37	usertests.asm	/^     c37:	ff d0                	callq  *%rax$/;"	l
c38	divide.asm	/^ c38:	00 00 00 $/;"	l
c38	mkdir.asm	/^ c38:	e9 41 ff ff ff       	jmpq   b7e <malloc+0x89>$/;"	l
c38	rm.asm	/^ c38:	e9 41 ff ff ff       	jmpq   b7e <malloc+0x89>$/;"	l
c38	sh.asm	/^     c38:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
c38	stressfs.asm	/^ c38:	48 89 10             	mov    %rdx,(%rax)$/;"	l
c38	wc.asm	/^ c38:	89 c7                	mov    %eax,%edi$/;"	l
c39	cat.asm	/^ c39:	00 00 00 $/;"	l
c39	ls.asm	/^     c39:	8b 95 20 ff ff ff    	mov    -0xe0(%rbp),%edx$/;"	l
c39	usertests.asm	/^     c39:	48 bf 4c 6b 00 00 00 	movabs $0x6b4c,%rdi$/;"	l
c3a	init.asm	/^ c3a:	3b 45 ec             	cmp    -0x14(%rbp),%eax$/;"	l
c3a	wc.asm	/^ c3a:	48 b8 25 06 00 00 00 	movabs $0x625,%rax$/;"	l
c3b	divide.asm	/^ c3b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
c3b	grep.asm	/^ c3b:	48 89 95 28 ff ff ff 	mov    %rdx,-0xd8(%rbp)$/;"	l
c3b	stressfs.asm	/^ c3b:	48 b8 d0 0f 00 00 00 	movabs $0xfd0,%rax$/;"	l
c3c	cat.asm	/^ c3c:	48 8b 10             	mov    (%rax),%rdx$/;"	l
c3d	init.asm	/^ c3d:	72 65                	jb     ca4 <malloc+0xfa>$/;"	l
c3d	mkdir.asm	/^ c3d:	c9                   	leaveq $/;"	l
c3d	rm.asm	/^ c3d:	c9                   	leaveq $/;"	l
c3d	sh.asm	/^     c3d:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c3e	mkdir.asm	/^ c3e:	c3                   	retq   $/;"	l
c3e	rm.asm	/^ c3e:	c3                   	retq   $/;"	l
c3f	cat.asm	/^ c3f:	48 b8 e0 11 00 00 00 	movabs $0x11e0,%rax$/;"	l
c3f	divide.asm	/^ c3f:	48 89 10             	mov    %rdx,(%rax)$/;"	l
c3f	init.asm	/^ c3f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
c3f	ls.asm	/^     c3f:	89 d2                	mov    %edx,%edx$/;"	l
c4	cat.asm	/^  c4:	89 7d ec             	mov    %edi,-0x14(%rbp)$/;"	l
c4	echo.asm	/^  c4:	48 89 e5             	mov    %rsp,%rbp$/;"	l
c4	ls.asm	/^      c4:	48 b8 62 05 00 00 00 	movabs $0x562,%rax$/;"	l
c40	usertests.asm	/^     c40:	00 00 00 $/;"	l
c41	ls.asm	/^     c41:	48 01 d0             	add    %rdx,%rax$/;"	l
c41	wc.asm	/^ c41:	00 00 00 $/;"	l
c42	divide.asm	/^ c42:	48 b8 e0 0f 00 00 00 	movabs $0xfe0,%rax$/;"	l
c42	grep.asm	/^ c42:	8b 00                	mov    (%rax),%eax$/;"	l
c42	sh.asm	/^     c42:	48 89 c7             	mov    %rax,%rdi$/;"	l
c42	stressfs.asm	/^ c42:	00 00 00 $/;"	l
c43	init.asm	/^ c43:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
c43	usertests.asm	/^     c43:	48 b8 66 60 00 00 00 	movabs $0x6066,%rax$/;"	l
c44	grep.asm	/^ c44:	0f be d0             	movsbl %al,%edx$/;"	l
c44	ls.asm	/^     c44:	8b 95 20 ff ff ff    	mov    -0xe0(%rbp),%edx$/;"	l
c44	wc.asm	/^ c44:	ff d0                	callq  *%rax$/;"	l
c45	sh.asm	/^     c45:	48 b8 aa 07 00 00 00 	movabs $0x7aa,%rax$/;"	l
c45	stressfs.asm	/^ c45:	48 8b 10             	mov    (%rax),%rdx$/;"	l
c46	cat.asm	/^ c46:	00 00 00 $/;"	l
c46	init.asm	/^ c46:	3b 45 ec             	cmp    -0x14(%rbp),%eax$/;"	l
c46	wc.asm	/^ c46:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
c47	grep.asm	/^ c47:	8b 85 1c ff ff ff    	mov    -0xe4(%rbp),%eax$/;"	l
c48	stressfs.asm	/^ c48:	48 b8 c0 0f 00 00 00 	movabs $0xfc0,%rax$/;"	l
c49	cat.asm	/^ c49:	48 89 10             	mov    %rdx,(%rax)$/;"	l
c49	divide.asm	/^ c49:	00 00 00 $/;"	l
c49	init.asm	/^ c49:	75 10                	jne    c5b <malloc+0xb1>$/;"	l
c4a	ls.asm	/^     c4a:	83 c2 08             	add    $0x8,%edx$/;"	l
c4a	usertests.asm	/^     c4a:	00 00 00 $/;"	l
c4a	wc.asm	/^ c4a:	48 83 7d f8 ff       	cmpq   $0xffffffffffffffff,-0x8(%rbp)$/;"	l
c4b	init.asm	/^ c4b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
c4c	cat.asm	/^ c4c:	48 b8 e0 11 00 00 00 	movabs $0x11e0,%rax$/;"	l
c4c	divide.asm	/^ c4c:	48 8b 10             	mov    (%rax),%rdx$/;"	l
c4c	sh.asm	/^     c4c:	00 00 00 $/;"	l
c4d	grep.asm	/^ c4d:	89 d6                	mov    %edx,%esi$/;"	l
c4d	ls.asm	/^     c4d:	89 95 20 ff ff ff    	mov    %edx,-0xe0(%rbp)$/;"	l
c4d	usertests.asm	/^     c4d:	ff d0                	callq  *%rax$/;"	l
c4f	divide.asm	/^ c4f:	48 b8 d0 0f 00 00 00 	movabs $0xfd0,%rax$/;"	l
c4f	grep.asm	/^ c4f:	89 c7                	mov    %eax,%edi$/;"	l
c4f	init.asm	/^ c4f:	48 8b 10             	mov    (%rax),%rdx$/;"	l
c4f	sh.asm	/^     c4f:	ff d0                	callq  *%rax$/;"	l
c4f	stressfs.asm	/^ c4f:	00 00 00 $/;"	l
c4f	usertests.asm	/^     c4f:	85 c0                	test   %eax,%eax$/;"	l
c4f	wc.asm	/^ c4f:	75 07                	jne    c58 <morecore+0x41>$/;"	l
c5	ln.asm	/^  c5:	89 55 f0             	mov    %edx,-0x10(%rbp)$/;"	l
c5	sh.asm	/^      c5:	00 00 00 $/;"	l
c5	stressfs.asm	/^  c5:	48 8d 45 e0          	lea    -0x20(%rbp),%rax$/;"	l
c51	grep.asm	/^ c51:	48 b8 51 08 00 00 00 	movabs $0x851,%rax$/;"	l
c51	sh.asm	/^     c51:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx$/;"	l
c51	usertests.asm	/^     c51:	79 35                	jns    c88 <writetest1+0x2ef>$/;"	l
c51	wc.asm	/^ c51:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c52	init.asm	/^ c52:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
c52	stressfs.asm	/^ c52:	48 89 10             	mov    %rdx,(%rax)$/;"	l
c53	cat.asm	/^ c53:	00 00 00 $/;"	l
c53	ls.asm	/^     c53:	eb 12                	jmp    c67 <printf+0x2f4>$/;"	l
c53	usertests.asm	/^     c53:	48 b8 08 88 00 00 00 	movabs $0x8808,%rax$/;"	l
c55	ls.asm	/^     c55:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax$/;"	l
c55	sh.asm	/^     c55:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
c55	stressfs.asm	/^ c55:	48 b8 c0 0f 00 00 00 	movabs $0xfc0,%rax$/;"	l
c56	cat.asm	/^ c56:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%rax)$/;"	l
c56	divide.asm	/^ c56:	00 00 00 $/;"	l
c56	init.asm	/^ c56:	48 89 10             	mov    %rdx,(%rax)$/;"	l
c56	wc.asm	/^ c56:	eb 36                	jmp    c8e <morecore+0x77>$/;"	l
c58	grep.asm	/^ c58:	00 00 00 $/;"	l
c58	wc.asm	/^ c58:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
c59	divide.asm	/^ c59:	48 89 10             	mov    %rdx,(%rax)$/;"	l
c59	init.asm	/^ c59:	eb 2e                	jmp    c89 <malloc+0xdf>$/;"	l
c59	sh.asm	/^     c59:	48 89 d6             	mov    %rdx,%rsi$/;"	l
c5a	usertests.asm	/^     c5a:	00 00 00 $/;"	l
c5b	grep.asm	/^ c5b:	ff d0                	callq  *%rax$/;"	l
c5b	init.asm	/^ c5b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
c5c	divide.asm	/^ c5c:	48 b8 d0 0f 00 00 00 	movabs $0xfd0,%rax$/;"	l
c5c	ls.asm	/^     c5c:	48 8d 50 08          	lea    0x8(%rax),%rdx$/;"	l
c5c	sh.asm	/^     c5c:	48 89 c7             	mov    %rax,%rdi$/;"	l
c5c	stressfs.asm	/^ c5c:	00 00 00 $/;"	l
c5c	wc.asm	/^ c5c:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
c5d	cat.asm	/^ c5d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
c5d	grep.asm	/^ c5d:	eb 62                	jmp    cc1 <printf+0x373>$/;"	l
c5d	usertests.asm	/^     c5d:	8b 00                	mov    (%rax),%eax$/;"	l
c5f	grep.asm	/^ c5f:	83 bd 3c ff ff ff 25 	cmpl   $0x25,-0xc4(%rbp)$/;"	l
c5f	init.asm	/^ c5f:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
c5f	sh.asm	/^     c5f:	48 b8 da 0b 00 00 00 	movabs $0xbda,%rax$/;"	l
c5f	stressfs.asm	/^ c5f:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%rax)$/;"	l
c5f	usertests.asm	/^     c5f:	48 be f0 6b 00 00 00 	movabs $0x6bf0,%rsi$/;"	l
c6	kill.asm	/^  c6:	89 55 f0             	mov    %edx,-0x10(%rbp)$/;"	l
c6	mkdir.asm	/^  c6:	ff d0                	callq  *%rax$/;"	l
c6	rm.asm	/^  c6:	ff d0                	callq  *%rax$/;"	l
c6	usertests.asm	/^      c6:	00 00 00 $/;"	l
c6	zombie.asm	/^  c6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
c60	ls.asm	/^     c60:	48 89 95 28 ff ff ff 	mov    %rdx,-0xd8(%rbp)$/;"	l
c60	wc.asm	/^ c60:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
c61	cat.asm	/^ c61:	48 8b 00             	mov    (%rax),%rax$/;"	l
c62	init.asm	/^ c62:	2b 45 ec             	sub    -0x14(%rbp),%eax$/;"	l
c63	divide.asm	/^ c63:	00 00 00 $/;"	l
c64	cat.asm	/^ c64:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
c64	wc.asm	/^ c64:	8b 55 ec             	mov    -0x14(%rbp),%edx$/;"	l
c65	init.asm	/^ c65:	89 c2                	mov    %eax,%edx$/;"	l
c66	divide.asm	/^ c66:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%rax)$/;"	l
c66	grep.asm	/^ c66:	75 21                	jne    c89 <printf+0x33b>$/;"	l
c66	sh.asm	/^     c66:	00 00 00 $/;"	l
c66	stressfs.asm	/^ c66:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
c66	usertests.asm	/^     c66:	00 00 00 $/;"	l
c67	init.asm	/^ c67:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
c67	ls.asm	/^     c67:	8b 00                	mov    (%rax),%eax$/;"	l
c67	wc.asm	/^ c67:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
c68	cat.asm	/^ c68:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
c68	grep.asm	/^ c68:	8b 85 3c ff ff ff    	mov    -0xc4(%rbp),%eax$/;"	l
c69	ls.asm	/^     c69:	0f be d0             	movsbl %al,%edx$/;"	l
c69	sh.asm	/^     c69:	ff d0                	callq  *%rax$/;"	l
c69	usertests.asm	/^     c69:	89 c7                	mov    %eax,%edi$/;"	l
c6a	stressfs.asm	/^ c6a:	48 8b 00             	mov    (%rax),%rax$/;"	l
c6a	wc.asm	/^ c6a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
c6b	init.asm	/^ c6b:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
c6b	sh.asm	/^     c6b:	48 89 c2             	mov    %rax,%rdx$/;"	l
c6b	usertests.asm	/^     c6b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c6c	cat.asm	/^ c6c:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
c6c	ls.asm	/^     c6c:	8b 85 1c ff ff ff    	mov    -0xe4(%rbp),%eax$/;"	l
c6d	divide.asm	/^ c6d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
c6d	stressfs.asm	/^ c6d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
c6e	grep.asm	/^ c6e:	0f be d0             	movsbl %al,%edx$/;"	l
c6e	init.asm	/^ c6e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
c6e	sh.asm	/^     c6e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
c6e	wc.asm	/^ c6e:	48 83 c0 10          	add    $0x10,%rax$/;"	l
c6f	cat.asm	/^ c6f:	3b 45 ec             	cmp    -0x14(%rbp),%eax$/;"	l
c7	cat.asm	/^  c7:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)$/;"	l
c7	divide.asm	/^  c7:	89 c8                	mov    %ecx,%eax$/;"	l
c7	echo.asm	/^  c7:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
c7	grep.asm	/^  c7:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)$/;"	l
c70	usertests.asm	/^     c70:	48 ba c7 61 00 00 00 	movabs $0x61c7,%rdx$/;"	l
c71	divide.asm	/^ c71:	48 8b 00             	mov    (%rax),%rax$/;"	l
c71	grep.asm	/^ c71:	8b 85 1c ff ff ff    	mov    -0xe4(%rbp),%eax$/;"	l
c71	stressfs.asm	/^ c71:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
c72	cat.asm	/^ c72:	72 65                	jb     cd9 <malloc+0xfa>$/;"	l
c72	init.asm	/^ c72:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
c72	ls.asm	/^     c72:	89 d6                	mov    %edx,%esi$/;"	l
c72	sh.asm	/^     c72:	48 89 d6             	mov    %rdx,%rsi$/;"	l
c72	wc.asm	/^ c72:	48 89 c7             	mov    %rax,%rdi$/;"	l
c74	cat.asm	/^ c74:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
c74	divide.asm	/^ c74:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
c74	ls.asm	/^     c74:	89 c7                	mov    %eax,%edi$/;"	l
c75	init.asm	/^ c75:	89 c0                	mov    %eax,%eax$/;"	l
c75	sh.asm	/^     c75:	48 89 c7             	mov    %rax,%rdi$/;"	l
c75	stressfs.asm	/^ c75:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
c75	wc.asm	/^ c75:	48 b8 e5 0a 00 00 00 	movabs $0xae5,%rax$/;"	l
c76	ls.asm	/^     c76:	48 b8 76 08 00 00 00 	movabs $0x876,%rax$/;"	l
c77	grep.asm	/^ c77:	89 d6                	mov    %edx,%esi$/;"	l
c77	init.asm	/^ c77:	48 c1 e0 04          	shl    $0x4,%rax$/;"	l
c77	usertests.asm	/^     c77:	00 00 00 $/;"	l
c78	cat.asm	/^ c78:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
c78	divide.asm	/^ c78:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
c78	sh.asm	/^     c78:	48 b8 7c 06 00 00 00 	movabs $0x67c,%rax$/;"	l
c78	stressfs.asm	/^ c78:	3b 45 ec             	cmp    -0x14(%rbp),%eax$/;"	l
c79	grep.asm	/^ c79:	89 c7                	mov    %eax,%edi$/;"	l
c7a	usertests.asm	/^     c7a:	ff d2                	callq  *%rdx$/;"	l
c7b	cat.asm	/^ c7b:	3b 45 ec             	cmp    -0x14(%rbp),%eax$/;"	l
c7b	grep.asm	/^ c7b:	48 b8 51 08 00 00 00 	movabs $0x851,%rax$/;"	l
c7b	init.asm	/^ c7b:	48 01 45 f8          	add    %rax,-0x8(%rbp)$/;"	l
c7b	stressfs.asm	/^ c7b:	72 65                	jb     ce2 <malloc+0xfa>$/;"	l
c7c	divide.asm	/^ c7c:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
c7c	usertests.asm	/^     c7c:	48 b8 02 60 00 00 00 	movabs $0x6002,%rax$/;"	l
c7c	wc.asm	/^ c7c:	00 00 00 $/;"	l
c7d	ls.asm	/^     c7d:	00 00 00 $/;"	l
c7d	stressfs.asm	/^ c7d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
c7e	cat.asm	/^ c7e:	75 10                	jne    c90 <malloc+0xb1>$/;"	l
c7f	divide.asm	/^ c7f:	3b 45 ec             	cmp    -0x14(%rbp),%eax$/;"	l
c7f	init.asm	/^ c7f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
c7f	sh.asm	/^     c7f:	00 00 00 $/;"	l
c7f	wc.asm	/^ c7f:	ff d0                	callq  *%rax$/;"	l
c8	init.asm	/^  c8:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c8	ln.asm	/^  c8:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx$/;"	l
c8	mkdir.asm	/^  c8:	55                   	push   %rbp$/;"	l
c8	rm.asm	/^  c8:	55                   	push   %rbp$/;"	l
c8	sh.asm	/^      c8:	ff d1                	callq  *%rcx$/;"	l
c80	cat.asm	/^ c80:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
c80	ls.asm	/^     c80:	ff d0                	callq  *%rax$/;"	l
c81	stressfs.asm	/^ c81:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
c81	wc.asm	/^ c81:	48 b8 b0 12 00 00 00 	movabs $0x12b0,%rax$/;"	l
c82	divide.asm	/^ c82:	72 65                	jb     ce9 <malloc+0xfa>$/;"	l
c82	grep.asm	/^ c82:	00 00 00 $/;"	l
c82	ls.asm	/^     c82:	eb 62                	jmp    ce6 <printf+0x373>$/;"	l
c82	sh.asm	/^     c82:	ff d0                	callq  *%rax$/;"	l
c83	init.asm	/^ c83:	8b 55 ec             	mov    -0x14(%rbp),%edx$/;"	l
c83	usertests.asm	/^     c83:	00 00 00 $/;"	l
c84	cat.asm	/^ c84:	48 8b 10             	mov    (%rax),%rdx$/;"	l
c84	divide.asm	/^ c84:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
c84	ls.asm	/^     c84:	83 bd 3c ff ff ff 25 	cmpl   $0x25,-0xc4(%rbp)$/;"	l
c84	sh.asm	/^     c84:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
c84	stressfs.asm	/^ c84:	3b 45 ec             	cmp    -0x14(%rbp),%eax$/;"	l
c85	grep.asm	/^ c85:	ff d0                	callq  *%rax$/;"	l
c86	init.asm	/^ c86:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
c86	usertests.asm	/^     c86:	ff d0                	callq  *%rax$/;"	l
c87	cat.asm	/^ c87:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
c87	grep.asm	/^ c87:	eb 38                	jmp    cc1 <printf+0x373>$/;"	l
c87	stressfs.asm	/^ c87:	75 10                	jne    c99 <malloc+0xb1>$/;"	l
c88	divide.asm	/^ c88:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
c88	sh.asm	/^     c88:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
c88	usertests.asm	/^     c88:	48 b8 08 88 00 00 00 	movabs $0x8808,%rax$/;"	l
c88	wc.asm	/^ c88:	00 00 00 $/;"	l
c89	grep.asm	/^ c89:	8b 85 1c ff ff ff    	mov    -0xe4(%rbp),%eax$/;"	l
c89	init.asm	/^ c89:	48 b8 d0 0f 00 00 00 	movabs $0xfd0,%rax$/;"	l
c89	stressfs.asm	/^ c89:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
c8b	cat.asm	/^ c8b:	48 89 10             	mov    %rdx,(%rax)$/;"	l
c8b	divide.asm	/^ c8b:	3b 45 ec             	cmp    -0x14(%rbp),%eax$/;"	l
c8b	ls.asm	/^     c8b:	75 21                	jne    cae <printf+0x33b>$/;"	l
c8b	wc.asm	/^ c8b:	48 8b 00             	mov    (%rax),%rax$/;"	l
c8c	sh.asm	/^     c8c:	c9                   	leaveq $/;"	l
c8d	ls.asm	/^     c8d:	8b 85 3c ff ff ff    	mov    -0xc4(%rbp),%eax$/;"	l
c8d	sh.asm	/^     c8d:	c3                   	retq   $/;"	l
c8d	stressfs.asm	/^ c8d:	48 8b 10             	mov    (%rax),%rdx$/;"	l
c8e	cat.asm	/^ c8e:	eb 2e                	jmp    cbe <malloc+0xdf>$/;"	l
c8e	divide.asm	/^ c8e:	75 10                	jne    ca0 <malloc+0xb1>$/;"	l
c8e	sh.asm	/^     c8e:	55                   	push   %rbp$/;"	l
c8e	wc.asm	/^ c8e:	c9                   	leaveq $/;"	l
c8f	grep.asm	/^ c8f:	be 25 00 00 00       	mov    $0x25,%esi$/;"	l
c8f	sh.asm	/^     c8f:	48 89 e5             	mov    %rsp,%rbp$/;"	l
c8f	usertests.asm	/^     c8f:	00 00 00 $/;"	l
c8f	wc.asm	/^ c8f:	c3                   	retq   $/;"	l
c9	divide.asm	/^  c9:	f7 ea                	imul   %edx$/;"	l
c9	forktest.asm	/^  c9:	00 00 00 $/;"	l
c9	kill.asm	/^  c9:	90                   	nop$/;"	l
c9	mkdir.asm	/^  c9:	48 89 e5             	mov    %rsp,%rbp$/;"	l
c9	rm.asm	/^  c9:	48 89 e5             	mov    %rsp,%rbp$/;"	l
c9	stressfs.asm	/^  c9:	be 02 02 00 00       	mov    $0x202,%esi$/;"	l
c9	usertests.asm	/^      c9:	ff d0                	callq  *%rax$/;"	l
c90	cat.asm	/^ c90:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
c90	divide.asm	/^ c90:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
c90	init.asm	/^ c90:	00 00 00 $/;"	l
c90	stressfs.asm	/^ c90:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
c90	wc.asm	/^ c90:	55                   	push   %rbp$/;"	l
c91	wc.asm	/^ c91:	48 89 e5             	mov    %rsp,%rbp$/;"	l
c92	sh.asm	/^     c92:	48 83 ec 40          	sub    $0x40,%rsp$/;"	l
c92	usertests.asm	/^     c92:	8b 00                	mov    (%rax),%eax$/;"	l
c93	init.asm	/^ c93:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
c93	ls.asm	/^     c93:	0f be d0             	movsbl %al,%edx$/;"	l
c94	cat.asm	/^ c94:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
c94	divide.asm	/^ c94:	48 8b 10             	mov    (%rax),%rdx$/;"	l
c94	grep.asm	/^ c94:	89 c7                	mov    %eax,%edi$/;"	l
c94	stressfs.asm	/^ c94:	48 89 10             	mov    %rdx,(%rax)$/;"	l
c94	usertests.asm	/^     c94:	48 be 03 6c 00 00 00 	movabs $0x6c03,%rsi$/;"	l
c94	wc.asm	/^ c94:	48 83 ec 30          	sub    $0x30,%rsp$/;"	l
c96	grep.asm	/^ c96:	48 b8 51 08 00 00 00 	movabs $0x851,%rax$/;"	l
c96	ls.asm	/^     c96:	8b 85 1c ff ff ff    	mov    -0xe4(%rbp),%eax$/;"	l
c96	sh.asm	/^     c96:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)$/;"	l
c97	cat.asm	/^ c97:	2b 45 ec             	sub    -0x14(%rbp),%eax$/;"	l
c97	divide.asm	/^ c97:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
c97	init.asm	/^ c97:	48 89 10             	mov    %rdx,(%rax)$/;"	l
c97	stressfs.asm	/^ c97:	eb 2e                	jmp    cc7 <malloc+0xdf>$/;"	l
c98	wc.asm	/^ c98:	89 7d dc             	mov    %edi,-0x24(%rbp)$/;"	l
c99	stressfs.asm	/^ c99:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
c9a	cat.asm	/^ c9a:	89 c2                	mov    %eax,%edx$/;"	l
c9a	init.asm	/^ c9a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
c9a	sh.asm	/^     c9a:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)$/;"	l
c9b	divide.asm	/^ c9b:	48 89 10             	mov    %rdx,(%rax)$/;"	l
c9b	usertests.asm	/^     c9b:	00 00 00 $/;"	l
c9b	wc.asm	/^ c9b:	8b 45 dc             	mov    -0x24(%rbp),%eax$/;"	l
c9c	cat.asm	/^ c9c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
c9c	ls.asm	/^     c9c:	89 d6                	mov    %edx,%esi$/;"	l
c9d	grep.asm	/^ c9d:	00 00 00 $/;"	l
c9d	stressfs.asm	/^ c9d:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
c9e	divide.asm	/^ c9e:	eb 2e                	jmp    cce <malloc+0xdf>$/;"	l
c9e	init.asm	/^ c9e:	48 83 c0 10          	add    $0x10,%rax$/;"	l
c9e	ls.asm	/^     c9e:	89 c7                	mov    %eax,%edi$/;"	l
c9e	sh.asm	/^     c9e:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)$/;"	l
c9e	usertests.asm	/^     c9e:	89 c7                	mov    %eax,%edi$/;"	l
c9e	wc.asm	/^ c9e:	48 83 c0 0f          	add    $0xf,%rax$/;"	l
ca	kill.asm	/^  ca:	c9                   	leaveq $/;"	l
ca	sh.asm	/^      ca:	e9 62 02 00 00       	jmpq   331 <runcmd+0x331>$/;"	l
ca	wc.asm	/^  ca:	00 00 00 $/;"	l
ca	zombie.asm	/^  ca:	0f b6 00             	movzbl (%rax),%eax$/;"	l
ca0	cat.asm	/^ ca0:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
ca0	divide.asm	/^ ca0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ca0	grep.asm	/^ ca0:	ff d0                	callq  *%rax$/;"	l
ca0	ls.asm	/^     ca0:	48 b8 76 08 00 00 00 	movabs $0x876,%rax$/;"	l
ca0	stressfs.asm	/^ ca0:	2b 45 ec             	sub    -0x14(%rbp),%eax$/;"	l
ca0	usertests.asm	/^     ca0:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ca2	grep.asm	/^ ca2:	8b 85 3c ff ff ff    	mov    -0xc4(%rbp),%eax$/;"	l
ca2	init.asm	/^ ca2:	eb 4e                	jmp    cf2 <malloc+0x148>$/;"	l
ca2	sh.asm	/^     ca2:	e9 f8 00 00 00       	jmpq   d9f <parseredirs+0x111>$/;"	l
ca2	wc.asm	/^ ca2:	48 c1 e8 04          	shr    $0x4,%rax$/;"	l
ca3	cat.asm	/^ ca3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ca3	stressfs.asm	/^ ca3:	89 c2                	mov    %eax,%edx$/;"	l
ca4	divide.asm	/^ ca4:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
ca4	init.asm	/^ ca4:	48 b8 d0 0f 00 00 00 	movabs $0xfd0,%rax$/;"	l
ca5	stressfs.asm	/^ ca5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ca5	usertests.asm	/^     ca5:	48 ba c7 61 00 00 00 	movabs $0x61c7,%rdx$/;"	l
ca6	wc.asm	/^ ca6:	83 c0 01             	add    $0x1,%eax$/;"	l
ca7	cat.asm	/^ ca7:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
ca7	divide.asm	/^ ca7:	2b 45 ec             	sub    -0x14(%rbp),%eax$/;"	l
ca7	ls.asm	/^     ca7:	00 00 00 $/;"	l
ca7	sh.asm	/^     ca7:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi$/;"	l
ca8	grep.asm	/^ ca8:	0f be d0             	movsbl %al,%edx$/;"	l
ca9	stressfs.asm	/^ ca9:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
ca9	wc.asm	/^ ca9:	89 45 ec             	mov    %eax,-0x14(%rbp)$/;"	l
caa	cat.asm	/^ caa:	89 c0                	mov    %eax,%eax$/;"	l
caa	divide.asm	/^ caa:	89 c2                	mov    %eax,%edx$/;"	l
caa	ls.asm	/^     caa:	ff d0                	callq  *%rax$/;"	l
cab	grep.asm	/^ cab:	8b 85 1c ff ff ff    	mov    -0xe4(%rbp),%eax$/;"	l
cab	init.asm	/^ cab:	00 00 00 $/;"	l
cab	sh.asm	/^     cab:	48 8b 45 d0          	mov    -0x30(%rbp),%rax$/;"	l
cac	cat.asm	/^ cac:	48 c1 e0 04          	shl    $0x4,%rax$/;"	l
cac	divide.asm	/^ cac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
cac	ls.asm	/^     cac:	eb 38                	jmp    ce6 <printf+0x373>$/;"	l
cac	stressfs.asm	/^ cac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
cac	usertests.asm	/^     cac:	00 00 00 $/;"	l
cac	wc.asm	/^ cac:	48 b8 b0 12 00 00 00 	movabs $0x12b0,%rax$/;"	l
cae	init.asm	/^ cae:	48 8b 00             	mov    (%rax),%rax$/;"	l
cae	ls.asm	/^     cae:	8b 85 1c ff ff ff    	mov    -0xe4(%rbp),%eax$/;"	l
caf	sh.asm	/^     caf:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
caf	usertests.asm	/^     caf:	ff d2                	callq  *%rdx$/;"	l
cat	cat.c	/^cat(int fd)$/;"	f
cb	cat.asm	/^  cb:	83 7d ec 01          	cmpl   $0x1,-0x14(%rbp)$/;"	l
cb	divide.asm	/^  cb:	c1 fa 02             	sar    $0x2,%edx$/;"	l
cb	echo.asm	/^  cb:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
cb	kill.asm	/^  cb:	c3                   	retq   $/;"	l
cb	ls.asm	/^      cb:	00 00 00 $/;"	l
cb	usertests.asm	/^      cb:	48 bf b5 68 00 00 00 	movabs $0x68b5,%rdi$/;"	l
cb0	cat.asm	/^ cb0:	48 01 45 f8          	add    %rax,-0x8(%rbp)$/;"	l
cb0	divide.asm	/^ cb0:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
cb0	stressfs.asm	/^ cb0:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
cb1	grep.asm	/^ cb1:	89 d6                	mov    %edx,%esi$/;"	l
cb1	init.asm	/^ cb1:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)$/;"	l
cb1	usertests.asm	/^     cb1:	90                   	nop$/;"	l
cb2	usertests.asm	/^     cb2:	c9                   	leaveq $/;"	l
cb3	divide.asm	/^ cb3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
cb3	grep.asm	/^ cb3:	89 c7                	mov    %eax,%edi$/;"	l
cb3	stressfs.asm	/^ cb3:	89 c0                	mov    %eax,%eax$/;"	l
cb3	usertests.asm	/^     cb3:	c3                   	retq   $/;"	l
cb3	wc.asm	/^ cb3:	00 00 00 $/;"	l
cb4	cat.asm	/^ cb4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
cb4	ls.asm	/^     cb4:	be 25 00 00 00       	mov    $0x25,%esi$/;"	l
cb4	sh.asm	/^     cb4:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
cb4	usertests.asm	/^     cb4:	55                   	push   %rbp$/;"	l
cb5	grep.asm	/^ cb5:	48 b8 51 08 00 00 00 	movabs $0x851,%rax$/;"	l
cb5	init.asm	/^ cb5:	75 23                	jne    cda <malloc+0x130>$/;"	l
cb5	stressfs.asm	/^ cb5:	48 c1 e0 04          	shl    $0x4,%rax$/;"	l
cb5	usertests.asm	/^     cb5:	48 89 e5             	mov    %rsp,%rbp$/;"	l
cb6	wc.asm	/^ cb6:	48 8b 00             	mov    (%rax),%rax$/;"	l
cb7	divide.asm	/^ cb7:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
cb7	init.asm	/^ cb7:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
cb8	cat.asm	/^ cb8:	8b 55 ec             	mov    -0x14(%rbp),%edx$/;"	l
cb8	usertests.asm	/^     cb8:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
cb9	ls.asm	/^     cb9:	89 c7                	mov    %eax,%edi$/;"	l
cb9	sh.asm	/^     cb9:	48 89 c7             	mov    %rax,%rdi$/;"	l
cb9	stressfs.asm	/^ cb9:	48 01 45 f8          	add    %rax,-0x8(%rbp)$/;"	l
cb9	wc.asm	/^ cb9:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
cba	divide.asm	/^ cba:	89 c0                	mov    %eax,%eax$/;"	l
cba	init.asm	/^ cba:	89 c7                	mov    %eax,%edi$/;"	l
cbb	cat.asm	/^ cbb:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
cbb	ls.asm	/^     cbb:	48 b8 76 08 00 00 00 	movabs $0x876,%rax$/;"	l
cbc	divide.asm	/^ cbc:	48 c1 e0 04          	shl    $0x4,%rax$/;"	l
cbc	grep.asm	/^ cbc:	00 00 00 $/;"	l
cbc	init.asm	/^ cbc:	48 b8 31 0b 00 00 00 	movabs $0xb31,%rax$/;"	l
cbc	sh.asm	/^     cbc:	48 b8 aa 07 00 00 00 	movabs $0x7aa,%rax$/;"	l
cbc	usertests.asm	/^     cbc:	48 b8 08 88 00 00 00 	movabs $0x8808,%rax$/;"	l
cbd	stressfs.asm	/^ cbd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
cbd	wc.asm	/^ cbd:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)$/;"	l
cbe	cat.asm	/^ cbe:	48 b8 f0 11 00 00 00 	movabs $0x11f0,%rax$/;"	l
cbf	grep.asm	/^ cbf:	ff d0                	callq  *%rax$/;"	l
cc	cat.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	divide.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	echo.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	forktest.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	forktest.asm	/^  cc:	ff d0                	callq  *%rax$/;"	l
cc	grep.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	grep.asm	/^  cc:	0f 85 72 ff ff ff    	jne    44 <grep+0x44>$/;"	l
cc	init.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	kill.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	kill.asm	/^  cc:	55                   	push   %rbp$/;"	l
cc	ln.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	ln.asm	/^  cc:	8b 55 f0             	mov    -0x10(%rbp),%edx$/;"	l
cc	ls.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	mkdir.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	mkdir.asm	/^  cc:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
cc	rm.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	rm.asm	/^  cc:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
cc	sh.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	stressfs.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	usertests.asm	/^        cc = sizeof(buf);$/;"	d
cc	usertests.asm	/^      cc = cc * 2;$/;"	d
cc	usertests.asm	/^    cc = 1;$/;"	d
cc	usertests.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	usertests.asm	/^    cc = read(fd, buf, 300);$/;"	d
cc	usertests.asm	/^  cc = read(fd, buf, sizeof(buf));$/;"	d
cc	wc.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	zombie.asm	/^    cc = read(0, &c, 1);$/;"	d
cc0	divide.asm	/^ cc0:	48 01 45 f8          	add    %rax,-0x8(%rbp)$/;"	l
cc1	grep.asm	/^ cc1:	c7 85 40 ff ff ff 00 	movl   $0x0,-0xc0(%rbp)$/;"	l
cc1	stressfs.asm	/^ cc1:	8b 55 ec             	mov    -0x14(%rbp),%edx$/;"	l
cc2	ls.asm	/^     cc2:	00 00 00 $/;"	l
cc2	wc.asm	/^ cc2:	75 4a                	jne    d0e <malloc+0x7e>$/;"	l
cc3	init.asm	/^ cc3:	00 00 00 $/;"	l
cc3	sh.asm	/^     cc3:	00 00 00 $/;"	l
cc3	usertests.asm	/^     cc3:	00 00 00 $/;"	l
cc4	divide.asm	/^ cc4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
cc4	stressfs.asm	/^ cc4:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
cc4	wc.asm	/^ cc4:	48 b8 a0 12 00 00 00 	movabs $0x12a0,%rax$/;"	l
cc5	cat.asm	/^ cc5:	00 00 00 $/;"	l
cc5	ls.asm	/^     cc5:	ff d0                	callq  *%rax$/;"	l
cc6	init.asm	/^ cc6:	ff d0                	callq  *%rax$/;"	l
cc6	sh.asm	/^     cc6:	ff d0                	callq  *%rax$/;"	l
cc6	usertests.asm	/^     cc6:	8b 00                	mov    (%rax),%eax$/;"	l
cc7	ls.asm	/^     cc7:	8b 85 3c ff ff ff    	mov    -0xc4(%rbp),%eax$/;"	l
cc7	stressfs.asm	/^ cc7:	48 b8 d0 0f 00 00 00 	movabs $0xfd0,%rax$/;"	l
cc8	cat.asm	/^ cc8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
cc8	divide.asm	/^ cc8:	8b 55 ec             	mov    -0x14(%rbp),%edx$/;"	l
cc8	grep.asm	/^ cc8:	00 00 00 $/;"	l
cc8	init.asm	/^ cc8:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
cc8	sh.asm	/^     cc8:	89 45 fc             	mov    %eax,-0x4(%rbp)$/;"	l
cc8	usertests.asm	/^     cc8:	48 be 18 6c 00 00 00 	movabs $0x6c18,%rsi$/;"	l
ccb	divide.asm	/^ ccb:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
ccb	grep.asm	/^ ccb:	83 85 44 ff ff ff 01 	addl   $0x1,-0xbc(%rbp)$/;"	l
ccb	sh.asm	/^     ccb:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx$/;"	l
ccb	wc.asm	/^ ccb:	00 00 00 $/;"	l
ccc	cat.asm	/^ ccc:	48 89 10             	mov    %rdx,(%rax)$/;"	l
ccc	init.asm	/^ ccc:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)$/;"	l
ccd	ls.asm	/^     ccd:	0f be d0             	movsbl %al,%edx$/;"	l
cce	divide.asm	/^ cce:	48 b8 e0 0f 00 00 00 	movabs $0xfe0,%rax$/;"	l
cce	stressfs.asm	/^ cce:	00 00 00 $/;"	l
cce	wc.asm	/^ cce:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ccf	cat.asm	/^ ccf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ccf	sh.asm	/^     ccf:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx$/;"	l
ccf	usertests.asm	/^     ccf:	00 00 00 $/;"	l
cd	init.asm	/^  cd:	48 ba 5a 06 00 00 00 	movabs $0x65a,%rdx$/;"	l
cd	kill.asm	/^  cd:	48 89 e5             	mov    %rsp,%rbp$/;"	l
cd	wc.asm	/^  cd:	ff d0                	callq  *%rax$/;"	l
cd	zombie.asm	/^  cd:	84 c0                	test   %al,%al$/;"	l
cd0	ls.asm	/^     cd0:	8b 85 1c ff ff ff    	mov    -0xe4(%rbp),%eax$/;"	l
cd1	init.asm	/^ cd1:	75 07                	jne    cda <malloc+0x130>$/;"	l
cd1	stressfs.asm	/^ cd1:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
cd2	grep.asm	/^ cd2:	8b 85 44 ff ff ff    	mov    -0xbc(%rbp),%eax$/;"	l
cd2	usertests.asm	/^     cd2:	89 c7                	mov    %eax,%edi$/;"	l
cd2	wc.asm	/^ cd2:	48 b8 b0 12 00 00 00 	movabs $0x12b0,%rax$/;"	l
cd3	cat.asm	/^ cd3:	48 83 c0 10          	add    $0x10,%rax$/;"	l
cd3	init.asm	/^ cd3:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
cd3	sh.asm	/^     cd3:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi$/;"	l
cd4	usertests.asm	/^     cd4:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
cd5	divide.asm	/^ cd5:	00 00 00 $/;"	l
cd5	stressfs.asm	/^ cd5:	48 89 10             	mov    %rdx,(%rax)$/;"	l
cd6	ls.asm	/^     cd6:	89 d6                	mov    %edx,%esi$/;"	l
cd7	cat.asm	/^ cd7:	eb 4e                	jmp    d27 <malloc+0x148>$/;"	l
cd7	sh.asm	/^     cd7:	48 8b 45 d0          	mov    -0x30(%rbp),%rax$/;"	l
cd8	divide.asm	/^ cd8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
cd8	grep.asm	/^ cd8:	48 63 d0             	movslq %eax,%rdx$/;"	l
cd8	init.asm	/^ cd8:	eb 18                	jmp    cf2 <malloc+0x148>$/;"	l
cd8	ls.asm	/^     cd8:	89 c7                	mov    %eax,%edi$/;"	l
cd8	stressfs.asm	/^ cd8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
cd9	cat.asm	/^ cd9:	48 b8 f0 11 00 00 00 	movabs $0x11f0,%rax$/;"	l
cd9	usertests.asm	/^     cd9:	48 ba c7 61 00 00 00 	movabs $0x61c7,%rdx$/;"	l
cd9	wc.asm	/^ cd9:	00 00 00 $/;"	l
cda	init.asm	/^ cda:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
cda	ls.asm	/^     cda:	48 b8 76 08 00 00 00 	movabs $0x876,%rax$/;"	l
cdb	grep.asm	/^ cdb:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax$/;"	l
cdb	sh.asm	/^     cdb:	48 89 c7             	mov    %rax,%rdi$/;"	l
cdc	divide.asm	/^ cdc:	48 89 10             	mov    %rdx,(%rax)$/;"	l
cdc	stressfs.asm	/^ cdc:	48 83 c0 10          	add    $0x10,%rax$/;"	l
cdc	wc.asm	/^ cdc:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
cde	init.asm	/^ cde:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
cde	sh.asm	/^     cde:	48 b8 aa 07 00 00 00 	movabs $0x7aa,%rax$/;"	l
cdf	divide.asm	/^ cdf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ce	divide.asm	/^  ce:	89 c8                	mov    %ecx,%eax$/;"	l
ce	forktest.asm	/^  ce:	89 45 f8             	mov    %eax,-0x8(%rbp)$/;"	l
ce	ls.asm	/^      ce:	ff d0                	callq  *%rax$/;"	l
ce	stressfs.asm	/^  ce:	48 89 c7             	mov    %rax,%rdi$/;"	l
ce0	cat.asm	/^ ce0:	00 00 00 $/;"	l
ce0	stressfs.asm	/^ ce0:	eb 4e                	jmp    d30 <malloc+0x148>$/;"	l
ce0	usertests.asm	/^     ce0:	00 00 00 $/;"	l
ce0	wc.asm	/^ ce0:	48 89 10             	mov    %rdx,(%rax)$/;"	l
ce1	ls.asm	/^     ce1:	00 00 00 $/;"	l
ce2	grep.asm	/^ ce2:	48 01 d0             	add    %rdx,%rax$/;"	l
ce2	init.asm	/^ ce2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ce2	stressfs.asm	/^ ce2:	48 b8 d0 0f 00 00 00 	movabs $0xfd0,%rax$/;"	l
ce3	cat.asm	/^ ce3:	48 8b 00             	mov    (%rax),%rax$/;"	l
ce3	divide.asm	/^ ce3:	48 83 c0 10          	add    $0x10,%rax$/;"	l
ce3	usertests.asm	/^     ce3:	ff d2                	callq  *%rdx$/;"	l
ce3	wc.asm	/^ ce3:	48 b8 b0 12 00 00 00 	movabs $0x12b0,%rax$/;"	l
ce4	ls.asm	/^     ce4:	ff d0                	callq  *%rax$/;"	l
ce5	grep.asm	/^ ce5:	0f b6 00             	movzbl (%rax),%eax$/;"	l
ce5	sh.asm	/^     ce5:	00 00 00 $/;"	l
ce5	usertests.asm	/^     ce5:	48 b8 40 a8 00 00 00 	movabs $0xa840,%rax$/;"	l
ce6	cat.asm	/^ ce6:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)$/;"	l
ce6	init.asm	/^ ce6:	48 8b 00             	mov    (%rax),%rax$/;"	l
ce6	ls.asm	/^     ce6:	c7 85 40 ff ff ff 00 	movl   $0x0,-0xc0(%rbp)$/;"	l
ce7	divide.asm	/^ ce7:	eb 4e                	jmp    d37 <malloc+0x148>$/;"	l
ce8	grep.asm	/^ ce8:	84 c0                	test   %al,%al$/;"	l
ce8	sh.asm	/^     ce8:	ff d0                	callq  *%rax$/;"	l
ce9	divide.asm	/^ ce9:	48 b8 e0 0f 00 00 00 	movabs $0xfe0,%rax$/;"	l
ce9	init.asm	/^ ce9:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ce9	stressfs.asm	/^ ce9:	00 00 00 $/;"	l
cea	cat.asm	/^ cea:	75 23                	jne    d0f <malloc+0x130>$/;"	l
cea	grep.asm	/^ cea:	0f 85 fc fc ff ff    	jne    9ec <printf+0x9e>$/;"	l
cea	sh.asm	/^     cea:	83 f8 61             	cmp    $0x61,%eax$/;"	l
cea	wc.asm	/^ cea:	00 00 00 $/;"	l
cec	cat.asm	/^ cec:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
cec	stressfs.asm	/^ cec:	48 8b 00             	mov    (%rax),%rax$/;"	l
cec	usertests.asm	/^     cec:	00 00 00 $/;"	l
ced	init.asm	/^ ced:	e9 41 ff ff ff       	jmpq   c33 <malloc+0x89>$/;"	l
ced	ls.asm	/^     ced:	00 00 00 $/;"	l
ced	sh.asm	/^     ced:	74 16                	je     d05 <parseredirs+0x77>$/;"	l
ced	wc.asm	/^ ced:	48 8b 10             	mov    (%rax),%rdx$/;"	l
cef	cat.asm	/^ cef:	89 c7                	mov    %eax,%edi$/;"	l
cef	sh.asm	/^     cef:	48 bf ff 1d 00 00 00 	movabs $0x1dff,%rdi$/;"	l
cef	stressfs.asm	/^ cef:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)$/;"	l
cef	usertests.asm	/^     cef:	c6 00 61             	movb   $0x61,(%rax)$/;"	l
cf	cat.asm	/^  cf:	7f 1d                	jg     ee <main+0x32>$/;"	l
cf	echo.asm	/^  cf:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)$/;"	l
cf	ln.asm	/^  cf:	8b 45 f4             	mov    -0xc(%rbp),%eax$/;"	l
cf	sh.asm	/^      cf:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
cf	wc.asm	/^  cf:	89 45 e8             	mov    %eax,-0x18(%rbp)$/;"	l
cf	zombie.asm	/^  cf:	74 12                	je     e3 <strcmp+0x39>$/;"	l
cf0	divide.asm	/^ cf0:	00 00 00 $/;"	l
cf0	grep.asm	/^ cf0:	90                   	nop$/;"	l
cf0	ls.asm	/^     cf0:	83 85 44 ff ff ff 01 	addl   $0x1,-0xbc(%rbp)$/;"	l
cf0	wc.asm	/^ cf0:	48 b8 a0 12 00 00 00 	movabs $0x12a0,%rax$/;"	l
cf1	cat.asm	/^ cf1:	48 b8 66 0b 00 00 00 	movabs $0xb66,%rax$/;"	l
cf1	grep.asm	/^ cf1:	c9                   	leaveq $/;"	l
cf2	grep.asm	/^ cf2:	c3                   	retq   $/;"	l
cf2	init.asm	/^ cf2:	c9                   	leaveq $/;"	l
cf2	usertests.asm	/^     cf2:	48 b8 40 a8 00 00 00 	movabs $0xa840,%rax$/;"	l
cf3	divide.asm	/^ cf3:	48 8b 00             	mov    (%rax),%rax$/;"	l
cf3	grep.asm	/^ cf3:	55                   	push   %rbp$/;"	l
cf3	init.asm	/^ cf3:	c3                   	retq   $/;"	l
cf3	stressfs.asm	/^ cf3:	75 23                	jne    d18 <malloc+0x130>$/;"	l
cf4	grep.asm	/^ cf4:	48 89 e5             	mov    %rsp,%rbp$/;"	l
cf5	stressfs.asm	/^ cf5:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
cf6	divide.asm	/^ cf6:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)$/;"	l
cf6	sh.asm	/^     cf6:	00 00 00 $/;"	l
cf7	grep.asm	/^ cf7:	48 83 ec 18          	sub    $0x18,%rsp$/;"	l
cf7	ls.asm	/^     cf7:	8b 85 44 ff ff ff    	mov    -0xbc(%rbp),%eax$/;"	l
cf7	wc.asm	/^ cf7:	00 00 00 $/;"	l
cf8	cat.asm	/^ cf8:	00 00 00 $/;"	l
cf8	stressfs.asm	/^ cf8:	89 c7                	mov    %eax,%edi$/;"	l
cf9	sh.asm	/^     cf9:	48 b8 26 05 00 00 00 	movabs $0x526,%rax$/;"	l
cf9	usertests.asm	/^     cf9:	00 00 00 $/;"	l
cfa	divide.asm	/^ cfa:	75 23                	jne    d1f <malloc+0x130>$/;"	l
cfa	stressfs.asm	/^ cfa:	48 b8 6f 0b 00 00 00 	movabs $0xb6f,%rax$/;"	l
cfa	wc.asm	/^ cfa:	48 89 10             	mov    %rdx,(%rax)$/;"	l
cfb	cat.asm	/^ cfb:	ff d0                	callq  *%rax$/;"	l
cfb	grep.asm	/^ cfb:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
cfc	divide.asm	/^ cfc:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
cfc	usertests.asm	/^     cfc:	c6 40 02 00          	movb   $0x0,0x2(%rax)$/;"	l
cfd	cat.asm	/^ cfd:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
cfd	ls.asm	/^     cfd:	48 63 d0             	movslq %eax,%rdx$/;"	l
cfd	wc.asm	/^ cfd:	48 b8 a0 12 00 00 00 	movabs $0x12a0,%rax$/;"	l
cff	divide.asm	/^ cff:	89 c7                	mov    %eax,%edi$/;"	l
cff	grep.asm	/^ cff:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
cgaputc	console.c	/^cgaputc(int c)$/;"	f	file:
chan	proc.h	/^  void *chan;                  \/\/ If non-zero, sleeping on chan$/;"	m	struct:proc
char	cat.asm	/^char buf[512];$/;"	l
char	grep.asm	/^char buf[1024];$/;"	l
char	init.asm	/^char *argv[] = { "sh", 0 };$/;"	l
char	sh.asm	/^char symbols[] = "<|>&;()";$/;"	l
char	sh.asm	/^char whitespace[] = " \\t\\r\\n\\v";$/;"	l
char	usertests.asm	/^char uninit[10000];$/;"	l
char	wc.asm	/^char buf[512];$/;"	l
checksum	bootmain.c	/^  uint64 checksum;$/;"	m	struct:mbheader	file:
checksum	mp.h	/^  uchar checksum;               \/\/ all bytes must add up to 0$/;"	m	struct:mp
checksum	mp.h	/^  uchar checksum;               \/\/ all bytes must add up to 0$/;"	m	struct:mpconf
clearpteu	vm.c	/^clearpteu(pde_t *pgdir, char *uva)$/;"	f
cli	x86.h	/^cli(void)$/;"	f
cmd	sh.asm	/^      cmd = redircmd(cmd, q, eq, O_RDONLY, 0);$/;"	d
cmd	sh.asm	/^      cmd = redircmd(cmd, q, eq, O_WRONLY|O_CREATE, 1);$/;"	d
cmd	sh.asm	/^    cmd = backcmd(cmd);$/;"	d
cmd	sh.asm	/^    cmd = listcmd(cmd, parseline(ps, es));$/;"	d
cmd	sh.asm	/^    cmd = pipecmd(cmd, parsepipe(ps, es));$/;"	d
cmd	sh.asm	/^  cmd = (struct execcmd*)ret;$/;"	d
cmd	sh.asm	/^  cmd = malloc(sizeof(*cmd));$/;"	d
cmd	sh.asm	/^  cmd = parseexec(ps, es);$/;"	d
cmd	sh.asm	/^  cmd = parseline(&s, es);$/;"	d
cmd	sh.asm	/^  cmd = parseline(ps, es);$/;"	d
cmd	sh.asm	/^  cmd = parsepipe(ps, es);$/;"	d
cmd	sh.asm	/^  cmd = parseredirs(cmd, ps, es);$/;"	d
cmd	sh.c	/^  struct cmd *cmd;$/;"	m	struct:backcmd	typeref:struct:backcmd::cmd	file:
cmd	sh.c	/^  struct cmd *cmd;$/;"	m	struct:redircmd	typeref:struct:redircmd::cmd	file:
cmd	sh.c	/^struct cmd {$/;"	s	file:
cmos_read	lapic.c	/^static uint cmos_read(uint reg)$/;"	f	file:
cmostime	lapic.c	/^void cmostime(struct rtcdate *r)$/;"	f
code	kernel.asm	/^  code = P2V(0x7000);$/;"	d
commit	log.c	/^commit()$/;"	f	file:
committing	log.c	/^  int committing;  \/\/ in commit(), please wait.$/;"	m	struct:log	file:
concreate	usertests.c	/^concreate(void)$/;"	f
conf	kernel.asm	/^  conf = (struct mpconf*) P2V((addr_t) mp->physaddr);$/;"	d
cons	console.c	/^} cons;$/;"	v	typeref:struct:__anon7	file:
consoleinit	console.c	/^consoleinit(void)$/;"	f
consoleintr	console.c	/^consoleintr(int (*getc)(void))$/;"	f
consoleread	console.c	/^consoleread(struct inode *ip, char *dst, int n)$/;"	f
consolewrite	console.c	/^consolewrite(struct inode *ip, char *buf, int n)$/;"	f
consputc	console.c	/^consputc(int c)$/;"	f
context	proc.h	/^  struct context *context;     \/\/ swtch() here to run process$/;"	m	struct:proc	typeref:struct:proc::context
context	proc.h	/^struct context {$/;"	s
copyout	vm.c	/^copyout(pde_t *pgdir, uint va, void *p, uint len)$/;"	f
copyuvm	vm.c	/^copyuvm(pde_t *pgdir, uint sz)$/;"	f
cprintf	console.c	/^cprintf(char *fmt, ...)$/;"	f
cpu	kernel.asm	/^  cpu = c;$/;"	d
cpu	proc.h	/^struct cpu {$/;"	s
cpu	spinlock.h	/^  struct cpu *cpu;   \/\/ The cpu holding the lock.$/;"	m	struct:spinlock	typeref:struct:spinlock::cpu
cpu	vm.c	/^__thread struct cpu *cpu;$/;"	v	typeref:struct:cpu
cpunum	lapic.c	/^cpunum(void)$/;"	f
cpus	mp.c	/^struct cpu cpus[NCPU];$/;"	v	typeref:struct:cpu
cr3	mmu.h	/^  void *cr3;         \/\/ Page directory base$/;"	m	struct:taskstate
create	sysfile.c	/^create(char *path, short type, short major, short minor)$/;"	f	file:
createdelete	usertests.c	/^createdelete(void)$/;"	f
createtest	usertests.c	/^createtest(void)$/;"	f
crt	console.c	/^static ushort *crt = (ushort*)P2V(0xb8000);  \/\/ CGA memory$/;"	v	file:
cs	mmu.h	/^  uint cs : 16;         \/\/ code segment selector$/;"	m	struct:gatedesc
cs	mmu.h	/^  ushort cs;$/;"	m	struct:taskstate
cs	x86.h	/^   uint64 cs;$/;"	m	struct:trapframe
ctlmap	kbd.h	/^static uchar ctlmap[256] =$/;"	v
cwd	proc.h	/^  struct inode *cwd;           \/\/ Current directory$/;"	m	struct:proc	typeref:struct:proc::inode
d	cat.asm	/^   d:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
d	init.asm	/^   d:	48 bf f7 0c 00 00 00 	movabs $0xcf7,%rdi$/;"	l
d	kernel.asm	/^  d = dst;$/;"	d
d	ls.asm	/^       d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
d0	divide.asm	/^  d0:	c1 f8 1f             	sar    $0x1f,%eax$/;"	l
d0	kill.asm	/^  d0:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
d0	ls.asm	/^      d0:	89 c2                	mov    %eax,%edx$/;"	l
d0	mkdir.asm	/^  d0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)$/;"	l
d0	rm.asm	/^  d0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)$/;"	l
d00	ls.asm	/^     d00:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax$/;"	l
d00	sh.asm	/^     d00:	00 00 00 $/;"	l
d00	usertests.asm	/^     d00:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)$/;"	l
d01	cat.asm	/^ d01:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)$/;"	l
d01	divide.asm	/^ d01:	48 b8 76 0b 00 00 00 	movabs $0xb76,%rax$/;"	l
d01	stressfs.asm	/^ d01:	00 00 00 $/;"	l
d03	grep.asm	/^ d03:	48 83 e8 10          	sub    $0x10,%rax$/;"	l
d03	sh.asm	/^     d03:	ff d0                	callq  *%rax$/;"	l
d04	stressfs.asm	/^ d04:	ff d0                	callq  *%rax$/;"	l
d04	wc.asm	/^ d04:	00 00 00 $/;"	l
d05	sh.asm	/^     d05:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
d06	cat.asm	/^ d06:	75 07                	jne    d0f <malloc+0x130>$/;"	l
d06	stressfs.asm	/^ d06:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
d07	grep.asm	/^ d07:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
d07	ls.asm	/^     d07:	48 01 d0             	add    %rdx,%rax$/;"	l
d07	usertests.asm	/^     d07:	eb 48                	jmp    d51 <createtest+0x9d>$/;"	l
d07	wc.asm	/^ d07:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%rax)$/;"	l
d08	cat.asm	/^ d08:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
d08	divide.asm	/^ d08:	00 00 00 $/;"	l
d08	sh.asm	/^     d08:	83 f8 3c             	cmp    $0x3c,%eax$/;"	l
d09	usertests.asm	/^     d09:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
d0a	ls.asm	/^     d0a:	0f b6 00             	movzbl (%rax),%eax$/;"	l
d0a	stressfs.asm	/^ d0a:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)$/;"	l
d0b	divide.asm	/^ d0b:	ff d0                	callq  *%rax$/;"	l
d0b	grep.asm	/^ d0b:	48 b8 10 17 00 00 00 	movabs $0x1710,%rax$/;"	l
d0b	sh.asm	/^     d0b:	74 0f                	je     d1c <parseredirs+0x8e>$/;"	l
d0c	usertests.asm	/^     d0c:	83 c0 30             	add    $0x30,%eax$/;"	l
d0d	cat.asm	/^ d0d:	eb 18                	jmp    d27 <malloc+0x148>$/;"	l
d0d	divide.asm	/^ d0d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
d0d	ls.asm	/^     d0d:	84 c0                	test   %al,%al$/;"	l
d0d	sh.asm	/^     d0d:	83 f8 3e             	cmp    $0x3e,%eax$/;"	l
d0e	wc.asm	/^ d0e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
d0f	cat.asm	/^ d0f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
d0f	ls.asm	/^     d0f:	0f 85 fc fc ff ff    	jne    a11 <printf+0x9e>$/;"	l
d0f	stressfs.asm	/^ d0f:	75 07                	jne    d18 <malloc+0x130>$/;"	l
d0f	usertests.asm	/^     d0f:	89 c2                	mov    %eax,%edx$/;"	l
d1	cat.asm	/^  d1:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
d1	forktest.asm	/^  d1:	83 7d f8 00          	cmpl   $0x0,-0x8(%rbp)$/;"	l
d1	stressfs.asm	/^  d1:	48 b8 23 05 00 00 00 	movabs $0x523,%rax$/;"	l
d1	zombie.asm	/^  d1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
d10	sh.asm	/^     d10:	74 36                	je     d48 <parseredirs+0xba>$/;"	l
d11	divide.asm	/^ d11:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)$/;"	l
d11	stressfs.asm	/^ d11:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
d11	usertests.asm	/^     d11:	48 b8 40 a8 00 00 00 	movabs $0xa840,%rax$/;"	l
d12	grep.asm	/^ d12:	00 00 00 $/;"	l
d12	sh.asm	/^     d12:	83 f8 2b             	cmp    $0x2b,%eax$/;"	l
d12	wc.asm	/^ d12:	48 8b 00             	mov    (%rax),%rax$/;"	l
d13	cat.asm	/^ d13:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
d15	grep.asm	/^ d15:	48 8b 00             	mov    (%rax),%rax$/;"	l
d15	ls.asm	/^     d15:	90                   	nop$/;"	l
d15	sh.asm	/^     d15:	74 5d                	je     d74 <parseredirs+0xe6>$/;"	l
d15	wc.asm	/^ d15:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
d16	divide.asm	/^ d16:	75 07                	jne    d1f <malloc+0x130>$/;"	l
d16	ls.asm	/^     d16:	c9                   	leaveq $/;"	l
d16	stressfs.asm	/^ d16:	eb 18                	jmp    d30 <malloc+0x148>$/;"	l
d17	cat.asm	/^ d17:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
d17	ls.asm	/^     d17:	c3                   	retq   $/;"	l
d17	sh.asm	/^     d17:	e9 83 00 00 00       	jmpq   d9f <parseredirs+0x111>$/;"	l
d18	divide.asm	/^ d18:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
d18	grep.asm	/^ d18:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
d18	ls.asm	/^     d18:	55                   	push   %rbp$/;"	l
d18	stressfs.asm	/^ d18:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
d18	usertests.asm	/^     d18:	00 00 00 $/;"	l
d19	ls.asm	/^     d19:	48 89 e5             	mov    %rsp,%rbp$/;"	l
d19	wc.asm	/^ d19:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
d1b	cat.asm	/^ d1b:	48 8b 00             	mov    (%rax),%rax$/;"	l
d1b	usertests.asm	/^     d1b:	88 50 01             	mov    %dl,0x1(%rax)$/;"	l
d1c	grep.asm	/^ d1c:	eb 2f                	jmp    d4d <free+0x5a>$/;"	l
d1c	ls.asm	/^     d1c:	48 83 ec 18          	sub    $0x18,%rsp$/;"	l
d1c	sh.asm	/^     d1c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx$/;"	l
d1c	stressfs.asm	/^ d1c:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
d1d	divide.asm	/^ d1d:	eb 18                	jmp    d37 <malloc+0x148>$/;"	l
d1d	wc.asm	/^ d1d:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
d1e	cat.asm	/^ d1e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
d1e	grep.asm	/^ d1e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
d1e	usertests.asm	/^     d1e:	be 02 02 00 00       	mov    $0x202,%esi$/;"	l
d1f	divide.asm	/^ d1f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
d2	grep.asm	/^  d2:	48 b8 00 13 00 00 00 	movabs $0x1300,%rax$/;"	l
d2	ln.asm	/^  d2:	48 89 ce             	mov    %rcx,%rsi$/;"	l
d2	ls.asm	/^      d2:	48 b8 10 13 00 00 00 	movabs $0x1310,%rax$/;"	l
d2	usertests.asm	/^      d2:	00 00 00 $/;"	l
d2	wc.asm	/^  d2:	83 7d e8 00          	cmpl   $0x0,-0x18(%rbp)$/;"	l
d20	ls.asm	/^     d20:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
d20	sh.asm	/^     d20:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi$/;"	l
d20	stressfs.asm	/^ d20:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
d20	wc.asm	/^ d20:	3b 45 ec             	cmp    -0x14(%rbp),%eax$/;"	l
d22	cat.asm	/^ d22:	e9 41 ff ff ff       	jmpq   c68 <malloc+0x89>$/;"	l
d22	grep.asm	/^ d22:	48 8b 00             	mov    (%rax),%rax$/;"	l
d23	divide.asm	/^ d23:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
d23	usertests.asm	/^     d23:	48 bf 40 a8 00 00 00 	movabs $0xa840,%rdi$/;"	l
d23	wc.asm	/^ d23:	72 65                	jb     d8a <malloc+0xfa>$/;"	l
d24	ls.asm	/^     d24:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
d24	sh.asm	/^     d24:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
d24	stressfs.asm	/^ d24:	48 8b 00             	mov    (%rax),%rax$/;"	l
d25	grep.asm	/^ d25:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax$/;"	l
d25	wc.asm	/^ d25:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
d27	cat.asm	/^ d27:	c9                   	leaveq $/;"	l
d27	divide.asm	/^ d27:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
d27	stressfs.asm	/^ d27:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
d28	cat.asm	/^ d28:	c3                   	retq   $/;"	l
d28	ls.asm	/^     d28:	48 83 e8 10          	sub    $0x10,%rax$/;"	l
d28	sh.asm	/^     d28:	41 b8 00 00 00 00    	mov    $0x0,%r8d$/;"	l
d29	grep.asm	/^ d29:	77 17                	ja     d42 <free+0x4f>$/;"	l
d29	wc.asm	/^ d29:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
d2a	usertests.asm	/^     d2a:	00 00 00 $/;"	l
d2b	divide.asm	/^ d2b:	48 8b 00             	mov    (%rax),%rax$/;"	l
d2b	grep.asm	/^ d2b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
d2b	stressfs.asm	/^ d2b:	e9 41 ff ff ff       	jmpq   c71 <malloc+0x89>$/;"	l
d2c	ls.asm	/^     d2c:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
d2c	wc.asm	/^ d2c:	3b 45 ec             	cmp    -0x14(%rbp),%eax$/;"	l
d2d	usertests.asm	/^     d2d:	48 b8 52 60 00 00 00 	movabs $0x6052,%rax$/;"	l
d2e	divide.asm	/^ d2e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
d2e	sh.asm	/^     d2e:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
d2f	grep.asm	/^ d2f:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax$/;"	l
d2f	wc.asm	/^ d2f:	75 10                	jne    d41 <malloc+0xb1>$/;"	l
d3	divide.asm	/^  d3:	29 c2                	sub    %eax,%edx$/;"	l
d3	echo.asm	/^  d3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
d3	sh.asm	/^      d3:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
d30	ls.asm	/^     d30:	48 b8 30 13 00 00 00 	movabs $0x1330,%rax$/;"	l
d30	stressfs.asm	/^ d30:	c9                   	leaveq $/;"	l
d31	stressfs.asm	/^ d31:	c3                   	retq   $/;"	l
d31	wc.asm	/^ d31:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
d32	divide.asm	/^ d32:	e9 41 ff ff ff       	jmpq   c78 <malloc+0x89>$/;"	l
d33	grep.asm	/^ d33:	77 2f                	ja     d64 <free+0x71>$/;"	l
d33	sh.asm	/^     d33:	48 89 c7             	mov    %rax,%rdi$/;"	l
d34	usertests.asm	/^     d34:	00 00 00 $/;"	l
d35	grep.asm	/^ d35:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
d35	wc.asm	/^ d35:	48 8b 10             	mov    (%rax),%rdx$/;"	l
d36	sh.asm	/^     d36:	48 b8 e7 05 00 00 00 	movabs $0x5e7,%rax$/;"	l
d37	divide.asm	/^ d37:	c9                   	leaveq $/;"	l
d37	ls.asm	/^     d37:	00 00 00 $/;"	l
d37	usertests.asm	/^     d37:	ff d0                	callq  *%rax$/;"	l
d38	divide.asm	/^ d38:	c3                   	retq   $/;"	l
d38	wc.asm	/^ d38:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
d39	grep.asm	/^ d39:	48 8b 00             	mov    (%rax),%rax$/;"	l
d39	usertests.asm	/^     d39:	89 45 f8             	mov    %eax,-0x8(%rbp)$/;"	l
d3a	ls.asm	/^     d3a:	48 8b 00             	mov    (%rax),%rax$/;"	l
d3c	grep.asm	/^ d3c:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax$/;"	l
d3c	usertests.asm	/^     d3c:	8b 45 f8             	mov    -0x8(%rbp),%eax$/;"	l
d3c	wc.asm	/^ d3c:	48 89 10             	mov    %rdx,(%rax)$/;"	l
d3d	ls.asm	/^     d3d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
d3d	sh.asm	/^     d3d:	00 00 00 $/;"	l
d3f	usertests.asm	/^     d3f:	89 c7                	mov    %eax,%edi$/;"	l
d3f	wc.asm	/^ d3f:	eb 2e                	jmp    d6f <malloc+0xdf>$/;"	l
d4	init.asm	/^  d4:	00 00 00 $/;"	l
d4	kill.asm	/^  d4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
d4	mkdir.asm	/^  d4:	89 75 f4             	mov    %esi,-0xc(%rbp)$/;"	l
d4	rm.asm	/^  d4:	89 75 f4             	mov    %esi,-0xc(%rbp)$/;"	l
d40	grep.asm	/^ d40:	77 22                	ja     d64 <free+0x71>$/;"	l
d40	sh.asm	/^     d40:	ff d0                	callq  *%rax$/;"	l
d41	ls.asm	/^     d41:	eb 2f                	jmp    d72 <free+0x5a>$/;"	l
d41	usertests.asm	/^     d41:	48 b8 34 60 00 00 00 	movabs $0x6034,%rax$/;"	l
d41	wc.asm	/^ d41:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
d42	grep.asm	/^ d42:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
d42	sh.asm	/^     d42:	48 89 45 d8          	mov    %rax,-0x28(%rbp)$/;"	l
d43	ls.asm	/^     d43:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
d45	wc.asm	/^ d45:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
d46	grep.asm	/^ d46:	48 8b 00             	mov    (%rax),%rax$/;"	l
d46	sh.asm	/^     d46:	eb 57                	jmp    d9f <parseredirs+0x111>$/;"	l
d47	ls.asm	/^     d47:	48 8b 00             	mov    (%rax),%rax$/;"	l
d48	sh.asm	/^     d48:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx$/;"	l
d48	usertests.asm	/^     d48:	00 00 00 $/;"	l
d48	wc.asm	/^ d48:	2b 45 ec             	sub    -0x14(%rbp),%eax$/;"	l
d49	grep.asm	/^ d49:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
d4a	ls.asm	/^     d4a:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax$/;"	l
d4b	usertests.asm	/^     d4b:	ff d0                	callq  *%rax$/;"	l
d4b	wc.asm	/^ d4b:	89 c2                	mov    %eax,%edx$/;"	l
d4c	sh.asm	/^     d4c:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi$/;"	l
d4d	grep.asm	/^ d4d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
d4d	usertests.asm	/^     d4d:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)$/;"	l
d4d	wc.asm	/^ d4d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
d4e	ls.asm	/^     d4e:	77 17                	ja     d67 <free+0x4f>$/;"	l
d5	divide.asm	/^  d5:	89 d0                	mov    %edx,%eax$/;"	l
d5	forktest.asm	/^  d5:	78 21                	js     f8 <forktest+0x67>$/;"	l
d5	ln.asm	/^  d5:	48 89 f7             	mov    %rsi,%rdi$/;"	l
d5	usertests.asm	/^      d5:	48 b8 66 60 00 00 00 	movabs $0x6066,%rax$/;"	l
d5	zombie.asm	/^  d5:	0f b6 10             	movzbl (%rax),%edx$/;"	l
d50	ls.asm	/^     d50:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
d50	sh.asm	/^     d50:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
d51	grep.asm	/^ d51:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax$/;"	l
d51	usertests.asm	/^     d51:	83 7d fc 33          	cmpl   $0x33,-0x4(%rbp)$/;"	l
d51	wc.asm	/^ d51:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
d54	ls.asm	/^     d54:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax$/;"	l
d54	sh.asm	/^     d54:	41 b8 01 00 00 00    	mov    $0x1,%r8d$/;"	l
d54	wc.asm	/^ d54:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
d55	grep.asm	/^ d55:	76 c7                	jbe    d1e <free+0x2b>$/;"	l
d55	usertests.asm	/^     d55:	7e b2                	jle    d09 <createtest+0x55>$/;"	l
d57	grep.asm	/^ d57:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
d57	usertests.asm	/^     d57:	48 b8 40 a8 00 00 00 	movabs $0xa840,%rax$/;"	l
d58	ls.asm	/^     d58:	77 2f                	ja     d89 <free+0x71>$/;"	l
d58	wc.asm	/^ d58:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
d5a	ls.asm	/^     d5a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
d5a	sh.asm	/^     d5a:	b9 01 02 00 00       	mov    $0x201,%ecx$/;"	l
d5b	grep.asm	/^ d5b:	48 8b 00             	mov    (%rax),%rax$/;"	l
d5b	wc.asm	/^ d5b:	89 c0                	mov    %eax,%eax$/;"	l
d5d	wc.asm	/^ d5d:	48 c1 e0 04          	shl    $0x4,%rax$/;"	l
d5e	grep.asm	/^ d5e:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax$/;"	l
d5e	ls.asm	/^     d5e:	48 8b 00             	mov    (%rax),%rax$/;"	l
d5e	usertests.asm	/^     d5e:	00 00 00 $/;"	l
d5f	sh.asm	/^     d5f:	48 89 c7             	mov    %rax,%rdi$/;"	l
d6	cat.asm	/^  d6:	48 b8 00 00 00 00 00 	movabs $0x0,%rax$/;"	l
d6	wc.asm	/^  d6:	0f 8f 52 ff ff ff    	jg     2e <wc+0x2e>$/;"	l
d61	ls.asm	/^     d61:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax$/;"	l
d61	usertests.asm	/^     d61:	c6 00 61             	movb   $0x61,(%rax)$/;"	l
d61	wc.asm	/^ d61:	48 01 45 f8          	add    %rax,-0x8(%rbp)$/;"	l
d62	grep.asm	/^ d62:	76 ba                	jbe    d1e <free+0x2b>$/;"	l
d62	sh.asm	/^     d62:	48 b8 e7 05 00 00 00 	movabs $0x5e7,%rax$/;"	l
d64	grep.asm	/^ d64:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
d64	usertests.asm	/^     d64:	48 b8 40 a8 00 00 00 	movabs $0xa840,%rax$/;"	l
d65	ls.asm	/^     d65:	77 22                	ja     d89 <free+0x71>$/;"	l
d65	wc.asm	/^ d65:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
d67	ls.asm	/^     d67:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
d68	grep.asm	/^ d68:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
d69	sh.asm	/^     d69:	00 00 00 $/;"	l
d69	wc.asm	/^ d69:	8b 55 ec             	mov    -0x14(%rbp),%edx$/;"	l
d6b	grep.asm	/^ d6b:	89 c0                	mov    %eax,%eax$/;"	l
d6b	ls.asm	/^     d6b:	48 8b 00             	mov    (%rax),%rax$/;"	l
d6b	usertests.asm	/^     d6b:	00 00 00 $/;"	l
d6c	sh.asm	/^     d6c:	ff d0                	callq  *%rax$/;"	l
d6c	wc.asm	/^ d6c:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
d6d	grep.asm	/^ d6d:	48 c1 e0 04          	shl    $0x4,%rax$/;"	l
d6e	ls.asm	/^     d6e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
d6e	sh.asm	/^     d6e:	48 89 45 d8          	mov    %rax,-0x28(%rbp)$/;"	l
d6e	usertests.asm	/^     d6e:	c6 40 02 00          	movb   $0x0,0x2(%rax)$/;"	l
d6f	wc.asm	/^ d6f:	48 b8 b0 12 00 00 00 	movabs $0x12b0,%rax$/;"	l
d7	divide.asm	/^  d7:	89 45 ec             	mov    %eax,-0x14(%rbp)$/;"	l
d7	echo.asm	/^  d7:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
d7	forktest.asm	/^  d7:	83 7d f8 00          	cmpl   $0x0,-0x8(%rbp)$/;"	l
d7	init.asm	/^  d7:	ff d2                	callq  *%rdx$/;"	l
d7	mkdir.asm	/^  d7:	89 55 f0             	mov    %edx,-0x10(%rbp)$/;"	l
d7	rm.asm	/^  d7:	89 55 f0             	mov    %edx,-0x10(%rbp)$/;"	l
d7	sh.asm	/^      d7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
d71	grep.asm	/^ d71:	48 89 c2             	mov    %rax,%rdx$/;"	l
d72	ls.asm	/^     d72:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
d72	sh.asm	/^     d72:	eb 2b                	jmp    d9f <parseredirs+0x111>$/;"	l
d72	usertests.asm	/^     d72:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)$/;"	l
d74	grep.asm	/^ d74:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
d74	sh.asm	/^     d74:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx$/;"	l
d76	ls.asm	/^     d76:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax$/;"	l
d76	wc.asm	/^ d76:	00 00 00 $/;"	l
d78	grep.asm	/^ d78:	48 01 c2             	add    %rax,%rdx$/;"	l
d78	sh.asm	/^     d78:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi$/;"	l
d79	usertests.asm	/^     d79:	eb 2f                	jmp    daa <createtest+0xf6>$/;"	l
d79	wc.asm	/^ d79:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
d7a	ls.asm	/^     d7a:	76 c7                	jbe    d43 <free+0x2b>$/;"	l
d7b	grep.asm	/^ d7b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
d7b	usertests.asm	/^     d7b:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
d7c	ls.asm	/^     d7c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
d7c	sh.asm	/^     d7c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
d7d	wc.asm	/^ d7d:	48 89 10             	mov    %rdx,(%rax)$/;"	l
d7e	usertests.asm	/^     d7e:	83 c0 30             	add    $0x30,%eax$/;"	l
d7f	grep.asm	/^ d7f:	48 8b 00             	mov    (%rax),%rax$/;"	l
d8	kill.asm	/^  d8:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)$/;"	l
d8	ln.asm	/^  d8:	89 d1                	mov    %edx,%ecx$/;"	l
d8	stressfs.asm	/^  d8:	00 00 00 $/;"	l
d8	zombie.asm	/^  d8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
d80	ls.asm	/^     d80:	48 8b 00             	mov    (%rax),%rax$/;"	l
d80	sh.asm	/^     d80:	41 b8 01 00 00 00    	mov    $0x1,%r8d$/;"	l
d80	wc.asm	/^ d80:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
d81	usertests.asm	/^     d81:	89 c2                	mov    %eax,%edx$/;"	l
d82	grep.asm	/^ d82:	48 39 c2             	cmp    %rax,%rdx$/;"	l
d83	ls.asm	/^     d83:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax$/;"	l
d83	usertests.asm	/^     d83:	48 b8 40 a8 00 00 00 	movabs $0xa840,%rax$/;"	l
d84	wc.asm	/^ d84:	48 83 c0 10          	add    $0x10,%rax$/;"	l
d85	grep.asm	/^ d85:	75 2d                	jne    db4 <free+0xc1>$/;"	l
d86	sh.asm	/^     d86:	b9 01 02 00 00       	mov    $0x201,%ecx$/;"	l
d87	grep.asm	/^ d87:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
d87	ls.asm	/^     d87:	76 ba                	jbe    d43 <free+0x2b>$/;"	l
d88	wc.asm	/^ d88:	eb 4e                	jmp    dd8 <malloc+0x148>$/;"	l
d89	ls.asm	/^     d89:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
d8a	usertests.asm	/^     d8a:	00 00 00 $/;"	l
d8a	wc.asm	/^ d8a:	48 b8 b0 12 00 00 00 	movabs $0x12b0,%rax$/;"	l
d8b	grep.asm	/^ d8b:	8b 50 08             	mov    0x8(%rax),%edx$/;"	l
d8b	sh.asm	/^     d8b:	48 89 c7             	mov    %rax,%rdi$/;"	l
d8d	ls.asm	/^     d8d:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
d8d	usertests.asm	/^     d8d:	88 50 01             	mov    %dl,0x1(%rax)$/;"	l
d8e	grep.asm	/^ d8e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
d8e	sh.asm	/^     d8e:	48 b8 e7 05 00 00 00 	movabs $0x5e7,%rax$/;"	l
d9	grep.asm	/^  d9:	00 00 00 $/;"	l
d9	init.asm	/^  d9:	48 b8 95 04 00 00 00 	movabs $0x495,%rax$/;"	l
d9	ls.asm	/^      d9:	00 00 00 $/;"	l
d90	ls.asm	/^     d90:	89 c0                	mov    %eax,%eax$/;"	l
d90	usertests.asm	/^     d90:	48 bf 40 a8 00 00 00 	movabs $0xa840,%rdi$/;"	l
d91	wc.asm	/^ d91:	00 00 00 $/;"	l
d92	grep.asm	/^ d92:	48 8b 00             	mov    (%rax),%rax$/;"	l
d92	ls.asm	/^     d92:	48 c1 e0 04          	shl    $0x4,%rax$/;"	l
d94	wc.asm	/^ d94:	48 8b 00             	mov    (%rax),%rax$/;"	l
d95	grep.asm	/^ d95:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
d95	sh.asm	/^     d95:	00 00 00 $/;"	l
d96	ls.asm	/^     d96:	48 89 c2             	mov    %rax,%rdx$/;"	l
d97	usertests.asm	/^     d97:	00 00 00 $/;"	l
d97	wc.asm	/^ d97:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)$/;"	l
d98	grep.asm	/^ d98:	01 c2                	add    %eax,%edx$/;"	l
d98	sh.asm	/^     d98:	ff d0                	callq  *%rax$/;"	l
d99	ls.asm	/^     d99:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
d9a	grep.asm	/^ d9a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
d9a	sh.asm	/^     d9a:	48 89 45 d8          	mov    %rax,-0x28(%rbp)$/;"	l
d9a	usertests.asm	/^     d9a:	48 b8 66 60 00 00 00 	movabs $0x6066,%rax$/;"	l
d9b	wc.asm	/^ d9b:	75 23                	jne    dc0 <malloc+0x130>$/;"	l
d9d	ls.asm	/^     d9d:	48 01 c2             	add    %rax,%rdx$/;"	l
d9d	wc.asm	/^ d9d:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
d9e	grep.asm	/^ d9e:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
d9e	sh.asm	/^     d9e:	90                   	nop$/;"	l
d9f	sh.asm	/^     d9f:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx$/;"	l
da	divide.asm	/^  da:	8b 55 ec             	mov    -0x14(%rbp),%edx$/;"	l
da	ln.asm	/^  da:	fc                   	cld    $/;"	l
da	mkdir.asm	/^  da:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx$/;"	l
da	rm.asm	/^  da:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx$/;"	l
da0	ls.asm	/^     da0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
da0	wc.asm	/^ da0:	89 c7                	mov    %eax,%edi$/;"	l
da1	grep.asm	/^ da1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
da1	usertests.asm	/^     da1:	00 00 00 $/;"	l
da2	wc.asm	/^ da2:	48 b8 17 0c 00 00 00 	movabs $0xc17,%rax$/;"	l
da3	sh.asm	/^     da3:	48 8b 45 d0          	mov    -0x30(%rbp),%rax$/;"	l
da4	ls.asm	/^     da4:	48 8b 00             	mov    (%rax),%rax$/;"	l
da4	usertests.asm	/^     da4:	ff d0                	callq  *%rax$/;"	l
da5	grep.asm	/^ da5:	48 8b 00             	mov    (%rax),%rax$/;"	l
da6	usertests.asm	/^     da6:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)$/;"	l
da7	ls.asm	/^     da7:	48 39 c2             	cmp    %rax,%rdx$/;"	l
da7	sh.asm	/^     da7:	48 ba 1c 1e 00 00 00 	movabs $0x1e1c,%rdx$/;"	l
da8	grep.asm	/^ da8:	48 8b 10             	mov    (%rax),%rdx$/;"	l
da9	wc.asm	/^ da9:	00 00 00 $/;"	l
daa	ls.asm	/^     daa:	75 2d                	jne    dd9 <free+0xc1>$/;"	l
daa	usertests.asm	/^     daa:	83 7d fc 33          	cmpl   $0x33,-0x4(%rbp)$/;"	l
dab	grep.asm	/^ dab:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
dac	ls.asm	/^     dac:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
dac	wc.asm	/^ dac:	ff d0                	callq  *%rax$/;"	l
dae	sh.asm	/^     dae:	00 00 00 $/;"	l
dae	usertests.asm	/^     dae:	7e cb                	jle    d7b <createtest+0xc7>$/;"	l
dae	wc.asm	/^ dae:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
daf	grep.asm	/^ daf:	48 89 10             	mov    %rdx,(%rax)$/;"	l
data	buf.h	/^  uchar data[BSIZE];$/;"	m	struct:buf
data	ioapic.c	/^  uint data;$/;"	m	struct:ioapic	file:
data	kernel.asm	/^    data = (shift & E0ESC ? data : data & 0x7F);$/;"	d
data	kernel.asm	/^  data = inb(KBDATAP);$/;"	d
data	pipe.c	/^  char data[PIPESIZE];$/;"	m	struct:pipe	file:
day	date.h	/^  uint day;$/;"	m	struct:rtcdate
db	echo.asm	/^  db:	90                   	nop$/;"	l
db	forktest.asm	/^  db:	75 0c                	jne    e9 <forktest+0x58>$/;"	l
db	ln.asm	/^  db:	f3 aa                	rep stos %al,%es:(%rdi)$/;"	l
db	mmu.h	/^  uint db : 1;         \/\/ 0 = 16-bit segment, 1 = 32-bit segment$/;"	m	struct:segdesc
db	sh.asm	/^      db:	8b 40 24             	mov    0x24(%rax),%eax$/;"	l
db	stressfs.asm	/^  db:	ff d0                	callq  *%rax$/;"	l
db0	ls.asm	/^     db0:	8b 50 08             	mov    0x8(%rax),%edx$/;"	l
db0	usertests.asm	/^     db0:	48 b8 08 88 00 00 00 	movabs $0x8808,%rax$/;"	l
db1	sh.asm	/^     db1:	48 89 ce             	mov    %rcx,%rsi$/;"	l
db2	grep.asm	/^ db2:	eb 0e                	jmp    dc2 <free+0xcf>$/;"	l
db2	wc.asm	/^ db2:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)$/;"	l
db3	ls.asm	/^     db3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
db4	grep.asm	/^ db4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
db4	sh.asm	/^     db4:	48 89 c7             	mov    %rax,%rdi$/;"	l
db7	ls.asm	/^     db7:	48 8b 00             	mov    (%rax),%rax$/;"	l
db7	sh.asm	/^     db7:	48 b8 51 09 00 00 00 	movabs $0x951,%rax$/;"	l
db7	usertests.asm	/^     db7:	00 00 00 $/;"	l
db7	wc.asm	/^ db7:	75 07                	jne    dc0 <malloc+0x130>$/;"	l
db8	grep.asm	/^ db8:	48 8b 10             	mov    (%rax),%rdx$/;"	l
db9	wc.asm	/^ db9:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
dba	ls.asm	/^     dba:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
dba	usertests.asm	/^     dba:	8b 00                	mov    (%rax),%eax$/;"	l
dbb	grep.asm	/^ dbb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
dbc	usertests.asm	/^     dbc:	48 be 40 6c 00 00 00 	movabs $0x6c40,%rsi$/;"	l
dbd	ls.asm	/^     dbd:	01 c2                	add    %eax,%edx$/;"	l
dbe	sh.asm	/^     dbe:	00 00 00 $/;"	l
dbe	wc.asm	/^ dbe:	eb 18                	jmp    dd8 <malloc+0x148>$/;"	l
dbf	grep.asm	/^ dbf:	48 89 10             	mov    %rdx,(%rax)$/;"	l
dbf	ls.asm	/^     dbf:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
dc	echo.asm	/^  dc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
dc	grep.asm	/^  dc:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)$/;"	l
dc	kill.asm	/^  dc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
dc	ls.asm	/^      dc:	48 01 d0             	add    %rdx,%rax$/;"	l
dc	usertests.asm	/^      dc:	00 00 00 $/;"	l
dc	wc.asm	/^  dc:	83 7d e8 00          	cmpl   $0x0,-0x18(%rbp)$/;"	l
dc	zombie.asm	/^  dc:	0f b6 00             	movzbl (%rax),%eax$/;"	l
dc0	wc.asm	/^ dc0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
dc1	sh.asm	/^     dc1:	ff d0                	callq  *%rax$/;"	l
dc2	grep.asm	/^ dc2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
dc3	ls.asm	/^     dc3:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
dc3	sh.asm	/^     dc3:	85 c0                	test   %eax,%eax$/;"	l
dc3	usertests.asm	/^     dc3:	00 00 00 $/;"	l
dc4	wc.asm	/^ dc4:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
dc5	sh.asm	/^     dc5:	0f 85 dc fe ff ff    	jne    ca7 <parseredirs+0x19>$/;"	l
dc6	grep.asm	/^ dc6:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
dc6	ls.asm	/^     dc6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
dc6	usertests.asm	/^     dc6:	89 c7                	mov    %eax,%edi$/;"	l
dc8	usertests.asm	/^     dc8:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
dc8	wc.asm	/^ dc8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
dc9	grep.asm	/^ dc9:	89 c0                	mov    %eax,%eax$/;"	l
dca	ls.asm	/^     dca:	48 8b 00             	mov    (%rax),%rax$/;"	l
dcb	grep.asm	/^ dcb:	48 c1 e0 04          	shl    $0x4,%rax$/;"	l
dcb	sh.asm	/^     dcb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
dcc	wc.asm	/^ dcc:	48 8b 00             	mov    (%rax),%rax$/;"	l
dcd	ls.asm	/^     dcd:	48 8b 10             	mov    (%rax),%rdx$/;"	l
dcd	usertests.asm	/^     dcd:	48 ba c7 61 00 00 00 	movabs $0x61c7,%rdx$/;"	l
dcf	grep.asm	/^ dcf:	48 89 c2             	mov    %rax,%rdx$/;"	l
dcf	sh.asm	/^     dcf:	c9                   	leaveq $/;"	l
dcf	wc.asm	/^ dcf:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
dd	cat.asm	/^  dd:	00 00 00 $/;"	l
dd	divide.asm	/^  dd:	89 d0                	mov    %edx,%eax$/;"	l
dd	forktest.asm	/^  dd:	48 b8 0d 05 00 00 00 	movabs $0x50d,%rax$/;"	l
dd	ln.asm	/^  dd:	89 ca                	mov    %ecx,%edx$/;"	l
dd	stressfs.asm	/^  dd:	89 45 f8             	mov    %eax,-0x8(%rbp)$/;"	l
dd0	ls.asm	/^     dd0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
dd0	sh.asm	/^     dd0:	c3                   	retq   $/;"	l
dd1	sh.asm	/^     dd1:	55                   	push   %rbp$/;"	l
dd2	grep.asm	/^ dd2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
dd2	sh.asm	/^     dd2:	48 89 e5             	mov    %rsp,%rbp$/;"	l
dd3	wc.asm	/^ dd3:	e9 41 ff ff ff       	jmpq   d19 <malloc+0x89>$/;"	l
dd4	ls.asm	/^     dd4:	48 89 10             	mov    %rdx,(%rax)$/;"	l
dd4	usertests.asm	/^     dd4:	00 00 00 $/;"	l
dd5	sh.asm	/^     dd5:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
dd6	grep.asm	/^ dd6:	48 01 d0             	add    %rdx,%rax$/;"	l
dd7	ls.asm	/^     dd7:	eb 0e                	jmp    de7 <free+0xcf>$/;"	l
dd7	usertests.asm	/^     dd7:	ff d2                	callq  *%rdx$/;"	l
dd8	wc.asm	/^ dd8:	c9                   	leaveq $/;"	l
dd9	grep.asm	/^ dd9:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax$/;"	l
dd9	ls.asm	/^     dd9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
dd9	sh.asm	/^     dd9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
dd9	usertests.asm	/^     dd9:	90                   	nop$/;"	l
dd9	wc.asm	/^ dd9:	c3                   	retq   $/;"	l
dda	usertests.asm	/^     dda:	c9                   	leaveq $/;"	l
ddb	usertests.asm	/^     ddb:	c3                   	retq   $/;"	l
ddc	usertests.asm	/^     ddc:	55                   	push   %rbp$/;"	l
ddd	grep.asm	/^ ddd:	75 27                	jne    e06 <free+0x113>$/;"	l
ddd	ls.asm	/^     ddd:	48 8b 10             	mov    (%rax),%rdx$/;"	l
ddd	sh.asm	/^     ddd:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)$/;"	l
ddd	usertests.asm	/^     ddd:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ddf	grep.asm	/^ ddf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
de	mkdir.asm	/^  de:	8b 55 f0             	mov    -0x10(%rbp),%edx$/;"	l
de	rm.asm	/^  de:	8b 55 f0             	mov    -0x10(%rbp),%edx$/;"	l
de	sh.asm	/^      de:	89 c7                	mov    %eax,%edi$/;"	l
de0	ls.asm	/^     de0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
de0	usertests.asm	/^     de0:	48 b8 08 88 00 00 00 	movabs $0x8808,%rax$/;"	l
de1	sh.asm	/^     de1:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx$/;"	l
de3	grep.asm	/^ de3:	8b 50 08             	mov    0x8(%rax),%edx$/;"	l
de4	ls.asm	/^     de4:	48 89 10             	mov    %rdx,(%rax)$/;"	l
de5	sh.asm	/^     de5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
de6	grep.asm	/^ de6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
de7	ls.asm	/^     de7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
de7	usertests.asm	/^     de7:	00 00 00 $/;"	l
de9	sh.asm	/^     de9:	48 ba 1f 1e 00 00 00 	movabs $0x1e1f,%rdx$/;"	l
dea	grep.asm	/^ dea:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
dea	usertests.asm	/^     dea:	8b 00                	mov    (%rax),%eax$/;"	l
deallocuvm	vm.c	/^deallocuvm(pde_t *pgdir, uint64 oldsz, uint64 newsz)$/;"	f
deb	ls.asm	/^     deb:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
dec	usertests.asm	/^     dec:	48 be 66 6c 00 00 00 	movabs $0x6c66,%rsi$/;"	l
ded	grep.asm	/^ ded:	01 c2                	add    %eax,%edx$/;"	l
dee	ls.asm	/^     dee:	89 c0                	mov    %eax,%eax$/;"	l
def	grep.asm	/^ def:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
default	kernel.asm	/^    default:$/;"	l
default	kernel.asm	/^  default:$/;"	l
default	sh.asm	/^  default:$/;"	l
dev	buf.h	/^  uint dev;$/;"	m	struct:buf
dev	file.h	/^  uint dev;           \/\/ Device number$/;"	m	struct:inode
dev	log.c	/^  int dev;$/;"	m	struct:log	file:
dev	stat.h	/^  int dev;     \/\/ File system's disk device$/;"	m	struct:stat
devsw	file.c	/^struct devsw devsw[NDEV];$/;"	v	typeref:struct:devsw
devsw	file.h	/^struct devsw {$/;"	s
df	divide.asm	/^  df:	c1 e0 02             	shl    $0x2,%eax$/;"	l
df	ln.asm	/^  df:	48 89 fe             	mov    %rdi,%rsi$/;"	l
df	ls.asm	/^      df:	89 da                	mov    %ebx,%edx$/;"	l
df	usertests.asm	/^      df:	ff d0                	callq  *%rax$/;"	l
df	zombie.asm	/^  df:	38 c2                	cmp    %al,%dl$/;"	l
df0	ls.asm	/^     df0:	48 c1 e0 04          	shl    $0x4,%rax$/;"	l
df0	sh.asm	/^     df0:	00 00 00 $/;"	l
df3	grep.asm	/^ df3:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
df3	sh.asm	/^     df3:	48 89 ce             	mov    %rcx,%rsi$/;"	l
df3	usertests.asm	/^     df3:	00 00 00 $/;"	l
df4	ls.asm	/^     df4:	48 89 c2             	mov    %rax,%rdx$/;"	l
df6	grep.asm	/^ df6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
df6	sh.asm	/^     df6:	48 89 c7             	mov    %rax,%rdi$/;"	l
df6	usertests.asm	/^     df6:	89 c7                	mov    %eax,%edi$/;"	l
df7	ls.asm	/^     df7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
df8	usertests.asm	/^     df8:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
df9	sh.asm	/^     df9:	48 b8 51 09 00 00 00 	movabs $0x951,%rax$/;"	l
dfa	grep.asm	/^ dfa:	48 8b 10             	mov    (%rax),%rdx$/;"	l
dfb	ls.asm	/^     dfb:	48 01 d0             	add    %rdx,%rax$/;"	l
dfd	grep.asm	/^ dfd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
dfd	usertests.asm	/^     dfd:	48 ba c7 61 00 00 00 	movabs $0x61c7,%rdx$/;"	l
dfe	ls.asm	/^     dfe:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax$/;"	l
digits	console.c	/^static char digits[] = "0123456789abcdef";$/;"	v	file:
dinode	fs.h	/^struct dinode {$/;"	s
dip	kernel.asm	/^    dip = (struct dinode*)bp->data + inum%IPB;$/;"	d
dip	kernel.asm	/^    dip = (struct dinode*)bp->data + ip->inum%IPB;$/;"	d
dip	kernel.asm	/^  dip = (struct dinode*)bp->data + ip->inum%IPB;$/;"	d
dirent	fs.h	/^struct dirent {$/;"	s
dirfile	usertests.c	/^dirfile(void)$/;"	f
dirlink	fs.c	/^dirlink(struct inode *dp, char *name, uint inum)$/;"	f
dirlookup	fs.c	/^dirlookup(struct inode *dp, char *name, uint *poff)$/;"	f
dirtest	usertests.c	/^void dirtest(void)$/;"	f
disksize	memide.c	/^static int disksize;$/;"	v	file:
do_commit	kernel.asm	/^    do_commit = 1;$/;"	d
dpl	mmu.h	/^  uint dpl : 2;         \/\/ descriptor(meaning new) privilege level$/;"	m	struct:gatedesc
dpl	mmu.h	/^  uint dpl : 2;        \/\/ Descriptor Privilege Level$/;"	m	struct:segdesc
ds	mmu.h	/^  ushort ds;$/;"	m	struct:taskstate
dst	cat.asm	/^  dst = vdst;$/;"	d
dst	divide.asm	/^  dst = vdst;$/;"	d
dst	echo.asm	/^  dst = vdst;$/;"	d
dst	forktest.asm	/^  dst = vdst;$/;"	d
dst	grep.asm	/^  dst = vdst;$/;"	d
dst	init.asm	/^  dst = vdst;$/;"	d
dst	kill.asm	/^  dst = vdst;$/;"	d
dst	ln.asm	/^  dst = vdst;$/;"	d
dst	ls.asm	/^  dst = vdst;$/;"	d
dst	mkdir.asm	/^  dst = vdst;$/;"	d
dst	rm.asm	/^  dst = vdst;$/;"	d
dst	sh.asm	/^  dst = vdst;$/;"	d
dst	stressfs.asm	/^  dst = vdst;$/;"	d
dst	usertests.asm	/^  dst = vdst;$/;"	d
dst	wc.asm	/^  dst = vdst;$/;"	d
dst	zombie.asm	/^  dst = vdst;$/;"	d
e	console.c	/^  uint e;  \/\/ Edit index$/;"	m	struct:__anon8	file:
e	initcode.asm	/^   e:	48 c7 c0 07 00 00 00 	mov    $0x7,%rax$/;"	l
e	kernel.asm	/^  e = addr+len;$/;"	d
e	usertests.asm	/^       e:	8b 00                	mov    (%rax),%eax$/;"	l
e	zombie.asm	/^   e:	ff d0                	callq  *%rax$/;"	l
e0	cat.asm	/^  e0:	ff d0                	callq  *%rax$/;"	l
e0	echo.asm	/^  e0:	48 8d 50 01          	lea    0x1(%rax),%rdx$/;"	l
e0	grep.asm	/^  e0:	75 07                	jne    e9 <grep+0xe9>$/;"	l
e0	init.asm	/^  e0:	00 00 00 $/;"	l
e0	kill.asm	/^  e0:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
e0	sh.asm	/^      e0:	48 b8 30 15 00 00 00 	movabs $0x1530,%rax$/;"	l
e0	stressfs.asm	/^  e0:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)$/;"	l
e0	wc.asm	/^  e0:	79 2c                	jns    10e <wc+0x10e>$/;"	l
e00	sh.asm	/^     e00:	00 00 00 $/;"	l
e01	grep.asm	/^ e01:	48 89 10             	mov    %rdx,(%rax)$/;"	l
e02	ls.asm	/^     e02:	75 27                	jne    e2b <free+0x113>$/;"	l
e03	sh.asm	/^     e03:	ff d0                	callq  *%rax$/;"	l
e04	grep.asm	/^ e04:	eb 0b                	jmp    e11 <free+0x11e>$/;"	l
e04	ls.asm	/^     e04:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
e04	usertests.asm	/^     e04:	00 00 00 $/;"	l
e05	sh.asm	/^     e05:	85 c0                	test   %eax,%eax$/;"	l
e06	grep.asm	/^ e06:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
e07	sh.asm	/^     e07:	75 16                	jne    e1f <parseblock+0x4e>$/;"	l
e07	usertests.asm	/^     e07:	ff d2                	callq  *%rdx$/;"	l
e08	ls.asm	/^     e08:	8b 50 08             	mov    0x8(%rax),%edx$/;"	l
e09	sh.asm	/^     e09:	48 bf 21 1e 00 00 00 	movabs $0x1e21,%rdi$/;"	l
e09	usertests.asm	/^     e09:	48 bf 72 6c 00 00 00 	movabs $0x6c72,%rdi$/;"	l
e0a	grep.asm	/^ e0a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
e0b	ls.asm	/^     e0b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
e0e	grep.asm	/^ e0e:	48 89 10             	mov    %rdx,(%rax)$/;"	l
e0f	ls.asm	/^     e0f:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
e1	ls.asm	/^      e1:	be 20 00 00 00       	mov    $0x20,%esi$/;"	l
e1	mkdir.asm	/^  e1:	8b 45 f4             	mov    -0xc(%rbp),%eax$/;"	l
e1	rm.asm	/^  e1:	8b 45 f4             	mov    -0xc(%rbp),%eax$/;"	l
e1	usertests.asm	/^      e1:	85 c0                	test   %eax,%eax$/;"	l
e1	zombie.asm	/^  e1:	74 d9                	je     bc <strcmp+0x12>$/;"	l
e10	sh.asm	/^     e10:	00 00 00 $/;"	l
e10	usertests.asm	/^     e10:	00 00 00 $/;"	l
e11	grep.asm	/^ e11:	48 b8 10 17 00 00 00 	movabs $0x1710,%rax$/;"	l
e12	ls.asm	/^     e12:	01 c2                	add    %eax,%edx$/;"	l
e13	sh.asm	/^     e13:	48 b8 26 05 00 00 00 	movabs $0x526,%rax$/;"	l
e13	usertests.asm	/^     e13:	48 b8 84 60 00 00 00 	movabs $0x6084,%rax$/;"	l
e14	ls.asm	/^     e14:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
e18	grep.asm	/^ e18:	00 00 00 $/;"	l
e18	ls.asm	/^     e18:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
e1a	sh.asm	/^     e1a:	00 00 00 $/;"	l
e1a	usertests.asm	/^     e1a:	00 00 00 $/;"	l
e1b	grep.asm	/^ e1b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx$/;"	l
e1b	ls.asm	/^     e1b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
e1d	sh.asm	/^     e1d:	ff d0                	callq  *%rax$/;"	l
e1d	usertests.asm	/^     e1d:	ff d0                	callq  *%rax$/;"	l
e1f	grep.asm	/^ e1f:	48 89 10             	mov    %rdx,(%rax)$/;"	l
e1f	ls.asm	/^     e1f:	48 8b 10             	mov    (%rax),%rdx$/;"	l
e1f	sh.asm	/^     e1f:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi$/;"	l
e1f	usertests.asm	/^     e1f:	85 c0                	test   %eax,%eax$/;"	l
e2	cat.asm	/^  e2:	48 b8 ca 04 00 00 00 	movabs $0x4ca,%rax$/;"	l
e2	divide.asm	/^  e2:	01 d0                	add    %edx,%eax$/;"	l
e2	grep.asm	/^  e2:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)$/;"	l
e2	ln.asm	/^  e2:	48 89 75 f8          	mov    %rsi,-0x8(%rbp)$/;"	l
e2	wc.asm	/^  e2:	48 be e0 0d 00 00 00 	movabs $0xde0,%rsi$/;"	l
e21	usertests.asm	/^     e21:	79 35                	jns    e58 <dirtest+0x7c>$/;"	l
e22	grep.asm	/^ e22:	90                   	nop$/;"	l
e22	ls.asm	/^     e22:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
e23	grep.asm	/^ e23:	c9                   	leaveq $/;"	l
e23	sh.asm	/^     e23:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
e23	usertests.asm	/^     e23:	48 b8 08 88 00 00 00 	movabs $0x8808,%rax$/;"	l
e24	grep.asm	/^ e24:	c3                   	retq   $/;"	l
e25	grep.asm	/^ e25:	55                   	push   %rbp$/;"	l
e26	grep.asm	/^ e26:	48 89 e5             	mov    %rsp,%rbp$/;"	l
e26	ls.asm	/^     e26:	48 89 10             	mov    %rdx,(%rax)$/;"	l
e27	sh.asm	/^     e27:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
e29	grep.asm	/^ e29:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
e29	ls.asm	/^     e29:	eb 0b                	jmp    e36 <free+0x11e>$/;"	l
e2a	usertests.asm	/^     e2a:	00 00 00 $/;"	l
e2b	ls.asm	/^     e2b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
e2c	sh.asm	/^     e2c:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
e2d	grep.asm	/^ e2d:	89 7d ec             	mov    %edi,-0x14(%rbp)$/;"	l
e2d	usertests.asm	/^     e2d:	8b 00                	mov    (%rax),%eax$/;"	l
e2f	ls.asm	/^     e2f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
e2f	usertests.asm	/^     e2f:	48 be 91 68 00 00 00 	movabs $0x6891,%rsi$/;"	l
e3	init.asm	/^  e3:	ff d0                	callq  *%rax$/;"	l
e3	usertests.asm	/^      e3:	79 35                	jns    11a <iputtest+0x11a>$/;"	l
e3	zombie.asm	/^  e3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
e30	grep.asm	/^ e30:	81 7d ec ff 0f 00 00 	cmpl   $0xfff,-0x14(%rbp)$/;"	l
e31	sh.asm	/^     e31:	48 89 c7             	mov    %rax,%rdi$/;"	l
e33	ls.asm	/^     e33:	48 89 10             	mov    %rdx,(%rax)$/;"	l
e34	sh.asm	/^     e34:	48 b8 aa 07 00 00 00 	movabs $0x7aa,%rax$/;"	l
e36	ls.asm	/^     e36:	48 b8 30 13 00 00 00 	movabs $0x1330,%rax$/;"	l
e36	usertests.asm	/^     e36:	00 00 00 $/;"	l
e37	grep.asm	/^ e37:	77 07                	ja     e40 <morecore+0x1b>$/;"	l
e39	grep.asm	/^ e39:	c7 45 ec 00 10 00 00 	movl   $0x1000,-0x14(%rbp)$/;"	l
e39	usertests.asm	/^     e39:	89 c7                	mov    %eax,%edi$/;"	l
e3b	sh.asm	/^     e3b:	00 00 00 $/;"	l
e3b	usertests.asm	/^     e3b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
e3d	ls.asm	/^     e3d:	00 00 00 $/;"	l
e3e	sh.asm	/^     e3e:	ff d0                	callq  *%rax$/;"	l
e4	divide.asm	/^  e4:	01 c0                	add    %eax,%eax$/;"	l
e4	echo.asm	/^  e4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)$/;"	l
e4	forktest.asm	/^  e4:	00 00 00 $/;"	l
e4	kill.asm	/^  e4:	90                   	nop$/;"	l
e4	mkdir.asm	/^  e4:	48 89 ce             	mov    %rcx,%rsi$/;"	l
e4	rm.asm	/^  e4:	48 89 ce             	mov    %rcx,%rsi$/;"	l
e40	grep.asm	/^ e40:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
e40	ls.asm	/^     e40:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx$/;"	l
e40	sh.asm	/^     e40:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx$/;"	l
e40	usertests.asm	/^     e40:	48 ba c7 61 00 00 00 	movabs $0x61c7,%rdx$/;"	l
e43	grep.asm	/^ e43:	c1 e0 04             	shl    $0x4,%eax$/;"	l
e44	ls.asm	/^     e44:	48 89 10             	mov    %rdx,(%rax)$/;"	l
e44	sh.asm	/^     e44:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
e46	grep.asm	/^ e46:	89 c7                	mov    %eax,%edi$/;"	l
e47	ls.asm	/^     e47:	90                   	nop$/;"	l
e47	usertests.asm	/^     e47:	00 00 00 $/;"	l
e48	grep.asm	/^ e48:	48 b8 33 08 00 00 00 	movabs $0x833,%rax$/;"	l
e48	ls.asm	/^     e48:	c9                   	leaveq $/;"	l
e48	sh.asm	/^     e48:	48 89 d6             	mov    %rdx,%rsi$/;"	l
e49	ls.asm	/^     e49:	c3                   	retq   $/;"	l
e4a	ls.asm	/^     e4a:	55                   	push   %rbp$/;"	l
e4a	usertests.asm	/^     e4a:	ff d2                	callq  *%rdx$/;"	l
e4b	ls.asm	/^     e4b:	48 89 e5             	mov    %rsp,%rbp$/;"	l
e4b	sh.asm	/^     e4b:	48 89 c7             	mov    %rax,%rdi$/;"	l
e4c	usertests.asm	/^     e4c:	48 b8 02 60 00 00 00 	movabs $0x6002,%rax$/;"	l
e4e	ls.asm	/^     e4e:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
e4e	sh.asm	/^     e4e:	48 b8 c4 0a 00 00 00 	movabs $0xac4,%rax$/;"	l
e4f	grep.asm	/^ e4f:	00 00 00 $/;"	l
e5	init.asm	/^  e5:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)$/;"	l
e5	kill.asm	/^  e5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
e5	usertests.asm	/^      e5:	48 b8 08 88 00 00 00 	movabs $0x8808,%rax$/;"	l
e52	grep.asm	/^ e52:	ff d0                	callq  *%rax$/;"	l
e52	ls.asm	/^     e52:	89 7d ec             	mov    %edi,-0x14(%rbp)$/;"	l
e53	usertests.asm	/^     e53:	00 00 00 $/;"	l
e54	grep.asm	/^ e54:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
e55	ls.asm	/^     e55:	81 7d ec ff 0f 00 00 	cmpl   $0xfff,-0x14(%rbp)$/;"	l
e55	sh.asm	/^     e55:	00 00 00 $/;"	l
e56	usertests.asm	/^     e56:	ff d0                	callq  *%rax$/;"	l
e58	grep.asm	/^ e58:	48 83 7d f8 ff       	cmpq   $0xffffffffffffffff,-0x8(%rbp)$/;"	l
e58	sh.asm	/^     e58:	ff d0                	callq  *%rax$/;"	l
e58	usertests.asm	/^     e58:	48 bf 72 6c 00 00 00 	movabs $0x6c72,%rdi$/;"	l
e5a	sh.asm	/^     e5a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
e5c	ls.asm	/^     e5c:	77 07                	ja     e65 <morecore+0x1b>$/;"	l
e5d	grep.asm	/^ e5d:	75 07                	jne    e66 <morecore+0x41>$/;"	l
e5e	ls.asm	/^     e5e:	c7 45 ec 00 10 00 00 	movl   $0x1000,-0x14(%rbp)$/;"	l
e5e	sh.asm	/^     e5e:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx$/;"	l
e5f	grep.asm	/^ e5f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
e5f	usertests.asm	/^     e5f:	00 00 00 $/;"	l
e6	divide.asm	/^  e6:	29 c1                	sub    %eax,%ecx$/;"	l
e6	ln.asm	/^  e6:	89 55 f0             	mov    %edx,-0x10(%rbp)$/;"	l
e6	ls.asm	/^      e6:	48 89 c7             	mov    %rax,%rdi$/;"	l
e62	sh.asm	/^     e62:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
e62	usertests.asm	/^     e62:	48 b8 8e 60 00 00 00 	movabs $0x608e,%rax$/;"	l
e64	grep.asm	/^ e64:	eb 36                	jmp    e9c <morecore+0x77>$/;"	l
e65	ls.asm	/^     e65:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
e66	grep.asm	/^ e66:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
e66	sh.asm	/^     e66:	48 ba 2c 1e 00 00 00 	movabs $0x1e2c,%rdx$/;"	l
e68	ls.asm	/^     e68:	c1 e0 04             	shl    $0x4,%eax$/;"	l
e69	usertests.asm	/^     e69:	00 00 00 $/;"	l
e6a	grep.asm	/^ e6a:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
e6b	ls.asm	/^     e6b:	89 c7                	mov    %eax,%edi$/;"	l
e6c	usertests.asm	/^     e6c:	ff d0                	callq  *%rax$/;"	l
e6d	ls.asm	/^     e6d:	48 b8 58 08 00 00 00 	movabs $0x858,%rax$/;"	l
e6d	sh.asm	/^     e6d:	00 00 00 $/;"	l
e6e	grep.asm	/^ e6e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
e6e	usertests.asm	/^     e6e:	85 c0                	test   %eax,%eax$/;"	l
e7	forktest.asm	/^  e7:	ff d0                	callq  *%rax$/;"	l
e7	mkdir.asm	/^  e7:	48 89 f7             	mov    %rsi,%rdi$/;"	l
e7	rm.asm	/^  e7:	48 89 f7             	mov    %rsi,%rdi$/;"	l
e7	sh.asm	/^      e7:	00 00 00 $/;"	l
e7	stressfs.asm	/^  e7:	eb 24                	jmp    10d <main+0x10d>$/;"	l
e7	zombie.asm	/^  e7:	0f b6 00             	movzbl (%rax),%eax$/;"	l
e70	sh.asm	/^     e70:	48 89 ce             	mov    %rcx,%rsi$/;"	l
e70	usertests.asm	/^     e70:	79 35                	jns    ea7 <dirtest+0xcb>$/;"	l
e72	grep.asm	/^ e72:	8b 55 ec             	mov    -0x14(%rbp),%edx$/;"	l
e72	usertests.asm	/^     e72:	48 b8 08 88 00 00 00 	movabs $0x8808,%rax$/;"	l
e73	sh.asm	/^     e73:	48 89 c7             	mov    %rax,%rdi$/;"	l
e74	ls.asm	/^     e74:	00 00 00 $/;"	l
e75	grep.asm	/^ e75:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
e76	sh.asm	/^     e76:	48 b8 51 09 00 00 00 	movabs $0x951,%rax$/;"	l
e77	ls.asm	/^     e77:	ff d0                	callq  *%rax$/;"	l
e78	grep.asm	/^ e78:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
e79	ls.asm	/^     e79:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
e79	usertests.asm	/^     e79:	00 00 00 $/;"	l
e7c	grep.asm	/^ e7c:	48 83 c0 10          	add    $0x10,%rax$/;"	l
e7c	usertests.asm	/^     e7c:	8b 00                	mov    (%rax),%eax$/;"	l
e7d	ls.asm	/^     e7d:	48 83 7d f8 ff       	cmpq   $0xffffffffffffffff,-0x8(%rbp)$/;"	l
e7d	sh.asm	/^     e7d:	00 00 00 $/;"	l
e7e	usertests.asm	/^     e7e:	48 be 77 6c 00 00 00 	movabs $0x6c77,%rsi$/;"	l
e8	divide.asm	/^  e8:	89 c8                	mov    %ecx,%eax$/;"	l
e8	echo.asm	/^  e8:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx$/;"	l
e80	grep.asm	/^ e80:	48 89 c7             	mov    %rax,%rdi$/;"	l
e80	sh.asm	/^     e80:	ff d0                	callq  *%rax$/;"	l
e82	ls.asm	/^     e82:	75 07                	jne    e8b <morecore+0x41>$/;"	l
e82	sh.asm	/^     e82:	85 c0                	test   %eax,%eax$/;"	l
e83	grep.asm	/^ e83:	48 b8 f3 0c 00 00 00 	movabs $0xcf3,%rax$/;"	l
e84	ls.asm	/^     e84:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
e84	sh.asm	/^     e84:	75 16                	jne    e9c <parseblock+0xcb>$/;"	l
e85	usertests.asm	/^     e85:	00 00 00 $/;"	l
e86	sh.asm	/^     e86:	48 bf 2e 1e 00 00 00 	movabs $0x1e2e,%rdi$/;"	l
e88	usertests.asm	/^     e88:	89 c7                	mov    %eax,%edi$/;"	l
e89	ls.asm	/^     e89:	eb 36                	jmp    ec1 <morecore+0x77>$/;"	l
e8a	grep.asm	/^ e8a:	00 00 00 $/;"	l
e8a	usertests.asm	/^     e8a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
e8b	ls.asm	/^     e8b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
e8d	grep.asm	/^ e8d:	ff d0                	callq  *%rax$/;"	l
e8d	sh.asm	/^     e8d:	00 00 00 $/;"	l
e8f	grep.asm	/^ e8f:	48 b8 10 17 00 00 00 	movabs $0x1710,%rax$/;"	l
e8f	ls.asm	/^     e8f:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
e8f	usertests.asm	/^     e8f:	48 ba c7 61 00 00 00 	movabs $0x61c7,%rdx$/;"	l
e9	cat.asm	/^  e9:	00 00 00 $/;"	l
e9	forktest.asm	/^  e9:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)$/;"	l
e9	grep.asm	/^  e9:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)$/;"	l
e9	init.asm	/^  e9:	75 6c                	jne    157 <main+0x157>$/;"	l
e9	kill.asm	/^  e9:	48 8d 50 01          	lea    0x1(%rax),%rdx$/;"	l
e9	ln.asm	/^  e9:	90                   	nop$/;"	l
e9	ls.asm	/^      e9:	48 b8 94 05 00 00 00 	movabs $0x594,%rax$/;"	l
e9	stressfs.asm	/^  e9:	48 8d 8d e0 fd ff ff 	lea    -0x220(%rbp),%rcx$/;"	l
e9	wc.asm	/^  e9:	00 00 00 $/;"	l
e90	sh.asm	/^     e90:	48 b8 26 05 00 00 00 	movabs $0x526,%rax$/;"	l
e93	ls.asm	/^     e93:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
e96	grep.asm	/^ e96:	00 00 00 $/;"	l
e96	usertests.asm	/^     e96:	00 00 00 $/;"	l
e97	ls.asm	/^     e97:	8b 55 ec             	mov    -0x14(%rbp),%edx$/;"	l
e97	sh.asm	/^     e97:	00 00 00 $/;"	l
e99	grep.asm	/^ e99:	48 8b 00             	mov    (%rax),%rax$/;"	l
e99	usertests.asm	/^     e99:	ff d2                	callq  *%rdx$/;"	l
e9a	ls.asm	/^     e9a:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
e9a	sh.asm	/^     e9a:	ff d0                	callq  *%rax$/;"	l
e9b	usertests.asm	/^     e9b:	48 b8 02 60 00 00 00 	movabs $0x6002,%rax$/;"	l
e9c	grep.asm	/^ e9c:	c9                   	leaveq $/;"	l
e9c	sh.asm	/^     e9c:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi$/;"	l
e9d	grep.asm	/^ e9d:	c3                   	retq   $/;"	l
e9d	ls.asm	/^     e9d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
e9e	grep.asm	/^ e9e:	55                   	push   %rbp$/;"	l
e9f	grep.asm	/^ e9f:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ea	divide.asm	/^  ea:	89 45 ec             	mov    %eax,-0x14(%rbp)$/;"	l
ea	ln.asm	/^  ea:	c9                   	leaveq $/;"	l
ea	mkdir.asm	/^  ea:	89 d1                	mov    %edx,%ecx$/;"	l
ea	rm.asm	/^  ea:	89 d1                	mov    %edx,%ecx$/;"	l
ea	sh.asm	/^      ea:	ff d0                	callq  *%rax$/;"	l
ea	zombie.asm	/^  ea:	0f b6 d0             	movzbl %al,%edx$/;"	l
ea0	sh.asm	/^     ea0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ea1	ls.asm	/^     ea1:	48 83 c0 10          	add    $0x10,%rax$/;"	l
ea2	grep.asm	/^ ea2:	48 83 ec 30          	sub    $0x30,%rsp$/;"	l
ea2	usertests.asm	/^     ea2:	00 00 00 $/;"	l
ea4	sh.asm	/^     ea4:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
ea5	ls.asm	/^     ea5:	48 89 c7             	mov    %rax,%rdi$/;"	l
ea5	usertests.asm	/^     ea5:	ff d0                	callq  *%rax$/;"	l
ea6	grep.asm	/^ ea6:	89 7d dc             	mov    %edi,-0x24(%rbp)$/;"	l
ea7	usertests.asm	/^     ea7:	48 bf 8a 6c 00 00 00 	movabs $0x6c8a,%rdi$/;"	l
ea8	ls.asm	/^     ea8:	48 b8 18 0d 00 00 00 	movabs $0xd18,%rax$/;"	l
ea9	grep.asm	/^ ea9:	8b 45 dc             	mov    -0x24(%rbp),%eax$/;"	l
ea9	sh.asm	/^     ea9:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
eac	grep.asm	/^ eac:	48 83 c0 0f          	add    $0xf,%rax$/;"	l
eae	sh.asm	/^     eae:	48 89 c7             	mov    %rax,%rdi$/;"	l
eae	usertests.asm	/^     eae:	00 00 00 $/;"	l
eaf	ls.asm	/^     eaf:	00 00 00 $/;"	l
eargv	sh.c	/^  char *eargv[MAXARGS];$/;"	m	struct:execcmd	file:
eax	mmu.h	/^  uint eax;          \/\/ More saved state (registers)$/;"	m	struct:taskstate
eb	init.asm	/^  eb:	48 be 90 0f 00 00 00 	movabs $0xf90,%rsi$/;"	l
eb	ln.asm	/^  eb:	c3                   	retq   $/;"	l
eb0	grep.asm	/^ eb0:	48 c1 e8 04          	shr    $0x4,%rax$/;"	l
eb1	sh.asm	/^     eb1:	48 b8 aa 07 00 00 00 	movabs $0x7aa,%rax$/;"	l
eb1	usertests.asm	/^     eb1:	48 b8 8e 60 00 00 00 	movabs $0x608e,%rax$/;"	l
eb2	ls.asm	/^     eb2:	ff d0                	callq  *%rax$/;"	l
eb4	grep.asm	/^ eb4:	83 c0 01             	add    $0x1,%eax$/;"	l
eb4	ls.asm	/^     eb4:	48 b8 30 13 00 00 00 	movabs $0x1330,%rax$/;"	l
eb7	grep.asm	/^ eb7:	89 45 ec             	mov    %eax,-0x14(%rbp)$/;"	l
eb8	sh.asm	/^     eb8:	00 00 00 $/;"	l
eb8	usertests.asm	/^     eb8:	00 00 00 $/;"	l
eba	grep.asm	/^ eba:	48 b8 10 17 00 00 00 	movabs $0x1710,%rax$/;"	l
ebb	ls.asm	/^     ebb:	00 00 00 $/;"	l
ebb	sh.asm	/^     ebb:	ff d0                	callq  *%rax$/;"	l
ebb	usertests.asm	/^     ebb:	ff d0                	callq  *%rax$/;"	l
ebd	sh.asm	/^     ebd:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx$/;"	l
ebd	usertests.asm	/^     ebd:	85 c0                	test   %eax,%eax$/;"	l
ebe	ls.asm	/^     ebe:	48 8b 00             	mov    (%rax),%rax$/;"	l
ebf	usertests.asm	/^     ebf:	79 35                	jns    ef6 <dirtest+0x11a>$/;"	l
ebp	kernel.asm	/^    ebp = (addr_t*)ebp[0]; \/\/ saved %ebp$/;"	d
ebp	kernel.asm	/^    ebp = (uint*)ebp[0]; \/\/ saved %ebp$/;"	d
ebp	mmu.h	/^  uint *ebp;$/;"	m	struct:taskstate
ebp	proc.h	/^  addr_t ebp; \/\/rbp$/;"	m	struct:context
ebx	mmu.h	/^  uint ebx;$/;"	m	struct:taskstate
ec	cat.asm	/^  ec:	ff d0                	callq  *%rax$/;"	l
ec	echo.asm	/^  ec:	48 8d 4a 01          	lea    0x1(%rdx),%rcx$/;"	l
ec	ln.asm	/^  ec:	55                   	push   %rbp$/;"	l
ec	mkdir.asm	/^  ec:	fc                   	cld    $/;"	l
ec	rm.asm	/^  ec:	fc                   	cld    $/;"	l
ec	sh.asm	/^      ec:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ec	usertests.asm	/^      ec:	00 00 00 $/;"	l
ec	wc.asm	/^  ec:	bf 01 00 00 00       	mov    $0x1,%edi$/;"	l
ec1	grep.asm	/^ ec1:	00 00 00 $/;"	l
ec1	ls.asm	/^     ec1:	c9                   	leaveq $/;"	l
ec1	sh.asm	/^     ec1:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx$/;"	l
ec1	usertests.asm	/^     ec1:	48 b8 08 88 00 00 00 	movabs $0x8808,%rax$/;"	l
ec2	ls.asm	/^     ec2:	c3                   	retq   $/;"	l
ec3	ls.asm	/^     ec3:	55                   	push   %rbp$/;"	l
ec4	grep.asm	/^ ec4:	48 8b 00             	mov    (%rax),%rax$/;"	l
ec4	ls.asm	/^     ec4:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ec5	sh.asm	/^     ec5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ec7	grep.asm	/^ ec7:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ec7	ls.asm	/^     ec7:	48 83 ec 30          	sub    $0x30,%rsp$/;"	l
ec8	usertests.asm	/^     ec8:	00 00 00 $/;"	l
ec9	sh.asm	/^     ec9:	48 89 ce             	mov    %rcx,%rsi$/;"	l
ecb	grep.asm	/^ ecb:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)$/;"	l
ecb	ls.asm	/^     ecb:	89 7d dc             	mov    %edi,-0x24(%rbp)$/;"	l
ecb	usertests.asm	/^     ecb:	8b 00                	mov    (%rax),%eax$/;"	l
ecc	sh.asm	/^     ecc:	48 89 c7             	mov    %rax,%rdi$/;"	l
ecd	usertests.asm	/^     ecd:	48 be 8d 6c 00 00 00 	movabs $0x6c8d,%rsi$/;"	l
ece	ls.asm	/^     ece:	8b 45 dc             	mov    -0x24(%rbp),%eax$/;"	l
ecf	sh.asm	/^     ecf:	48 b8 8e 0c 00 00 00 	movabs $0xc8e,%rax$/;"	l
echoargv	usertests.c	/^char *echoargv[] = { "echo", "ALL", "TESTS", "PASSED", 0 };$/;"	v
ecmd	sh.asm	/^    ecmd = (struct execcmd*)cmd;$/;"	d
ecx	mmu.h	/^  uint ecx;$/;"	m	struct:taskstate
ed	divide.asm	/^  ed:	48 8b 45 d0          	mov    -0x30(%rbp),%rax$/;"	l
ed	forktest.asm	/^  ed:	81 7d fc e7 03 00 00 	cmpl   $0x3e7,-0x4(%rbp)$/;"	l
ed	grep.asm	/^  ed:	7e 3c                	jle    12b <grep+0x12b>$/;"	l
ed	kill.asm	/^  ed:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)$/;"	l
ed	ln.asm	/^  ed:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ed	mkdir.asm	/^  ed:	f3 aa                	rep stos %al,%es:(%rdi)$/;"	l
ed	rm.asm	/^  ed:	f3 aa                	rep stos %al,%es:(%rdi)$/;"	l
ed	zombie.asm	/^  ed:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ed0	grep.asm	/^ ed0:	75 4a                	jne    f1c <malloc+0x7e>$/;"	l
ed1	ls.asm	/^     ed1:	48 83 c0 0f          	add    $0xf,%rax$/;"	l
ed2	grep.asm	/^ ed2:	48 b8 00 17 00 00 00 	movabs $0x1700,%rax$/;"	l
ed4	usertests.asm	/^     ed4:	00 00 00 $/;"	l
ed5	ls.asm	/^     ed5:	48 c1 e8 04          	shr    $0x4,%rax$/;"	l
ed6	sh.asm	/^     ed6:	00 00 00 $/;"	l
ed7	usertests.asm	/^     ed7:	89 c7                	mov    %eax,%edi$/;"	l
ed9	grep.asm	/^ ed9:	00 00 00 $/;"	l
ed9	ls.asm	/^     ed9:	83 c0 01             	add    $0x1,%eax$/;"	l
ed9	sh.asm	/^     ed9:	ff d0                	callq  *%rax$/;"	l
ed9	usertests.asm	/^     ed9:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
edb	sh.asm	/^     edb:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
edc	grep.asm	/^ edc:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
edc	ls.asm	/^     edc:	89 45 ec             	mov    %eax,-0x14(%rbp)$/;"	l
ede	usertests.asm	/^     ede:	48 ba c7 61 00 00 00 	movabs $0x61c7,%rdx$/;"	l
edf	ls.asm	/^     edf:	48 b8 30 13 00 00 00 	movabs $0x1330,%rax$/;"	l
edf	sh.asm	/^     edf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
edi	mmu.h	/^  uint edi;$/;"	m	struct:taskstate
edx	mmu.h	/^  uint edx;$/;"	m	struct:taskstate
ee	cat.asm	/^  ee:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%rbp)$/;"	l
ee0	grep.asm	/^ ee0:	48 b8 10 17 00 00 00 	movabs $0x1710,%rax$/;"	l
ee3	sh.asm	/^     ee3:	c9                   	leaveq $/;"	l
ee4	sh.asm	/^     ee4:	c3                   	retq   $/;"	l
ee5	sh.asm	/^     ee5:	55                   	push   %rbp$/;"	l
ee5	usertests.asm	/^     ee5:	00 00 00 $/;"	l
ee6	ls.asm	/^     ee6:	00 00 00 $/;"	l
ee6	sh.asm	/^     ee6:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ee7	grep.asm	/^ ee7:	00 00 00 $/;"	l
ee8	usertests.asm	/^     ee8:	ff d2                	callq  *%rdx$/;"	l
ee9	ls.asm	/^     ee9:	48 8b 00             	mov    (%rax),%rax$/;"	l
ee9	sh.asm	/^     ee9:	48 83 ec 40          	sub    $0x40,%rsp$/;"	l
eea	grep.asm	/^ eea:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
eea	usertests.asm	/^     eea:	48 b8 02 60 00 00 00 	movabs $0x6002,%rax$/;"	l
eec	ls.asm	/^     eec:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
eed	sh.asm	/^     eed:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)$/;"	l
eee	grep.asm	/^ eee:	48 89 10             	mov    %rdx,(%rax)$/;"	l
ef	grep.asm	/^  ef:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ef	mkdir.asm	/^  ef:	89 ca                	mov    %ecx,%edx$/;"	l
ef	rm.asm	/^  ef:	89 ca                	mov    %ecx,%edx$/;"	l
ef	usertests.asm	/^      ef:	8b 00                	mov    (%rax),%eax$/;"	l
ef0	ls.asm	/^     ef0:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)$/;"	l
ef1	grep.asm	/^ ef1:	48 b8 10 17 00 00 00 	movabs $0x1710,%rax$/;"	l
ef1	sh.asm	/^     ef1:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)$/;"	l
ef1	usertests.asm	/^     ef1:	00 00 00 $/;"	l
ef4	usertests.asm	/^     ef4:	ff d0                	callq  *%rax$/;"	l
ef5	ls.asm	/^     ef5:	75 4a                	jne    f41 <malloc+0x7e>$/;"	l
ef5	sh.asm	/^     ef5:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx$/;"	l
ef6	usertests.asm	/^     ef6:	48 bf 72 6c 00 00 00 	movabs $0x6c72,%rdi$/;"	l
ef7	ls.asm	/^     ef7:	48 b8 20 13 00 00 00 	movabs $0x1320,%rax$/;"	l
ef8	grep.asm	/^ ef8:	00 00 00 $/;"	l
ef9	sh.asm	/^     ef9:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
efb	grep.asm	/^ efb:	48 8b 10             	mov    (%rax),%rdx$/;"	l
efd	sh.asm	/^     efd:	48 ba 1f 1e 00 00 00 	movabs $0x1e1f,%rdx$/;"	l
efd	usertests.asm	/^     efd:	00 00 00 $/;"	l
efe	grep.asm	/^ efe:	48 b8 00 17 00 00 00 	movabs $0x1700,%rax$/;"	l
efe	ls.asm	/^     efe:	00 00 00 $/;"	l
efile	sh.c	/^  char *efile;$/;"	m	struct:redircmd	file:
eflags	kernel.asm	/^  eflags = readeflags();$/;"	d
eflags	mmu.h	/^  uint eflags;$/;"	m	struct:taskstate
ehsize	elf.h	/^  ushort ehsize;$/;"	m	struct:elfhdr
eip	mmu.h	/^  uint *eip;         \/\/ Saved state from last task switch$/;"	m	struct:taskstate
eip	proc.h	/^  addr_t eip; \/\/rip;$/;"	m	struct:context
elf	elf.h	/^  uchar elf[12];$/;"	m	struct:elfhdr
elfhdr	elf.h	/^struct elfhdr {$/;"	s
empty	kernel.asm	/^      empty = ip;$/;"	d
empty	kernel.asm	/^  empty = 0;$/;"	d
end_op	log.c	/^end_op(void)$/;"	f
entry	elf.h	/^  addr_t entry;$/;"	m	struct:elfhdr
entry	mp.h	/^  ushort entry;                 \/\/ entry count$/;"	m	struct:mpconf
entry32mp	entry.S	/^entry32mp:$/;"	l
entry32mp	kernel.asm	/^entry32mp:$/;"	l
entry64high	entry.S	/^entry64high:$/;"	l
entry64high	kernel.asm	/^entry64high:$/;"	l
entry64low	entry.S	/^entry64low:$/;"	l
entry64low	kernel.asm	/^entry64low:$/;"	l
entry64mp	entry.S	/^entry64mp:$/;"	l
entry64mp	kernel.asm	/^entry64mp:$/;"	l
entry_addr	bootmain.c	/^  uint64 entry_addr;$/;"	m	struct:mbheader	file:
ep	kernel.asm	/^  ep = (char*)proc->sz;$/;"	d
err	x86.h	/^   uint64 err;$/;"	m	struct:trapframe
es	mmu.h	/^  ushort es;         \/\/ Even more saved state (segment selectors)$/;"	m	struct:taskstate
es	sh.asm	/^  es = s + strlen(s);$/;"	d
esi	mmu.h	/^  uint esi;$/;"	m	struct:taskstate
esp	mmu.h	/^  uint *esp;$/;"	m	struct:taskstate
esp0	mmu.h	/^  uint esp0;         \/\/ Stack pointers and segment selectors$/;"	m	struct:taskstate
esp1	mmu.h	/^  uint *esp1;$/;"	m	struct:taskstate
esp2	mmu.h	/^  uint *esp2;$/;"	m	struct:taskstate
exec	exec.c	/^exec(char *path, char **argv)$/;"	f
execcmd	sh.c	/^execcmd(void)$/;"	f
execcmd	sh.c	/^struct execcmd {$/;"	s	file:
exectest	usertests.c	/^exectest(void)$/;"	f
exit	initcode.S	/^exit:$/;"	l
exit	initcode.asm	/^exit:$/;"	l
exit	proc.c	/^exit(void)$/;"	f
exitiputtest	usertests.c	/^exitiputtest(void)$/;"	f
exitwait	usertests.c	/^exitwait(void)$/;"	f
extern	kernel.asm	/^extern addr_t vectors[];  \/\/ in vectors.S: array of 256 entry pointers$/;"	l
f	Makefile	/^	dd if=\/dev\/zero of=xv6.img count=10000$/;"	m
f	Makefile	/^	dd if=\/dev\/zero of=xv6memfs.img count=10000$/;"	m
f	Makefile	/^	dd if=bootblock of=xv6.img conv=notrunc$/;"	m
f	Makefile	/^	dd if=bootblock of=xv6memfs.img conv=notrunc$/;"	m
f	Makefile	/^	dd if=kernel of=xv6.img seek=1 conv=notrunc$/;"	m
f	Makefile	/^	dd if=kernelmemfs of=xv6memfs.img seek=1 conv=notrunc$/;"	m
f	divide.asm	/^   f:	83 7d dc 03          	cmpl   $0x3,-0x24(%rbp)$/;"	l
f	echo.asm	/^   f:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%rbp)$/;"	l
f	grep.asm	/^   f:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)$/;"	l
f	kill.asm	/^   f:	83 7d ec 01          	cmpl   $0x1,-0x14(%rbp)$/;"	l
f	ln.asm	/^   f:	83 7d fc 03          	cmpl   $0x3,-0x4(%rbp)$/;"	l
f	mkdir.asm	/^   f:	83 7d ec 01          	cmpl   $0x1,-0x14(%rbp)$/;"	l
f	rm.asm	/^   f:	83 7d ec 01          	cmpl   $0x1,-0x14(%rbp)$/;"	l
f	wc.asm	/^   f:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)$/;"	l
f0	echo.asm	/^  f0:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)$/;"	l
f0	ln.asm	/^  f0:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
f0	ls.asm	/^      f0:	00 00 00 $/;"	l
f0	sh.asm	/^      f0:	8b 50 20             	mov    0x20(%rax),%edx$/;"	l
f0	stressfs.asm	/^  f0:	8b 45 f8             	mov    -0x8(%rbp),%eax$/;"	l
f00	usertests.asm	/^     f00:	48 b8 66 60 00 00 00 	movabs $0x6066,%rax$/;"	l
f01	ls.asm	/^     f01:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
f04	sh.asm	/^     f04:	00 00 00 $/;"	l
f05	grep.asm	/^ f05:	00 00 00 $/;"	l
f05	ls.asm	/^     f05:	48 b8 30 13 00 00 00 	movabs $0x1330,%rax$/;"	l
f07	sh.asm	/^     f07:	48 89 ce             	mov    %rcx,%rsi$/;"	l
f07	usertests.asm	/^     f07:	00 00 00 $/;"	l
f08	grep.asm	/^ f08:	48 89 10             	mov    %rdx,(%rax)$/;"	l
f0a	sh.asm	/^     f0a:	48 89 c7             	mov    %rax,%rdi$/;"	l
f0a	usertests.asm	/^     f0a:	ff d0                	callq  *%rax$/;"	l
f0b	grep.asm	/^ f0b:	48 b8 00 17 00 00 00 	movabs $0x1700,%rax$/;"	l
f0c	ls.asm	/^     f0c:	00 00 00 $/;"	l
f0c	usertests.asm	/^     f0c:	85 c0                	test   %eax,%eax$/;"	l
f0d	sh.asm	/^     f0d:	48 b8 51 09 00 00 00 	movabs $0x951,%rax$/;"	l
f0e	usertests.asm	/^     f0e:	79 35                	jns    f45 <dirtest+0x169>$/;"	l
f0f	ls.asm	/^     f0f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
f1	divide.asm	/^  f1:	48 83 c0 10          	add    $0x10,%rax$/;"	l
f1	kill.asm	/^  f1:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx$/;"	l
f1	mkdir.asm	/^  f1:	48 89 fe             	mov    %rdi,%rsi$/;"	l
f1	rm.asm	/^  f1:	48 89 fe             	mov    %rdi,%rsi$/;"	l
f1	usertests.asm	/^      f1:	48 be c0 68 00 00 00 	movabs $0x68c0,%rsi$/;"	l
f1	wc.asm	/^  f1:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f1	zombie.asm	/^  f1:	0f b6 00             	movzbl (%rax),%eax$/;"	l
f10	usertests.asm	/^     f10:	48 b8 08 88 00 00 00 	movabs $0x8808,%rax$/;"	l
f12	grep.asm	/^ f12:	00 00 00 $/;"	l
f13	ls.asm	/^     f13:	48 89 10             	mov    %rdx,(%rax)$/;"	l
f14	sh.asm	/^     f14:	00 00 00 $/;"	l
f15	grep.asm	/^ f15:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%rax)$/;"	l
f16	ls.asm	/^     f16:	48 b8 30 13 00 00 00 	movabs $0x1330,%rax$/;"	l
f17	sh.asm	/^     f17:	ff d0                	callq  *%rax$/;"	l
f17	usertests.asm	/^     f17:	00 00 00 $/;"	l
f19	sh.asm	/^     f19:	85 c0                	test   %eax,%eax$/;"	l
f1a	usertests.asm	/^     f1a:	8b 00                	mov    (%rax),%eax$/;"	l
f1b	sh.asm	/^     f1b:	74 1f                	je     f3c <parseexec+0x57>$/;"	l
f1c	grep.asm	/^ f1c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
f1c	usertests.asm	/^     f1c:	48 be 9e 6c 00 00 00 	movabs $0x6c9e,%rsi$/;"	l
f1d	ls.asm	/^     f1d:	00 00 00 $/;"	l
f1d	sh.asm	/^     f1d:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx$/;"	l
f2	grep.asm	/^  f2:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx$/;"	l
f2	init.asm	/^  f2:	00 00 00 $/;"	l
f20	grep.asm	/^ f20:	48 8b 00             	mov    (%rax),%rax$/;"	l
f20	ls.asm	/^     f20:	48 8b 10             	mov    (%rax),%rdx$/;"	l
f21	sh.asm	/^     f21:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
f23	grep.asm	/^ f23:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
f23	ls.asm	/^     f23:	48 b8 20 13 00 00 00 	movabs $0x1320,%rax$/;"	l
f23	usertests.asm	/^     f23:	00 00 00 $/;"	l
f25	sh.asm	/^     f25:	48 89 d6             	mov    %rdx,%rsi$/;"	l
f26	usertests.asm	/^     f26:	89 c7                	mov    %eax,%edi$/;"	l
f27	grep.asm	/^ f27:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
f28	sh.asm	/^     f28:	48 89 c7             	mov    %rax,%rdi$/;"	l
f28	usertests.asm	/^     f28:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f2a	ls.asm	/^     f2a:	00 00 00 $/;"	l
f2b	grep.asm	/^ f2b:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
f2b	sh.asm	/^     f2b:	48 b8 d1 0d 00 00 00 	movabs $0xdd1,%rax$/;"	l
f2d	ls.asm	/^     f2d:	48 89 10             	mov    %rdx,(%rax)$/;"	l
f2d	usertests.asm	/^     f2d:	48 ba c7 61 00 00 00 	movabs $0x61c7,%rdx$/;"	l
f2e	grep.asm	/^ f2e:	3b 45 ec             	cmp    -0x14(%rbp),%eax$/;"	l
f3	ls.asm	/^      f3:	ff d0                	callq  *%rax$/;"	l
f3	sh.asm	/^      f3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
f3	stressfs.asm	/^  f3:	ba 00 02 00 00       	mov    $0x200,%edx$/;"	l
f30	ls.asm	/^     f30:	48 b8 20 13 00 00 00 	movabs $0x1320,%rax$/;"	l
f31	grep.asm	/^ f31:	72 65                	jb     f98 <malloc+0xfa>$/;"	l
f32	sh.asm	/^     f32:	00 00 00 $/;"	l
f33	grep.asm	/^ f33:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
f34	usertests.asm	/^     f34:	00 00 00 $/;"	l
f35	sh.asm	/^     f35:	ff d0                	callq  *%rax$/;"	l
f37	grep.asm	/^ f37:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
f37	ls.asm	/^     f37:	00 00 00 $/;"	l
f37	sh.asm	/^     f37:	e9 57 01 00 00       	jmpq   1093 <parseexec+0x1ae>$/;"	l
f37	usertests.asm	/^     f37:	ff d2                	callq  *%rdx$/;"	l
f39	usertests.asm	/^     f39:	48 b8 02 60 00 00 00 	movabs $0x6002,%rax$/;"	l
f3a	grep.asm	/^ f3a:	3b 45 ec             	cmp    -0x14(%rbp),%eax$/;"	l
f3a	ls.asm	/^     f3a:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%rax)$/;"	l
f3c	sh.asm	/^     f3c:	48 b8 9d 05 00 00 00 	movabs $0x59d,%rax$/;"	l
f3d	grep.asm	/^ f3d:	75 10                	jne    f4f <malloc+0xb1>$/;"	l
f3f	grep.asm	/^ f3f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
f4	echo.asm	/^  f4:	0f b6 12             	movzbl (%rdx),%edx$/;"	l
f4	forktest.asm	/^  f4:	7e cc                	jle    c2 <forktest+0x31>$/;"	l
f4	ln.asm	/^  f4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
f4	mkdir.asm	/^  f4:	48 89 75 f8          	mov    %rsi,-0x8(%rbp)$/;"	l
f4	rm.asm	/^  f4:	48 89 75 f8          	mov    %rsi,-0x8(%rbp)$/;"	l
f4	zombie.asm	/^  f4:	0f b6 c0             	movzbl %al,%eax$/;"	l
f40	usertests.asm	/^     f40:	00 00 00 $/;"	l
f41	ls.asm	/^     f41:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
f43	grep.asm	/^ f43:	48 8b 10             	mov    (%rax),%rdx$/;"	l
f43	sh.asm	/^     f43:	00 00 00 $/;"	l
f43	usertests.asm	/^     f43:	ff d0                	callq  *%rax$/;"	l
f45	ls.asm	/^     f45:	48 8b 00             	mov    (%rax),%rax$/;"	l
f45	usertests.asm	/^     f45:	48 b8 08 88 00 00 00 	movabs $0x8808,%rax$/;"	l
f46	grep.asm	/^ f46:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
f46	sh.asm	/^     f46:	ff d0                	callq  *%rax$/;"	l
f48	ls.asm	/^     f48:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
f48	sh.asm	/^     f48:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
f4a	grep.asm	/^ f4a:	48 89 10             	mov    %rdx,(%rax)$/;"	l
f4c	ls.asm	/^     f4c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
f4c	sh.asm	/^     f4c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
f4c	usertests.asm	/^     f4c:	00 00 00 $/;"	l
f4d	grep.asm	/^ f4d:	eb 2e                	jmp    f7d <malloc+0xdf>$/;"	l
f4f	grep.asm	/^ f4f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
f4f	usertests.asm	/^     f4f:	8b 00                	mov    (%rax),%eax$/;"	l
f5	cat.asm	/^  f5:	e9 a0 00 00 00       	jmpq   19a <main+0xde>$/;"	l
f5	divide.asm	/^  f5:	48 8b 10             	mov    (%rax),%rdx$/;"	l
f5	init.asm	/^  f5:	48 bf f4 0c 00 00 00 	movabs $0xcf4,%rdi$/;"	l
f5	kill.asm	/^  f5:	48 8d 4a 01          	lea    0x1(%rdx),%rcx$/;"	l
f5	ls.asm	/^      f5:	48 b8 10 13 00 00 00 	movabs $0x1310,%rax$/;"	l
f50	ls.asm	/^     f50:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
f50	sh.asm	/^     f50:	48 89 45 e8          	mov    %rax,-0x18(%rbp)$/;"	l
f51	usertests.asm	/^     f51:	48 be b2 6c 00 00 00 	movabs $0x6cb2,%rsi$/;"	l
f53	grep.asm	/^ f53:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
f53	ls.asm	/^     f53:	3b 45 ec             	cmp    -0x14(%rbp),%eax$/;"	l
f54	sh.asm	/^     f54:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)$/;"	l
f56	grep.asm	/^ f56:	2b 45 ec             	sub    -0x14(%rbp),%eax$/;"	l
f56	ls.asm	/^     f56:	72 65                	jb     fbd <malloc+0xfa>$/;"	l
f58	ls.asm	/^     f58:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
f58	usertests.asm	/^     f58:	00 00 00 $/;"	l
f59	grep.asm	/^ f59:	89 c2                	mov    %eax,%edx$/;"	l
f5b	grep.asm	/^ f5b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
f5b	sh.asm	/^     f5b:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx$/;"	l
f5b	usertests.asm	/^     f5b:	89 c7                	mov    %eax,%edi$/;"	l
f5c	ls.asm	/^     f5c:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
f5d	usertests.asm	/^     f5d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f5f	grep.asm	/^ f5f:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
f5f	ls.asm	/^     f5f:	3b 45 ec             	cmp    -0x14(%rbp),%eax$/;"	l
f5f	sh.asm	/^     f5f:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx$/;"	l
f6	forktest.asm	/^  f6:	eb 01                	jmp    f9 <forktest+0x68>$/;"	l
f6	grep.asm	/^  f6:	48 ba 00 13 00 00 00 	movabs $0x1300,%rdx$/;"	l
f6	wc.asm	/^  f6:	48 ba 40 07 00 00 00 	movabs $0x740,%rdx$/;"	l
f62	grep.asm	/^ f62:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
f62	ls.asm	/^     f62:	75 10                	jne    f74 <malloc+0xb1>$/;"	l
f62	usertests.asm	/^     f62:	48 ba c7 61 00 00 00 	movabs $0x61c7,%rdx$/;"	l
f63	sh.asm	/^     f63:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
f64	ls.asm	/^     f64:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
f66	grep.asm	/^ f66:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
f67	sh.asm	/^     f67:	48 89 ce             	mov    %rcx,%rsi$/;"	l
f68	ls.asm	/^     f68:	48 8b 10             	mov    (%rax),%rdx$/;"	l
f69	grep.asm	/^ f69:	89 c0                	mov    %eax,%eax$/;"	l
f69	usertests.asm	/^     f69:	00 00 00 $/;"	l
f6a	sh.asm	/^     f6a:	48 89 c7             	mov    %rax,%rdi$/;"	l
f6b	grep.asm	/^ f6b:	48 c1 e0 04          	shl    $0x4,%rax$/;"	l
f6b	ls.asm	/^     f6b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
f6c	usertests.asm	/^     f6c:	ff d2                	callq  *%rdx$/;"	l
f6d	sh.asm	/^     f6d:	48 b8 8e 0c 00 00 00 	movabs $0xc8e,%rax$/;"	l
f6e	usertests.asm	/^     f6e:	90                   	nop$/;"	l
f6f	grep.asm	/^ f6f:	48 01 45 f8          	add    %rax,-0x8(%rbp)$/;"	l
f6f	ls.asm	/^     f6f:	48 89 10             	mov    %rdx,(%rax)$/;"	l
f6f	usertests.asm	/^     f6f:	5d                   	pop    %rbp$/;"	l
f7	echo.asm	/^  f7:	88 10                	mov    %dl,(%rax)$/;"	l
f7	sh.asm	/^      f7:	48 8b 40 10          	mov    0x10(%rax),%rax$/;"	l
f7	zombie.asm	/^  f7:	29 c2                	sub    %eax,%edx$/;"	l
f70	usertests.asm	/^     f70:	c3                   	retq   $/;"	l
f71	usertests.asm	/^     f71:	55                   	push   %rbp$/;"	l
f72	ls.asm	/^     f72:	eb 2e                	jmp    fa2 <malloc+0xdf>$/;"	l
f72	usertests.asm	/^     f72:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f73	grep.asm	/^ f73:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
f74	ls.asm	/^     f74:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
f74	sh.asm	/^     f74:	00 00 00 $/;"	l
f75	usertests.asm	/^     f75:	48 b8 08 88 00 00 00 	movabs $0x8808,%rax$/;"	l
f77	grep.asm	/^ f77:	8b 55 ec             	mov    -0x14(%rbp),%edx$/;"	l
f77	sh.asm	/^     f77:	ff d0                	callq  *%rax$/;"	l
f78	ls.asm	/^     f78:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
f79	sh.asm	/^     f79:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
f7a	grep.asm	/^ f7a:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
f7b	ls.asm	/^     f7b:	2b 45 ec             	sub    -0x14(%rbp),%eax$/;"	l
f7c	usertests.asm	/^     f7c:	00 00 00 $/;"	l
f7d	grep.asm	/^ f7d:	48 b8 10 17 00 00 00 	movabs $0x1710,%rax$/;"	l
f7d	sh.asm	/^     f7d:	e9 b4 00 00 00       	jmpq   1036 <parseexec+0x151>$/;"	l
f7e	ls.asm	/^     f7e:	89 c2                	mov    %eax,%edx$/;"	l
f7f	usertests.asm	/^     f7f:	8b 00                	mov    (%rax),%eax$/;"	l
f8	divide.asm	/^  f8:	48 8b 45 d0          	mov    -0x30(%rbp),%rax$/;"	l
f8	forktest.asm	/^  f8:	90                   	nop$/;"	l
f8	ln.asm	/^  f8:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)$/;"	l
f8	mkdir.asm	/^  f8:	89 55 f0             	mov    %edx,-0x10(%rbp)$/;"	l
f8	rm.asm	/^  f8:	89 55 f0             	mov    %edx,-0x10(%rbp)$/;"	l
f8	stressfs.asm	/^  f8:	48 89 ce             	mov    %rcx,%rsi$/;"	l
f8	usertests.asm	/^      f8:	00 00 00 $/;"	l
f80	ls.asm	/^     f80:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
f81	usertests.asm	/^     f81:	48 be c1 6c 00 00 00 	movabs $0x6cc1,%rsi$/;"	l
f82	sh.asm	/^     f82:	48 8d 4d d0          	lea    -0x30(%rbp),%rcx$/;"	l
f84	grep.asm	/^ f84:	00 00 00 $/;"	l
f84	ls.asm	/^     f84:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
f86	sh.asm	/^     f86:	48 8d 55 d8          	lea    -0x28(%rbp),%rdx$/;"	l
f87	grep.asm	/^ f87:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
f87	ls.asm	/^     f87:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
f88	usertests.asm	/^     f88:	00 00 00 $/;"	l
f8a	sh.asm	/^     f8a:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi$/;"	l
f8b	grep.asm	/^ f8b:	48 89 10             	mov    %rdx,(%rax)$/;"	l
f8b	ls.asm	/^     f8b:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
f8b	usertests.asm	/^     f8b:	89 c7                	mov    %eax,%edi$/;"	l
f8d	usertests.asm	/^     f8d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f8e	grep.asm	/^ f8e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
f8e	ls.asm	/^     f8e:	89 c0                	mov    %eax,%eax$/;"	l
f8e	sh.asm	/^     f8e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
f9	echo.asm	/^  f9:	0f b6 00             	movzbl (%rax),%eax$/;"	l
f9	forktest.asm	/^  f9:	81 7d fc e8 03 00 00 	cmpl   $0x3e8,-0x4(%rbp)$/;"	l
f9	kill.asm	/^  f9:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)$/;"	l
f9	zombie.asm	/^  f9:	89 d0                	mov    %edx,%eax$/;"	l
f90	ls.asm	/^     f90:	48 c1 e0 04          	shl    $0x4,%rax$/;"	l
f92	grep.asm	/^ f92:	48 83 c0 10          	add    $0x10,%rax$/;"	l
f92	sh.asm	/^     f92:	48 89 c7             	mov    %rax,%rdi$/;"	l
f92	usertests.asm	/^     f92:	48 ba c7 61 00 00 00 	movabs $0x61c7,%rdx$/;"	l
f94	ls.asm	/^     f94:	48 01 45 f8          	add    %rax,-0x8(%rbp)$/;"	l
f95	sh.asm	/^     f95:	48 b8 aa 07 00 00 00 	movabs $0x7aa,%rax$/;"	l
f96	grep.asm	/^ f96:	eb 4e                	jmp    fe6 <malloc+0x148>$/;"	l
f98	grep.asm	/^ f98:	48 b8 10 17 00 00 00 	movabs $0x1710,%rax$/;"	l
f98	ls.asm	/^     f98:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
f99	usertests.asm	/^     f99:	00 00 00 $/;"	l
f9c	ls.asm	/^     f9c:	8b 55 ec             	mov    -0x14(%rbp),%edx$/;"	l
f9c	sh.asm	/^     f9c:	00 00 00 $/;"	l
f9c	usertests.asm	/^     f9c:	ff d2                	callq  *%rdx$/;"	l
f9e	usertests.asm	/^     f9e:	48 be e0 87 00 00 00 	movabs $0x87e0,%rsi$/;"	l
f9f	grep.asm	/^ f9f:	00 00 00 $/;"	l
f9f	ls.asm	/^     f9f:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
f9f	sh.asm	/^     f9f:	ff d0                	callq  *%rax$/;"	l
fa	cat.asm	/^  fa:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
fa1	sh.asm	/^     fa1:	89 45 e4             	mov    %eax,-0x1c(%rbp)$/;"	l
fa2	grep.asm	/^ fa2:	48 8b 00             	mov    (%rax),%rax$/;"	l
fa2	ls.asm	/^     fa2:	48 b8 30 13 00 00 00 	movabs $0x1330,%rax$/;"	l
fa4	sh.asm	/^     fa4:	83 7d e4 00          	cmpl   $0x0,-0x1c(%rbp)$/;"	l
fa5	grep.asm	/^ fa5:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)$/;"	l
fa5	usertests.asm	/^     fa5:	00 00 00 $/;"	l
fa8	sh.asm	/^     fa8:	0f 84 b6 00 00 00    	je     1064 <parseexec+0x17f>$/;"	l
fa8	usertests.asm	/^     fa8:	48 bf 68 68 00 00 00 	movabs $0x6868,%rdi$/;"	l
fa9	grep.asm	/^ fa9:	75 23                	jne    fce <malloc+0x130>$/;"	l
fa9	ls.asm	/^     fa9:	00 00 00 $/;"	l
fab	grep.asm	/^ fab:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
fac	ls.asm	/^     fac:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
fae	grep.asm	/^ fae:	89 c7                	mov    %eax,%edi$/;"	l
fae	sh.asm	/^     fae:	83 7d e4 61          	cmpl   $0x61,-0x1c(%rbp)$/;"	l
faf	usertests.asm	/^     faf:	00 00 00 $/;"	l
fb	mkdir.asm	/^  fb:	90                   	nop$/;"	l
fb	rm.asm	/^  fb:	90                   	nop$/;"	l
fb	sh.asm	/^      fb:	89 d6                	mov    %edx,%esi$/;"	l
fb	stressfs.asm	/^  fb:	89 c7                	mov    %eax,%edi$/;"	l
fb	usertests.asm	/^      fb:	89 c7                	mov    %eax,%edi$/;"	l
fb	zombie.asm	/^  fb:	c9                   	leaveq $/;"	l
fb0	grep.asm	/^ fb0:	48 b8 25 0e 00 00 00 	movabs $0xe25,%rax$/;"	l
fb0	ls.asm	/^     fb0:	48 89 10             	mov    %rdx,(%rax)$/;"	l
fb2	sh.asm	/^     fb2:	74 16                	je     fca <parseexec+0xe5>$/;"	l
fb2	usertests.asm	/^     fb2:	48 b8 48 60 00 00 00 	movabs $0x6048,%rax$/;"	l
fb3	ls.asm	/^     fb3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
fb4	sh.asm	/^     fb4:	48 bf f2 1d 00 00 00 	movabs $0x1df2,%rdi$/;"	l
fb7	grep.asm	/^ fb7:	00 00 00 $/;"	l
fb7	ls.asm	/^     fb7:	48 83 c0 10          	add    $0x10,%rax$/;"	l
fb9	usertests.asm	/^     fb9:	00 00 00 $/;"	l
fba	grep.asm	/^ fba:	ff d0                	callq  *%rax$/;"	l
fbb	ls.asm	/^     fbb:	eb 4e                	jmp    100b <malloc+0x148>$/;"	l
fbb	sh.asm	/^     fbb:	00 00 00 $/;"	l
fbc	grep.asm	/^ fbc:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
fbc	usertests.asm	/^     fbc:	ff d0                	callq  *%rax$/;"	l
fbd	ls.asm	/^     fbd:	48 b8 30 13 00 00 00 	movabs $0x1330,%rax$/;"	l
fbe	sh.asm	/^     fbe:	48 b8 26 05 00 00 00 	movabs $0x526,%rax$/;"	l
fbe	usertests.asm	/^     fbe:	85 c0                	test   %eax,%eax$/;"	l
fc	divide.asm	/^  fc:	48 83 c0 08          	add    $0x8,%rax$/;"	l
fc	echo.asm	/^  fc:	84 c0                	test   %al,%al$/;"	l
fc	init.asm	/^  fc:	00 00 00 $/;"	l
fc	ln.asm	/^  fc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
fc	ls.asm	/^      fc:	00 00 00 $/;"	l
fc	mkdir.asm	/^  fc:	c9                   	leaveq $/;"	l
fc	rm.asm	/^  fc:	c9                   	leaveq $/;"	l
fc	zombie.asm	/^  fc:	c3                   	retq   $/;"	l
fc0	grep.asm	/^ fc0:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)$/;"	l
fc0	usertests.asm	/^     fc0:	79 35                	jns    ff7 <exectest+0x86>$/;"	l
fc2	usertests.asm	/^     fc2:	48 b8 08 88 00 00 00 	movabs $0x8808,%rax$/;"	l
fc4	ls.asm	/^     fc4:	00 00 00 $/;"	l
fc5	grep.asm	/^ fc5:	75 07                	jne    fce <malloc+0x130>$/;"	l
fc5	sh.asm	/^     fc5:	00 00 00 $/;"	l
fc7	grep.asm	/^ fc7:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
fc7	ls.asm	/^     fc7:	48 8b 00             	mov    (%rax),%rax$/;"	l
fc8	sh.asm	/^     fc8:	ff d0                	callq  *%rax$/;"	l
fc9	usertests.asm	/^     fc9:	00 00 00 $/;"	l
fca	ls.asm	/^     fca:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)$/;"	l
fca	sh.asm	/^     fca:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx$/;"	l
fcc	grep.asm	/^ fcc:	eb 18                	jmp    fe6 <malloc+0x148>$/;"	l
fcc	usertests.asm	/^     fcc:	8b 00                	mov    (%rax),%eax$/;"	l
fce	grep.asm	/^ fce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
fce	ls.asm	/^     fce:	75 23                	jne    ff3 <malloc+0x130>$/;"	l
fce	sh.asm	/^     fce:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
fce	usertests.asm	/^     fce:	48 be cc 6c 00 00 00 	movabs $0x6ccc,%rsi$/;"	l
fd	cat.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	cat.asm	/^  fd:	48 98                	cltq   $/;"	l
fd	divide.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	echo.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	forktest.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	grep.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	grep.asm	/^  fd:	00 00 00 $/;"	l
fd	init.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	kill.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	kill.asm	/^  fd:	0f b6 12             	movzbl (%rdx),%edx$/;"	l
fd	ln.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	ls.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	mkdir.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	mkdir.asm	/^  fd:	c3                   	retq   $/;"	l
fd	rm.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	rm.asm	/^  fd:	c3                   	retq   $/;"	l
fd	sh.asm	/^      fd:	48 89 c7             	mov    %rax,%rdi$/;"	l
fd	sh.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	sh.c	/^  int fd;$/;"	m	struct:redircmd	file:
fd	stressfs.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	stressfs.asm	/^  fd = open(path, O_CREATE | O_RDWR);$/;"	d
fd	stressfs.asm	/^  fd = open(path, O_RDONLY);$/;"	d
fd	stressfs.asm	/^  fd:	48 b8 fb 04 00 00 00 	movabs $0x4fb,%rax$/;"	l
fd	usertests.asm	/^        fd = open(name, O_CREATE | O_RDWR);$/;"	d
fd	usertests.asm	/^      fd = open(file, O_CREATE | O_RDWR);$/;"	d
fd	usertests.asm	/^      fd = open(fname, O_CREATE | O_RDWR);$/;"	d
fd	usertests.asm	/^      fd = open(name, 0);$/;"	d
fd	usertests.asm	/^      fd:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
fd	usertests.asm	/^    fd = open("", O_CREATE);$/;"	d
fd	usertests.asm	/^    fd = open("bigarg-ok", O_CREATE);$/;"	d
fd	usertests.asm	/^    fd = open("bigwrite", O_CREATE | O_RDWR);$/;"	d
fd	usertests.asm	/^    fd = open("xx", O_CREATE);$/;"	d
fd	usertests.asm	/^    fd = open(fname, 0);$/;"	d
fd	usertests.asm	/^    fd = open(name, O_CREATE|O_RDWR);$/;"	d
fd	usertests.asm	/^  fd = open(".", 0);$/;"	d
fd	usertests.asm	/^  fd = open(".", O_RDWR);$/;"	d
fd	usertests.asm	/^  fd = open("123456789012345\/123456789012345\/123456789012345", O_CREATE);$/;"	d
fd	usertests.asm	/^  fd = open("12345678901234\/12345678901234\/12345678901234", 0);$/;"	d
fd	usertests.asm	/^  fd = open("bd", O_CREATE);$/;"	d
fd	usertests.asm	/^  fd = open("big", O_CREATE|O_RDWR);$/;"	d
fd	usertests.asm	/^  fd = open("big", O_RDONLY);$/;"	d
fd	usertests.asm	/^  fd = open("bigarg-ok", 0);$/;"	d
fd	usertests.asm	/^  fd = open("bigfile", 0);$/;"	d
fd	usertests.asm	/^  fd = open("bigfile", O_CREATE | O_RDWR);$/;"	d
fd	usertests.asm	/^  fd = open("dd\/dd\/..\/ff", 0);$/;"	d
fd	usertests.asm	/^  fd = open("dd\/dd\/ff", O_CREATE | O_RDWR);$/;"	d
fd	usertests.asm	/^  fd = open("dd\/dd\/ffff", 0);$/;"	d
fd	usertests.asm	/^  fd = open("dd\/ff", O_CREATE | O_RDWR);$/;"	d
fd	usertests.asm	/^  fd = open("dirfile", O_CREATE);$/;"	d
fd	usertests.asm	/^  fd = open("dirfile\/xx", 0);$/;"	d
fd	usertests.asm	/^  fd = open("dirfile\/xx", O_CREATE);$/;"	d
fd	usertests.asm	/^  fd = open("doesnotexist", 0);$/;"	d
fd	usertests.asm	/^  fd = open("echo", 0);$/;"	d
fd	usertests.asm	/^  fd = open("init", O_RDONLY);$/;"	d
fd	usertests.asm	/^  fd = open("lf1", O_CREATE|O_RDWR);$/;"	d
fd	usertests.asm	/^  fd = open("lf2", 0);$/;"	d
fd	usertests.asm	/^  fd = open("sharedfd", 0);$/;"	d
fd	usertests.asm	/^  fd = open("sharedfd", O_CREATE|O_RDWR);$/;"	d
fd	usertests.asm	/^  fd = open("small", O_CREATE|O_RDWR);$/;"	d
fd	usertests.asm	/^  fd = open("small", O_RDONLY);$/;"	d
fd	usertests.asm	/^  fd = open("unlinkread", O_CREATE | O_RDWR);$/;"	d
fd	usertests.asm	/^  fd = open("unlinkread", O_RDWR);$/;"	d
fd	usertests.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	wc.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	wc.asm	/^  fd:	00 00 00 $/;"	l
fd	zombie.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	zombie.asm	/^  fd:	55                   	push   %rbp$/;"	l
fd0	kernel.asm	/^  fd0 = -1;$/;"	d
fd0	ls.asm	/^     fd0:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
fd1	usertests.asm	/^  fd1 = open("unlinkread", O_CREATE | O_RDWR);$/;"	d
fd2	grep.asm	/^ fd2:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
fd2	sh.asm	/^     fd2:	8b 55 fc             	mov    -0x4(%rbp),%edx$/;"	l
fd3	ls.asm	/^     fd3:	89 c7                	mov    %eax,%edi$/;"	l
fd5	ls.asm	/^     fd5:	48 b8 4a 0e 00 00 00 	movabs $0xe4a,%rax$/;"	l
fd5	sh.asm	/^     fd5:	48 63 d2             	movslq %edx,%rdx$/;"	l
fd5	usertests.asm	/^     fd5:	00 00 00 $/;"	l
fd6	grep.asm	/^ fd6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
fd8	sh.asm	/^     fd8:	48 89 4c d0 08       	mov    %rcx,0x8(%rax,%rdx,8)$/;"	l
fd8	usertests.asm	/^     fd8:	89 c7                	mov    %eax,%edi$/;"	l
fda	grep.asm	/^ fda:	48 8b 00             	mov    (%rax),%rax$/;"	l
fda	usertests.asm	/^     fda:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
fdalloc	sysfile.c	/^fdalloc(struct file *f)$/;"	f	file:
fdc	ls.asm	/^     fdc:	00 00 00 $/;"	l
fdd	grep.asm	/^ fdd:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
fdd	sh.asm	/^     fdd:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx$/;"	l
fdf	ls.asm	/^     fdf:	ff d0                	callq  *%rax$/;"	l
fdf	usertests.asm	/^     fdf:	48 ba c7 61 00 00 00 	movabs $0x61c7,%rdx$/;"	l
fe	echo.asm	/^  fe:	75 dc                	jne    dc <strcpy+0x19>$/;"	l
fe	mkdir.asm	/^  fe:	55                   	push   %rbp$/;"	l
fe	rm.asm	/^  fe:	55                   	push   %rbp$/;"	l
fe	zombie.asm	/^  fe:	48 89 e5             	mov    %rsp,%rbp$/;"	l
fe1	grep.asm	/^ fe1:	e9 41 ff ff ff       	jmpq   f27 <malloc+0x89>$/;"	l
fe1	ls.asm	/^     fe1:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
fe1	sh.asm	/^     fe1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
fe5	ls.asm	/^     fe5:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)$/;"	l
fe5	sh.asm	/^     fe5:	8b 4d fc             	mov    -0x4(%rbp),%ecx$/;"	l
fe6	grep.asm	/^ fe6:	c9                   	leaveq $/;"	l
fe6	usertests.asm	/^     fe6:	00 00 00 $/;"	l
fe7	grep.asm	/^ fe7:	c3                   	retq   $/;"	l
fe8	sh.asm	/^     fe8:	48 63 c9             	movslq %ecx,%rcx$/;"	l
fe9	usertests.asm	/^     fe9:	ff d2                	callq  *%rdx$/;"	l
fea	ls.asm	/^     fea:	75 07                	jne    ff3 <malloc+0x130>$/;"	l
feature	mp.h	/^  uint feature;                 \/\/ feature flags from CPUID instruction$/;"	m	struct:mpproc
feb	sh.asm	/^     feb:	48 83 c1 0a          	add    $0xa,%rcx$/;"	l
feb	usertests.asm	/^     feb:	48 b8 02 60 00 00 00 	movabs $0x6002,%rax$/;"	l
fec	ls.asm	/^     fec:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
fef	sh.asm	/^     fef:	48 89 54 c8 08       	mov    %rdx,0x8(%rax,%rcx,8)$/;"	l
fetchaddr	syscall.c	/^fetchaddr(addr_t addr, addr_t *ip)$/;"	f
fetcharg	syscall.c	/^fetcharg(int n)$/;"	f	file:
fetchint	syscall.c	/^fetchint(addr_t addr, int *ip)$/;"	f
fetchstr	syscall.c	/^fetchstr(addr_t addr, char **pp)$/;"	f
ff	cat.asm	/^  ff:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx$/;"	l
ff	init.asm	/^  ff:	48 b8 db 04 00 00 00 	movabs $0x4db,%rax$/;"	l
ff	kernel.asm	/^  ff = *f;$/;"	d
ff	ls.asm	/^      ff:	48 83 c4 28          	add    $0x28,%rsp$/;"	l
ff	mkdir.asm	/^  ff:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ff	rm.asm	/^  ff:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ff1	ls.asm	/^     ff1:	eb 18                	jmp    100b <malloc+0x148>$/;"	l
ff2	usertests.asm	/^     ff2:	00 00 00 $/;"	l
ff3	ls.asm	/^     ff3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ff4	sh.asm	/^     ff4:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)$/;"	l
ff5	usertests.asm	/^     ff5:	ff d0                	callq  *%rax$/;"	l
ff7	ls.asm	/^     ff7:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ff7	usertests.asm	/^     ff7:	90                   	nop$/;"	l
ff8	sh.asm	/^     ff8:	83 7d fc 09          	cmpl   $0x9,-0x4(%rbp)$/;"	l
ff8	usertests.asm	/^     ff8:	5d                   	pop    %rbp$/;"	l
ff9	usertests.asm	/^     ff9:	c3                   	retq   $/;"	l
ffa	usertests.asm	/^     ffa:	55                   	push   %rbp$/;"	l
ffb	ls.asm	/^     ffb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffb	usertests.asm	/^     ffb:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffc	sh.asm	/^     ffc:	7e 16                	jle    1014 <parseexec+0x12f>$/;"	l
ffe	sh.asm	/^     ffe:	48 bf 41 1e 00 00 00 	movabs $0x1e41,%rdi$/;"	l
ffe	usertests.asm	/^     ffe:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
fff	ls.asm	/^     fff:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff800000100000	kernel.asm	/^ffff800000100000 <begin>:$/;"	l
ffff800000100000	kernel.asm	/^ffff800000100000:	02 b0 ad 1b 00 00    	add    0x1bad(%rax),%dh$/;"	l
ffff800000100006	kernel.asm	/^ffff800000100006:	01 00                	add    %eax,(%rax)$/;"	l
ffff800000100008	kernel.asm	/^ffff800000100008:	fe 4f 51             	decb   0x51(%rdi)$/;"	l
ffff80000010000b	kernel.asm	/^ffff80000010000b:	e4 00                	in     $0x0,%al$/;"	l
ffff80000010000d	kernel.asm	/^ffff80000010000d:	00 10                	add    %dl,(%rax)$/;"	l
ffff80000010000f	kernel.asm	/^ffff80000010000f:	00 00                	add    %al,(%rax)$/;"	l
ffff800000100011	kernel.asm	/^ffff800000100011:	00 10                	add    %dl,(%rax)$/;"	l
ffff800000100013	kernel.asm	/^ffff800000100013:	00 00                	add    %al,(%rax)$/;"	l
ffff800000100015	kernel.asm	/^ffff800000100015:	e0 10                	loopne ffff800000100027 <mboot_entry+0x7>$/;"	l
ffff800000100017	kernel.asm	/^ffff800000100017:	00 00                	add    %al,(%rax)$/;"	l
ffff800000100019	kernel.asm	/^ffff800000100019:	c0 11 00             	rclb   $0x0,(%rcx)$/;"	l
ffff80000010001c	kernel.asm	/^ffff80000010001c:	20 00                	and    %al,(%rax)$/;"	l
ffff80000010001e	kernel.asm	/^ffff80000010001e:	10 00                	adc    %al,(%rax)$/;"	l
ffff800000100020	kernel.asm	/^ffff800000100020 <mboot_entry>:$/;"	l
ffff800000100020	kernel.asm	/^ffff800000100020:	31 c0                	xor    %eax,%eax$/;"	l
ffff800000100022	kernel.asm	/^ffff800000100022:	bf 00 10 00 00       	mov    $0x1000,%edi$/;"	l
ffff800000100027	kernel.asm	/^ffff800000100027:	b9 00 20 00 00       	mov    $0x2000,%ecx$/;"	l
ffff80000010002c	kernel.asm	/^ffff80000010002c:	f3 aa                	rep stos %al,%es:(%rdi)$/;"	l
ffff80000010002e	kernel.asm	/^ffff80000010002e:	b8 03 20 00 00       	mov    $0x2003,%eax$/;"	l
ffff800000100033	kernel.asm	/^ffff800000100033:	a3 00 10 00 00 a3 00 	movabs %eax,0x1800a300001000$/;"	l
ffff80000010003a	kernel.asm	/^ffff80000010003a:	18 00 $/;"	l
ffff80000010003c	kernel.asm	/^ffff80000010003c:	00 b8 83 00 00 00    	add    %bh,0x83(%rax)$/;"	l
ffff800000100042	kernel.asm	/^ffff800000100042:	a3                   	.byte 0xa3$/;"	l
ffff800000100043	kernel.asm	/^ffff800000100043:	00 20                	add    %ah,(%rax)$/;"	l
ffff800000100045	kernel.asm	/^ffff800000100045:	00 00                	add    %al,(%rax)$/;"	l
ffff800000100047	kernel.asm	/^ffff800000100047:	31 db                	xor    %ebx,%ebx$/;"	l
ffff800000100049	kernel.asm	/^ffff800000100049 <entry32mp>:$/;"	l
ffff800000100049	kernel.asm	/^ffff800000100049:	b8 00 10 00 00       	mov    $0x1000,%eax$/;"	l
ffff80000010004e	kernel.asm	/^ffff80000010004e:	0f 22 d8             	mov    %rax,%cr3$/;"	l
ffff800000100051	kernel.asm	/^ffff800000100051:	0f 01 15 90 00 10 00 	lgdt   0x100090(%rip)        # ffff8000002000e8 <end+0xe40e8>$/;"	l
ffff800000100058	kernel.asm	/^ffff800000100058:	0f 20 e0             	mov    %cr4,%rax$/;"	l
ffff80000010005b	kernel.asm	/^ffff80000010005b:	0f ba e8 05          	bts    $0x5,%eax$/;"	l
ffff80000010005f	kernel.asm	/^ffff80000010005f:	0f 22 e0             	mov    %rax,%cr4$/;"	l
ffff800000100062	kernel.asm	/^ffff800000100062:	b9 80 00 00 c0       	mov    $0xc0000080,%ecx$/;"	l
ffff800000100067	kernel.asm	/^ffff800000100067:	0f 32                	rdmsr  $/;"	l
ffff800000100069	kernel.asm	/^ffff800000100069:	0f ba e8 00          	bts    $0x0,%eax$/;"	l
ffff80000010006d	kernel.asm	/^ffff80000010006d:	0f ba e8 08          	bts    $0x8,%eax$/;"	l
ffff800000100071	kernel.asm	/^ffff800000100071:	0f 30                	wrmsr  $/;"	l
ffff800000100073	kernel.asm	/^ffff800000100073:	0f 20 c0             	mov    %cr0,%rax$/;"	l
ffff800000100076	kernel.asm	/^ffff800000100076:	0d 02 00 01 80       	or     $0x80010002,%eax$/;"	l
ffff80000010007b	kernel.asm	/^ffff80000010007b:	0f 22 c0             	mov    %rax,%cr0$/;"	l
ffff80000010007e	kernel.asm	/^ffff80000010007e:	ea                   	(bad)  $/;"	l
ffff80000010007f	kernel.asm	/^ffff80000010007f:	c0 00 10             	rolb   $0x10,(%rax)$/;"	l
ffff800000100082	kernel.asm	/^ffff800000100082:	00 08                	add    %cl,(%rax)$/;"	l
ffff800000100084	kernel.asm	/^ffff800000100084:	00 90 66 2e 0f 1f    	add    %dl,0x1f0f2e66(%rax)$/;"	l
ffff80000010008a	kernel.asm	/^ffff80000010008a:	84 00                	test   %al,(%rax)$/;"	l
ffff80000010008c	kernel.asm	/^ffff80000010008c:	00 00                	add    %al,(%rax)$/;"	l
ffff800000100090	kernel.asm	/^ffff800000100090 <gdtr64>:$/;"	l
ffff800000100090	kernel.asm	/^ffff800000100090:	17                   	(bad)  $/;"	l
ffff800000100091	kernel.asm	/^ffff800000100091:	00 a0 00 10 00 00    	add    %ah,0x1000(%rax)$/;"	l
ffff800000100097	kernel.asm	/^ffff800000100097:	00 00                	add    %al,(%rax)$/;"	l
ffff800000100099	kernel.asm	/^ffff800000100099:	00 66 0f             	add    %ah,0xf(%rsi)$/;"	l
ffff80000010009c	kernel.asm	/^ffff80000010009c:	1f                   	(bad)  $/;"	l
ffff80000010009d	kernel.asm	/^ffff80000010009d:	44 00 00             	add    %r8b,(%rax)$/;"	l
ffff8000001000a0	kernel.asm	/^ffff8000001000a0 <gdt64_begin>:$/;"	l
ffff8000001000ac	kernel.asm	/^ffff8000001000ac:	00 98 20 00 00 00    	add    %bl,0x20(%rax)$/;"	l
ffff8000001000b2	kernel.asm	/^ffff8000001000b2:	00 00                	add    %al,(%rax)$/;"	l
ffff8000001000b4	kernel.asm	/^ffff8000001000b4:	00                   	.byte 0x0$/;"	l
ffff8000001000b5	kernel.asm	/^ffff8000001000b5:	90                   	nop$/;"	l
ffff8000001000b8	kernel.asm	/^ffff8000001000b8 <gdt64_end>:$/;"	l
ffff8000001000b8	kernel.asm	/^ffff8000001000b8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)$/;"	l
ffff8000001000bf	kernel.asm	/^ffff8000001000bf:	00 $/;"	l
ffff8000001000c0	kernel.asm	/^ffff8000001000c0 <entry64low>:$/;"	l
ffff8000001000c0	kernel.asm	/^ffff8000001000c0:	48 b8 cc 00 10 00 00 	movabs $0xffff8000001000cc,%rax$/;"	l
ffff8000001000c7	kernel.asm	/^ffff8000001000c7:	80 ff ff $/;"	l
ffff8000001000ca	kernel.asm	/^ffff8000001000ca:	ff e0                	jmpq   *%rax$/;"	l
ffff8000001000cc	kernel.asm	/^ffff8000001000cc <_start>:$/;"	l
ffff8000001000cc	kernel.asm	/^ffff8000001000cc:	48 31 c0             	xor    %rax,%rax$/;"	l
ffff8000001000cf	kernel.asm	/^ffff8000001000cf:	8e d0                	mov    %eax,%ss$/;"	l
ffff8000001000d1	kernel.asm	/^ffff8000001000d1:	8e d8                	mov    %eax,%ds$/;"	l
ffff8000001000d3	kernel.asm	/^ffff8000001000d3:	8e c0                	mov    %eax,%es$/;"	l
ffff8000001000d5	kernel.asm	/^ffff8000001000d5:	8e e0                	mov    %eax,%fs$/;"	l
ffff8000001000d7	kernel.asm	/^ffff8000001000d7:	8e e8                	mov    %eax,%gs$/;"	l
ffff8000001000d9	kernel.asm	/^ffff8000001000d9:	85 db                	test   %ebx,%ebx$/;"	l
ffff8000001000db	kernel.asm	/^ffff8000001000db:	75 14                	jne    ffff8000001000f1 <entry64mp>$/;"	l
ffff8000001000dd	kernel.asm	/^ffff8000001000dd:	48 b8 00 00 01 00 00 	movabs $0xffff800000010000,%rax$/;"	l
ffff8000001000e4	kernel.asm	/^ffff8000001000e4:	80 ff ff $/;"	l
ffff8000001000e7	kernel.asm	/^ffff8000001000e7:	48 89 c4             	mov    %rax,%rsp$/;"	l
ffff8000001000ea	kernel.asm	/^ffff8000001000ea:	e9 ad 51 00 00       	jmpq   ffff80000010529c <main>$/;"	l
ffff8000001000ef	kernel.asm	/^ffff8000001000ef <__deadloop>:$/;"	l
ffff8000001000ef	kernel.asm	/^ffff8000001000ef:	eb fe                	jmp    ffff8000001000ef <__deadloop>$/;"	l
ffff8000001000f1	kernel.asm	/^ffff8000001000f1 <entry64mp>:$/;"	l
ffff8000001000f1	kernel.asm	/^ffff8000001000f1:	48 c7 c0 00 70 00 00 	mov    $0x7000,%rax$/;"	l
ffff8000001000f8	kernel.asm	/^ffff8000001000f8:	48 8b 60 f0          	mov    -0x10(%rax),%rsp$/;"	l
ffff8000001000fc	kernel.asm	/^ffff8000001000fc:	e9 c8 52 00 00       	jmpq   ffff8000001053c9 <mpenter>$/;"	l
ffff800000100101	kernel.asm	/^ffff800000100101 <wrmsr>:$/;"	l
ffff800000100101	kernel.asm	/^ffff800000100101:	48 89 f9             	mov    %rdi,%rcx$/;"	l
ffff800000100104	kernel.asm	/^ffff800000100104:	48 89 f0             	mov    %rsi,%rax$/;"	l
ffff800000100107	kernel.asm	/^ffff800000100107:	48 c1 ee 20          	shr    $0x20,%rsi$/;"	l
ffff80000010010b	kernel.asm	/^ffff80000010010b:	48 89 f2             	mov    %rsi,%rdx$/;"	l
ffff80000010010e	kernel.asm	/^ffff80000010010e:	0f 30                	wrmsr  $/;"	l
ffff800000100110	kernel.asm	/^ffff800000100110:	c3                   	retq   $/;"	l
ffff800000100111	kernel.asm	/^ffff800000100111 <ignore_sysret>:$/;"	l
ffff800000100111	kernel.asm	/^ffff800000100111:	48 c7 c0 da ff ff ff 	mov    $0xffffffffffffffda,%rax$/;"	l
ffff800000100118	kernel.asm	/^ffff800000100118:	0f 07                	sysret $/;"	l
ffff80000010011a	kernel.asm	/^ffff80000010011a <syscall_entry>:$/;"	l
ffff80000010011a	kernel.asm	/^ffff80000010011a:	48 89 44 24 f8       	mov    %rax,-0x8(%rsp)$/;"	l
ffff80000010011f	kernel.asm	/^ffff80000010011f:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000100126	kernel.asm	/^ffff800000100126:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff80000010012a	kernel.asm	/^ffff80000010012a:	48 8b 40 10          	mov    0x10(%rax),%rax$/;"	l
ffff80000010012e	kernel.asm	/^ffff80000010012e:	48 05 00 10 00 00    	add    $0x1000,%rax$/;"	l
ffff800000100134	kernel.asm	/^ffff800000100134:	48 83 e8 10          	sub    $0x10,%rax$/;"	l
ffff800000100138	kernel.asm	/^ffff800000100138:	48 89 20             	mov    %rsp,(%rax)$/;"	l
ffff80000010013b	kernel.asm	/^ffff80000010013b:	48 89 c4             	mov    %rax,%rsp$/;"	l
ffff80000010013e	kernel.asm	/^ffff80000010013e:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff800000100141	kernel.asm	/^ffff800000100141:	48 8b 40 f8          	mov    -0x8(%rax),%rax$/;"	l
ffff800000100145	kernel.asm	/^ffff800000100145:	41 53                	push   %r11$/;"	l
ffff800000100147	kernel.asm	/^ffff800000100147:	6a 2b                	pushq  $0x2b$/;"	l
ffff800000100149	kernel.asm	/^ffff800000100149:	51                   	push   %rcx$/;"	l
ffff80000010014a	kernel.asm	/^ffff80000010014a:	6a 00                	pushq  $0x0$/;"	l
ffff80000010014c	kernel.asm	/^ffff80000010014c:	6a 40                	pushq  $0x40$/;"	l
ffff80000010014e	kernel.asm	/^ffff80000010014e:	e9 82 90 00 00       	jmpq   ffff8000001091d5 <syscall_trap>$/;"	l
ffff800000100153	kernel.asm	/^ffff800000100153 <binit>:$/;"	l
ffff800000100153	kernel.asm	/^ffff800000100153:	55                   	push   %rbp$/;"	l
ffff800000100154	kernel.asm	/^ffff800000100154:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000100157	kernel.asm	/^ffff800000100157:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff80000010015b	kernel.asm	/^ffff80000010015b:	48 be 40 ba 10 00 00 	movabs $0xffff80000010ba40,%rsi$/;"	l
ffff800000100162	kernel.asm	/^ffff800000100162:	80 ff ff $/;"	l
ffff800000100165	kernel.asm	/^ffff800000100165:	48 bf 00 e0 10 00 00 	movabs $0xffff80000010e000,%rdi$/;"	l
ffff80000010016c	kernel.asm	/^ffff80000010016c:	80 ff ff $/;"	l
ffff80000010016f	kernel.asm	/^ffff80000010016f:	48 b8 ca 71 10 00 00 	movabs $0xffff8000001071ca,%rax$/;"	l
ffff800000100176	kernel.asm	/^ffff800000100176:	80 ff ff $/;"	l
ffff800000100179	kernel.asm	/^ffff800000100179:	ff d0                	callq  *%rax$/;"	l
ffff80000010017b	kernel.asm	/^ffff80000010017b:	48 b8 00 e0 10 00 00 	movabs $0xffff80000010e000,%rax$/;"	l
ffff800000100182	kernel.asm	/^ffff800000100182:	80 ff ff $/;"	l
ffff800000100185	kernel.asm	/^ffff800000100185:	48 b9 08 31 11 00 00 	movabs $0xffff800000113108,%rcx$/;"	l
ffff80000010018c	kernel.asm	/^ffff80000010018c:	80 ff ff $/;"	l
ffff80000010018f	kernel.asm	/^ffff80000010018f:	48 89 88 a0 51 00 00 	mov    %rcx,0x51a0(%rax)$/;"	l
ffff800000100196	kernel.asm	/^ffff800000100196:	48 b8 00 e0 10 00 00 	movabs $0xffff80000010e000,%rax$/;"	l
ffff80000010019d	kernel.asm	/^ffff80000010019d:	80 ff ff $/;"	l
ffff8000001001a0	kernel.asm	/^ffff8000001001a0:	48 b9 08 31 11 00 00 	movabs $0xffff800000113108,%rcx$/;"	l
ffff8000001001a7	kernel.asm	/^ffff8000001001a7:	80 ff ff $/;"	l
ffff8000001001aa	kernel.asm	/^ffff8000001001aa:	48 89 88 a8 51 00 00 	mov    %rcx,0x51a8(%rax)$/;"	l
ffff8000001001b1	kernel.asm	/^ffff8000001001b1:	48 b8 68 e0 10 00 00 	movabs $0xffff80000010e068,%rax$/;"	l
ffff8000001001b8	kernel.asm	/^ffff8000001001b8:	80 ff ff $/;"	l
ffff8000001001bb	kernel.asm	/^ffff8000001001bb:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff8000001001bf	kernel.asm	/^ffff8000001001bf:	e9 8b 00 00 00       	jmpq   ffff80000010024f <binit+0xfc>$/;"	l
ffff8000001001c4	kernel.asm	/^ffff8000001001c4:	48 b8 00 e0 10 00 00 	movabs $0xffff80000010e000,%rax$/;"	l
ffff8000001001cb	kernel.asm	/^ffff8000001001cb:	80 ff ff $/;"	l
ffff8000001001ce	kernel.asm	/^ffff8000001001ce:	48 8b 90 a8 51 00 00 	mov    0x51a8(%rax),%rdx$/;"	l
ffff8000001001d5	kernel.asm	/^ffff8000001001d5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001001d9	kernel.asm	/^ffff8000001001d9:	48 89 90 a0 00 00 00 	mov    %rdx,0xa0(%rax)$/;"	l
ffff8000001001e0	kernel.asm	/^ffff8000001001e0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001001e4	kernel.asm	/^ffff8000001001e4:	48 be 08 31 11 00 00 	movabs $0xffff800000113108,%rsi$/;"	l
ffff8000001001eb	kernel.asm	/^ffff8000001001eb:	80 ff ff $/;"	l
ffff8000001001ee	kernel.asm	/^ffff8000001001ee:	48 89 b0 98 00 00 00 	mov    %rsi,0x98(%rax)$/;"	l
ffff8000001001f5	kernel.asm	/^ffff8000001001f5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001001f9	kernel.asm	/^ffff8000001001f9:	48 83 c0 10          	add    $0x10,%rax$/;"	l
ffff8000001001fd	kernel.asm	/^ffff8000001001fd:	48 be 47 ba 10 00 00 	movabs $0xffff80000010ba47,%rsi$/;"	l
ffff800000100204	kernel.asm	/^ffff800000100204:	80 ff ff $/;"	l
ffff800000100207	kernel.asm	/^ffff800000100207:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010020a	kernel.asm	/^ffff80000010020a:	48 b8 f7 6f 10 00 00 	movabs $0xffff800000106ff7,%rax$/;"	l
ffff800000100211	kernel.asm	/^ffff800000100211:	80 ff ff $/;"	l
ffff800000100214	kernel.asm	/^ffff800000100214:	ff d0                	callq  *%rax$/;"	l
ffff800000100216	kernel.asm	/^ffff800000100216:	48 b8 00 e0 10 00 00 	movabs $0xffff80000010e000,%rax$/;"	l
ffff80000010021d	kernel.asm	/^ffff80000010021d:	80 ff ff $/;"	l
ffff800000100220	kernel.asm	/^ffff800000100220:	48 8b 80 a8 51 00 00 	mov    0x51a8(%rax),%rax$/;"	l
ffff800000100227	kernel.asm	/^ffff800000100227:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx$/;"	l
ffff80000010022b	kernel.asm	/^ffff80000010022b:	48 89 90 98 00 00 00 	mov    %rdx,0x98(%rax)$/;"	l
ffff800000100232	kernel.asm	/^ffff800000100232:	48 b8 00 e0 10 00 00 	movabs $0xffff80000010e000,%rax$/;"	l
ffff800000100239	kernel.asm	/^ffff800000100239:	80 ff ff $/;"	l
ffff80000010023c	kernel.asm	/^ffff80000010023c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx$/;"	l
ffff800000100240	kernel.asm	/^ffff800000100240:	48 89 90 a8 51 00 00 	mov    %rdx,0x51a8(%rax)$/;"	l
ffff800000100247	kernel.asm	/^ffff800000100247:	48 81 45 f8 b0 02 00 	addq   $0x2b0,-0x8(%rbp)$/;"	l
ffff80000010024e	kernel.asm	/^ffff80000010024e:	00 $/;"	l
ffff80000010024f	kernel.asm	/^ffff80000010024f:	48 b8 08 31 11 00 00 	movabs $0xffff800000113108,%rax$/;"	l
ffff800000100256	kernel.asm	/^ffff800000100256:	80 ff ff $/;"	l
ffff800000100259	kernel.asm	/^ffff800000100259:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)$/;"	l
ffff80000010025d	kernel.asm	/^ffff80000010025d:	0f 82 61 ff ff ff    	jb     ffff8000001001c4 <binit+0x71>$/;"	l
ffff800000100263	kernel.asm	/^ffff800000100263:	90                   	nop$/;"	l
ffff800000100264	kernel.asm	/^ffff800000100264:	c9                   	leaveq $/;"	l
ffff800000100265	kernel.asm	/^ffff800000100265:	c3                   	retq   $/;"	l
ffff800000100266	kernel.asm	/^ffff800000100266 <bget>:$/;"	l
ffff800000100266	kernel.asm	/^ffff800000100266:	55                   	push   %rbp$/;"	l
ffff800000100267	kernel.asm	/^ffff800000100267:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010026a	kernel.asm	/^ffff80000010026a:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ffff80000010026e	kernel.asm	/^ffff80000010026e:	89 7d ec             	mov    %edi,-0x14(%rbp)$/;"	l
ffff800000100271	kernel.asm	/^ffff800000100271:	89 75 e8             	mov    %esi,-0x18(%rbp)$/;"	l
ffff800000100274	kernel.asm	/^ffff800000100274:	48 bf 00 e0 10 00 00 	movabs $0xffff80000010e000,%rdi$/;"	l
ffff80000010027b	kernel.asm	/^ffff80000010027b:	80 ff ff $/;"	l
ffff80000010027e	kernel.asm	/^ffff80000010027e:	48 b8 ff 71 10 00 00 	movabs $0xffff8000001071ff,%rax$/;"	l
ffff800000100285	kernel.asm	/^ffff800000100285:	80 ff ff $/;"	l
ffff800000100288	kernel.asm	/^ffff800000100288:	ff d0                	callq  *%rax$/;"	l
ffff80000010028a	kernel.asm	/^ffff80000010028a:	48 b8 00 e0 10 00 00 	movabs $0xffff80000010e000,%rax$/;"	l
ffff800000100291	kernel.asm	/^ffff800000100291:	80 ff ff $/;"	l
ffff800000100294	kernel.asm	/^ffff800000100294:	48 8b 80 a8 51 00 00 	mov    0x51a8(%rax),%rax$/;"	l
ffff80000010029b	kernel.asm	/^ffff80000010029b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff80000010029f	kernel.asm	/^ffff80000010029f:	eb 74                	jmp    ffff800000100315 <bget+0xaf>$/;"	l
ffff8000001002a1	kernel.asm	/^ffff8000001002a1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001002a5	kernel.asm	/^ffff8000001002a5:	8b 40 04             	mov    0x4(%rax),%eax$/;"	l
ffff8000001002a8	kernel.asm	/^ffff8000001002a8:	3b 45 ec             	cmp    -0x14(%rbp),%eax$/;"	l
ffff8000001002ab	kernel.asm	/^ffff8000001002ab:	75 59                	jne    ffff800000100306 <bget+0xa0>$/;"	l
ffff8000001002ad	kernel.asm	/^ffff8000001002ad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001002b1	kernel.asm	/^ffff8000001002b1:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
ffff8000001002b4	kernel.asm	/^ffff8000001002b4:	3b 45 e8             	cmp    -0x18(%rbp),%eax$/;"	l
ffff8000001002b7	kernel.asm	/^ffff8000001002b7:	75 4d                	jne    ffff800000100306 <bget+0xa0>$/;"	l
ffff8000001002b9	kernel.asm	/^ffff8000001002b9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001002bd	kernel.asm	/^ffff8000001002bd:	8b 80 90 00 00 00    	mov    0x90(%rax),%eax$/;"	l
ffff8000001002c3	kernel.asm	/^ffff8000001002c3:	8d 50 01             	lea    0x1(%rax),%edx$/;"	l
ffff8000001002c6	kernel.asm	/^ffff8000001002c6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001002ca	kernel.asm	/^ffff8000001002ca:	89 90 90 00 00 00    	mov    %edx,0x90(%rax)$/;"	l
ffff8000001002d0	kernel.asm	/^ffff8000001002d0:	48 bf 00 e0 10 00 00 	movabs $0xffff80000010e000,%rdi$/;"	l
ffff8000001002d7	kernel.asm	/^ffff8000001002d7:	80 ff ff $/;"	l
ffff8000001002da	kernel.asm	/^ffff8000001002da:	48 b8 98 72 10 00 00 	movabs $0xffff800000107298,%rax$/;"	l
ffff8000001002e1	kernel.asm	/^ffff8000001002e1:	80 ff ff $/;"	l
ffff8000001002e4	kernel.asm	/^ffff8000001002e4:	ff d0                	callq  *%rax$/;"	l
ffff8000001002e6	kernel.asm	/^ffff8000001002e6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001002ea	kernel.asm	/^ffff8000001002ea:	48 83 c0 10          	add    $0x10,%rax$/;"	l
ffff8000001002ee	kernel.asm	/^ffff8000001002ee:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001002f1	kernel.asm	/^ffff8000001002f1:	48 b8 4c 70 10 00 00 	movabs $0xffff80000010704c,%rax$/;"	l
ffff8000001002f8	kernel.asm	/^ffff8000001002f8:	80 ff ff $/;"	l
ffff8000001002fb	kernel.asm	/^ffff8000001002fb:	ff d0                	callq  *%rax$/;"	l
ffff8000001002fd	kernel.asm	/^ffff8000001002fd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000100301	kernel.asm	/^ffff800000100301:	e9 f0 00 00 00       	jmpq   ffff8000001003f6 <bget+0x190>$/;"	l
ffff800000100306	kernel.asm	/^ffff800000100306:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010030a	kernel.asm	/^ffff80000010030a:	48 8b 80 a0 00 00 00 	mov    0xa0(%rax),%rax$/;"	l
ffff800000100311	kernel.asm	/^ffff800000100311:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff800000100315	kernel.asm	/^ffff800000100315:	48 b8 08 31 11 00 00 	movabs $0xffff800000113108,%rax$/;"	l
ffff80000010031c	kernel.asm	/^ffff80000010031c:	80 ff ff $/;"	l
ffff80000010031f	kernel.asm	/^ffff80000010031f:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)$/;"	l
ffff800000100323	kernel.asm	/^ffff800000100323:	0f 85 78 ff ff ff    	jne    ffff8000001002a1 <bget+0x3b>$/;"	l
ffff800000100329	kernel.asm	/^ffff800000100329:	48 b8 00 e0 10 00 00 	movabs $0xffff80000010e000,%rax$/;"	l
ffff800000100330	kernel.asm	/^ffff800000100330:	80 ff ff $/;"	l
ffff800000100333	kernel.asm	/^ffff800000100333:	48 8b 80 a0 51 00 00 	mov    0x51a0(%rax),%rax$/;"	l
ffff80000010033a	kernel.asm	/^ffff80000010033a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff80000010033e	kernel.asm	/^ffff80000010033e:	e9 89 00 00 00       	jmpq   ffff8000001003cc <bget+0x166>$/;"	l
ffff800000100343	kernel.asm	/^ffff800000100343:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000100347	kernel.asm	/^ffff800000100347:	8b 80 90 00 00 00    	mov    0x90(%rax),%eax$/;"	l
ffff80000010034d	kernel.asm	/^ffff80000010034d:	85 c0                	test   %eax,%eax$/;"	l
ffff80000010034f	kernel.asm	/^ffff80000010034f:	75 6c                	jne    ffff8000001003bd <bget+0x157>$/;"	l
ffff800000100351	kernel.asm	/^ffff800000100351:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000100355	kernel.asm	/^ffff800000100355:	8b 00                	mov    (%rax),%eax$/;"	l
ffff800000100357	kernel.asm	/^ffff800000100357:	83 e0 04             	and    $0x4,%eax$/;"	l
ffff80000010035a	kernel.asm	/^ffff80000010035a:	85 c0                	test   %eax,%eax$/;"	l
ffff80000010035c	kernel.asm	/^ffff80000010035c:	75 5f                	jne    ffff8000001003bd <bget+0x157>$/;"	l
ffff80000010035e	kernel.asm	/^ffff80000010035e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000100362	kernel.asm	/^ffff800000100362:	8b 55 ec             	mov    -0x14(%rbp),%edx$/;"	l
ffff800000100365	kernel.asm	/^ffff800000100365:	89 50 04             	mov    %edx,0x4(%rax)$/;"	l
ffff800000100368	kernel.asm	/^ffff800000100368:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010036c	kernel.asm	/^ffff80000010036c:	8b 55 e8             	mov    -0x18(%rbp),%edx$/;"	l
ffff80000010036f	kernel.asm	/^ffff80000010036f:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
ffff800000100372	kernel.asm	/^ffff800000100372:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000100376	kernel.asm	/^ffff800000100376:	c7 00 00 00 00 00    	movl   $0x0,(%rax)$/;"	l
ffff80000010037c	kernel.asm	/^ffff80000010037c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000100380	kernel.asm	/^ffff800000100380:	c7 80 90 00 00 00 01 	movl   $0x1,0x90(%rax)$/;"	l
ffff800000100387	kernel.asm	/^ffff800000100387:	00 00 00 $/;"	l
ffff80000010038a	kernel.asm	/^ffff80000010038a:	48 bf 00 e0 10 00 00 	movabs $0xffff80000010e000,%rdi$/;"	l
ffff800000100391	kernel.asm	/^ffff800000100391:	80 ff ff $/;"	l
ffff800000100394	kernel.asm	/^ffff800000100394:	48 b8 98 72 10 00 00 	movabs $0xffff800000107298,%rax$/;"	l
ffff80000010039b	kernel.asm	/^ffff80000010039b:	80 ff ff $/;"	l
ffff80000010039e	kernel.asm	/^ffff80000010039e:	ff d0                	callq  *%rax$/;"	l
ffff8000001003a0	kernel.asm	/^ffff8000001003a0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001003a4	kernel.asm	/^ffff8000001003a4:	48 83 c0 10          	add    $0x10,%rax$/;"	l
ffff8000001003a8	kernel.asm	/^ffff8000001003a8:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001003ab	kernel.asm	/^ffff8000001003ab:	48 b8 4c 70 10 00 00 	movabs $0xffff80000010704c,%rax$/;"	l
ffff8000001003b2	kernel.asm	/^ffff8000001003b2:	80 ff ff $/;"	l
ffff8000001003b5	kernel.asm	/^ffff8000001003b5:	ff d0                	callq  *%rax$/;"	l
ffff8000001003b7	kernel.asm	/^ffff8000001003b7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001003bb	kernel.asm	/^ffff8000001003bb:	eb 39                	jmp    ffff8000001003f6 <bget+0x190>$/;"	l
ffff8000001003bd	kernel.asm	/^ffff8000001003bd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001003c1	kernel.asm	/^ffff8000001003c1:	48 8b 80 98 00 00 00 	mov    0x98(%rax),%rax$/;"	l
ffff8000001003c8	kernel.asm	/^ffff8000001003c8:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff8000001003cc	kernel.asm	/^ffff8000001003cc:	48 b8 08 31 11 00 00 	movabs $0xffff800000113108,%rax$/;"	l
ffff8000001003d3	kernel.asm	/^ffff8000001003d3:	80 ff ff $/;"	l
ffff8000001003d6	kernel.asm	/^ffff8000001003d6:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)$/;"	l
ffff8000001003da	kernel.asm	/^ffff8000001003da:	0f 85 63 ff ff ff    	jne    ffff800000100343 <bget+0xdd>$/;"	l
ffff8000001003e0	kernel.asm	/^ffff8000001003e0:	48 bf 4e ba 10 00 00 	movabs $0xffff80000010ba4e,%rdi$/;"	l
ffff8000001003e7	kernel.asm	/^ffff8000001003e7:	80 ff ff $/;"	l
ffff8000001003ea	kernel.asm	/^ffff8000001003ea:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff8000001003f1	kernel.asm	/^ffff8000001003f1:	80 ff ff $/;"	l
ffff8000001003f4	kernel.asm	/^ffff8000001003f4:	ff d0                	callq  *%rax$/;"	l
ffff8000001003f6	kernel.asm	/^ffff8000001003f6:	c9                   	leaveq $/;"	l
ffff8000001003f7	kernel.asm	/^ffff8000001003f7:	c3                   	retq   $/;"	l
ffff8000001003f8	kernel.asm	/^ffff8000001003f8 <bread>:$/;"	l
ffff8000001003f8	kernel.asm	/^ffff8000001003f8:	55                   	push   %rbp$/;"	l
ffff8000001003f9	kernel.asm	/^ffff8000001003f9:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff8000001003fc	kernel.asm	/^ffff8000001003fc:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ffff800000100400	kernel.asm	/^ffff800000100400:	89 7d ec             	mov    %edi,-0x14(%rbp)$/;"	l
ffff800000100403	kernel.asm	/^ffff800000100403:	89 75 e8             	mov    %esi,-0x18(%rbp)$/;"	l
ffff800000100406	kernel.asm	/^ffff800000100406:	8b 55 e8             	mov    -0x18(%rbp),%edx$/;"	l
ffff800000100409	kernel.asm	/^ffff800000100409:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
ffff80000010040c	kernel.asm	/^ffff80000010040c:	89 d6                	mov    %edx,%esi$/;"	l
ffff80000010040e	kernel.asm	/^ffff80000010040e:	89 c7                	mov    %eax,%edi$/;"	l
ffff800000100410	kernel.asm	/^ffff800000100410:	48 b8 66 02 10 00 00 	movabs $0xffff800000100266,%rax$/;"	l
ffff800000100417	kernel.asm	/^ffff800000100417:	80 ff ff $/;"	l
ffff80000010041a	kernel.asm	/^ffff80000010041a:	ff d0                	callq  *%rax$/;"	l
ffff80000010041c	kernel.asm	/^ffff80000010041c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff800000100420	kernel.asm	/^ffff800000100420:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000100424	kernel.asm	/^ffff800000100424:	8b 00                	mov    (%rax),%eax$/;"	l
ffff800000100426	kernel.asm	/^ffff800000100426:	83 e0 02             	and    $0x2,%eax$/;"	l
ffff800000100429	kernel.asm	/^ffff800000100429:	85 c0                	test   %eax,%eax$/;"	l
ffff80000010042b	kernel.asm	/^ffff80000010042b:	75 13                	jne    ffff800000100440 <bread+0x48>$/;"	l
ffff80000010042d	kernel.asm	/^ffff80000010042d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000100431	kernel.asm	/^ffff800000100431:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000100434	kernel.asm	/^ffff800000100434:	48 b8 c8 3b 10 00 00 	movabs $0xffff800000103bc8,%rax$/;"	l
ffff80000010043b	kernel.asm	/^ffff80000010043b:	80 ff ff $/;"	l
ffff80000010043e	kernel.asm	/^ffff80000010043e:	ff d0                	callq  *%rax$/;"	l
ffff800000100440	kernel.asm	/^ffff800000100440:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000100444	kernel.asm	/^ffff800000100444:	c9                   	leaveq $/;"	l
ffff800000100445	kernel.asm	/^ffff800000100445:	c3                   	retq   $/;"	l
ffff800000100446	kernel.asm	/^ffff800000100446 <bwrite>:$/;"	l
ffff800000100446	kernel.asm	/^ffff800000100446:	55                   	push   %rbp$/;"	l
ffff800000100447	kernel.asm	/^ffff800000100447:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010044a	kernel.asm	/^ffff80000010044a:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff80000010044e	kernel.asm	/^ffff80000010044e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)$/;"	l
ffff800000100452	kernel.asm	/^ffff800000100452:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000100456	kernel.asm	/^ffff800000100456:	48 83 c0 10          	add    $0x10,%rax$/;"	l
ffff80000010045a	kernel.asm	/^ffff80000010045a:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010045d	kernel.asm	/^ffff80000010045d:	48 b8 37 71 10 00 00 	movabs $0xffff800000107137,%rax$/;"	l
ffff800000100464	kernel.asm	/^ffff800000100464:	80 ff ff $/;"	l
ffff800000100467	kernel.asm	/^ffff800000100467:	ff d0                	callq  *%rax$/;"	l
ffff800000100469	kernel.asm	/^ffff800000100469:	85 c0                	test   %eax,%eax$/;"	l
ffff80000010046b	kernel.asm	/^ffff80000010046b:	75 16                	jne    ffff800000100483 <bwrite+0x3d>$/;"	l
ffff80000010046d	kernel.asm	/^ffff80000010046d:	48 bf 5f ba 10 00 00 	movabs $0xffff80000010ba5f,%rdi$/;"	l
ffff800000100474	kernel.asm	/^ffff800000100474:	80 ff ff $/;"	l
ffff800000100477	kernel.asm	/^ffff800000100477:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff80000010047e	kernel.asm	/^ffff80000010047e:	80 ff ff $/;"	l
ffff800000100481	kernel.asm	/^ffff800000100481:	ff d0                	callq  *%rax$/;"	l
ffff800000100483	kernel.asm	/^ffff800000100483:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000100487	kernel.asm	/^ffff800000100487:	8b 00                	mov    (%rax),%eax$/;"	l
ffff800000100489	kernel.asm	/^ffff800000100489:	83 c8 04             	or     $0x4,%eax$/;"	l
ffff80000010048c	kernel.asm	/^ffff80000010048c:	89 c2                	mov    %eax,%edx$/;"	l
ffff80000010048e	kernel.asm	/^ffff80000010048e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000100492	kernel.asm	/^ffff800000100492:	89 10                	mov    %edx,(%rax)$/;"	l
ffff800000100494	kernel.asm	/^ffff800000100494:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000100498	kernel.asm	/^ffff800000100498:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010049b	kernel.asm	/^ffff80000010049b:	48 b8 c8 3b 10 00 00 	movabs $0xffff800000103bc8,%rax$/;"	l
ffff8000001004a2	kernel.asm	/^ffff8000001004a2:	80 ff ff $/;"	l
ffff8000001004a5	kernel.asm	/^ffff8000001004a5:	ff d0                	callq  *%rax$/;"	l
ffff8000001004a7	kernel.asm	/^ffff8000001004a7:	90                   	nop$/;"	l
ffff8000001004a8	kernel.asm	/^ffff8000001004a8:	c9                   	leaveq $/;"	l
ffff8000001004a9	kernel.asm	/^ffff8000001004a9:	c3                   	retq   $/;"	l
ffff8000001004aa	kernel.asm	/^ffff8000001004aa <brelse>:$/;"	l
ffff8000001004aa	kernel.asm	/^ffff8000001004aa:	55                   	push   %rbp$/;"	l
ffff8000001004ab	kernel.asm	/^ffff8000001004ab:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff8000001004ae	kernel.asm	/^ffff8000001004ae:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff8000001004b2	kernel.asm	/^ffff8000001004b2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)$/;"	l
ffff8000001004b6	kernel.asm	/^ffff8000001004b6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001004ba	kernel.asm	/^ffff8000001004ba:	48 83 c0 10          	add    $0x10,%rax$/;"	l
ffff8000001004be	kernel.asm	/^ffff8000001004be:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001004c1	kernel.asm	/^ffff8000001004c1:	48 b8 37 71 10 00 00 	movabs $0xffff800000107137,%rax$/;"	l
ffff8000001004c8	kernel.asm	/^ffff8000001004c8:	80 ff ff $/;"	l
ffff8000001004cb	kernel.asm	/^ffff8000001004cb:	ff d0                	callq  *%rax$/;"	l
ffff8000001004cd	kernel.asm	/^ffff8000001004cd:	85 c0                	test   %eax,%eax$/;"	l
ffff8000001004cf	kernel.asm	/^ffff8000001004cf:	75 16                	jne    ffff8000001004e7 <brelse+0x3d>$/;"	l
ffff8000001004d1	kernel.asm	/^ffff8000001004d1:	48 bf 66 ba 10 00 00 	movabs $0xffff80000010ba66,%rdi$/;"	l
ffff8000001004d8	kernel.asm	/^ffff8000001004d8:	80 ff ff $/;"	l
ffff8000001004db	kernel.asm	/^ffff8000001004db:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff8000001004e2	kernel.asm	/^ffff8000001004e2:	80 ff ff $/;"	l
ffff8000001004e5	kernel.asm	/^ffff8000001004e5:	ff d0                	callq  *%rax$/;"	l
ffff8000001004e7	kernel.asm	/^ffff8000001004e7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001004eb	kernel.asm	/^ffff8000001004eb:	48 83 c0 10          	add    $0x10,%rax$/;"	l
ffff8000001004ef	kernel.asm	/^ffff8000001004ef:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001004f2	kernel.asm	/^ffff8000001004f2:	48 b8 d2 70 10 00 00 	movabs $0xffff8000001070d2,%rax$/;"	l
ffff8000001004f9	kernel.asm	/^ffff8000001004f9:	80 ff ff $/;"	l
ffff8000001004fc	kernel.asm	/^ffff8000001004fc:	ff d0                	callq  *%rax$/;"	l
ffff8000001004fe	kernel.asm	/^ffff8000001004fe:	48 bf 00 e0 10 00 00 	movabs $0xffff80000010e000,%rdi$/;"	l
ffff800000100505	kernel.asm	/^ffff800000100505:	80 ff ff $/;"	l
ffff800000100508	kernel.asm	/^ffff800000100508:	48 b8 ff 71 10 00 00 	movabs $0xffff8000001071ff,%rax$/;"	l
ffff80000010050f	kernel.asm	/^ffff80000010050f:	80 ff ff $/;"	l
ffff800000100512	kernel.asm	/^ffff800000100512:	ff d0                	callq  *%rax$/;"	l
ffff800000100514	kernel.asm	/^ffff800000100514:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000100518	kernel.asm	/^ffff800000100518:	8b 80 90 00 00 00    	mov    0x90(%rax),%eax$/;"	l
ffff80000010051e	kernel.asm	/^ffff80000010051e:	8d 50 ff             	lea    -0x1(%rax),%edx$/;"	l
ffff800000100521	kernel.asm	/^ffff800000100521:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000100525	kernel.asm	/^ffff800000100525:	89 90 90 00 00 00    	mov    %edx,0x90(%rax)$/;"	l
ffff80000010052b	kernel.asm	/^ffff80000010052b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010052f	kernel.asm	/^ffff80000010052f:	8b 80 90 00 00 00    	mov    0x90(%rax),%eax$/;"	l
ffff800000100535	kernel.asm	/^ffff800000100535:	85 c0                	test   %eax,%eax$/;"	l
ffff800000100537	kernel.asm	/^ffff800000100537:	0f 85 9c 00 00 00    	jne    ffff8000001005d9 <brelse+0x12f>$/;"	l
ffff80000010053d	kernel.asm	/^ffff80000010053d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000100541	kernel.asm	/^ffff800000100541:	48 8b 80 a0 00 00 00 	mov    0xa0(%rax),%rax$/;"	l
ffff800000100548	kernel.asm	/^ffff800000100548:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx$/;"	l
ffff80000010054c	kernel.asm	/^ffff80000010054c:	48 8b 92 98 00 00 00 	mov    0x98(%rdx),%rdx$/;"	l
ffff800000100553	kernel.asm	/^ffff800000100553:	48 89 90 98 00 00 00 	mov    %rdx,0x98(%rax)$/;"	l
ffff80000010055a	kernel.asm	/^ffff80000010055a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010055e	kernel.asm	/^ffff80000010055e:	48 8b 80 98 00 00 00 	mov    0x98(%rax),%rax$/;"	l
ffff800000100565	kernel.asm	/^ffff800000100565:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx$/;"	l
ffff800000100569	kernel.asm	/^ffff800000100569:	48 8b 92 a0 00 00 00 	mov    0xa0(%rdx),%rdx$/;"	l
ffff800000100570	kernel.asm	/^ffff800000100570:	48 89 90 a0 00 00 00 	mov    %rdx,0xa0(%rax)$/;"	l
ffff800000100577	kernel.asm	/^ffff800000100577:	48 b8 00 e0 10 00 00 	movabs $0xffff80000010e000,%rax$/;"	l
ffff80000010057e	kernel.asm	/^ffff80000010057e:	80 ff ff $/;"	l
ffff800000100581	kernel.asm	/^ffff800000100581:	48 8b 90 a8 51 00 00 	mov    0x51a8(%rax),%rdx$/;"	l
ffff800000100588	kernel.asm	/^ffff800000100588:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010058c	kernel.asm	/^ffff80000010058c:	48 89 90 a0 00 00 00 	mov    %rdx,0xa0(%rax)$/;"	l
ffff800000100593	kernel.asm	/^ffff800000100593:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000100597	kernel.asm	/^ffff800000100597:	48 b9 08 31 11 00 00 	movabs $0xffff800000113108,%rcx$/;"	l
ffff80000010059e	kernel.asm	/^ffff80000010059e:	80 ff ff $/;"	l
ffff8000001005a1	kernel.asm	/^ffff8000001005a1:	48 89 88 98 00 00 00 	mov    %rcx,0x98(%rax)$/;"	l
ffff8000001005a8	kernel.asm	/^ffff8000001005a8:	48 b8 00 e0 10 00 00 	movabs $0xffff80000010e000,%rax$/;"	l
ffff8000001005af	kernel.asm	/^ffff8000001005af:	80 ff ff $/;"	l
ffff8000001005b2	kernel.asm	/^ffff8000001005b2:	48 8b 80 a8 51 00 00 	mov    0x51a8(%rax),%rax$/;"	l
ffff8000001005b9	kernel.asm	/^ffff8000001005b9:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx$/;"	l
ffff8000001005bd	kernel.asm	/^ffff8000001005bd:	48 89 90 98 00 00 00 	mov    %rdx,0x98(%rax)$/;"	l
ffff8000001005c4	kernel.asm	/^ffff8000001005c4:	48 b8 00 e0 10 00 00 	movabs $0xffff80000010e000,%rax$/;"	l
ffff8000001005cb	kernel.asm	/^ffff8000001005cb:	80 ff ff $/;"	l
ffff8000001005ce	kernel.asm	/^ffff8000001005ce:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx$/;"	l
ffff8000001005d2	kernel.asm	/^ffff8000001005d2:	48 89 90 a8 51 00 00 	mov    %rdx,0x51a8(%rax)$/;"	l
ffff8000001005d9	kernel.asm	/^ffff8000001005d9:	48 bf 00 e0 10 00 00 	movabs $0xffff80000010e000,%rdi$/;"	l
ffff8000001005e0	kernel.asm	/^ffff8000001005e0:	80 ff ff $/;"	l
ffff8000001005e3	kernel.asm	/^ffff8000001005e3:	48 b8 98 72 10 00 00 	movabs $0xffff800000107298,%rax$/;"	l
ffff8000001005ea	kernel.asm	/^ffff8000001005ea:	80 ff ff $/;"	l
ffff8000001005ed	kernel.asm	/^ffff8000001005ed:	ff d0                	callq  *%rax$/;"	l
ffff8000001005ef	kernel.asm	/^ffff8000001005ef:	90                   	nop$/;"	l
ffff8000001005f0	kernel.asm	/^ffff8000001005f0:	c9                   	leaveq $/;"	l
ffff8000001005f1	kernel.asm	/^ffff8000001005f1:	c3                   	retq   $/;"	l
ffff8000001005f2	kernel.asm	/^ffff8000001005f2 <inb>:$/;"	l
ffff8000001005f2	kernel.asm	/^ffff8000001005f2:	55                   	push   %rbp$/;"	l
ffff8000001005f3	kernel.asm	/^ffff8000001005f3:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff8000001005f6	kernel.asm	/^ffff8000001005f6:	48 83 ec 18          	sub    $0x18,%rsp$/;"	l
ffff8000001005fa	kernel.asm	/^ffff8000001005fa:	89 f8                	mov    %edi,%eax$/;"	l
ffff8000001005fc	kernel.asm	/^ffff8000001005fc:	66 89 45 ec          	mov    %ax,-0x14(%rbp)$/;"	l
ffff800000100600	kernel.asm	/^ffff800000100600:	0f b7 45 ec          	movzwl -0x14(%rbp),%eax$/;"	l
ffff800000100604	kernel.asm	/^ffff800000100604:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000100606	kernel.asm	/^ffff800000100606:	ec                   	in     (%dx),%al$/;"	l
ffff800000100607	kernel.asm	/^ffff800000100607:	88 45 ff             	mov    %al,-0x1(%rbp)$/;"	l
ffff80000010060a	kernel.asm	/^ffff80000010060a:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax$/;"	l
ffff80000010060e	kernel.asm	/^ffff80000010060e:	c9                   	leaveq $/;"	l
ffff80000010060f	kernel.asm	/^ffff80000010060f:	c3                   	retq   $/;"	l
ffff800000100610	kernel.asm	/^ffff800000100610 <outb>:$/;"	l
ffff800000100610	kernel.asm	/^ffff800000100610:	55                   	push   %rbp$/;"	l
ffff800000100611	kernel.asm	/^ffff800000100611:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000100614	kernel.asm	/^ffff800000100614:	48 83 ec 08          	sub    $0x8,%rsp$/;"	l
ffff800000100618	kernel.asm	/^ffff800000100618:	89 fa                	mov    %edi,%edx$/;"	l
ffff80000010061a	kernel.asm	/^ffff80000010061a:	89 f0                	mov    %esi,%eax$/;"	l
ffff80000010061c	kernel.asm	/^ffff80000010061c:	66 89 55 fc          	mov    %dx,-0x4(%rbp)$/;"	l
ffff800000100620	kernel.asm	/^ffff800000100620:	88 45 f8             	mov    %al,-0x8(%rbp)$/;"	l
ffff800000100623	kernel.asm	/^ffff800000100623:	0f b6 45 f8          	movzbl -0x8(%rbp),%eax$/;"	l
ffff800000100627	kernel.asm	/^ffff800000100627:	0f b7 55 fc          	movzwl -0x4(%rbp),%edx$/;"	l
ffff80000010062b	kernel.asm	/^ffff80000010062b:	ee                   	out    %al,(%dx)$/;"	l
ffff80000010062c	kernel.asm	/^ffff80000010062c:	90                   	nop$/;"	l
ffff80000010062d	kernel.asm	/^ffff80000010062d:	c9                   	leaveq $/;"	l
ffff80000010062e	kernel.asm	/^ffff80000010062e:	c3                   	retq   $/;"	l
ffff80000010062f	kernel.asm	/^ffff80000010062f <lidt>:$/;"	l
ffff80000010062f	kernel.asm	/^ffff80000010062f:	55                   	push   %rbp$/;"	l
ffff800000100630	kernel.asm	/^ffff800000100630:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000100633	kernel.asm	/^ffff800000100633:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ffff800000100637	kernel.asm	/^ffff800000100637:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
ffff80000010063b	kernel.asm	/^ffff80000010063b:	89 75 e4             	mov    %esi,-0x1c(%rbp)$/;"	l
ffff80000010063e	kernel.asm	/^ffff80000010063e:	8b 45 e4             	mov    -0x1c(%rbp),%eax$/;"	l
ffff800000100641	kernel.asm	/^ffff800000100641:	83 e8 01             	sub    $0x1,%eax$/;"	l
ffff800000100644	kernel.asm	/^ffff800000100644:	66 89 45 f0          	mov    %ax,-0x10(%rbp)$/;"	l
ffff800000100648	kernel.asm	/^ffff800000100648:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010064c	kernel.asm	/^ffff80000010064c:	66 89 45 f2          	mov    %ax,-0xe(%rbp)$/;"	l
ffff800000100650	kernel.asm	/^ffff800000100650:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000100654	kernel.asm	/^ffff800000100654:	48 c1 e8 10          	shr    $0x10,%rax$/;"	l
ffff800000100658	kernel.asm	/^ffff800000100658:	66 89 45 f4          	mov    %ax,-0xc(%rbp)$/;"	l
ffff80000010065c	kernel.asm	/^ffff80000010065c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000100660	kernel.asm	/^ffff800000100660:	48 c1 e8 20          	shr    $0x20,%rax$/;"	l
ffff800000100664	kernel.asm	/^ffff800000100664:	66 89 45 f6          	mov    %ax,-0xa(%rbp)$/;"	l
ffff800000100668	kernel.asm	/^ffff800000100668:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010066c	kernel.asm	/^ffff80000010066c:	48 c1 e8 30          	shr    $0x30,%rax$/;"	l
ffff800000100670	kernel.asm	/^ffff800000100670:	66 89 45 f8          	mov    %ax,-0x8(%rbp)$/;"	l
ffff800000100674	kernel.asm	/^ffff800000100674:	48 8d 45 f0          	lea    -0x10(%rbp),%rax$/;"	l
ffff800000100678	kernel.asm	/^ffff800000100678:	0f 01 18             	lidt   (%rax)$/;"	l
ffff80000010067b	kernel.asm	/^ffff80000010067b:	90                   	nop$/;"	l
ffff80000010067c	kernel.asm	/^ffff80000010067c:	c9                   	leaveq $/;"	l
ffff80000010067d	kernel.asm	/^ffff80000010067d:	c3                   	retq   $/;"	l
ffff80000010067e	kernel.asm	/^ffff80000010067e <cli>:$/;"	l
ffff80000010067e	kernel.asm	/^ffff80000010067e:	55                   	push   %rbp$/;"	l
ffff80000010067f	kernel.asm	/^ffff80000010067f:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000100682	kernel.asm	/^ffff800000100682:	fa                   	cli    $/;"	l
ffff800000100683	kernel.asm	/^ffff800000100683:	90                   	nop$/;"	l
ffff800000100684	kernel.asm	/^ffff800000100684:	5d                   	pop    %rbp$/;"	l
ffff800000100685	kernel.asm	/^ffff800000100685:	c3                   	retq   $/;"	l
ffff800000100686	kernel.asm	/^ffff800000100686 <printptr>:$/;"	l
ffff800000100686	kernel.asm	/^ffff800000100686:	55                   	push   %rbp$/;"	l
ffff800000100687	kernel.asm	/^ffff800000100687:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010068a	kernel.asm	/^ffff80000010068a:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ffff80000010068e	kernel.asm	/^ffff80000010068e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
ffff800000100692	kernel.asm	/^ffff800000100692:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)$/;"	l
ffff800000100699	kernel.asm	/^ffff800000100699:	eb 33                	jmp    ffff8000001006ce <printptr+0x48>$/;"	l
ffff80000010069b	kernel.asm	/^ffff80000010069b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010069f	kernel.asm	/^ffff80000010069f:	48 c1 e8 3c          	shr    $0x3c,%rax$/;"	l
ffff8000001006a3	kernel.asm	/^ffff8000001006a3:	48 89 c2             	mov    %rax,%rdx$/;"	l
ffff8000001006a6	kernel.asm	/^ffff8000001006a6:	48 b8 00 d0 10 00 00 	movabs $0xffff80000010d000,%rax$/;"	l
ffff8000001006ad	kernel.asm	/^ffff8000001006ad:	80 ff ff $/;"	l
ffff8000001006b0	kernel.asm	/^ffff8000001006b0:	0f b6 04 10          	movzbl (%rax,%rdx,1),%eax$/;"	l
ffff8000001006b4	kernel.asm	/^ffff8000001006b4:	0f be c0             	movsbl %al,%eax$/;"	l
ffff8000001006b7	kernel.asm	/^ffff8000001006b7:	89 c7                	mov    %eax,%edi$/;"	l
ffff8000001006b9	kernel.asm	/^ffff8000001006b9:	48 b8 3b 0e 10 00 00 	movabs $0xffff800000100e3b,%rax$/;"	l
ffff8000001006c0	kernel.asm	/^ffff8000001006c0:	80 ff ff $/;"	l
ffff8000001006c3	kernel.asm	/^ffff8000001006c3:	ff d0                	callq  *%rax$/;"	l
ffff8000001006c5	kernel.asm	/^ffff8000001006c5:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)$/;"	l
ffff8000001006c9	kernel.asm	/^ffff8000001006c9:	48 c1 65 e8 04       	shlq   $0x4,-0x18(%rbp)$/;"	l
ffff8000001006ce	kernel.asm	/^ffff8000001006ce:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff8000001006d1	kernel.asm	/^ffff8000001006d1:	83 f8 0f             	cmp    $0xf,%eax$/;"	l
ffff8000001006d4	kernel.asm	/^ffff8000001006d4:	76 c5                	jbe    ffff80000010069b <printptr+0x15>$/;"	l
ffff8000001006d6	kernel.asm	/^ffff8000001006d6:	90                   	nop$/;"	l
ffff8000001006d7	kernel.asm	/^ffff8000001006d7:	c9                   	leaveq $/;"	l
ffff8000001006d8	kernel.asm	/^ffff8000001006d8:	c3                   	retq   $/;"	l
ffff8000001006d9	kernel.asm	/^ffff8000001006d9 <printint>:$/;"	l
ffff8000001006d9	kernel.asm	/^ffff8000001006d9:	55                   	push   %rbp$/;"	l
ffff8000001006da	kernel.asm	/^ffff8000001006da:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff8000001006dd	kernel.asm	/^ffff8000001006dd:	48 83 ec 40          	sub    $0x40,%rsp$/;"	l
ffff8000001006e1	kernel.asm	/^ffff8000001006e1:	89 7d cc             	mov    %edi,-0x34(%rbp)$/;"	l
ffff8000001006e4	kernel.asm	/^ffff8000001006e4:	89 75 c8             	mov    %esi,-0x38(%rbp)$/;"	l
ffff8000001006e7	kernel.asm	/^ffff8000001006e7:	89 55 c4             	mov    %edx,-0x3c(%rbp)$/;"	l
ffff8000001006ea	kernel.asm	/^ffff8000001006ea:	83 7d c4 00          	cmpl   $0x0,-0x3c(%rbp)$/;"	l
ffff8000001006ee	kernel.asm	/^ffff8000001006ee:	74 1f                	je     ffff80000010070f <printint+0x36>$/;"	l
ffff8000001006f0	kernel.asm	/^ffff8000001006f0:	8b 45 cc             	mov    -0x34(%rbp),%eax$/;"	l
ffff8000001006f3	kernel.asm	/^ffff8000001006f3:	c1 e8 1f             	shr    $0x1f,%eax$/;"	l
ffff8000001006f6	kernel.asm	/^ffff8000001006f6:	0f b6 c0             	movzbl %al,%eax$/;"	l
ffff8000001006f9	kernel.asm	/^ffff8000001006f9:	89 45 c4             	mov    %eax,-0x3c(%rbp)$/;"	l
ffff8000001006fc	kernel.asm	/^ffff8000001006fc:	83 7d c4 00          	cmpl   $0x0,-0x3c(%rbp)$/;"	l
ffff800000100700	kernel.asm	/^ffff800000100700:	74 0d                	je     ffff80000010070f <printint+0x36>$/;"	l
ffff800000100702	kernel.asm	/^ffff800000100702:	8b 45 cc             	mov    -0x34(%rbp),%eax$/;"	l
ffff800000100705	kernel.asm	/^ffff800000100705:	f7 d8                	neg    %eax$/;"	l
ffff800000100707	kernel.asm	/^ffff800000100707:	48 98                	cltq   $/;"	l
ffff800000100709	kernel.asm	/^ffff800000100709:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ffff80000010070d	kernel.asm	/^ffff80000010070d:	eb 09                	jmp    ffff800000100718 <printint+0x3f>$/;"	l
ffff80000010070f	kernel.asm	/^ffff80000010070f:	8b 45 cc             	mov    -0x34(%rbp),%eax$/;"	l
ffff800000100712	kernel.asm	/^ffff800000100712:	48 98                	cltq   $/;"	l
ffff800000100714	kernel.asm	/^ffff800000100714:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ffff800000100718	kernel.asm	/^ffff800000100718:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)$/;"	l
ffff80000010071f	kernel.asm	/^ffff80000010071f:	8b 4d fc             	mov    -0x4(%rbp),%ecx$/;"	l
ffff800000100722	kernel.asm	/^ffff800000100722:	8d 41 01             	lea    0x1(%rcx),%eax$/;"	l
ffff800000100725	kernel.asm	/^ffff800000100725:	89 45 fc             	mov    %eax,-0x4(%rbp)$/;"	l
ffff800000100728	kernel.asm	/^ffff800000100728:	8b 45 c8             	mov    -0x38(%rbp),%eax$/;"	l
ffff80000010072b	kernel.asm	/^ffff80000010072b:	48 63 f0             	movslq %eax,%rsi$/;"	l
ffff80000010072e	kernel.asm	/^ffff80000010072e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000100732	kernel.asm	/^ffff800000100732:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
ffff800000100737	kernel.asm	/^ffff800000100737:	48 f7 f6             	div    %rsi$/;"	l
ffff80000010073a	kernel.asm	/^ffff80000010073a:	48 b8 00 d0 10 00 00 	movabs $0xffff80000010d000,%rax$/;"	l
ffff800000100741	kernel.asm	/^ffff800000100741:	80 ff ff $/;"	l
ffff800000100744	kernel.asm	/^ffff800000100744:	0f b6 14 10          	movzbl (%rax,%rdx,1),%edx$/;"	l
ffff800000100748	kernel.asm	/^ffff800000100748:	48 63 c1             	movslq %ecx,%rax$/;"	l
ffff80000010074b	kernel.asm	/^ffff80000010074b:	88 54 05 d0          	mov    %dl,-0x30(%rbp,%rax,1)$/;"	l
ffff80000010074f	kernel.asm	/^ffff80000010074f:	8b 45 c8             	mov    -0x38(%rbp),%eax$/;"	l
ffff800000100752	kernel.asm	/^ffff800000100752:	48 63 f8             	movslq %eax,%rdi$/;"	l
ffff800000100755	kernel.asm	/^ffff800000100755:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000100759	kernel.asm	/^ffff800000100759:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
ffff80000010075e	kernel.asm	/^ffff80000010075e:	48 f7 f7             	div    %rdi$/;"	l
ffff800000100761	kernel.asm	/^ffff800000100761:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ffff800000100765	kernel.asm	/^ffff800000100765:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)$/;"	l
ffff80000010076a	kernel.asm	/^ffff80000010076a:	75 b3                	jne    ffff80000010071f <printint+0x46>$/;"	l
ffff80000010076c	kernel.asm	/^ffff80000010076c:	83 7d c4 00          	cmpl   $0x0,-0x3c(%rbp)$/;"	l
ffff800000100770	kernel.asm	/^ffff800000100770:	74 2d                	je     ffff80000010079f <printint+0xc6>$/;"	l
ffff800000100772	kernel.asm	/^ffff800000100772:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff800000100775	kernel.asm	/^ffff800000100775:	8d 50 01             	lea    0x1(%rax),%edx$/;"	l
ffff800000100778	kernel.asm	/^ffff800000100778:	89 55 fc             	mov    %edx,-0x4(%rbp)$/;"	l
ffff80000010077b	kernel.asm	/^ffff80000010077b:	48 98                	cltq   $/;"	l
ffff80000010077d	kernel.asm	/^ffff80000010077d:	c6 44 05 d0 2d       	movb   $0x2d,-0x30(%rbp,%rax,1)$/;"	l
ffff800000100782	kernel.asm	/^ffff800000100782:	eb 1b                	jmp    ffff80000010079f <printint+0xc6>$/;"	l
ffff800000100784	kernel.asm	/^ffff800000100784:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff800000100787	kernel.asm	/^ffff800000100787:	48 98                	cltq   $/;"	l
ffff800000100789	kernel.asm	/^ffff800000100789:	0f b6 44 05 d0       	movzbl -0x30(%rbp,%rax,1),%eax$/;"	l
ffff80000010078e	kernel.asm	/^ffff80000010078e:	0f be c0             	movsbl %al,%eax$/;"	l
ffff800000100791	kernel.asm	/^ffff800000100791:	89 c7                	mov    %eax,%edi$/;"	l
ffff800000100793	kernel.asm	/^ffff800000100793:	48 b8 3b 0e 10 00 00 	movabs $0xffff800000100e3b,%rax$/;"	l
ffff80000010079a	kernel.asm	/^ffff80000010079a:	80 ff ff $/;"	l
ffff80000010079d	kernel.asm	/^ffff80000010079d:	ff d0                	callq  *%rax$/;"	l
ffff80000010079f	kernel.asm	/^ffff80000010079f:	83 6d fc 01          	subl   $0x1,-0x4(%rbp)$/;"	l
ffff8000001007a3	kernel.asm	/^ffff8000001007a3:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)$/;"	l
ffff8000001007a7	kernel.asm	/^ffff8000001007a7:	79 db                	jns    ffff800000100784 <printint+0xab>$/;"	l
ffff8000001007a9	kernel.asm	/^ffff8000001007a9:	90                   	nop$/;"	l
ffff8000001007aa	kernel.asm	/^ffff8000001007aa:	c9                   	leaveq $/;"	l
ffff8000001007ab	kernel.asm	/^ffff8000001007ab:	c3                   	retq   $/;"	l
ffff8000001007ac	kernel.asm	/^ffff8000001007ac <cprintf>:$/;"	l
ffff8000001007ac	kernel.asm	/^ffff8000001007ac:	55                   	push   %rbp$/;"	l
ffff8000001007ad	kernel.asm	/^ffff8000001007ad:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff8000001007b0	kernel.asm	/^ffff8000001007b0:	48 81 ec f0 00 00 00 	sub    $0xf0,%rsp$/;"	l
ffff8000001007b7	kernel.asm	/^ffff8000001007b7:	48 89 bd 18 ff ff ff 	mov    %rdi,-0xe8(%rbp)$/;"	l
ffff8000001007be	kernel.asm	/^ffff8000001007be:	48 89 b5 58 ff ff ff 	mov    %rsi,-0xa8(%rbp)$/;"	l
ffff8000001007c5	kernel.asm	/^ffff8000001007c5:	48 89 95 60 ff ff ff 	mov    %rdx,-0xa0(%rbp)$/;"	l
ffff8000001007cc	kernel.asm	/^ffff8000001007cc:	48 89 8d 68 ff ff ff 	mov    %rcx,-0x98(%rbp)$/;"	l
ffff8000001007d3	kernel.asm	/^ffff8000001007d3:	4c 89 85 70 ff ff ff 	mov    %r8,-0x90(%rbp)$/;"	l
ffff8000001007da	kernel.asm	/^ffff8000001007da:	4c 89 8d 78 ff ff ff 	mov    %r9,-0x88(%rbp)$/;"	l
ffff8000001007e1	kernel.asm	/^ffff8000001007e1:	84 c0                	test   %al,%al$/;"	l
ffff8000001007e3	kernel.asm	/^ffff8000001007e3:	74 20                	je     ffff800000100805 <cprintf+0x59>$/;"	l
ffff8000001007e5	kernel.asm	/^ffff8000001007e5:	0f 29 45 80          	movaps %xmm0,-0x80(%rbp)$/;"	l
ffff8000001007e9	kernel.asm	/^ffff8000001007e9:	0f 29 4d 90          	movaps %xmm1,-0x70(%rbp)$/;"	l
ffff8000001007ed	kernel.asm	/^ffff8000001007ed:	0f 29 55 a0          	movaps %xmm2,-0x60(%rbp)$/;"	l
ffff8000001007f1	kernel.asm	/^ffff8000001007f1:	0f 29 5d b0          	movaps %xmm3,-0x50(%rbp)$/;"	l
ffff8000001007f5	kernel.asm	/^ffff8000001007f5:	0f 29 65 c0          	movaps %xmm4,-0x40(%rbp)$/;"	l
ffff8000001007f9	kernel.asm	/^ffff8000001007f9:	0f 29 6d d0          	movaps %xmm5,-0x30(%rbp)$/;"	l
ffff8000001007fd	kernel.asm	/^ffff8000001007fd:	0f 29 75 e0          	movaps %xmm6,-0x20(%rbp)$/;"	l
ffff800000100801	kernel.asm	/^ffff800000100801:	0f 29 7d f0          	movaps %xmm7,-0x10(%rbp)$/;"	l
ffff800000100805	kernel.asm	/^ffff800000100805:	c7 85 20 ff ff ff 08 	movl   $0x8,-0xe0(%rbp)$/;"	l
ffff80000010080c	kernel.asm	/^ffff80000010080c:	00 00 00 $/;"	l
ffff80000010080f	kernel.asm	/^ffff80000010080f:	c7 85 24 ff ff ff 30 	movl   $0x30,-0xdc(%rbp)$/;"	l
ffff800000100816	kernel.asm	/^ffff800000100816:	00 00 00 $/;"	l
ffff800000100819	kernel.asm	/^ffff800000100819:	48 8d 45 10          	lea    0x10(%rbp),%rax$/;"	l
ffff80000010081d	kernel.asm	/^ffff80000010081d:	48 89 85 28 ff ff ff 	mov    %rax,-0xd8(%rbp)$/;"	l
ffff800000100824	kernel.asm	/^ffff800000100824:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax$/;"	l
ffff80000010082b	kernel.asm	/^ffff80000010082b:	48 89 85 30 ff ff ff 	mov    %rax,-0xd0(%rbp)$/;"	l
ffff800000100832	kernel.asm	/^ffff800000100832:	48 b8 c0 34 11 00 00 	movabs $0xffff8000001134c0,%rax$/;"	l
ffff800000100839	kernel.asm	/^ffff800000100839:	80 ff ff $/;"	l
ffff80000010083c	kernel.asm	/^ffff80000010083c:	8b 40 68             	mov    0x68(%rax),%eax$/;"	l
ffff80000010083f	kernel.asm	/^ffff80000010083f:	89 85 3c ff ff ff    	mov    %eax,-0xc4(%rbp)$/;"	l
ffff800000100845	kernel.asm	/^ffff800000100845:	83 bd 3c ff ff ff 00 	cmpl   $0x0,-0xc4(%rbp)$/;"	l
ffff80000010084c	kernel.asm	/^ffff80000010084c:	74 16                	je     ffff800000100864 <cprintf+0xb8>$/;"	l
ffff80000010084e	kernel.asm	/^ffff80000010084e:	48 bf c0 34 11 00 00 	movabs $0xffff8000001134c0,%rdi$/;"	l
ffff800000100855	kernel.asm	/^ffff800000100855:	80 ff ff $/;"	l
ffff800000100858	kernel.asm	/^ffff800000100858:	48 b8 ff 71 10 00 00 	movabs $0xffff8000001071ff,%rax$/;"	l
ffff80000010085f	kernel.asm	/^ffff80000010085f:	80 ff ff $/;"	l
ffff800000100862	kernel.asm	/^ffff800000100862:	ff d0                	callq  *%rax$/;"	l
ffff800000100864	kernel.asm	/^ffff800000100864:	48 83 bd 18 ff ff ff 	cmpq   $0x0,-0xe8(%rbp)$/;"	l
ffff80000010086b	kernel.asm	/^ffff80000010086b:	00 $/;"	l
ffff80000010086c	kernel.asm	/^ffff80000010086c:	75 16                	jne    ffff800000100884 <cprintf+0xd8>$/;"	l
ffff80000010086e	kernel.asm	/^ffff80000010086e:	48 bf 6d ba 10 00 00 	movabs $0xffff80000010ba6d,%rdi$/;"	l
ffff800000100875	kernel.asm	/^ffff800000100875:	80 ff ff $/;"	l
ffff800000100878	kernel.asm	/^ffff800000100878:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff80000010087f	kernel.asm	/^ffff80000010087f:	80 ff ff $/;"	l
ffff800000100882	kernel.asm	/^ffff800000100882:	ff d0                	callq  *%rax$/;"	l
ffff800000100884	kernel.asm	/^ffff800000100884:	c7 85 4c ff ff ff 00 	movl   $0x0,-0xb4(%rbp)$/;"	l
ffff80000010088b	kernel.asm	/^ffff80000010088b:	00 00 00 $/;"	l
ffff80000010088e	kernel.asm	/^ffff80000010088e:	e9 83 02 00 00       	jmpq   ffff800000100b16 <cprintf+0x36a>$/;"	l
ffff800000100893	kernel.asm	/^ffff800000100893:	83 bd 38 ff ff ff 25 	cmpl   $0x25,-0xc8(%rbp)$/;"	l
ffff80000010089a	kernel.asm	/^ffff80000010089a:	74 19                	je     ffff8000001008b5 <cprintf+0x109>$/;"	l
ffff80000010089c	kernel.asm	/^ffff80000010089c:	8b 85 38 ff ff ff    	mov    -0xc8(%rbp),%eax$/;"	l
ffff8000001008a2	kernel.asm	/^ffff8000001008a2:	89 c7                	mov    %eax,%edi$/;"	l
ffff8000001008a4	kernel.asm	/^ffff8000001008a4:	48 b8 3b 0e 10 00 00 	movabs $0xffff800000100e3b,%rax$/;"	l
ffff8000001008ab	kernel.asm	/^ffff8000001008ab:	80 ff ff $/;"	l
ffff8000001008ae	kernel.asm	/^ffff8000001008ae:	ff d0                	callq  *%rax$/;"	l
ffff8000001008b0	kernel.asm	/^ffff8000001008b0:	e9 5a 02 00 00       	jmpq   ffff800000100b0f <cprintf+0x363>$/;"	l
ffff8000001008b5	kernel.asm	/^ffff8000001008b5:	83 85 4c ff ff ff 01 	addl   $0x1,-0xb4(%rbp)$/;"	l
ffff8000001008bc	kernel.asm	/^ffff8000001008bc:	8b 85 4c ff ff ff    	mov    -0xb4(%rbp),%eax$/;"	l
ffff8000001008c2	kernel.asm	/^ffff8000001008c2:	48 63 d0             	movslq %eax,%rdx$/;"	l
ffff8000001008c5	kernel.asm	/^ffff8000001008c5:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax$/;"	l
ffff8000001008cc	kernel.asm	/^ffff8000001008cc:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff8000001008cf	kernel.asm	/^ffff8000001008cf:	0f b6 00             	movzbl (%rax),%eax$/;"	l
ffff8000001008d2	kernel.asm	/^ffff8000001008d2:	0f be c0             	movsbl %al,%eax$/;"	l
ffff8000001008d5	kernel.asm	/^ffff8000001008d5:	25 ff 00 00 00       	and    $0xff,%eax$/;"	l
ffff8000001008da	kernel.asm	/^ffff8000001008da:	89 85 38 ff ff ff    	mov    %eax,-0xc8(%rbp)$/;"	l
ffff8000001008e0	kernel.asm	/^ffff8000001008e0:	83 bd 38 ff ff ff 00 	cmpl   $0x0,-0xc8(%rbp)$/;"	l
ffff8000001008e7	kernel.asm	/^ffff8000001008e7:	0f 84 5c 02 00 00    	je     ffff800000100b49 <cprintf+0x39d>$/;"	l
ffff8000001008ed	kernel.asm	/^ffff8000001008ed:	8b 85 38 ff ff ff    	mov    -0xc8(%rbp),%eax$/;"	l
ffff8000001008f3	kernel.asm	/^ffff8000001008f3:	83 f8 70             	cmp    $0x70,%eax$/;"	l
ffff8000001008f6	kernel.asm	/^ffff8000001008f6:	0f 84 e9 00 00 00    	je     ffff8000001009e5 <cprintf+0x239>$/;"	l
ffff8000001008fc	kernel.asm	/^ffff8000001008fc:	83 f8 70             	cmp    $0x70,%eax$/;"	l
ffff8000001008ff	kernel.asm	/^ffff8000001008ff:	7f 13                	jg     ffff800000100914 <cprintf+0x168>$/;"	l
ffff800000100901	kernel.asm	/^ffff800000100901:	83 f8 25             	cmp    $0x25,%eax$/;"	l
ffff800000100904	kernel.asm	/^ffff800000100904:	0f 84 cc 01 00 00    	je     ffff800000100ad6 <cprintf+0x32a>$/;"	l
ffff80000010090a	kernel.asm	/^ffff80000010090a:	83 f8 64             	cmp    $0x64,%eax$/;"	l
ffff80000010090d	kernel.asm	/^ffff80000010090d:	74 18                	je     ffff800000100927 <cprintf+0x17b>$/;"	l
ffff80000010090f	kernel.asm	/^ffff80000010090f:	e9 d5 01 00 00       	jmpq   ffff800000100ae9 <cprintf+0x33d>$/;"	l
ffff800000100914	kernel.asm	/^ffff800000100914:	83 f8 73             	cmp    $0x73,%eax$/;"	l
ffff800000100917	kernel.asm	/^ffff800000100917:	0f 84 1f 01 00 00    	je     ffff800000100a3c <cprintf+0x290>$/;"	l
ffff80000010091d	kernel.asm	/^ffff80000010091d:	83 f8 78             	cmp    $0x78,%eax$/;"	l
ffff800000100920	kernel.asm	/^ffff800000100920:	74 64                	je     ffff800000100986 <cprintf+0x1da>$/;"	l
ffff800000100922	kernel.asm	/^ffff800000100922:	e9 c2 01 00 00       	jmpq   ffff800000100ae9 <cprintf+0x33d>$/;"	l
ffff800000100927	kernel.asm	/^ffff800000100927:	8b 85 20 ff ff ff    	mov    -0xe0(%rbp),%eax$/;"	l
ffff80000010092d	kernel.asm	/^ffff80000010092d:	83 f8 30             	cmp    $0x30,%eax$/;"	l
ffff800000100930	kernel.asm	/^ffff800000100930:	73 23                	jae    ffff800000100955 <cprintf+0x1a9>$/;"	l
ffff800000100932	kernel.asm	/^ffff800000100932:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax$/;"	l
ffff800000100939	kernel.asm	/^ffff800000100939:	8b 95 20 ff ff ff    	mov    -0xe0(%rbp),%edx$/;"	l
ffff80000010093f	kernel.asm	/^ffff80000010093f:	89 d2                	mov    %edx,%edx$/;"	l
ffff800000100941	kernel.asm	/^ffff800000100941:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff800000100944	kernel.asm	/^ffff800000100944:	8b 95 20 ff ff ff    	mov    -0xe0(%rbp),%edx$/;"	l
ffff80000010094a	kernel.asm	/^ffff80000010094a:	83 c2 08             	add    $0x8,%edx$/;"	l
ffff80000010094d	kernel.asm	/^ffff80000010094d:	89 95 20 ff ff ff    	mov    %edx,-0xe0(%rbp)$/;"	l
ffff800000100953	kernel.asm	/^ffff800000100953:	eb 12                	jmp    ffff800000100967 <cprintf+0x1bb>$/;"	l
ffff800000100955	kernel.asm	/^ffff800000100955:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax$/;"	l
ffff80000010095c	kernel.asm	/^ffff80000010095c:	48 8d 50 08          	lea    0x8(%rax),%rdx$/;"	l
ffff800000100960	kernel.asm	/^ffff800000100960:	48 89 95 28 ff ff ff 	mov    %rdx,-0xd8(%rbp)$/;"	l
ffff800000100967	kernel.asm	/^ffff800000100967:	8b 00                	mov    (%rax),%eax$/;"	l
ffff800000100969	kernel.asm	/^ffff800000100969:	ba 01 00 00 00       	mov    $0x1,%edx$/;"	l
ffff80000010096e	kernel.asm	/^ffff80000010096e:	be 0a 00 00 00       	mov    $0xa,%esi$/;"	l
ffff800000100973	kernel.asm	/^ffff800000100973:	89 c7                	mov    %eax,%edi$/;"	l
ffff800000100975	kernel.asm	/^ffff800000100975:	48 b8 d9 06 10 00 00 	movabs $0xffff8000001006d9,%rax$/;"	l
ffff80000010097c	kernel.asm	/^ffff80000010097c:	80 ff ff $/;"	l
ffff80000010097f	kernel.asm	/^ffff80000010097f:	ff d0                	callq  *%rax$/;"	l
ffff800000100981	kernel.asm	/^ffff800000100981:	e9 89 01 00 00       	jmpq   ffff800000100b0f <cprintf+0x363>$/;"	l
ffff800000100986	kernel.asm	/^ffff800000100986:	8b 85 20 ff ff ff    	mov    -0xe0(%rbp),%eax$/;"	l
ffff80000010098c	kernel.asm	/^ffff80000010098c:	83 f8 30             	cmp    $0x30,%eax$/;"	l
ffff80000010098f	kernel.asm	/^ffff80000010098f:	73 23                	jae    ffff8000001009b4 <cprintf+0x208>$/;"	l
ffff800000100991	kernel.asm	/^ffff800000100991:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax$/;"	l
ffff800000100998	kernel.asm	/^ffff800000100998:	8b 95 20 ff ff ff    	mov    -0xe0(%rbp),%edx$/;"	l
ffff80000010099e	kernel.asm	/^ffff80000010099e:	89 d2                	mov    %edx,%edx$/;"	l
ffff8000001009a0	kernel.asm	/^ffff8000001009a0:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff8000001009a3	kernel.asm	/^ffff8000001009a3:	8b 95 20 ff ff ff    	mov    -0xe0(%rbp),%edx$/;"	l
ffff8000001009a9	kernel.asm	/^ffff8000001009a9:	83 c2 08             	add    $0x8,%edx$/;"	l
ffff8000001009ac	kernel.asm	/^ffff8000001009ac:	89 95 20 ff ff ff    	mov    %edx,-0xe0(%rbp)$/;"	l
ffff8000001009b2	kernel.asm	/^ffff8000001009b2:	eb 12                	jmp    ffff8000001009c6 <cprintf+0x21a>$/;"	l
ffff8000001009b4	kernel.asm	/^ffff8000001009b4:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax$/;"	l
ffff8000001009bb	kernel.asm	/^ffff8000001009bb:	48 8d 50 08          	lea    0x8(%rax),%rdx$/;"	l
ffff8000001009bf	kernel.asm	/^ffff8000001009bf:	48 89 95 28 ff ff ff 	mov    %rdx,-0xd8(%rbp)$/;"	l
ffff8000001009c6	kernel.asm	/^ffff8000001009c6:	8b 00                	mov    (%rax),%eax$/;"	l
ffff8000001009c8	kernel.asm	/^ffff8000001009c8:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
ffff8000001009cd	kernel.asm	/^ffff8000001009cd:	be 10 00 00 00       	mov    $0x10,%esi$/;"	l
ffff8000001009d2	kernel.asm	/^ffff8000001009d2:	89 c7                	mov    %eax,%edi$/;"	l
ffff8000001009d4	kernel.asm	/^ffff8000001009d4:	48 b8 d9 06 10 00 00 	movabs $0xffff8000001006d9,%rax$/;"	l
ffff8000001009db	kernel.asm	/^ffff8000001009db:	80 ff ff $/;"	l
ffff8000001009de	kernel.asm	/^ffff8000001009de:	ff d0                	callq  *%rax$/;"	l
ffff8000001009e0	kernel.asm	/^ffff8000001009e0:	e9 2a 01 00 00       	jmpq   ffff800000100b0f <cprintf+0x363>$/;"	l
ffff8000001009e5	kernel.asm	/^ffff8000001009e5:	8b 85 20 ff ff ff    	mov    -0xe0(%rbp),%eax$/;"	l
ffff8000001009eb	kernel.asm	/^ffff8000001009eb:	83 f8 30             	cmp    $0x30,%eax$/;"	l
ffff8000001009ee	kernel.asm	/^ffff8000001009ee:	73 23                	jae    ffff800000100a13 <cprintf+0x267>$/;"	l
ffff8000001009f0	kernel.asm	/^ffff8000001009f0:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax$/;"	l
ffff8000001009f7	kernel.asm	/^ffff8000001009f7:	8b 95 20 ff ff ff    	mov    -0xe0(%rbp),%edx$/;"	l
ffff8000001009fd	kernel.asm	/^ffff8000001009fd:	89 d2                	mov    %edx,%edx$/;"	l
ffff8000001009ff	kernel.asm	/^ffff8000001009ff:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff800000100a02	kernel.asm	/^ffff800000100a02:	8b 95 20 ff ff ff    	mov    -0xe0(%rbp),%edx$/;"	l
ffff800000100a08	kernel.asm	/^ffff800000100a08:	83 c2 08             	add    $0x8,%edx$/;"	l
ffff800000100a0b	kernel.asm	/^ffff800000100a0b:	89 95 20 ff ff ff    	mov    %edx,-0xe0(%rbp)$/;"	l
ffff800000100a11	kernel.asm	/^ffff800000100a11:	eb 12                	jmp    ffff800000100a25 <cprintf+0x279>$/;"	l
ffff800000100a13	kernel.asm	/^ffff800000100a13:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax$/;"	l
ffff800000100a1a	kernel.asm	/^ffff800000100a1a:	48 8d 50 08          	lea    0x8(%rax),%rdx$/;"	l
ffff800000100a1e	kernel.asm	/^ffff800000100a1e:	48 89 95 28 ff ff ff 	mov    %rdx,-0xd8(%rbp)$/;"	l
ffff800000100a25	kernel.asm	/^ffff800000100a25:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff800000100a28	kernel.asm	/^ffff800000100a28:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000100a2b	kernel.asm	/^ffff800000100a2b:	48 b8 86 06 10 00 00 	movabs $0xffff800000100686,%rax$/;"	l
ffff800000100a32	kernel.asm	/^ffff800000100a32:	80 ff ff $/;"	l
ffff800000100a35	kernel.asm	/^ffff800000100a35:	ff d0                	callq  *%rax$/;"	l
ffff800000100a37	kernel.asm	/^ffff800000100a37:	e9 d3 00 00 00       	jmpq   ffff800000100b0f <cprintf+0x363>$/;"	l
ffff800000100a3c	kernel.asm	/^ffff800000100a3c:	8b 85 20 ff ff ff    	mov    -0xe0(%rbp),%eax$/;"	l
ffff800000100a42	kernel.asm	/^ffff800000100a42:	83 f8 30             	cmp    $0x30,%eax$/;"	l
ffff800000100a45	kernel.asm	/^ffff800000100a45:	73 23                	jae    ffff800000100a6a <cprintf+0x2be>$/;"	l
ffff800000100a47	kernel.asm	/^ffff800000100a47:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax$/;"	l
ffff800000100a4e	kernel.asm	/^ffff800000100a4e:	8b 95 20 ff ff ff    	mov    -0xe0(%rbp),%edx$/;"	l
ffff800000100a54	kernel.asm	/^ffff800000100a54:	89 d2                	mov    %edx,%edx$/;"	l
ffff800000100a56	kernel.asm	/^ffff800000100a56:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff800000100a59	kernel.asm	/^ffff800000100a59:	8b 95 20 ff ff ff    	mov    -0xe0(%rbp),%edx$/;"	l
ffff800000100a5f	kernel.asm	/^ffff800000100a5f:	83 c2 08             	add    $0x8,%edx$/;"	l
ffff800000100a62	kernel.asm	/^ffff800000100a62:	89 95 20 ff ff ff    	mov    %edx,-0xe0(%rbp)$/;"	l
ffff800000100a68	kernel.asm	/^ffff800000100a68:	eb 12                	jmp    ffff800000100a7c <cprintf+0x2d0>$/;"	l
ffff800000100a6a	kernel.asm	/^ffff800000100a6a:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax$/;"	l
ffff800000100a71	kernel.asm	/^ffff800000100a71:	48 8d 50 08          	lea    0x8(%rax),%rdx$/;"	l
ffff800000100a75	kernel.asm	/^ffff800000100a75:	48 89 95 28 ff ff ff 	mov    %rdx,-0xd8(%rbp)$/;"	l
ffff800000100a7c	kernel.asm	/^ffff800000100a7c:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff800000100a7f	kernel.asm	/^ffff800000100a7f:	48 89 85 40 ff ff ff 	mov    %rax,-0xc0(%rbp)$/;"	l
ffff800000100a86	kernel.asm	/^ffff800000100a86:	48 83 bd 40 ff ff ff 	cmpq   $0x0,-0xc0(%rbp)$/;"	l
ffff800000100a8d	kernel.asm	/^ffff800000100a8d:	00 $/;"	l
ffff800000100a8e	kernel.asm	/^ffff800000100a8e:	75 36                	jne    ffff800000100ac6 <cprintf+0x31a>$/;"	l
ffff800000100a90	kernel.asm	/^ffff800000100a90:	48 b8 76 ba 10 00 00 	movabs $0xffff80000010ba76,%rax$/;"	l
ffff800000100a97	kernel.asm	/^ffff800000100a97:	80 ff ff $/;"	l
ffff800000100a9a	kernel.asm	/^ffff800000100a9a:	48 89 85 40 ff ff ff 	mov    %rax,-0xc0(%rbp)$/;"	l
ffff800000100aa1	kernel.asm	/^ffff800000100aa1:	eb 23                	jmp    ffff800000100ac6 <cprintf+0x31a>$/;"	l
ffff800000100aa3	kernel.asm	/^ffff800000100aa3:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax$/;"	l
ffff800000100aaa	kernel.asm	/^ffff800000100aaa:	0f b6 00             	movzbl (%rax),%eax$/;"	l
ffff800000100aad	kernel.asm	/^ffff800000100aad:	0f be c0             	movsbl %al,%eax$/;"	l
ffff800000100ab0	kernel.asm	/^ffff800000100ab0:	89 c7                	mov    %eax,%edi$/;"	l
ffff800000100ab2	kernel.asm	/^ffff800000100ab2:	48 b8 3b 0e 10 00 00 	movabs $0xffff800000100e3b,%rax$/;"	l
ffff800000100ab9	kernel.asm	/^ffff800000100ab9:	80 ff ff $/;"	l
ffff800000100abc	kernel.asm	/^ffff800000100abc:	ff d0                	callq  *%rax$/;"	l
ffff800000100abe	kernel.asm	/^ffff800000100abe:	48 83 85 40 ff ff ff 	addq   $0x1,-0xc0(%rbp)$/;"	l
ffff800000100ac5	kernel.asm	/^ffff800000100ac5:	01 $/;"	l
ffff800000100ac6	kernel.asm	/^ffff800000100ac6:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax$/;"	l
ffff800000100acd	kernel.asm	/^ffff800000100acd:	0f b6 00             	movzbl (%rax),%eax$/;"	l
ffff800000100ad0	kernel.asm	/^ffff800000100ad0:	84 c0                	test   %al,%al$/;"	l
ffff800000100ad2	kernel.asm	/^ffff800000100ad2:	75 cf                	jne    ffff800000100aa3 <cprintf+0x2f7>$/;"	l
ffff800000100ad4	kernel.asm	/^ffff800000100ad4:	eb 39                	jmp    ffff800000100b0f <cprintf+0x363>$/;"	l
ffff800000100ad6	kernel.asm	/^ffff800000100ad6:	bf 25 00 00 00       	mov    $0x25,%edi$/;"	l
ffff800000100adb	kernel.asm	/^ffff800000100adb:	48 b8 3b 0e 10 00 00 	movabs $0xffff800000100e3b,%rax$/;"	l
ffff800000100ae2	kernel.asm	/^ffff800000100ae2:	80 ff ff $/;"	l
ffff800000100ae5	kernel.asm	/^ffff800000100ae5:	ff d0                	callq  *%rax$/;"	l
ffff800000100ae7	kernel.asm	/^ffff800000100ae7:	eb 26                	jmp    ffff800000100b0f <cprintf+0x363>$/;"	l
ffff800000100ae9	kernel.asm	/^ffff800000100ae9:	bf 25 00 00 00       	mov    $0x25,%edi$/;"	l
ffff800000100aee	kernel.asm	/^ffff800000100aee:	48 b8 3b 0e 10 00 00 	movabs $0xffff800000100e3b,%rax$/;"	l
ffff800000100af5	kernel.asm	/^ffff800000100af5:	80 ff ff $/;"	l
ffff800000100af8	kernel.asm	/^ffff800000100af8:	ff d0                	callq  *%rax$/;"	l
ffff800000100afa	kernel.asm	/^ffff800000100afa:	8b 85 38 ff ff ff    	mov    -0xc8(%rbp),%eax$/;"	l
ffff800000100b00	kernel.asm	/^ffff800000100b00:	89 c7                	mov    %eax,%edi$/;"	l
ffff800000100b02	kernel.asm	/^ffff800000100b02:	48 b8 3b 0e 10 00 00 	movabs $0xffff800000100e3b,%rax$/;"	l
ffff800000100b09	kernel.asm	/^ffff800000100b09:	80 ff ff $/;"	l
ffff800000100b0c	kernel.asm	/^ffff800000100b0c:	ff d0                	callq  *%rax$/;"	l
ffff800000100b0e	kernel.asm	/^ffff800000100b0e:	90                   	nop$/;"	l
ffff800000100b0f	kernel.asm	/^ffff800000100b0f:	83 85 4c ff ff ff 01 	addl   $0x1,-0xb4(%rbp)$/;"	l
ffff800000100b16	kernel.asm	/^ffff800000100b16:	8b 85 4c ff ff ff    	mov    -0xb4(%rbp),%eax$/;"	l
ffff800000100b1c	kernel.asm	/^ffff800000100b1c:	48 63 d0             	movslq %eax,%rdx$/;"	l
ffff800000100b1f	kernel.asm	/^ffff800000100b1f:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax$/;"	l
ffff800000100b26	kernel.asm	/^ffff800000100b26:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff800000100b29	kernel.asm	/^ffff800000100b29:	0f b6 00             	movzbl (%rax),%eax$/;"	l
ffff800000100b2c	kernel.asm	/^ffff800000100b2c:	0f be c0             	movsbl %al,%eax$/;"	l
ffff800000100b2f	kernel.asm	/^ffff800000100b2f:	25 ff 00 00 00       	and    $0xff,%eax$/;"	l
ffff800000100b34	kernel.asm	/^ffff800000100b34:	89 85 38 ff ff ff    	mov    %eax,-0xc8(%rbp)$/;"	l
ffff800000100b3a	kernel.asm	/^ffff800000100b3a:	83 bd 38 ff ff ff 00 	cmpl   $0x0,-0xc8(%rbp)$/;"	l
ffff800000100b41	kernel.asm	/^ffff800000100b41:	0f 85 4c fd ff ff    	jne    ffff800000100893 <cprintf+0xe7>$/;"	l
ffff800000100b47	kernel.asm	/^ffff800000100b47:	eb 01                	jmp    ffff800000100b4a <cprintf+0x39e>$/;"	l
ffff800000100b49	kernel.asm	/^ffff800000100b49:	90                   	nop$/;"	l
ffff800000100b4a	kernel.asm	/^ffff800000100b4a:	83 bd 3c ff ff ff 00 	cmpl   $0x0,-0xc4(%rbp)$/;"	l
ffff800000100b51	kernel.asm	/^ffff800000100b51:	74 16                	je     ffff800000100b69 <cprintf+0x3bd>$/;"	l
ffff800000100b53	kernel.asm	/^ffff800000100b53:	48 bf c0 34 11 00 00 	movabs $0xffff8000001134c0,%rdi$/;"	l
ffff800000100b5a	kernel.asm	/^ffff800000100b5a:	80 ff ff $/;"	l
ffff800000100b5d	kernel.asm	/^ffff800000100b5d:	48 b8 98 72 10 00 00 	movabs $0xffff800000107298,%rax$/;"	l
ffff800000100b64	kernel.asm	/^ffff800000100b64:	80 ff ff $/;"	l
ffff800000100b67	kernel.asm	/^ffff800000100b67:	ff d0                	callq  *%rax$/;"	l
ffff800000100b69	kernel.asm	/^ffff800000100b69:	90                   	nop$/;"	l
ffff800000100b6a	kernel.asm	/^ffff800000100b6a:	c9                   	leaveq $/;"	l
ffff800000100b6b	kernel.asm	/^ffff800000100b6b:	c3                   	retq   $/;"	l
ffff800000100b6c	kernel.asm	/^ffff800000100b6c <panic>:$/;"	l
ffff800000100b6c	kernel.asm	/^ffff800000100b6c:	55                   	push   %rbp$/;"	l
ffff800000100b6d	kernel.asm	/^ffff800000100b6d:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000100b70	kernel.asm	/^ffff800000100b70:	48 83 ec 70          	sub    $0x70,%rsp$/;"	l
ffff800000100b74	kernel.asm	/^ffff800000100b74:	48 89 7d 98          	mov    %rdi,-0x68(%rbp)$/;"	l
ffff800000100b78	kernel.asm	/^ffff800000100b78:	48 b8 7e 06 10 00 00 	movabs $0xffff80000010067e,%rax$/;"	l
ffff800000100b7f	kernel.asm	/^ffff800000100b7f:	80 ff ff $/;"	l
ffff800000100b82	kernel.asm	/^ffff800000100b82:	ff d0                	callq  *%rax$/;"	l
ffff800000100b84	kernel.asm	/^ffff800000100b84:	48 b8 c0 34 11 00 00 	movabs $0xffff8000001134c0,%rax$/;"	l
ffff800000100b8b	kernel.asm	/^ffff800000100b8b:	80 ff ff $/;"	l
ffff800000100b8e	kernel.asm	/^ffff800000100b8e:	c7 40 68 00 00 00 00 	movl   $0x0,0x68(%rax)$/;"	l
ffff800000100b95	kernel.asm	/^ffff800000100b95:	48 c7 c0 f0 ff ff ff 	mov    $0xfffffffffffffff0,%rax$/;"	l
ffff800000100b9c	kernel.asm	/^ffff800000100b9c:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000100ba0	kernel.asm	/^ffff800000100ba0:	0f b6 00             	movzbl (%rax),%eax$/;"	l
ffff800000100ba3	kernel.asm	/^ffff800000100ba3:	0f b6 c0             	movzbl %al,%eax$/;"	l
ffff800000100ba6	kernel.asm	/^ffff800000100ba6:	89 c6                	mov    %eax,%esi$/;"	l
ffff800000100ba8	kernel.asm	/^ffff800000100ba8:	48 bf 7d ba 10 00 00 	movabs $0xffff80000010ba7d,%rdi$/;"	l
ffff800000100baf	kernel.asm	/^ffff800000100baf:	80 ff ff $/;"	l
ffff800000100bb2	kernel.asm	/^ffff800000100bb2:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000100bb7	kernel.asm	/^ffff800000100bb7:	48 ba ac 07 10 00 00 	movabs $0xffff8000001007ac,%rdx$/;"	l
ffff800000100bbe	kernel.asm	/^ffff800000100bbe:	80 ff ff $/;"	l
ffff800000100bc1	kernel.asm	/^ffff800000100bc1:	ff d2                	callq  *%rdx$/;"	l
ffff800000100bc3	kernel.asm	/^ffff800000100bc3:	48 8b 45 98          	mov    -0x68(%rbp),%rax$/;"	l
ffff800000100bc7	kernel.asm	/^ffff800000100bc7:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000100bca	kernel.asm	/^ffff800000100bca:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000100bcf	kernel.asm	/^ffff800000100bcf:	48 ba ac 07 10 00 00 	movabs $0xffff8000001007ac,%rdx$/;"	l
ffff800000100bd6	kernel.asm	/^ffff800000100bd6:	80 ff ff $/;"	l
ffff800000100bd9	kernel.asm	/^ffff800000100bd9:	ff d2                	callq  *%rdx$/;"	l
ffff800000100bdb	kernel.asm	/^ffff800000100bdb:	48 bf 8c ba 10 00 00 	movabs $0xffff80000010ba8c,%rdi$/;"	l
ffff800000100be2	kernel.asm	/^ffff800000100be2:	80 ff ff $/;"	l
ffff800000100be5	kernel.asm	/^ffff800000100be5:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000100bea	kernel.asm	/^ffff800000100bea:	48 ba ac 07 10 00 00 	movabs $0xffff8000001007ac,%rdx$/;"	l
ffff800000100bf1	kernel.asm	/^ffff800000100bf1:	80 ff ff $/;"	l
ffff800000100bf4	kernel.asm	/^ffff800000100bf4:	ff d2                	callq  *%rdx$/;"	l
ffff800000100bf6	kernel.asm	/^ffff800000100bf6:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx$/;"	l
ffff800000100bfa	kernel.asm	/^ffff800000100bfa:	48 8d 45 98          	lea    -0x68(%rbp),%rax$/;"	l
ffff800000100bfe	kernel.asm	/^ffff800000100bfe:	48 89 d6             	mov    %rdx,%rsi$/;"	l
ffff800000100c01	kernel.asm	/^ffff800000100c01:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000100c04	kernel.asm	/^ffff800000100c04:	48 b8 09 73 10 00 00 	movabs $0xffff800000107309,%rax$/;"	l
ffff800000100c0b	kernel.asm	/^ffff800000100c0b:	80 ff ff $/;"	l
ffff800000100c0e	kernel.asm	/^ffff800000100c0e:	ff d0                	callq  *%rax$/;"	l
ffff800000100c10	kernel.asm	/^ffff800000100c10:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)$/;"	l
ffff800000100c17	kernel.asm	/^ffff800000100c17:	eb 2c                	jmp    ffff800000100c45 <panic+0xd9>$/;"	l
ffff800000100c19	kernel.asm	/^ffff800000100c19:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff800000100c1c	kernel.asm	/^ffff800000100c1c:	48 98                	cltq   $/;"	l
ffff800000100c1e	kernel.asm	/^ffff800000100c1e:	48 8b 44 c5 a0       	mov    -0x60(%rbp,%rax,8),%rax$/;"	l
ffff800000100c23	kernel.asm	/^ffff800000100c23:	48 89 c6             	mov    %rax,%rsi$/;"	l
ffff800000100c26	kernel.asm	/^ffff800000100c26:	48 bf 8e ba 10 00 00 	movabs $0xffff80000010ba8e,%rdi$/;"	l
ffff800000100c2d	kernel.asm	/^ffff800000100c2d:	80 ff ff $/;"	l
ffff800000100c30	kernel.asm	/^ffff800000100c30:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000100c35	kernel.asm	/^ffff800000100c35:	48 ba ac 07 10 00 00 	movabs $0xffff8000001007ac,%rdx$/;"	l
ffff800000100c3c	kernel.asm	/^ffff800000100c3c:	80 ff ff $/;"	l
ffff800000100c3f	kernel.asm	/^ffff800000100c3f:	ff d2                	callq  *%rdx$/;"	l
ffff800000100c41	kernel.asm	/^ffff800000100c41:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)$/;"	l
ffff800000100c45	kernel.asm	/^ffff800000100c45:	83 7d fc 09          	cmpl   $0x9,-0x4(%rbp)$/;"	l
ffff800000100c49	kernel.asm	/^ffff800000100c49:	7e ce                	jle    ffff800000100c19 <panic+0xad>$/;"	l
ffff800000100c4b	kernel.asm	/^ffff800000100c4b:	48 b8 b8 34 11 00 00 	movabs $0xffff8000001134b8,%rax$/;"	l
ffff800000100c52	kernel.asm	/^ffff800000100c52:	80 ff ff $/;"	l
ffff800000100c55	kernel.asm	/^ffff800000100c55:	c7 00 01 00 00 00    	movl   $0x1,(%rax)$/;"	l
ffff800000100c5b	kernel.asm	/^ffff800000100c5b:	eb fe                	jmp    ffff800000100c5b <panic+0xef>$/;"	l
ffff800000100c5d	kernel.asm	/^ffff800000100c5d <cgaputc>:$/;"	l
ffff800000100c5d	kernel.asm	/^ffff800000100c5d:	55                   	push   %rbp$/;"	l
ffff800000100c5e	kernel.asm	/^ffff800000100c5e:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000100c61	kernel.asm	/^ffff800000100c61:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ffff800000100c65	kernel.asm	/^ffff800000100c65:	89 7d ec             	mov    %edi,-0x14(%rbp)$/;"	l
ffff800000100c68	kernel.asm	/^ffff800000100c68:	be 0e 00 00 00       	mov    $0xe,%esi$/;"	l
ffff800000100c6d	kernel.asm	/^ffff800000100c6d:	bf d4 03 00 00       	mov    $0x3d4,%edi$/;"	l
ffff800000100c72	kernel.asm	/^ffff800000100c72:	48 b8 10 06 10 00 00 	movabs $0xffff800000100610,%rax$/;"	l
ffff800000100c79	kernel.asm	/^ffff800000100c79:	80 ff ff $/;"	l
ffff800000100c7c	kernel.asm	/^ffff800000100c7c:	ff d0                	callq  *%rax$/;"	l
ffff800000100c7e	kernel.asm	/^ffff800000100c7e:	bf d5 03 00 00       	mov    $0x3d5,%edi$/;"	l
ffff800000100c83	kernel.asm	/^ffff800000100c83:	48 b8 f2 05 10 00 00 	movabs $0xffff8000001005f2,%rax$/;"	l
ffff800000100c8a	kernel.asm	/^ffff800000100c8a:	80 ff ff $/;"	l
ffff800000100c8d	kernel.asm	/^ffff800000100c8d:	ff d0                	callq  *%rax$/;"	l
ffff800000100c8f	kernel.asm	/^ffff800000100c8f:	0f b6 c0             	movzbl %al,%eax$/;"	l
ffff800000100c92	kernel.asm	/^ffff800000100c92:	c1 e0 08             	shl    $0x8,%eax$/;"	l
ffff800000100c95	kernel.asm	/^ffff800000100c95:	89 45 fc             	mov    %eax,-0x4(%rbp)$/;"	l
ffff800000100c98	kernel.asm	/^ffff800000100c98:	be 0f 00 00 00       	mov    $0xf,%esi$/;"	l
ffff800000100c9d	kernel.asm	/^ffff800000100c9d:	bf d4 03 00 00       	mov    $0x3d4,%edi$/;"	l
ffff800000100ca2	kernel.asm	/^ffff800000100ca2:	48 b8 10 06 10 00 00 	movabs $0xffff800000100610,%rax$/;"	l
ffff800000100ca9	kernel.asm	/^ffff800000100ca9:	80 ff ff $/;"	l
ffff800000100cac	kernel.asm	/^ffff800000100cac:	ff d0                	callq  *%rax$/;"	l
ffff800000100cae	kernel.asm	/^ffff800000100cae:	bf d5 03 00 00       	mov    $0x3d5,%edi$/;"	l
ffff800000100cb3	kernel.asm	/^ffff800000100cb3:	48 b8 f2 05 10 00 00 	movabs $0xffff8000001005f2,%rax$/;"	l
ffff800000100cba	kernel.asm	/^ffff800000100cba:	80 ff ff $/;"	l
ffff800000100cbd	kernel.asm	/^ffff800000100cbd:	ff d0                	callq  *%rax$/;"	l
ffff800000100cbf	kernel.asm	/^ffff800000100cbf:	0f b6 c0             	movzbl %al,%eax$/;"	l
ffff800000100cc2	kernel.asm	/^ffff800000100cc2:	09 45 fc             	or     %eax,-0x4(%rbp)$/;"	l
ffff800000100cc5	kernel.asm	/^ffff800000100cc5:	83 7d ec 0a          	cmpl   $0xa,-0x14(%rbp)$/;"	l
ffff800000100cc9	kernel.asm	/^ffff800000100cc9:	75 30                	jne    ffff800000100cfb <cgaputc+0x9e>$/;"	l
ffff800000100ccb	kernel.asm	/^ffff800000100ccb:	8b 4d fc             	mov    -0x4(%rbp),%ecx$/;"	l
ffff800000100cce	kernel.asm	/^ffff800000100cce:	ba 67 66 66 66       	mov    $0x66666667,%edx$/;"	l
ffff800000100cd3	kernel.asm	/^ffff800000100cd3:	89 c8                	mov    %ecx,%eax$/;"	l
ffff800000100cd5	kernel.asm	/^ffff800000100cd5:	f7 ea                	imul   %edx$/;"	l
ffff800000100cd7	kernel.asm	/^ffff800000100cd7:	c1 fa 05             	sar    $0x5,%edx$/;"	l
ffff800000100cda	kernel.asm	/^ffff800000100cda:	89 c8                	mov    %ecx,%eax$/;"	l
ffff800000100cdc	kernel.asm	/^ffff800000100cdc:	c1 f8 1f             	sar    $0x1f,%eax$/;"	l
ffff800000100cdf	kernel.asm	/^ffff800000100cdf:	29 c2                	sub    %eax,%edx$/;"	l
ffff800000100ce1	kernel.asm	/^ffff800000100ce1:	89 d0                	mov    %edx,%eax$/;"	l
ffff800000100ce3	kernel.asm	/^ffff800000100ce3:	c1 e0 02             	shl    $0x2,%eax$/;"	l
ffff800000100ce6	kernel.asm	/^ffff800000100ce6:	01 d0                	add    %edx,%eax$/;"	l
ffff800000100ce8	kernel.asm	/^ffff800000100ce8:	c1 e0 04             	shl    $0x4,%eax$/;"	l
ffff800000100ceb	kernel.asm	/^ffff800000100ceb:	29 c1                	sub    %eax,%ecx$/;"	l
ffff800000100ced	kernel.asm	/^ffff800000100ced:	89 ca                	mov    %ecx,%edx$/;"	l
ffff800000100cef	kernel.asm	/^ffff800000100cef:	b8 50 00 00 00       	mov    $0x50,%eax$/;"	l
ffff800000100cf4	kernel.asm	/^ffff800000100cf4:	29 d0                	sub    %edx,%eax$/;"	l
ffff800000100cf6	kernel.asm	/^ffff800000100cf6:	01 45 fc             	add    %eax,-0x4(%rbp)$/;"	l
ffff800000100cf9	kernel.asm	/^ffff800000100cf9:	eb 3f                	jmp    ffff800000100d3a <cgaputc+0xdd>$/;"	l
ffff800000100cfb	kernel.asm	/^ffff800000100cfb:	81 7d ec 00 01 00 00 	cmpl   $0x100,-0x14(%rbp)$/;"	l
ffff800000100d02	kernel.asm	/^ffff800000100d02:	75 0c                	jne    ffff800000100d10 <cgaputc+0xb3>$/;"	l
ffff800000100d04	kernel.asm	/^ffff800000100d04:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)$/;"	l
ffff800000100d08	kernel.asm	/^ffff800000100d08:	7e 30                	jle    ffff800000100d3a <cgaputc+0xdd>$/;"	l
ffff800000100d0a	kernel.asm	/^ffff800000100d0a:	83 6d fc 01          	subl   $0x1,-0x4(%rbp)$/;"	l
ffff800000100d0e	kernel.asm	/^ffff800000100d0e:	eb 2a                	jmp    ffff800000100d3a <cgaputc+0xdd>$/;"	l
ffff800000100d10	kernel.asm	/^ffff800000100d10:	48 b8 18 d0 10 00 00 	movabs $0xffff80000010d018,%rax$/;"	l
ffff800000100d17	kernel.asm	/^ffff800000100d17:	80 ff ff $/;"	l
ffff800000100d1a	kernel.asm	/^ffff800000100d1a:	48 8b 08             	mov    (%rax),%rcx$/;"	l
ffff800000100d1d	kernel.asm	/^ffff800000100d1d:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff800000100d20	kernel.asm	/^ffff800000100d20:	8d 50 01             	lea    0x1(%rax),%edx$/;"	l
ffff800000100d23	kernel.asm	/^ffff800000100d23:	89 55 fc             	mov    %edx,-0x4(%rbp)$/;"	l
ffff800000100d26	kernel.asm	/^ffff800000100d26:	48 98                	cltq   $/;"	l
ffff800000100d28	kernel.asm	/^ffff800000100d28:	48 01 c0             	add    %rax,%rax$/;"	l
ffff800000100d2b	kernel.asm	/^ffff800000100d2b:	48 01 c8             	add    %rcx,%rax$/;"	l
ffff800000100d2e	kernel.asm	/^ffff800000100d2e:	8b 55 ec             	mov    -0x14(%rbp),%edx$/;"	l
ffff800000100d31	kernel.asm	/^ffff800000100d31:	0f b6 d2             	movzbl %dl,%edx$/;"	l
ffff800000100d34	kernel.asm	/^ffff800000100d34:	80 ce 07             	or     $0x7,%dh$/;"	l
ffff800000100d37	kernel.asm	/^ffff800000100d37:	66 89 10             	mov    %dx,(%rax)$/;"	l
ffff800000100d3a	kernel.asm	/^ffff800000100d3a:	81 7d fc 7f 07 00 00 	cmpl   $0x77f,-0x4(%rbp)$/;"	l
ffff800000100d41	kernel.asm	/^ffff800000100d41:	7e 76                	jle    ffff800000100db9 <cgaputc+0x15c>$/;"	l
ffff800000100d43	kernel.asm	/^ffff800000100d43:	48 b8 18 d0 10 00 00 	movabs $0xffff80000010d018,%rax$/;"	l
ffff800000100d4a	kernel.asm	/^ffff800000100d4a:	80 ff ff $/;"	l
ffff800000100d4d	kernel.asm	/^ffff800000100d4d:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff800000100d50	kernel.asm	/^ffff800000100d50:	48 8d 88 a0 00 00 00 	lea    0xa0(%rax),%rcx$/;"	l
ffff800000100d57	kernel.asm	/^ffff800000100d57:	48 b8 18 d0 10 00 00 	movabs $0xffff80000010d018,%rax$/;"	l
ffff800000100d5e	kernel.asm	/^ffff800000100d5e:	80 ff ff $/;"	l
ffff800000100d61	kernel.asm	/^ffff800000100d61:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff800000100d64	kernel.asm	/^ffff800000100d64:	ba 60 0e 00 00       	mov    $0xe60,%edx$/;"	l
ffff800000100d69	kernel.asm	/^ffff800000100d69:	48 89 ce             	mov    %rcx,%rsi$/;"	l
ffff800000100d6c	kernel.asm	/^ffff800000100d6c:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000100d6f	kernel.asm	/^ffff800000100d6f:	48 b8 98 76 10 00 00 	movabs $0xffff800000107698,%rax$/;"	l
ffff800000100d76	kernel.asm	/^ffff800000100d76:	80 ff ff $/;"	l
ffff800000100d79	kernel.asm	/^ffff800000100d79:	ff d0                	callq  *%rax$/;"	l
ffff800000100d7b	kernel.asm	/^ffff800000100d7b:	83 6d fc 50          	subl   $0x50,-0x4(%rbp)$/;"	l
ffff800000100d7f	kernel.asm	/^ffff800000100d7f:	b8 80 07 00 00       	mov    $0x780,%eax$/;"	l
ffff800000100d84	kernel.asm	/^ffff800000100d84:	2b 45 fc             	sub    -0x4(%rbp),%eax$/;"	l
ffff800000100d87	kernel.asm	/^ffff800000100d87:	48 98                	cltq   $/;"	l
ffff800000100d89	kernel.asm	/^ffff800000100d89:	8d 14 00             	lea    (%rax,%rax,1),%edx$/;"	l
ffff800000100d8c	kernel.asm	/^ffff800000100d8c:	48 b8 18 d0 10 00 00 	movabs $0xffff80000010d018,%rax$/;"	l
ffff800000100d93	kernel.asm	/^ffff800000100d93:	80 ff ff $/;"	l
ffff800000100d96	kernel.asm	/^ffff800000100d96:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff800000100d99	kernel.asm	/^ffff800000100d99:	8b 4d fc             	mov    -0x4(%rbp),%ecx$/;"	l
ffff800000100d9c	kernel.asm	/^ffff800000100d9c:	48 63 c9             	movslq %ecx,%rcx$/;"	l
ffff800000100d9f	kernel.asm	/^ffff800000100d9f:	48 01 c9             	add    %rcx,%rcx$/;"	l
ffff800000100da2	kernel.asm	/^ffff800000100da2:	48 01 c8             	add    %rcx,%rax$/;"	l
ffff800000100da5	kernel.asm	/^ffff800000100da5:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffff800000100daa	kernel.asm	/^ffff800000100daa:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000100dad	kernel.asm	/^ffff800000100dad:	48 b8 9b 75 10 00 00 	movabs $0xffff80000010759b,%rax$/;"	l
ffff800000100db4	kernel.asm	/^ffff800000100db4:	80 ff ff $/;"	l
ffff800000100db7	kernel.asm	/^ffff800000100db7:	ff d0                	callq  *%rax$/;"	l
ffff800000100db9	kernel.asm	/^ffff800000100db9:	be 0e 00 00 00       	mov    $0xe,%esi$/;"	l
ffff800000100dbe	kernel.asm	/^ffff800000100dbe:	bf d4 03 00 00       	mov    $0x3d4,%edi$/;"	l
ffff800000100dc3	kernel.asm	/^ffff800000100dc3:	48 b8 10 06 10 00 00 	movabs $0xffff800000100610,%rax$/;"	l
ffff800000100dca	kernel.asm	/^ffff800000100dca:	80 ff ff $/;"	l
ffff800000100dcd	kernel.asm	/^ffff800000100dcd:	ff d0                	callq  *%rax$/;"	l
ffff800000100dcf	kernel.asm	/^ffff800000100dcf:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff800000100dd2	kernel.asm	/^ffff800000100dd2:	c1 f8 08             	sar    $0x8,%eax$/;"	l
ffff800000100dd5	kernel.asm	/^ffff800000100dd5:	0f b6 c0             	movzbl %al,%eax$/;"	l
ffff800000100dd8	kernel.asm	/^ffff800000100dd8:	89 c6                	mov    %eax,%esi$/;"	l
ffff800000100dda	kernel.asm	/^ffff800000100dda:	bf d5 03 00 00       	mov    $0x3d5,%edi$/;"	l
ffff800000100ddf	kernel.asm	/^ffff800000100ddf:	48 b8 10 06 10 00 00 	movabs $0xffff800000100610,%rax$/;"	l
ffff800000100de6	kernel.asm	/^ffff800000100de6:	80 ff ff $/;"	l
ffff800000100de9	kernel.asm	/^ffff800000100de9:	ff d0                	callq  *%rax$/;"	l
ffff800000100deb	kernel.asm	/^ffff800000100deb:	be 0f 00 00 00       	mov    $0xf,%esi$/;"	l
ffff800000100df0	kernel.asm	/^ffff800000100df0:	bf d4 03 00 00       	mov    $0x3d4,%edi$/;"	l
ffff800000100df5	kernel.asm	/^ffff800000100df5:	48 b8 10 06 10 00 00 	movabs $0xffff800000100610,%rax$/;"	l
ffff800000100dfc	kernel.asm	/^ffff800000100dfc:	80 ff ff $/;"	l
ffff800000100dff	kernel.asm	/^ffff800000100dff:	ff d0                	callq  *%rax$/;"	l
ffff800000100e01	kernel.asm	/^ffff800000100e01:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff800000100e04	kernel.asm	/^ffff800000100e04:	0f b6 c0             	movzbl %al,%eax$/;"	l
ffff800000100e07	kernel.asm	/^ffff800000100e07:	89 c6                	mov    %eax,%esi$/;"	l
ffff800000100e09	kernel.asm	/^ffff800000100e09:	bf d5 03 00 00       	mov    $0x3d5,%edi$/;"	l
ffff800000100e0e	kernel.asm	/^ffff800000100e0e:	48 b8 10 06 10 00 00 	movabs $0xffff800000100610,%rax$/;"	l
ffff800000100e15	kernel.asm	/^ffff800000100e15:	80 ff ff $/;"	l
ffff800000100e18	kernel.asm	/^ffff800000100e18:	ff d0                	callq  *%rax$/;"	l
ffff800000100e1a	kernel.asm	/^ffff800000100e1a:	48 b8 18 d0 10 00 00 	movabs $0xffff80000010d018,%rax$/;"	l
ffff800000100e21	kernel.asm	/^ffff800000100e21:	80 ff ff $/;"	l
ffff800000100e24	kernel.asm	/^ffff800000100e24:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff800000100e27	kernel.asm	/^ffff800000100e27:	8b 55 fc             	mov    -0x4(%rbp),%edx$/;"	l
ffff800000100e2a	kernel.asm	/^ffff800000100e2a:	48 63 d2             	movslq %edx,%rdx$/;"	l
ffff800000100e2d	kernel.asm	/^ffff800000100e2d:	48 01 d2             	add    %rdx,%rdx$/;"	l
ffff800000100e30	kernel.asm	/^ffff800000100e30:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff800000100e33	kernel.asm	/^ffff800000100e33:	66 c7 00 20 07       	movw   $0x720,(%rax)$/;"	l
ffff800000100e38	kernel.asm	/^ffff800000100e38:	90                   	nop$/;"	l
ffff800000100e39	kernel.asm	/^ffff800000100e39:	c9                   	leaveq $/;"	l
ffff800000100e3a	kernel.asm	/^ffff800000100e3a:	c3                   	retq   $/;"	l
ffff800000100e3b	kernel.asm	/^ffff800000100e3b <consputc>:$/;"	l
ffff800000100e3b	kernel.asm	/^ffff800000100e3b:	55                   	push   %rbp$/;"	l
ffff800000100e3c	kernel.asm	/^ffff800000100e3c:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000100e3f	kernel.asm	/^ffff800000100e3f:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff800000100e43	kernel.asm	/^ffff800000100e43:	89 7d fc             	mov    %edi,-0x4(%rbp)$/;"	l
ffff800000100e46	kernel.asm	/^ffff800000100e46:	48 b8 b8 34 11 00 00 	movabs $0xffff8000001134b8,%rax$/;"	l
ffff800000100e4d	kernel.asm	/^ffff800000100e4d:	80 ff ff $/;"	l
ffff800000100e50	kernel.asm	/^ffff800000100e50:	8b 00                	mov    (%rax),%eax$/;"	l
ffff800000100e52	kernel.asm	/^ffff800000100e52:	85 c0                	test   %eax,%eax$/;"	l
ffff800000100e54	kernel.asm	/^ffff800000100e54:	74 0e                	je     ffff800000100e64 <consputc+0x29>$/;"	l
ffff800000100e56	kernel.asm	/^ffff800000100e56:	48 b8 7e 06 10 00 00 	movabs $0xffff80000010067e,%rax$/;"	l
ffff800000100e5d	kernel.asm	/^ffff800000100e5d:	80 ff ff $/;"	l
ffff800000100e60	kernel.asm	/^ffff800000100e60:	ff d0                	callq  *%rax$/;"	l
ffff800000100e62	kernel.asm	/^ffff800000100e62:	eb fe                	jmp    ffff800000100e62 <consputc+0x27>$/;"	l
ffff800000100e64	kernel.asm	/^ffff800000100e64:	81 7d fc 00 01 00 00 	cmpl   $0x100,-0x4(%rbp)$/;"	l
ffff800000100e6b	kernel.asm	/^ffff800000100e6b:	75 35                	jne    ffff800000100ea2 <consputc+0x67>$/;"	l
ffff800000100e6d	kernel.asm	/^ffff800000100e6d:	bf 08 00 00 00       	mov    $0x8,%edi$/;"	l
ffff800000100e72	kernel.asm	/^ffff800000100e72:	48 b8 0f 9a 10 00 00 	movabs $0xffff800000109a0f,%rax$/;"	l
ffff800000100e79	kernel.asm	/^ffff800000100e79:	80 ff ff $/;"	l
ffff800000100e7c	kernel.asm	/^ffff800000100e7c:	ff d0                	callq  *%rax$/;"	l
ffff800000100e7e	kernel.asm	/^ffff800000100e7e:	bf 20 00 00 00       	mov    $0x20,%edi$/;"	l
ffff800000100e83	kernel.asm	/^ffff800000100e83:	48 b8 0f 9a 10 00 00 	movabs $0xffff800000109a0f,%rax$/;"	l
ffff800000100e8a	kernel.asm	/^ffff800000100e8a:	80 ff ff $/;"	l
ffff800000100e8d	kernel.asm	/^ffff800000100e8d:	ff d0                	callq  *%rax$/;"	l
ffff800000100e8f	kernel.asm	/^ffff800000100e8f:	bf 08 00 00 00       	mov    $0x8,%edi$/;"	l
ffff800000100e94	kernel.asm	/^ffff800000100e94:	48 b8 0f 9a 10 00 00 	movabs $0xffff800000109a0f,%rax$/;"	l
ffff800000100e9b	kernel.asm	/^ffff800000100e9b:	80 ff ff $/;"	l
ffff800000100e9e	kernel.asm	/^ffff800000100e9e:	ff d0                	callq  *%rax$/;"	l
ffff800000100ea0	kernel.asm	/^ffff800000100ea0:	eb 11                	jmp    ffff800000100eb3 <consputc+0x78>$/;"	l
ffff800000100ea2	kernel.asm	/^ffff800000100ea2:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff800000100ea5	kernel.asm	/^ffff800000100ea5:	89 c7                	mov    %eax,%edi$/;"	l
ffff800000100ea7	kernel.asm	/^ffff800000100ea7:	48 b8 0f 9a 10 00 00 	movabs $0xffff800000109a0f,%rax$/;"	l
ffff800000100eae	kernel.asm	/^ffff800000100eae:	80 ff ff $/;"	l
ffff800000100eb1	kernel.asm	/^ffff800000100eb1:	ff d0                	callq  *%rax$/;"	l
ffff800000100eb3	kernel.asm	/^ffff800000100eb3:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff800000100eb6	kernel.asm	/^ffff800000100eb6:	89 c7                	mov    %eax,%edi$/;"	l
ffff800000100eb8	kernel.asm	/^ffff800000100eb8:	48 b8 5d 0c 10 00 00 	movabs $0xffff800000100c5d,%rax$/;"	l
ffff800000100ebf	kernel.asm	/^ffff800000100ebf:	80 ff ff $/;"	l
ffff800000100ec2	kernel.asm	/^ffff800000100ec2:	ff d0                	callq  *%rax$/;"	l
ffff800000100ec4	kernel.asm	/^ffff800000100ec4:	90                   	nop$/;"	l
ffff800000100ec5	kernel.asm	/^ffff800000100ec5:	c9                   	leaveq $/;"	l
ffff800000100ec6	kernel.asm	/^ffff800000100ec6:	c3                   	retq   $/;"	l
ffff800000100ec7	kernel.asm	/^ffff800000100ec7 <consoleintr>:$/;"	l
ffff800000100ec7	kernel.asm	/^ffff800000100ec7:	55                   	push   %rbp$/;"	l
ffff800000100ec8	kernel.asm	/^ffff800000100ec8:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000100ecb	kernel.asm	/^ffff800000100ecb:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ffff800000100ecf	kernel.asm	/^ffff800000100ecf:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
ffff800000100ed3	kernel.asm	/^ffff800000100ed3:	48 bf c0 33 11 00 00 	movabs $0xffff8000001133c0,%rdi$/;"	l
ffff800000100eda	kernel.asm	/^ffff800000100eda:	80 ff ff $/;"	l
ffff800000100edd	kernel.asm	/^ffff800000100edd:	48 b8 ff 71 10 00 00 	movabs $0xffff8000001071ff,%rax$/;"	l
ffff800000100ee4	kernel.asm	/^ffff800000100ee4:	80 ff ff $/;"	l
ffff800000100ee7	kernel.asm	/^ffff800000100ee7:	ff d0                	callq  *%rax$/;"	l
ffff800000100ee9	kernel.asm	/^ffff800000100ee9:	e9 58 02 00 00       	jmpq   ffff800000101146 <consoleintr+0x27f>$/;"	l
ffff800000100eee	kernel.asm	/^ffff800000100eee:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff800000100ef1	kernel.asm	/^ffff800000100ef1:	83 f8 15             	cmp    $0x15,%eax$/;"	l
ffff800000100ef4	kernel.asm	/^ffff800000100ef4:	0f 84 8b 00 00 00    	je     ffff800000100f85 <consoleintr+0xbe>$/;"	l
ffff800000100efa	kernel.asm	/^ffff800000100efa:	83 f8 15             	cmp    $0x15,%eax$/;"	l
ffff800000100efd	kernel.asm	/^ffff800000100efd:	7f 13                	jg     ffff800000100f12 <consoleintr+0x4b>$/;"	l
ffff800000100eff	kernel.asm	/^ffff800000100eff:	83 f8 08             	cmp    $0x8,%eax$/;"	l
ffff800000100f02	kernel.asm	/^ffff800000100f02:	0f 84 db 00 00 00    	je     ffff800000100fe3 <consoleintr+0x11c>$/;"	l
ffff800000100f08	kernel.asm	/^ffff800000100f08:	83 f8 10             	cmp    $0x10,%eax$/;"	l
ffff800000100f0b	kernel.asm	/^ffff800000100f0b:	74 33                	je     ffff800000100f40 <consoleintr+0x79>$/;"	l
ffff800000100f0d	kernel.asm	/^ffff800000100f0d:	e9 32 01 00 00       	jmpq   ffff800000101044 <consoleintr+0x17d>$/;"	l
ffff800000100f12	kernel.asm	/^ffff800000100f12:	83 f8 1a             	cmp    $0x1a,%eax$/;"	l
ffff800000100f15	kernel.asm	/^ffff800000100f15:	74 0e                	je     ffff800000100f25 <consoleintr+0x5e>$/;"	l
ffff800000100f17	kernel.asm	/^ffff800000100f17:	83 f8 7f             	cmp    $0x7f,%eax$/;"	l
ffff800000100f1a	kernel.asm	/^ffff800000100f1a:	0f 84 c3 00 00 00    	je     ffff800000100fe3 <consoleintr+0x11c>$/;"	l
ffff800000100f20	kernel.asm	/^ffff800000100f20:	e9 1f 01 00 00       	jmpq   ffff800000101044 <consoleintr+0x17d>$/;"	l
ffff800000100f25	kernel.asm	/^ffff800000100f25:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffff800000100f2a	kernel.asm	/^ffff800000100f2a:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
ffff800000100f2f	kernel.asm	/^ffff800000100f2f:	48 b8 2f 06 10 00 00 	movabs $0xffff80000010062f,%rax$/;"	l
ffff800000100f36	kernel.asm	/^ffff800000100f36:	80 ff ff $/;"	l
ffff800000100f39	kernel.asm	/^ffff800000100f39:	ff d0                	callq  *%rax$/;"	l
ffff800000100f3b	kernel.asm	/^ffff800000100f3b:	e9 06 02 00 00       	jmpq   ffff800000101146 <consoleintr+0x27f>$/;"	l
ffff800000100f40	kernel.asm	/^ffff800000100f40:	48 b8 8a 6e 10 00 00 	movabs $0xffff800000106e8a,%rax$/;"	l
ffff800000100f47	kernel.asm	/^ffff800000100f47:	80 ff ff $/;"	l
ffff800000100f4a	kernel.asm	/^ffff800000100f4a:	ff d0                	callq  *%rax$/;"	l
ffff800000100f4c	kernel.asm	/^ffff800000100f4c:	e9 f5 01 00 00       	jmpq   ffff800000101146 <consoleintr+0x27f>$/;"	l
ffff800000100f51	kernel.asm	/^ffff800000100f51:	48 b8 c0 33 11 00 00 	movabs $0xffff8000001133c0,%rax$/;"	l
ffff800000100f58	kernel.asm	/^ffff800000100f58:	80 ff ff $/;"	l
ffff800000100f5b	kernel.asm	/^ffff800000100f5b:	8b 80 f0 00 00 00    	mov    0xf0(%rax),%eax$/;"	l
ffff800000100f61	kernel.asm	/^ffff800000100f61:	8d 50 ff             	lea    -0x1(%rax),%edx$/;"	l
ffff800000100f64	kernel.asm	/^ffff800000100f64:	48 b8 c0 33 11 00 00 	movabs $0xffff8000001133c0,%rax$/;"	l
ffff800000100f6b	kernel.asm	/^ffff800000100f6b:	80 ff ff $/;"	l
ffff800000100f6e	kernel.asm	/^ffff800000100f6e:	89 90 f0 00 00 00    	mov    %edx,0xf0(%rax)$/;"	l
ffff800000100f74	kernel.asm	/^ffff800000100f74:	bf 00 01 00 00       	mov    $0x100,%edi$/;"	l
ffff800000100f79	kernel.asm	/^ffff800000100f79:	48 b8 3b 0e 10 00 00 	movabs $0xffff800000100e3b,%rax$/;"	l
ffff800000100f80	kernel.asm	/^ffff800000100f80:	80 ff ff $/;"	l
ffff800000100f83	kernel.asm	/^ffff800000100f83:	ff d0                	callq  *%rax$/;"	l
ffff800000100f85	kernel.asm	/^ffff800000100f85:	48 b8 c0 33 11 00 00 	movabs $0xffff8000001133c0,%rax$/;"	l
ffff800000100f8c	kernel.asm	/^ffff800000100f8c:	80 ff ff $/;"	l
ffff800000100f8f	kernel.asm	/^ffff800000100f8f:	8b 90 f0 00 00 00    	mov    0xf0(%rax),%edx$/;"	l
ffff800000100f95	kernel.asm	/^ffff800000100f95:	48 b8 c0 33 11 00 00 	movabs $0xffff8000001133c0,%rax$/;"	l
ffff800000100f9c	kernel.asm	/^ffff800000100f9c:	80 ff ff $/;"	l
ffff800000100f9f	kernel.asm	/^ffff800000100f9f:	8b 80 ec 00 00 00    	mov    0xec(%rax),%eax$/;"	l
ffff800000100fa5	kernel.asm	/^ffff800000100fa5:	39 c2                	cmp    %eax,%edx$/;"	l
ffff800000100fa7	kernel.asm	/^ffff800000100fa7:	0f 84 99 01 00 00    	je     ffff800000101146 <consoleintr+0x27f>$/;"	l
ffff800000100fad	kernel.asm	/^ffff800000100fad:	48 b8 c0 33 11 00 00 	movabs $0xffff8000001133c0,%rax$/;"	l
ffff800000100fb4	kernel.asm	/^ffff800000100fb4:	80 ff ff $/;"	l
ffff800000100fb7	kernel.asm	/^ffff800000100fb7:	8b 80 f0 00 00 00    	mov    0xf0(%rax),%eax$/;"	l
ffff800000100fbd	kernel.asm	/^ffff800000100fbd:	83 e8 01             	sub    $0x1,%eax$/;"	l
ffff800000100fc0	kernel.asm	/^ffff800000100fc0:	83 e0 7f             	and    $0x7f,%eax$/;"	l
ffff800000100fc3	kernel.asm	/^ffff800000100fc3:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000100fc5	kernel.asm	/^ffff800000100fc5:	48 b8 c0 33 11 00 00 	movabs $0xffff8000001133c0,%rax$/;"	l
ffff800000100fcc	kernel.asm	/^ffff800000100fcc:	80 ff ff $/;"	l
ffff800000100fcf	kernel.asm	/^ffff800000100fcf:	89 d2                	mov    %edx,%edx$/;"	l
ffff800000100fd1	kernel.asm	/^ffff800000100fd1:	0f b6 44 10 68       	movzbl 0x68(%rax,%rdx,1),%eax$/;"	l
ffff800000100fd6	kernel.asm	/^ffff800000100fd6:	3c 0a                	cmp    $0xa,%al$/;"	l
ffff800000100fd8	kernel.asm	/^ffff800000100fd8:	0f 85 73 ff ff ff    	jne    ffff800000100f51 <consoleintr+0x8a>$/;"	l
ffff800000100fde	kernel.asm	/^ffff800000100fde:	e9 63 01 00 00       	jmpq   ffff800000101146 <consoleintr+0x27f>$/;"	l
ffff800000100fe3	kernel.asm	/^ffff800000100fe3:	48 b8 c0 33 11 00 00 	movabs $0xffff8000001133c0,%rax$/;"	l
ffff800000100fea	kernel.asm	/^ffff800000100fea:	80 ff ff $/;"	l
ffff800000100fed	kernel.asm	/^ffff800000100fed:	8b 90 f0 00 00 00    	mov    0xf0(%rax),%edx$/;"	l
ffff800000100ff3	kernel.asm	/^ffff800000100ff3:	48 b8 c0 33 11 00 00 	movabs $0xffff8000001133c0,%rax$/;"	l
ffff800000100ffa	kernel.asm	/^ffff800000100ffa:	80 ff ff $/;"	l
ffff800000100ffd	kernel.asm	/^ffff800000100ffd:	8b 80 ec 00 00 00    	mov    0xec(%rax),%eax$/;"	l
ffff800000101003	kernel.asm	/^ffff800000101003:	39 c2                	cmp    %eax,%edx$/;"	l
ffff800000101005	kernel.asm	/^ffff800000101005:	0f 84 3b 01 00 00    	je     ffff800000101146 <consoleintr+0x27f>$/;"	l
ffff80000010100b	kernel.asm	/^ffff80000010100b:	48 b8 c0 33 11 00 00 	movabs $0xffff8000001133c0,%rax$/;"	l
ffff800000101012	kernel.asm	/^ffff800000101012:	80 ff ff $/;"	l
ffff800000101015	kernel.asm	/^ffff800000101015:	8b 80 f0 00 00 00    	mov    0xf0(%rax),%eax$/;"	l
ffff80000010101b	kernel.asm	/^ffff80000010101b:	8d 50 ff             	lea    -0x1(%rax),%edx$/;"	l
ffff80000010101e	kernel.asm	/^ffff80000010101e:	48 b8 c0 33 11 00 00 	movabs $0xffff8000001133c0,%rax$/;"	l
ffff800000101025	kernel.asm	/^ffff800000101025:	80 ff ff $/;"	l
ffff800000101028	kernel.asm	/^ffff800000101028:	89 90 f0 00 00 00    	mov    %edx,0xf0(%rax)$/;"	l
ffff80000010102e	kernel.asm	/^ffff80000010102e:	bf 00 01 00 00       	mov    $0x100,%edi$/;"	l
ffff800000101033	kernel.asm	/^ffff800000101033:	48 b8 3b 0e 10 00 00 	movabs $0xffff800000100e3b,%rax$/;"	l
ffff80000010103a	kernel.asm	/^ffff80000010103a:	80 ff ff $/;"	l
ffff80000010103d	kernel.asm	/^ffff80000010103d:	ff d0                	callq  *%rax$/;"	l
ffff80000010103f	kernel.asm	/^ffff80000010103f:	e9 02 01 00 00       	jmpq   ffff800000101146 <consoleintr+0x27f>$/;"	l
ffff800000101044	kernel.asm	/^ffff800000101044:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)$/;"	l
ffff800000101048	kernel.asm	/^ffff800000101048:	0f 84 f7 00 00 00    	je     ffff800000101145 <consoleintr+0x27e>$/;"	l
ffff80000010104e	kernel.asm	/^ffff80000010104e:	48 b8 c0 33 11 00 00 	movabs $0xffff8000001133c0,%rax$/;"	l
ffff800000101055	kernel.asm	/^ffff800000101055:	80 ff ff $/;"	l
ffff800000101058	kernel.asm	/^ffff800000101058:	8b 90 f0 00 00 00    	mov    0xf0(%rax),%edx$/;"	l
ffff80000010105e	kernel.asm	/^ffff80000010105e:	48 b8 c0 33 11 00 00 	movabs $0xffff8000001133c0,%rax$/;"	l
ffff800000101065	kernel.asm	/^ffff800000101065:	80 ff ff $/;"	l
ffff800000101068	kernel.asm	/^ffff800000101068:	8b 80 e8 00 00 00    	mov    0xe8(%rax),%eax$/;"	l
ffff80000010106e	kernel.asm	/^ffff80000010106e:	29 c2                	sub    %eax,%edx$/;"	l
ffff800000101070	kernel.asm	/^ffff800000101070:	89 d0                	mov    %edx,%eax$/;"	l
ffff800000101072	kernel.asm	/^ffff800000101072:	83 f8 7f             	cmp    $0x7f,%eax$/;"	l
ffff800000101075	kernel.asm	/^ffff800000101075:	0f 87 ca 00 00 00    	ja     ffff800000101145 <consoleintr+0x27e>$/;"	l
ffff80000010107b	kernel.asm	/^ffff80000010107b:	83 7d fc 0d          	cmpl   $0xd,-0x4(%rbp)$/;"	l
ffff80000010107f	kernel.asm	/^ffff80000010107f:	74 05                	je     ffff800000101086 <consoleintr+0x1bf>$/;"	l
ffff800000101081	kernel.asm	/^ffff800000101081:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff800000101084	kernel.asm	/^ffff800000101084:	eb 05                	jmp    ffff80000010108b <consoleintr+0x1c4>$/;"	l
ffff800000101086	kernel.asm	/^ffff800000101086:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
ffff80000010108b	kernel.asm	/^ffff80000010108b:	89 45 fc             	mov    %eax,-0x4(%rbp)$/;"	l
ffff80000010108e	kernel.asm	/^ffff80000010108e:	48 b8 c0 33 11 00 00 	movabs $0xffff8000001133c0,%rax$/;"	l
ffff800000101095	kernel.asm	/^ffff800000101095:	80 ff ff $/;"	l
ffff800000101098	kernel.asm	/^ffff800000101098:	8b 80 f0 00 00 00    	mov    0xf0(%rax),%eax$/;"	l
ffff80000010109e	kernel.asm	/^ffff80000010109e:	8d 48 01             	lea    0x1(%rax),%ecx$/;"	l
ffff8000001010a1	kernel.asm	/^ffff8000001010a1:	48 ba c0 33 11 00 00 	movabs $0xffff8000001133c0,%rdx$/;"	l
ffff8000001010a8	kernel.asm	/^ffff8000001010a8:	80 ff ff $/;"	l
ffff8000001010ab	kernel.asm	/^ffff8000001010ab:	89 8a f0 00 00 00    	mov    %ecx,0xf0(%rdx)$/;"	l
ffff8000001010b1	kernel.asm	/^ffff8000001010b1:	83 e0 7f             	and    $0x7f,%eax$/;"	l
ffff8000001010b4	kernel.asm	/^ffff8000001010b4:	89 c2                	mov    %eax,%edx$/;"	l
ffff8000001010b6	kernel.asm	/^ffff8000001010b6:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff8000001010b9	kernel.asm	/^ffff8000001010b9:	89 c1                	mov    %eax,%ecx$/;"	l
ffff8000001010bb	kernel.asm	/^ffff8000001010bb:	48 b8 c0 33 11 00 00 	movabs $0xffff8000001133c0,%rax$/;"	l
ffff8000001010c2	kernel.asm	/^ffff8000001010c2:	80 ff ff $/;"	l
ffff8000001010c5	kernel.asm	/^ffff8000001010c5:	89 d2                	mov    %edx,%edx$/;"	l
ffff8000001010c7	kernel.asm	/^ffff8000001010c7:	88 4c 10 68          	mov    %cl,0x68(%rax,%rdx,1)$/;"	l
ffff8000001010cb	kernel.asm	/^ffff8000001010cb:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff8000001010ce	kernel.asm	/^ffff8000001010ce:	89 c7                	mov    %eax,%edi$/;"	l
ffff8000001010d0	kernel.asm	/^ffff8000001010d0:	48 b8 3b 0e 10 00 00 	movabs $0xffff800000100e3b,%rax$/;"	l
ffff8000001010d7	kernel.asm	/^ffff8000001010d7:	80 ff ff $/;"	l
ffff8000001010da	kernel.asm	/^ffff8000001010da:	ff d0                	callq  *%rax$/;"	l
ffff8000001010dc	kernel.asm	/^ffff8000001010dc:	83 7d fc 0a          	cmpl   $0xa,-0x4(%rbp)$/;"	l
ffff8000001010e0	kernel.asm	/^ffff8000001010e0:	74 2d                	je     ffff80000010110f <consoleintr+0x248>$/;"	l
ffff8000001010e2	kernel.asm	/^ffff8000001010e2:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)$/;"	l
ffff8000001010e6	kernel.asm	/^ffff8000001010e6:	74 27                	je     ffff80000010110f <consoleintr+0x248>$/;"	l
ffff8000001010e8	kernel.asm	/^ffff8000001010e8:	48 b8 c0 33 11 00 00 	movabs $0xffff8000001133c0,%rax$/;"	l
ffff8000001010ef	kernel.asm	/^ffff8000001010ef:	80 ff ff $/;"	l
ffff8000001010f2	kernel.asm	/^ffff8000001010f2:	8b 90 f0 00 00 00    	mov    0xf0(%rax),%edx$/;"	l
ffff8000001010f8	kernel.asm	/^ffff8000001010f8:	48 b8 c0 33 11 00 00 	movabs $0xffff8000001133c0,%rax$/;"	l
ffff8000001010ff	kernel.asm	/^ffff8000001010ff:	80 ff ff $/;"	l
ffff800000101102	kernel.asm	/^ffff800000101102:	8b 80 e8 00 00 00    	mov    0xe8(%rax),%eax$/;"	l
ffff800000101108	kernel.asm	/^ffff800000101108:	83 e8 80             	sub    $0xffffff80,%eax$/;"	l
ffff80000010110b	kernel.asm	/^ffff80000010110b:	39 c2                	cmp    %eax,%edx$/;"	l
ffff80000010110d	kernel.asm	/^ffff80000010110d:	75 36                	jne    ffff800000101145 <consoleintr+0x27e>$/;"	l
ffff80000010110f	kernel.asm	/^ffff80000010110f:	48 b8 c0 33 11 00 00 	movabs $0xffff8000001133c0,%rax$/;"	l
ffff800000101116	kernel.asm	/^ffff800000101116:	80 ff ff $/;"	l
ffff800000101119	kernel.asm	/^ffff800000101119:	8b 90 f0 00 00 00    	mov    0xf0(%rax),%edx$/;"	l
ffff80000010111f	kernel.asm	/^ffff80000010111f:	48 b8 c0 33 11 00 00 	movabs $0xffff8000001133c0,%rax$/;"	l
ffff800000101126	kernel.asm	/^ffff800000101126:	80 ff ff $/;"	l
ffff800000101129	kernel.asm	/^ffff800000101129:	89 90 ec 00 00 00    	mov    %edx,0xec(%rax)$/;"	l
ffff80000010112f	kernel.asm	/^ffff80000010112f:	48 bf a8 34 11 00 00 	movabs $0xffff8000001134a8,%rdi$/;"	l
ffff800000101136	kernel.asm	/^ffff800000101136:	80 ff ff $/;"	l
ffff800000101139	kernel.asm	/^ffff800000101139:	48 b8 8b 6d 10 00 00 	movabs $0xffff800000106d8b,%rax$/;"	l
ffff800000101140	kernel.asm	/^ffff800000101140:	80 ff ff $/;"	l
ffff800000101143	kernel.asm	/^ffff800000101143:	ff d0                	callq  *%rax$/;"	l
ffff800000101145	kernel.asm	/^ffff800000101145:	90                   	nop$/;"	l
ffff800000101146	kernel.asm	/^ffff800000101146:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010114a	kernel.asm	/^ffff80000010114a:	ff d0                	callq  *%rax$/;"	l
ffff80000010114c	kernel.asm	/^ffff80000010114c:	89 45 fc             	mov    %eax,-0x4(%rbp)$/;"	l
ffff80000010114f	kernel.asm	/^ffff80000010114f:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)$/;"	l
ffff800000101153	kernel.asm	/^ffff800000101153:	0f 89 95 fd ff ff    	jns    ffff800000100eee <consoleintr+0x27>$/;"	l
ffff800000101159	kernel.asm	/^ffff800000101159:	48 bf c0 33 11 00 00 	movabs $0xffff8000001133c0,%rdi$/;"	l
ffff800000101160	kernel.asm	/^ffff800000101160:	80 ff ff $/;"	l
ffff800000101163	kernel.asm	/^ffff800000101163:	48 b8 98 72 10 00 00 	movabs $0xffff800000107298,%rax$/;"	l
ffff80000010116a	kernel.asm	/^ffff80000010116a:	80 ff ff $/;"	l
ffff80000010116d	kernel.asm	/^ffff80000010116d:	ff d0                	callq  *%rax$/;"	l
ffff80000010116f	kernel.asm	/^ffff80000010116f:	90                   	nop$/;"	l
ffff800000101170	kernel.asm	/^ffff800000101170:	c9                   	leaveq $/;"	l
ffff800000101171	kernel.asm	/^ffff800000101171:	c3                   	retq   $/;"	l
ffff800000101172	kernel.asm	/^ffff800000101172 <consoleread>:$/;"	l
ffff800000101172	kernel.asm	/^ffff800000101172:	55                   	push   %rbp$/;"	l
ffff800000101173	kernel.asm	/^ffff800000101173:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000101176	kernel.asm	/^ffff800000101176:	48 83 ec 30          	sub    $0x30,%rsp$/;"	l
ffff80000010117a	kernel.asm	/^ffff80000010117a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
ffff80000010117e	kernel.asm	/^ffff80000010117e:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)$/;"	l
ffff800000101182	kernel.asm	/^ffff800000101182:	89 55 dc             	mov    %edx,-0x24(%rbp)$/;"	l
ffff800000101185	kernel.asm	/^ffff800000101185:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000101189	kernel.asm	/^ffff800000101189:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010118c	kernel.asm	/^ffff80000010118c:	48 b8 5b 29 10 00 00 	movabs $0xffff80000010295b,%rax$/;"	l
ffff800000101193	kernel.asm	/^ffff800000101193:	80 ff ff $/;"	l
ffff800000101196	kernel.asm	/^ffff800000101196:	ff d0                	callq  *%rax$/;"	l
ffff800000101198	kernel.asm	/^ffff800000101198:	8b 45 dc             	mov    -0x24(%rbp),%eax$/;"	l
ffff80000010119b	kernel.asm	/^ffff80000010119b:	89 45 fc             	mov    %eax,-0x4(%rbp)$/;"	l
ffff80000010119e	kernel.asm	/^ffff80000010119e:	48 bf c0 33 11 00 00 	movabs $0xffff8000001133c0,%rdi$/;"	l
ffff8000001011a5	kernel.asm	/^ffff8000001011a5:	80 ff ff $/;"	l
ffff8000001011a8	kernel.asm	/^ffff8000001011a8:	48 b8 ff 71 10 00 00 	movabs $0xffff8000001071ff,%rax$/;"	l
ffff8000001011af	kernel.asm	/^ffff8000001011af:	80 ff ff $/;"	l
ffff8000001011b2	kernel.asm	/^ffff8000001011b2:	ff d0                	callq  *%rax$/;"	l
ffff8000001011b4	kernel.asm	/^ffff8000001011b4:	e9 1a 01 00 00       	jmpq   ffff8000001012d3 <consoleread+0x161>$/;"	l
ffff8000001011b9	kernel.asm	/^ffff8000001011b9:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff8000001011c0	kernel.asm	/^ffff8000001011c0:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff8000001011c4	kernel.asm	/^ffff8000001011c4:	8b 40 40             	mov    0x40(%rax),%eax$/;"	l
ffff8000001011c7	kernel.asm	/^ffff8000001011c7:	85 c0                	test   %eax,%eax$/;"	l
ffff8000001011c9	kernel.asm	/^ffff8000001011c9:	74 33                	je     ffff8000001011fe <consoleread+0x8c>$/;"	l
ffff8000001011cb	kernel.asm	/^ffff8000001011cb:	48 bf c0 33 11 00 00 	movabs $0xffff8000001133c0,%rdi$/;"	l
ffff8000001011d2	kernel.asm	/^ffff8000001011d2:	80 ff ff $/;"	l
ffff8000001011d5	kernel.asm	/^ffff8000001011d5:	48 b8 98 72 10 00 00 	movabs $0xffff800000107298,%rax$/;"	l
ffff8000001011dc	kernel.asm	/^ffff8000001011dc:	80 ff ff $/;"	l
ffff8000001011df	kernel.asm	/^ffff8000001011df:	ff d0                	callq  *%rax$/;"	l
ffff8000001011e1	kernel.asm	/^ffff8000001011e1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff8000001011e5	kernel.asm	/^ffff8000001011e5:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001011e8	kernel.asm	/^ffff8000001011e8:	48 b8 ca 27 10 00 00 	movabs $0xffff8000001027ca,%rax$/;"	l
ffff8000001011ef	kernel.asm	/^ffff8000001011ef:	80 ff ff $/;"	l
ffff8000001011f2	kernel.asm	/^ffff8000001011f2:	ff d0                	callq  *%rax$/;"	l
ffff8000001011f4	kernel.asm	/^ffff8000001011f4:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff8000001011f9	kernel.asm	/^ffff8000001011f9:	e9 18 01 00 00       	jmpq   ffff800000101316 <consoleread+0x1a4>$/;"	l
ffff8000001011fe	kernel.asm	/^ffff8000001011fe:	48 be c0 33 11 00 00 	movabs $0xffff8000001133c0,%rsi$/;"	l
ffff800000101205	kernel.asm	/^ffff800000101205:	80 ff ff $/;"	l
ffff800000101208	kernel.asm	/^ffff800000101208:	48 bf a8 34 11 00 00 	movabs $0xffff8000001134a8,%rdi$/;"	l
ffff80000010120f	kernel.asm	/^ffff80000010120f:	80 ff ff $/;"	l
ffff800000101212	kernel.asm	/^ffff800000101212:	48 b8 23 6c 10 00 00 	movabs $0xffff800000106c23,%rax$/;"	l
ffff800000101219	kernel.asm	/^ffff800000101219:	80 ff ff $/;"	l
ffff80000010121c	kernel.asm	/^ffff80000010121c:	ff d0                	callq  *%rax$/;"	l
ffff80000010121e	kernel.asm	/^ffff80000010121e:	48 b8 c0 33 11 00 00 	movabs $0xffff8000001133c0,%rax$/;"	l
ffff800000101225	kernel.asm	/^ffff800000101225:	80 ff ff $/;"	l
ffff800000101228	kernel.asm	/^ffff800000101228:	8b 90 e8 00 00 00    	mov    0xe8(%rax),%edx$/;"	l
ffff80000010122e	kernel.asm	/^ffff80000010122e:	48 b8 c0 33 11 00 00 	movabs $0xffff8000001133c0,%rax$/;"	l
ffff800000101235	kernel.asm	/^ffff800000101235:	80 ff ff $/;"	l
ffff800000101238	kernel.asm	/^ffff800000101238:	8b 80 ec 00 00 00    	mov    0xec(%rax),%eax$/;"	l
ffff80000010123e	kernel.asm	/^ffff80000010123e:	39 c2                	cmp    %eax,%edx$/;"	l
ffff800000101240	kernel.asm	/^ffff800000101240:	0f 84 73 ff ff ff    	je     ffff8000001011b9 <consoleread+0x47>$/;"	l
ffff800000101246	kernel.asm	/^ffff800000101246:	48 b8 c0 33 11 00 00 	movabs $0xffff8000001133c0,%rax$/;"	l
ffff80000010124d	kernel.asm	/^ffff80000010124d:	80 ff ff $/;"	l
ffff800000101250	kernel.asm	/^ffff800000101250:	8b 80 e8 00 00 00    	mov    0xe8(%rax),%eax$/;"	l
ffff800000101256	kernel.asm	/^ffff800000101256:	8d 48 01             	lea    0x1(%rax),%ecx$/;"	l
ffff800000101259	kernel.asm	/^ffff800000101259:	48 ba c0 33 11 00 00 	movabs $0xffff8000001133c0,%rdx$/;"	l
ffff800000101260	kernel.asm	/^ffff800000101260:	80 ff ff $/;"	l
ffff800000101263	kernel.asm	/^ffff800000101263:	89 8a e8 00 00 00    	mov    %ecx,0xe8(%rdx)$/;"	l
ffff800000101269	kernel.asm	/^ffff800000101269:	83 e0 7f             	and    $0x7f,%eax$/;"	l
ffff80000010126c	kernel.asm	/^ffff80000010126c:	89 c2                	mov    %eax,%edx$/;"	l
ffff80000010126e	kernel.asm	/^ffff80000010126e:	48 b8 c0 33 11 00 00 	movabs $0xffff8000001133c0,%rax$/;"	l
ffff800000101275	kernel.asm	/^ffff800000101275:	80 ff ff $/;"	l
ffff800000101278	kernel.asm	/^ffff800000101278:	89 d2                	mov    %edx,%edx$/;"	l
ffff80000010127a	kernel.asm	/^ffff80000010127a:	0f b6 44 10 68       	movzbl 0x68(%rax,%rdx,1),%eax$/;"	l
ffff80000010127f	kernel.asm	/^ffff80000010127f:	0f be c0             	movsbl %al,%eax$/;"	l
ffff800000101282	kernel.asm	/^ffff800000101282:	89 45 f8             	mov    %eax,-0x8(%rbp)$/;"	l
ffff800000101285	kernel.asm	/^ffff800000101285:	83 7d f8 04          	cmpl   $0x4,-0x8(%rbp)$/;"	l
ffff800000101289	kernel.asm	/^ffff800000101289:	75 2d                	jne    ffff8000001012b8 <consoleread+0x146>$/;"	l
ffff80000010128b	kernel.asm	/^ffff80000010128b:	8b 45 dc             	mov    -0x24(%rbp),%eax$/;"	l
ffff80000010128e	kernel.asm	/^ffff80000010128e:	3b 45 fc             	cmp    -0x4(%rbp),%eax$/;"	l
ffff800000101291	kernel.asm	/^ffff800000101291:	73 4c                	jae    ffff8000001012df <consoleread+0x16d>$/;"	l
ffff800000101293	kernel.asm	/^ffff800000101293:	48 b8 c0 33 11 00 00 	movabs $0xffff8000001133c0,%rax$/;"	l
ffff80000010129a	kernel.asm	/^ffff80000010129a:	80 ff ff $/;"	l
ffff80000010129d	kernel.asm	/^ffff80000010129d:	8b 80 e8 00 00 00    	mov    0xe8(%rax),%eax$/;"	l
ffff8000001012a3	kernel.asm	/^ffff8000001012a3:	8d 50 ff             	lea    -0x1(%rax),%edx$/;"	l
ffff8000001012a6	kernel.asm	/^ffff8000001012a6:	48 b8 c0 33 11 00 00 	movabs $0xffff8000001133c0,%rax$/;"	l
ffff8000001012ad	kernel.asm	/^ffff8000001012ad:	80 ff ff $/;"	l
ffff8000001012b0	kernel.asm	/^ffff8000001012b0:	89 90 e8 00 00 00    	mov    %edx,0xe8(%rax)$/;"	l
ffff8000001012b6	kernel.asm	/^ffff8000001012b6:	eb 27                	jmp    ffff8000001012df <consoleread+0x16d>$/;"	l
ffff8000001012b8	kernel.asm	/^ffff8000001012b8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff8000001012bc	kernel.asm	/^ffff8000001012bc:	48 8d 50 01          	lea    0x1(%rax),%rdx$/;"	l
ffff8000001012c0	kernel.asm	/^ffff8000001012c0:	48 89 55 e0          	mov    %rdx,-0x20(%rbp)$/;"	l
ffff8000001012c4	kernel.asm	/^ffff8000001012c4:	8b 55 f8             	mov    -0x8(%rbp),%edx$/;"	l
ffff8000001012c7	kernel.asm	/^ffff8000001012c7:	88 10                	mov    %dl,(%rax)$/;"	l
ffff8000001012c9	kernel.asm	/^ffff8000001012c9:	83 6d dc 01          	subl   $0x1,-0x24(%rbp)$/;"	l
ffff8000001012cd	kernel.asm	/^ffff8000001012cd:	83 7d f8 0a          	cmpl   $0xa,-0x8(%rbp)$/;"	l
ffff8000001012d1	kernel.asm	/^ffff8000001012d1:	74 0f                	je     ffff8000001012e2 <consoleread+0x170>$/;"	l
ffff8000001012d3	kernel.asm	/^ffff8000001012d3:	83 7d dc 00          	cmpl   $0x0,-0x24(%rbp)$/;"	l
ffff8000001012d7	kernel.asm	/^ffff8000001012d7:	0f 8f 41 ff ff ff    	jg     ffff80000010121e <consoleread+0xac>$/;"	l
ffff8000001012dd	kernel.asm	/^ffff8000001012dd:	eb 04                	jmp    ffff8000001012e3 <consoleread+0x171>$/;"	l
ffff8000001012df	kernel.asm	/^ffff8000001012df:	90                   	nop$/;"	l
ffff8000001012e0	kernel.asm	/^ffff8000001012e0:	eb 01                	jmp    ffff8000001012e3 <consoleread+0x171>$/;"	l
ffff8000001012e2	kernel.asm	/^ffff8000001012e2:	90                   	nop$/;"	l
ffff8000001012e3	kernel.asm	/^ffff8000001012e3:	48 bf c0 33 11 00 00 	movabs $0xffff8000001133c0,%rdi$/;"	l
ffff8000001012ea	kernel.asm	/^ffff8000001012ea:	80 ff ff $/;"	l
ffff8000001012ed	kernel.asm	/^ffff8000001012ed:	48 b8 98 72 10 00 00 	movabs $0xffff800000107298,%rax$/;"	l
ffff8000001012f4	kernel.asm	/^ffff8000001012f4:	80 ff ff $/;"	l
ffff8000001012f7	kernel.asm	/^ffff8000001012f7:	ff d0                	callq  *%rax$/;"	l
ffff8000001012f9	kernel.asm	/^ffff8000001012f9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff8000001012fd	kernel.asm	/^ffff8000001012fd:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000101300	kernel.asm	/^ffff800000101300:	48 b8 ca 27 10 00 00 	movabs $0xffff8000001027ca,%rax$/;"	l
ffff800000101307	kernel.asm	/^ffff800000101307:	80 ff ff $/;"	l
ffff80000010130a	kernel.asm	/^ffff80000010130a:	ff d0                	callq  *%rax$/;"	l
ffff80000010130c	kernel.asm	/^ffff80000010130c:	8b 45 dc             	mov    -0x24(%rbp),%eax$/;"	l
ffff80000010130f	kernel.asm	/^ffff80000010130f:	8b 55 fc             	mov    -0x4(%rbp),%edx$/;"	l
ffff800000101312	kernel.asm	/^ffff800000101312:	29 c2                	sub    %eax,%edx$/;"	l
ffff800000101314	kernel.asm	/^ffff800000101314:	89 d0                	mov    %edx,%eax$/;"	l
ffff800000101316	kernel.asm	/^ffff800000101316:	c9                   	leaveq $/;"	l
ffff800000101317	kernel.asm	/^ffff800000101317:	c3                   	retq   $/;"	l
ffff800000101318	kernel.asm	/^ffff800000101318 <consolewrite>:$/;"	l
ffff800000101318	kernel.asm	/^ffff800000101318:	55                   	push   %rbp$/;"	l
ffff800000101319	kernel.asm	/^ffff800000101319:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010131c	kernel.asm	/^ffff80000010131c:	48 83 ec 30          	sub    $0x30,%rsp$/;"	l
ffff800000101320	kernel.asm	/^ffff800000101320:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
ffff800000101324	kernel.asm	/^ffff800000101324:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)$/;"	l
ffff800000101328	kernel.asm	/^ffff800000101328:	89 55 dc             	mov    %edx,-0x24(%rbp)$/;"	l
ffff80000010132b	kernel.asm	/^ffff80000010132b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010132f	kernel.asm	/^ffff80000010132f:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000101332	kernel.asm	/^ffff800000101332:	48 b8 5b 29 10 00 00 	movabs $0xffff80000010295b,%rax$/;"	l
ffff800000101339	kernel.asm	/^ffff800000101339:	80 ff ff $/;"	l
ffff80000010133c	kernel.asm	/^ffff80000010133c:	ff d0                	callq  *%rax$/;"	l
ffff80000010133e	kernel.asm	/^ffff80000010133e:	48 bf c0 34 11 00 00 	movabs $0xffff8000001134c0,%rdi$/;"	l
ffff800000101345	kernel.asm	/^ffff800000101345:	80 ff ff $/;"	l
ffff800000101348	kernel.asm	/^ffff800000101348:	48 b8 ff 71 10 00 00 	movabs $0xffff8000001071ff,%rax$/;"	l
ffff80000010134f	kernel.asm	/^ffff80000010134f:	80 ff ff $/;"	l
ffff800000101352	kernel.asm	/^ffff800000101352:	ff d0                	callq  *%rax$/;"	l
ffff800000101354	kernel.asm	/^ffff800000101354:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)$/;"	l
ffff80000010135b	kernel.asm	/^ffff80000010135b:	eb 28                	jmp    ffff800000101385 <consolewrite+0x6d>$/;"	l
ffff80000010135d	kernel.asm	/^ffff80000010135d:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff800000101360	kernel.asm	/^ffff800000101360:	48 63 d0             	movslq %eax,%rdx$/;"	l
ffff800000101363	kernel.asm	/^ffff800000101363:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff800000101367	kernel.asm	/^ffff800000101367:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff80000010136a	kernel.asm	/^ffff80000010136a:	0f b6 00             	movzbl (%rax),%eax$/;"	l
ffff80000010136d	kernel.asm	/^ffff80000010136d:	0f be c0             	movsbl %al,%eax$/;"	l
ffff800000101370	kernel.asm	/^ffff800000101370:	0f b6 c0             	movzbl %al,%eax$/;"	l
ffff800000101373	kernel.asm	/^ffff800000101373:	89 c7                	mov    %eax,%edi$/;"	l
ffff800000101375	kernel.asm	/^ffff800000101375:	48 b8 3b 0e 10 00 00 	movabs $0xffff800000100e3b,%rax$/;"	l
ffff80000010137c	kernel.asm	/^ffff80000010137c:	80 ff ff $/;"	l
ffff80000010137f	kernel.asm	/^ffff80000010137f:	ff d0                	callq  *%rax$/;"	l
ffff800000101381	kernel.asm	/^ffff800000101381:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)$/;"	l
ffff800000101385	kernel.asm	/^ffff800000101385:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff800000101388	kernel.asm	/^ffff800000101388:	3b 45 dc             	cmp    -0x24(%rbp),%eax$/;"	l
ffff80000010138b	kernel.asm	/^ffff80000010138b:	7c d0                	jl     ffff80000010135d <consolewrite+0x45>$/;"	l
ffff80000010138d	kernel.asm	/^ffff80000010138d:	48 bf c0 34 11 00 00 	movabs $0xffff8000001134c0,%rdi$/;"	l
ffff800000101394	kernel.asm	/^ffff800000101394:	80 ff ff $/;"	l
ffff800000101397	kernel.asm	/^ffff800000101397:	48 b8 98 72 10 00 00 	movabs $0xffff800000107298,%rax$/;"	l
ffff80000010139e	kernel.asm	/^ffff80000010139e:	80 ff ff $/;"	l
ffff8000001013a1	kernel.asm	/^ffff8000001013a1:	ff d0                	callq  *%rax$/;"	l
ffff8000001013a3	kernel.asm	/^ffff8000001013a3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff8000001013a7	kernel.asm	/^ffff8000001013a7:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001013aa	kernel.asm	/^ffff8000001013aa:	48 b8 ca 27 10 00 00 	movabs $0xffff8000001027ca,%rax$/;"	l
ffff8000001013b1	kernel.asm	/^ffff8000001013b1:	80 ff ff $/;"	l
ffff8000001013b4	kernel.asm	/^ffff8000001013b4:	ff d0                	callq  *%rax$/;"	l
ffff8000001013b6	kernel.asm	/^ffff8000001013b6:	8b 45 dc             	mov    -0x24(%rbp),%eax$/;"	l
ffff8000001013b9	kernel.asm	/^ffff8000001013b9:	c9                   	leaveq $/;"	l
ffff8000001013ba	kernel.asm	/^ffff8000001013ba:	c3                   	retq   $/;"	l
ffff8000001013bb	kernel.asm	/^ffff8000001013bb <consoleinit>:$/;"	l
ffff8000001013bb	kernel.asm	/^ffff8000001013bb:	55                   	push   %rbp$/;"	l
ffff8000001013bc	kernel.asm	/^ffff8000001013bc:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff8000001013bf	kernel.asm	/^ffff8000001013bf:	48 be 92 ba 10 00 00 	movabs $0xffff80000010ba92,%rsi$/;"	l
ffff8000001013c6	kernel.asm	/^ffff8000001013c6:	80 ff ff $/;"	l
ffff8000001013c9	kernel.asm	/^ffff8000001013c9:	48 bf c0 34 11 00 00 	movabs $0xffff8000001134c0,%rdi$/;"	l
ffff8000001013d0	kernel.asm	/^ffff8000001013d0:	80 ff ff $/;"	l
ffff8000001013d3	kernel.asm	/^ffff8000001013d3:	48 b8 ca 71 10 00 00 	movabs $0xffff8000001071ca,%rax$/;"	l
ffff8000001013da	kernel.asm	/^ffff8000001013da:	80 ff ff $/;"	l
ffff8000001013dd	kernel.asm	/^ffff8000001013dd:	ff d0                	callq  *%rax$/;"	l
ffff8000001013df	kernel.asm	/^ffff8000001013df:	48 be 9a ba 10 00 00 	movabs $0xffff80000010ba9a,%rsi$/;"	l
ffff8000001013e6	kernel.asm	/^ffff8000001013e6:	80 ff ff $/;"	l
ffff8000001013e9	kernel.asm	/^ffff8000001013e9:	48 bf c0 33 11 00 00 	movabs $0xffff8000001133c0,%rdi$/;"	l
ffff8000001013f0	kernel.asm	/^ffff8000001013f0:	80 ff ff $/;"	l
ffff8000001013f3	kernel.asm	/^ffff8000001013f3:	48 b8 ca 71 10 00 00 	movabs $0xffff8000001071ca,%rax$/;"	l
ffff8000001013fa	kernel.asm	/^ffff8000001013fa:	80 ff ff $/;"	l
ffff8000001013fd	kernel.asm	/^ffff8000001013fd:	ff d0                	callq  *%rax$/;"	l
ffff8000001013ff	kernel.asm	/^ffff8000001013ff:	48 b8 40 35 11 00 00 	movabs $0xffff800000113540,%rax$/;"	l
ffff800000101406	kernel.asm	/^ffff800000101406:	80 ff ff $/;"	l
ffff800000101409	kernel.asm	/^ffff800000101409:	48 ba 18 13 10 00 00 	movabs $0xffff800000101318,%rdx$/;"	l
ffff800000101410	kernel.asm	/^ffff800000101410:	80 ff ff $/;"	l
ffff800000101413	kernel.asm	/^ffff800000101413:	48 89 50 18          	mov    %rdx,0x18(%rax)$/;"	l
ffff800000101417	kernel.asm	/^ffff800000101417:	48 b8 40 35 11 00 00 	movabs $0xffff800000113540,%rax$/;"	l
ffff80000010141e	kernel.asm	/^ffff80000010141e:	80 ff ff $/;"	l
ffff800000101421	kernel.asm	/^ffff800000101421:	48 b9 72 11 10 00 00 	movabs $0xffff800000101172,%rcx$/;"	l
ffff800000101428	kernel.asm	/^ffff800000101428:	80 ff ff $/;"	l
ffff80000010142b	kernel.asm	/^ffff80000010142b:	48 89 48 10          	mov    %rcx,0x10(%rax)$/;"	l
ffff80000010142f	kernel.asm	/^ffff80000010142f:	48 b8 c0 34 11 00 00 	movabs $0xffff8000001134c0,%rax$/;"	l
ffff800000101436	kernel.asm	/^ffff800000101436:	80 ff ff $/;"	l
ffff800000101439	kernel.asm	/^ffff800000101439:	c7 40 68 01 00 00 00 	movl   $0x1,0x68(%rax)$/;"	l
ffff800000101440	kernel.asm	/^ffff800000101440:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffff800000101445	kernel.asm	/^ffff800000101445:	bf 01 00 00 00       	mov    $0x1,%edi$/;"	l
ffff80000010144a	kernel.asm	/^ffff80000010144a:	48 b8 65 3e 10 00 00 	movabs $0xffff800000103e65,%rax$/;"	l
ffff800000101451	kernel.asm	/^ffff800000101451:	80 ff ff $/;"	l
ffff800000101454	kernel.asm	/^ffff800000101454:	ff d0                	callq  *%rax$/;"	l
ffff800000101456	kernel.asm	/^ffff800000101456:	90                   	nop$/;"	l
ffff800000101457	kernel.asm	/^ffff800000101457:	5d                   	pop    %rbp$/;"	l
ffff800000101458	kernel.asm	/^ffff800000101458:	c3                   	retq   $/;"	l
ffff800000101459	kernel.asm	/^ffff800000101459 <exec>:$/;"	l
ffff800000101459	kernel.asm	/^ffff800000101459:	55                   	push   %rbp$/;"	l
ffff80000010145a	kernel.asm	/^ffff80000010145a:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010145d	kernel.asm	/^ffff80000010145d:	48 81 ec 00 02 00 00 	sub    $0x200,%rsp$/;"	l
ffff800000101464	kernel.asm	/^ffff800000101464:	48 89 bd 08 fe ff ff 	mov    %rdi,-0x1f8(%rbp)$/;"	l
ffff80000010146b	kernel.asm	/^ffff80000010146b:	48 89 b5 00 fe ff ff 	mov    %rsi,-0x200(%rbp)$/;"	l
ffff800000101472	kernel.asm	/^ffff800000101472:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000101479	kernel.asm	/^ffff800000101479:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff80000010147d	kernel.asm	/^ffff80000010147d:	48 8b 40 08          	mov    0x8(%rax),%rax$/;"	l
ffff800000101481	kernel.asm	/^ffff800000101481:	48 89 45 b8          	mov    %rax,-0x48(%rbp)$/;"	l
ffff800000101485	kernel.asm	/^ffff800000101485:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff80000010148a	kernel.asm	/^ffff80000010148a:	48 ba 9e 4d 10 00 00 	movabs $0xffff800000104d9e,%rdx$/;"	l
ffff800000101491	kernel.asm	/^ffff800000101491:	80 ff ff $/;"	l
ffff800000101494	kernel.asm	/^ffff800000101494:	ff d2                	callq  *%rdx$/;"	l
ffff800000101496	kernel.asm	/^ffff800000101496:	48 8b 85 08 fe ff ff 	mov    -0x1f8(%rbp),%rax$/;"	l
ffff80000010149d	kernel.asm	/^ffff80000010149d:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001014a0	kernel.asm	/^ffff8000001014a0:	48 b8 ba 36 10 00 00 	movabs $0xffff8000001036ba,%rax$/;"	l
ffff8000001014a7	kernel.asm	/^ffff8000001014a7:	80 ff ff $/;"	l
ffff8000001014aa	kernel.asm	/^ffff8000001014aa:	ff d0                	callq  *%rax$/;"	l
ffff8000001014ac	kernel.asm	/^ffff8000001014ac:	48 89 45 c8          	mov    %rax,-0x38(%rbp)$/;"	l
ffff8000001014b0	kernel.asm	/^ffff8000001014b0:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)$/;"	l
ffff8000001014b5	kernel.asm	/^ffff8000001014b5:	75 1b                	jne    ffff8000001014d2 <exec+0x79>$/;"	l
ffff8000001014b7	kernel.asm	/^ffff8000001014b7:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff8000001014bc	kernel.asm	/^ffff8000001014bc:	48 ba 74 4e 10 00 00 	movabs $0xffff800000104e74,%rdx$/;"	l
ffff8000001014c3	kernel.asm	/^ffff8000001014c3:	80 ff ff $/;"	l
ffff8000001014c6	kernel.asm	/^ffff8000001014c6:	ff d2                	callq  *%rdx$/;"	l
ffff8000001014c8	kernel.asm	/^ffff8000001014c8:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff8000001014cd	kernel.asm	/^ffff8000001014cd:	e9 a5 05 00 00       	jmpq   ffff800000101a77 <exec+0x61e>$/;"	l
ffff8000001014d2	kernel.asm	/^ffff8000001014d2:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
ffff8000001014d6	kernel.asm	/^ffff8000001014d6:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001014d9	kernel.asm	/^ffff8000001014d9:	48 b8 ca 27 10 00 00 	movabs $0xffff8000001027ca,%rax$/;"	l
ffff8000001014e0	kernel.asm	/^ffff8000001014e0:	80 ff ff $/;"	l
ffff8000001014e3	kernel.asm	/^ffff8000001014e3:	ff d0                	callq  *%rax$/;"	l
ffff8000001014e5	kernel.asm	/^ffff8000001014e5:	48 c7 45 c0 00 00 00 	movq   $0x0,-0x40(%rbp)$/;"	l
ffff8000001014ec	kernel.asm	/^ffff8000001014ec:	00 $/;"	l
ffff8000001014ed	kernel.asm	/^ffff8000001014ed:	48 8d b5 50 fe ff ff 	lea    -0x1b0(%rbp),%rsi$/;"	l
ffff8000001014f4	kernel.asm	/^ffff8000001014f4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
ffff8000001014f8	kernel.asm	/^ffff8000001014f8:	b9 40 00 00 00       	mov    $0x40,%ecx$/;"	l
ffff8000001014fd	kernel.asm	/^ffff8000001014fd:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
ffff800000101502	kernel.asm	/^ffff800000101502:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000101505	kernel.asm	/^ffff800000101505:	48 b8 1e 2e 10 00 00 	movabs $0xffff800000102e1e,%rax$/;"	l
ffff80000010150c	kernel.asm	/^ffff80000010150c:	80 ff ff $/;"	l
ffff80000010150f	kernel.asm	/^ffff80000010150f:	ff d0                	callq  *%rax$/;"	l
ffff800000101511	kernel.asm	/^ffff800000101511:	83 f8 40             	cmp    $0x40,%eax$/;"	l
ffff800000101514	kernel.asm	/^ffff800000101514:	0f 85 ee 04 00 00    	jne    ffff800000101a08 <exec+0x5af>$/;"	l
ffff80000010151a	kernel.asm	/^ffff80000010151a:	8b 85 50 fe ff ff    	mov    -0x1b0(%rbp),%eax$/;"	l
ffff800000101520	kernel.asm	/^ffff800000101520:	3d 7f 45 4c 46       	cmp    $0x464c457f,%eax$/;"	l
ffff800000101525	kernel.asm	/^ffff800000101525:	0f 85 e0 04 00 00    	jne    ffff800000101a0b <exec+0x5b2>$/;"	l
ffff80000010152b	kernel.asm	/^ffff80000010152b:	48 b8 20 ab 10 00 00 	movabs $0xffff80000010ab20,%rax$/;"	l
ffff800000101532	kernel.asm	/^ffff800000101532:	80 ff ff $/;"	l
ffff800000101535	kernel.asm	/^ffff800000101535:	ff d0                	callq  *%rax$/;"	l
ffff800000101537	kernel.asm	/^ffff800000101537:	48 89 45 c0          	mov    %rax,-0x40(%rbp)$/;"	l
ffff80000010153b	kernel.asm	/^ffff80000010153b:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)$/;"	l
ffff800000101540	kernel.asm	/^ffff800000101540:	0f 84 c8 04 00 00    	je     ffff800000101a0e <exec+0x5b5>$/;"	l
ffff800000101546	kernel.asm	/^ffff800000101546:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)$/;"	l
ffff80000010154d	kernel.asm	/^ffff80000010154d:	00 $/;"	l
ffff80000010154e	kernel.asm	/^ffff80000010154e:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)$/;"	l
ffff800000101555	kernel.asm	/^ffff800000101555:	48 8b 85 70 fe ff ff 	mov    -0x190(%rbp),%rax$/;"	l
ffff80000010155c	kernel.asm	/^ffff80000010155c:	89 45 e8             	mov    %eax,-0x18(%rbp)$/;"	l
ffff80000010155f	kernel.asm	/^ffff80000010155f:	e9 13 01 00 00       	jmpq   ffff800000101677 <exec+0x21e>$/;"	l
ffff800000101564	kernel.asm	/^ffff800000101564:	8b 55 e8             	mov    -0x18(%rbp),%edx$/;"	l
ffff800000101567	kernel.asm	/^ffff800000101567:	48 8d b5 10 fe ff ff 	lea    -0x1f0(%rbp),%rsi$/;"	l
ffff80000010156e	kernel.asm	/^ffff80000010156e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
ffff800000101572	kernel.asm	/^ffff800000101572:	b9 38 00 00 00       	mov    $0x38,%ecx$/;"	l
ffff800000101577	kernel.asm	/^ffff800000101577:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010157a	kernel.asm	/^ffff80000010157a:	48 b8 1e 2e 10 00 00 	movabs $0xffff800000102e1e,%rax$/;"	l
ffff800000101581	kernel.asm	/^ffff800000101581:	80 ff ff $/;"	l
ffff800000101584	kernel.asm	/^ffff800000101584:	ff d0                	callq  *%rax$/;"	l
ffff800000101586	kernel.asm	/^ffff800000101586:	83 f8 38             	cmp    $0x38,%eax$/;"	l
ffff800000101589	kernel.asm	/^ffff800000101589:	0f 85 82 04 00 00    	jne    ffff800000101a11 <exec+0x5b8>$/;"	l
ffff80000010158f	kernel.asm	/^ffff80000010158f:	8b 85 10 fe ff ff    	mov    -0x1f0(%rbp),%eax$/;"	l
ffff800000101595	kernel.asm	/^ffff800000101595:	83 f8 01             	cmp    $0x1,%eax$/;"	l
ffff800000101598	kernel.asm	/^ffff800000101598:	0f 85 cb 00 00 00    	jne    ffff800000101669 <exec+0x210>$/;"	l
ffff80000010159e	kernel.asm	/^ffff80000010159e:	48 8b 95 38 fe ff ff 	mov    -0x1c8(%rbp),%rdx$/;"	l
ffff8000001015a5	kernel.asm	/^ffff8000001015a5:	48 8b 85 30 fe ff ff 	mov    -0x1d0(%rbp),%rax$/;"	l
ffff8000001015ac	kernel.asm	/^ffff8000001015ac:	48 39 c2             	cmp    %rax,%rdx$/;"	l
ffff8000001015af	kernel.asm	/^ffff8000001015af:	0f 82 5f 04 00 00    	jb     ffff800000101a14 <exec+0x5bb>$/;"	l
ffff8000001015b5	kernel.asm	/^ffff8000001015b5:	48 8b 95 20 fe ff ff 	mov    -0x1e0(%rbp),%rdx$/;"	l
ffff8000001015bc	kernel.asm	/^ffff8000001015bc:	48 8b 85 38 fe ff ff 	mov    -0x1c8(%rbp),%rax$/;"	l
ffff8000001015c3	kernel.asm	/^ffff8000001015c3:	48 01 c2             	add    %rax,%rdx$/;"	l
ffff8000001015c6	kernel.asm	/^ffff8000001015c6:	48 8b 85 20 fe ff ff 	mov    -0x1e0(%rbp),%rax$/;"	l
ffff8000001015cd	kernel.asm	/^ffff8000001015cd:	48 39 c2             	cmp    %rax,%rdx$/;"	l
ffff8000001015d0	kernel.asm	/^ffff8000001015d0:	0f 82 41 04 00 00    	jb     ffff800000101a17 <exec+0x5be>$/;"	l
ffff8000001015d6	kernel.asm	/^ffff8000001015d6:	48 8b 85 20 fe ff ff 	mov    -0x1e0(%rbp),%rax$/;"	l
ffff8000001015dd	kernel.asm	/^ffff8000001015dd:	89 c2                	mov    %eax,%edx$/;"	l
ffff8000001015df	kernel.asm	/^ffff8000001015df:	48 8b 85 38 fe ff ff 	mov    -0x1c8(%rbp),%rax$/;"	l
ffff8000001015e6	kernel.asm	/^ffff8000001015e6:	01 c2                	add    %eax,%edx$/;"	l
ffff8000001015e8	kernel.asm	/^ffff8000001015e8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff8000001015ec	kernel.asm	/^ffff8000001015ec:	89 c1                	mov    %eax,%ecx$/;"	l
ffff8000001015ee	kernel.asm	/^ffff8000001015ee:	48 8b 45 c0          	mov    -0x40(%rbp),%rax$/;"	l
ffff8000001015f2	kernel.asm	/^ffff8000001015f2:	89 ce                	mov    %ecx,%esi$/;"	l
ffff8000001015f4	kernel.asm	/^ffff8000001015f4:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001015f7	kernel.asm	/^ffff8000001015f7:	48 b8 78 b2 10 00 00 	movabs $0xffff80000010b278,%rax$/;"	l
ffff8000001015fe	kernel.asm	/^ffff8000001015fe:	80 ff ff $/;"	l
ffff800000101601	kernel.asm	/^ffff800000101601:	ff d0                	callq  *%rax$/;"	l
ffff800000101603	kernel.asm	/^ffff800000101603:	48 98                	cltq   $/;"	l
ffff800000101605	kernel.asm	/^ffff800000101605:	48 89 45 d8          	mov    %rax,-0x28(%rbp)$/;"	l
ffff800000101609	kernel.asm	/^ffff800000101609:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)$/;"	l
ffff80000010160e	kernel.asm	/^ffff80000010160e:	0f 84 06 04 00 00    	je     ffff800000101a1a <exec+0x5c1>$/;"	l
ffff800000101614	kernel.asm	/^ffff800000101614:	48 8b 85 20 fe ff ff 	mov    -0x1e0(%rbp),%rax$/;"	l
ffff80000010161b	kernel.asm	/^ffff80000010161b:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
ffff800000101620	kernel.asm	/^ffff800000101620:	48 85 c0             	test   %rax,%rax$/;"	l
ffff800000101623	kernel.asm	/^ffff800000101623:	0f 85 f4 03 00 00    	jne    ffff800000101a1d <exec+0x5c4>$/;"	l
ffff800000101629	kernel.asm	/^ffff800000101629:	48 8b 85 30 fe ff ff 	mov    -0x1d0(%rbp),%rax$/;"	l
ffff800000101630	kernel.asm	/^ffff800000101630:	89 c7                	mov    %eax,%edi$/;"	l
ffff800000101632	kernel.asm	/^ffff800000101632:	48 8b 85 18 fe ff ff 	mov    -0x1e8(%rbp),%rax$/;"	l
ffff800000101639	kernel.asm	/^ffff800000101639:	89 c1                	mov    %eax,%ecx$/;"	l
ffff80000010163b	kernel.asm	/^ffff80000010163b:	48 8b 85 20 fe ff ff 	mov    -0x1e0(%rbp),%rax$/;"	l
ffff800000101642	kernel.asm	/^ffff800000101642:	48 89 c6             	mov    %rax,%rsi$/;"	l
ffff800000101645	kernel.asm	/^ffff800000101645:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx$/;"	l
ffff800000101649	kernel.asm	/^ffff800000101649:	48 8b 45 c0          	mov    -0x40(%rbp),%rax$/;"	l
ffff80000010164d	kernel.asm	/^ffff80000010164d:	41 89 f8             	mov    %edi,%r8d$/;"	l
ffff800000101650	kernel.asm	/^ffff800000101650:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000101653	kernel.asm	/^ffff800000101653:	48 b8 56 b1 10 00 00 	movabs $0xffff80000010b156,%rax$/;"	l
ffff80000010165a	kernel.asm	/^ffff80000010165a:	80 ff ff $/;"	l
ffff80000010165d	kernel.asm	/^ffff80000010165d:	ff d0                	callq  *%rax$/;"	l
ffff80000010165f	kernel.asm	/^ffff80000010165f:	85 c0                	test   %eax,%eax$/;"	l
ffff800000101661	kernel.asm	/^ffff800000101661:	0f 88 b9 03 00 00    	js     ffff800000101a20 <exec+0x5c7>$/;"	l
ffff800000101667	kernel.asm	/^ffff800000101667:	eb 01                	jmp    ffff80000010166a <exec+0x211>$/;"	l
ffff800000101669	kernel.asm	/^ffff800000101669:	90                   	nop$/;"	l
ffff80000010166a	kernel.asm	/^ffff80000010166a:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)$/;"	l
ffff80000010166e	kernel.asm	/^ffff80000010166e:	8b 45 e8             	mov    -0x18(%rbp),%eax$/;"	l
ffff800000101671	kernel.asm	/^ffff800000101671:	83 c0 38             	add    $0x38,%eax$/;"	l
ffff800000101674	kernel.asm	/^ffff800000101674:	89 45 e8             	mov    %eax,-0x18(%rbp)$/;"	l
ffff800000101677	kernel.asm	/^ffff800000101677:	0f b7 85 88 fe ff ff 	movzwl -0x178(%rbp),%eax$/;"	l
ffff80000010167e	kernel.asm	/^ffff80000010167e:	0f b7 c0             	movzwl %ax,%eax$/;"	l
ffff800000101681	kernel.asm	/^ffff800000101681:	3b 45 ec             	cmp    -0x14(%rbp),%eax$/;"	l
ffff800000101684	kernel.asm	/^ffff800000101684:	0f 8f da fe ff ff    	jg     ffff800000101564 <exec+0x10b>$/;"	l
ffff80000010168a	kernel.asm	/^ffff80000010168a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
ffff80000010168e	kernel.asm	/^ffff80000010168e:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000101691	kernel.asm	/^ffff800000101691:	48 b8 ae 2a 10 00 00 	movabs $0xffff800000102aae,%rax$/;"	l
ffff800000101698	kernel.asm	/^ffff800000101698:	80 ff ff $/;"	l
ffff80000010169b	kernel.asm	/^ffff80000010169b:	ff d0                	callq  *%rax$/;"	l
ffff80000010169d	kernel.asm	/^ffff80000010169d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff8000001016a2	kernel.asm	/^ffff8000001016a2:	48 ba 74 4e 10 00 00 	movabs $0xffff800000104e74,%rdx$/;"	l
ffff8000001016a9	kernel.asm	/^ffff8000001016a9:	80 ff ff $/;"	l
ffff8000001016ac	kernel.asm	/^ffff8000001016ac:	ff d2                	callq  *%rdx$/;"	l
ffff8000001016ae	kernel.asm	/^ffff8000001016ae:	48 c7 45 c8 00 00 00 	movq   $0x0,-0x38(%rbp)$/;"	l
ffff8000001016b5	kernel.asm	/^ffff8000001016b5:	00 $/;"	l
ffff8000001016b6	kernel.asm	/^ffff8000001016b6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff8000001016ba	kernel.asm	/^ffff8000001016ba:	48 05 ff 0f 00 00    	add    $0xfff,%rax$/;"	l
ffff8000001016c0	kernel.asm	/^ffff8000001016c0:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax$/;"	l
ffff8000001016c6	kernel.asm	/^ffff8000001016c6:	48 89 45 d8          	mov    %rax,-0x28(%rbp)$/;"	l
ffff8000001016ca	kernel.asm	/^ffff8000001016ca:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff8000001016ce	kernel.asm	/^ffff8000001016ce:	8d 90 00 20 00 00    	lea    0x2000(%rax),%edx$/;"	l
ffff8000001016d4	kernel.asm	/^ffff8000001016d4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff8000001016d8	kernel.asm	/^ffff8000001016d8:	89 c1                	mov    %eax,%ecx$/;"	l
ffff8000001016da	kernel.asm	/^ffff8000001016da:	48 8b 45 c0          	mov    -0x40(%rbp),%rax$/;"	l
ffff8000001016de	kernel.asm	/^ffff8000001016de:	89 ce                	mov    %ecx,%esi$/;"	l
ffff8000001016e0	kernel.asm	/^ffff8000001016e0:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001016e3	kernel.asm	/^ffff8000001016e3:	48 b8 78 b2 10 00 00 	movabs $0xffff80000010b278,%rax$/;"	l
ffff8000001016ea	kernel.asm	/^ffff8000001016ea:	80 ff ff $/;"	l
ffff8000001016ed	kernel.asm	/^ffff8000001016ed:	ff d0                	callq  *%rax$/;"	l
ffff8000001016ef	kernel.asm	/^ffff8000001016ef:	48 98                	cltq   $/;"	l
ffff8000001016f1	kernel.asm	/^ffff8000001016f1:	48 89 45 d8          	mov    %rax,-0x28(%rbp)$/;"	l
ffff8000001016f5	kernel.asm	/^ffff8000001016f5:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)$/;"	l
ffff8000001016fa	kernel.asm	/^ffff8000001016fa:	0f 84 23 03 00 00    	je     ffff800000101a23 <exec+0x5ca>$/;"	l
ffff800000101700	kernel.asm	/^ffff800000101700:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff800000101704	kernel.asm	/^ffff800000101704:	48 2d 00 20 00 00    	sub    $0x2000,%rax$/;"	l
ffff80000010170a	kernel.asm	/^ffff80000010170a:	48 89 c2             	mov    %rax,%rdx$/;"	l
ffff80000010170d	kernel.asm	/^ffff80000010170d:	48 8b 45 c0          	mov    -0x40(%rbp),%rax$/;"	l
ffff800000101711	kernel.asm	/^ffff800000101711:	48 89 d6             	mov    %rdx,%rsi$/;"	l
ffff800000101714	kernel.asm	/^ffff800000101714:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000101717	kernel.asm	/^ffff800000101717:	48 b8 f6 b6 10 00 00 	movabs $0xffff80000010b6f6,%rax$/;"	l
ffff80000010171e	kernel.asm	/^ffff80000010171e:	80 ff ff $/;"	l
ffff800000101721	kernel.asm	/^ffff800000101721:	ff d0                	callq  *%rax$/;"	l
ffff800000101723	kernel.asm	/^ffff800000101723:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff800000101727	kernel.asm	/^ffff800000101727:	48 89 45 d0          	mov    %rax,-0x30(%rbp)$/;"	l
ffff80000010172b	kernel.asm	/^ffff80000010172b:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)$/;"	l
ffff800000101732	kernel.asm	/^ffff800000101732:	00 $/;"	l
ffff800000101733	kernel.asm	/^ffff800000101733:	e9 ca 00 00 00       	jmpq   ffff800000101802 <exec+0x3a9>$/;"	l
ffff800000101738	kernel.asm	/^ffff800000101738:	48 83 7d e0 1f       	cmpq   $0x1f,-0x20(%rbp)$/;"	l
ffff80000010173d	kernel.asm	/^ffff80000010173d:	0f 87 e3 02 00 00    	ja     ffff800000101a26 <exec+0x5cd>$/;"	l
ffff800000101743	kernel.asm	/^ffff800000101743:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff800000101747	kernel.asm	/^ffff800000101747:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx$/;"	l
ffff80000010174e	kernel.asm	/^ffff80000010174e:	00 $/;"	l
ffff80000010174f	kernel.asm	/^ffff80000010174f:	48 8b 85 00 fe ff ff 	mov    -0x200(%rbp),%rax$/;"	l
ffff800000101756	kernel.asm	/^ffff800000101756:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff800000101759	kernel.asm	/^ffff800000101759:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff80000010175c	kernel.asm	/^ffff80000010175c:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010175f	kernel.asm	/^ffff80000010175f:	48 b8 ad 78 10 00 00 	movabs $0xffff8000001078ad,%rax$/;"	l
ffff800000101766	kernel.asm	/^ffff800000101766:	80 ff ff $/;"	l
ffff800000101769	kernel.asm	/^ffff800000101769:	ff d0                	callq  *%rax$/;"	l
ffff80000010176b	kernel.asm	/^ffff80000010176b:	83 c0 01             	add    $0x1,%eax$/;"	l
ffff80000010176e	kernel.asm	/^ffff80000010176e:	48 98                	cltq   $/;"	l
ffff800000101770	kernel.asm	/^ffff800000101770:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx$/;"	l
ffff800000101774	kernel.asm	/^ffff800000101774:	48 29 c2             	sub    %rax,%rdx$/;"	l
ffff800000101777	kernel.asm	/^ffff800000101777:	48 89 d0             	mov    %rdx,%rax$/;"	l
ffff80000010177a	kernel.asm	/^ffff80000010177a:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax$/;"	l
ffff80000010177e	kernel.asm	/^ffff80000010177e:	48 89 45 d0          	mov    %rax,-0x30(%rbp)$/;"	l
ffff800000101782	kernel.asm	/^ffff800000101782:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff800000101786	kernel.asm	/^ffff800000101786:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx$/;"	l
ffff80000010178d	kernel.asm	/^ffff80000010178d:	00 $/;"	l
ffff80000010178e	kernel.asm	/^ffff80000010178e:	48 8b 85 00 fe ff ff 	mov    -0x200(%rbp),%rax$/;"	l
ffff800000101795	kernel.asm	/^ffff800000101795:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff800000101798	kernel.asm	/^ffff800000101798:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff80000010179b	kernel.asm	/^ffff80000010179b:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010179e	kernel.asm	/^ffff80000010179e:	48 b8 ad 78 10 00 00 	movabs $0xffff8000001078ad,%rax$/;"	l
ffff8000001017a5	kernel.asm	/^ffff8000001017a5:	80 ff ff $/;"	l
ffff8000001017a8	kernel.asm	/^ffff8000001017a8:	ff d0                	callq  *%rax$/;"	l
ffff8000001017aa	kernel.asm	/^ffff8000001017aa:	83 c0 01             	add    $0x1,%eax$/;"	l
ffff8000001017ad	kernel.asm	/^ffff8000001017ad:	89 c1                	mov    %eax,%ecx$/;"	l
ffff8000001017af	kernel.asm	/^ffff8000001017af:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff8000001017b3	kernel.asm	/^ffff8000001017b3:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx$/;"	l
ffff8000001017ba	kernel.asm	/^ffff8000001017ba:	00 $/;"	l
ffff8000001017bb	kernel.asm	/^ffff8000001017bb:	48 8b 85 00 fe ff ff 	mov    -0x200(%rbp),%rax$/;"	l
ffff8000001017c2	kernel.asm	/^ffff8000001017c2:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff8000001017c5	kernel.asm	/^ffff8000001017c5:	48 8b 10             	mov    (%rax),%rdx$/;"	l
ffff8000001017c8	kernel.asm	/^ffff8000001017c8:	48 8b 45 d0          	mov    -0x30(%rbp),%rax$/;"	l
ffff8000001017cc	kernel.asm	/^ffff8000001017cc:	89 c6                	mov    %eax,%esi$/;"	l
ffff8000001017ce	kernel.asm	/^ffff8000001017ce:	48 8b 45 c0          	mov    -0x40(%rbp),%rax$/;"	l
ffff8000001017d2	kernel.asm	/^ffff8000001017d2:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001017d5	kernel.asm	/^ffff8000001017d5:	48 b8 5f b9 10 00 00 	movabs $0xffff80000010b95f,%rax$/;"	l
ffff8000001017dc	kernel.asm	/^ffff8000001017dc:	80 ff ff $/;"	l
ffff8000001017df	kernel.asm	/^ffff8000001017df:	ff d0                	callq  *%rax$/;"	l
ffff8000001017e1	kernel.asm	/^ffff8000001017e1:	85 c0                	test   %eax,%eax$/;"	l
ffff8000001017e3	kernel.asm	/^ffff8000001017e3:	0f 88 40 02 00 00    	js     ffff800000101a29 <exec+0x5d0>$/;"	l
ffff8000001017e9	kernel.asm	/^ffff8000001017e9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff8000001017ed	kernel.asm	/^ffff8000001017ed:	48 8d 50 03          	lea    0x3(%rax),%rdx$/;"	l
ffff8000001017f1	kernel.asm	/^ffff8000001017f1:	48 8b 45 d0          	mov    -0x30(%rbp),%rax$/;"	l
ffff8000001017f5	kernel.asm	/^ffff8000001017f5:	48 89 84 d5 90 fe ff 	mov    %rax,-0x170(%rbp,%rdx,8)$/;"	l
ffff8000001017fc	kernel.asm	/^ffff8000001017fc:	ff $/;"	l
ffff8000001017fd	kernel.asm	/^ffff8000001017fd:	48 83 45 e0 01       	addq   $0x1,-0x20(%rbp)$/;"	l
ffff800000101802	kernel.asm	/^ffff800000101802:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff800000101806	kernel.asm	/^ffff800000101806:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx$/;"	l
ffff80000010180d	kernel.asm	/^ffff80000010180d:	00 $/;"	l
ffff80000010180e	kernel.asm	/^ffff80000010180e:	48 8b 85 00 fe ff ff 	mov    -0x200(%rbp),%rax$/;"	l
ffff800000101815	kernel.asm	/^ffff800000101815:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff800000101818	kernel.asm	/^ffff800000101818:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff80000010181b	kernel.asm	/^ffff80000010181b:	48 85 c0             	test   %rax,%rax$/;"	l
ffff80000010181e	kernel.asm	/^ffff80000010181e:	0f 85 14 ff ff ff    	jne    ffff800000101738 <exec+0x2df>$/;"	l
ffff800000101824	kernel.asm	/^ffff800000101824:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff800000101828	kernel.asm	/^ffff800000101828:	48 83 c0 03          	add    $0x3,%rax$/;"	l
ffff80000010182c	kernel.asm	/^ffff80000010182c:	48 c7 84 c5 90 fe ff 	movq   $0x0,-0x170(%rbp,%rax,8)$/;"	l
ffff800000101833	kernel.asm	/^ffff800000101833:	ff 00 00 00 00 $/;"	l
ffff800000101838	kernel.asm	/^ffff800000101838:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff80000010183d	kernel.asm	/^ffff80000010183d:	48 89 85 90 fe ff ff 	mov    %rax,-0x170(%rbp)$/;"	l
ffff800000101844	kernel.asm	/^ffff800000101844:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff800000101848	kernel.asm	/^ffff800000101848:	48 89 85 98 fe ff ff 	mov    %rax,-0x168(%rbp)$/;"	l
ffff80000010184f	kernel.asm	/^ffff80000010184f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff800000101853	kernel.asm	/^ffff800000101853:	48 83 c0 01          	add    $0x1,%rax$/;"	l
ffff800000101857	kernel.asm	/^ffff800000101857:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx$/;"	l
ffff80000010185e	kernel.asm	/^ffff80000010185e:	00 $/;"	l
ffff80000010185f	kernel.asm	/^ffff80000010185f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax$/;"	l
ffff800000101863	kernel.asm	/^ffff800000101863:	48 29 d0             	sub    %rdx,%rax$/;"	l
ffff800000101866	kernel.asm	/^ffff800000101866:	48 89 85 a0 fe ff ff 	mov    %rax,-0x160(%rbp)$/;"	l
ffff80000010186d	kernel.asm	/^ffff80000010186d:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000101874	kernel.asm	/^ffff800000101874:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000101878	kernel.asm	/^ffff800000101878:	48 8b 40 28          	mov    0x28(%rax),%rax$/;"	l
ffff80000010187c	kernel.asm	/^ffff80000010187c:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx$/;"	l
ffff800000101880	kernel.asm	/^ffff800000101880:	48 89 50 30          	mov    %rdx,0x30(%rax)$/;"	l
ffff800000101884	kernel.asm	/^ffff800000101884:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff80000010188b	kernel.asm	/^ffff80000010188b:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff80000010188f	kernel.asm	/^ffff80000010188f:	48 8b 40 28          	mov    0x28(%rax),%rax$/;"	l
ffff800000101893	kernel.asm	/^ffff800000101893:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx$/;"	l
ffff800000101897	kernel.asm	/^ffff800000101897:	48 83 c2 01          	add    $0x1,%rdx$/;"	l
ffff80000010189b	kernel.asm	/^ffff80000010189b:	48 8d 0c d5 00 00 00 	lea    0x0(,%rdx,8),%rcx$/;"	l
ffff8000001018a2	kernel.asm	/^ffff8000001018a2:	00 $/;"	l
ffff8000001018a3	kernel.asm	/^ffff8000001018a3:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx$/;"	l
ffff8000001018a7	kernel.asm	/^ffff8000001018a7:	48 29 ca             	sub    %rcx,%rdx$/;"	l
ffff8000001018aa	kernel.asm	/^ffff8000001018aa:	48 89 50 28          	mov    %rdx,0x28(%rax)$/;"	l
ffff8000001018ae	kernel.asm	/^ffff8000001018ae:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff8000001018b2	kernel.asm	/^ffff8000001018b2:	48 83 c0 04          	add    $0x4,%rax$/;"	l
ffff8000001018b6	kernel.asm	/^ffff8000001018b6:	48 c1 e0 03          	shl    $0x3,%rax$/;"	l
ffff8000001018ba	kernel.asm	/^ffff8000001018ba:	48 29 45 d0          	sub    %rax,-0x30(%rbp)$/;"	l
ffff8000001018be	kernel.asm	/^ffff8000001018be:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff8000001018c2	kernel.asm	/^ffff8000001018c2:	48 83 c0 04          	add    $0x4,%rax$/;"	l
ffff8000001018c6	kernel.asm	/^ffff8000001018c6:	8d 0c c5 00 00 00 00 	lea    0x0(,%rax,8),%ecx$/;"	l
ffff8000001018cd	kernel.asm	/^ffff8000001018cd:	48 8b 45 d0          	mov    -0x30(%rbp),%rax$/;"	l
ffff8000001018d1	kernel.asm	/^ffff8000001018d1:	89 c6                	mov    %eax,%esi$/;"	l
ffff8000001018d3	kernel.asm	/^ffff8000001018d3:	48 8d 95 90 fe ff ff 	lea    -0x170(%rbp),%rdx$/;"	l
ffff8000001018da	kernel.asm	/^ffff8000001018da:	48 8b 45 c0          	mov    -0x40(%rbp),%rax$/;"	l
ffff8000001018de	kernel.asm	/^ffff8000001018de:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001018e1	kernel.asm	/^ffff8000001018e1:	48 b8 5f b9 10 00 00 	movabs $0xffff80000010b95f,%rax$/;"	l
ffff8000001018e8	kernel.asm	/^ffff8000001018e8:	80 ff ff $/;"	l
ffff8000001018eb	kernel.asm	/^ffff8000001018eb:	ff d0                	callq  *%rax$/;"	l
ffff8000001018ed	kernel.asm	/^ffff8000001018ed:	85 c0                	test   %eax,%eax$/;"	l
ffff8000001018ef	kernel.asm	/^ffff8000001018ef:	0f 88 37 01 00 00    	js     ffff800000101a2c <exec+0x5d3>$/;"	l
ffff8000001018f5	kernel.asm	/^ffff8000001018f5:	48 8b 85 08 fe ff ff 	mov    -0x1f8(%rbp),%rax$/;"	l
ffff8000001018fc	kernel.asm	/^ffff8000001018fc:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff800000101900	kernel.asm	/^ffff800000101900:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000101904	kernel.asm	/^ffff800000101904:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ffff800000101908	kernel.asm	/^ffff800000101908:	eb 1c                	jmp    ffff800000101926 <exec+0x4cd>$/;"	l
ffff80000010190a	kernel.asm	/^ffff80000010190a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010190e	kernel.asm	/^ffff80000010190e:	0f b6 00             	movzbl (%rax),%eax$/;"	l
ffff800000101911	kernel.asm	/^ffff800000101911:	3c 2f                	cmp    $0x2f,%al$/;"	l
ffff800000101913	kernel.asm	/^ffff800000101913:	75 0c                	jne    ffff800000101921 <exec+0x4c8>$/;"	l
ffff800000101915	kernel.asm	/^ffff800000101915:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000101919	kernel.asm	/^ffff800000101919:	48 83 c0 01          	add    $0x1,%rax$/;"	l
ffff80000010191d	kernel.asm	/^ffff80000010191d:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ffff800000101921	kernel.asm	/^ffff800000101921:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)$/;"	l
ffff800000101926	kernel.asm	/^ffff800000101926:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010192a	kernel.asm	/^ffff80000010192a:	0f b6 00             	movzbl (%rax),%eax$/;"	l
ffff80000010192d	kernel.asm	/^ffff80000010192d:	84 c0                	test   %al,%al$/;"	l
ffff80000010192f	kernel.asm	/^ffff80000010192f:	75 d9                	jne    ffff80000010190a <exec+0x4b1>$/;"	l
ffff800000101931	kernel.asm	/^ffff800000101931:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000101938	kernel.asm	/^ffff800000101938:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff80000010193c	kernel.asm	/^ffff80000010193c:	48 8d 88 d0 00 00 00 	lea    0xd0(%rax),%rcx$/;"	l
ffff800000101943	kernel.asm	/^ffff800000101943:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000101947	kernel.asm	/^ffff800000101947:	ba 10 00 00 00       	mov    $0x10,%edx$/;"	l
ffff80000010194c	kernel.asm	/^ffff80000010194c:	48 89 c6             	mov    %rax,%rsi$/;"	l
ffff80000010194f	kernel.asm	/^ffff80000010194f:	48 89 cf             	mov    %rcx,%rdi$/;"	l
ffff800000101952	kernel.asm	/^ffff800000101952:	48 b8 4b 78 10 00 00 	movabs $0xffff80000010784b,%rax$/;"	l
ffff800000101959	kernel.asm	/^ffff800000101959:	80 ff ff $/;"	l
ffff80000010195c	kernel.asm	/^ffff80000010195c:	ff d0                	callq  *%rax$/;"	l
ffff80000010195e	kernel.asm	/^ffff80000010195e:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000101965	kernel.asm	/^ffff800000101965:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000101969	kernel.asm	/^ffff800000101969:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx$/;"	l
ffff80000010196d	kernel.asm	/^ffff80000010196d:	48 89 50 08          	mov    %rdx,0x8(%rax)$/;"	l
ffff800000101971	kernel.asm	/^ffff800000101971:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000101978	kernel.asm	/^ffff800000101978:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff80000010197c	kernel.asm	/^ffff80000010197c:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx$/;"	l
ffff800000101980	kernel.asm	/^ffff800000101980:	48 89 10             	mov    %rdx,(%rax)$/;"	l
ffff800000101983	kernel.asm	/^ffff800000101983:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff80000010198a	kernel.asm	/^ffff80000010198a:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff80000010198e	kernel.asm	/^ffff80000010198e:	48 8b 40 28          	mov    0x28(%rax),%rax$/;"	l
ffff800000101992	kernel.asm	/^ffff800000101992:	48 8b 95 68 fe ff ff 	mov    -0x198(%rbp),%rdx$/;"	l
ffff800000101999	kernel.asm	/^ffff800000101999:	48 89 90 88 00 00 00 	mov    %rdx,0x88(%rax)$/;"	l
ffff8000001019a0	kernel.asm	/^ffff8000001019a0:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff8000001019a7	kernel.asm	/^ffff8000001019a7:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff8000001019ab	kernel.asm	/^ffff8000001019ab:	48 8b 40 28          	mov    0x28(%rax),%rax$/;"	l
ffff8000001019af	kernel.asm	/^ffff8000001019af:	48 8b 95 68 fe ff ff 	mov    -0x198(%rbp),%rdx$/;"	l
ffff8000001019b6	kernel.asm	/^ffff8000001019b6:	48 89 50 10          	mov    %rdx,0x10(%rax)$/;"	l
ffff8000001019ba	kernel.asm	/^ffff8000001019ba:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff8000001019c1	kernel.asm	/^ffff8000001019c1:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff8000001019c5	kernel.asm	/^ffff8000001019c5:	48 8b 40 28          	mov    0x28(%rax),%rax$/;"	l
ffff8000001019c9	kernel.asm	/^ffff8000001019c9:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx$/;"	l
ffff8000001019cd	kernel.asm	/^ffff8000001019cd:	48 89 90 a0 00 00 00 	mov    %rdx,0xa0(%rax)$/;"	l
ffff8000001019d4	kernel.asm	/^ffff8000001019d4:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff8000001019db	kernel.asm	/^ffff8000001019db:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff8000001019df	kernel.asm	/^ffff8000001019df:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001019e2	kernel.asm	/^ffff8000001019e2:	48 b8 c6 ac 10 00 00 	movabs $0xffff80000010acc6,%rax$/;"	l
ffff8000001019e9	kernel.asm	/^ffff8000001019e9:	80 ff ff $/;"	l
ffff8000001019ec	kernel.asm	/^ffff8000001019ec:	ff d0                	callq  *%rax$/;"	l
ffff8000001019ee	kernel.asm	/^ffff8000001019ee:	48 8b 45 b8          	mov    -0x48(%rbp),%rax$/;"	l
ffff8000001019f2	kernel.asm	/^ffff8000001019f2:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001019f5	kernel.asm	/^ffff8000001019f5:	48 b8 c2 b4 10 00 00 	movabs $0xffff80000010b4c2,%rax$/;"	l
ffff8000001019fc	kernel.asm	/^ffff8000001019fc:	80 ff ff $/;"	l
ffff8000001019ff	kernel.asm	/^ffff8000001019ff:	ff d0                	callq  *%rax$/;"	l
ffff800000101a01	kernel.asm	/^ffff800000101a01:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000101a06	kernel.asm	/^ffff800000101a06:	eb 6f                	jmp    ffff800000101a77 <exec+0x61e>$/;"	l
ffff800000101a08	kernel.asm	/^ffff800000101a08:	90                   	nop$/;"	l
ffff800000101a09	kernel.asm	/^ffff800000101a09:	eb 22                	jmp    ffff800000101a2d <exec+0x5d4>$/;"	l
ffff800000101a0b	kernel.asm	/^ffff800000101a0b:	90                   	nop$/;"	l
ffff800000101a0c	kernel.asm	/^ffff800000101a0c:	eb 1f                	jmp    ffff800000101a2d <exec+0x5d4>$/;"	l
ffff800000101a0e	kernel.asm	/^ffff800000101a0e:	90                   	nop$/;"	l
ffff800000101a0f	kernel.asm	/^ffff800000101a0f:	eb 1c                	jmp    ffff800000101a2d <exec+0x5d4>$/;"	l
ffff800000101a11	kernel.asm	/^ffff800000101a11:	90                   	nop$/;"	l
ffff800000101a12	kernel.asm	/^ffff800000101a12:	eb 19                	jmp    ffff800000101a2d <exec+0x5d4>$/;"	l
ffff800000101a14	kernel.asm	/^ffff800000101a14:	90                   	nop$/;"	l
ffff800000101a15	kernel.asm	/^ffff800000101a15:	eb 16                	jmp    ffff800000101a2d <exec+0x5d4>$/;"	l
ffff800000101a17	kernel.asm	/^ffff800000101a17:	90                   	nop$/;"	l
ffff800000101a18	kernel.asm	/^ffff800000101a18:	eb 13                	jmp    ffff800000101a2d <exec+0x5d4>$/;"	l
ffff800000101a1a	kernel.asm	/^ffff800000101a1a:	90                   	nop$/;"	l
ffff800000101a1b	kernel.asm	/^ffff800000101a1b:	eb 10                	jmp    ffff800000101a2d <exec+0x5d4>$/;"	l
ffff800000101a1d	kernel.asm	/^ffff800000101a1d:	90                   	nop$/;"	l
ffff800000101a1e	kernel.asm	/^ffff800000101a1e:	eb 0d                	jmp    ffff800000101a2d <exec+0x5d4>$/;"	l
ffff800000101a20	kernel.asm	/^ffff800000101a20:	90                   	nop$/;"	l
ffff800000101a21	kernel.asm	/^ffff800000101a21:	eb 0a                	jmp    ffff800000101a2d <exec+0x5d4>$/;"	l
ffff800000101a23	kernel.asm	/^ffff800000101a23:	90                   	nop$/;"	l
ffff800000101a24	kernel.asm	/^ffff800000101a24:	eb 07                	jmp    ffff800000101a2d <exec+0x5d4>$/;"	l
ffff800000101a26	kernel.asm	/^ffff800000101a26:	90                   	nop$/;"	l
ffff800000101a27	kernel.asm	/^ffff800000101a27:	eb 04                	jmp    ffff800000101a2d <exec+0x5d4>$/;"	l
ffff800000101a29	kernel.asm	/^ffff800000101a29:	90                   	nop$/;"	l
ffff800000101a2a	kernel.asm	/^ffff800000101a2a:	eb 01                	jmp    ffff800000101a2d <exec+0x5d4>$/;"	l
ffff800000101a2c	kernel.asm	/^ffff800000101a2c:	90                   	nop$/;"	l
ffff800000101a2d	kernel.asm	/^ffff800000101a2d:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)$/;"	l
ffff800000101a32	kernel.asm	/^ffff800000101a32:	74 13                	je     ffff800000101a47 <exec+0x5ee>$/;"	l
ffff800000101a34	kernel.asm	/^ffff800000101a34:	48 8b 45 c0          	mov    -0x40(%rbp),%rax$/;"	l
ffff800000101a38	kernel.asm	/^ffff800000101a38:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000101a3b	kernel.asm	/^ffff800000101a3b:	48 b8 c2 b4 10 00 00 	movabs $0xffff80000010b4c2,%rax$/;"	l
ffff800000101a42	kernel.asm	/^ffff800000101a42:	80 ff ff $/;"	l
ffff800000101a45	kernel.asm	/^ffff800000101a45:	ff d0                	callq  *%rax$/;"	l
ffff800000101a47	kernel.asm	/^ffff800000101a47:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)$/;"	l
ffff800000101a4c	kernel.asm	/^ffff800000101a4c:	74 24                	je     ffff800000101a72 <exec+0x619>$/;"	l
ffff800000101a4e	kernel.asm	/^ffff800000101a4e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
ffff800000101a52	kernel.asm	/^ffff800000101a52:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000101a55	kernel.asm	/^ffff800000101a55:	48 b8 ae 2a 10 00 00 	movabs $0xffff800000102aae,%rax$/;"	l
ffff800000101a5c	kernel.asm	/^ffff800000101a5c:	80 ff ff $/;"	l
ffff800000101a5f	kernel.asm	/^ffff800000101a5f:	ff d0                	callq  *%rax$/;"	l
ffff800000101a61	kernel.asm	/^ffff800000101a61:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000101a66	kernel.asm	/^ffff800000101a66:	48 ba 74 4e 10 00 00 	movabs $0xffff800000104e74,%rdx$/;"	l
ffff800000101a6d	kernel.asm	/^ffff800000101a6d:	80 ff ff $/;"	l
ffff800000101a70	kernel.asm	/^ffff800000101a70:	ff d2                	callq  *%rdx$/;"	l
ffff800000101a72	kernel.asm	/^ffff800000101a72:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff800000101a77	kernel.asm	/^ffff800000101a77:	c9                   	leaveq $/;"	l
ffff800000101a78	kernel.asm	/^ffff800000101a78:	c3                   	retq   $/;"	l
ffff800000101a79	kernel.asm	/^ffff800000101a79 <fileinit>:$/;"	l
ffff800000101a79	kernel.asm	/^ffff800000101a79:	55                   	push   %rbp$/;"	l
ffff800000101a7a	kernel.asm	/^ffff800000101a7a:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000101a7d	kernel.asm	/^ffff800000101a7d:	48 be a0 ba 10 00 00 	movabs $0xffff80000010baa0,%rsi$/;"	l
ffff800000101a84	kernel.asm	/^ffff800000101a84:	80 ff ff $/;"	l
ffff800000101a87	kernel.asm	/^ffff800000101a87:	48 bf e0 35 11 00 00 	movabs $0xffff8000001135e0,%rdi$/;"	l
ffff800000101a8e	kernel.asm	/^ffff800000101a8e:	80 ff ff $/;"	l
ffff800000101a91	kernel.asm	/^ffff800000101a91:	48 b8 ca 71 10 00 00 	movabs $0xffff8000001071ca,%rax$/;"	l
ffff800000101a98	kernel.asm	/^ffff800000101a98:	80 ff ff $/;"	l
ffff800000101a9b	kernel.asm	/^ffff800000101a9b:	ff d0                	callq  *%rax$/;"	l
ffff800000101a9d	kernel.asm	/^ffff800000101a9d:	90                   	nop$/;"	l
ffff800000101a9e	kernel.asm	/^ffff800000101a9e:	5d                   	pop    %rbp$/;"	l
ffff800000101a9f	kernel.asm	/^ffff800000101a9f:	c3                   	retq   $/;"	l
ffff800000101aa0	kernel.asm	/^ffff800000101aa0 <filealloc>:$/;"	l
ffff800000101aa0	kernel.asm	/^ffff800000101aa0:	55                   	push   %rbp$/;"	l
ffff800000101aa1	kernel.asm	/^ffff800000101aa1:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000101aa4	kernel.asm	/^ffff800000101aa4:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff800000101aa8	kernel.asm	/^ffff800000101aa8:	48 bf e0 35 11 00 00 	movabs $0xffff8000001135e0,%rdi$/;"	l
ffff800000101aaf	kernel.asm	/^ffff800000101aaf:	80 ff ff $/;"	l
ffff800000101ab2	kernel.asm	/^ffff800000101ab2:	48 b8 ff 71 10 00 00 	movabs $0xffff8000001071ff,%rax$/;"	l
ffff800000101ab9	kernel.asm	/^ffff800000101ab9:	80 ff ff $/;"	l
ffff800000101abc	kernel.asm	/^ffff800000101abc:	ff d0                	callq  *%rax$/;"	l
ffff800000101abe	kernel.asm	/^ffff800000101abe:	48 b8 48 36 11 00 00 	movabs $0xffff800000113648,%rax$/;"	l
ffff800000101ac5	kernel.asm	/^ffff800000101ac5:	80 ff ff $/;"	l
ffff800000101ac8	kernel.asm	/^ffff800000101ac8:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff800000101acc	kernel.asm	/^ffff800000101acc:	eb 37                	jmp    ffff800000101b05 <filealloc+0x65>$/;"	l
ffff800000101ace	kernel.asm	/^ffff800000101ace:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000101ad2	kernel.asm	/^ffff800000101ad2:	8b 40 04             	mov    0x4(%rax),%eax$/;"	l
ffff800000101ad5	kernel.asm	/^ffff800000101ad5:	85 c0                	test   %eax,%eax$/;"	l
ffff800000101ad7	kernel.asm	/^ffff800000101ad7:	75 27                	jne    ffff800000101b00 <filealloc+0x60>$/;"	l
ffff800000101ad9	kernel.asm	/^ffff800000101ad9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000101add	kernel.asm	/^ffff800000101add:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%rax)$/;"	l
ffff800000101ae4	kernel.asm	/^ffff800000101ae4:	48 bf e0 35 11 00 00 	movabs $0xffff8000001135e0,%rdi$/;"	l
ffff800000101aeb	kernel.asm	/^ffff800000101aeb:	80 ff ff $/;"	l
ffff800000101aee	kernel.asm	/^ffff800000101aee:	48 b8 98 72 10 00 00 	movabs $0xffff800000107298,%rax$/;"	l
ffff800000101af5	kernel.asm	/^ffff800000101af5:	80 ff ff $/;"	l
ffff800000101af8	kernel.asm	/^ffff800000101af8:	ff d0                	callq  *%rax$/;"	l
ffff800000101afa	kernel.asm	/^ffff800000101afa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000101afe	kernel.asm	/^ffff800000101afe:	eb 30                	jmp    ffff800000101b30 <filealloc+0x90>$/;"	l
ffff800000101b00	kernel.asm	/^ffff800000101b00:	48 83 45 f8 28       	addq   $0x28,-0x8(%rbp)$/;"	l
ffff800000101b05	kernel.asm	/^ffff800000101b05:	48 b8 e8 45 11 00 00 	movabs $0xffff8000001145e8,%rax$/;"	l
ffff800000101b0c	kernel.asm	/^ffff800000101b0c:	80 ff ff $/;"	l
ffff800000101b0f	kernel.asm	/^ffff800000101b0f:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)$/;"	l
ffff800000101b13	kernel.asm	/^ffff800000101b13:	72 b9                	jb     ffff800000101ace <filealloc+0x2e>$/;"	l
ffff800000101b15	kernel.asm	/^ffff800000101b15:	48 bf e0 35 11 00 00 	movabs $0xffff8000001135e0,%rdi$/;"	l
ffff800000101b1c	kernel.asm	/^ffff800000101b1c:	80 ff ff $/;"	l
ffff800000101b1f	kernel.asm	/^ffff800000101b1f:	48 b8 98 72 10 00 00 	movabs $0xffff800000107298,%rax$/;"	l
ffff800000101b26	kernel.asm	/^ffff800000101b26:	80 ff ff $/;"	l
ffff800000101b29	kernel.asm	/^ffff800000101b29:	ff d0                	callq  *%rax$/;"	l
ffff800000101b2b	kernel.asm	/^ffff800000101b2b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000101b30	kernel.asm	/^ffff800000101b30:	c9                   	leaveq $/;"	l
ffff800000101b31	kernel.asm	/^ffff800000101b31:	c3                   	retq   $/;"	l
ffff800000101b32	kernel.asm	/^ffff800000101b32 <filedup>:$/;"	l
ffff800000101b32	kernel.asm	/^ffff800000101b32:	55                   	push   %rbp$/;"	l
ffff800000101b33	kernel.asm	/^ffff800000101b33:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000101b36	kernel.asm	/^ffff800000101b36:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff800000101b3a	kernel.asm	/^ffff800000101b3a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)$/;"	l
ffff800000101b3e	kernel.asm	/^ffff800000101b3e:	48 bf e0 35 11 00 00 	movabs $0xffff8000001135e0,%rdi$/;"	l
ffff800000101b45	kernel.asm	/^ffff800000101b45:	80 ff ff $/;"	l
ffff800000101b48	kernel.asm	/^ffff800000101b48:	48 b8 ff 71 10 00 00 	movabs $0xffff8000001071ff,%rax$/;"	l
ffff800000101b4f	kernel.asm	/^ffff800000101b4f:	80 ff ff $/;"	l
ffff800000101b52	kernel.asm	/^ffff800000101b52:	ff d0                	callq  *%rax$/;"	l
ffff800000101b54	kernel.asm	/^ffff800000101b54:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000101b58	kernel.asm	/^ffff800000101b58:	8b 40 04             	mov    0x4(%rax),%eax$/;"	l
ffff800000101b5b	kernel.asm	/^ffff800000101b5b:	85 c0                	test   %eax,%eax$/;"	l
ffff800000101b5d	kernel.asm	/^ffff800000101b5d:	7f 16                	jg     ffff800000101b75 <filedup+0x43>$/;"	l
ffff800000101b5f	kernel.asm	/^ffff800000101b5f:	48 bf a7 ba 10 00 00 	movabs $0xffff80000010baa7,%rdi$/;"	l
ffff800000101b66	kernel.asm	/^ffff800000101b66:	80 ff ff $/;"	l
ffff800000101b69	kernel.asm	/^ffff800000101b69:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff800000101b70	kernel.asm	/^ffff800000101b70:	80 ff ff $/;"	l
ffff800000101b73	kernel.asm	/^ffff800000101b73:	ff d0                	callq  *%rax$/;"	l
ffff800000101b75	kernel.asm	/^ffff800000101b75:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000101b79	kernel.asm	/^ffff800000101b79:	8b 40 04             	mov    0x4(%rax),%eax$/;"	l
ffff800000101b7c	kernel.asm	/^ffff800000101b7c:	8d 50 01             	lea    0x1(%rax),%edx$/;"	l
ffff800000101b7f	kernel.asm	/^ffff800000101b7f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000101b83	kernel.asm	/^ffff800000101b83:	89 50 04             	mov    %edx,0x4(%rax)$/;"	l
ffff800000101b86	kernel.asm	/^ffff800000101b86:	48 bf e0 35 11 00 00 	movabs $0xffff8000001135e0,%rdi$/;"	l
ffff800000101b8d	kernel.asm	/^ffff800000101b8d:	80 ff ff $/;"	l
ffff800000101b90	kernel.asm	/^ffff800000101b90:	48 b8 98 72 10 00 00 	movabs $0xffff800000107298,%rax$/;"	l
ffff800000101b97	kernel.asm	/^ffff800000101b97:	80 ff ff $/;"	l
ffff800000101b9a	kernel.asm	/^ffff800000101b9a:	ff d0                	callq  *%rax$/;"	l
ffff800000101b9c	kernel.asm	/^ffff800000101b9c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000101ba0	kernel.asm	/^ffff800000101ba0:	c9                   	leaveq $/;"	l
ffff800000101ba1	kernel.asm	/^ffff800000101ba1:	c3                   	retq   $/;"	l
ffff800000101ba2	kernel.asm	/^ffff800000101ba2 <fileclose>:$/;"	l
ffff800000101ba2	kernel.asm	/^ffff800000101ba2:	55                   	push   %rbp$/;"	l
ffff800000101ba3	kernel.asm	/^ffff800000101ba3:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000101ba6	kernel.asm	/^ffff800000101ba6:	48 83 ec 40          	sub    $0x40,%rsp$/;"	l
ffff800000101baa	kernel.asm	/^ffff800000101baa:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)$/;"	l
ffff800000101bae	kernel.asm	/^ffff800000101bae:	48 bf e0 35 11 00 00 	movabs $0xffff8000001135e0,%rdi$/;"	l
ffff800000101bb5	kernel.asm	/^ffff800000101bb5:	80 ff ff $/;"	l
ffff800000101bb8	kernel.asm	/^ffff800000101bb8:	48 b8 ff 71 10 00 00 	movabs $0xffff8000001071ff,%rax$/;"	l
ffff800000101bbf	kernel.asm	/^ffff800000101bbf:	80 ff ff $/;"	l
ffff800000101bc2	kernel.asm	/^ffff800000101bc2:	ff d0                	callq  *%rax$/;"	l
ffff800000101bc4	kernel.asm	/^ffff800000101bc4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
ffff800000101bc8	kernel.asm	/^ffff800000101bc8:	8b 40 04             	mov    0x4(%rax),%eax$/;"	l
ffff800000101bcb	kernel.asm	/^ffff800000101bcb:	85 c0                	test   %eax,%eax$/;"	l
ffff800000101bcd	kernel.asm	/^ffff800000101bcd:	7f 16                	jg     ffff800000101be5 <fileclose+0x43>$/;"	l
ffff800000101bcf	kernel.asm	/^ffff800000101bcf:	48 bf af ba 10 00 00 	movabs $0xffff80000010baaf,%rdi$/;"	l
ffff800000101bd6	kernel.asm	/^ffff800000101bd6:	80 ff ff $/;"	l
ffff800000101bd9	kernel.asm	/^ffff800000101bd9:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff800000101be0	kernel.asm	/^ffff800000101be0:	80 ff ff $/;"	l
ffff800000101be3	kernel.asm	/^ffff800000101be3:	ff d0                	callq  *%rax$/;"	l
ffff800000101be5	kernel.asm	/^ffff800000101be5:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
ffff800000101be9	kernel.asm	/^ffff800000101be9:	8b 40 04             	mov    0x4(%rax),%eax$/;"	l
ffff800000101bec	kernel.asm	/^ffff800000101bec:	8d 50 ff             	lea    -0x1(%rax),%edx$/;"	l
ffff800000101bef	kernel.asm	/^ffff800000101bef:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
ffff800000101bf3	kernel.asm	/^ffff800000101bf3:	89 50 04             	mov    %edx,0x4(%rax)$/;"	l
ffff800000101bf6	kernel.asm	/^ffff800000101bf6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
ffff800000101bfa	kernel.asm	/^ffff800000101bfa:	8b 40 04             	mov    0x4(%rax),%eax$/;"	l
ffff800000101bfd	kernel.asm	/^ffff800000101bfd:	85 c0                	test   %eax,%eax$/;"	l
ffff800000101bff	kernel.asm	/^ffff800000101bff:	7e 1b                	jle    ffff800000101c1c <fileclose+0x7a>$/;"	l
ffff800000101c01	kernel.asm	/^ffff800000101c01:	48 bf e0 35 11 00 00 	movabs $0xffff8000001135e0,%rdi$/;"	l
ffff800000101c08	kernel.asm	/^ffff800000101c08:	80 ff ff $/;"	l
ffff800000101c0b	kernel.asm	/^ffff800000101c0b:	48 b8 98 72 10 00 00 	movabs $0xffff800000107298,%rax$/;"	l
ffff800000101c12	kernel.asm	/^ffff800000101c12:	80 ff ff $/;"	l
ffff800000101c15	kernel.asm	/^ffff800000101c15:	ff d0                	callq  *%rax$/;"	l
ffff800000101c17	kernel.asm	/^ffff800000101c17:	e9 b9 00 00 00       	jmpq   ffff800000101cd5 <fileclose+0x133>$/;"	l
ffff800000101c1c	kernel.asm	/^ffff800000101c1c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
ffff800000101c20	kernel.asm	/^ffff800000101c20:	48 8b 10             	mov    (%rax),%rdx$/;"	l
ffff800000101c23	kernel.asm	/^ffff800000101c23:	48 89 55 d0          	mov    %rdx,-0x30(%rbp)$/;"	l
ffff800000101c27	kernel.asm	/^ffff800000101c27:	48 8b 50 08          	mov    0x8(%rax),%rdx$/;"	l
ffff800000101c2b	kernel.asm	/^ffff800000101c2b:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)$/;"	l
ffff800000101c2f	kernel.asm	/^ffff800000101c2f:	48 8b 50 10          	mov    0x10(%rax),%rdx$/;"	l
ffff800000101c33	kernel.asm	/^ffff800000101c33:	48 89 55 e0          	mov    %rdx,-0x20(%rbp)$/;"	l
ffff800000101c37	kernel.asm	/^ffff800000101c37:	48 8b 50 18          	mov    0x18(%rax),%rdx$/;"	l
ffff800000101c3b	kernel.asm	/^ffff800000101c3b:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)$/;"	l
ffff800000101c3f	kernel.asm	/^ffff800000101c3f:	48 8b 40 20          	mov    0x20(%rax),%rax$/;"	l
ffff800000101c43	kernel.asm	/^ffff800000101c43:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ffff800000101c47	kernel.asm	/^ffff800000101c47:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
ffff800000101c4b	kernel.asm	/^ffff800000101c4b:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%rax)$/;"	l
ffff800000101c52	kernel.asm	/^ffff800000101c52:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
ffff800000101c56	kernel.asm	/^ffff800000101c56:	c7 00 00 00 00 00    	movl   $0x0,(%rax)$/;"	l
ffff800000101c5c	kernel.asm	/^ffff800000101c5c:	48 bf e0 35 11 00 00 	movabs $0xffff8000001135e0,%rdi$/;"	l
ffff800000101c63	kernel.asm	/^ffff800000101c63:	80 ff ff $/;"	l
ffff800000101c66	kernel.asm	/^ffff800000101c66:	48 b8 98 72 10 00 00 	movabs $0xffff800000107298,%rax$/;"	l
ffff800000101c6d	kernel.asm	/^ffff800000101c6d:	80 ff ff $/;"	l
ffff800000101c70	kernel.asm	/^ffff800000101c70:	ff d0                	callq  *%rax$/;"	l
ffff800000101c72	kernel.asm	/^ffff800000101c72:	8b 45 d0             	mov    -0x30(%rbp),%eax$/;"	l
ffff800000101c75	kernel.asm	/^ffff800000101c75:	83 f8 01             	cmp    $0x1,%eax$/;"	l
ffff800000101c78	kernel.asm	/^ffff800000101c78:	75 1e                	jne    ffff800000101c98 <fileclose+0xf6>$/;"	l
ffff800000101c7a	kernel.asm	/^ffff800000101c7a:	0f b6 45 d9          	movzbl -0x27(%rbp),%eax$/;"	l
ffff800000101c7e	kernel.asm	/^ffff800000101c7e:	0f be d0             	movsbl %al,%edx$/;"	l
ffff800000101c81	kernel.asm	/^ffff800000101c81:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff800000101c85	kernel.asm	/^ffff800000101c85:	89 d6                	mov    %edx,%esi$/;"	l
ffff800000101c87	kernel.asm	/^ffff800000101c87:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000101c8a	kernel.asm	/^ffff800000101c8a:	48 b8 5c 5c 10 00 00 	movabs $0xffff800000105c5c,%rax$/;"	l
ffff800000101c91	kernel.asm	/^ffff800000101c91:	80 ff ff $/;"	l
ffff800000101c94	kernel.asm	/^ffff800000101c94:	ff d0                	callq  *%rax$/;"	l
ffff800000101c96	kernel.asm	/^ffff800000101c96:	eb 3d                	jmp    ffff800000101cd5 <fileclose+0x133>$/;"	l
ffff800000101c98	kernel.asm	/^ffff800000101c98:	8b 45 d0             	mov    -0x30(%rbp),%eax$/;"	l
ffff800000101c9b	kernel.asm	/^ffff800000101c9b:	83 f8 02             	cmp    $0x2,%eax$/;"	l
ffff800000101c9e	kernel.asm	/^ffff800000101c9e:	75 35                	jne    ffff800000101cd5 <fileclose+0x133>$/;"	l
ffff800000101ca0	kernel.asm	/^ffff800000101ca0:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000101ca5	kernel.asm	/^ffff800000101ca5:	48 ba 9e 4d 10 00 00 	movabs $0xffff800000104d9e,%rdx$/;"	l
ffff800000101cac	kernel.asm	/^ffff800000101cac:	80 ff ff $/;"	l
ffff800000101caf	kernel.asm	/^ffff800000101caf:	ff d2                	callq  *%rdx$/;"	l
ffff800000101cb1	kernel.asm	/^ffff800000101cb1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000101cb5	kernel.asm	/^ffff800000101cb5:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000101cb8	kernel.asm	/^ffff800000101cb8:	48 b8 c4 29 10 00 00 	movabs $0xffff8000001029c4,%rax$/;"	l
ffff800000101cbf	kernel.asm	/^ffff800000101cbf:	80 ff ff $/;"	l
ffff800000101cc2	kernel.asm	/^ffff800000101cc2:	ff d0                	callq  *%rax$/;"	l
ffff800000101cc4	kernel.asm	/^ffff800000101cc4:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000101cc9	kernel.asm	/^ffff800000101cc9:	48 ba 74 4e 10 00 00 	movabs $0xffff800000104e74,%rdx$/;"	l
ffff800000101cd0	kernel.asm	/^ffff800000101cd0:	80 ff ff $/;"	l
ffff800000101cd3	kernel.asm	/^ffff800000101cd3:	ff d2                	callq  *%rdx$/;"	l
ffff800000101cd5	kernel.asm	/^ffff800000101cd5:	c9                   	leaveq $/;"	l
ffff800000101cd6	kernel.asm	/^ffff800000101cd6:	c3                   	retq   $/;"	l
ffff800000101cd7	kernel.asm	/^ffff800000101cd7 <filestat>:$/;"	l
ffff800000101cd7	kernel.asm	/^ffff800000101cd7:	55                   	push   %rbp$/;"	l
ffff800000101cd8	kernel.asm	/^ffff800000101cd8:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000101cdb	kernel.asm	/^ffff800000101cdb:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff800000101cdf	kernel.asm	/^ffff800000101cdf:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)$/;"	l
ffff800000101ce3	kernel.asm	/^ffff800000101ce3:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)$/;"	l
ffff800000101ce7	kernel.asm	/^ffff800000101ce7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000101ceb	kernel.asm	/^ffff800000101ceb:	8b 00                	mov    (%rax),%eax$/;"	l
ffff800000101ced	kernel.asm	/^ffff800000101ced:	83 f8 02             	cmp    $0x2,%eax$/;"	l
ffff800000101cf0	kernel.asm	/^ffff800000101cf0:	75 53                	jne    ffff800000101d45 <filestat+0x6e>$/;"	l
ffff800000101cf2	kernel.asm	/^ffff800000101cf2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000101cf6	kernel.asm	/^ffff800000101cf6:	48 8b 40 18          	mov    0x18(%rax),%rax$/;"	l
ffff800000101cfa	kernel.asm	/^ffff800000101cfa:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000101cfd	kernel.asm	/^ffff800000101cfd:	48 b8 ca 27 10 00 00 	movabs $0xffff8000001027ca,%rax$/;"	l
ffff800000101d04	kernel.asm	/^ffff800000101d04:	80 ff ff $/;"	l
ffff800000101d07	kernel.asm	/^ffff800000101d07:	ff d0                	callq  *%rax$/;"	l
ffff800000101d09	kernel.asm	/^ffff800000101d09:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000101d0d	kernel.asm	/^ffff800000101d0d:	48 8b 40 18          	mov    0x18(%rax),%rax$/;"	l
ffff800000101d11	kernel.asm	/^ffff800000101d11:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
ffff800000101d15	kernel.asm	/^ffff800000101d15:	48 89 d6             	mov    %rdx,%rsi$/;"	l
ffff800000101d18	kernel.asm	/^ffff800000101d18:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000101d1b	kernel.asm	/^ffff800000101d1b:	48 b8 b8 2d 10 00 00 	movabs $0xffff800000102db8,%rax$/;"	l
ffff800000101d22	kernel.asm	/^ffff800000101d22:	80 ff ff $/;"	l
ffff800000101d25	kernel.asm	/^ffff800000101d25:	ff d0                	callq  *%rax$/;"	l
ffff800000101d27	kernel.asm	/^ffff800000101d27:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000101d2b	kernel.asm	/^ffff800000101d2b:	48 8b 40 18          	mov    0x18(%rax),%rax$/;"	l
ffff800000101d2f	kernel.asm	/^ffff800000101d2f:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000101d32	kernel.asm	/^ffff800000101d32:	48 b8 5b 29 10 00 00 	movabs $0xffff80000010295b,%rax$/;"	l
ffff800000101d39	kernel.asm	/^ffff800000101d39:	80 ff ff $/;"	l
ffff800000101d3c	kernel.asm	/^ffff800000101d3c:	ff d0                	callq  *%rax$/;"	l
ffff800000101d3e	kernel.asm	/^ffff800000101d3e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000101d43	kernel.asm	/^ffff800000101d43:	eb 05                	jmp    ffff800000101d4a <filestat+0x73>$/;"	l
ffff800000101d45	kernel.asm	/^ffff800000101d45:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff800000101d4a	kernel.asm	/^ffff800000101d4a:	c9                   	leaveq $/;"	l
ffff800000101d4b	kernel.asm	/^ffff800000101d4b:	c3                   	retq   $/;"	l
ffff800000101d4c	kernel.asm	/^ffff800000101d4c <fileread>:$/;"	l
ffff800000101d4c	kernel.asm	/^ffff800000101d4c:	55                   	push   %rbp$/;"	l
ffff800000101d4d	kernel.asm	/^ffff800000101d4d:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000101d50	kernel.asm	/^ffff800000101d50:	48 83 ec 30          	sub    $0x30,%rsp$/;"	l
ffff800000101d54	kernel.asm	/^ffff800000101d54:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
ffff800000101d58	kernel.asm	/^ffff800000101d58:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)$/;"	l
ffff800000101d5c	kernel.asm	/^ffff800000101d5c:	89 55 dc             	mov    %edx,-0x24(%rbp)$/;"	l
ffff800000101d5f	kernel.asm	/^ffff800000101d5f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000101d63	kernel.asm	/^ffff800000101d63:	0f b6 40 08          	movzbl 0x8(%rax),%eax$/;"	l
ffff800000101d67	kernel.asm	/^ffff800000101d67:	84 c0                	test   %al,%al$/;"	l
ffff800000101d69	kernel.asm	/^ffff800000101d69:	75 0a                	jne    ffff800000101d75 <fileread+0x29>$/;"	l
ffff800000101d6b	kernel.asm	/^ffff800000101d6b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff800000101d70	kernel.asm	/^ffff800000101d70:	e9 c6 00 00 00       	jmpq   ffff800000101e3b <fileread+0xef>$/;"	l
ffff800000101d75	kernel.asm	/^ffff800000101d75:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000101d79	kernel.asm	/^ffff800000101d79:	8b 00                	mov    (%rax),%eax$/;"	l
ffff800000101d7b	kernel.asm	/^ffff800000101d7b:	83 f8 01             	cmp    $0x1,%eax$/;"	l
ffff800000101d7e	kernel.asm	/^ffff800000101d7e:	75 26                	jne    ffff800000101da6 <fileread+0x5a>$/;"	l
ffff800000101d80	kernel.asm	/^ffff800000101d80:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000101d84	kernel.asm	/^ffff800000101d84:	48 8b 40 10          	mov    0x10(%rax),%rax$/;"	l
ffff800000101d88	kernel.asm	/^ffff800000101d88:	8b 55 dc             	mov    -0x24(%rbp),%edx$/;"	l
ffff800000101d8b	kernel.asm	/^ffff800000101d8b:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx$/;"	l
ffff800000101d8f	kernel.asm	/^ffff800000101d8f:	48 89 ce             	mov    %rcx,%rsi$/;"	l
ffff800000101d92	kernel.asm	/^ffff800000101d92:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000101d95	kernel.asm	/^ffff800000101d95:	48 b8 6d 5e 10 00 00 	movabs $0xffff800000105e6d,%rax$/;"	l
ffff800000101d9c	kernel.asm	/^ffff800000101d9c:	80 ff ff $/;"	l
ffff800000101d9f	kernel.asm	/^ffff800000101d9f:	ff d0                	callq  *%rax$/;"	l
ffff800000101da1	kernel.asm	/^ffff800000101da1:	e9 95 00 00 00       	jmpq   ffff800000101e3b <fileread+0xef>$/;"	l
ffff800000101da6	kernel.asm	/^ffff800000101da6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000101daa	kernel.asm	/^ffff800000101daa:	8b 00                	mov    (%rax),%eax$/;"	l
ffff800000101dac	kernel.asm	/^ffff800000101dac:	83 f8 02             	cmp    $0x2,%eax$/;"	l
ffff800000101daf	kernel.asm	/^ffff800000101daf:	75 74                	jne    ffff800000101e25 <fileread+0xd9>$/;"	l
ffff800000101db1	kernel.asm	/^ffff800000101db1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000101db5	kernel.asm	/^ffff800000101db5:	48 8b 40 18          	mov    0x18(%rax),%rax$/;"	l
ffff800000101db9	kernel.asm	/^ffff800000101db9:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000101dbc	kernel.asm	/^ffff800000101dbc:	48 b8 ca 27 10 00 00 	movabs $0xffff8000001027ca,%rax$/;"	l
ffff800000101dc3	kernel.asm	/^ffff800000101dc3:	80 ff ff $/;"	l
ffff800000101dc6	kernel.asm	/^ffff800000101dc6:	ff d0                	callq  *%rax$/;"	l
ffff800000101dc8	kernel.asm	/^ffff800000101dc8:	8b 4d dc             	mov    -0x24(%rbp),%ecx$/;"	l
ffff800000101dcb	kernel.asm	/^ffff800000101dcb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000101dcf	kernel.asm	/^ffff800000101dcf:	8b 50 20             	mov    0x20(%rax),%edx$/;"	l
ffff800000101dd2	kernel.asm	/^ffff800000101dd2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000101dd6	kernel.asm	/^ffff800000101dd6:	48 8b 40 18          	mov    0x18(%rax),%rax$/;"	l
ffff800000101dda	kernel.asm	/^ffff800000101dda:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi$/;"	l
ffff800000101dde	kernel.asm	/^ffff800000101dde:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000101de1	kernel.asm	/^ffff800000101de1:	48 b8 1e 2e 10 00 00 	movabs $0xffff800000102e1e,%rax$/;"	l
ffff800000101de8	kernel.asm	/^ffff800000101de8:	80 ff ff $/;"	l
ffff800000101deb	kernel.asm	/^ffff800000101deb:	ff d0                	callq  *%rax$/;"	l
ffff800000101ded	kernel.asm	/^ffff800000101ded:	89 45 fc             	mov    %eax,-0x4(%rbp)$/;"	l
ffff800000101df0	kernel.asm	/^ffff800000101df0:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)$/;"	l
ffff800000101df4	kernel.asm	/^ffff800000101df4:	7e 13                	jle    ffff800000101e09 <fileread+0xbd>$/;"	l
ffff800000101df6	kernel.asm	/^ffff800000101df6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000101dfa	kernel.asm	/^ffff800000101dfa:	8b 50 20             	mov    0x20(%rax),%edx$/;"	l
ffff800000101dfd	kernel.asm	/^ffff800000101dfd:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff800000101e00	kernel.asm	/^ffff800000101e00:	01 c2                	add    %eax,%edx$/;"	l
ffff800000101e02	kernel.asm	/^ffff800000101e02:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000101e06	kernel.asm	/^ffff800000101e06:	89 50 20             	mov    %edx,0x20(%rax)$/;"	l
ffff800000101e09	kernel.asm	/^ffff800000101e09:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000101e0d	kernel.asm	/^ffff800000101e0d:	48 8b 40 18          	mov    0x18(%rax),%rax$/;"	l
ffff800000101e11	kernel.asm	/^ffff800000101e11:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000101e14	kernel.asm	/^ffff800000101e14:	48 b8 5b 29 10 00 00 	movabs $0xffff80000010295b,%rax$/;"	l
ffff800000101e1b	kernel.asm	/^ffff800000101e1b:	80 ff ff $/;"	l
ffff800000101e1e	kernel.asm	/^ffff800000101e1e:	ff d0                	callq  *%rax$/;"	l
ffff800000101e20	kernel.asm	/^ffff800000101e20:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff800000101e23	kernel.asm	/^ffff800000101e23:	eb 16                	jmp    ffff800000101e3b <fileread+0xef>$/;"	l
ffff800000101e25	kernel.asm	/^ffff800000101e25:	48 bf b9 ba 10 00 00 	movabs $0xffff80000010bab9,%rdi$/;"	l
ffff800000101e2c	kernel.asm	/^ffff800000101e2c:	80 ff ff $/;"	l
ffff800000101e2f	kernel.asm	/^ffff800000101e2f:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff800000101e36	kernel.asm	/^ffff800000101e36:	80 ff ff $/;"	l
ffff800000101e39	kernel.asm	/^ffff800000101e39:	ff d0                	callq  *%rax$/;"	l
ffff800000101e3b	kernel.asm	/^ffff800000101e3b:	c9                   	leaveq $/;"	l
ffff800000101e3c	kernel.asm	/^ffff800000101e3c:	c3                   	retq   $/;"	l
ffff800000101e3d	kernel.asm	/^ffff800000101e3d <filewrite>:$/;"	l
ffff800000101e3d	kernel.asm	/^ffff800000101e3d:	55                   	push   %rbp$/;"	l
ffff800000101e3e	kernel.asm	/^ffff800000101e3e:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000101e41	kernel.asm	/^ffff800000101e41:	48 83 ec 30          	sub    $0x30,%rsp$/;"	l
ffff800000101e45	kernel.asm	/^ffff800000101e45:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
ffff800000101e49	kernel.asm	/^ffff800000101e49:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)$/;"	l
ffff800000101e4d	kernel.asm	/^ffff800000101e4d:	89 55 dc             	mov    %edx,-0x24(%rbp)$/;"	l
ffff800000101e50	kernel.asm	/^ffff800000101e50:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000101e54	kernel.asm	/^ffff800000101e54:	0f b6 40 09          	movzbl 0x9(%rax),%eax$/;"	l
ffff800000101e58	kernel.asm	/^ffff800000101e58:	84 c0                	test   %al,%al$/;"	l
ffff800000101e5a	kernel.asm	/^ffff800000101e5a:	75 0a                	jne    ffff800000101e66 <filewrite+0x29>$/;"	l
ffff800000101e5c	kernel.asm	/^ffff800000101e5c:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff800000101e61	kernel.asm	/^ffff800000101e61:	e9 67 01 00 00       	jmpq   ffff800000101fcd <filewrite+0x190>$/;"	l
ffff800000101e66	kernel.asm	/^ffff800000101e66:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000101e6a	kernel.asm	/^ffff800000101e6a:	8b 00                	mov    (%rax),%eax$/;"	l
ffff800000101e6c	kernel.asm	/^ffff800000101e6c:	83 f8 01             	cmp    $0x1,%eax$/;"	l
ffff800000101e6f	kernel.asm	/^ffff800000101e6f:	75 26                	jne    ffff800000101e97 <filewrite+0x5a>$/;"	l
ffff800000101e71	kernel.asm	/^ffff800000101e71:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000101e75	kernel.asm	/^ffff800000101e75:	48 8b 40 10          	mov    0x10(%rax),%rax$/;"	l
ffff800000101e79	kernel.asm	/^ffff800000101e79:	8b 55 dc             	mov    -0x24(%rbp),%edx$/;"	l
ffff800000101e7c	kernel.asm	/^ffff800000101e7c:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx$/;"	l
ffff800000101e80	kernel.asm	/^ffff800000101e80:	48 89 ce             	mov    %rcx,%rsi$/;"	l
ffff800000101e83	kernel.asm	/^ffff800000101e83:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000101e86	kernel.asm	/^ffff800000101e86:	48 b8 2e 5d 10 00 00 	movabs $0xffff800000105d2e,%rax$/;"	l
ffff800000101e8d	kernel.asm	/^ffff800000101e8d:	80 ff ff $/;"	l
ffff800000101e90	kernel.asm	/^ffff800000101e90:	ff d0                	callq  *%rax$/;"	l
ffff800000101e92	kernel.asm	/^ffff800000101e92:	e9 36 01 00 00       	jmpq   ffff800000101fcd <filewrite+0x190>$/;"	l
ffff800000101e97	kernel.asm	/^ffff800000101e97:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000101e9b	kernel.asm	/^ffff800000101e9b:	8b 00                	mov    (%rax),%eax$/;"	l
ffff800000101e9d	kernel.asm	/^ffff800000101e9d:	83 f8 02             	cmp    $0x2,%eax$/;"	l
ffff800000101ea0	kernel.asm	/^ffff800000101ea0:	0f 85 11 01 00 00    	jne    ffff800000101fb7 <filewrite+0x17a>$/;"	l
ffff800000101ea6	kernel.asm	/^ffff800000101ea6:	c7 45 f4 00 1a 00 00 	movl   $0x1a00,-0xc(%rbp)$/;"	l
ffff800000101ead	kernel.asm	/^ffff800000101ead:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)$/;"	l
ffff800000101eb4	kernel.asm	/^ffff800000101eb4:	e9 db 00 00 00       	jmpq   ffff800000101f94 <filewrite+0x157>$/;"	l
ffff800000101eb9	kernel.asm	/^ffff800000101eb9:	8b 45 dc             	mov    -0x24(%rbp),%eax$/;"	l
ffff800000101ebc	kernel.asm	/^ffff800000101ebc:	2b 45 fc             	sub    -0x4(%rbp),%eax$/;"	l
ffff800000101ebf	kernel.asm	/^ffff800000101ebf:	89 45 f8             	mov    %eax,-0x8(%rbp)$/;"	l
ffff800000101ec2	kernel.asm	/^ffff800000101ec2:	8b 45 f8             	mov    -0x8(%rbp),%eax$/;"	l
ffff800000101ec5	kernel.asm	/^ffff800000101ec5:	3b 45 f4             	cmp    -0xc(%rbp),%eax$/;"	l
ffff800000101ec8	kernel.asm	/^ffff800000101ec8:	7e 06                	jle    ffff800000101ed0 <filewrite+0x93>$/;"	l
ffff800000101eca	kernel.asm	/^ffff800000101eca:	8b 45 f4             	mov    -0xc(%rbp),%eax$/;"	l
ffff800000101ecd	kernel.asm	/^ffff800000101ecd:	89 45 f8             	mov    %eax,-0x8(%rbp)$/;"	l
ffff800000101ed0	kernel.asm	/^ffff800000101ed0:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000101ed5	kernel.asm	/^ffff800000101ed5:	48 ba 9e 4d 10 00 00 	movabs $0xffff800000104d9e,%rdx$/;"	l
ffff800000101edc	kernel.asm	/^ffff800000101edc:	80 ff ff $/;"	l
ffff800000101edf	kernel.asm	/^ffff800000101edf:	ff d2                	callq  *%rdx$/;"	l
ffff800000101ee1	kernel.asm	/^ffff800000101ee1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000101ee5	kernel.asm	/^ffff800000101ee5:	48 8b 40 18          	mov    0x18(%rax),%rax$/;"	l
ffff800000101ee9	kernel.asm	/^ffff800000101ee9:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000101eec	kernel.asm	/^ffff800000101eec:	48 b8 ca 27 10 00 00 	movabs $0xffff8000001027ca,%rax$/;"	l
ffff800000101ef3	kernel.asm	/^ffff800000101ef3:	80 ff ff $/;"	l
ffff800000101ef6	kernel.asm	/^ffff800000101ef6:	ff d0                	callq  *%rax$/;"	l
ffff800000101ef8	kernel.asm	/^ffff800000101ef8:	8b 4d f8             	mov    -0x8(%rbp),%ecx$/;"	l
ffff800000101efb	kernel.asm	/^ffff800000101efb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000101eff	kernel.asm	/^ffff800000101eff:	8b 50 20             	mov    0x20(%rax),%edx$/;"	l
ffff800000101f02	kernel.asm	/^ffff800000101f02:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff800000101f05	kernel.asm	/^ffff800000101f05:	48 63 f0             	movslq %eax,%rsi$/;"	l
ffff800000101f08	kernel.asm	/^ffff800000101f08:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff800000101f0c	kernel.asm	/^ffff800000101f0c:	48 01 c6             	add    %rax,%rsi$/;"	l
ffff800000101f0f	kernel.asm	/^ffff800000101f0f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000101f13	kernel.asm	/^ffff800000101f13:	48 8b 40 18          	mov    0x18(%rax),%rax$/;"	l
ffff800000101f17	kernel.asm	/^ffff800000101f17:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000101f1a	kernel.asm	/^ffff800000101f1a:	48 b8 ed 2f 10 00 00 	movabs $0xffff800000102fed,%rax$/;"	l
ffff800000101f21	kernel.asm	/^ffff800000101f21:	80 ff ff $/;"	l
ffff800000101f24	kernel.asm	/^ffff800000101f24:	ff d0                	callq  *%rax$/;"	l
ffff800000101f26	kernel.asm	/^ffff800000101f26:	89 45 f0             	mov    %eax,-0x10(%rbp)$/;"	l
ffff800000101f29	kernel.asm	/^ffff800000101f29:	83 7d f0 00          	cmpl   $0x0,-0x10(%rbp)$/;"	l
ffff800000101f2d	kernel.asm	/^ffff800000101f2d:	7e 13                	jle    ffff800000101f42 <filewrite+0x105>$/;"	l
ffff800000101f2f	kernel.asm	/^ffff800000101f2f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000101f33	kernel.asm	/^ffff800000101f33:	8b 50 20             	mov    0x20(%rax),%edx$/;"	l
ffff800000101f36	kernel.asm	/^ffff800000101f36:	8b 45 f0             	mov    -0x10(%rbp),%eax$/;"	l
ffff800000101f39	kernel.asm	/^ffff800000101f39:	01 c2                	add    %eax,%edx$/;"	l
ffff800000101f3b	kernel.asm	/^ffff800000101f3b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000101f3f	kernel.asm	/^ffff800000101f3f:	89 50 20             	mov    %edx,0x20(%rax)$/;"	l
ffff800000101f42	kernel.asm	/^ffff800000101f42:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000101f46	kernel.asm	/^ffff800000101f46:	48 8b 40 18          	mov    0x18(%rax),%rax$/;"	l
ffff800000101f4a	kernel.asm	/^ffff800000101f4a:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000101f4d	kernel.asm	/^ffff800000101f4d:	48 b8 5b 29 10 00 00 	movabs $0xffff80000010295b,%rax$/;"	l
ffff800000101f54	kernel.asm	/^ffff800000101f54:	80 ff ff $/;"	l
ffff800000101f57	kernel.asm	/^ffff800000101f57:	ff d0                	callq  *%rax$/;"	l
ffff800000101f59	kernel.asm	/^ffff800000101f59:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000101f5e	kernel.asm	/^ffff800000101f5e:	48 ba 74 4e 10 00 00 	movabs $0xffff800000104e74,%rdx$/;"	l
ffff800000101f65	kernel.asm	/^ffff800000101f65:	80 ff ff $/;"	l
ffff800000101f68	kernel.asm	/^ffff800000101f68:	ff d2                	callq  *%rdx$/;"	l
ffff800000101f6a	kernel.asm	/^ffff800000101f6a:	83 7d f0 00          	cmpl   $0x0,-0x10(%rbp)$/;"	l
ffff800000101f6e	kernel.asm	/^ffff800000101f6e:	78 32                	js     ffff800000101fa2 <filewrite+0x165>$/;"	l
ffff800000101f70	kernel.asm	/^ffff800000101f70:	8b 45 f0             	mov    -0x10(%rbp),%eax$/;"	l
ffff800000101f73	kernel.asm	/^ffff800000101f73:	3b 45 f8             	cmp    -0x8(%rbp),%eax$/;"	l
ffff800000101f76	kernel.asm	/^ffff800000101f76:	74 16                	je     ffff800000101f8e <filewrite+0x151>$/;"	l
ffff800000101f78	kernel.asm	/^ffff800000101f78:	48 bf c2 ba 10 00 00 	movabs $0xffff80000010bac2,%rdi$/;"	l
ffff800000101f7f	kernel.asm	/^ffff800000101f7f:	80 ff ff $/;"	l
ffff800000101f82	kernel.asm	/^ffff800000101f82:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff800000101f89	kernel.asm	/^ffff800000101f89:	80 ff ff $/;"	l
ffff800000101f8c	kernel.asm	/^ffff800000101f8c:	ff d0                	callq  *%rax$/;"	l
ffff800000101f8e	kernel.asm	/^ffff800000101f8e:	8b 45 f0             	mov    -0x10(%rbp),%eax$/;"	l
ffff800000101f91	kernel.asm	/^ffff800000101f91:	01 45 fc             	add    %eax,-0x4(%rbp)$/;"	l
ffff800000101f94	kernel.asm	/^ffff800000101f94:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff800000101f97	kernel.asm	/^ffff800000101f97:	3b 45 dc             	cmp    -0x24(%rbp),%eax$/;"	l
ffff800000101f9a	kernel.asm	/^ffff800000101f9a:	0f 8c 19 ff ff ff    	jl     ffff800000101eb9 <filewrite+0x7c>$/;"	l
ffff800000101fa0	kernel.asm	/^ffff800000101fa0:	eb 01                	jmp    ffff800000101fa3 <filewrite+0x166>$/;"	l
ffff800000101fa2	kernel.asm	/^ffff800000101fa2:	90                   	nop$/;"	l
ffff800000101fa3	kernel.asm	/^ffff800000101fa3:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff800000101fa6	kernel.asm	/^ffff800000101fa6:	3b 45 dc             	cmp    -0x24(%rbp),%eax$/;"	l
ffff800000101fa9	kernel.asm	/^ffff800000101fa9:	75 05                	jne    ffff800000101fb0 <filewrite+0x173>$/;"	l
ffff800000101fab	kernel.asm	/^ffff800000101fab:	8b 45 dc             	mov    -0x24(%rbp),%eax$/;"	l
ffff800000101fae	kernel.asm	/^ffff800000101fae:	eb 1d                	jmp    ffff800000101fcd <filewrite+0x190>$/;"	l
ffff800000101fb0	kernel.asm	/^ffff800000101fb0:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff800000101fb5	kernel.asm	/^ffff800000101fb5:	eb 16                	jmp    ffff800000101fcd <filewrite+0x190>$/;"	l
ffff800000101fb7	kernel.asm	/^ffff800000101fb7:	48 bf d2 ba 10 00 00 	movabs $0xffff80000010bad2,%rdi$/;"	l
ffff800000101fbe	kernel.asm	/^ffff800000101fbe:	80 ff ff $/;"	l
ffff800000101fc1	kernel.asm	/^ffff800000101fc1:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff800000101fc8	kernel.asm	/^ffff800000101fc8:	80 ff ff $/;"	l
ffff800000101fcb	kernel.asm	/^ffff800000101fcb:	ff d0                	callq  *%rax$/;"	l
ffff800000101fcd	kernel.asm	/^ffff800000101fcd:	c9                   	leaveq $/;"	l
ffff800000101fce	kernel.asm	/^ffff800000101fce:	c3                   	retq   $/;"	l
ffff800000101fcf	kernel.asm	/^ffff800000101fcf <readsb>:$/;"	l
ffff800000101fcf	kernel.asm	/^ffff800000101fcf:	55                   	push   %rbp$/;"	l
ffff800000101fd0	kernel.asm	/^ffff800000101fd0:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000101fd3	kernel.asm	/^ffff800000101fd3:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ffff800000101fd7	kernel.asm	/^ffff800000101fd7:	89 7d ec             	mov    %edi,-0x14(%rbp)$/;"	l
ffff800000101fda	kernel.asm	/^ffff800000101fda:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)$/;"	l
ffff800000101fde	kernel.asm	/^ffff800000101fde:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
ffff800000101fe1	kernel.asm	/^ffff800000101fe1:	be 01 00 00 00       	mov    $0x1,%esi$/;"	l
ffff800000101fe6	kernel.asm	/^ffff800000101fe6:	89 c7                	mov    %eax,%edi$/;"	l
ffff800000101fe8	kernel.asm	/^ffff800000101fe8:	48 b8 f8 03 10 00 00 	movabs $0xffff8000001003f8,%rax$/;"	l
ffff800000101fef	kernel.asm	/^ffff800000101fef:	80 ff ff $/;"	l
ffff800000101ff2	kernel.asm	/^ffff800000101ff2:	ff d0                	callq  *%rax$/;"	l
ffff800000101ff4	kernel.asm	/^ffff800000101ff4:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff800000101ff8	kernel.asm	/^ffff800000101ff8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000101ffc	kernel.asm	/^ffff800000101ffc:	48 8d 88 b0 00 00 00 	lea    0xb0(%rax),%rcx$/;"	l
ffff800000102003	kernel.asm	/^ffff800000102003:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff800000102007	kernel.asm	/^ffff800000102007:	ba 1c 00 00 00       	mov    $0x1c,%edx$/;"	l
ffff80000010200c	kernel.asm	/^ffff80000010200c:	48 89 ce             	mov    %rcx,%rsi$/;"	l
ffff80000010200f	kernel.asm	/^ffff80000010200f:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000102012	kernel.asm	/^ffff800000102012:	48 b8 98 76 10 00 00 	movabs $0xffff800000107698,%rax$/;"	l
ffff800000102019	kernel.asm	/^ffff800000102019:	80 ff ff $/;"	l
ffff80000010201c	kernel.asm	/^ffff80000010201c:	ff d0                	callq  *%rax$/;"	l
ffff80000010201e	kernel.asm	/^ffff80000010201e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000102022	kernel.asm	/^ffff800000102022:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000102025	kernel.asm	/^ffff800000102025:	48 b8 aa 04 10 00 00 	movabs $0xffff8000001004aa,%rax$/;"	l
ffff80000010202c	kernel.asm	/^ffff80000010202c:	80 ff ff $/;"	l
ffff80000010202f	kernel.asm	/^ffff80000010202f:	ff d0                	callq  *%rax$/;"	l
ffff800000102031	kernel.asm	/^ffff800000102031:	90                   	nop$/;"	l
ffff800000102032	kernel.asm	/^ffff800000102032:	c9                   	leaveq $/;"	l
ffff800000102033	kernel.asm	/^ffff800000102033:	c3                   	retq   $/;"	l
ffff800000102034	kernel.asm	/^ffff800000102034 <bzero>:$/;"	l
ffff800000102034	kernel.asm	/^ffff800000102034:	55                   	push   %rbp$/;"	l
ffff800000102035	kernel.asm	/^ffff800000102035:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000102038	kernel.asm	/^ffff800000102038:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ffff80000010203c	kernel.asm	/^ffff80000010203c:	89 7d ec             	mov    %edi,-0x14(%rbp)$/;"	l
ffff80000010203f	kernel.asm	/^ffff80000010203f:	89 75 e8             	mov    %esi,-0x18(%rbp)$/;"	l
ffff800000102042	kernel.asm	/^ffff800000102042:	8b 55 e8             	mov    -0x18(%rbp),%edx$/;"	l
ffff800000102045	kernel.asm	/^ffff800000102045:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
ffff800000102048	kernel.asm	/^ffff800000102048:	89 d6                	mov    %edx,%esi$/;"	l
ffff80000010204a	kernel.asm	/^ffff80000010204a:	89 c7                	mov    %eax,%edi$/;"	l
ffff80000010204c	kernel.asm	/^ffff80000010204c:	48 b8 f8 03 10 00 00 	movabs $0xffff8000001003f8,%rax$/;"	l
ffff800000102053	kernel.asm	/^ffff800000102053:	80 ff ff $/;"	l
ffff800000102056	kernel.asm	/^ffff800000102056:	ff d0                	callq  *%rax$/;"	l
ffff800000102058	kernel.asm	/^ffff800000102058:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff80000010205c	kernel.asm	/^ffff80000010205c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000102060	kernel.asm	/^ffff800000102060:	48 05 b0 00 00 00    	add    $0xb0,%rax$/;"	l
ffff800000102066	kernel.asm	/^ffff800000102066:	ba 00 02 00 00       	mov    $0x200,%edx$/;"	l
ffff80000010206b	kernel.asm	/^ffff80000010206b:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffff800000102070	kernel.asm	/^ffff800000102070:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000102073	kernel.asm	/^ffff800000102073:	48 b8 9b 75 10 00 00 	movabs $0xffff80000010759b,%rax$/;"	l
ffff80000010207a	kernel.asm	/^ffff80000010207a:	80 ff ff $/;"	l
ffff80000010207d	kernel.asm	/^ffff80000010207d:	ff d0                	callq  *%rax$/;"	l
ffff80000010207f	kernel.asm	/^ffff80000010207f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000102083	kernel.asm	/^ffff800000102083:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000102086	kernel.asm	/^ffff800000102086:	48 b8 03 51 10 00 00 	movabs $0xffff800000105103,%rax$/;"	l
ffff80000010208d	kernel.asm	/^ffff80000010208d:	80 ff ff $/;"	l
ffff800000102090	kernel.asm	/^ffff800000102090:	ff d0                	callq  *%rax$/;"	l
ffff800000102092	kernel.asm	/^ffff800000102092:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000102096	kernel.asm	/^ffff800000102096:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000102099	kernel.asm	/^ffff800000102099:	48 b8 aa 04 10 00 00 	movabs $0xffff8000001004aa,%rax$/;"	l
ffff8000001020a0	kernel.asm	/^ffff8000001020a0:	80 ff ff $/;"	l
ffff8000001020a3	kernel.asm	/^ffff8000001020a3:	ff d0                	callq  *%rax$/;"	l
ffff8000001020a5	kernel.asm	/^ffff8000001020a5:	90                   	nop$/;"	l
ffff8000001020a6	kernel.asm	/^ffff8000001020a6:	c9                   	leaveq $/;"	l
ffff8000001020a7	kernel.asm	/^ffff8000001020a7:	c3                   	retq   $/;"	l
ffff8000001020a8	kernel.asm	/^ffff8000001020a8 <balloc>:$/;"	l
ffff8000001020a8	kernel.asm	/^ffff8000001020a8:	55                   	push   %rbp$/;"	l
ffff8000001020a9	kernel.asm	/^ffff8000001020a9:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff8000001020ac	kernel.asm	/^ffff8000001020ac:	48 83 ec 30          	sub    $0x30,%rsp$/;"	l
ffff8000001020b0	kernel.asm	/^ffff8000001020b0:	89 7d dc             	mov    %edi,-0x24(%rbp)$/;"	l
ffff8000001020b3	kernel.asm	/^ffff8000001020b3:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)$/;"	l
ffff8000001020ba	kernel.asm	/^ffff8000001020ba:	00 $/;"	l
ffff8000001020bb	kernel.asm	/^ffff8000001020bb:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)$/;"	l
ffff8000001020c2	kernel.asm	/^ffff8000001020c2:	e9 52 01 00 00       	jmpq   ffff800000102219 <balloc+0x171>$/;"	l
ffff8000001020c7	kernel.asm	/^ffff8000001020c7:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff8000001020ca	kernel.asm	/^ffff8000001020ca:	8d 90 ff 0f 00 00    	lea    0xfff(%rax),%edx$/;"	l
ffff8000001020d0	kernel.asm	/^ffff8000001020d0:	85 c0                	test   %eax,%eax$/;"	l
ffff8000001020d2	kernel.asm	/^ffff8000001020d2:	0f 48 c2             	cmovs  %edx,%eax$/;"	l
ffff8000001020d5	kernel.asm	/^ffff8000001020d5:	c1 f8 0c             	sar    $0xc,%eax$/;"	l
ffff8000001020d8	kernel.asm	/^ffff8000001020d8:	89 c2                	mov    %eax,%edx$/;"	l
ffff8000001020da	kernel.asm	/^ffff8000001020da:	48 b8 00 46 11 00 00 	movabs $0xffff800000114600,%rax$/;"	l
ffff8000001020e1	kernel.asm	/^ffff8000001020e1:	80 ff ff $/;"	l
ffff8000001020e4	kernel.asm	/^ffff8000001020e4:	8b 40 18             	mov    0x18(%rax),%eax$/;"	l
ffff8000001020e7	kernel.asm	/^ffff8000001020e7:	01 c2                	add    %eax,%edx$/;"	l
ffff8000001020e9	kernel.asm	/^ffff8000001020e9:	8b 45 dc             	mov    -0x24(%rbp),%eax$/;"	l
ffff8000001020ec	kernel.asm	/^ffff8000001020ec:	89 d6                	mov    %edx,%esi$/;"	l
ffff8000001020ee	kernel.asm	/^ffff8000001020ee:	89 c7                	mov    %eax,%edi$/;"	l
ffff8000001020f0	kernel.asm	/^ffff8000001020f0:	48 b8 f8 03 10 00 00 	movabs $0xffff8000001003f8,%rax$/;"	l
ffff8000001020f7	kernel.asm	/^ffff8000001020f7:	80 ff ff $/;"	l
ffff8000001020fa	kernel.asm	/^ffff8000001020fa:	ff d0                	callq  *%rax$/;"	l
ffff8000001020fc	kernel.asm	/^ffff8000001020fc:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ffff800000102100	kernel.asm	/^ffff800000102100:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)$/;"	l
ffff800000102107	kernel.asm	/^ffff800000102107:	e9 cc 00 00 00       	jmpq   ffff8000001021d8 <balloc+0x130>$/;"	l
ffff80000010210c	kernel.asm	/^ffff80000010210c:	8b 45 f8             	mov    -0x8(%rbp),%eax$/;"	l
ffff80000010210f	kernel.asm	/^ffff80000010210f:	99                   	cltd   $/;"	l
ffff800000102110	kernel.asm	/^ffff800000102110:	c1 ea 1d             	shr    $0x1d,%edx$/;"	l
ffff800000102113	kernel.asm	/^ffff800000102113:	01 d0                	add    %edx,%eax$/;"	l
ffff800000102115	kernel.asm	/^ffff800000102115:	83 e0 07             	and    $0x7,%eax$/;"	l
ffff800000102118	kernel.asm	/^ffff800000102118:	29 d0                	sub    %edx,%eax$/;"	l
ffff80000010211a	kernel.asm	/^ffff80000010211a:	ba 01 00 00 00       	mov    $0x1,%edx$/;"	l
ffff80000010211f	kernel.asm	/^ffff80000010211f:	89 c1                	mov    %eax,%ecx$/;"	l
ffff800000102121	kernel.asm	/^ffff800000102121:	d3 e2                	shl    %cl,%edx$/;"	d
ffff800000102123	kernel.asm	/^ffff800000102123:	89 d0                	mov    %edx,%eax$/;"	l
ffff800000102125	kernel.asm	/^ffff800000102125:	89 45 ec             	mov    %eax,-0x14(%rbp)$/;"	l
ffff800000102128	kernel.asm	/^ffff800000102128:	8b 45 f8             	mov    -0x8(%rbp),%eax$/;"	l
ffff80000010212b	kernel.asm	/^ffff80000010212b:	8d 50 07             	lea    0x7(%rax),%edx$/;"	l
ffff80000010212e	kernel.asm	/^ffff80000010212e:	85 c0                	test   %eax,%eax$/;"	l
ffff800000102130	kernel.asm	/^ffff800000102130:	0f 48 c2             	cmovs  %edx,%eax$/;"	l
ffff800000102133	kernel.asm	/^ffff800000102133:	c1 f8 03             	sar    $0x3,%eax$/;"	l
ffff800000102136	kernel.asm	/^ffff800000102136:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
ffff80000010213a	kernel.asm	/^ffff80000010213a:	48 98                	cltq   $/;"	l
ffff80000010213c	kernel.asm	/^ffff80000010213c:	0f b6 84 02 b0 00 00 	movzbl 0xb0(%rdx,%rax,1),%eax$/;"	l
ffff800000102143	kernel.asm	/^ffff800000102143:	00 $/;"	l
ffff800000102144	kernel.asm	/^ffff800000102144:	0f b6 c0             	movzbl %al,%eax$/;"	l
ffff800000102147	kernel.asm	/^ffff800000102147:	23 45 ec             	and    -0x14(%rbp),%eax$/;"	l
ffff80000010214a	kernel.asm	/^ffff80000010214a:	85 c0                	test   %eax,%eax$/;"	l
ffff80000010214c	kernel.asm	/^ffff80000010214c:	0f 85 82 00 00 00    	jne    ffff8000001021d4 <balloc+0x12c>$/;"	l
ffff800000102152	kernel.asm	/^ffff800000102152:	8b 45 f8             	mov    -0x8(%rbp),%eax$/;"	l
ffff800000102155	kernel.asm	/^ffff800000102155:	8d 50 07             	lea    0x7(%rax),%edx$/;"	l
ffff800000102158	kernel.asm	/^ffff800000102158:	85 c0                	test   %eax,%eax$/;"	l
ffff80000010215a	kernel.asm	/^ffff80000010215a:	0f 48 c2             	cmovs  %edx,%eax$/;"	l
ffff80000010215d	kernel.asm	/^ffff80000010215d:	c1 f8 03             	sar    $0x3,%eax$/;"	l
ffff800000102160	kernel.asm	/^ffff800000102160:	89 c1                	mov    %eax,%ecx$/;"	l
ffff800000102162	kernel.asm	/^ffff800000102162:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
ffff800000102166	kernel.asm	/^ffff800000102166:	48 63 c1             	movslq %ecx,%rax$/;"	l
ffff800000102169	kernel.asm	/^ffff800000102169:	0f b6 84 02 b0 00 00 	movzbl 0xb0(%rdx,%rax,1),%eax$/;"	l
ffff800000102170	kernel.asm	/^ffff800000102170:	00 $/;"	l
ffff800000102171	kernel.asm	/^ffff800000102171:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000102173	kernel.asm	/^ffff800000102173:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
ffff800000102176	kernel.asm	/^ffff800000102176:	09 d0                	or     %edx,%eax$/;"	l
ffff800000102178	kernel.asm	/^ffff800000102178:	89 c6                	mov    %eax,%esi$/;"	l
ffff80000010217a	kernel.asm	/^ffff80000010217a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
ffff80000010217e	kernel.asm	/^ffff80000010217e:	48 63 c1             	movslq %ecx,%rax$/;"	l
ffff800000102181	kernel.asm	/^ffff800000102181:	40 88 b4 02 b0 00 00 	mov    %sil,0xb0(%rdx,%rax,1)$/;"	l
ffff800000102188	kernel.asm	/^ffff800000102188:	00 $/;"	l
ffff800000102189	kernel.asm	/^ffff800000102189:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff80000010218d	kernel.asm	/^ffff80000010218d:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000102190	kernel.asm	/^ffff800000102190:	48 b8 03 51 10 00 00 	movabs $0xffff800000105103,%rax$/;"	l
ffff800000102197	kernel.asm	/^ffff800000102197:	80 ff ff $/;"	l
ffff80000010219a	kernel.asm	/^ffff80000010219a:	ff d0                	callq  *%rax$/;"	l
ffff80000010219c	kernel.asm	/^ffff80000010219c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff8000001021a0	kernel.asm	/^ffff8000001021a0:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001021a3	kernel.asm	/^ffff8000001021a3:	48 b8 aa 04 10 00 00 	movabs $0xffff8000001004aa,%rax$/;"	l
ffff8000001021aa	kernel.asm	/^ffff8000001021aa:	80 ff ff $/;"	l
ffff8000001021ad	kernel.asm	/^ffff8000001021ad:	ff d0                	callq  *%rax$/;"	l
ffff8000001021af	kernel.asm	/^ffff8000001021af:	8b 55 fc             	mov    -0x4(%rbp),%edx$/;"	l
ffff8000001021b2	kernel.asm	/^ffff8000001021b2:	8b 45 f8             	mov    -0x8(%rbp),%eax$/;"	l
ffff8000001021b5	kernel.asm	/^ffff8000001021b5:	01 c2                	add    %eax,%edx$/;"	l
ffff8000001021b7	kernel.asm	/^ffff8000001021b7:	8b 45 dc             	mov    -0x24(%rbp),%eax$/;"	l
ffff8000001021ba	kernel.asm	/^ffff8000001021ba:	89 d6                	mov    %edx,%esi$/;"	l
ffff8000001021bc	kernel.asm	/^ffff8000001021bc:	89 c7                	mov    %eax,%edi$/;"	l
ffff8000001021be	kernel.asm	/^ffff8000001021be:	48 b8 34 20 10 00 00 	movabs $0xffff800000102034,%rax$/;"	l
ffff8000001021c5	kernel.asm	/^ffff8000001021c5:	80 ff ff $/;"	l
ffff8000001021c8	kernel.asm	/^ffff8000001021c8:	ff d0                	callq  *%rax$/;"	l
ffff8000001021ca	kernel.asm	/^ffff8000001021ca:	8b 55 fc             	mov    -0x4(%rbp),%edx$/;"	l
ffff8000001021cd	kernel.asm	/^ffff8000001021cd:	8b 45 f8             	mov    -0x8(%rbp),%eax$/;"	l
ffff8000001021d0	kernel.asm	/^ffff8000001021d0:	01 d0                	add    %edx,%eax$/;"	l
ffff8000001021d2	kernel.asm	/^ffff8000001021d2:	eb 72                	jmp    ffff800000102246 <balloc+0x19e>$/;"	l
ffff8000001021d4	kernel.asm	/^ffff8000001021d4:	83 45 f8 01          	addl   $0x1,-0x8(%rbp)$/;"	l
ffff8000001021d8	kernel.asm	/^ffff8000001021d8:	81 7d f8 ff 0f 00 00 	cmpl   $0xfff,-0x8(%rbp)$/;"	l
ffff8000001021df	kernel.asm	/^ffff8000001021df:	7f 1e                	jg     ffff8000001021ff <balloc+0x157>$/;"	l
ffff8000001021e1	kernel.asm	/^ffff8000001021e1:	8b 55 fc             	mov    -0x4(%rbp),%edx$/;"	l
ffff8000001021e4	kernel.asm	/^ffff8000001021e4:	8b 45 f8             	mov    -0x8(%rbp),%eax$/;"	l
ffff8000001021e7	kernel.asm	/^ffff8000001021e7:	01 d0                	add    %edx,%eax$/;"	l
ffff8000001021e9	kernel.asm	/^ffff8000001021e9:	89 c2                	mov    %eax,%edx$/;"	l
ffff8000001021eb	kernel.asm	/^ffff8000001021eb:	48 b8 00 46 11 00 00 	movabs $0xffff800000114600,%rax$/;"	l
ffff8000001021f2	kernel.asm	/^ffff8000001021f2:	80 ff ff $/;"	l
ffff8000001021f5	kernel.asm	/^ffff8000001021f5:	8b 00                	mov    (%rax),%eax$/;"	l
ffff8000001021f7	kernel.asm	/^ffff8000001021f7:	39 c2                	cmp    %eax,%edx$/;"	l
ffff8000001021f9	kernel.asm	/^ffff8000001021f9:	0f 82 0d ff ff ff    	jb     ffff80000010210c <balloc+0x64>$/;"	l
ffff8000001021ff	kernel.asm	/^ffff8000001021ff:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000102203	kernel.asm	/^ffff800000102203:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000102206	kernel.asm	/^ffff800000102206:	48 b8 aa 04 10 00 00 	movabs $0xffff8000001004aa,%rax$/;"	l
ffff80000010220d	kernel.asm	/^ffff80000010220d:	80 ff ff $/;"	l
ffff800000102210	kernel.asm	/^ffff800000102210:	ff d0                	callq  *%rax$/;"	l
ffff800000102212	kernel.asm	/^ffff800000102212:	81 45 fc 00 10 00 00 	addl   $0x1000,-0x4(%rbp)$/;"	l
ffff800000102219	kernel.asm	/^ffff800000102219:	48 b8 00 46 11 00 00 	movabs $0xffff800000114600,%rax$/;"	l
ffff800000102220	kernel.asm	/^ffff800000102220:	80 ff ff $/;"	l
ffff800000102223	kernel.asm	/^ffff800000102223:	8b 10                	mov    (%rax),%edx$/;"	l
ffff800000102225	kernel.asm	/^ffff800000102225:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff800000102228	kernel.asm	/^ffff800000102228:	39 c2                	cmp    %eax,%edx$/;"	l
ffff80000010222a	kernel.asm	/^ffff80000010222a:	0f 87 97 fe ff ff    	ja     ffff8000001020c7 <balloc+0x1f>$/;"	l
ffff800000102230	kernel.asm	/^ffff800000102230:	48 bf dc ba 10 00 00 	movabs $0xffff80000010badc,%rdi$/;"	l
ffff800000102237	kernel.asm	/^ffff800000102237:	80 ff ff $/;"	l
ffff80000010223a	kernel.asm	/^ffff80000010223a:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff800000102241	kernel.asm	/^ffff800000102241:	80 ff ff $/;"	l
ffff800000102244	kernel.asm	/^ffff800000102244:	ff d0                	callq  *%rax$/;"	l
ffff800000102246	kernel.asm	/^ffff800000102246:	c9                   	leaveq $/;"	l
ffff800000102247	kernel.asm	/^ffff800000102247:	c3                   	retq   $/;"	l
ffff800000102248	kernel.asm	/^ffff800000102248 <bfree>:$/;"	l
ffff800000102248	kernel.asm	/^ffff800000102248:	55                   	push   %rbp$/;"	l
ffff800000102249	kernel.asm	/^ffff800000102249:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010224c	kernel.asm	/^ffff80000010224c:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ffff800000102250	kernel.asm	/^ffff800000102250:	89 7d ec             	mov    %edi,-0x14(%rbp)$/;"	l
ffff800000102253	kernel.asm	/^ffff800000102253:	89 75 e8             	mov    %esi,-0x18(%rbp)$/;"	l
ffff800000102256	kernel.asm	/^ffff800000102256:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
ffff800000102259	kernel.asm	/^ffff800000102259:	48 be 00 46 11 00 00 	movabs $0xffff800000114600,%rsi$/;"	l
ffff800000102260	kernel.asm	/^ffff800000102260:	80 ff ff $/;"	l
ffff800000102263	kernel.asm	/^ffff800000102263:	89 c7                	mov    %eax,%edi$/;"	l
ffff800000102265	kernel.asm	/^ffff800000102265:	48 b8 cf 1f 10 00 00 	movabs $0xffff800000101fcf,%rax$/;"	l
ffff80000010226c	kernel.asm	/^ffff80000010226c:	80 ff ff $/;"	l
ffff80000010226f	kernel.asm	/^ffff80000010226f:	ff d0                	callq  *%rax$/;"	l
ffff800000102271	kernel.asm	/^ffff800000102271:	8b 45 e8             	mov    -0x18(%rbp),%eax$/;"	l
ffff800000102274	kernel.asm	/^ffff800000102274:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
ffff800000102277	kernel.asm	/^ffff800000102277:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000102279	kernel.asm	/^ffff800000102279:	48 b8 00 46 11 00 00 	movabs $0xffff800000114600,%rax$/;"	l
ffff800000102280	kernel.asm	/^ffff800000102280:	80 ff ff $/;"	l
ffff800000102283	kernel.asm	/^ffff800000102283:	8b 40 18             	mov    0x18(%rax),%eax$/;"	l
ffff800000102286	kernel.asm	/^ffff800000102286:	01 c2                	add    %eax,%edx$/;"	l
ffff800000102288	kernel.asm	/^ffff800000102288:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
ffff80000010228b	kernel.asm	/^ffff80000010228b:	89 d6                	mov    %edx,%esi$/;"	l
ffff80000010228d	kernel.asm	/^ffff80000010228d:	89 c7                	mov    %eax,%edi$/;"	l
ffff80000010228f	kernel.asm	/^ffff80000010228f:	48 b8 f8 03 10 00 00 	movabs $0xffff8000001003f8,%rax$/;"	l
ffff800000102296	kernel.asm	/^ffff800000102296:	80 ff ff $/;"	l
ffff800000102299	kernel.asm	/^ffff800000102299:	ff d0                	callq  *%rax$/;"	l
ffff80000010229b	kernel.asm	/^ffff80000010229b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff80000010229f	kernel.asm	/^ffff80000010229f:	8b 45 e8             	mov    -0x18(%rbp),%eax$/;"	l
ffff8000001022a2	kernel.asm	/^ffff8000001022a2:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
ffff8000001022a7	kernel.asm	/^ffff8000001022a7:	89 45 f4             	mov    %eax,-0xc(%rbp)$/;"	l
ffff8000001022aa	kernel.asm	/^ffff8000001022aa:	8b 45 f4             	mov    -0xc(%rbp),%eax$/;"	l
ffff8000001022ad	kernel.asm	/^ffff8000001022ad:	99                   	cltd   $/;"	l
ffff8000001022ae	kernel.asm	/^ffff8000001022ae:	c1 ea 1d             	shr    $0x1d,%edx$/;"	l
ffff8000001022b1	kernel.asm	/^ffff8000001022b1:	01 d0                	add    %edx,%eax$/;"	l
ffff8000001022b3	kernel.asm	/^ffff8000001022b3:	83 e0 07             	and    $0x7,%eax$/;"	l
ffff8000001022b6	kernel.asm	/^ffff8000001022b6:	29 d0                	sub    %edx,%eax$/;"	l
ffff8000001022b8	kernel.asm	/^ffff8000001022b8:	ba 01 00 00 00       	mov    $0x1,%edx$/;"	l
ffff8000001022bd	kernel.asm	/^ffff8000001022bd:	89 c1                	mov    %eax,%ecx$/;"	l
ffff8000001022bf	kernel.asm	/^ffff8000001022bf:	d3 e2                	shl    %cl,%edx$/;"	d
ffff8000001022c1	kernel.asm	/^ffff8000001022c1:	89 d0                	mov    %edx,%eax$/;"	l
ffff8000001022c3	kernel.asm	/^ffff8000001022c3:	89 45 f0             	mov    %eax,-0x10(%rbp)$/;"	l
ffff8000001022c6	kernel.asm	/^ffff8000001022c6:	8b 45 f4             	mov    -0xc(%rbp),%eax$/;"	l
ffff8000001022c9	kernel.asm	/^ffff8000001022c9:	8d 50 07             	lea    0x7(%rax),%edx$/;"	l
ffff8000001022cc	kernel.asm	/^ffff8000001022cc:	85 c0                	test   %eax,%eax$/;"	l
ffff8000001022ce	kernel.asm	/^ffff8000001022ce:	0f 48 c2             	cmovs  %edx,%eax$/;"	l
ffff8000001022d1	kernel.asm	/^ffff8000001022d1:	c1 f8 03             	sar    $0x3,%eax$/;"	l
ffff8000001022d4	kernel.asm	/^ffff8000001022d4:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx$/;"	l
ffff8000001022d8	kernel.asm	/^ffff8000001022d8:	48 98                	cltq   $/;"	l
ffff8000001022da	kernel.asm	/^ffff8000001022da:	0f b6 84 02 b0 00 00 	movzbl 0xb0(%rdx,%rax,1),%eax$/;"	l
ffff8000001022e1	kernel.asm	/^ffff8000001022e1:	00 $/;"	l
ffff8000001022e2	kernel.asm	/^ffff8000001022e2:	0f b6 c0             	movzbl %al,%eax$/;"	l
ffff8000001022e5	kernel.asm	/^ffff8000001022e5:	23 45 f0             	and    -0x10(%rbp),%eax$/;"	l
ffff8000001022e8	kernel.asm	/^ffff8000001022e8:	85 c0                	test   %eax,%eax$/;"	l
ffff8000001022ea	kernel.asm	/^ffff8000001022ea:	75 16                	jne    ffff800000102302 <bfree+0xba>$/;"	l
ffff8000001022ec	kernel.asm	/^ffff8000001022ec:	48 bf f2 ba 10 00 00 	movabs $0xffff80000010baf2,%rdi$/;"	l
ffff8000001022f3	kernel.asm	/^ffff8000001022f3:	80 ff ff $/;"	l
ffff8000001022f6	kernel.asm	/^ffff8000001022f6:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff8000001022fd	kernel.asm	/^ffff8000001022fd:	80 ff ff $/;"	l
ffff800000102300	kernel.asm	/^ffff800000102300:	ff d0                	callq  *%rax$/;"	l
ffff800000102302	kernel.asm	/^ffff800000102302:	8b 45 f4             	mov    -0xc(%rbp),%eax$/;"	l
ffff800000102305	kernel.asm	/^ffff800000102305:	8d 50 07             	lea    0x7(%rax),%edx$/;"	l
ffff800000102308	kernel.asm	/^ffff800000102308:	85 c0                	test   %eax,%eax$/;"	l
ffff80000010230a	kernel.asm	/^ffff80000010230a:	0f 48 c2             	cmovs  %edx,%eax$/;"	l
ffff80000010230d	kernel.asm	/^ffff80000010230d:	c1 f8 03             	sar    $0x3,%eax$/;"	l
ffff800000102310	kernel.asm	/^ffff800000102310:	89 c1                	mov    %eax,%ecx$/;"	l
ffff800000102312	kernel.asm	/^ffff800000102312:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx$/;"	l
ffff800000102316	kernel.asm	/^ffff800000102316:	48 63 c1             	movslq %ecx,%rax$/;"	l
ffff800000102319	kernel.asm	/^ffff800000102319:	0f b6 84 02 b0 00 00 	movzbl 0xb0(%rdx,%rax,1),%eax$/;"	l
ffff800000102320	kernel.asm	/^ffff800000102320:	00 $/;"	l
ffff800000102321	kernel.asm	/^ffff800000102321:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000102323	kernel.asm	/^ffff800000102323:	8b 45 f0             	mov    -0x10(%rbp),%eax$/;"	l
ffff800000102326	kernel.asm	/^ffff800000102326:	f7 d0                	not    %eax$/;"	l
ffff800000102328	kernel.asm	/^ffff800000102328:	21 d0                	and    %edx,%eax$/;"	l
ffff80000010232a	kernel.asm	/^ffff80000010232a:	89 c6                	mov    %eax,%esi$/;"	l
ffff80000010232c	kernel.asm	/^ffff80000010232c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx$/;"	l
ffff800000102330	kernel.asm	/^ffff800000102330:	48 63 c1             	movslq %ecx,%rax$/;"	l
ffff800000102333	kernel.asm	/^ffff800000102333:	40 88 b4 02 b0 00 00 	mov    %sil,0xb0(%rdx,%rax,1)$/;"	l
ffff80000010233a	kernel.asm	/^ffff80000010233a:	00 $/;"	l
ffff80000010233b	kernel.asm	/^ffff80000010233b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010233f	kernel.asm	/^ffff80000010233f:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000102342	kernel.asm	/^ffff800000102342:	48 b8 03 51 10 00 00 	movabs $0xffff800000105103,%rax$/;"	l
ffff800000102349	kernel.asm	/^ffff800000102349:	80 ff ff $/;"	l
ffff80000010234c	kernel.asm	/^ffff80000010234c:	ff d0                	callq  *%rax$/;"	l
ffff80000010234e	kernel.asm	/^ffff80000010234e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000102352	kernel.asm	/^ffff800000102352:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000102355	kernel.asm	/^ffff800000102355:	48 b8 aa 04 10 00 00 	movabs $0xffff8000001004aa,%rax$/;"	l
ffff80000010235c	kernel.asm	/^ffff80000010235c:	80 ff ff $/;"	l
ffff80000010235f	kernel.asm	/^ffff80000010235f:	ff d0                	callq  *%rax$/;"	l
ffff800000102361	kernel.asm	/^ffff800000102361:	90                   	nop$/;"	l
ffff800000102362	kernel.asm	/^ffff800000102362:	c9                   	leaveq $/;"	l
ffff800000102363	kernel.asm	/^ffff800000102363:	c3                   	retq   $/;"	l
ffff800000102364	kernel.asm	/^ffff800000102364 <iinit>:$/;"	l
ffff800000102364	kernel.asm	/^ffff800000102364:	55                   	push   %rbp$/;"	l
ffff800000102365	kernel.asm	/^ffff800000102365:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000102368	kernel.asm	/^ffff800000102368:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ffff80000010236c	kernel.asm	/^ffff80000010236c:	89 7d ec             	mov    %edi,-0x14(%rbp)$/;"	l
ffff80000010236f	kernel.asm	/^ffff80000010236f:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)$/;"	l
ffff800000102376	kernel.asm	/^ffff800000102376:	48 be 05 bb 10 00 00 	movabs $0xffff80000010bb05,%rsi$/;"	l
ffff80000010237d	kernel.asm	/^ffff80000010237d:	80 ff ff $/;"	l
ffff800000102380	kernel.asm	/^ffff800000102380:	48 bf 20 46 11 00 00 	movabs $0xffff800000114620,%rdi$/;"	l
ffff800000102387	kernel.asm	/^ffff800000102387:	80 ff ff $/;"	l
ffff80000010238a	kernel.asm	/^ffff80000010238a:	48 b8 ca 71 10 00 00 	movabs $0xffff8000001071ca,%rax$/;"	l
ffff800000102391	kernel.asm	/^ffff800000102391:	80 ff ff $/;"	l
ffff800000102394	kernel.asm	/^ffff800000102394:	ff d0                	callq  *%rax$/;"	l
ffff800000102396	kernel.asm	/^ffff800000102396:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)$/;"	l
ffff80000010239d	kernel.asm	/^ffff80000010239d:	eb 50                	jmp    ffff8000001023ef <iinit+0x8b>$/;"	l
ffff80000010239f	kernel.asm	/^ffff80000010239f:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff8000001023a2	kernel.asm	/^ffff8000001023a2:	48 63 d0             	movslq %eax,%rdx$/;"	l
ffff8000001023a5	kernel.asm	/^ffff8000001023a5:	48 89 d0             	mov    %rdx,%rax$/;"	l
ffff8000001023a8	kernel.asm	/^ffff8000001023a8:	48 01 c0             	add    %rax,%rax$/;"	l
ffff8000001023ab	kernel.asm	/^ffff8000001023ab:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff8000001023ae	kernel.asm	/^ffff8000001023ae:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx$/;"	l
ffff8000001023b5	kernel.asm	/^ffff8000001023b5:	00 $/;"	l
ffff8000001023b6	kernel.asm	/^ffff8000001023b6:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff8000001023b9	kernel.asm	/^ffff8000001023b9:	48 c1 e0 03          	shl    $0x3,%rax$/;"	l
ffff8000001023bd	kernel.asm	/^ffff8000001023bd:	48 8d 50 70          	lea    0x70(%rax),%rdx$/;"	l
ffff8000001023c1	kernel.asm	/^ffff8000001023c1:	48 b8 20 46 11 00 00 	movabs $0xffff800000114620,%rax$/;"	l
ffff8000001023c8	kernel.asm	/^ffff8000001023c8:	80 ff ff $/;"	l
ffff8000001023cb	kernel.asm	/^ffff8000001023cb:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff8000001023ce	kernel.asm	/^ffff8000001023ce:	48 83 c0 08          	add    $0x8,%rax$/;"	l
ffff8000001023d2	kernel.asm	/^ffff8000001023d2:	48 be 0c bb 10 00 00 	movabs $0xffff80000010bb0c,%rsi$/;"	l
ffff8000001023d9	kernel.asm	/^ffff8000001023d9:	80 ff ff $/;"	l
ffff8000001023dc	kernel.asm	/^ffff8000001023dc:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001023df	kernel.asm	/^ffff8000001023df:	48 b8 f7 6f 10 00 00 	movabs $0xffff800000106ff7,%rax$/;"	l
ffff8000001023e6	kernel.asm	/^ffff8000001023e6:	80 ff ff $/;"	l
ffff8000001023e9	kernel.asm	/^ffff8000001023e9:	ff d0                	callq  *%rax$/;"	l
ffff8000001023eb	kernel.asm	/^ffff8000001023eb:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)$/;"	l
ffff8000001023ef	kernel.asm	/^ffff8000001023ef:	83 7d fc 31          	cmpl   $0x31,-0x4(%rbp)$/;"	l
ffff8000001023f3	kernel.asm	/^ffff8000001023f3:	7e aa                	jle    ffff80000010239f <iinit+0x3b>$/;"	l
ffff8000001023f5	kernel.asm	/^ffff8000001023f5:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
ffff8000001023f8	kernel.asm	/^ffff8000001023f8:	48 be 00 46 11 00 00 	movabs $0xffff800000114600,%rsi$/;"	l
ffff8000001023ff	kernel.asm	/^ffff8000001023ff:	80 ff ff $/;"	l
ffff800000102402	kernel.asm	/^ffff800000102402:	89 c7                	mov    %eax,%edi$/;"	l
ffff800000102404	kernel.asm	/^ffff800000102404:	48 b8 cf 1f 10 00 00 	movabs $0xffff800000101fcf,%rax$/;"	l
ffff80000010240b	kernel.asm	/^ffff80000010240b:	80 ff ff $/;"	l
ffff80000010240e	kernel.asm	/^ffff80000010240e:	ff d0                	callq  *%rax$/;"	l
ffff800000102410	kernel.asm	/^ffff800000102410:	90                   	nop$/;"	l
ffff800000102411	kernel.asm	/^ffff800000102411:	c9                   	leaveq $/;"	l
ffff800000102412	kernel.asm	/^ffff800000102412:	c3                   	retq   $/;"	l
ffff800000102413	kernel.asm	/^ffff800000102413 <ialloc>:$/;"	l
ffff800000102413	kernel.asm	/^ffff800000102413:	55                   	push   %rbp$/;"	l
ffff800000102414	kernel.asm	/^ffff800000102414:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000102417	kernel.asm	/^ffff800000102417:	48 83 ec 30          	sub    $0x30,%rsp$/;"	l
ffff80000010241b	kernel.asm	/^ffff80000010241b:	89 7d dc             	mov    %edi,-0x24(%rbp)$/;"	l
ffff80000010241e	kernel.asm	/^ffff80000010241e:	89 f0                	mov    %esi,%eax$/;"	l
ffff800000102420	kernel.asm	/^ffff800000102420:	66 89 45 d8          	mov    %ax,-0x28(%rbp)$/;"	l
ffff800000102424	kernel.asm	/^ffff800000102424:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%rbp)$/;"	l
ffff80000010242b	kernel.asm	/^ffff80000010242b:	e9 d8 00 00 00       	jmpq   ffff800000102508 <ialloc+0xf5>$/;"	l
ffff800000102430	kernel.asm	/^ffff800000102430:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff800000102433	kernel.asm	/^ffff800000102433:	48 98                	cltq   $/;"	l
ffff800000102435	kernel.asm	/^ffff800000102435:	48 c1 e8 03          	shr    $0x3,%rax$/;"	l
ffff800000102439	kernel.asm	/^ffff800000102439:	89 c2                	mov    %eax,%edx$/;"	l
ffff80000010243b	kernel.asm	/^ffff80000010243b:	48 b8 00 46 11 00 00 	movabs $0xffff800000114600,%rax$/;"	l
ffff800000102442	kernel.asm	/^ffff800000102442:	80 ff ff $/;"	l
ffff800000102445	kernel.asm	/^ffff800000102445:	8b 40 14             	mov    0x14(%rax),%eax$/;"	l
ffff800000102448	kernel.asm	/^ffff800000102448:	01 c2                	add    %eax,%edx$/;"	l
ffff80000010244a	kernel.asm	/^ffff80000010244a:	8b 45 dc             	mov    -0x24(%rbp),%eax$/;"	l
ffff80000010244d	kernel.asm	/^ffff80000010244d:	89 d6                	mov    %edx,%esi$/;"	l
ffff80000010244f	kernel.asm	/^ffff80000010244f:	89 c7                	mov    %eax,%edi$/;"	l
ffff800000102451	kernel.asm	/^ffff800000102451:	48 b8 f8 03 10 00 00 	movabs $0xffff8000001003f8,%rax$/;"	l
ffff800000102458	kernel.asm	/^ffff800000102458:	80 ff ff $/;"	l
ffff80000010245b	kernel.asm	/^ffff80000010245b:	ff d0                	callq  *%rax$/;"	l
ffff80000010245d	kernel.asm	/^ffff80000010245d:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ffff800000102461	kernel.asm	/^ffff800000102461:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000102465	kernel.asm	/^ffff800000102465:	48 8d 90 b0 00 00 00 	lea    0xb0(%rax),%rdx$/;"	l
ffff80000010246c	kernel.asm	/^ffff80000010246c:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff80000010246f	kernel.asm	/^ffff80000010246f:	48 98                	cltq   $/;"	l
ffff800000102471	kernel.asm	/^ffff800000102471:	83 e0 07             	and    $0x7,%eax$/;"	l
ffff800000102474	kernel.asm	/^ffff800000102474:	48 c1 e0 06          	shl    $0x6,%rax$/;"	l
ffff800000102478	kernel.asm	/^ffff800000102478:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff80000010247b	kernel.asm	/^ffff80000010247b:	48 89 45 e8          	mov    %rax,-0x18(%rbp)$/;"	l
ffff80000010247f	kernel.asm	/^ffff80000010247f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000102483	kernel.asm	/^ffff800000102483:	0f b7 00             	movzwl (%rax),%eax$/;"	l
ffff800000102486	kernel.asm	/^ffff800000102486:	66 85 c0             	test   %ax,%ax$/;"	l
ffff800000102489	kernel.asm	/^ffff800000102489:	75 66                	jne    ffff8000001024f1 <ialloc+0xde>$/;"	l
ffff80000010248b	kernel.asm	/^ffff80000010248b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010248f	kernel.asm	/^ffff80000010248f:	ba 40 00 00 00       	mov    $0x40,%edx$/;"	l
ffff800000102494	kernel.asm	/^ffff800000102494:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffff800000102499	kernel.asm	/^ffff800000102499:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010249c	kernel.asm	/^ffff80000010249c:	48 b8 9b 75 10 00 00 	movabs $0xffff80000010759b,%rax$/;"	l
ffff8000001024a3	kernel.asm	/^ffff8000001024a3:	80 ff ff $/;"	l
ffff8000001024a6	kernel.asm	/^ffff8000001024a6:	ff d0                	callq  *%rax$/;"	l
ffff8000001024a8	kernel.asm	/^ffff8000001024a8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff8000001024ac	kernel.asm	/^ffff8000001024ac:	0f b7 55 d8          	movzwl -0x28(%rbp),%edx$/;"	l
ffff8000001024b0	kernel.asm	/^ffff8000001024b0:	66 89 10             	mov    %dx,(%rax)$/;"	l
ffff8000001024b3	kernel.asm	/^ffff8000001024b3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff8000001024b7	kernel.asm	/^ffff8000001024b7:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001024ba	kernel.asm	/^ffff8000001024ba:	48 b8 03 51 10 00 00 	movabs $0xffff800000105103,%rax$/;"	l
ffff8000001024c1	kernel.asm	/^ffff8000001024c1:	80 ff ff $/;"	l
ffff8000001024c4	kernel.asm	/^ffff8000001024c4:	ff d0                	callq  *%rax$/;"	l
ffff8000001024c6	kernel.asm	/^ffff8000001024c6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff8000001024ca	kernel.asm	/^ffff8000001024ca:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001024cd	kernel.asm	/^ffff8000001024cd:	48 b8 aa 04 10 00 00 	movabs $0xffff8000001004aa,%rax$/;"	l
ffff8000001024d4	kernel.asm	/^ffff8000001024d4:	80 ff ff $/;"	l
ffff8000001024d7	kernel.asm	/^ffff8000001024d7:	ff d0                	callq  *%rax$/;"	l
ffff8000001024d9	kernel.asm	/^ffff8000001024d9:	8b 55 fc             	mov    -0x4(%rbp),%edx$/;"	l
ffff8000001024dc	kernel.asm	/^ffff8000001024dc:	8b 45 dc             	mov    -0x24(%rbp),%eax$/;"	l
ffff8000001024df	kernel.asm	/^ffff8000001024df:	89 d6                	mov    %edx,%esi$/;"	l
ffff8000001024e1	kernel.asm	/^ffff8000001024e1:	89 c7                	mov    %eax,%edi$/;"	l
ffff8000001024e3	kernel.asm	/^ffff8000001024e3:	48 b8 4a 26 10 00 00 	movabs $0xffff80000010264a,%rax$/;"	l
ffff8000001024ea	kernel.asm	/^ffff8000001024ea:	80 ff ff $/;"	l
ffff8000001024ed	kernel.asm	/^ffff8000001024ed:	ff d0                	callq  *%rax$/;"	l
ffff8000001024ef	kernel.asm	/^ffff8000001024ef:	eb 45                	jmp    ffff800000102536 <ialloc+0x123>$/;"	l
ffff8000001024f1	kernel.asm	/^ffff8000001024f1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff8000001024f5	kernel.asm	/^ffff8000001024f5:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001024f8	kernel.asm	/^ffff8000001024f8:	48 b8 aa 04 10 00 00 	movabs $0xffff8000001004aa,%rax$/;"	l
ffff8000001024ff	kernel.asm	/^ffff8000001024ff:	80 ff ff $/;"	l
ffff800000102502	kernel.asm	/^ffff800000102502:	ff d0                	callq  *%rax$/;"	l
ffff800000102504	kernel.asm	/^ffff800000102504:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)$/;"	l
ffff800000102508	kernel.asm	/^ffff800000102508:	48 b8 00 46 11 00 00 	movabs $0xffff800000114600,%rax$/;"	l
ffff80000010250f	kernel.asm	/^ffff80000010250f:	80 ff ff $/;"	l
ffff800000102512	kernel.asm	/^ffff800000102512:	8b 50 08             	mov    0x8(%rax),%edx$/;"	l
ffff800000102515	kernel.asm	/^ffff800000102515:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff800000102518	kernel.asm	/^ffff800000102518:	39 c2                	cmp    %eax,%edx$/;"	l
ffff80000010251a	kernel.asm	/^ffff80000010251a:	0f 87 10 ff ff ff    	ja     ffff800000102430 <ialloc+0x1d>$/;"	l
ffff800000102520	kernel.asm	/^ffff800000102520:	48 bf 12 bb 10 00 00 	movabs $0xffff80000010bb12,%rdi$/;"	l
ffff800000102527	kernel.asm	/^ffff800000102527:	80 ff ff $/;"	l
ffff80000010252a	kernel.asm	/^ffff80000010252a:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff800000102531	kernel.asm	/^ffff800000102531:	80 ff ff $/;"	l
ffff800000102534	kernel.asm	/^ffff800000102534:	ff d0                	callq  *%rax$/;"	l
ffff800000102536	kernel.asm	/^ffff800000102536:	c9                   	leaveq $/;"	l
ffff800000102537	kernel.asm	/^ffff800000102537:	c3                   	retq   $/;"	l
ffff800000102538	kernel.asm	/^ffff800000102538 <iupdate>:$/;"	l
ffff800000102538	kernel.asm	/^ffff800000102538:	55                   	push   %rbp$/;"	l
ffff800000102539	kernel.asm	/^ffff800000102539:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010253c	kernel.asm	/^ffff80000010253c:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ffff800000102540	kernel.asm	/^ffff800000102540:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
ffff800000102544	kernel.asm	/^ffff800000102544:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000102548	kernel.asm	/^ffff800000102548:	8b 40 04             	mov    0x4(%rax),%eax$/;"	l
ffff80000010254b	kernel.asm	/^ffff80000010254b:	c1 e8 03             	shr    $0x3,%eax$/;"	l
ffff80000010254e	kernel.asm	/^ffff80000010254e:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000102550	kernel.asm	/^ffff800000102550:	48 b8 00 46 11 00 00 	movabs $0xffff800000114600,%rax$/;"	l
ffff800000102557	kernel.asm	/^ffff800000102557:	80 ff ff $/;"	l
ffff80000010255a	kernel.asm	/^ffff80000010255a:	8b 40 14             	mov    0x14(%rax),%eax$/;"	l
ffff80000010255d	kernel.asm	/^ffff80000010255d:	01 c2                	add    %eax,%edx$/;"	l
ffff80000010255f	kernel.asm	/^ffff80000010255f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000102563	kernel.asm	/^ffff800000102563:	8b 00                	mov    (%rax),%eax$/;"	l
ffff800000102565	kernel.asm	/^ffff800000102565:	89 d6                	mov    %edx,%esi$/;"	l
ffff800000102567	kernel.asm	/^ffff800000102567:	89 c7                	mov    %eax,%edi$/;"	l
ffff800000102569	kernel.asm	/^ffff800000102569:	48 b8 f8 03 10 00 00 	movabs $0xffff8000001003f8,%rax$/;"	l
ffff800000102570	kernel.asm	/^ffff800000102570:	80 ff ff $/;"	l
ffff800000102573	kernel.asm	/^ffff800000102573:	ff d0                	callq  *%rax$/;"	l
ffff800000102575	kernel.asm	/^ffff800000102575:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff800000102579	kernel.asm	/^ffff800000102579:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010257d	kernel.asm	/^ffff80000010257d:	48 8d 90 b0 00 00 00 	lea    0xb0(%rax),%rdx$/;"	l
ffff800000102584	kernel.asm	/^ffff800000102584:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000102588	kernel.asm	/^ffff800000102588:	8b 40 04             	mov    0x4(%rax),%eax$/;"	l
ffff80000010258b	kernel.asm	/^ffff80000010258b:	89 c0                	mov    %eax,%eax$/;"	l
ffff80000010258d	kernel.asm	/^ffff80000010258d:	83 e0 07             	and    $0x7,%eax$/;"	l
ffff800000102590	kernel.asm	/^ffff800000102590:	48 c1 e0 06          	shl    $0x6,%rax$/;"	l
ffff800000102594	kernel.asm	/^ffff800000102594:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff800000102597	kernel.asm	/^ffff800000102597:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ffff80000010259b	kernel.asm	/^ffff80000010259b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010259f	kernel.asm	/^ffff80000010259f:	0f b7 90 94 00 00 00 	movzwl 0x94(%rax),%edx$/;"	l
ffff8000001025a6	kernel.asm	/^ffff8000001025a6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff8000001025aa	kernel.asm	/^ffff8000001025aa:	66 89 10             	mov    %dx,(%rax)$/;"	l
ffff8000001025ad	kernel.asm	/^ffff8000001025ad:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff8000001025b1	kernel.asm	/^ffff8000001025b1:	0f b7 90 96 00 00 00 	movzwl 0x96(%rax),%edx$/;"	l
ffff8000001025b8	kernel.asm	/^ffff8000001025b8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff8000001025bc	kernel.asm	/^ffff8000001025bc:	66 89 50 02          	mov    %dx,0x2(%rax)$/;"	l
ffff8000001025c0	kernel.asm	/^ffff8000001025c0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff8000001025c4	kernel.asm	/^ffff8000001025c4:	0f b7 90 98 00 00 00 	movzwl 0x98(%rax),%edx$/;"	l
ffff8000001025cb	kernel.asm	/^ffff8000001025cb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff8000001025cf	kernel.asm	/^ffff8000001025cf:	66 89 50 04          	mov    %dx,0x4(%rax)$/;"	l
ffff8000001025d3	kernel.asm	/^ffff8000001025d3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff8000001025d7	kernel.asm	/^ffff8000001025d7:	0f b7 90 9a 00 00 00 	movzwl 0x9a(%rax),%edx$/;"	l
ffff8000001025de	kernel.asm	/^ffff8000001025de:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff8000001025e2	kernel.asm	/^ffff8000001025e2:	66 89 50 06          	mov    %dx,0x6(%rax)$/;"	l
ffff8000001025e6	kernel.asm	/^ffff8000001025e6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff8000001025ea	kernel.asm	/^ffff8000001025ea:	8b 90 9c 00 00 00    	mov    0x9c(%rax),%edx$/;"	l
ffff8000001025f0	kernel.asm	/^ffff8000001025f0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff8000001025f4	kernel.asm	/^ffff8000001025f4:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
ffff8000001025f7	kernel.asm	/^ffff8000001025f7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff8000001025fb	kernel.asm	/^ffff8000001025fb:	48 8d 88 a0 00 00 00 	lea    0xa0(%rax),%rcx$/;"	l
ffff800000102602	kernel.asm	/^ffff800000102602:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000102606	kernel.asm	/^ffff800000102606:	48 83 c0 0c          	add    $0xc,%rax$/;"	l
ffff80000010260a	kernel.asm	/^ffff80000010260a:	ba 34 00 00 00       	mov    $0x34,%edx$/;"	l
ffff80000010260f	kernel.asm	/^ffff80000010260f:	48 89 ce             	mov    %rcx,%rsi$/;"	l
ffff800000102612	kernel.asm	/^ffff800000102612:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000102615	kernel.asm	/^ffff800000102615:	48 b8 98 76 10 00 00 	movabs $0xffff800000107698,%rax$/;"	l
ffff80000010261c	kernel.asm	/^ffff80000010261c:	80 ff ff $/;"	l
ffff80000010261f	kernel.asm	/^ffff80000010261f:	ff d0                	callq  *%rax$/;"	l
ffff800000102621	kernel.asm	/^ffff800000102621:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000102625	kernel.asm	/^ffff800000102625:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000102628	kernel.asm	/^ffff800000102628:	48 b8 03 51 10 00 00 	movabs $0xffff800000105103,%rax$/;"	l
ffff80000010262f	kernel.asm	/^ffff80000010262f:	80 ff ff $/;"	l
ffff800000102632	kernel.asm	/^ffff800000102632:	ff d0                	callq  *%rax$/;"	l
ffff800000102634	kernel.asm	/^ffff800000102634:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000102638	kernel.asm	/^ffff800000102638:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010263b	kernel.asm	/^ffff80000010263b:	48 b8 aa 04 10 00 00 	movabs $0xffff8000001004aa,%rax$/;"	l
ffff800000102642	kernel.asm	/^ffff800000102642:	80 ff ff $/;"	l
ffff800000102645	kernel.asm	/^ffff800000102645:	ff d0                	callq  *%rax$/;"	l
ffff800000102647	kernel.asm	/^ffff800000102647:	90                   	nop$/;"	l
ffff800000102648	kernel.asm	/^ffff800000102648:	c9                   	leaveq $/;"	l
ffff800000102649	kernel.asm	/^ffff800000102649:	c3                   	retq   $/;"	l
ffff80000010264a	kernel.asm	/^ffff80000010264a <iget>:$/;"	l
ffff80000010264a	kernel.asm	/^ffff80000010264a:	55                   	push   %rbp$/;"	l
ffff80000010264b	kernel.asm	/^ffff80000010264b:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010264e	kernel.asm	/^ffff80000010264e:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ffff800000102652	kernel.asm	/^ffff800000102652:	89 7d ec             	mov    %edi,-0x14(%rbp)$/;"	l
ffff800000102655	kernel.asm	/^ffff800000102655:	89 75 e8             	mov    %esi,-0x18(%rbp)$/;"	l
ffff800000102658	kernel.asm	/^ffff800000102658:	48 bf 20 46 11 00 00 	movabs $0xffff800000114620,%rdi$/;"	l
ffff80000010265f	kernel.asm	/^ffff80000010265f:	80 ff ff $/;"	l
ffff800000102662	kernel.asm	/^ffff800000102662:	48 b8 ff 71 10 00 00 	movabs $0xffff8000001071ff,%rax$/;"	l
ffff800000102669	kernel.asm	/^ffff800000102669:	80 ff ff $/;"	l
ffff80000010266c	kernel.asm	/^ffff80000010266c:	ff d0                	callq  *%rax$/;"	l
ffff80000010266e	kernel.asm	/^ffff80000010266e:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)$/;"	l
ffff800000102675	kernel.asm	/^ffff800000102675:	00 $/;"	l
ffff800000102676	kernel.asm	/^ffff800000102676:	48 b8 88 46 11 00 00 	movabs $0xffff800000114688,%rax$/;"	l
ffff80000010267d	kernel.asm	/^ffff80000010267d:	80 ff ff $/;"	l
ffff800000102680	kernel.asm	/^ffff800000102680:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff800000102684	kernel.asm	/^ffff800000102684:	eb 74                	jmp    ffff8000001026fa <iget+0xb0>$/;"	l
ffff800000102686	kernel.asm	/^ffff800000102686:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010268a	kernel.asm	/^ffff80000010268a:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
ffff80000010268d	kernel.asm	/^ffff80000010268d:	85 c0                	test   %eax,%eax$/;"	l
ffff80000010268f	kernel.asm	/^ffff80000010268f:	7e 47                	jle    ffff8000001026d8 <iget+0x8e>$/;"	l
ffff800000102691	kernel.asm	/^ffff800000102691:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000102695	kernel.asm	/^ffff800000102695:	8b 00                	mov    (%rax),%eax$/;"	l
ffff800000102697	kernel.asm	/^ffff800000102697:	3b 45 ec             	cmp    -0x14(%rbp),%eax$/;"	l
ffff80000010269a	kernel.asm	/^ffff80000010269a:	75 3c                	jne    ffff8000001026d8 <iget+0x8e>$/;"	l
ffff80000010269c	kernel.asm	/^ffff80000010269c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001026a0	kernel.asm	/^ffff8000001026a0:	8b 40 04             	mov    0x4(%rax),%eax$/;"	l
ffff8000001026a3	kernel.asm	/^ffff8000001026a3:	3b 45 e8             	cmp    -0x18(%rbp),%eax$/;"	l
ffff8000001026a6	kernel.asm	/^ffff8000001026a6:	75 30                	jne    ffff8000001026d8 <iget+0x8e>$/;"	l
ffff8000001026a8	kernel.asm	/^ffff8000001026a8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001026ac	kernel.asm	/^ffff8000001026ac:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
ffff8000001026af	kernel.asm	/^ffff8000001026af:	8d 50 01             	lea    0x1(%rax),%edx$/;"	l
ffff8000001026b2	kernel.asm	/^ffff8000001026b2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001026b6	kernel.asm	/^ffff8000001026b6:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
ffff8000001026b9	kernel.asm	/^ffff8000001026b9:	48 bf 20 46 11 00 00 	movabs $0xffff800000114620,%rdi$/;"	l
ffff8000001026c0	kernel.asm	/^ffff8000001026c0:	80 ff ff $/;"	l
ffff8000001026c3	kernel.asm	/^ffff8000001026c3:	48 b8 98 72 10 00 00 	movabs $0xffff800000107298,%rax$/;"	l
ffff8000001026ca	kernel.asm	/^ffff8000001026ca:	80 ff ff $/;"	l
ffff8000001026cd	kernel.asm	/^ffff8000001026cd:	ff d0                	callq  *%rax$/;"	l
ffff8000001026cf	kernel.asm	/^ffff8000001026cf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001026d3	kernel.asm	/^ffff8000001026d3:	e9 a1 00 00 00       	jmpq   ffff800000102779 <iget+0x12f>$/;"	l
ffff8000001026d8	kernel.asm	/^ffff8000001026d8:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)$/;"	l
ffff8000001026dd	kernel.asm	/^ffff8000001026dd:	75 13                	jne    ffff8000001026f2 <iget+0xa8>$/;"	l
ffff8000001026df	kernel.asm	/^ffff8000001026df:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001026e3	kernel.asm	/^ffff8000001026e3:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
ffff8000001026e6	kernel.asm	/^ffff8000001026e6:	85 c0                	test   %eax,%eax$/;"	l
ffff8000001026e8	kernel.asm	/^ffff8000001026e8:	75 08                	jne    ffff8000001026f2 <iget+0xa8>$/;"	l
ffff8000001026ea	kernel.asm	/^ffff8000001026ea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001026ee	kernel.asm	/^ffff8000001026ee:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ffff8000001026f2	kernel.asm	/^ffff8000001026f2:	48 81 45 f8 d8 00 00 	addq   $0xd8,-0x8(%rbp)$/;"	l
ffff8000001026f9	kernel.asm	/^ffff8000001026f9:	00 $/;"	l
ffff8000001026fa	kernel.asm	/^ffff8000001026fa:	48 b8 b8 70 11 00 00 	movabs $0xffff8000001170b8,%rax$/;"	l
ffff800000102701	kernel.asm	/^ffff800000102701:	80 ff ff $/;"	l
ffff800000102704	kernel.asm	/^ffff800000102704:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)$/;"	l
ffff800000102708	kernel.asm	/^ffff800000102708:	0f 82 78 ff ff ff    	jb     ffff800000102686 <iget+0x3c>$/;"	l
ffff80000010270e	kernel.asm	/^ffff80000010270e:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)$/;"	l
ffff800000102713	kernel.asm	/^ffff800000102713:	75 16                	jne    ffff80000010272b <iget+0xe1>$/;"	l
ffff800000102715	kernel.asm	/^ffff800000102715:	48 bf 24 bb 10 00 00 	movabs $0xffff80000010bb24,%rdi$/;"	l
ffff80000010271c	kernel.asm	/^ffff80000010271c:	80 ff ff $/;"	l
ffff80000010271f	kernel.asm	/^ffff80000010271f:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff800000102726	kernel.asm	/^ffff800000102726:	80 ff ff $/;"	l
ffff800000102729	kernel.asm	/^ffff800000102729:	ff d0                	callq  *%rax$/;"	l
ffff80000010272b	kernel.asm	/^ffff80000010272b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff80000010272f	kernel.asm	/^ffff80000010272f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff800000102733	kernel.asm	/^ffff800000102733:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000102737	kernel.asm	/^ffff800000102737:	8b 55 ec             	mov    -0x14(%rbp),%edx$/;"	l
ffff80000010273a	kernel.asm	/^ffff80000010273a:	89 10                	mov    %edx,(%rax)$/;"	l
ffff80000010273c	kernel.asm	/^ffff80000010273c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000102740	kernel.asm	/^ffff800000102740:	8b 55 e8             	mov    -0x18(%rbp),%edx$/;"	l
ffff800000102743	kernel.asm	/^ffff800000102743:	89 50 04             	mov    %edx,0x4(%rax)$/;"	l
ffff800000102746	kernel.asm	/^ffff800000102746:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010274a	kernel.asm	/^ffff80000010274a:	c7 40 08 01 00 00 00 	movl   $0x1,0x8(%rax)$/;"	l
ffff800000102751	kernel.asm	/^ffff800000102751:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000102755	kernel.asm	/^ffff800000102755:	c7 80 90 00 00 00 00 	movl   $0x0,0x90(%rax)$/;"	l
ffff80000010275c	kernel.asm	/^ffff80000010275c:	00 00 00 $/;"	l
ffff80000010275f	kernel.asm	/^ffff80000010275f:	48 bf 20 46 11 00 00 	movabs $0xffff800000114620,%rdi$/;"	l
ffff800000102766	kernel.asm	/^ffff800000102766:	80 ff ff $/;"	l
ffff800000102769	kernel.asm	/^ffff800000102769:	48 b8 98 72 10 00 00 	movabs $0xffff800000107298,%rax$/;"	l
ffff800000102770	kernel.asm	/^ffff800000102770:	80 ff ff $/;"	l
ffff800000102773	kernel.asm	/^ffff800000102773:	ff d0                	callq  *%rax$/;"	l
ffff800000102775	kernel.asm	/^ffff800000102775:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000102779	kernel.asm	/^ffff800000102779:	c9                   	leaveq $/;"	l
ffff80000010277a	kernel.asm	/^ffff80000010277a:	c3                   	retq   $/;"	l
ffff80000010277b	kernel.asm	/^ffff80000010277b <idup>:$/;"	l
ffff80000010277b	kernel.asm	/^ffff80000010277b:	55                   	push   %rbp$/;"	l
ffff80000010277c	kernel.asm	/^ffff80000010277c:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010277f	kernel.asm	/^ffff80000010277f:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff800000102783	kernel.asm	/^ffff800000102783:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)$/;"	l
ffff800000102787	kernel.asm	/^ffff800000102787:	48 bf 20 46 11 00 00 	movabs $0xffff800000114620,%rdi$/;"	l
ffff80000010278e	kernel.asm	/^ffff80000010278e:	80 ff ff $/;"	l
ffff800000102791	kernel.asm	/^ffff800000102791:	48 b8 ff 71 10 00 00 	movabs $0xffff8000001071ff,%rax$/;"	l
ffff800000102798	kernel.asm	/^ffff800000102798:	80 ff ff $/;"	l
ffff80000010279b	kernel.asm	/^ffff80000010279b:	ff d0                	callq  *%rax$/;"	l
ffff80000010279d	kernel.asm	/^ffff80000010279d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001027a1	kernel.asm	/^ffff8000001027a1:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
ffff8000001027a4	kernel.asm	/^ffff8000001027a4:	8d 50 01             	lea    0x1(%rax),%edx$/;"	l
ffff8000001027a7	kernel.asm	/^ffff8000001027a7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001027ab	kernel.asm	/^ffff8000001027ab:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
ffff8000001027ae	kernel.asm	/^ffff8000001027ae:	48 bf 20 46 11 00 00 	movabs $0xffff800000114620,%rdi$/;"	l
ffff8000001027b5	kernel.asm	/^ffff8000001027b5:	80 ff ff $/;"	l
ffff8000001027b8	kernel.asm	/^ffff8000001027b8:	48 b8 98 72 10 00 00 	movabs $0xffff800000107298,%rax$/;"	l
ffff8000001027bf	kernel.asm	/^ffff8000001027bf:	80 ff ff $/;"	l
ffff8000001027c2	kernel.asm	/^ffff8000001027c2:	ff d0                	callq  *%rax$/;"	l
ffff8000001027c4	kernel.asm	/^ffff8000001027c4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001027c8	kernel.asm	/^ffff8000001027c8:	c9                   	leaveq $/;"	l
ffff8000001027c9	kernel.asm	/^ffff8000001027c9:	c3                   	retq   $/;"	l
ffff8000001027ca	kernel.asm	/^ffff8000001027ca <ilock>:$/;"	l
ffff8000001027ca	kernel.asm	/^ffff8000001027ca:	55                   	push   %rbp$/;"	l
ffff8000001027cb	kernel.asm	/^ffff8000001027cb:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff8000001027ce	kernel.asm	/^ffff8000001027ce:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ffff8000001027d2	kernel.asm	/^ffff8000001027d2:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
ffff8000001027d6	kernel.asm	/^ffff8000001027d6:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)$/;"	l
ffff8000001027db	kernel.asm	/^ffff8000001027db:	74 0b                	je     ffff8000001027e8 <ilock+0x1e>$/;"	l
ffff8000001027dd	kernel.asm	/^ffff8000001027dd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff8000001027e1	kernel.asm	/^ffff8000001027e1:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
ffff8000001027e4	kernel.asm	/^ffff8000001027e4:	85 c0                	test   %eax,%eax$/;"	l
ffff8000001027e6	kernel.asm	/^ffff8000001027e6:	7f 16                	jg     ffff8000001027fe <ilock+0x34>$/;"	l
ffff8000001027e8	kernel.asm	/^ffff8000001027e8:	48 bf 34 bb 10 00 00 	movabs $0xffff80000010bb34,%rdi$/;"	l
ffff8000001027ef	kernel.asm	/^ffff8000001027ef:	80 ff ff $/;"	l
ffff8000001027f2	kernel.asm	/^ffff8000001027f2:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff8000001027f9	kernel.asm	/^ffff8000001027f9:	80 ff ff $/;"	l
ffff8000001027fc	kernel.asm	/^ffff8000001027fc:	ff d0                	callq  *%rax$/;"	l
ffff8000001027fe	kernel.asm	/^ffff8000001027fe:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000102802	kernel.asm	/^ffff800000102802:	48 83 c0 10          	add    $0x10,%rax$/;"	l
ffff800000102806	kernel.asm	/^ffff800000102806:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000102809	kernel.asm	/^ffff800000102809:	48 b8 4c 70 10 00 00 	movabs $0xffff80000010704c,%rax$/;"	l
ffff800000102810	kernel.asm	/^ffff800000102810:	80 ff ff $/;"	l
ffff800000102813	kernel.asm	/^ffff800000102813:	ff d0                	callq  *%rax$/;"	l
ffff800000102815	kernel.asm	/^ffff800000102815:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000102819	kernel.asm	/^ffff800000102819:	8b 80 90 00 00 00    	mov    0x90(%rax),%eax$/;"	l
ffff80000010281f	kernel.asm	/^ffff80000010281f:	83 e0 02             	and    $0x2,%eax$/;"	l
ffff800000102822	kernel.asm	/^ffff800000102822:	85 c0                	test   %eax,%eax$/;"	l
ffff800000102824	kernel.asm	/^ffff800000102824:	0f 85 2e 01 00 00    	jne    ffff800000102958 <ilock+0x18e>$/;"	l
ffff80000010282a	kernel.asm	/^ffff80000010282a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010282e	kernel.asm	/^ffff80000010282e:	8b 40 04             	mov    0x4(%rax),%eax$/;"	l
ffff800000102831	kernel.asm	/^ffff800000102831:	c1 e8 03             	shr    $0x3,%eax$/;"	l
ffff800000102834	kernel.asm	/^ffff800000102834:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000102836	kernel.asm	/^ffff800000102836:	48 b8 00 46 11 00 00 	movabs $0xffff800000114600,%rax$/;"	l
ffff80000010283d	kernel.asm	/^ffff80000010283d:	80 ff ff $/;"	l
ffff800000102840	kernel.asm	/^ffff800000102840:	8b 40 14             	mov    0x14(%rax),%eax$/;"	l
ffff800000102843	kernel.asm	/^ffff800000102843:	01 c2                	add    %eax,%edx$/;"	l
ffff800000102845	kernel.asm	/^ffff800000102845:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000102849	kernel.asm	/^ffff800000102849:	8b 00                	mov    (%rax),%eax$/;"	l
ffff80000010284b	kernel.asm	/^ffff80000010284b:	89 d6                	mov    %edx,%esi$/;"	l
ffff80000010284d	kernel.asm	/^ffff80000010284d:	89 c7                	mov    %eax,%edi$/;"	l
ffff80000010284f	kernel.asm	/^ffff80000010284f:	48 b8 f8 03 10 00 00 	movabs $0xffff8000001003f8,%rax$/;"	l
ffff800000102856	kernel.asm	/^ffff800000102856:	80 ff ff $/;"	l
ffff800000102859	kernel.asm	/^ffff800000102859:	ff d0                	callq  *%rax$/;"	l
ffff80000010285b	kernel.asm	/^ffff80000010285b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff80000010285f	kernel.asm	/^ffff80000010285f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000102863	kernel.asm	/^ffff800000102863:	48 8d 90 b0 00 00 00 	lea    0xb0(%rax),%rdx$/;"	l
ffff80000010286a	kernel.asm	/^ffff80000010286a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010286e	kernel.asm	/^ffff80000010286e:	8b 40 04             	mov    0x4(%rax),%eax$/;"	l
ffff800000102871	kernel.asm	/^ffff800000102871:	89 c0                	mov    %eax,%eax$/;"	l
ffff800000102873	kernel.asm	/^ffff800000102873:	83 e0 07             	and    $0x7,%eax$/;"	l
ffff800000102876	kernel.asm	/^ffff800000102876:	48 c1 e0 06          	shl    $0x6,%rax$/;"	l
ffff80000010287a	kernel.asm	/^ffff80000010287a:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff80000010287d	kernel.asm	/^ffff80000010287d:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ffff800000102881	kernel.asm	/^ffff800000102881:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000102885	kernel.asm	/^ffff800000102885:	0f b7 10             	movzwl (%rax),%edx$/;"	l
ffff800000102888	kernel.asm	/^ffff800000102888:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010288c	kernel.asm	/^ffff80000010288c:	66 89 90 94 00 00 00 	mov    %dx,0x94(%rax)$/;"	l
ffff800000102893	kernel.asm	/^ffff800000102893:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000102897	kernel.asm	/^ffff800000102897:	0f b7 50 02          	movzwl 0x2(%rax),%edx$/;"	l
ffff80000010289b	kernel.asm	/^ffff80000010289b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010289f	kernel.asm	/^ffff80000010289f:	66 89 90 96 00 00 00 	mov    %dx,0x96(%rax)$/;"	l
ffff8000001028a6	kernel.asm	/^ffff8000001028a6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff8000001028aa	kernel.asm	/^ffff8000001028aa:	0f b7 50 04          	movzwl 0x4(%rax),%edx$/;"	l
ffff8000001028ae	kernel.asm	/^ffff8000001028ae:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff8000001028b2	kernel.asm	/^ffff8000001028b2:	66 89 90 98 00 00 00 	mov    %dx,0x98(%rax)$/;"	l
ffff8000001028b9	kernel.asm	/^ffff8000001028b9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff8000001028bd	kernel.asm	/^ffff8000001028bd:	0f b7 50 06          	movzwl 0x6(%rax),%edx$/;"	l
ffff8000001028c1	kernel.asm	/^ffff8000001028c1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff8000001028c5	kernel.asm	/^ffff8000001028c5:	66 89 90 9a 00 00 00 	mov    %dx,0x9a(%rax)$/;"	l
ffff8000001028cc	kernel.asm	/^ffff8000001028cc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff8000001028d0	kernel.asm	/^ffff8000001028d0:	8b 50 08             	mov    0x8(%rax),%edx$/;"	l
ffff8000001028d3	kernel.asm	/^ffff8000001028d3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff8000001028d7	kernel.asm	/^ffff8000001028d7:	89 90 9c 00 00 00    	mov    %edx,0x9c(%rax)$/;"	l
ffff8000001028dd	kernel.asm	/^ffff8000001028dd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff8000001028e1	kernel.asm	/^ffff8000001028e1:	48 8d 48 0c          	lea    0xc(%rax),%rcx$/;"	l
ffff8000001028e5	kernel.asm	/^ffff8000001028e5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff8000001028e9	kernel.asm	/^ffff8000001028e9:	48 05 a0 00 00 00    	add    $0xa0,%rax$/;"	l
ffff8000001028ef	kernel.asm	/^ffff8000001028ef:	ba 34 00 00 00       	mov    $0x34,%edx$/;"	l
ffff8000001028f4	kernel.asm	/^ffff8000001028f4:	48 89 ce             	mov    %rcx,%rsi$/;"	l
ffff8000001028f7	kernel.asm	/^ffff8000001028f7:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001028fa	kernel.asm	/^ffff8000001028fa:	48 b8 98 76 10 00 00 	movabs $0xffff800000107698,%rax$/;"	l
ffff800000102901	kernel.asm	/^ffff800000102901:	80 ff ff $/;"	l
ffff800000102904	kernel.asm	/^ffff800000102904:	ff d0                	callq  *%rax$/;"	l
ffff800000102906	kernel.asm	/^ffff800000102906:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010290a	kernel.asm	/^ffff80000010290a:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010290d	kernel.asm	/^ffff80000010290d:	48 b8 aa 04 10 00 00 	movabs $0xffff8000001004aa,%rax$/;"	l
ffff800000102914	kernel.asm	/^ffff800000102914:	80 ff ff $/;"	l
ffff800000102917	kernel.asm	/^ffff800000102917:	ff d0                	callq  *%rax$/;"	l
ffff800000102919	kernel.asm	/^ffff800000102919:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010291d	kernel.asm	/^ffff80000010291d:	8b 80 90 00 00 00    	mov    0x90(%rax),%eax$/;"	l
ffff800000102923	kernel.asm	/^ffff800000102923:	83 c8 02             	or     $0x2,%eax$/;"	l
ffff800000102926	kernel.asm	/^ffff800000102926:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000102928	kernel.asm	/^ffff800000102928:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010292c	kernel.asm	/^ffff80000010292c:	89 90 90 00 00 00    	mov    %edx,0x90(%rax)$/;"	l
ffff800000102932	kernel.asm	/^ffff800000102932:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000102936	kernel.asm	/^ffff800000102936:	0f b7 80 94 00 00 00 	movzwl 0x94(%rax),%eax$/;"	l
ffff80000010293d	kernel.asm	/^ffff80000010293d:	66 85 c0             	test   %ax,%ax$/;"	l
ffff800000102940	kernel.asm	/^ffff800000102940:	75 16                	jne    ffff800000102958 <ilock+0x18e>$/;"	l
ffff800000102942	kernel.asm	/^ffff800000102942:	48 bf 3a bb 10 00 00 	movabs $0xffff80000010bb3a,%rdi$/;"	l
ffff800000102949	kernel.asm	/^ffff800000102949:	80 ff ff $/;"	l
ffff80000010294c	kernel.asm	/^ffff80000010294c:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff800000102953	kernel.asm	/^ffff800000102953:	80 ff ff $/;"	l
ffff800000102956	kernel.asm	/^ffff800000102956:	ff d0                	callq  *%rax$/;"	l
ffff800000102958	kernel.asm	/^ffff800000102958:	90                   	nop$/;"	l
ffff800000102959	kernel.asm	/^ffff800000102959:	c9                   	leaveq $/;"	l
ffff80000010295a	kernel.asm	/^ffff80000010295a:	c3                   	retq   $/;"	l
ffff80000010295b	kernel.asm	/^ffff80000010295b <iunlock>:$/;"	l
ffff80000010295b	kernel.asm	/^ffff80000010295b:	55                   	push   %rbp$/;"	l
ffff80000010295c	kernel.asm	/^ffff80000010295c:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010295f	kernel.asm	/^ffff80000010295f:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff800000102963	kernel.asm	/^ffff800000102963:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)$/;"	l
ffff800000102967	kernel.asm	/^ffff800000102967:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)$/;"	l
ffff80000010296c	kernel.asm	/^ffff80000010296c:	74 26                	je     ffff800000102994 <iunlock+0x39>$/;"	l
ffff80000010296e	kernel.asm	/^ffff80000010296e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000102972	kernel.asm	/^ffff800000102972:	48 83 c0 10          	add    $0x10,%rax$/;"	l
ffff800000102976	kernel.asm	/^ffff800000102976:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000102979	kernel.asm	/^ffff800000102979:	48 b8 37 71 10 00 00 	movabs $0xffff800000107137,%rax$/;"	l
ffff800000102980	kernel.asm	/^ffff800000102980:	80 ff ff $/;"	l
ffff800000102983	kernel.asm	/^ffff800000102983:	ff d0                	callq  *%rax$/;"	l
ffff800000102985	kernel.asm	/^ffff800000102985:	85 c0                	test   %eax,%eax$/;"	l
ffff800000102987	kernel.asm	/^ffff800000102987:	74 0b                	je     ffff800000102994 <iunlock+0x39>$/;"	l
ffff800000102989	kernel.asm	/^ffff800000102989:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010298d	kernel.asm	/^ffff80000010298d:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
ffff800000102990	kernel.asm	/^ffff800000102990:	85 c0                	test   %eax,%eax$/;"	l
ffff800000102992	kernel.asm	/^ffff800000102992:	7f 16                	jg     ffff8000001029aa <iunlock+0x4f>$/;"	l
ffff800000102994	kernel.asm	/^ffff800000102994:	48 bf 49 bb 10 00 00 	movabs $0xffff80000010bb49,%rdi$/;"	l
ffff80000010299b	kernel.asm	/^ffff80000010299b:	80 ff ff $/;"	l
ffff80000010299e	kernel.asm	/^ffff80000010299e:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff8000001029a5	kernel.asm	/^ffff8000001029a5:	80 ff ff $/;"	l
ffff8000001029a8	kernel.asm	/^ffff8000001029a8:	ff d0                	callq  *%rax$/;"	l
ffff8000001029aa	kernel.asm	/^ffff8000001029aa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001029ae	kernel.asm	/^ffff8000001029ae:	48 83 c0 10          	add    $0x10,%rax$/;"	l
ffff8000001029b2	kernel.asm	/^ffff8000001029b2:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001029b5	kernel.asm	/^ffff8000001029b5:	48 b8 d2 70 10 00 00 	movabs $0xffff8000001070d2,%rax$/;"	l
ffff8000001029bc	kernel.asm	/^ffff8000001029bc:	80 ff ff $/;"	l
ffff8000001029bf	kernel.asm	/^ffff8000001029bf:	ff d0                	callq  *%rax$/;"	l
ffff8000001029c1	kernel.asm	/^ffff8000001029c1:	90                   	nop$/;"	l
ffff8000001029c2	kernel.asm	/^ffff8000001029c2:	c9                   	leaveq $/;"	l
ffff8000001029c3	kernel.asm	/^ffff8000001029c3:	c3                   	retq   $/;"	l
ffff8000001029c4	kernel.asm	/^ffff8000001029c4 <iput>:$/;"	l
ffff8000001029c4	kernel.asm	/^ffff8000001029c4:	55                   	push   %rbp$/;"	l
ffff8000001029c5	kernel.asm	/^ffff8000001029c5:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff8000001029c8	kernel.asm	/^ffff8000001029c8:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff8000001029cc	kernel.asm	/^ffff8000001029cc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)$/;"	l
ffff8000001029d0	kernel.asm	/^ffff8000001029d0:	48 bf 20 46 11 00 00 	movabs $0xffff800000114620,%rdi$/;"	l
ffff8000001029d7	kernel.asm	/^ffff8000001029d7:	80 ff ff $/;"	l
ffff8000001029da	kernel.asm	/^ffff8000001029da:	48 b8 ff 71 10 00 00 	movabs $0xffff8000001071ff,%rax$/;"	l
ffff8000001029e1	kernel.asm	/^ffff8000001029e1:	80 ff ff $/;"	l
ffff8000001029e4	kernel.asm	/^ffff8000001029e4:	ff d0                	callq  *%rax$/;"	l
ffff8000001029e6	kernel.asm	/^ffff8000001029e6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001029ea	kernel.asm	/^ffff8000001029ea:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
ffff8000001029ed	kernel.asm	/^ffff8000001029ed:	83 f8 01             	cmp    $0x1,%eax$/;"	l
ffff8000001029f0	kernel.asm	/^ffff8000001029f0:	0f 85 8e 00 00 00    	jne    ffff800000102a84 <iput+0xc0>$/;"	l
ffff8000001029f6	kernel.asm	/^ffff8000001029f6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001029fa	kernel.asm	/^ffff8000001029fa:	8b 80 90 00 00 00    	mov    0x90(%rax),%eax$/;"	l
ffff800000102a00	kernel.asm	/^ffff800000102a00:	83 e0 02             	and    $0x2,%eax$/;"	l
ffff800000102a03	kernel.asm	/^ffff800000102a03:	85 c0                	test   %eax,%eax$/;"	l
ffff800000102a05	kernel.asm	/^ffff800000102a05:	74 7d                	je     ffff800000102a84 <iput+0xc0>$/;"	l
ffff800000102a07	kernel.asm	/^ffff800000102a07:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000102a0b	kernel.asm	/^ffff800000102a0b:	0f b7 80 9a 00 00 00 	movzwl 0x9a(%rax),%eax$/;"	l
ffff800000102a12	kernel.asm	/^ffff800000102a12:	66 85 c0             	test   %ax,%ax$/;"	l
ffff800000102a15	kernel.asm	/^ffff800000102a15:	75 6d                	jne    ffff800000102a84 <iput+0xc0>$/;"	l
ffff800000102a17	kernel.asm	/^ffff800000102a17:	48 bf 20 46 11 00 00 	movabs $0xffff800000114620,%rdi$/;"	l
ffff800000102a1e	kernel.asm	/^ffff800000102a1e:	80 ff ff $/;"	l
ffff800000102a21	kernel.asm	/^ffff800000102a21:	48 b8 98 72 10 00 00 	movabs $0xffff800000107298,%rax$/;"	l
ffff800000102a28	kernel.asm	/^ffff800000102a28:	80 ff ff $/;"	l
ffff800000102a2b	kernel.asm	/^ffff800000102a2b:	ff d0                	callq  *%rax$/;"	l
ffff800000102a2d	kernel.asm	/^ffff800000102a2d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000102a31	kernel.asm	/^ffff800000102a31:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000102a34	kernel.asm	/^ffff800000102a34:	48 b8 44 2c 10 00 00 	movabs $0xffff800000102c44,%rax$/;"	l
ffff800000102a3b	kernel.asm	/^ffff800000102a3b:	80 ff ff $/;"	l
ffff800000102a3e	kernel.asm	/^ffff800000102a3e:	ff d0                	callq  *%rax$/;"	l
ffff800000102a40	kernel.asm	/^ffff800000102a40:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000102a44	kernel.asm	/^ffff800000102a44:	66 c7 80 94 00 00 00 	movw   $0x0,0x94(%rax)$/;"	l
ffff800000102a4b	kernel.asm	/^ffff800000102a4b:	00 00 $/;"	l
ffff800000102a4d	kernel.asm	/^ffff800000102a4d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000102a51	kernel.asm	/^ffff800000102a51:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000102a54	kernel.asm	/^ffff800000102a54:	48 b8 38 25 10 00 00 	movabs $0xffff800000102538,%rax$/;"	l
ffff800000102a5b	kernel.asm	/^ffff800000102a5b:	80 ff ff $/;"	l
ffff800000102a5e	kernel.asm	/^ffff800000102a5e:	ff d0                	callq  *%rax$/;"	l
ffff800000102a60	kernel.asm	/^ffff800000102a60:	48 bf 20 46 11 00 00 	movabs $0xffff800000114620,%rdi$/;"	l
ffff800000102a67	kernel.asm	/^ffff800000102a67:	80 ff ff $/;"	l
ffff800000102a6a	kernel.asm	/^ffff800000102a6a:	48 b8 ff 71 10 00 00 	movabs $0xffff8000001071ff,%rax$/;"	l
ffff800000102a71	kernel.asm	/^ffff800000102a71:	80 ff ff $/;"	l
ffff800000102a74	kernel.asm	/^ffff800000102a74:	ff d0                	callq  *%rax$/;"	l
ffff800000102a76	kernel.asm	/^ffff800000102a76:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000102a7a	kernel.asm	/^ffff800000102a7a:	c7 80 90 00 00 00 00 	movl   $0x0,0x90(%rax)$/;"	l
ffff800000102a81	kernel.asm	/^ffff800000102a81:	00 00 00 $/;"	l
ffff800000102a84	kernel.asm	/^ffff800000102a84:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000102a88	kernel.asm	/^ffff800000102a88:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
ffff800000102a8b	kernel.asm	/^ffff800000102a8b:	8d 50 ff             	lea    -0x1(%rax),%edx$/;"	l
ffff800000102a8e	kernel.asm	/^ffff800000102a8e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000102a92	kernel.asm	/^ffff800000102a92:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
ffff800000102a95	kernel.asm	/^ffff800000102a95:	48 bf 20 46 11 00 00 	movabs $0xffff800000114620,%rdi$/;"	l
ffff800000102a9c	kernel.asm	/^ffff800000102a9c:	80 ff ff $/;"	l
ffff800000102a9f	kernel.asm	/^ffff800000102a9f:	48 b8 98 72 10 00 00 	movabs $0xffff800000107298,%rax$/;"	l
ffff800000102aa6	kernel.asm	/^ffff800000102aa6:	80 ff ff $/;"	l
ffff800000102aa9	kernel.asm	/^ffff800000102aa9:	ff d0                	callq  *%rax$/;"	l
ffff800000102aab	kernel.asm	/^ffff800000102aab:	90                   	nop$/;"	l
ffff800000102aac	kernel.asm	/^ffff800000102aac:	c9                   	leaveq $/;"	l
ffff800000102aad	kernel.asm	/^ffff800000102aad:	c3                   	retq   $/;"	l
ffff800000102aae	kernel.asm	/^ffff800000102aae <iunlockput>:$/;"	l
ffff800000102aae	kernel.asm	/^ffff800000102aae:	55                   	push   %rbp$/;"	l
ffff800000102aaf	kernel.asm	/^ffff800000102aaf:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000102ab2	kernel.asm	/^ffff800000102ab2:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff800000102ab6	kernel.asm	/^ffff800000102ab6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)$/;"	l
ffff800000102aba	kernel.asm	/^ffff800000102aba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000102abe	kernel.asm	/^ffff800000102abe:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000102ac1	kernel.asm	/^ffff800000102ac1:	48 b8 5b 29 10 00 00 	movabs $0xffff80000010295b,%rax$/;"	l
ffff800000102ac8	kernel.asm	/^ffff800000102ac8:	80 ff ff $/;"	l
ffff800000102acb	kernel.asm	/^ffff800000102acb:	ff d0                	callq  *%rax$/;"	l
ffff800000102acd	kernel.asm	/^ffff800000102acd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000102ad1	kernel.asm	/^ffff800000102ad1:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000102ad4	kernel.asm	/^ffff800000102ad4:	48 b8 c4 29 10 00 00 	movabs $0xffff8000001029c4,%rax$/;"	l
ffff800000102adb	kernel.asm	/^ffff800000102adb:	80 ff ff $/;"	l
ffff800000102ade	kernel.asm	/^ffff800000102ade:	ff d0                	callq  *%rax$/;"	l
ffff800000102ae0	kernel.asm	/^ffff800000102ae0:	90                   	nop$/;"	l
ffff800000102ae1	kernel.asm	/^ffff800000102ae1:	c9                   	leaveq $/;"	l
ffff800000102ae2	kernel.asm	/^ffff800000102ae2:	c3                   	retq   $/;"	l
ffff800000102ae3	kernel.asm	/^ffff800000102ae3 <bmap>:$/;"	l
ffff800000102ae3	kernel.asm	/^ffff800000102ae3:	55                   	push   %rbp$/;"	l
ffff800000102ae4	kernel.asm	/^ffff800000102ae4:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000102ae7	kernel.asm	/^ffff800000102ae7:	53                   	push   %rbx$/;"	l
ffff800000102ae8	kernel.asm	/^ffff800000102ae8:	48 83 ec 38          	sub    $0x38,%rsp$/;"	l
ffff800000102aec	kernel.asm	/^ffff800000102aec:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)$/;"	l
ffff800000102af0	kernel.asm	/^ffff800000102af0:	89 75 c4             	mov    %esi,-0x3c(%rbp)$/;"	l
ffff800000102af3	kernel.asm	/^ffff800000102af3:	83 7d c4 0b          	cmpl   $0xb,-0x3c(%rbp)$/;"	l
ffff800000102af7	kernel.asm	/^ffff800000102af7:	77 47                	ja     ffff800000102b40 <bmap+0x5d>$/;"	l
ffff800000102af9	kernel.asm	/^ffff800000102af9:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
ffff800000102afd	kernel.asm	/^ffff800000102afd:	8b 55 c4             	mov    -0x3c(%rbp),%edx$/;"	l
ffff800000102b00	kernel.asm	/^ffff800000102b00:	48 83 c2 28          	add    $0x28,%rdx$/;"	l
ffff800000102b04	kernel.asm	/^ffff800000102b04:	8b 04 90             	mov    (%rax,%rdx,4),%eax$/;"	l
ffff800000102b07	kernel.asm	/^ffff800000102b07:	89 45 ec             	mov    %eax,-0x14(%rbp)$/;"	l
ffff800000102b0a	kernel.asm	/^ffff800000102b0a:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)$/;"	l
ffff800000102b0e	kernel.asm	/^ffff800000102b0e:	75 28                	jne    ffff800000102b38 <bmap+0x55>$/;"	l
ffff800000102b10	kernel.asm	/^ffff800000102b10:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
ffff800000102b14	kernel.asm	/^ffff800000102b14:	8b 00                	mov    (%rax),%eax$/;"	l
ffff800000102b16	kernel.asm	/^ffff800000102b16:	89 c7                	mov    %eax,%edi$/;"	l
ffff800000102b18	kernel.asm	/^ffff800000102b18:	48 b8 a8 20 10 00 00 	movabs $0xffff8000001020a8,%rax$/;"	l
ffff800000102b1f	kernel.asm	/^ffff800000102b1f:	80 ff ff $/;"	l
ffff800000102b22	kernel.asm	/^ffff800000102b22:	ff d0                	callq  *%rax$/;"	l
ffff800000102b24	kernel.asm	/^ffff800000102b24:	89 45 ec             	mov    %eax,-0x14(%rbp)$/;"	l
ffff800000102b27	kernel.asm	/^ffff800000102b27:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
ffff800000102b2b	kernel.asm	/^ffff800000102b2b:	8b 55 c4             	mov    -0x3c(%rbp),%edx$/;"	l
ffff800000102b2e	kernel.asm	/^ffff800000102b2e:	48 8d 4a 28          	lea    0x28(%rdx),%rcx$/;"	l
ffff800000102b32	kernel.asm	/^ffff800000102b32:	8b 55 ec             	mov    -0x14(%rbp),%edx$/;"	l
ffff800000102b35	kernel.asm	/^ffff800000102b35:	89 14 88             	mov    %edx,(%rax,%rcx,4)$/;"	l
ffff800000102b38	kernel.asm	/^ffff800000102b38:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
ffff800000102b3b	kernel.asm	/^ffff800000102b3b:	e9 fd 00 00 00       	jmpq   ffff800000102c3d <bmap+0x15a>$/;"	l
ffff800000102b40	kernel.asm	/^ffff800000102b40:	83 6d c4 0c          	subl   $0xc,-0x3c(%rbp)$/;"	l
ffff800000102b44	kernel.asm	/^ffff800000102b44:	83 7d c4 7f          	cmpl   $0x7f,-0x3c(%rbp)$/;"	l
ffff800000102b48	kernel.asm	/^ffff800000102b48:	0f 87 d9 00 00 00    	ja     ffff800000102c27 <bmap+0x144>$/;"	l
ffff800000102b4e	kernel.asm	/^ffff800000102b4e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
ffff800000102b52	kernel.asm	/^ffff800000102b52:	8b 80 d0 00 00 00    	mov    0xd0(%rax),%eax$/;"	l
ffff800000102b58	kernel.asm	/^ffff800000102b58:	89 45 ec             	mov    %eax,-0x14(%rbp)$/;"	l
ffff800000102b5b	kernel.asm	/^ffff800000102b5b:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)$/;"	l
ffff800000102b5f	kernel.asm	/^ffff800000102b5f:	75 24                	jne    ffff800000102b85 <bmap+0xa2>$/;"	l
ffff800000102b61	kernel.asm	/^ffff800000102b61:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
ffff800000102b65	kernel.asm	/^ffff800000102b65:	8b 00                	mov    (%rax),%eax$/;"	l
ffff800000102b67	kernel.asm	/^ffff800000102b67:	89 c7                	mov    %eax,%edi$/;"	l
ffff800000102b69	kernel.asm	/^ffff800000102b69:	48 b8 a8 20 10 00 00 	movabs $0xffff8000001020a8,%rax$/;"	l
ffff800000102b70	kernel.asm	/^ffff800000102b70:	80 ff ff $/;"	l
ffff800000102b73	kernel.asm	/^ffff800000102b73:	ff d0                	callq  *%rax$/;"	l
ffff800000102b75	kernel.asm	/^ffff800000102b75:	89 45 ec             	mov    %eax,-0x14(%rbp)$/;"	l
ffff800000102b78	kernel.asm	/^ffff800000102b78:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
ffff800000102b7c	kernel.asm	/^ffff800000102b7c:	8b 55 ec             	mov    -0x14(%rbp),%edx$/;"	l
ffff800000102b7f	kernel.asm	/^ffff800000102b7f:	89 90 d0 00 00 00    	mov    %edx,0xd0(%rax)$/;"	l
ffff800000102b85	kernel.asm	/^ffff800000102b85:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
ffff800000102b89	kernel.asm	/^ffff800000102b89:	8b 00                	mov    (%rax),%eax$/;"	l
ffff800000102b8b	kernel.asm	/^ffff800000102b8b:	8b 55 ec             	mov    -0x14(%rbp),%edx$/;"	l
ffff800000102b8e	kernel.asm	/^ffff800000102b8e:	89 d6                	mov    %edx,%esi$/;"	l
ffff800000102b90	kernel.asm	/^ffff800000102b90:	89 c7                	mov    %eax,%edi$/;"	l
ffff800000102b92	kernel.asm	/^ffff800000102b92:	48 b8 f8 03 10 00 00 	movabs $0xffff8000001003f8,%rax$/;"	l
ffff800000102b99	kernel.asm	/^ffff800000102b99:	80 ff ff $/;"	l
ffff800000102b9c	kernel.asm	/^ffff800000102b9c:	ff d0                	callq  *%rax$/;"	l
ffff800000102b9e	kernel.asm	/^ffff800000102b9e:	48 89 45 e0          	mov    %rax,-0x20(%rbp)$/;"	l
ffff800000102ba2	kernel.asm	/^ffff800000102ba2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff800000102ba6	kernel.asm	/^ffff800000102ba6:	48 05 b0 00 00 00    	add    $0xb0,%rax$/;"	l
ffff800000102bac	kernel.asm	/^ffff800000102bac:	48 89 45 d8          	mov    %rax,-0x28(%rbp)$/;"	l
ffff800000102bb0	kernel.asm	/^ffff800000102bb0:	8b 45 c4             	mov    -0x3c(%rbp),%eax$/;"	l
ffff800000102bb3	kernel.asm	/^ffff800000102bb3:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx$/;"	l
ffff800000102bba	kernel.asm	/^ffff800000102bba:	00 $/;"	l
ffff800000102bbb	kernel.asm	/^ffff800000102bbb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff800000102bbf	kernel.asm	/^ffff800000102bbf:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff800000102bc2	kernel.asm	/^ffff800000102bc2:	8b 00                	mov    (%rax),%eax$/;"	l
ffff800000102bc4	kernel.asm	/^ffff800000102bc4:	89 45 ec             	mov    %eax,-0x14(%rbp)$/;"	l
ffff800000102bc7	kernel.asm	/^ffff800000102bc7:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)$/;"	l
ffff800000102bcb	kernel.asm	/^ffff800000102bcb:	75 42                	jne    ffff800000102c0f <bmap+0x12c>$/;"	l
ffff800000102bcd	kernel.asm	/^ffff800000102bcd:	8b 45 c4             	mov    -0x3c(%rbp),%eax$/;"	l
ffff800000102bd0	kernel.asm	/^ffff800000102bd0:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx$/;"	l
ffff800000102bd7	kernel.asm	/^ffff800000102bd7:	00 $/;"	l
ffff800000102bd8	kernel.asm	/^ffff800000102bd8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff800000102bdc	kernel.asm	/^ffff800000102bdc:	48 8d 1c 02          	lea    (%rdx,%rax,1),%rbx$/;"	l
ffff800000102be0	kernel.asm	/^ffff800000102be0:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
ffff800000102be4	kernel.asm	/^ffff800000102be4:	8b 00                	mov    (%rax),%eax$/;"	l
ffff800000102be6	kernel.asm	/^ffff800000102be6:	89 c7                	mov    %eax,%edi$/;"	l
ffff800000102be8	kernel.asm	/^ffff800000102be8:	48 b8 a8 20 10 00 00 	movabs $0xffff8000001020a8,%rax$/;"	l
ffff800000102bef	kernel.asm	/^ffff800000102bef:	80 ff ff $/;"	l
ffff800000102bf2	kernel.asm	/^ffff800000102bf2:	ff d0                	callq  *%rax$/;"	l
ffff800000102bf4	kernel.asm	/^ffff800000102bf4:	89 45 ec             	mov    %eax,-0x14(%rbp)$/;"	l
ffff800000102bf7	kernel.asm	/^ffff800000102bf7:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
ffff800000102bfa	kernel.asm	/^ffff800000102bfa:	89 03                	mov    %eax,(%rbx)$/;"	l
ffff800000102bfc	kernel.asm	/^ffff800000102bfc:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff800000102c00	kernel.asm	/^ffff800000102c00:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000102c03	kernel.asm	/^ffff800000102c03:	48 b8 03 51 10 00 00 	movabs $0xffff800000105103,%rax$/;"	l
ffff800000102c0a	kernel.asm	/^ffff800000102c0a:	80 ff ff $/;"	l
ffff800000102c0d	kernel.asm	/^ffff800000102c0d:	ff d0                	callq  *%rax$/;"	l
ffff800000102c0f	kernel.asm	/^ffff800000102c0f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff800000102c13	kernel.asm	/^ffff800000102c13:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000102c16	kernel.asm	/^ffff800000102c16:	48 b8 aa 04 10 00 00 	movabs $0xffff8000001004aa,%rax$/;"	l
ffff800000102c1d	kernel.asm	/^ffff800000102c1d:	80 ff ff $/;"	l
ffff800000102c20	kernel.asm	/^ffff800000102c20:	ff d0                	callq  *%rax$/;"	l
ffff800000102c22	kernel.asm	/^ffff800000102c22:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
ffff800000102c25	kernel.asm	/^ffff800000102c25:	eb 16                	jmp    ffff800000102c3d <bmap+0x15a>$/;"	l
ffff800000102c27	kernel.asm	/^ffff800000102c27:	48 bf 51 bb 10 00 00 	movabs $0xffff80000010bb51,%rdi$/;"	l
ffff800000102c2e	kernel.asm	/^ffff800000102c2e:	80 ff ff $/;"	l
ffff800000102c31	kernel.asm	/^ffff800000102c31:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff800000102c38	kernel.asm	/^ffff800000102c38:	80 ff ff $/;"	l
ffff800000102c3b	kernel.asm	/^ffff800000102c3b:	ff d0                	callq  *%rax$/;"	l
ffff800000102c3d	kernel.asm	/^ffff800000102c3d:	48 83 c4 38          	add    $0x38,%rsp$/;"	l
ffff800000102c41	kernel.asm	/^ffff800000102c41:	5b                   	pop    %rbx$/;"	l
ffff800000102c42	kernel.asm	/^ffff800000102c42:	5d                   	pop    %rbp$/;"	l
ffff800000102c43	kernel.asm	/^ffff800000102c43:	c3                   	retq   $/;"	l
ffff800000102c44	kernel.asm	/^ffff800000102c44 <itrunc>:$/;"	l
ffff800000102c44	kernel.asm	/^ffff800000102c44:	55                   	push   %rbp$/;"	l
ffff800000102c45	kernel.asm	/^ffff800000102c45:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000102c48	kernel.asm	/^ffff800000102c48:	48 83 ec 30          	sub    $0x30,%rsp$/;"	l
ffff800000102c4c	kernel.asm	/^ffff800000102c4c:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)$/;"	l
ffff800000102c50	kernel.asm	/^ffff800000102c50:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)$/;"	l
ffff800000102c57	kernel.asm	/^ffff800000102c57:	eb 55                	jmp    ffff800000102cae <itrunc+0x6a>$/;"	l
ffff800000102c59	kernel.asm	/^ffff800000102c59:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff800000102c5d	kernel.asm	/^ffff800000102c5d:	8b 55 fc             	mov    -0x4(%rbp),%edx$/;"	l
ffff800000102c60	kernel.asm	/^ffff800000102c60:	48 63 d2             	movslq %edx,%rdx$/;"	l
ffff800000102c63	kernel.asm	/^ffff800000102c63:	48 83 c2 28          	add    $0x28,%rdx$/;"	l
ffff800000102c67	kernel.asm	/^ffff800000102c67:	8b 04 90             	mov    (%rax,%rdx,4),%eax$/;"	l
ffff800000102c6a	kernel.asm	/^ffff800000102c6a:	85 c0                	test   %eax,%eax$/;"	l
ffff800000102c6c	kernel.asm	/^ffff800000102c6c:	74 3c                	je     ffff800000102caa <itrunc+0x66>$/;"	l
ffff800000102c6e	kernel.asm	/^ffff800000102c6e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff800000102c72	kernel.asm	/^ffff800000102c72:	8b 55 fc             	mov    -0x4(%rbp),%edx$/;"	l
ffff800000102c75	kernel.asm	/^ffff800000102c75:	48 63 d2             	movslq %edx,%rdx$/;"	l
ffff800000102c78	kernel.asm	/^ffff800000102c78:	48 83 c2 28          	add    $0x28,%rdx$/;"	l
ffff800000102c7c	kernel.asm	/^ffff800000102c7c:	8b 04 90             	mov    (%rax,%rdx,4),%eax$/;"	l
ffff800000102c7f	kernel.asm	/^ffff800000102c7f:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx$/;"	l
ffff800000102c83	kernel.asm	/^ffff800000102c83:	8b 12                	mov    (%rdx),%edx$/;"	l
ffff800000102c85	kernel.asm	/^ffff800000102c85:	89 c6                	mov    %eax,%esi$/;"	l
ffff800000102c87	kernel.asm	/^ffff800000102c87:	89 d7                	mov    %edx,%edi$/;"	l
ffff800000102c89	kernel.asm	/^ffff800000102c89:	48 b8 48 22 10 00 00 	movabs $0xffff800000102248,%rax$/;"	l
ffff800000102c90	kernel.asm	/^ffff800000102c90:	80 ff ff $/;"	l
ffff800000102c93	kernel.asm	/^ffff800000102c93:	ff d0                	callq  *%rax$/;"	l
ffff800000102c95	kernel.asm	/^ffff800000102c95:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff800000102c99	kernel.asm	/^ffff800000102c99:	8b 55 fc             	mov    -0x4(%rbp),%edx$/;"	l
ffff800000102c9c	kernel.asm	/^ffff800000102c9c:	48 63 d2             	movslq %edx,%rdx$/;"	l
ffff800000102c9f	kernel.asm	/^ffff800000102c9f:	48 83 c2 28          	add    $0x28,%rdx$/;"	l
ffff800000102ca3	kernel.asm	/^ffff800000102ca3:	c7 04 90 00 00 00 00 	movl   $0x0,(%rax,%rdx,4)$/;"	l
ffff800000102caa	kernel.asm	/^ffff800000102caa:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)$/;"	l
ffff800000102cae	kernel.asm	/^ffff800000102cae:	83 7d fc 0b          	cmpl   $0xb,-0x4(%rbp)$/;"	l
ffff800000102cb2	kernel.asm	/^ffff800000102cb2:	7e a5                	jle    ffff800000102c59 <itrunc+0x15>$/;"	l
ffff800000102cb4	kernel.asm	/^ffff800000102cb4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff800000102cb8	kernel.asm	/^ffff800000102cb8:	8b 80 d0 00 00 00    	mov    0xd0(%rax),%eax$/;"	l
ffff800000102cbe	kernel.asm	/^ffff800000102cbe:	85 c0                	test   %eax,%eax$/;"	l
ffff800000102cc0	kernel.asm	/^ffff800000102cc0:	0f 84 ce 00 00 00    	je     ffff800000102d94 <itrunc+0x150>$/;"	l
ffff800000102cc6	kernel.asm	/^ffff800000102cc6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff800000102cca	kernel.asm	/^ffff800000102cca:	8b 90 d0 00 00 00    	mov    0xd0(%rax),%edx$/;"	l
ffff800000102cd0	kernel.asm	/^ffff800000102cd0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff800000102cd4	kernel.asm	/^ffff800000102cd4:	8b 00                	mov    (%rax),%eax$/;"	l
ffff800000102cd6	kernel.asm	/^ffff800000102cd6:	89 d6                	mov    %edx,%esi$/;"	l
ffff800000102cd8	kernel.asm	/^ffff800000102cd8:	89 c7                	mov    %eax,%edi$/;"	l
ffff800000102cda	kernel.asm	/^ffff800000102cda:	48 b8 f8 03 10 00 00 	movabs $0xffff8000001003f8,%rax$/;"	l
ffff800000102ce1	kernel.asm	/^ffff800000102ce1:	80 ff ff $/;"	l
ffff800000102ce4	kernel.asm	/^ffff800000102ce4:	ff d0                	callq  *%rax$/;"	l
ffff800000102ce6	kernel.asm	/^ffff800000102ce6:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ffff800000102cea	kernel.asm	/^ffff800000102cea:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000102cee	kernel.asm	/^ffff800000102cee:	48 05 b0 00 00 00    	add    $0xb0,%rax$/;"	l
ffff800000102cf4	kernel.asm	/^ffff800000102cf4:	48 89 45 e8          	mov    %rax,-0x18(%rbp)$/;"	l
ffff800000102cf8	kernel.asm	/^ffff800000102cf8:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)$/;"	l
ffff800000102cff	kernel.asm	/^ffff800000102cff:	eb 4a                	jmp    ffff800000102d4b <itrunc+0x107>$/;"	l
ffff800000102d01	kernel.asm	/^ffff800000102d01:	8b 45 f8             	mov    -0x8(%rbp),%eax$/;"	l
ffff800000102d04	kernel.asm	/^ffff800000102d04:	48 98                	cltq   $/;"	l
ffff800000102d06	kernel.asm	/^ffff800000102d06:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx$/;"	l
ffff800000102d0d	kernel.asm	/^ffff800000102d0d:	00 $/;"	l
ffff800000102d0e	kernel.asm	/^ffff800000102d0e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000102d12	kernel.asm	/^ffff800000102d12:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff800000102d15	kernel.asm	/^ffff800000102d15:	8b 00                	mov    (%rax),%eax$/;"	l
ffff800000102d17	kernel.asm	/^ffff800000102d17:	85 c0                	test   %eax,%eax$/;"	l
ffff800000102d19	kernel.asm	/^ffff800000102d19:	74 2c                	je     ffff800000102d47 <itrunc+0x103>$/;"	l
ffff800000102d1b	kernel.asm	/^ffff800000102d1b:	8b 45 f8             	mov    -0x8(%rbp),%eax$/;"	l
ffff800000102d1e	kernel.asm	/^ffff800000102d1e:	48 98                	cltq   $/;"	l
ffff800000102d20	kernel.asm	/^ffff800000102d20:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx$/;"	l
ffff800000102d27	kernel.asm	/^ffff800000102d27:	00 $/;"	l
ffff800000102d28	kernel.asm	/^ffff800000102d28:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000102d2c	kernel.asm	/^ffff800000102d2c:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff800000102d2f	kernel.asm	/^ffff800000102d2f:	8b 00                	mov    (%rax),%eax$/;"	l
ffff800000102d31	kernel.asm	/^ffff800000102d31:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx$/;"	l
ffff800000102d35	kernel.asm	/^ffff800000102d35:	8b 12                	mov    (%rdx),%edx$/;"	l
ffff800000102d37	kernel.asm	/^ffff800000102d37:	89 c6                	mov    %eax,%esi$/;"	l
ffff800000102d39	kernel.asm	/^ffff800000102d39:	89 d7                	mov    %edx,%edi$/;"	l
ffff800000102d3b	kernel.asm	/^ffff800000102d3b:	48 b8 48 22 10 00 00 	movabs $0xffff800000102248,%rax$/;"	l
ffff800000102d42	kernel.asm	/^ffff800000102d42:	80 ff ff $/;"	l
ffff800000102d45	kernel.asm	/^ffff800000102d45:	ff d0                	callq  *%rax$/;"	l
ffff800000102d47	kernel.asm	/^ffff800000102d47:	83 45 f8 01          	addl   $0x1,-0x8(%rbp)$/;"	l
ffff800000102d4b	kernel.asm	/^ffff800000102d4b:	8b 45 f8             	mov    -0x8(%rbp),%eax$/;"	l
ffff800000102d4e	kernel.asm	/^ffff800000102d4e:	83 f8 7f             	cmp    $0x7f,%eax$/;"	l
ffff800000102d51	kernel.asm	/^ffff800000102d51:	76 ae                	jbe    ffff800000102d01 <itrunc+0xbd>$/;"	l
ffff800000102d53	kernel.asm	/^ffff800000102d53:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000102d57	kernel.asm	/^ffff800000102d57:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000102d5a	kernel.asm	/^ffff800000102d5a:	48 b8 aa 04 10 00 00 	movabs $0xffff8000001004aa,%rax$/;"	l
ffff800000102d61	kernel.asm	/^ffff800000102d61:	80 ff ff $/;"	l
ffff800000102d64	kernel.asm	/^ffff800000102d64:	ff d0                	callq  *%rax$/;"	l
ffff800000102d66	kernel.asm	/^ffff800000102d66:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff800000102d6a	kernel.asm	/^ffff800000102d6a:	8b 80 d0 00 00 00    	mov    0xd0(%rax),%eax$/;"	l
ffff800000102d70	kernel.asm	/^ffff800000102d70:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx$/;"	l
ffff800000102d74	kernel.asm	/^ffff800000102d74:	8b 12                	mov    (%rdx),%edx$/;"	l
ffff800000102d76	kernel.asm	/^ffff800000102d76:	89 c6                	mov    %eax,%esi$/;"	l
ffff800000102d78	kernel.asm	/^ffff800000102d78:	89 d7                	mov    %edx,%edi$/;"	l
ffff800000102d7a	kernel.asm	/^ffff800000102d7a:	48 b8 48 22 10 00 00 	movabs $0xffff800000102248,%rax$/;"	l
ffff800000102d81	kernel.asm	/^ffff800000102d81:	80 ff ff $/;"	l
ffff800000102d84	kernel.asm	/^ffff800000102d84:	ff d0                	callq  *%rax$/;"	l
ffff800000102d86	kernel.asm	/^ffff800000102d86:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff800000102d8a	kernel.asm	/^ffff800000102d8a:	c7 80 d0 00 00 00 00 	movl   $0x0,0xd0(%rax)$/;"	l
ffff800000102d91	kernel.asm	/^ffff800000102d91:	00 00 00 $/;"	l
ffff800000102d94	kernel.asm	/^ffff800000102d94:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff800000102d98	kernel.asm	/^ffff800000102d98:	c7 80 9c 00 00 00 00 	movl   $0x0,0x9c(%rax)$/;"	l
ffff800000102d9f	kernel.asm	/^ffff800000102d9f:	00 00 00 $/;"	l
ffff800000102da2	kernel.asm	/^ffff800000102da2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff800000102da6	kernel.asm	/^ffff800000102da6:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000102da9	kernel.asm	/^ffff800000102da9:	48 b8 38 25 10 00 00 	movabs $0xffff800000102538,%rax$/;"	l
ffff800000102db0	kernel.asm	/^ffff800000102db0:	80 ff ff $/;"	l
ffff800000102db3	kernel.asm	/^ffff800000102db3:	ff d0                	callq  *%rax$/;"	l
ffff800000102db5	kernel.asm	/^ffff800000102db5:	90                   	nop$/;"	l
ffff800000102db6	kernel.asm	/^ffff800000102db6:	c9                   	leaveq $/;"	l
ffff800000102db7	kernel.asm	/^ffff800000102db7:	c3                   	retq   $/;"	l
ffff800000102db8	kernel.asm	/^ffff800000102db8 <stati>:$/;"	l
ffff800000102db8	kernel.asm	/^ffff800000102db8:	55                   	push   %rbp$/;"	l
ffff800000102db9	kernel.asm	/^ffff800000102db9:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000102dbc	kernel.asm	/^ffff800000102dbc:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff800000102dc0	kernel.asm	/^ffff800000102dc0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)$/;"	l
ffff800000102dc4	kernel.asm	/^ffff800000102dc4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)$/;"	l
ffff800000102dc8	kernel.asm	/^ffff800000102dc8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000102dcc	kernel.asm	/^ffff800000102dcc:	8b 00                	mov    (%rax),%eax$/;"	l
ffff800000102dce	kernel.asm	/^ffff800000102dce:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000102dd0	kernel.asm	/^ffff800000102dd0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000102dd4	kernel.asm	/^ffff800000102dd4:	89 50 04             	mov    %edx,0x4(%rax)$/;"	l
ffff800000102dd7	kernel.asm	/^ffff800000102dd7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000102ddb	kernel.asm	/^ffff800000102ddb:	8b 50 04             	mov    0x4(%rax),%edx$/;"	l
ffff800000102dde	kernel.asm	/^ffff800000102dde:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000102de2	kernel.asm	/^ffff800000102de2:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
ffff800000102de5	kernel.asm	/^ffff800000102de5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000102de9	kernel.asm	/^ffff800000102de9:	0f b7 90 94 00 00 00 	movzwl 0x94(%rax),%edx$/;"	l
ffff800000102df0	kernel.asm	/^ffff800000102df0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000102df4	kernel.asm	/^ffff800000102df4:	66 89 10             	mov    %dx,(%rax)$/;"	l
ffff800000102df7	kernel.asm	/^ffff800000102df7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000102dfb	kernel.asm	/^ffff800000102dfb:	0f b7 90 9a 00 00 00 	movzwl 0x9a(%rax),%edx$/;"	l
ffff800000102e02	kernel.asm	/^ffff800000102e02:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000102e06	kernel.asm	/^ffff800000102e06:	66 89 50 0c          	mov    %dx,0xc(%rax)$/;"	l
ffff800000102e0a	kernel.asm	/^ffff800000102e0a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000102e0e	kernel.asm	/^ffff800000102e0e:	8b 90 9c 00 00 00    	mov    0x9c(%rax),%edx$/;"	l
ffff800000102e14	kernel.asm	/^ffff800000102e14:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000102e18	kernel.asm	/^ffff800000102e18:	89 50 10             	mov    %edx,0x10(%rax)$/;"	l
ffff800000102e1b	kernel.asm	/^ffff800000102e1b:	90                   	nop$/;"	l
ffff800000102e1c	kernel.asm	/^ffff800000102e1c:	c9                   	leaveq $/;"	l
ffff800000102e1d	kernel.asm	/^ffff800000102e1d:	c3                   	retq   $/;"	l
ffff800000102e1e	kernel.asm	/^ffff800000102e1e <readi>:$/;"	l
ffff800000102e1e	kernel.asm	/^ffff800000102e1e:	55                   	push   %rbp$/;"	l
ffff800000102e1f	kernel.asm	/^ffff800000102e1f:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000102e22	kernel.asm	/^ffff800000102e22:	48 83 ec 40          	sub    $0x40,%rsp$/;"	l
ffff800000102e26	kernel.asm	/^ffff800000102e26:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)$/;"	l
ffff800000102e2a	kernel.asm	/^ffff800000102e2a:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)$/;"	l
ffff800000102e2e	kernel.asm	/^ffff800000102e2e:	89 55 cc             	mov    %edx,-0x34(%rbp)$/;"	l
ffff800000102e31	kernel.asm	/^ffff800000102e31:	89 4d c8             	mov    %ecx,-0x38(%rbp)$/;"	l
ffff800000102e34	kernel.asm	/^ffff800000102e34:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff800000102e38	kernel.asm	/^ffff800000102e38:	0f b7 80 94 00 00 00 	movzwl 0x94(%rax),%eax$/;"	l
ffff800000102e3f	kernel.asm	/^ffff800000102e3f:	66 83 f8 03          	cmp    $0x3,%ax$/;"	l
ffff800000102e43	kernel.asm	/^ffff800000102e43:	0f 85 8f 00 00 00    	jne    ffff800000102ed8 <readi+0xba>$/;"	l
ffff800000102e49	kernel.asm	/^ffff800000102e49:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff800000102e4d	kernel.asm	/^ffff800000102e4d:	0f b7 80 96 00 00 00 	movzwl 0x96(%rax),%eax$/;"	l
ffff800000102e54	kernel.asm	/^ffff800000102e54:	66 85 c0             	test   %ax,%ax$/;"	l
ffff800000102e57	kernel.asm	/^ffff800000102e57:	78 3b                	js     ffff800000102e94 <readi+0x76>$/;"	l
ffff800000102e59	kernel.asm	/^ffff800000102e59:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff800000102e5d	kernel.asm	/^ffff800000102e5d:	0f b7 80 96 00 00 00 	movzwl 0x96(%rax),%eax$/;"	l
ffff800000102e64	kernel.asm	/^ffff800000102e64:	66 83 f8 09          	cmp    $0x9,%ax$/;"	l
ffff800000102e68	kernel.asm	/^ffff800000102e68:	7f 2a                	jg     ffff800000102e94 <readi+0x76>$/;"	l
ffff800000102e6a	kernel.asm	/^ffff800000102e6a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff800000102e6e	kernel.asm	/^ffff800000102e6e:	0f b7 80 96 00 00 00 	movzwl 0x96(%rax),%eax$/;"	l
ffff800000102e75	kernel.asm	/^ffff800000102e75:	0f bf d0             	movswl %ax,%edx$/;"	l
ffff800000102e78	kernel.asm	/^ffff800000102e78:	48 b8 40 35 11 00 00 	movabs $0xffff800000113540,%rax$/;"	l
ffff800000102e7f	kernel.asm	/^ffff800000102e7f:	80 ff ff $/;"	l
ffff800000102e82	kernel.asm	/^ffff800000102e82:	48 63 d2             	movslq %edx,%rdx$/;"	l
ffff800000102e85	kernel.asm	/^ffff800000102e85:	48 c1 e2 04          	shl    $0x4,%rdx$/;"	l
ffff800000102e89	kernel.asm	/^ffff800000102e89:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff800000102e8c	kernel.asm	/^ffff800000102e8c:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff800000102e8f	kernel.asm	/^ffff800000102e8f:	48 85 c0             	test   %rax,%rax$/;"	l
ffff800000102e92	kernel.asm	/^ffff800000102e92:	75 0a                	jne    ffff800000102e9e <readi+0x80>$/;"	l
ffff800000102e94	kernel.asm	/^ffff800000102e94:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff800000102e99	kernel.asm	/^ffff800000102e99:	e9 4d 01 00 00       	jmpq   ffff800000102feb <readi+0x1cd>$/;"	l
ffff800000102e9e	kernel.asm	/^ffff800000102e9e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff800000102ea2	kernel.asm	/^ffff800000102ea2:	0f b7 80 96 00 00 00 	movzwl 0x96(%rax),%eax$/;"	l
ffff800000102ea9	kernel.asm	/^ffff800000102ea9:	0f bf d0             	movswl %ax,%edx$/;"	l
ffff800000102eac	kernel.asm	/^ffff800000102eac:	48 b8 40 35 11 00 00 	movabs $0xffff800000113540,%rax$/;"	l
ffff800000102eb3	kernel.asm	/^ffff800000102eb3:	80 ff ff $/;"	l
ffff800000102eb6	kernel.asm	/^ffff800000102eb6:	48 63 d2             	movslq %edx,%rdx$/;"	l
ffff800000102eb9	kernel.asm	/^ffff800000102eb9:	48 c1 e2 04          	shl    $0x4,%rdx$/;"	l
ffff800000102ebd	kernel.asm	/^ffff800000102ebd:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff800000102ec0	kernel.asm	/^ffff800000102ec0:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff800000102ec3	kernel.asm	/^ffff800000102ec3:	8b 55 c8             	mov    -0x38(%rbp),%edx$/;"	l
ffff800000102ec6	kernel.asm	/^ffff800000102ec6:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi$/;"	l
ffff800000102eca	kernel.asm	/^ffff800000102eca:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx$/;"	l
ffff800000102ece	kernel.asm	/^ffff800000102ece:	48 89 cf             	mov    %rcx,%rdi$/;"	l
ffff800000102ed1	kernel.asm	/^ffff800000102ed1:	ff d0                	callq  *%rax$/;"	l
ffff800000102ed3	kernel.asm	/^ffff800000102ed3:	e9 13 01 00 00       	jmpq   ffff800000102feb <readi+0x1cd>$/;"	l
ffff800000102ed8	kernel.asm	/^ffff800000102ed8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff800000102edc	kernel.asm	/^ffff800000102edc:	8b 80 9c 00 00 00    	mov    0x9c(%rax),%eax$/;"	l
ffff800000102ee2	kernel.asm	/^ffff800000102ee2:	3b 45 cc             	cmp    -0x34(%rbp),%eax$/;"	l
ffff800000102ee5	kernel.asm	/^ffff800000102ee5:	72 0d                	jb     ffff800000102ef4 <readi+0xd6>$/;"	l
ffff800000102ee7	kernel.asm	/^ffff800000102ee7:	8b 55 cc             	mov    -0x34(%rbp),%edx$/;"	l
ffff800000102eea	kernel.asm	/^ffff800000102eea:	8b 45 c8             	mov    -0x38(%rbp),%eax$/;"	l
ffff800000102eed	kernel.asm	/^ffff800000102eed:	01 d0                	add    %edx,%eax$/;"	l
ffff800000102eef	kernel.asm	/^ffff800000102eef:	3b 45 cc             	cmp    -0x34(%rbp),%eax$/;"	l
ffff800000102ef2	kernel.asm	/^ffff800000102ef2:	73 0a                	jae    ffff800000102efe <readi+0xe0>$/;"	l
ffff800000102ef4	kernel.asm	/^ffff800000102ef4:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff800000102ef9	kernel.asm	/^ffff800000102ef9:	e9 ed 00 00 00       	jmpq   ffff800000102feb <readi+0x1cd>$/;"	l
ffff800000102efe	kernel.asm	/^ffff800000102efe:	8b 55 cc             	mov    -0x34(%rbp),%edx$/;"	l
ffff800000102f01	kernel.asm	/^ffff800000102f01:	8b 45 c8             	mov    -0x38(%rbp),%eax$/;"	l
ffff800000102f04	kernel.asm	/^ffff800000102f04:	01 c2                	add    %eax,%edx$/;"	l
ffff800000102f06	kernel.asm	/^ffff800000102f06:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff800000102f0a	kernel.asm	/^ffff800000102f0a:	8b 80 9c 00 00 00    	mov    0x9c(%rax),%eax$/;"	l
ffff800000102f10	kernel.asm	/^ffff800000102f10:	39 c2                	cmp    %eax,%edx$/;"	l
ffff800000102f12	kernel.asm	/^ffff800000102f12:	76 10                	jbe    ffff800000102f24 <readi+0x106>$/;"	l
ffff800000102f14	kernel.asm	/^ffff800000102f14:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff800000102f18	kernel.asm	/^ffff800000102f18:	8b 80 9c 00 00 00    	mov    0x9c(%rax),%eax$/;"	l
ffff800000102f1e	kernel.asm	/^ffff800000102f1e:	2b 45 cc             	sub    -0x34(%rbp),%eax$/;"	l
ffff800000102f21	kernel.asm	/^ffff800000102f21:	89 45 c8             	mov    %eax,-0x38(%rbp)$/;"	l
ffff800000102f24	kernel.asm	/^ffff800000102f24:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)$/;"	l
ffff800000102f2b	kernel.asm	/^ffff800000102f2b:	e9 ac 00 00 00       	jmpq   ffff800000102fdc <readi+0x1be>$/;"	l
ffff800000102f30	kernel.asm	/^ffff800000102f30:	8b 45 cc             	mov    -0x34(%rbp),%eax$/;"	l
ffff800000102f33	kernel.asm	/^ffff800000102f33:	c1 e8 09             	shr    $0x9,%eax$/;"	l
ffff800000102f36	kernel.asm	/^ffff800000102f36:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000102f38	kernel.asm	/^ffff800000102f38:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff800000102f3c	kernel.asm	/^ffff800000102f3c:	89 d6                	mov    %edx,%esi$/;"	l
ffff800000102f3e	kernel.asm	/^ffff800000102f3e:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000102f41	kernel.asm	/^ffff800000102f41:	48 b8 e3 2a 10 00 00 	movabs $0xffff800000102ae3,%rax$/;"	l
ffff800000102f48	kernel.asm	/^ffff800000102f48:	80 ff ff $/;"	l
ffff800000102f4b	kernel.asm	/^ffff800000102f4b:	ff d0                	callq  *%rax$/;"	l
ffff800000102f4d	kernel.asm	/^ffff800000102f4d:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000102f4f	kernel.asm	/^ffff800000102f4f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff800000102f53	kernel.asm	/^ffff800000102f53:	8b 00                	mov    (%rax),%eax$/;"	l
ffff800000102f55	kernel.asm	/^ffff800000102f55:	89 d6                	mov    %edx,%esi$/;"	l
ffff800000102f57	kernel.asm	/^ffff800000102f57:	89 c7                	mov    %eax,%edi$/;"	l
ffff800000102f59	kernel.asm	/^ffff800000102f59:	48 b8 f8 03 10 00 00 	movabs $0xffff8000001003f8,%rax$/;"	l
ffff800000102f60	kernel.asm	/^ffff800000102f60:	80 ff ff $/;"	l
ffff800000102f63	kernel.asm	/^ffff800000102f63:	ff d0                	callq  *%rax$/;"	l
ffff800000102f65	kernel.asm	/^ffff800000102f65:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ffff800000102f69	kernel.asm	/^ffff800000102f69:	8b 45 cc             	mov    -0x34(%rbp),%eax$/;"	l
ffff800000102f6c	kernel.asm	/^ffff800000102f6c:	25 ff 01 00 00       	and    $0x1ff,%eax$/;"	l
ffff800000102f71	kernel.asm	/^ffff800000102f71:	ba 00 02 00 00       	mov    $0x200,%edx$/;"	l
ffff800000102f76	kernel.asm	/^ffff800000102f76:	29 c2                	sub    %eax,%edx$/;"	l
ffff800000102f78	kernel.asm	/^ffff800000102f78:	8b 45 c8             	mov    -0x38(%rbp),%eax$/;"	l
ffff800000102f7b	kernel.asm	/^ffff800000102f7b:	2b 45 fc             	sub    -0x4(%rbp),%eax$/;"	l
ffff800000102f7e	kernel.asm	/^ffff800000102f7e:	39 c2                	cmp    %eax,%edx$/;"	l
ffff800000102f80	kernel.asm	/^ffff800000102f80:	0f 46 c2             	cmovbe %edx,%eax$/;"	l
ffff800000102f83	kernel.asm	/^ffff800000102f83:	89 45 ec             	mov    %eax,-0x14(%rbp)$/;"	l
ffff800000102f86	kernel.asm	/^ffff800000102f86:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000102f8a	kernel.asm	/^ffff800000102f8a:	48 8d 90 b0 00 00 00 	lea    0xb0(%rax),%rdx$/;"	l
ffff800000102f91	kernel.asm	/^ffff800000102f91:	8b 45 cc             	mov    -0x34(%rbp),%eax$/;"	l
ffff800000102f94	kernel.asm	/^ffff800000102f94:	25 ff 01 00 00       	and    $0x1ff,%eax$/;"	l
ffff800000102f99	kernel.asm	/^ffff800000102f99:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx$/;"	l
ffff800000102f9d	kernel.asm	/^ffff800000102f9d:	8b 55 ec             	mov    -0x14(%rbp),%edx$/;"	l
ffff800000102fa0	kernel.asm	/^ffff800000102fa0:	48 8b 45 d0          	mov    -0x30(%rbp),%rax$/;"	l
ffff800000102fa4	kernel.asm	/^ffff800000102fa4:	48 89 ce             	mov    %rcx,%rsi$/;"	l
ffff800000102fa7	kernel.asm	/^ffff800000102fa7:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000102faa	kernel.asm	/^ffff800000102faa:	48 b8 98 76 10 00 00 	movabs $0xffff800000107698,%rax$/;"	l
ffff800000102fb1	kernel.asm	/^ffff800000102fb1:	80 ff ff $/;"	l
ffff800000102fb4	kernel.asm	/^ffff800000102fb4:	ff d0                	callq  *%rax$/;"	l
ffff800000102fb6	kernel.asm	/^ffff800000102fb6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000102fba	kernel.asm	/^ffff800000102fba:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000102fbd	kernel.asm	/^ffff800000102fbd:	48 b8 aa 04 10 00 00 	movabs $0xffff8000001004aa,%rax$/;"	l
ffff800000102fc4	kernel.asm	/^ffff800000102fc4:	80 ff ff $/;"	l
ffff800000102fc7	kernel.asm	/^ffff800000102fc7:	ff d0                	callq  *%rax$/;"	l
ffff800000102fc9	kernel.asm	/^ffff800000102fc9:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
ffff800000102fcc	kernel.asm	/^ffff800000102fcc:	01 45 fc             	add    %eax,-0x4(%rbp)$/;"	l
ffff800000102fcf	kernel.asm	/^ffff800000102fcf:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
ffff800000102fd2	kernel.asm	/^ffff800000102fd2:	01 45 cc             	add    %eax,-0x34(%rbp)$/;"	l
ffff800000102fd5	kernel.asm	/^ffff800000102fd5:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
ffff800000102fd8	kernel.asm	/^ffff800000102fd8:	48 01 45 d0          	add    %rax,-0x30(%rbp)$/;"	l
ffff800000102fdc	kernel.asm	/^ffff800000102fdc:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff800000102fdf	kernel.asm	/^ffff800000102fdf:	3b 45 c8             	cmp    -0x38(%rbp),%eax$/;"	l
ffff800000102fe2	kernel.asm	/^ffff800000102fe2:	0f 82 48 ff ff ff    	jb     ffff800000102f30 <readi+0x112>$/;"	l
ffff800000102fe8	kernel.asm	/^ffff800000102fe8:	8b 45 c8             	mov    -0x38(%rbp),%eax$/;"	l
ffff800000102feb	kernel.asm	/^ffff800000102feb:	c9                   	leaveq $/;"	l
ffff800000102fec	kernel.asm	/^ffff800000102fec:	c3                   	retq   $/;"	l
ffff800000102fed	kernel.asm	/^ffff800000102fed <writei>:$/;"	l
ffff800000102fed	kernel.asm	/^ffff800000102fed:	55                   	push   %rbp$/;"	l
ffff800000102fee	kernel.asm	/^ffff800000102fee:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000102ff1	kernel.asm	/^ffff800000102ff1:	48 83 ec 40          	sub    $0x40,%rsp$/;"	l
ffff800000102ff5	kernel.asm	/^ffff800000102ff5:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)$/;"	l
ffff800000102ff9	kernel.asm	/^ffff800000102ff9:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)$/;"	l
ffff800000102ffd	kernel.asm	/^ffff800000102ffd:	89 55 cc             	mov    %edx,-0x34(%rbp)$/;"	l
ffff800000103000	kernel.asm	/^ffff800000103000:	89 4d c8             	mov    %ecx,-0x38(%rbp)$/;"	l
ffff800000103003	kernel.asm	/^ffff800000103003:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff800000103007	kernel.asm	/^ffff800000103007:	0f b7 80 94 00 00 00 	movzwl 0x94(%rax),%eax$/;"	l
ffff80000010300e	kernel.asm	/^ffff80000010300e:	66 83 f8 03          	cmp    $0x3,%ax$/;"	l
ffff800000103012	kernel.asm	/^ffff800000103012:	0f 85 97 00 00 00    	jne    ffff8000001030af <writei+0xc2>$/;"	l
ffff800000103018	kernel.asm	/^ffff800000103018:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff80000010301c	kernel.asm	/^ffff80000010301c:	0f b7 80 96 00 00 00 	movzwl 0x96(%rax),%eax$/;"	l
ffff800000103023	kernel.asm	/^ffff800000103023:	66 85 c0             	test   %ax,%ax$/;"	l
ffff800000103026	kernel.asm	/^ffff800000103026:	78 3f                	js     ffff800000103067 <writei+0x7a>$/;"	l
ffff800000103028	kernel.asm	/^ffff800000103028:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff80000010302c	kernel.asm	/^ffff80000010302c:	0f b7 80 96 00 00 00 	movzwl 0x96(%rax),%eax$/;"	l
ffff800000103033	kernel.asm	/^ffff800000103033:	66 83 f8 09          	cmp    $0x9,%ax$/;"	l
ffff800000103037	kernel.asm	/^ffff800000103037:	7f 2e                	jg     ffff800000103067 <writei+0x7a>$/;"	l
ffff800000103039	kernel.asm	/^ffff800000103039:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff80000010303d	kernel.asm	/^ffff80000010303d:	0f b7 80 96 00 00 00 	movzwl 0x96(%rax),%eax$/;"	l
ffff800000103044	kernel.asm	/^ffff800000103044:	0f bf d0             	movswl %ax,%edx$/;"	l
ffff800000103047	kernel.asm	/^ffff800000103047:	48 b8 40 35 11 00 00 	movabs $0xffff800000113540,%rax$/;"	l
ffff80000010304e	kernel.asm	/^ffff80000010304e:	80 ff ff $/;"	l
ffff800000103051	kernel.asm	/^ffff800000103051:	48 63 d2             	movslq %edx,%rdx$/;"	l
ffff800000103054	kernel.asm	/^ffff800000103054:	48 c1 e2 04          	shl    $0x4,%rdx$/;"	l
ffff800000103058	kernel.asm	/^ffff800000103058:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff80000010305b	kernel.asm	/^ffff80000010305b:	48 83 c0 08          	add    $0x8,%rax$/;"	l
ffff80000010305f	kernel.asm	/^ffff80000010305f:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff800000103062	kernel.asm	/^ffff800000103062:	48 85 c0             	test   %rax,%rax$/;"	l
ffff800000103065	kernel.asm	/^ffff800000103065:	75 0a                	jne    ffff800000103071 <writei+0x84>$/;"	l
ffff800000103067	kernel.asm	/^ffff800000103067:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff80000010306c	kernel.asm	/^ffff80000010306c:	e9 8c 01 00 00       	jmpq   ffff8000001031fd <writei+0x210>$/;"	l
ffff800000103071	kernel.asm	/^ffff800000103071:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff800000103075	kernel.asm	/^ffff800000103075:	0f b7 80 96 00 00 00 	movzwl 0x96(%rax),%eax$/;"	l
ffff80000010307c	kernel.asm	/^ffff80000010307c:	0f bf d0             	movswl %ax,%edx$/;"	l
ffff80000010307f	kernel.asm	/^ffff80000010307f:	48 b8 40 35 11 00 00 	movabs $0xffff800000113540,%rax$/;"	l
ffff800000103086	kernel.asm	/^ffff800000103086:	80 ff ff $/;"	l
ffff800000103089	kernel.asm	/^ffff800000103089:	48 63 d2             	movslq %edx,%rdx$/;"	l
ffff80000010308c	kernel.asm	/^ffff80000010308c:	48 c1 e2 04          	shl    $0x4,%rdx$/;"	l
ffff800000103090	kernel.asm	/^ffff800000103090:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff800000103093	kernel.asm	/^ffff800000103093:	48 83 c0 08          	add    $0x8,%rax$/;"	l
ffff800000103097	kernel.asm	/^ffff800000103097:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff80000010309a	kernel.asm	/^ffff80000010309a:	8b 55 c8             	mov    -0x38(%rbp),%edx$/;"	l
ffff80000010309d	kernel.asm	/^ffff80000010309d:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi$/;"	l
ffff8000001030a1	kernel.asm	/^ffff8000001030a1:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx$/;"	l
ffff8000001030a5	kernel.asm	/^ffff8000001030a5:	48 89 cf             	mov    %rcx,%rdi$/;"	l
ffff8000001030a8	kernel.asm	/^ffff8000001030a8:	ff d0                	callq  *%rax$/;"	l
ffff8000001030aa	kernel.asm	/^ffff8000001030aa:	e9 4e 01 00 00       	jmpq   ffff8000001031fd <writei+0x210>$/;"	l
ffff8000001030af	kernel.asm	/^ffff8000001030af:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff8000001030b3	kernel.asm	/^ffff8000001030b3:	8b 80 9c 00 00 00    	mov    0x9c(%rax),%eax$/;"	l
ffff8000001030b9	kernel.asm	/^ffff8000001030b9:	3b 45 cc             	cmp    -0x34(%rbp),%eax$/;"	l
ffff8000001030bc	kernel.asm	/^ffff8000001030bc:	72 0d                	jb     ffff8000001030cb <writei+0xde>$/;"	l
ffff8000001030be	kernel.asm	/^ffff8000001030be:	8b 55 cc             	mov    -0x34(%rbp),%edx$/;"	l
ffff8000001030c1	kernel.asm	/^ffff8000001030c1:	8b 45 c8             	mov    -0x38(%rbp),%eax$/;"	l
ffff8000001030c4	kernel.asm	/^ffff8000001030c4:	01 d0                	add    %edx,%eax$/;"	l
ffff8000001030c6	kernel.asm	/^ffff8000001030c6:	3b 45 cc             	cmp    -0x34(%rbp),%eax$/;"	l
ffff8000001030c9	kernel.asm	/^ffff8000001030c9:	73 0a                	jae    ffff8000001030d5 <writei+0xe8>$/;"	l
ffff8000001030cb	kernel.asm	/^ffff8000001030cb:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff8000001030d0	kernel.asm	/^ffff8000001030d0:	e9 28 01 00 00       	jmpq   ffff8000001031fd <writei+0x210>$/;"	l
ffff8000001030d5	kernel.asm	/^ffff8000001030d5:	8b 55 cc             	mov    -0x34(%rbp),%edx$/;"	l
ffff8000001030d8	kernel.asm	/^ffff8000001030d8:	8b 45 c8             	mov    -0x38(%rbp),%eax$/;"	l
ffff8000001030db	kernel.asm	/^ffff8000001030db:	01 d0                	add    %edx,%eax$/;"	l
ffff8000001030dd	kernel.asm	/^ffff8000001030dd:	3d 00 18 01 00       	cmp    $0x11800,%eax$/;"	l
ffff8000001030e2	kernel.asm	/^ffff8000001030e2:	76 0a                	jbe    ffff8000001030ee <writei+0x101>$/;"	l
ffff8000001030e4	kernel.asm	/^ffff8000001030e4:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff8000001030e9	kernel.asm	/^ffff8000001030e9:	e9 0f 01 00 00       	jmpq   ffff8000001031fd <writei+0x210>$/;"	l
ffff8000001030ee	kernel.asm	/^ffff8000001030ee:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)$/;"	l
ffff8000001030f5	kernel.asm	/^ffff8000001030f5:	e9 bf 00 00 00       	jmpq   ffff8000001031b9 <writei+0x1cc>$/;"	l
ffff8000001030fa	kernel.asm	/^ffff8000001030fa:	8b 45 cc             	mov    -0x34(%rbp),%eax$/;"	l
ffff8000001030fd	kernel.asm	/^ffff8000001030fd:	c1 e8 09             	shr    $0x9,%eax$/;"	l
ffff800000103100	kernel.asm	/^ffff800000103100:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000103102	kernel.asm	/^ffff800000103102:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff800000103106	kernel.asm	/^ffff800000103106:	89 d6                	mov    %edx,%esi$/;"	l
ffff800000103108	kernel.asm	/^ffff800000103108:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010310b	kernel.asm	/^ffff80000010310b:	48 b8 e3 2a 10 00 00 	movabs $0xffff800000102ae3,%rax$/;"	l
ffff800000103112	kernel.asm	/^ffff800000103112:	80 ff ff $/;"	l
ffff800000103115	kernel.asm	/^ffff800000103115:	ff d0                	callq  *%rax$/;"	l
ffff800000103117	kernel.asm	/^ffff800000103117:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000103119	kernel.asm	/^ffff800000103119:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff80000010311d	kernel.asm	/^ffff80000010311d:	8b 00                	mov    (%rax),%eax$/;"	l
ffff80000010311f	kernel.asm	/^ffff80000010311f:	89 d6                	mov    %edx,%esi$/;"	l
ffff800000103121	kernel.asm	/^ffff800000103121:	89 c7                	mov    %eax,%edi$/;"	l
ffff800000103123	kernel.asm	/^ffff800000103123:	48 b8 f8 03 10 00 00 	movabs $0xffff8000001003f8,%rax$/;"	l
ffff80000010312a	kernel.asm	/^ffff80000010312a:	80 ff ff $/;"	l
ffff80000010312d	kernel.asm	/^ffff80000010312d:	ff d0                	callq  *%rax$/;"	l
ffff80000010312f	kernel.asm	/^ffff80000010312f:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ffff800000103133	kernel.asm	/^ffff800000103133:	8b 45 cc             	mov    -0x34(%rbp),%eax$/;"	l
ffff800000103136	kernel.asm	/^ffff800000103136:	25 ff 01 00 00       	and    $0x1ff,%eax$/;"	l
ffff80000010313b	kernel.asm	/^ffff80000010313b:	ba 00 02 00 00       	mov    $0x200,%edx$/;"	l
ffff800000103140	kernel.asm	/^ffff800000103140:	29 c2                	sub    %eax,%edx$/;"	l
ffff800000103142	kernel.asm	/^ffff800000103142:	8b 45 c8             	mov    -0x38(%rbp),%eax$/;"	l
ffff800000103145	kernel.asm	/^ffff800000103145:	2b 45 fc             	sub    -0x4(%rbp),%eax$/;"	l
ffff800000103148	kernel.asm	/^ffff800000103148:	39 c2                	cmp    %eax,%edx$/;"	l
ffff80000010314a	kernel.asm	/^ffff80000010314a:	0f 46 c2             	cmovbe %edx,%eax$/;"	l
ffff80000010314d	kernel.asm	/^ffff80000010314d:	89 45 ec             	mov    %eax,-0x14(%rbp)$/;"	l
ffff800000103150	kernel.asm	/^ffff800000103150:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000103154	kernel.asm	/^ffff800000103154:	48 8d 90 b0 00 00 00 	lea    0xb0(%rax),%rdx$/;"	l
ffff80000010315b	kernel.asm	/^ffff80000010315b:	8b 45 cc             	mov    -0x34(%rbp),%eax$/;"	l
ffff80000010315e	kernel.asm	/^ffff80000010315e:	25 ff 01 00 00       	and    $0x1ff,%eax$/;"	l
ffff800000103163	kernel.asm	/^ffff800000103163:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx$/;"	l
ffff800000103167	kernel.asm	/^ffff800000103167:	8b 55 ec             	mov    -0x14(%rbp),%edx$/;"	l
ffff80000010316a	kernel.asm	/^ffff80000010316a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax$/;"	l
ffff80000010316e	kernel.asm	/^ffff80000010316e:	48 89 c6             	mov    %rax,%rsi$/;"	l
ffff800000103171	kernel.asm	/^ffff800000103171:	48 89 cf             	mov    %rcx,%rdi$/;"	l
ffff800000103174	kernel.asm	/^ffff800000103174:	48 b8 98 76 10 00 00 	movabs $0xffff800000107698,%rax$/;"	l
ffff80000010317b	kernel.asm	/^ffff80000010317b:	80 ff ff $/;"	l
ffff80000010317e	kernel.asm	/^ffff80000010317e:	ff d0                	callq  *%rax$/;"	l
ffff800000103180	kernel.asm	/^ffff800000103180:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000103184	kernel.asm	/^ffff800000103184:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000103187	kernel.asm	/^ffff800000103187:	48 b8 03 51 10 00 00 	movabs $0xffff800000105103,%rax$/;"	l
ffff80000010318e	kernel.asm	/^ffff80000010318e:	80 ff ff $/;"	l
ffff800000103191	kernel.asm	/^ffff800000103191:	ff d0                	callq  *%rax$/;"	l
ffff800000103193	kernel.asm	/^ffff800000103193:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000103197	kernel.asm	/^ffff800000103197:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010319a	kernel.asm	/^ffff80000010319a:	48 b8 aa 04 10 00 00 	movabs $0xffff8000001004aa,%rax$/;"	l
ffff8000001031a1	kernel.asm	/^ffff8000001031a1:	80 ff ff $/;"	l
ffff8000001031a4	kernel.asm	/^ffff8000001031a4:	ff d0                	callq  *%rax$/;"	l
ffff8000001031a6	kernel.asm	/^ffff8000001031a6:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
ffff8000001031a9	kernel.asm	/^ffff8000001031a9:	01 45 fc             	add    %eax,-0x4(%rbp)$/;"	l
ffff8000001031ac	kernel.asm	/^ffff8000001031ac:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
ffff8000001031af	kernel.asm	/^ffff8000001031af:	01 45 cc             	add    %eax,-0x34(%rbp)$/;"	l
ffff8000001031b2	kernel.asm	/^ffff8000001031b2:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
ffff8000001031b5	kernel.asm	/^ffff8000001031b5:	48 01 45 d0          	add    %rax,-0x30(%rbp)$/;"	l
ffff8000001031b9	kernel.asm	/^ffff8000001031b9:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff8000001031bc	kernel.asm	/^ffff8000001031bc:	3b 45 c8             	cmp    -0x38(%rbp),%eax$/;"	l
ffff8000001031bf	kernel.asm	/^ffff8000001031bf:	0f 82 35 ff ff ff    	jb     ffff8000001030fa <writei+0x10d>$/;"	l
ffff8000001031c5	kernel.asm	/^ffff8000001031c5:	83 7d c8 00          	cmpl   $0x0,-0x38(%rbp)$/;"	l
ffff8000001031c9	kernel.asm	/^ffff8000001031c9:	74 2f                	je     ffff8000001031fa <writei+0x20d>$/;"	l
ffff8000001031cb	kernel.asm	/^ffff8000001031cb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff8000001031cf	kernel.asm	/^ffff8000001031cf:	8b 80 9c 00 00 00    	mov    0x9c(%rax),%eax$/;"	l
ffff8000001031d5	kernel.asm	/^ffff8000001031d5:	3b 45 cc             	cmp    -0x34(%rbp),%eax$/;"	l
ffff8000001031d8	kernel.asm	/^ffff8000001031d8:	73 20                	jae    ffff8000001031fa <writei+0x20d>$/;"	l
ffff8000001031da	kernel.asm	/^ffff8000001031da:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff8000001031de	kernel.asm	/^ffff8000001031de:	8b 55 cc             	mov    -0x34(%rbp),%edx$/;"	l
ffff8000001031e1	kernel.asm	/^ffff8000001031e1:	89 90 9c 00 00 00    	mov    %edx,0x9c(%rax)$/;"	l
ffff8000001031e7	kernel.asm	/^ffff8000001031e7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff8000001031eb	kernel.asm	/^ffff8000001031eb:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001031ee	kernel.asm	/^ffff8000001031ee:	48 b8 38 25 10 00 00 	movabs $0xffff800000102538,%rax$/;"	l
ffff8000001031f5	kernel.asm	/^ffff8000001031f5:	80 ff ff $/;"	l
ffff8000001031f8	kernel.asm	/^ffff8000001031f8:	ff d0                	callq  *%rax$/;"	l
ffff8000001031fa	kernel.asm	/^ffff8000001031fa:	8b 45 c8             	mov    -0x38(%rbp),%eax$/;"	l
ffff8000001031fd	kernel.asm	/^ffff8000001031fd:	c9                   	leaveq $/;"	l
ffff8000001031fe	kernel.asm	/^ffff8000001031fe:	c3                   	retq   $/;"	l
ffff8000001031ff	kernel.asm	/^ffff8000001031ff <namecmp>:$/;"	l
ffff8000001031ff	kernel.asm	/^ffff8000001031ff:	55                   	push   %rbp$/;"	l
ffff800000103200	kernel.asm	/^ffff800000103200:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000103203	kernel.asm	/^ffff800000103203:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff800000103207	kernel.asm	/^ffff800000103207:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)$/;"	l
ffff80000010320b	kernel.asm	/^ffff80000010320b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)$/;"	l
ffff80000010320f	kernel.asm	/^ffff80000010320f:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx$/;"	l
ffff800000103213	kernel.asm	/^ffff800000103213:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000103217	kernel.asm	/^ffff800000103217:	ba 0e 00 00 00       	mov    $0xe,%edx$/;"	l
ffff80000010321c	kernel.asm	/^ffff80000010321c:	48 89 ce             	mov    %rcx,%rsi$/;"	l
ffff80000010321f	kernel.asm	/^ffff80000010321f:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000103222	kernel.asm	/^ffff800000103222:	48 b8 6d 77 10 00 00 	movabs $0xffff80000010776d,%rax$/;"	l
ffff800000103229	kernel.asm	/^ffff800000103229:	80 ff ff $/;"	l
ffff80000010322c	kernel.asm	/^ffff80000010322c:	ff d0                	callq  *%rax$/;"	l
ffff80000010322e	kernel.asm	/^ffff80000010322e:	c9                   	leaveq $/;"	l
ffff80000010322f	kernel.asm	/^ffff80000010322f:	c3                   	retq   $/;"	l
ffff800000103230	kernel.asm	/^ffff800000103230 <dirlookup>:$/;"	l
ffff800000103230	kernel.asm	/^ffff800000103230:	55                   	push   %rbp$/;"	l
ffff800000103231	kernel.asm	/^ffff800000103231:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000103234	kernel.asm	/^ffff800000103234:	48 83 ec 40          	sub    $0x40,%rsp$/;"	l
ffff800000103238	kernel.asm	/^ffff800000103238:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)$/;"	l
ffff80000010323c	kernel.asm	/^ffff80000010323c:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)$/;"	l
ffff800000103240	kernel.asm	/^ffff800000103240:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)$/;"	l
ffff800000103244	kernel.asm	/^ffff800000103244:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff800000103248	kernel.asm	/^ffff800000103248:	0f b7 80 94 00 00 00 	movzwl 0x94(%rax),%eax$/;"	l
ffff80000010324f	kernel.asm	/^ffff80000010324f:	66 83 f8 01          	cmp    $0x1,%ax$/;"	l
ffff800000103253	kernel.asm	/^ffff800000103253:	74 16                	je     ffff80000010326b <dirlookup+0x3b>$/;"	l
ffff800000103255	kernel.asm	/^ffff800000103255:	48 bf 64 bb 10 00 00 	movabs $0xffff80000010bb64,%rdi$/;"	l
ffff80000010325c	kernel.asm	/^ffff80000010325c:	80 ff ff $/;"	l
ffff80000010325f	kernel.asm	/^ffff80000010325f:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff800000103266	kernel.asm	/^ffff800000103266:	80 ff ff $/;"	l
ffff800000103269	kernel.asm	/^ffff800000103269:	ff d0                	callq  *%rax$/;"	l
ffff80000010326b	kernel.asm	/^ffff80000010326b:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)$/;"	l
ffff800000103272	kernel.asm	/^ffff800000103272:	e9 9f 00 00 00       	jmpq   ffff800000103316 <dirlookup+0xe6>$/;"	l
ffff800000103277	kernel.asm	/^ffff800000103277:	8b 55 fc             	mov    -0x4(%rbp),%edx$/;"	l
ffff80000010327a	kernel.asm	/^ffff80000010327a:	48 8d 75 e0          	lea    -0x20(%rbp),%rsi$/;"	l
ffff80000010327e	kernel.asm	/^ffff80000010327e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff800000103282	kernel.asm	/^ffff800000103282:	b9 10 00 00 00       	mov    $0x10,%ecx$/;"	l
ffff800000103287	kernel.asm	/^ffff800000103287:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010328a	kernel.asm	/^ffff80000010328a:	48 b8 1e 2e 10 00 00 	movabs $0xffff800000102e1e,%rax$/;"	l
ffff800000103291	kernel.asm	/^ffff800000103291:	80 ff ff $/;"	l
ffff800000103294	kernel.asm	/^ffff800000103294:	ff d0                	callq  *%rax$/;"	l
ffff800000103296	kernel.asm	/^ffff800000103296:	83 f8 10             	cmp    $0x10,%eax$/;"	l
ffff800000103299	kernel.asm	/^ffff800000103299:	74 16                	je     ffff8000001032b1 <dirlookup+0x81>$/;"	l
ffff80000010329b	kernel.asm	/^ffff80000010329b:	48 bf 76 bb 10 00 00 	movabs $0xffff80000010bb76,%rdi$/;"	l
ffff8000001032a2	kernel.asm	/^ffff8000001032a2:	80 ff ff $/;"	l
ffff8000001032a5	kernel.asm	/^ffff8000001032a5:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff8000001032ac	kernel.asm	/^ffff8000001032ac:	80 ff ff $/;"	l
ffff8000001032af	kernel.asm	/^ffff8000001032af:	ff d0                	callq  *%rax$/;"	l
ffff8000001032b1	kernel.asm	/^ffff8000001032b1:	0f b7 45 e0          	movzwl -0x20(%rbp),%eax$/;"	l
ffff8000001032b5	kernel.asm	/^ffff8000001032b5:	66 85 c0             	test   %ax,%ax$/;"	l
ffff8000001032b8	kernel.asm	/^ffff8000001032b8:	74 57                	je     ffff800000103311 <dirlookup+0xe1>$/;"	l
ffff8000001032ba	kernel.asm	/^ffff8000001032ba:	48 8d 45 e0          	lea    -0x20(%rbp),%rax$/;"	l
ffff8000001032be	kernel.asm	/^ffff8000001032be:	48 8d 50 02          	lea    0x2(%rax),%rdx$/;"	l
ffff8000001032c2	kernel.asm	/^ffff8000001032c2:	48 8b 45 d0          	mov    -0x30(%rbp),%rax$/;"	l
ffff8000001032c6	kernel.asm	/^ffff8000001032c6:	48 89 d6             	mov    %rdx,%rsi$/;"	l
ffff8000001032c9	kernel.asm	/^ffff8000001032c9:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001032cc	kernel.asm	/^ffff8000001032cc:	48 b8 ff 31 10 00 00 	movabs $0xffff8000001031ff,%rax$/;"	l
ffff8000001032d3	kernel.asm	/^ffff8000001032d3:	80 ff ff $/;"	l
ffff8000001032d6	kernel.asm	/^ffff8000001032d6:	ff d0                	callq  *%rax$/;"	l
ffff8000001032d8	kernel.asm	/^ffff8000001032d8:	85 c0                	test   %eax,%eax$/;"	l
ffff8000001032da	kernel.asm	/^ffff8000001032da:	75 36                	jne    ffff800000103312 <dirlookup+0xe2>$/;"	l
ffff8000001032dc	kernel.asm	/^ffff8000001032dc:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)$/;"	l
ffff8000001032e1	kernel.asm	/^ffff8000001032e1:	74 09                	je     ffff8000001032ec <dirlookup+0xbc>$/;"	l
ffff8000001032e3	kernel.asm	/^ffff8000001032e3:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
ffff8000001032e7	kernel.asm	/^ffff8000001032e7:	8b 55 fc             	mov    -0x4(%rbp),%edx$/;"	l
ffff8000001032ea	kernel.asm	/^ffff8000001032ea:	89 10                	mov    %edx,(%rax)$/;"	l
ffff8000001032ec	kernel.asm	/^ffff8000001032ec:	0f b7 45 e0          	movzwl -0x20(%rbp),%eax$/;"	l
ffff8000001032f0	kernel.asm	/^ffff8000001032f0:	0f b7 c0             	movzwl %ax,%eax$/;"	l
ffff8000001032f3	kernel.asm	/^ffff8000001032f3:	89 45 f8             	mov    %eax,-0x8(%rbp)$/;"	l
ffff8000001032f6	kernel.asm	/^ffff8000001032f6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff8000001032fa	kernel.asm	/^ffff8000001032fa:	8b 00                	mov    (%rax),%eax$/;"	l
ffff8000001032fc	kernel.asm	/^ffff8000001032fc:	8b 55 f8             	mov    -0x8(%rbp),%edx$/;"	l
ffff8000001032ff	kernel.asm	/^ffff8000001032ff:	89 d6                	mov    %edx,%esi$/;"	l
ffff800000103301	kernel.asm	/^ffff800000103301:	89 c7                	mov    %eax,%edi$/;"	l
ffff800000103303	kernel.asm	/^ffff800000103303:	48 b8 4a 26 10 00 00 	movabs $0xffff80000010264a,%rax$/;"	l
ffff80000010330a	kernel.asm	/^ffff80000010330a:	80 ff ff $/;"	l
ffff80000010330d	kernel.asm	/^ffff80000010330d:	ff d0                	callq  *%rax$/;"	l
ffff80000010330f	kernel.asm	/^ffff80000010330f:	eb 1d                	jmp    ffff80000010332e <dirlookup+0xfe>$/;"	l
ffff800000103311	kernel.asm	/^ffff800000103311:	90                   	nop$/;"	l
ffff800000103312	kernel.asm	/^ffff800000103312:	83 45 fc 10          	addl   $0x10,-0x4(%rbp)$/;"	l
ffff800000103316	kernel.asm	/^ffff800000103316:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff80000010331a	kernel.asm	/^ffff80000010331a:	8b 80 9c 00 00 00    	mov    0x9c(%rax),%eax$/;"	l
ffff800000103320	kernel.asm	/^ffff800000103320:	3b 45 fc             	cmp    -0x4(%rbp),%eax$/;"	l
ffff800000103323	kernel.asm	/^ffff800000103323:	0f 87 4e ff ff ff    	ja     ffff800000103277 <dirlookup+0x47>$/;"	l
ffff800000103329	kernel.asm	/^ffff800000103329:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff80000010332e	kernel.asm	/^ffff80000010332e:	c9                   	leaveq $/;"	l
ffff80000010332f	kernel.asm	/^ffff80000010332f:	c3                   	retq   $/;"	l
ffff800000103330	kernel.asm	/^ffff800000103330 <dirlink>:$/;"	l
ffff800000103330	kernel.asm	/^ffff800000103330:	55                   	push   %rbp$/;"	l
ffff800000103331	kernel.asm	/^ffff800000103331:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000103334	kernel.asm	/^ffff800000103334:	48 83 ec 40          	sub    $0x40,%rsp$/;"	l
ffff800000103338	kernel.asm	/^ffff800000103338:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)$/;"	l
ffff80000010333c	kernel.asm	/^ffff80000010333c:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)$/;"	l
ffff800000103340	kernel.asm	/^ffff800000103340:	89 55 cc             	mov    %edx,-0x34(%rbp)$/;"	l
ffff800000103343	kernel.asm	/^ffff800000103343:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx$/;"	l
ffff800000103347	kernel.asm	/^ffff800000103347:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff80000010334b	kernel.asm	/^ffff80000010334b:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
ffff800000103350	kernel.asm	/^ffff800000103350:	48 89 ce             	mov    %rcx,%rsi$/;"	l
ffff800000103353	kernel.asm	/^ffff800000103353:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000103356	kernel.asm	/^ffff800000103356:	48 b8 30 32 10 00 00 	movabs $0xffff800000103230,%rax$/;"	l
ffff80000010335d	kernel.asm	/^ffff80000010335d:	80 ff ff $/;"	l
ffff800000103360	kernel.asm	/^ffff800000103360:	ff d0                	callq  *%rax$/;"	l
ffff800000103362	kernel.asm	/^ffff800000103362:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ffff800000103366	kernel.asm	/^ffff800000103366:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)$/;"	l
ffff80000010336b	kernel.asm	/^ffff80000010336b:	74 1d                	je     ffff80000010338a <dirlink+0x5a>$/;"	l
ffff80000010336d	kernel.asm	/^ffff80000010336d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000103371	kernel.asm	/^ffff800000103371:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000103374	kernel.asm	/^ffff800000103374:	48 b8 c4 29 10 00 00 	movabs $0xffff8000001029c4,%rax$/;"	l
ffff80000010337b	kernel.asm	/^ffff80000010337b:	80 ff ff $/;"	l
ffff80000010337e	kernel.asm	/^ffff80000010337e:	ff d0                	callq  *%rax$/;"	l
ffff800000103380	kernel.asm	/^ffff800000103380:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff800000103385	kernel.asm	/^ffff800000103385:	e9 d2 00 00 00       	jmpq   ffff80000010345c <dirlink+0x12c>$/;"	l
ffff80000010338a	kernel.asm	/^ffff80000010338a:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)$/;"	l
ffff800000103391	kernel.asm	/^ffff800000103391:	eb 4c                	jmp    ffff8000001033df <dirlink+0xaf>$/;"	l
ffff800000103393	kernel.asm	/^ffff800000103393:	8b 55 fc             	mov    -0x4(%rbp),%edx$/;"	l
ffff800000103396	kernel.asm	/^ffff800000103396:	48 8d 75 e0          	lea    -0x20(%rbp),%rsi$/;"	l
ffff80000010339a	kernel.asm	/^ffff80000010339a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff80000010339e	kernel.asm	/^ffff80000010339e:	b9 10 00 00 00       	mov    $0x10,%ecx$/;"	l
ffff8000001033a3	kernel.asm	/^ffff8000001033a3:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001033a6	kernel.asm	/^ffff8000001033a6:	48 b8 1e 2e 10 00 00 	movabs $0xffff800000102e1e,%rax$/;"	l
ffff8000001033ad	kernel.asm	/^ffff8000001033ad:	80 ff ff $/;"	l
ffff8000001033b0	kernel.asm	/^ffff8000001033b0:	ff d0                	callq  *%rax$/;"	l
ffff8000001033b2	kernel.asm	/^ffff8000001033b2:	83 f8 10             	cmp    $0x10,%eax$/;"	l
ffff8000001033b5	kernel.asm	/^ffff8000001033b5:	74 16                	je     ffff8000001033cd <dirlink+0x9d>$/;"	l
ffff8000001033b7	kernel.asm	/^ffff8000001033b7:	48 bf 85 bb 10 00 00 	movabs $0xffff80000010bb85,%rdi$/;"	l
ffff8000001033be	kernel.asm	/^ffff8000001033be:	80 ff ff $/;"	l
ffff8000001033c1	kernel.asm	/^ffff8000001033c1:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff8000001033c8	kernel.asm	/^ffff8000001033c8:	80 ff ff $/;"	l
ffff8000001033cb	kernel.asm	/^ffff8000001033cb:	ff d0                	callq  *%rax$/;"	l
ffff8000001033cd	kernel.asm	/^ffff8000001033cd:	0f b7 45 e0          	movzwl -0x20(%rbp),%eax$/;"	l
ffff8000001033d1	kernel.asm	/^ffff8000001033d1:	66 85 c0             	test   %ax,%ax$/;"	l
ffff8000001033d4	kernel.asm	/^ffff8000001033d4:	74 1c                	je     ffff8000001033f2 <dirlink+0xc2>$/;"	l
ffff8000001033d6	kernel.asm	/^ffff8000001033d6:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff8000001033d9	kernel.asm	/^ffff8000001033d9:	83 c0 10             	add    $0x10,%eax$/;"	l
ffff8000001033dc	kernel.asm	/^ffff8000001033dc:	89 45 fc             	mov    %eax,-0x4(%rbp)$/;"	l
ffff8000001033df	kernel.asm	/^ffff8000001033df:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff8000001033e3	kernel.asm	/^ffff8000001033e3:	8b 90 9c 00 00 00    	mov    0x9c(%rax),%edx$/;"	l
ffff8000001033e9	kernel.asm	/^ffff8000001033e9:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff8000001033ec	kernel.asm	/^ffff8000001033ec:	39 c2                	cmp    %eax,%edx$/;"	l
ffff8000001033ee	kernel.asm	/^ffff8000001033ee:	77 a3                	ja     ffff800000103393 <dirlink+0x63>$/;"	l
ffff8000001033f0	kernel.asm	/^ffff8000001033f0:	eb 01                	jmp    ffff8000001033f3 <dirlink+0xc3>$/;"	l
ffff8000001033f2	kernel.asm	/^ffff8000001033f2:	90                   	nop$/;"	l
ffff8000001033f3	kernel.asm	/^ffff8000001033f3:	48 8b 45 d0          	mov    -0x30(%rbp),%rax$/;"	l
ffff8000001033f7	kernel.asm	/^ffff8000001033f7:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx$/;"	l
ffff8000001033fb	kernel.asm	/^ffff8000001033fb:	48 8d 4a 02          	lea    0x2(%rdx),%rcx$/;"	l
ffff8000001033ff	kernel.asm	/^ffff8000001033ff:	ba 0e 00 00 00       	mov    $0xe,%edx$/;"	l
ffff800000103404	kernel.asm	/^ffff800000103404:	48 89 c6             	mov    %rax,%rsi$/;"	l
ffff800000103407	kernel.asm	/^ffff800000103407:	48 89 cf             	mov    %rcx,%rdi$/;"	l
ffff80000010340a	kernel.asm	/^ffff80000010340a:	48 b8 da 77 10 00 00 	movabs $0xffff8000001077da,%rax$/;"	l
ffff800000103411	kernel.asm	/^ffff800000103411:	80 ff ff $/;"	l
ffff800000103414	kernel.asm	/^ffff800000103414:	ff d0                	callq  *%rax$/;"	l
ffff800000103416	kernel.asm	/^ffff800000103416:	8b 45 cc             	mov    -0x34(%rbp),%eax$/;"	l
ffff800000103419	kernel.asm	/^ffff800000103419:	66 89 45 e0          	mov    %ax,-0x20(%rbp)$/;"	l
ffff80000010341d	kernel.asm	/^ffff80000010341d:	8b 55 fc             	mov    -0x4(%rbp),%edx$/;"	l
ffff800000103420	kernel.asm	/^ffff800000103420:	48 8d 75 e0          	lea    -0x20(%rbp),%rsi$/;"	l
ffff800000103424	kernel.asm	/^ffff800000103424:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff800000103428	kernel.asm	/^ffff800000103428:	b9 10 00 00 00       	mov    $0x10,%ecx$/;"	l
ffff80000010342d	kernel.asm	/^ffff80000010342d:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000103430	kernel.asm	/^ffff800000103430:	48 b8 ed 2f 10 00 00 	movabs $0xffff800000102fed,%rax$/;"	l
ffff800000103437	kernel.asm	/^ffff800000103437:	80 ff ff $/;"	l
ffff80000010343a	kernel.asm	/^ffff80000010343a:	ff d0                	callq  *%rax$/;"	l
ffff80000010343c	kernel.asm	/^ffff80000010343c:	83 f8 10             	cmp    $0x10,%eax$/;"	l
ffff80000010343f	kernel.asm	/^ffff80000010343f:	74 16                	je     ffff800000103457 <dirlink+0x127>$/;"	l
ffff800000103441	kernel.asm	/^ffff800000103441:	48 bf 92 bb 10 00 00 	movabs $0xffff80000010bb92,%rdi$/;"	l
ffff800000103448	kernel.asm	/^ffff800000103448:	80 ff ff $/;"	l
ffff80000010344b	kernel.asm	/^ffff80000010344b:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff800000103452	kernel.asm	/^ffff800000103452:	80 ff ff $/;"	l
ffff800000103455	kernel.asm	/^ffff800000103455:	ff d0                	callq  *%rax$/;"	l
ffff800000103457	kernel.asm	/^ffff800000103457:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff80000010345c	kernel.asm	/^ffff80000010345c:	c9                   	leaveq $/;"	l
ffff80000010345d	kernel.asm	/^ffff80000010345d:	c3                   	retq   $/;"	l
ffff80000010345e	kernel.asm	/^ffff80000010345e <skipelem>:$/;"	l
ffff80000010345e	kernel.asm	/^ffff80000010345e:	55                   	push   %rbp$/;"	l
ffff80000010345f	kernel.asm	/^ffff80000010345f:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000103462	kernel.asm	/^ffff800000103462:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ffff800000103466	kernel.asm	/^ffff800000103466:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
ffff80000010346a	kernel.asm	/^ffff80000010346a:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)$/;"	l
ffff80000010346e	kernel.asm	/^ffff80000010346e:	eb 05                	jmp    ffff800000103475 <skipelem+0x17>$/;"	l
ffff800000103470	kernel.asm	/^ffff800000103470:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)$/;"	l
ffff800000103475	kernel.asm	/^ffff800000103475:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000103479	kernel.asm	/^ffff800000103479:	0f b6 00             	movzbl (%rax),%eax$/;"	l
ffff80000010347c	kernel.asm	/^ffff80000010347c:	3c 2f                	cmp    $0x2f,%al$/;"	l
ffff80000010347e	kernel.asm	/^ffff80000010347e:	74 f0                	je     ffff800000103470 <skipelem+0x12>$/;"	l
ffff800000103480	kernel.asm	/^ffff800000103480:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000103484	kernel.asm	/^ffff800000103484:	0f b6 00             	movzbl (%rax),%eax$/;"	l
ffff800000103487	kernel.asm	/^ffff800000103487:	84 c0                	test   %al,%al$/;"	l
ffff800000103489	kernel.asm	/^ffff800000103489:	75 0a                	jne    ffff800000103495 <skipelem+0x37>$/;"	l
ffff80000010348b	kernel.asm	/^ffff80000010348b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000103490	kernel.asm	/^ffff800000103490:	e9 a0 00 00 00       	jmpq   ffff800000103535 <skipelem+0xd7>$/;"	l
ffff800000103495	kernel.asm	/^ffff800000103495:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000103499	kernel.asm	/^ffff800000103499:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff80000010349d	kernel.asm	/^ffff80000010349d:	eb 05                	jmp    ffff8000001034a4 <skipelem+0x46>$/;"	l
ffff80000010349f	kernel.asm	/^ffff80000010349f:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)$/;"	l
ffff8000001034a4	kernel.asm	/^ffff8000001034a4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff8000001034a8	kernel.asm	/^ffff8000001034a8:	0f b6 00             	movzbl (%rax),%eax$/;"	l
ffff8000001034ab	kernel.asm	/^ffff8000001034ab:	3c 2f                	cmp    $0x2f,%al$/;"	l
ffff8000001034ad	kernel.asm	/^ffff8000001034ad:	74 0b                	je     ffff8000001034ba <skipelem+0x5c>$/;"	l
ffff8000001034af	kernel.asm	/^ffff8000001034af:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff8000001034b3	kernel.asm	/^ffff8000001034b3:	0f b6 00             	movzbl (%rax),%eax$/;"	l
ffff8000001034b6	kernel.asm	/^ffff8000001034b6:	84 c0                	test   %al,%al$/;"	l
ffff8000001034b8	kernel.asm	/^ffff8000001034b8:	75 e5                	jne    ffff80000010349f <skipelem+0x41>$/;"	l
ffff8000001034ba	kernel.asm	/^ffff8000001034ba:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx$/;"	l
ffff8000001034be	kernel.asm	/^ffff8000001034be:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001034c2	kernel.asm	/^ffff8000001034c2:	48 29 c2             	sub    %rax,%rdx$/;"	l
ffff8000001034c5	kernel.asm	/^ffff8000001034c5:	48 89 d0             	mov    %rdx,%rax$/;"	l
ffff8000001034c8	kernel.asm	/^ffff8000001034c8:	89 45 f4             	mov    %eax,-0xc(%rbp)$/;"	l
ffff8000001034cb	kernel.asm	/^ffff8000001034cb:	83 7d f4 0d          	cmpl   $0xd,-0xc(%rbp)$/;"	l
ffff8000001034cf	kernel.asm	/^ffff8000001034cf:	7e 21                	jle    ffff8000001034f2 <skipelem+0x94>$/;"	l
ffff8000001034d1	kernel.asm	/^ffff8000001034d1:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx$/;"	l
ffff8000001034d5	kernel.asm	/^ffff8000001034d5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff8000001034d9	kernel.asm	/^ffff8000001034d9:	ba 0e 00 00 00       	mov    $0xe,%edx$/;"	l
ffff8000001034de	kernel.asm	/^ffff8000001034de:	48 89 ce             	mov    %rcx,%rsi$/;"	l
ffff8000001034e1	kernel.asm	/^ffff8000001034e1:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001034e4	kernel.asm	/^ffff8000001034e4:	48 b8 98 76 10 00 00 	movabs $0xffff800000107698,%rax$/;"	l
ffff8000001034eb	kernel.asm	/^ffff8000001034eb:	80 ff ff $/;"	l
ffff8000001034ee	kernel.asm	/^ffff8000001034ee:	ff d0                	callq  *%rax$/;"	l
ffff8000001034f0	kernel.asm	/^ffff8000001034f0:	eb 34                	jmp    ffff800000103526 <skipelem+0xc8>$/;"	l
ffff8000001034f2	kernel.asm	/^ffff8000001034f2:	8b 55 f4             	mov    -0xc(%rbp),%edx$/;"	l
ffff8000001034f5	kernel.asm	/^ffff8000001034f5:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx$/;"	l
ffff8000001034f9	kernel.asm	/^ffff8000001034f9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff8000001034fd	kernel.asm	/^ffff8000001034fd:	48 89 ce             	mov    %rcx,%rsi$/;"	l
ffff800000103500	kernel.asm	/^ffff800000103500:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000103503	kernel.asm	/^ffff800000103503:	48 b8 98 76 10 00 00 	movabs $0xffff800000107698,%rax$/;"	l
ffff80000010350a	kernel.asm	/^ffff80000010350a:	80 ff ff $/;"	l
ffff80000010350d	kernel.asm	/^ffff80000010350d:	ff d0                	callq  *%rax$/;"	l
ffff80000010350f	kernel.asm	/^ffff80000010350f:	8b 45 f4             	mov    -0xc(%rbp),%eax$/;"	l
ffff800000103512	kernel.asm	/^ffff800000103512:	48 63 d0             	movslq %eax,%rdx$/;"	l
ffff800000103515	kernel.asm	/^ffff800000103515:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff800000103519	kernel.asm	/^ffff800000103519:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff80000010351c	kernel.asm	/^ffff80000010351c:	c6 00 00             	movb   $0x0,(%rax)$/;"	l
ffff80000010351f	kernel.asm	/^ffff80000010351f:	eb 05                	jmp    ffff800000103526 <skipelem+0xc8>$/;"	l
ffff800000103521	kernel.asm	/^ffff800000103521:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)$/;"	l
ffff800000103526	kernel.asm	/^ffff800000103526:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010352a	kernel.asm	/^ffff80000010352a:	0f b6 00             	movzbl (%rax),%eax$/;"	l
ffff80000010352d	kernel.asm	/^ffff80000010352d:	3c 2f                	cmp    $0x2f,%al$/;"	l
ffff80000010352f	kernel.asm	/^ffff80000010352f:	74 f0                	je     ffff800000103521 <skipelem+0xc3>$/;"	l
ffff800000103531	kernel.asm	/^ffff800000103531:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000103535	kernel.asm	/^ffff800000103535:	c9                   	leaveq $/;"	l
ffff800000103536	kernel.asm	/^ffff800000103536:	c3                   	retq   $/;"	l
ffff800000103537	kernel.asm	/^ffff800000103537 <namex>:$/;"	l
ffff800000103537	kernel.asm	/^ffff800000103537:	55                   	push   %rbp$/;"	l
ffff800000103538	kernel.asm	/^ffff800000103538:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010353b	kernel.asm	/^ffff80000010353b:	48 83 ec 30          	sub    $0x30,%rsp$/;"	l
ffff80000010353f	kernel.asm	/^ffff80000010353f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
ffff800000103543	kernel.asm	/^ffff800000103543:	89 75 e4             	mov    %esi,-0x1c(%rbp)$/;"	l
ffff800000103546	kernel.asm	/^ffff800000103546:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)$/;"	l
ffff80000010354a	kernel.asm	/^ffff80000010354a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010354e	kernel.asm	/^ffff80000010354e:	0f b6 00             	movzbl (%rax),%eax$/;"	l
ffff800000103551	kernel.asm	/^ffff800000103551:	3c 2f                	cmp    $0x2f,%al$/;"	l
ffff800000103553	kernel.asm	/^ffff800000103553:	75 1f                	jne    ffff800000103574 <namex+0x3d>$/;"	l
ffff800000103555	kernel.asm	/^ffff800000103555:	be 01 00 00 00       	mov    $0x1,%esi$/;"	l
ffff80000010355a	kernel.asm	/^ffff80000010355a:	bf 01 00 00 00       	mov    $0x1,%edi$/;"	l
ffff80000010355f	kernel.asm	/^ffff80000010355f:	48 b8 4a 26 10 00 00 	movabs $0xffff80000010264a,%rax$/;"	l
ffff800000103566	kernel.asm	/^ffff800000103566:	80 ff ff $/;"	l
ffff800000103569	kernel.asm	/^ffff800000103569:	ff d0                	callq  *%rax$/;"	l
ffff80000010356b	kernel.asm	/^ffff80000010356b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff80000010356f	kernel.asm	/^ffff80000010356f:	e9 f7 00 00 00       	jmpq   ffff80000010366b <namex+0x134>$/;"	l
ffff800000103574	kernel.asm	/^ffff800000103574:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff80000010357b	kernel.asm	/^ffff80000010357b:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff80000010357f	kernel.asm	/^ffff80000010357f:	48 8b 80 c8 00 00 00 	mov    0xc8(%rax),%rax$/;"	l
ffff800000103586	kernel.asm	/^ffff800000103586:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000103589	kernel.asm	/^ffff800000103589:	48 b8 7b 27 10 00 00 	movabs $0xffff80000010277b,%rax$/;"	l
ffff800000103590	kernel.asm	/^ffff800000103590:	80 ff ff $/;"	l
ffff800000103593	kernel.asm	/^ffff800000103593:	ff d0                	callq  *%rax$/;"	l
ffff800000103595	kernel.asm	/^ffff800000103595:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff800000103599	kernel.asm	/^ffff800000103599:	e9 cd 00 00 00       	jmpq   ffff80000010366b <namex+0x134>$/;"	l
ffff80000010359e	kernel.asm	/^ffff80000010359e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001035a2	kernel.asm	/^ffff8000001035a2:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001035a5	kernel.asm	/^ffff8000001035a5:	48 b8 ca 27 10 00 00 	movabs $0xffff8000001027ca,%rax$/;"	l
ffff8000001035ac	kernel.asm	/^ffff8000001035ac:	80 ff ff $/;"	l
ffff8000001035af	kernel.asm	/^ffff8000001035af:	ff d0                	callq  *%rax$/;"	l
ffff8000001035b1	kernel.asm	/^ffff8000001035b1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001035b5	kernel.asm	/^ffff8000001035b5:	0f b7 80 94 00 00 00 	movzwl 0x94(%rax),%eax$/;"	l
ffff8000001035bc	kernel.asm	/^ffff8000001035bc:	66 83 f8 01          	cmp    $0x1,%ax$/;"	l
ffff8000001035c0	kernel.asm	/^ffff8000001035c0:	74 1d                	je     ffff8000001035df <namex+0xa8>$/;"	l
ffff8000001035c2	kernel.asm	/^ffff8000001035c2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001035c6	kernel.asm	/^ffff8000001035c6:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001035c9	kernel.asm	/^ffff8000001035c9:	48 b8 ae 2a 10 00 00 	movabs $0xffff800000102aae,%rax$/;"	l
ffff8000001035d0	kernel.asm	/^ffff8000001035d0:	80 ff ff $/;"	l
ffff8000001035d3	kernel.asm	/^ffff8000001035d3:	ff d0                	callq  *%rax$/;"	l
ffff8000001035d5	kernel.asm	/^ffff8000001035d5:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff8000001035da	kernel.asm	/^ffff8000001035da:	e9 d9 00 00 00       	jmpq   ffff8000001036b8 <namex+0x181>$/;"	l
ffff8000001035df	kernel.asm	/^ffff8000001035df:	83 7d e4 00          	cmpl   $0x0,-0x1c(%rbp)$/;"	l
ffff8000001035e3	kernel.asm	/^ffff8000001035e3:	74 27                	je     ffff80000010360c <namex+0xd5>$/;"	l
ffff8000001035e5	kernel.asm	/^ffff8000001035e5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff8000001035e9	kernel.asm	/^ffff8000001035e9:	0f b6 00             	movzbl (%rax),%eax$/;"	l
ffff8000001035ec	kernel.asm	/^ffff8000001035ec:	84 c0                	test   %al,%al$/;"	l
ffff8000001035ee	kernel.asm	/^ffff8000001035ee:	75 1c                	jne    ffff80000010360c <namex+0xd5>$/;"	l
ffff8000001035f0	kernel.asm	/^ffff8000001035f0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001035f4	kernel.asm	/^ffff8000001035f4:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001035f7	kernel.asm	/^ffff8000001035f7:	48 b8 5b 29 10 00 00 	movabs $0xffff80000010295b,%rax$/;"	l
ffff8000001035fe	kernel.asm	/^ffff8000001035fe:	80 ff ff $/;"	l
ffff800000103601	kernel.asm	/^ffff800000103601:	ff d0                	callq  *%rax$/;"	l
ffff800000103603	kernel.asm	/^ffff800000103603:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000103607	kernel.asm	/^ffff800000103607:	e9 ac 00 00 00       	jmpq   ffff8000001036b8 <namex+0x181>$/;"	l
ffff80000010360c	kernel.asm	/^ffff80000010360c:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx$/;"	l
ffff800000103610	kernel.asm	/^ffff800000103610:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000103614	kernel.asm	/^ffff800000103614:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
ffff800000103619	kernel.asm	/^ffff800000103619:	48 89 ce             	mov    %rcx,%rsi$/;"	l
ffff80000010361c	kernel.asm	/^ffff80000010361c:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010361f	kernel.asm	/^ffff80000010361f:	48 b8 30 32 10 00 00 	movabs $0xffff800000103230,%rax$/;"	l
ffff800000103626	kernel.asm	/^ffff800000103626:	80 ff ff $/;"	l
ffff800000103629	kernel.asm	/^ffff800000103629:	ff d0                	callq  *%rax$/;"	l
ffff80000010362b	kernel.asm	/^ffff80000010362b:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ffff80000010362f	kernel.asm	/^ffff80000010362f:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)$/;"	l
ffff800000103634	kernel.asm	/^ffff800000103634:	75 1a                	jne    ffff800000103650 <namex+0x119>$/;"	l
ffff800000103636	kernel.asm	/^ffff800000103636:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010363a	kernel.asm	/^ffff80000010363a:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010363d	kernel.asm	/^ffff80000010363d:	48 b8 ae 2a 10 00 00 	movabs $0xffff800000102aae,%rax$/;"	l
ffff800000103644	kernel.asm	/^ffff800000103644:	80 ff ff $/;"	l
ffff800000103647	kernel.asm	/^ffff800000103647:	ff d0                	callq  *%rax$/;"	l
ffff800000103649	kernel.asm	/^ffff800000103649:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff80000010364e	kernel.asm	/^ffff80000010364e:	eb 68                	jmp    ffff8000001036b8 <namex+0x181>$/;"	l
ffff800000103650	kernel.asm	/^ffff800000103650:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000103654	kernel.asm	/^ffff800000103654:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000103657	kernel.asm	/^ffff800000103657:	48 b8 ae 2a 10 00 00 	movabs $0xffff800000102aae,%rax$/;"	l
ffff80000010365e	kernel.asm	/^ffff80000010365e:	80 ff ff $/;"	l
ffff800000103661	kernel.asm	/^ffff800000103661:	ff d0                	callq  *%rax$/;"	l
ffff800000103663	kernel.asm	/^ffff800000103663:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000103667	kernel.asm	/^ffff800000103667:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff80000010366b	kernel.asm	/^ffff80000010366b:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx$/;"	l
ffff80000010366f	kernel.asm	/^ffff80000010366f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000103673	kernel.asm	/^ffff800000103673:	48 89 d6             	mov    %rdx,%rsi$/;"	l
ffff800000103676	kernel.asm	/^ffff800000103676:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000103679	kernel.asm	/^ffff800000103679:	48 b8 5e 34 10 00 00 	movabs $0xffff80000010345e,%rax$/;"	l
ffff800000103680	kernel.asm	/^ffff800000103680:	80 ff ff $/;"	l
ffff800000103683	kernel.asm	/^ffff800000103683:	ff d0                	callq  *%rax$/;"	l
ffff800000103685	kernel.asm	/^ffff800000103685:	48 89 45 e8          	mov    %rax,-0x18(%rbp)$/;"	l
ffff800000103689	kernel.asm	/^ffff800000103689:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)$/;"	l
ffff80000010368e	kernel.asm	/^ffff80000010368e:	0f 85 0a ff ff ff    	jne    ffff80000010359e <namex+0x67>$/;"	l
ffff800000103694	kernel.asm	/^ffff800000103694:	83 7d e4 00          	cmpl   $0x0,-0x1c(%rbp)$/;"	l
ffff800000103698	kernel.asm	/^ffff800000103698:	74 1a                	je     ffff8000001036b4 <namex+0x17d>$/;"	l
ffff80000010369a	kernel.asm	/^ffff80000010369a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010369e	kernel.asm	/^ffff80000010369e:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001036a1	kernel.asm	/^ffff8000001036a1:	48 b8 c4 29 10 00 00 	movabs $0xffff8000001029c4,%rax$/;"	l
ffff8000001036a8	kernel.asm	/^ffff8000001036a8:	80 ff ff $/;"	l
ffff8000001036ab	kernel.asm	/^ffff8000001036ab:	ff d0                	callq  *%rax$/;"	l
ffff8000001036ad	kernel.asm	/^ffff8000001036ad:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff8000001036b2	kernel.asm	/^ffff8000001036b2:	eb 04                	jmp    ffff8000001036b8 <namex+0x181>$/;"	l
ffff8000001036b4	kernel.asm	/^ffff8000001036b4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001036b8	kernel.asm	/^ffff8000001036b8:	c9                   	leaveq $/;"	l
ffff8000001036b9	kernel.asm	/^ffff8000001036b9:	c3                   	retq   $/;"	l
ffff8000001036ba	kernel.asm	/^ffff8000001036ba <namei>:$/;"	l
ffff8000001036ba	kernel.asm	/^ffff8000001036ba:	55                   	push   %rbp$/;"	l
ffff8000001036bb	kernel.asm	/^ffff8000001036bb:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff8000001036be	kernel.asm	/^ffff8000001036be:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ffff8000001036c2	kernel.asm	/^ffff8000001036c2:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
ffff8000001036c6	kernel.asm	/^ffff8000001036c6:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx$/;"	l
ffff8000001036ca	kernel.asm	/^ffff8000001036ca:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff8000001036ce	kernel.asm	/^ffff8000001036ce:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffff8000001036d3	kernel.asm	/^ffff8000001036d3:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001036d6	kernel.asm	/^ffff8000001036d6:	48 b8 37 35 10 00 00 	movabs $0xffff800000103537,%rax$/;"	l
ffff8000001036dd	kernel.asm	/^ffff8000001036dd:	80 ff ff $/;"	l
ffff8000001036e0	kernel.asm	/^ffff8000001036e0:	ff d0                	callq  *%rax$/;"	l
ffff8000001036e2	kernel.asm	/^ffff8000001036e2:	c9                   	leaveq $/;"	l
ffff8000001036e3	kernel.asm	/^ffff8000001036e3:	c3                   	retq   $/;"	l
ffff8000001036e4	kernel.asm	/^ffff8000001036e4 <nameiparent>:$/;"	l
ffff8000001036e4	kernel.asm	/^ffff8000001036e4:	55                   	push   %rbp$/;"	l
ffff8000001036e5	kernel.asm	/^ffff8000001036e5:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff8000001036e8	kernel.asm	/^ffff8000001036e8:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff8000001036ec	kernel.asm	/^ffff8000001036ec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)$/;"	l
ffff8000001036f0	kernel.asm	/^ffff8000001036f0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)$/;"	l
ffff8000001036f4	kernel.asm	/^ffff8000001036f4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
ffff8000001036f8	kernel.asm	/^ffff8000001036f8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001036fc	kernel.asm	/^ffff8000001036fc:	be 01 00 00 00       	mov    $0x1,%esi$/;"	l
ffff800000103701	kernel.asm	/^ffff800000103701:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000103704	kernel.asm	/^ffff800000103704:	48 b8 37 35 10 00 00 	movabs $0xffff800000103537,%rax$/;"	l
ffff80000010370b	kernel.asm	/^ffff80000010370b:	80 ff ff $/;"	l
ffff80000010370e	kernel.asm	/^ffff80000010370e:	ff d0                	callq  *%rax$/;"	l
ffff800000103710	kernel.asm	/^ffff800000103710:	c9                   	leaveq $/;"	l
ffff800000103711	kernel.asm	/^ffff800000103711:	c3                   	retq   $/;"	l
ffff800000103712	kernel.asm	/^ffff800000103712 <inb>:$/;"	l
ffff800000103712	kernel.asm	/^ffff800000103712:	55                   	push   %rbp$/;"	l
ffff800000103713	kernel.asm	/^ffff800000103713:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000103716	kernel.asm	/^ffff800000103716:	48 83 ec 18          	sub    $0x18,%rsp$/;"	l
ffff80000010371a	kernel.asm	/^ffff80000010371a:	89 f8                	mov    %edi,%eax$/;"	l
ffff80000010371c	kernel.asm	/^ffff80000010371c:	66 89 45 ec          	mov    %ax,-0x14(%rbp)$/;"	l
ffff800000103720	kernel.asm	/^ffff800000103720:	0f b7 45 ec          	movzwl -0x14(%rbp),%eax$/;"	l
ffff800000103724	kernel.asm	/^ffff800000103724:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000103726	kernel.asm	/^ffff800000103726:	ec                   	in     (%dx),%al$/;"	l
ffff800000103727	kernel.asm	/^ffff800000103727:	88 45 ff             	mov    %al,-0x1(%rbp)$/;"	l
ffff80000010372a	kernel.asm	/^ffff80000010372a:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax$/;"	l
ffff80000010372e	kernel.asm	/^ffff80000010372e:	c9                   	leaveq $/;"	l
ffff80000010372f	kernel.asm	/^ffff80000010372f:	c3                   	retq   $/;"	l
ffff800000103730	kernel.asm	/^ffff800000103730 <insl>:$/;"	l
ffff800000103730	kernel.asm	/^ffff800000103730:	55                   	push   %rbp$/;"	l
ffff800000103731	kernel.asm	/^ffff800000103731:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000103734	kernel.asm	/^ffff800000103734:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff800000103738	kernel.asm	/^ffff800000103738:	89 7d fc             	mov    %edi,-0x4(%rbp)$/;"	l
ffff80000010373b	kernel.asm	/^ffff80000010373b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)$/;"	l
ffff80000010373f	kernel.asm	/^ffff80000010373f:	89 55 f8             	mov    %edx,-0x8(%rbp)$/;"	l
ffff800000103742	kernel.asm	/^ffff800000103742:	8b 55 fc             	mov    -0x4(%rbp),%edx$/;"	l
ffff800000103745	kernel.asm	/^ffff800000103745:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx$/;"	l
ffff800000103749	kernel.asm	/^ffff800000103749:	8b 45 f8             	mov    -0x8(%rbp),%eax$/;"	l
ffff80000010374c	kernel.asm	/^ffff80000010374c:	48 89 ce             	mov    %rcx,%rsi$/;"	l
ffff80000010374f	kernel.asm	/^ffff80000010374f:	48 89 f7             	mov    %rsi,%rdi$/;"	l
ffff800000103752	kernel.asm	/^ffff800000103752:	89 c1                	mov    %eax,%ecx$/;"	l
ffff800000103754	kernel.asm	/^ffff800000103754:	fc                   	cld    $/;"	l
ffff800000103755	kernel.asm	/^ffff800000103755:	f3 6d                	rep insl (%dx),%es:(%rdi)$/;"	l
ffff800000103757	kernel.asm	/^ffff800000103757:	89 c8                	mov    %ecx,%eax$/;"	l
ffff800000103759	kernel.asm	/^ffff800000103759:	48 89 fe             	mov    %rdi,%rsi$/;"	l
ffff80000010375c	kernel.asm	/^ffff80000010375c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)$/;"	l
ffff800000103760	kernel.asm	/^ffff800000103760:	89 45 f8             	mov    %eax,-0x8(%rbp)$/;"	l
ffff800000103763	kernel.asm	/^ffff800000103763:	90                   	nop$/;"	l
ffff800000103764	kernel.asm	/^ffff800000103764:	c9                   	leaveq $/;"	l
ffff800000103765	kernel.asm	/^ffff800000103765:	c3                   	retq   $/;"	l
ffff800000103766	kernel.asm	/^ffff800000103766 <outb>:$/;"	l
ffff800000103766	kernel.asm	/^ffff800000103766:	55                   	push   %rbp$/;"	l
ffff800000103767	kernel.asm	/^ffff800000103767:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010376a	kernel.asm	/^ffff80000010376a:	48 83 ec 08          	sub    $0x8,%rsp$/;"	l
ffff80000010376e	kernel.asm	/^ffff80000010376e:	89 fa                	mov    %edi,%edx$/;"	l
ffff800000103770	kernel.asm	/^ffff800000103770:	89 f0                	mov    %esi,%eax$/;"	l
ffff800000103772	kernel.asm	/^ffff800000103772:	66 89 55 fc          	mov    %dx,-0x4(%rbp)$/;"	l
ffff800000103776	kernel.asm	/^ffff800000103776:	88 45 f8             	mov    %al,-0x8(%rbp)$/;"	l
ffff800000103779	kernel.asm	/^ffff800000103779:	0f b6 45 f8          	movzbl -0x8(%rbp),%eax$/;"	l
ffff80000010377d	kernel.asm	/^ffff80000010377d:	0f b7 55 fc          	movzwl -0x4(%rbp),%edx$/;"	l
ffff800000103781	kernel.asm	/^ffff800000103781:	ee                   	out    %al,(%dx)$/;"	l
ffff800000103782	kernel.asm	/^ffff800000103782:	90                   	nop$/;"	l
ffff800000103783	kernel.asm	/^ffff800000103783:	c9                   	leaveq $/;"	l
ffff800000103784	kernel.asm	/^ffff800000103784:	c3                   	retq   $/;"	l
ffff800000103785	kernel.asm	/^ffff800000103785 <outsl>:$/;"	l
ffff800000103785	kernel.asm	/^ffff800000103785:	55                   	push   %rbp$/;"	l
ffff800000103786	kernel.asm	/^ffff800000103786:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000103789	kernel.asm	/^ffff800000103789:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff80000010378d	kernel.asm	/^ffff80000010378d:	89 7d fc             	mov    %edi,-0x4(%rbp)$/;"	l
ffff800000103790	kernel.asm	/^ffff800000103790:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)$/;"	l
ffff800000103794	kernel.asm	/^ffff800000103794:	89 55 f8             	mov    %edx,-0x8(%rbp)$/;"	l
ffff800000103797	kernel.asm	/^ffff800000103797:	8b 55 fc             	mov    -0x4(%rbp),%edx$/;"	l
ffff80000010379a	kernel.asm	/^ffff80000010379a:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx$/;"	l
ffff80000010379e	kernel.asm	/^ffff80000010379e:	8b 45 f8             	mov    -0x8(%rbp),%eax$/;"	l
ffff8000001037a1	kernel.asm	/^ffff8000001037a1:	48 89 ce             	mov    %rcx,%rsi$/;"	l
ffff8000001037a4	kernel.asm	/^ffff8000001037a4:	89 c1                	mov    %eax,%ecx$/;"	l
ffff8000001037a6	kernel.asm	/^ffff8000001037a6:	fc                   	cld    $/;"	l
ffff8000001037a7	kernel.asm	/^ffff8000001037a7:	f3 6f                	rep outsl %ds:(%rsi),(%dx)$/;"	l
ffff8000001037a9	kernel.asm	/^ffff8000001037a9:	89 c8                	mov    %ecx,%eax$/;"	l
ffff8000001037ab	kernel.asm	/^ffff8000001037ab:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)$/;"	l
ffff8000001037af	kernel.asm	/^ffff8000001037af:	89 45 f8             	mov    %eax,-0x8(%rbp)$/;"	l
ffff8000001037b2	kernel.asm	/^ffff8000001037b2:	90                   	nop$/;"	l
ffff8000001037b3	kernel.asm	/^ffff8000001037b3:	c9                   	leaveq $/;"	l
ffff8000001037b4	kernel.asm	/^ffff8000001037b4:	c3                   	retq   $/;"	l
ffff8000001037b5	kernel.asm	/^ffff8000001037b5 <idewait>:$/;"	l
ffff8000001037b5	kernel.asm	/^ffff8000001037b5:	55                   	push   %rbp$/;"	l
ffff8000001037b6	kernel.asm	/^ffff8000001037b6:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff8000001037b9	kernel.asm	/^ffff8000001037b9:	48 83 ec 18          	sub    $0x18,%rsp$/;"	l
ffff8000001037bd	kernel.asm	/^ffff8000001037bd:	89 7d ec             	mov    %edi,-0x14(%rbp)$/;"	l
ffff8000001037c0	kernel.asm	/^ffff8000001037c0:	90                   	nop$/;"	l
ffff8000001037c1	kernel.asm	/^ffff8000001037c1:	bf f7 01 00 00       	mov    $0x1f7,%edi$/;"	l
ffff8000001037c6	kernel.asm	/^ffff8000001037c6:	48 b8 12 37 10 00 00 	movabs $0xffff800000103712,%rax$/;"	l
ffff8000001037cd	kernel.asm	/^ffff8000001037cd:	80 ff ff $/;"	l
ffff8000001037d0	kernel.asm	/^ffff8000001037d0:	ff d0                	callq  *%rax$/;"	l
ffff8000001037d2	kernel.asm	/^ffff8000001037d2:	0f b6 c0             	movzbl %al,%eax$/;"	l
ffff8000001037d5	kernel.asm	/^ffff8000001037d5:	89 45 fc             	mov    %eax,-0x4(%rbp)$/;"	l
ffff8000001037d8	kernel.asm	/^ffff8000001037d8:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff8000001037db	kernel.asm	/^ffff8000001037db:	25 c0 00 00 00       	and    $0xc0,%eax$/;"	l
ffff8000001037e0	kernel.asm	/^ffff8000001037e0:	83 f8 40             	cmp    $0x40,%eax$/;"	l
ffff8000001037e3	kernel.asm	/^ffff8000001037e3:	75 dc                	jne    ffff8000001037c1 <idewait+0xc>$/;"	l
ffff8000001037e5	kernel.asm	/^ffff8000001037e5:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)$/;"	l
ffff8000001037e9	kernel.asm	/^ffff8000001037e9:	74 11                	je     ffff8000001037fc <idewait+0x47>$/;"	l
ffff8000001037eb	kernel.asm	/^ffff8000001037eb:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff8000001037ee	kernel.asm	/^ffff8000001037ee:	83 e0 21             	and    $0x21,%eax$/;"	l
ffff8000001037f1	kernel.asm	/^ffff8000001037f1:	85 c0                	test   %eax,%eax$/;"	l
ffff8000001037f3	kernel.asm	/^ffff8000001037f3:	74 07                	je     ffff8000001037fc <idewait+0x47>$/;"	l
ffff8000001037f5	kernel.asm	/^ffff8000001037f5:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff8000001037fa	kernel.asm	/^ffff8000001037fa:	eb 05                	jmp    ffff800000103801 <idewait+0x4c>$/;"	l
ffff8000001037fc	kernel.asm	/^ffff8000001037fc:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000103801	kernel.asm	/^ffff800000103801:	c9                   	leaveq $/;"	l
ffff800000103802	kernel.asm	/^ffff800000103802:	c3                   	retq   $/;"	l
ffff800000103803	kernel.asm	/^ffff800000103803 <ideinit>:$/;"	l
ffff800000103803	kernel.asm	/^ffff800000103803:	55                   	push   %rbp$/;"	l
ffff800000103804	kernel.asm	/^ffff800000103804:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000103807	kernel.asm	/^ffff800000103807:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff80000010380b	kernel.asm	/^ffff80000010380b:	48 be 9a bb 10 00 00 	movabs $0xffff80000010bb9a,%rsi$/;"	l
ffff800000103812	kernel.asm	/^ffff800000103812:	80 ff ff $/;"	l
ffff800000103815	kernel.asm	/^ffff800000103815:	48 bf c0 70 11 00 00 	movabs $0xffff8000001170c0,%rdi$/;"	l
ffff80000010381c	kernel.asm	/^ffff80000010381c:	80 ff ff $/;"	l
ffff80000010381f	kernel.asm	/^ffff80000010381f:	48 b8 ca 71 10 00 00 	movabs $0xffff8000001071ca,%rax$/;"	l
ffff800000103826	kernel.asm	/^ffff800000103826:	80 ff ff $/;"	l
ffff800000103829	kernel.asm	/^ffff800000103829:	ff d0                	callq  *%rax$/;"	l
ffff80000010382b	kernel.asm	/^ffff80000010382b:	48 b8 a0 7a 11 00 00 	movabs $0xffff800000117aa0,%rax$/;"	l
ffff800000103832	kernel.asm	/^ffff800000103832:	80 ff ff $/;"	l
ffff800000103835	kernel.asm	/^ffff800000103835:	8b 00                	mov    (%rax),%eax$/;"	l
ffff800000103837	kernel.asm	/^ffff800000103837:	83 e8 01             	sub    $0x1,%eax$/;"	l
ffff80000010383a	kernel.asm	/^ffff80000010383a:	89 c6                	mov    %eax,%esi$/;"	l
ffff80000010383c	kernel.asm	/^ffff80000010383c:	bf 0e 00 00 00       	mov    $0xe,%edi$/;"	l
ffff800000103841	kernel.asm	/^ffff800000103841:	48 b8 65 3e 10 00 00 	movabs $0xffff800000103e65,%rax$/;"	l
ffff800000103848	kernel.asm	/^ffff800000103848:	80 ff ff $/;"	l
ffff80000010384b	kernel.asm	/^ffff80000010384b:	ff d0                	callq  *%rax$/;"	l
ffff80000010384d	kernel.asm	/^ffff80000010384d:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
ffff800000103852	kernel.asm	/^ffff800000103852:	48 b8 b5 37 10 00 00 	movabs $0xffff8000001037b5,%rax$/;"	l
ffff800000103859	kernel.asm	/^ffff800000103859:	80 ff ff $/;"	l
ffff80000010385c	kernel.asm	/^ffff80000010385c:	ff d0                	callq  *%rax$/;"	l
ffff80000010385e	kernel.asm	/^ffff80000010385e:	be f0 00 00 00       	mov    $0xf0,%esi$/;"	l
ffff800000103863	kernel.asm	/^ffff800000103863:	bf f6 01 00 00       	mov    $0x1f6,%edi$/;"	l
ffff800000103868	kernel.asm	/^ffff800000103868:	48 b8 66 37 10 00 00 	movabs $0xffff800000103766,%rax$/;"	l
ffff80000010386f	kernel.asm	/^ffff80000010386f:	80 ff ff $/;"	l
ffff800000103872	kernel.asm	/^ffff800000103872:	ff d0                	callq  *%rax$/;"	l
ffff800000103874	kernel.asm	/^ffff800000103874:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)$/;"	l
ffff80000010387b	kernel.asm	/^ffff80000010387b:	eb 2b                	jmp    ffff8000001038a8 <ideinit+0xa5>$/;"	l
ffff80000010387d	kernel.asm	/^ffff80000010387d:	bf f7 01 00 00       	mov    $0x1f7,%edi$/;"	l
ffff800000103882	kernel.asm	/^ffff800000103882:	48 b8 12 37 10 00 00 	movabs $0xffff800000103712,%rax$/;"	l
ffff800000103889	kernel.asm	/^ffff800000103889:	80 ff ff $/;"	l
ffff80000010388c	kernel.asm	/^ffff80000010388c:	ff d0                	callq  *%rax$/;"	l
ffff80000010388e	kernel.asm	/^ffff80000010388e:	84 c0                	test   %al,%al$/;"	l
ffff800000103890	kernel.asm	/^ffff800000103890:	74 12                	je     ffff8000001038a4 <ideinit+0xa1>$/;"	l
ffff800000103892	kernel.asm	/^ffff800000103892:	48 b8 30 71 11 00 00 	movabs $0xffff800000117130,%rax$/;"	l
ffff800000103899	kernel.asm	/^ffff800000103899:	80 ff ff $/;"	l
ffff80000010389c	kernel.asm	/^ffff80000010389c:	c7 00 01 00 00 00    	movl   $0x1,(%rax)$/;"	l
ffff8000001038a2	kernel.asm	/^ffff8000001038a2:	eb 0d                	jmp    ffff8000001038b1 <ideinit+0xae>$/;"	l
ffff8000001038a4	kernel.asm	/^ffff8000001038a4:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)$/;"	l
ffff8000001038a8	kernel.asm	/^ffff8000001038a8:	81 7d fc e7 03 00 00 	cmpl   $0x3e7,-0x4(%rbp)$/;"	l
ffff8000001038af	kernel.asm	/^ffff8000001038af:	7e cc                	jle    ffff80000010387d <ideinit+0x7a>$/;"	l
ffff8000001038b1	kernel.asm	/^ffff8000001038b1:	be e0 00 00 00       	mov    $0xe0,%esi$/;"	l
ffff8000001038b6	kernel.asm	/^ffff8000001038b6:	bf f6 01 00 00       	mov    $0x1f6,%edi$/;"	l
ffff8000001038bb	kernel.asm	/^ffff8000001038bb:	48 b8 66 37 10 00 00 	movabs $0xffff800000103766,%rax$/;"	l
ffff8000001038c2	kernel.asm	/^ffff8000001038c2:	80 ff ff $/;"	l
ffff8000001038c5	kernel.asm	/^ffff8000001038c5:	ff d0                	callq  *%rax$/;"	l
ffff8000001038c7	kernel.asm	/^ffff8000001038c7:	90                   	nop$/;"	l
ffff8000001038c8	kernel.asm	/^ffff8000001038c8:	c9                   	leaveq $/;"	l
ffff8000001038c9	kernel.asm	/^ffff8000001038c9:	c3                   	retq   $/;"	l
ffff8000001038ca	kernel.asm	/^ffff8000001038ca <idestart>:$/;"	l
ffff8000001038ca	kernel.asm	/^ffff8000001038ca:	55                   	push   %rbp$/;"	l
ffff8000001038cb	kernel.asm	/^ffff8000001038cb:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff8000001038ce	kernel.asm	/^ffff8000001038ce:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ffff8000001038d2	kernel.asm	/^ffff8000001038d2:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
ffff8000001038d6	kernel.asm	/^ffff8000001038d6:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)$/;"	l
ffff8000001038db	kernel.asm	/^ffff8000001038db:	75 16                	jne    ffff8000001038f3 <idestart+0x29>$/;"	l
ffff8000001038dd	kernel.asm	/^ffff8000001038dd:	48 bf 9e bb 10 00 00 	movabs $0xffff80000010bb9e,%rdi$/;"	l
ffff8000001038e4	kernel.asm	/^ffff8000001038e4:	80 ff ff $/;"	l
ffff8000001038e7	kernel.asm	/^ffff8000001038e7:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff8000001038ee	kernel.asm	/^ffff8000001038ee:	80 ff ff $/;"	l
ffff8000001038f1	kernel.asm	/^ffff8000001038f1:	ff d0                	callq  *%rax$/;"	l
ffff8000001038f3	kernel.asm	/^ffff8000001038f3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff8000001038f7	kernel.asm	/^ffff8000001038f7:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
ffff8000001038fa	kernel.asm	/^ffff8000001038fa:	3d e7 03 00 00       	cmp    $0x3e7,%eax$/;"	l
ffff8000001038ff	kernel.asm	/^ffff8000001038ff:	76 16                	jbe    ffff800000103917 <idestart+0x4d>$/;"	l
ffff800000103901	kernel.asm	/^ffff800000103901:	48 bf a7 bb 10 00 00 	movabs $0xffff80000010bba7,%rdi$/;"	l
ffff800000103908	kernel.asm	/^ffff800000103908:	80 ff ff $/;"	l
ffff80000010390b	kernel.asm	/^ffff80000010390b:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff800000103912	kernel.asm	/^ffff800000103912:	80 ff ff $/;"	l
ffff800000103915	kernel.asm	/^ffff800000103915:	ff d0                	callq  *%rax$/;"	l
ffff800000103917	kernel.asm	/^ffff800000103917:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%rbp)$/;"	l
ffff80000010391e	kernel.asm	/^ffff80000010391e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000103922	kernel.asm	/^ffff800000103922:	8b 50 08             	mov    0x8(%rax),%edx$/;"	l
ffff800000103925	kernel.asm	/^ffff800000103925:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff800000103928	kernel.asm	/^ffff800000103928:	0f af c2             	imul   %edx,%eax$/;"	l
ffff80000010392b	kernel.asm	/^ffff80000010392b:	89 45 f8             	mov    %eax,-0x8(%rbp)$/;"	l
ffff80000010392e	kernel.asm	/^ffff80000010392e:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)$/;"	l
ffff800000103932	kernel.asm	/^ffff800000103932:	75 07                	jne    ffff80000010393b <idestart+0x71>$/;"	l
ffff800000103934	kernel.asm	/^ffff800000103934:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
ffff800000103939	kernel.asm	/^ffff800000103939:	eb 05                	jmp    ffff800000103940 <idestart+0x76>$/;"	l
ffff80000010393b	kernel.asm	/^ffff80000010393b:	b8 c4 00 00 00       	mov    $0xc4,%eax$/;"	l
ffff800000103940	kernel.asm	/^ffff800000103940:	89 45 f4             	mov    %eax,-0xc(%rbp)$/;"	l
ffff800000103943	kernel.asm	/^ffff800000103943:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)$/;"	l
ffff800000103947	kernel.asm	/^ffff800000103947:	75 07                	jne    ffff800000103950 <idestart+0x86>$/;"	l
ffff800000103949	kernel.asm	/^ffff800000103949:	b8 30 00 00 00       	mov    $0x30,%eax$/;"	l
ffff80000010394e	kernel.asm	/^ffff80000010394e:	eb 05                	jmp    ffff800000103955 <idestart+0x8b>$/;"	l
ffff800000103950	kernel.asm	/^ffff800000103950:	b8 c5 00 00 00       	mov    $0xc5,%eax$/;"	l
ffff800000103955	kernel.asm	/^ffff800000103955:	89 45 f0             	mov    %eax,-0x10(%rbp)$/;"	l
ffff800000103958	kernel.asm	/^ffff800000103958:	83 7d fc 07          	cmpl   $0x7,-0x4(%rbp)$/;"	l
ffff80000010395c	kernel.asm	/^ffff80000010395c:	7e 16                	jle    ffff800000103974 <idestart+0xaa>$/;"	l
ffff80000010395e	kernel.asm	/^ffff80000010395e:	48 bf 9e bb 10 00 00 	movabs $0xffff80000010bb9e,%rdi$/;"	l
ffff800000103965	kernel.asm	/^ffff800000103965:	80 ff ff $/;"	l
ffff800000103968	kernel.asm	/^ffff800000103968:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff80000010396f	kernel.asm	/^ffff80000010396f:	80 ff ff $/;"	l
ffff800000103972	kernel.asm	/^ffff800000103972:	ff d0                	callq  *%rax$/;"	l
ffff800000103974	kernel.asm	/^ffff800000103974:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
ffff800000103979	kernel.asm	/^ffff800000103979:	48 b8 b5 37 10 00 00 	movabs $0xffff8000001037b5,%rax$/;"	l
ffff800000103980	kernel.asm	/^ffff800000103980:	80 ff ff $/;"	l
ffff800000103983	kernel.asm	/^ffff800000103983:	ff d0                	callq  *%rax$/;"	l
ffff800000103985	kernel.asm	/^ffff800000103985:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffff80000010398a	kernel.asm	/^ffff80000010398a:	bf f6 03 00 00       	mov    $0x3f6,%edi$/;"	l
ffff80000010398f	kernel.asm	/^ffff80000010398f:	48 b8 66 37 10 00 00 	movabs $0xffff800000103766,%rax$/;"	l
ffff800000103996	kernel.asm	/^ffff800000103996:	80 ff ff $/;"	l
ffff800000103999	kernel.asm	/^ffff800000103999:	ff d0                	callq  *%rax$/;"	l
ffff80000010399b	kernel.asm	/^ffff80000010399b:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff80000010399e	kernel.asm	/^ffff80000010399e:	0f b6 c0             	movzbl %al,%eax$/;"	l
ffff8000001039a1	kernel.asm	/^ffff8000001039a1:	89 c6                	mov    %eax,%esi$/;"	l
ffff8000001039a3	kernel.asm	/^ffff8000001039a3:	bf f2 01 00 00       	mov    $0x1f2,%edi$/;"	l
ffff8000001039a8	kernel.asm	/^ffff8000001039a8:	48 b8 66 37 10 00 00 	movabs $0xffff800000103766,%rax$/;"	l
ffff8000001039af	kernel.asm	/^ffff8000001039af:	80 ff ff $/;"	l
ffff8000001039b2	kernel.asm	/^ffff8000001039b2:	ff d0                	callq  *%rax$/;"	l
ffff8000001039b4	kernel.asm	/^ffff8000001039b4:	8b 45 f8             	mov    -0x8(%rbp),%eax$/;"	l
ffff8000001039b7	kernel.asm	/^ffff8000001039b7:	0f b6 c0             	movzbl %al,%eax$/;"	l
ffff8000001039ba	kernel.asm	/^ffff8000001039ba:	89 c6                	mov    %eax,%esi$/;"	l
ffff8000001039bc	kernel.asm	/^ffff8000001039bc:	bf f3 01 00 00       	mov    $0x1f3,%edi$/;"	l
ffff8000001039c1	kernel.asm	/^ffff8000001039c1:	48 b8 66 37 10 00 00 	movabs $0xffff800000103766,%rax$/;"	l
ffff8000001039c8	kernel.asm	/^ffff8000001039c8:	80 ff ff $/;"	l
ffff8000001039cb	kernel.asm	/^ffff8000001039cb:	ff d0                	callq  *%rax$/;"	l
ffff8000001039cd	kernel.asm	/^ffff8000001039cd:	8b 45 f8             	mov    -0x8(%rbp),%eax$/;"	l
ffff8000001039d0	kernel.asm	/^ffff8000001039d0:	c1 f8 08             	sar    $0x8,%eax$/;"	l
ffff8000001039d3	kernel.asm	/^ffff8000001039d3:	0f b6 c0             	movzbl %al,%eax$/;"	l
ffff8000001039d6	kernel.asm	/^ffff8000001039d6:	89 c6                	mov    %eax,%esi$/;"	l
ffff8000001039d8	kernel.asm	/^ffff8000001039d8:	bf f4 01 00 00       	mov    $0x1f4,%edi$/;"	l
ffff8000001039dd	kernel.asm	/^ffff8000001039dd:	48 b8 66 37 10 00 00 	movabs $0xffff800000103766,%rax$/;"	l
ffff8000001039e4	kernel.asm	/^ffff8000001039e4:	80 ff ff $/;"	l
ffff8000001039e7	kernel.asm	/^ffff8000001039e7:	ff d0                	callq  *%rax$/;"	l
ffff8000001039e9	kernel.asm	/^ffff8000001039e9:	8b 45 f8             	mov    -0x8(%rbp),%eax$/;"	l
ffff8000001039ec	kernel.asm	/^ffff8000001039ec:	c1 f8 10             	sar    $0x10,%eax$/;"	l
ffff8000001039ef	kernel.asm	/^ffff8000001039ef:	0f b6 c0             	movzbl %al,%eax$/;"	l
ffff8000001039f2	kernel.asm	/^ffff8000001039f2:	89 c6                	mov    %eax,%esi$/;"	l
ffff8000001039f4	kernel.asm	/^ffff8000001039f4:	bf f5 01 00 00       	mov    $0x1f5,%edi$/;"	l
ffff8000001039f9	kernel.asm	/^ffff8000001039f9:	48 b8 66 37 10 00 00 	movabs $0xffff800000103766,%rax$/;"	l
ffff800000103a00	kernel.asm	/^ffff800000103a00:	80 ff ff $/;"	l
ffff800000103a03	kernel.asm	/^ffff800000103a03:	ff d0                	callq  *%rax$/;"	l
ffff800000103a05	kernel.asm	/^ffff800000103a05:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000103a09	kernel.asm	/^ffff800000103a09:	8b 40 04             	mov    0x4(%rax),%eax$/;"	l
ffff800000103a0c	kernel.asm	/^ffff800000103a0c:	83 e0 01             	and    $0x1,%eax$/;"	l
ffff800000103a0f	kernel.asm	/^ffff800000103a0f:	c1 e0 04             	shl    $0x4,%eax$/;"	l
ffff800000103a12	kernel.asm	/^ffff800000103a12:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000103a14	kernel.asm	/^ffff800000103a14:	8b 45 f8             	mov    -0x8(%rbp),%eax$/;"	l
ffff800000103a17	kernel.asm	/^ffff800000103a17:	c1 f8 18             	sar    $0x18,%eax$/;"	l
ffff800000103a1a	kernel.asm	/^ffff800000103a1a:	83 e0 0f             	and    $0xf,%eax$/;"	l
ffff800000103a1d	kernel.asm	/^ffff800000103a1d:	09 d0                	or     %edx,%eax$/;"	l
ffff800000103a1f	kernel.asm	/^ffff800000103a1f:	83 c8 e0             	or     $0xffffffe0,%eax$/;"	l
ffff800000103a22	kernel.asm	/^ffff800000103a22:	0f b6 c0             	movzbl %al,%eax$/;"	l
ffff800000103a25	kernel.asm	/^ffff800000103a25:	89 c6                	mov    %eax,%esi$/;"	l
ffff800000103a27	kernel.asm	/^ffff800000103a27:	bf f6 01 00 00       	mov    $0x1f6,%edi$/;"	l
ffff800000103a2c	kernel.asm	/^ffff800000103a2c:	48 b8 66 37 10 00 00 	movabs $0xffff800000103766,%rax$/;"	l
ffff800000103a33	kernel.asm	/^ffff800000103a33:	80 ff ff $/;"	l
ffff800000103a36	kernel.asm	/^ffff800000103a36:	ff d0                	callq  *%rax$/;"	l
ffff800000103a38	kernel.asm	/^ffff800000103a38:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000103a3c	kernel.asm	/^ffff800000103a3c:	8b 00                	mov    (%rax),%eax$/;"	l
ffff800000103a3e	kernel.asm	/^ffff800000103a3e:	83 e0 04             	and    $0x4,%eax$/;"	l
ffff800000103a41	kernel.asm	/^ffff800000103a41:	85 c0                	test   %eax,%eax$/;"	l
ffff800000103a43	kernel.asm	/^ffff800000103a43:	74 3e                	je     ffff800000103a83 <idestart+0x1b9>$/;"	l
ffff800000103a45	kernel.asm	/^ffff800000103a45:	8b 45 f0             	mov    -0x10(%rbp),%eax$/;"	l
ffff800000103a48	kernel.asm	/^ffff800000103a48:	0f b6 c0             	movzbl %al,%eax$/;"	l
ffff800000103a4b	kernel.asm	/^ffff800000103a4b:	89 c6                	mov    %eax,%esi$/;"	l
ffff800000103a4d	kernel.asm	/^ffff800000103a4d:	bf f7 01 00 00       	mov    $0x1f7,%edi$/;"	l
ffff800000103a52	kernel.asm	/^ffff800000103a52:	48 b8 66 37 10 00 00 	movabs $0xffff800000103766,%rax$/;"	l
ffff800000103a59	kernel.asm	/^ffff800000103a59:	80 ff ff $/;"	l
ffff800000103a5c	kernel.asm	/^ffff800000103a5c:	ff d0                	callq  *%rax$/;"	l
ffff800000103a5e	kernel.asm	/^ffff800000103a5e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000103a62	kernel.asm	/^ffff800000103a62:	48 05 b0 00 00 00    	add    $0xb0,%rax$/;"	l
ffff800000103a68	kernel.asm	/^ffff800000103a68:	ba 80 00 00 00       	mov    $0x80,%edx$/;"	l
ffff800000103a6d	kernel.asm	/^ffff800000103a6d:	48 89 c6             	mov    %rax,%rsi$/;"	l
ffff800000103a70	kernel.asm	/^ffff800000103a70:	bf f0 01 00 00       	mov    $0x1f0,%edi$/;"	l
ffff800000103a75	kernel.asm	/^ffff800000103a75:	48 b8 85 37 10 00 00 	movabs $0xffff800000103785,%rax$/;"	l
ffff800000103a7c	kernel.asm	/^ffff800000103a7c:	80 ff ff $/;"	l
ffff800000103a7f	kernel.asm	/^ffff800000103a7f:	ff d0                	callq  *%rax$/;"	l
ffff800000103a81	kernel.asm	/^ffff800000103a81:	eb 19                	jmp    ffff800000103a9c <idestart+0x1d2>$/;"	l
ffff800000103a83	kernel.asm	/^ffff800000103a83:	8b 45 f4             	mov    -0xc(%rbp),%eax$/;"	l
ffff800000103a86	kernel.asm	/^ffff800000103a86:	0f b6 c0             	movzbl %al,%eax$/;"	l
ffff800000103a89	kernel.asm	/^ffff800000103a89:	89 c6                	mov    %eax,%esi$/;"	l
ffff800000103a8b	kernel.asm	/^ffff800000103a8b:	bf f7 01 00 00       	mov    $0x1f7,%edi$/;"	l
ffff800000103a90	kernel.asm	/^ffff800000103a90:	48 b8 66 37 10 00 00 	movabs $0xffff800000103766,%rax$/;"	l
ffff800000103a97	kernel.asm	/^ffff800000103a97:	80 ff ff $/;"	l
ffff800000103a9a	kernel.asm	/^ffff800000103a9a:	ff d0                	callq  *%rax$/;"	l
ffff800000103a9c	kernel.asm	/^ffff800000103a9c:	90                   	nop$/;"	l
ffff800000103a9d	kernel.asm	/^ffff800000103a9d:	c9                   	leaveq $/;"	l
ffff800000103a9e	kernel.asm	/^ffff800000103a9e:	c3                   	retq   $/;"	l
ffff800000103a9f	kernel.asm	/^ffff800000103a9f <ideintr>:$/;"	l
ffff800000103a9f	kernel.asm	/^ffff800000103a9f:	55                   	push   %rbp$/;"	l
ffff800000103aa0	kernel.asm	/^ffff800000103aa0:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000103aa3	kernel.asm	/^ffff800000103aa3:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff800000103aa7	kernel.asm	/^ffff800000103aa7:	48 bf c0 70 11 00 00 	movabs $0xffff8000001170c0,%rdi$/;"	l
ffff800000103aae	kernel.asm	/^ffff800000103aae:	80 ff ff $/;"	l
ffff800000103ab1	kernel.asm	/^ffff800000103ab1:	48 b8 ff 71 10 00 00 	movabs $0xffff8000001071ff,%rax$/;"	l
ffff800000103ab8	kernel.asm	/^ffff800000103ab8:	80 ff ff $/;"	l
ffff800000103abb	kernel.asm	/^ffff800000103abb:	ff d0                	callq  *%rax$/;"	l
ffff800000103abd	kernel.asm	/^ffff800000103abd:	48 b8 28 71 11 00 00 	movabs $0xffff800000117128,%rax$/;"	l
ffff800000103ac4	kernel.asm	/^ffff800000103ac4:	80 ff ff $/;"	l
ffff800000103ac7	kernel.asm	/^ffff800000103ac7:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff800000103aca	kernel.asm	/^ffff800000103aca:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff800000103ace	kernel.asm	/^ffff800000103ace:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)$/;"	l
ffff800000103ad3	kernel.asm	/^ffff800000103ad3:	75 1b                	jne    ffff800000103af0 <ideintr+0x51>$/;"	l
ffff800000103ad5	kernel.asm	/^ffff800000103ad5:	48 bf c0 70 11 00 00 	movabs $0xffff8000001170c0,%rdi$/;"	l
ffff800000103adc	kernel.asm	/^ffff800000103adc:	80 ff ff $/;"	l
ffff800000103adf	kernel.asm	/^ffff800000103adf:	48 b8 98 72 10 00 00 	movabs $0xffff800000107298,%rax$/;"	l
ffff800000103ae6	kernel.asm	/^ffff800000103ae6:	80 ff ff $/;"	l
ffff800000103ae9	kernel.asm	/^ffff800000103ae9:	ff d0                	callq  *%rax$/;"	l
ffff800000103aeb	kernel.asm	/^ffff800000103aeb:	e9 d6 00 00 00       	jmpq   ffff800000103bc6 <ideintr+0x127>$/;"	l
ffff800000103af0	kernel.asm	/^ffff800000103af0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000103af4	kernel.asm	/^ffff800000103af4:	48 8b 90 a8 00 00 00 	mov    0xa8(%rax),%rdx$/;"	l
ffff800000103afb	kernel.asm	/^ffff800000103afb:	48 b8 28 71 11 00 00 	movabs $0xffff800000117128,%rax$/;"	l
ffff800000103b02	kernel.asm	/^ffff800000103b02:	80 ff ff $/;"	l
ffff800000103b05	kernel.asm	/^ffff800000103b05:	48 89 10             	mov    %rdx,(%rax)$/;"	l
ffff800000103b08	kernel.asm	/^ffff800000103b08:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000103b0c	kernel.asm	/^ffff800000103b0c:	8b 00                	mov    (%rax),%eax$/;"	l
ffff800000103b0e	kernel.asm	/^ffff800000103b0e:	83 e0 04             	and    $0x4,%eax$/;"	l
ffff800000103b11	kernel.asm	/^ffff800000103b11:	85 c0                	test   %eax,%eax$/;"	l
ffff800000103b13	kernel.asm	/^ffff800000103b13:	75 38                	jne    ffff800000103b4d <ideintr+0xae>$/;"	l
ffff800000103b15	kernel.asm	/^ffff800000103b15:	bf 01 00 00 00       	mov    $0x1,%edi$/;"	l
ffff800000103b1a	kernel.asm	/^ffff800000103b1a:	48 b8 b5 37 10 00 00 	movabs $0xffff8000001037b5,%rax$/;"	l
ffff800000103b21	kernel.asm	/^ffff800000103b21:	80 ff ff $/;"	l
ffff800000103b24	kernel.asm	/^ffff800000103b24:	ff d0                	callq  *%rax$/;"	l
ffff800000103b26	kernel.asm	/^ffff800000103b26:	85 c0                	test   %eax,%eax$/;"	l
ffff800000103b28	kernel.asm	/^ffff800000103b28:	78 23                	js     ffff800000103b4d <ideintr+0xae>$/;"	l
ffff800000103b2a	kernel.asm	/^ffff800000103b2a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000103b2e	kernel.asm	/^ffff800000103b2e:	48 05 b0 00 00 00    	add    $0xb0,%rax$/;"	l
ffff800000103b34	kernel.asm	/^ffff800000103b34:	ba 80 00 00 00       	mov    $0x80,%edx$/;"	l
ffff800000103b39	kernel.asm	/^ffff800000103b39:	48 89 c6             	mov    %rax,%rsi$/;"	l
ffff800000103b3c	kernel.asm	/^ffff800000103b3c:	bf f0 01 00 00       	mov    $0x1f0,%edi$/;"	l
ffff800000103b41	kernel.asm	/^ffff800000103b41:	48 b8 30 37 10 00 00 	movabs $0xffff800000103730,%rax$/;"	l
ffff800000103b48	kernel.asm	/^ffff800000103b48:	80 ff ff $/;"	l
ffff800000103b4b	kernel.asm	/^ffff800000103b4b:	ff d0                	callq  *%rax$/;"	l
ffff800000103b4d	kernel.asm	/^ffff800000103b4d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000103b51	kernel.asm	/^ffff800000103b51:	8b 00                	mov    (%rax),%eax$/;"	l
ffff800000103b53	kernel.asm	/^ffff800000103b53:	83 c8 02             	or     $0x2,%eax$/;"	l
ffff800000103b56	kernel.asm	/^ffff800000103b56:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000103b58	kernel.asm	/^ffff800000103b58:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000103b5c	kernel.asm	/^ffff800000103b5c:	89 10                	mov    %edx,(%rax)$/;"	l
ffff800000103b5e	kernel.asm	/^ffff800000103b5e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000103b62	kernel.asm	/^ffff800000103b62:	8b 00                	mov    (%rax),%eax$/;"	l
ffff800000103b64	kernel.asm	/^ffff800000103b64:	83 e0 fb             	and    $0xfffffffb,%eax$/;"	l
ffff800000103b67	kernel.asm	/^ffff800000103b67:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000103b69	kernel.asm	/^ffff800000103b69:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000103b6d	kernel.asm	/^ffff800000103b6d:	89 10                	mov    %edx,(%rax)$/;"	l
ffff800000103b6f	kernel.asm	/^ffff800000103b6f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000103b73	kernel.asm	/^ffff800000103b73:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000103b76	kernel.asm	/^ffff800000103b76:	48 b8 8b 6d 10 00 00 	movabs $0xffff800000106d8b,%rax$/;"	l
ffff800000103b7d	kernel.asm	/^ffff800000103b7d:	80 ff ff $/;"	l
ffff800000103b80	kernel.asm	/^ffff800000103b80:	ff d0                	callq  *%rax$/;"	l
ffff800000103b82	kernel.asm	/^ffff800000103b82:	48 b8 28 71 11 00 00 	movabs $0xffff800000117128,%rax$/;"	l
ffff800000103b89	kernel.asm	/^ffff800000103b89:	80 ff ff $/;"	l
ffff800000103b8c	kernel.asm	/^ffff800000103b8c:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff800000103b8f	kernel.asm	/^ffff800000103b8f:	48 85 c0             	test   %rax,%rax$/;"	l
ffff800000103b92	kernel.asm	/^ffff800000103b92:	74 1c                	je     ffff800000103bb0 <ideintr+0x111>$/;"	l
ffff800000103b94	kernel.asm	/^ffff800000103b94:	48 b8 28 71 11 00 00 	movabs $0xffff800000117128,%rax$/;"	l
ffff800000103b9b	kernel.asm	/^ffff800000103b9b:	80 ff ff $/;"	l
ffff800000103b9e	kernel.asm	/^ffff800000103b9e:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff800000103ba1	kernel.asm	/^ffff800000103ba1:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000103ba4	kernel.asm	/^ffff800000103ba4:	48 b8 ca 38 10 00 00 	movabs $0xffff8000001038ca,%rax$/;"	l
ffff800000103bab	kernel.asm	/^ffff800000103bab:	80 ff ff $/;"	l
ffff800000103bae	kernel.asm	/^ffff800000103bae:	ff d0                	callq  *%rax$/;"	l
ffff800000103bb0	kernel.asm	/^ffff800000103bb0:	48 bf c0 70 11 00 00 	movabs $0xffff8000001170c0,%rdi$/;"	l
ffff800000103bb7	kernel.asm	/^ffff800000103bb7:	80 ff ff $/;"	l
ffff800000103bba	kernel.asm	/^ffff800000103bba:	48 b8 98 72 10 00 00 	movabs $0xffff800000107298,%rax$/;"	l
ffff800000103bc1	kernel.asm	/^ffff800000103bc1:	80 ff ff $/;"	l
ffff800000103bc4	kernel.asm	/^ffff800000103bc4:	ff d0                	callq  *%rax$/;"	l
ffff800000103bc6	kernel.asm	/^ffff800000103bc6:	c9                   	leaveq $/;"	l
ffff800000103bc7	kernel.asm	/^ffff800000103bc7:	c3                   	retq   $/;"	l
ffff800000103bc8	kernel.asm	/^ffff800000103bc8 <iderw>:$/;"	l
ffff800000103bc8	kernel.asm	/^ffff800000103bc8:	55                   	push   %rbp$/;"	l
ffff800000103bc9	kernel.asm	/^ffff800000103bc9:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000103bcc	kernel.asm	/^ffff800000103bcc:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ffff800000103bd0	kernel.asm	/^ffff800000103bd0:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
ffff800000103bd4	kernel.asm	/^ffff800000103bd4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000103bd8	kernel.asm	/^ffff800000103bd8:	48 83 c0 10          	add    $0x10,%rax$/;"	l
ffff800000103bdc	kernel.asm	/^ffff800000103bdc:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000103bdf	kernel.asm	/^ffff800000103bdf:	48 b8 37 71 10 00 00 	movabs $0xffff800000107137,%rax$/;"	l
ffff800000103be6	kernel.asm	/^ffff800000103be6:	80 ff ff $/;"	l
ffff800000103be9	kernel.asm	/^ffff800000103be9:	ff d0                	callq  *%rax$/;"	l
ffff800000103beb	kernel.asm	/^ffff800000103beb:	85 c0                	test   %eax,%eax$/;"	l
ffff800000103bed	kernel.asm	/^ffff800000103bed:	75 16                	jne    ffff800000103c05 <iderw+0x3d>$/;"	l
ffff800000103bef	kernel.asm	/^ffff800000103bef:	48 bf b9 bb 10 00 00 	movabs $0xffff80000010bbb9,%rdi$/;"	l
ffff800000103bf6	kernel.asm	/^ffff800000103bf6:	80 ff ff $/;"	l
ffff800000103bf9	kernel.asm	/^ffff800000103bf9:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff800000103c00	kernel.asm	/^ffff800000103c00:	80 ff ff $/;"	l
ffff800000103c03	kernel.asm	/^ffff800000103c03:	ff d0                	callq  *%rax$/;"	l
ffff800000103c05	kernel.asm	/^ffff800000103c05:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000103c09	kernel.asm	/^ffff800000103c09:	8b 00                	mov    (%rax),%eax$/;"	l
ffff800000103c0b	kernel.asm	/^ffff800000103c0b:	83 e0 06             	and    $0x6,%eax$/;"	l
ffff800000103c0e	kernel.asm	/^ffff800000103c0e:	83 f8 02             	cmp    $0x2,%eax$/;"	l
ffff800000103c11	kernel.asm	/^ffff800000103c11:	75 16                	jne    ffff800000103c29 <iderw+0x61>$/;"	l
ffff800000103c13	kernel.asm	/^ffff800000103c13:	48 bf cf bb 10 00 00 	movabs $0xffff80000010bbcf,%rdi$/;"	l
ffff800000103c1a	kernel.asm	/^ffff800000103c1a:	80 ff ff $/;"	l
ffff800000103c1d	kernel.asm	/^ffff800000103c1d:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff800000103c24	kernel.asm	/^ffff800000103c24:	80 ff ff $/;"	l
ffff800000103c27	kernel.asm	/^ffff800000103c27:	ff d0                	callq  *%rax$/;"	l
ffff800000103c29	kernel.asm	/^ffff800000103c29:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000103c2d	kernel.asm	/^ffff800000103c2d:	8b 40 04             	mov    0x4(%rax),%eax$/;"	l
ffff800000103c30	kernel.asm	/^ffff800000103c30:	85 c0                	test   %eax,%eax$/;"	l
ffff800000103c32	kernel.asm	/^ffff800000103c32:	74 26                	je     ffff800000103c5a <iderw+0x92>$/;"	l
ffff800000103c34	kernel.asm	/^ffff800000103c34:	48 b8 30 71 11 00 00 	movabs $0xffff800000117130,%rax$/;"	l
ffff800000103c3b	kernel.asm	/^ffff800000103c3b:	80 ff ff $/;"	l
ffff800000103c3e	kernel.asm	/^ffff800000103c3e:	8b 00                	mov    (%rax),%eax$/;"	l
ffff800000103c40	kernel.asm	/^ffff800000103c40:	85 c0                	test   %eax,%eax$/;"	l
ffff800000103c42	kernel.asm	/^ffff800000103c42:	75 16                	jne    ffff800000103c5a <iderw+0x92>$/;"	l
ffff800000103c44	kernel.asm	/^ffff800000103c44:	48 bf e4 bb 10 00 00 	movabs $0xffff80000010bbe4,%rdi$/;"	l
ffff800000103c4b	kernel.asm	/^ffff800000103c4b:	80 ff ff $/;"	l
ffff800000103c4e	kernel.asm	/^ffff800000103c4e:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff800000103c55	kernel.asm	/^ffff800000103c55:	80 ff ff $/;"	l
ffff800000103c58	kernel.asm	/^ffff800000103c58:	ff d0                	callq  *%rax$/;"	l
ffff800000103c5a	kernel.asm	/^ffff800000103c5a:	48 bf c0 70 11 00 00 	movabs $0xffff8000001170c0,%rdi$/;"	l
ffff800000103c61	kernel.asm	/^ffff800000103c61:	80 ff ff $/;"	l
ffff800000103c64	kernel.asm	/^ffff800000103c64:	48 b8 ff 71 10 00 00 	movabs $0xffff8000001071ff,%rax$/;"	l
ffff800000103c6b	kernel.asm	/^ffff800000103c6b:	80 ff ff $/;"	l
ffff800000103c6e	kernel.asm	/^ffff800000103c6e:	ff d0                	callq  *%rax$/;"	l
ffff800000103c70	kernel.asm	/^ffff800000103c70:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000103c74	kernel.asm	/^ffff800000103c74:	48 c7 80 a8 00 00 00 	movq   $0x0,0xa8(%rax)$/;"	l
ffff800000103c7b	kernel.asm	/^ffff800000103c7b:	00 00 00 00 $/;"	l
ffff800000103c7f	kernel.asm	/^ffff800000103c7f:	48 b8 28 71 11 00 00 	movabs $0xffff800000117128,%rax$/;"	l
ffff800000103c86	kernel.asm	/^ffff800000103c86:	80 ff ff $/;"	l
ffff800000103c89	kernel.asm	/^ffff800000103c89:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff800000103c8d	kernel.asm	/^ffff800000103c8d:	eb 11                	jmp    ffff800000103ca0 <iderw+0xd8>$/;"	l
ffff800000103c8f	kernel.asm	/^ffff800000103c8f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000103c93	kernel.asm	/^ffff800000103c93:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff800000103c96	kernel.asm	/^ffff800000103c96:	48 05 a8 00 00 00    	add    $0xa8,%rax$/;"	l
ffff800000103c9c	kernel.asm	/^ffff800000103c9c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff800000103ca0	kernel.asm	/^ffff800000103ca0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000103ca4	kernel.asm	/^ffff800000103ca4:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff800000103ca7	kernel.asm	/^ffff800000103ca7:	48 85 c0             	test   %rax,%rax$/;"	l
ffff800000103caa	kernel.asm	/^ffff800000103caa:	75 e3                	jne    ffff800000103c8f <iderw+0xc7>$/;"	l
ffff800000103cac	kernel.asm	/^ffff800000103cac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000103cb0	kernel.asm	/^ffff800000103cb0:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx$/;"	l
ffff800000103cb4	kernel.asm	/^ffff800000103cb4:	48 89 10             	mov    %rdx,(%rax)$/;"	l
ffff800000103cb7	kernel.asm	/^ffff800000103cb7:	48 b8 28 71 11 00 00 	movabs $0xffff800000117128,%rax$/;"	l
ffff800000103cbe	kernel.asm	/^ffff800000103cbe:	80 ff ff $/;"	l
ffff800000103cc1	kernel.asm	/^ffff800000103cc1:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff800000103cc4	kernel.asm	/^ffff800000103cc4:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax$/;"	l
ffff800000103cc8	kernel.asm	/^ffff800000103cc8:	75 32                	jne    ffff800000103cfc <iderw+0x134>$/;"	l
ffff800000103cca	kernel.asm	/^ffff800000103cca:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000103cce	kernel.asm	/^ffff800000103cce:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000103cd1	kernel.asm	/^ffff800000103cd1:	48 b8 ca 38 10 00 00 	movabs $0xffff8000001038ca,%rax$/;"	l
ffff800000103cd8	kernel.asm	/^ffff800000103cd8:	80 ff ff $/;"	l
ffff800000103cdb	kernel.asm	/^ffff800000103cdb:	ff d0                	callq  *%rax$/;"	l
ffff800000103cdd	kernel.asm	/^ffff800000103cdd:	eb 1d                	jmp    ffff800000103cfc <iderw+0x134>$/;"	l
ffff800000103cdf	kernel.asm	/^ffff800000103cdf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000103ce3	kernel.asm	/^ffff800000103ce3:	48 be c0 70 11 00 00 	movabs $0xffff8000001170c0,%rsi$/;"	l
ffff800000103cea	kernel.asm	/^ffff800000103cea:	80 ff ff $/;"	l
ffff800000103ced	kernel.asm	/^ffff800000103ced:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000103cf0	kernel.asm	/^ffff800000103cf0:	48 b8 23 6c 10 00 00 	movabs $0xffff800000106c23,%rax$/;"	l
ffff800000103cf7	kernel.asm	/^ffff800000103cf7:	80 ff ff $/;"	l
ffff800000103cfa	kernel.asm	/^ffff800000103cfa:	ff d0                	callq  *%rax$/;"	l
ffff800000103cfc	kernel.asm	/^ffff800000103cfc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000103d00	kernel.asm	/^ffff800000103d00:	8b 00                	mov    (%rax),%eax$/;"	l
ffff800000103d02	kernel.asm	/^ffff800000103d02:	83 e0 06             	and    $0x6,%eax$/;"	l
ffff800000103d05	kernel.asm	/^ffff800000103d05:	83 f8 02             	cmp    $0x2,%eax$/;"	l
ffff800000103d08	kernel.asm	/^ffff800000103d08:	75 d5                	jne    ffff800000103cdf <iderw+0x117>$/;"	l
ffff800000103d0a	kernel.asm	/^ffff800000103d0a:	48 bf c0 70 11 00 00 	movabs $0xffff8000001170c0,%rdi$/;"	l
ffff800000103d11	kernel.asm	/^ffff800000103d11:	80 ff ff $/;"	l
ffff800000103d14	kernel.asm	/^ffff800000103d14:	48 b8 98 72 10 00 00 	movabs $0xffff800000107298,%rax$/;"	l
ffff800000103d1b	kernel.asm	/^ffff800000103d1b:	80 ff ff $/;"	l
ffff800000103d1e	kernel.asm	/^ffff800000103d1e:	ff d0                	callq  *%rax$/;"	l
ffff800000103d20	kernel.asm	/^ffff800000103d20:	90                   	nop$/;"	l
ffff800000103d21	kernel.asm	/^ffff800000103d21:	c9                   	leaveq $/;"	l
ffff800000103d22	kernel.asm	/^ffff800000103d22:	c3                   	retq   $/;"	l
ffff800000103d23	kernel.asm	/^ffff800000103d23 <ioapicread>:$/;"	l
ffff800000103d23	kernel.asm	/^ffff800000103d23:	55                   	push   %rbp$/;"	l
ffff800000103d24	kernel.asm	/^ffff800000103d24:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000103d27	kernel.asm	/^ffff800000103d27:	48 83 ec 08          	sub    $0x8,%rsp$/;"	l
ffff800000103d2b	kernel.asm	/^ffff800000103d2b:	89 7d fc             	mov    %edi,-0x4(%rbp)$/;"	l
ffff800000103d2e	kernel.asm	/^ffff800000103d2e:	48 b8 38 71 11 00 00 	movabs $0xffff800000117138,%rax$/;"	l
ffff800000103d35	kernel.asm	/^ffff800000103d35:	80 ff ff $/;"	l
ffff800000103d38	kernel.asm	/^ffff800000103d38:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff800000103d3b	kernel.asm	/^ffff800000103d3b:	8b 55 fc             	mov    -0x4(%rbp),%edx$/;"	l
ffff800000103d3e	kernel.asm	/^ffff800000103d3e:	89 10                	mov    %edx,(%rax)$/;"	l
ffff800000103d40	kernel.asm	/^ffff800000103d40:	48 b8 38 71 11 00 00 	movabs $0xffff800000117138,%rax$/;"	l
ffff800000103d47	kernel.asm	/^ffff800000103d47:	80 ff ff $/;"	l
ffff800000103d4a	kernel.asm	/^ffff800000103d4a:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff800000103d4d	kernel.asm	/^ffff800000103d4d:	8b 40 10             	mov    0x10(%rax),%eax$/;"	l
ffff800000103d50	kernel.asm	/^ffff800000103d50:	c9                   	leaveq $/;"	l
ffff800000103d51	kernel.asm	/^ffff800000103d51:	c3                   	retq   $/;"	l
ffff800000103d52	kernel.asm	/^ffff800000103d52 <ioapicwrite>:$/;"	l
ffff800000103d52	kernel.asm	/^ffff800000103d52:	55                   	push   %rbp$/;"	l
ffff800000103d53	kernel.asm	/^ffff800000103d53:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000103d56	kernel.asm	/^ffff800000103d56:	48 83 ec 08          	sub    $0x8,%rsp$/;"	l
ffff800000103d5a	kernel.asm	/^ffff800000103d5a:	89 7d fc             	mov    %edi,-0x4(%rbp)$/;"	l
ffff800000103d5d	kernel.asm	/^ffff800000103d5d:	89 75 f8             	mov    %esi,-0x8(%rbp)$/;"	l
ffff800000103d60	kernel.asm	/^ffff800000103d60:	48 b8 38 71 11 00 00 	movabs $0xffff800000117138,%rax$/;"	l
ffff800000103d67	kernel.asm	/^ffff800000103d67:	80 ff ff $/;"	l
ffff800000103d6a	kernel.asm	/^ffff800000103d6a:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff800000103d6d	kernel.asm	/^ffff800000103d6d:	8b 55 fc             	mov    -0x4(%rbp),%edx$/;"	l
ffff800000103d70	kernel.asm	/^ffff800000103d70:	89 10                	mov    %edx,(%rax)$/;"	l
ffff800000103d72	kernel.asm	/^ffff800000103d72:	48 b8 38 71 11 00 00 	movabs $0xffff800000117138,%rax$/;"	l
ffff800000103d79	kernel.asm	/^ffff800000103d79:	80 ff ff $/;"	l
ffff800000103d7c	kernel.asm	/^ffff800000103d7c:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff800000103d7f	kernel.asm	/^ffff800000103d7f:	8b 55 f8             	mov    -0x8(%rbp),%edx$/;"	l
ffff800000103d82	kernel.asm	/^ffff800000103d82:	89 50 10             	mov    %edx,0x10(%rax)$/;"	l
ffff800000103d85	kernel.asm	/^ffff800000103d85:	90                   	nop$/;"	l
ffff800000103d86	kernel.asm	/^ffff800000103d86:	c9                   	leaveq $/;"	l
ffff800000103d87	kernel.asm	/^ffff800000103d87:	c3                   	retq   $/;"	l
ffff800000103d88	kernel.asm	/^ffff800000103d88 <ioapicinit>:$/;"	l
ffff800000103d88	kernel.asm	/^ffff800000103d88:	55                   	push   %rbp$/;"	l
ffff800000103d89	kernel.asm	/^ffff800000103d89:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000103d8c	kernel.asm	/^ffff800000103d8c:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff800000103d90	kernel.asm	/^ffff800000103d90:	48 b8 38 71 11 00 00 	movabs $0xffff800000117138,%rax$/;"	l
ffff800000103d97	kernel.asm	/^ffff800000103d97:	80 ff ff $/;"	l
ffff800000103d9a	kernel.asm	/^ffff800000103d9a:	48 b9 00 00 c0 fe 00 	movabs $0xffff8000fec00000,%rcx$/;"	l
ffff800000103da1	kernel.asm	/^ffff800000103da1:	80 ff ff $/;"	l
ffff800000103da4	kernel.asm	/^ffff800000103da4:	48 89 08             	mov    %rcx,(%rax)$/;"	l
ffff800000103da7	kernel.asm	/^ffff800000103da7:	bf 01 00 00 00       	mov    $0x1,%edi$/;"	l
ffff800000103dac	kernel.asm	/^ffff800000103dac:	48 b8 23 3d 10 00 00 	movabs $0xffff800000103d23,%rax$/;"	l
ffff800000103db3	kernel.asm	/^ffff800000103db3:	80 ff ff $/;"	l
ffff800000103db6	kernel.asm	/^ffff800000103db6:	ff d0                	callq  *%rax$/;"	l
ffff800000103db8	kernel.asm	/^ffff800000103db8:	c1 e8 10             	shr    $0x10,%eax$/;"	l
ffff800000103dbb	kernel.asm	/^ffff800000103dbb:	25 ff 00 00 00       	and    $0xff,%eax$/;"	l
ffff800000103dc0	kernel.asm	/^ffff800000103dc0:	89 45 f8             	mov    %eax,-0x8(%rbp)$/;"	l
ffff800000103dc3	kernel.asm	/^ffff800000103dc3:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
ffff800000103dc8	kernel.asm	/^ffff800000103dc8:	48 b8 23 3d 10 00 00 	movabs $0xffff800000103d23,%rax$/;"	l
ffff800000103dcf	kernel.asm	/^ffff800000103dcf:	80 ff ff $/;"	l
ffff800000103dd2	kernel.asm	/^ffff800000103dd2:	ff d0                	callq  *%rax$/;"	l
ffff800000103dd4	kernel.asm	/^ffff800000103dd4:	c1 e8 18             	shr    $0x18,%eax$/;"	l
ffff800000103dd7	kernel.asm	/^ffff800000103dd7:	89 45 f4             	mov    %eax,-0xc(%rbp)$/;"	l
ffff800000103dda	kernel.asm	/^ffff800000103dda:	48 b8 a4 7a 11 00 00 	movabs $0xffff800000117aa4,%rax$/;"	l
ffff800000103de1	kernel.asm	/^ffff800000103de1:	80 ff ff $/;"	l
ffff800000103de4	kernel.asm	/^ffff800000103de4:	0f b6 00             	movzbl (%rax),%eax$/;"	l
ffff800000103de7	kernel.asm	/^ffff800000103de7:	0f b6 c0             	movzbl %al,%eax$/;"	l
ffff800000103dea	kernel.asm	/^ffff800000103dea:	3b 45 f4             	cmp    -0xc(%rbp),%eax$/;"	l
ffff800000103ded	kernel.asm	/^ffff800000103ded:	74 1b                	je     ffff800000103e0a <ioapicinit+0x82>$/;"	l
ffff800000103def	kernel.asm	/^ffff800000103def:	48 bf 08 bc 10 00 00 	movabs $0xffff80000010bc08,%rdi$/;"	l
ffff800000103df6	kernel.asm	/^ffff800000103df6:	80 ff ff $/;"	l
ffff800000103df9	kernel.asm	/^ffff800000103df9:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000103dfe	kernel.asm	/^ffff800000103dfe:	48 ba ac 07 10 00 00 	movabs $0xffff8000001007ac,%rdx$/;"	l
ffff800000103e05	kernel.asm	/^ffff800000103e05:	80 ff ff $/;"	l
ffff800000103e08	kernel.asm	/^ffff800000103e08:	ff d2                	callq  *%rdx$/;"	l
ffff800000103e0a	kernel.asm	/^ffff800000103e0a:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)$/;"	l
ffff800000103e11	kernel.asm	/^ffff800000103e11:	eb 47                	jmp    ffff800000103e5a <ioapicinit+0xd2>$/;"	l
ffff800000103e13	kernel.asm	/^ffff800000103e13:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff800000103e16	kernel.asm	/^ffff800000103e16:	83 c0 20             	add    $0x20,%eax$/;"	l
ffff800000103e19	kernel.asm	/^ffff800000103e19:	0d 00 00 01 00       	or     $0x10000,%eax$/;"	l
ffff800000103e1e	kernel.asm	/^ffff800000103e1e:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000103e20	kernel.asm	/^ffff800000103e20:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff800000103e23	kernel.asm	/^ffff800000103e23:	83 c0 08             	add    $0x8,%eax$/;"	l
ffff800000103e26	kernel.asm	/^ffff800000103e26:	01 c0                	add    %eax,%eax$/;"	l
ffff800000103e28	kernel.asm	/^ffff800000103e28:	89 d6                	mov    %edx,%esi$/;"	l
ffff800000103e2a	kernel.asm	/^ffff800000103e2a:	89 c7                	mov    %eax,%edi$/;"	l
ffff800000103e2c	kernel.asm	/^ffff800000103e2c:	48 b8 52 3d 10 00 00 	movabs $0xffff800000103d52,%rax$/;"	l
ffff800000103e33	kernel.asm	/^ffff800000103e33:	80 ff ff $/;"	l
ffff800000103e36	kernel.asm	/^ffff800000103e36:	ff d0                	callq  *%rax$/;"	l
ffff800000103e38	kernel.asm	/^ffff800000103e38:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff800000103e3b	kernel.asm	/^ffff800000103e3b:	83 c0 08             	add    $0x8,%eax$/;"	l
ffff800000103e3e	kernel.asm	/^ffff800000103e3e:	01 c0                	add    %eax,%eax$/;"	l
ffff800000103e40	kernel.asm	/^ffff800000103e40:	83 c0 01             	add    $0x1,%eax$/;"	l
ffff800000103e43	kernel.asm	/^ffff800000103e43:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffff800000103e48	kernel.asm	/^ffff800000103e48:	89 c7                	mov    %eax,%edi$/;"	l
ffff800000103e4a	kernel.asm	/^ffff800000103e4a:	48 b8 52 3d 10 00 00 	movabs $0xffff800000103d52,%rax$/;"	l
ffff800000103e51	kernel.asm	/^ffff800000103e51:	80 ff ff $/;"	l
ffff800000103e54	kernel.asm	/^ffff800000103e54:	ff d0                	callq  *%rax$/;"	l
ffff800000103e56	kernel.asm	/^ffff800000103e56:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)$/;"	l
ffff800000103e5a	kernel.asm	/^ffff800000103e5a:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff800000103e5d	kernel.asm	/^ffff800000103e5d:	3b 45 f8             	cmp    -0x8(%rbp),%eax$/;"	l
ffff800000103e60	kernel.asm	/^ffff800000103e60:	7e b1                	jle    ffff800000103e13 <ioapicinit+0x8b>$/;"	l
ffff800000103e62	kernel.asm	/^ffff800000103e62:	90                   	nop$/;"	l
ffff800000103e63	kernel.asm	/^ffff800000103e63:	c9                   	leaveq $/;"	l
ffff800000103e64	kernel.asm	/^ffff800000103e64:	c3                   	retq   $/;"	l
ffff800000103e65	kernel.asm	/^ffff800000103e65 <ioapicenable>:$/;"	l
ffff800000103e65	kernel.asm	/^ffff800000103e65:	55                   	push   %rbp$/;"	l
ffff800000103e66	kernel.asm	/^ffff800000103e66:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000103e69	kernel.asm	/^ffff800000103e69:	48 83 ec 08          	sub    $0x8,%rsp$/;"	l
ffff800000103e6d	kernel.asm	/^ffff800000103e6d:	89 7d fc             	mov    %edi,-0x4(%rbp)$/;"	l
ffff800000103e70	kernel.asm	/^ffff800000103e70:	89 75 f8             	mov    %esi,-0x8(%rbp)$/;"	l
ffff800000103e73	kernel.asm	/^ffff800000103e73:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff800000103e76	kernel.asm	/^ffff800000103e76:	83 c0 20             	add    $0x20,%eax$/;"	l
ffff800000103e79	kernel.asm	/^ffff800000103e79:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000103e7b	kernel.asm	/^ffff800000103e7b:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff800000103e7e	kernel.asm	/^ffff800000103e7e:	83 c0 08             	add    $0x8,%eax$/;"	l
ffff800000103e81	kernel.asm	/^ffff800000103e81:	01 c0                	add    %eax,%eax$/;"	l
ffff800000103e83	kernel.asm	/^ffff800000103e83:	89 d6                	mov    %edx,%esi$/;"	l
ffff800000103e85	kernel.asm	/^ffff800000103e85:	89 c7                	mov    %eax,%edi$/;"	l
ffff800000103e87	kernel.asm	/^ffff800000103e87:	48 b8 52 3d 10 00 00 	movabs $0xffff800000103d52,%rax$/;"	l
ffff800000103e8e	kernel.asm	/^ffff800000103e8e:	80 ff ff $/;"	l
ffff800000103e91	kernel.asm	/^ffff800000103e91:	ff d0                	callq  *%rax$/;"	l
ffff800000103e93	kernel.asm	/^ffff800000103e93:	8b 45 f8             	mov    -0x8(%rbp),%eax$/;"	l
ffff800000103e96	kernel.asm	/^ffff800000103e96:	c1 e0 18             	shl    $0x18,%eax$/;"	l
ffff800000103e99	kernel.asm	/^ffff800000103e99:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000103e9b	kernel.asm	/^ffff800000103e9b:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff800000103e9e	kernel.asm	/^ffff800000103e9e:	83 c0 08             	add    $0x8,%eax$/;"	l
ffff800000103ea1	kernel.asm	/^ffff800000103ea1:	01 c0                	add    %eax,%eax$/;"	l
ffff800000103ea3	kernel.asm	/^ffff800000103ea3:	83 c0 01             	add    $0x1,%eax$/;"	l
ffff800000103ea6	kernel.asm	/^ffff800000103ea6:	89 d6                	mov    %edx,%esi$/;"	l
ffff800000103ea8	kernel.asm	/^ffff800000103ea8:	89 c7                	mov    %eax,%edi$/;"	l
ffff800000103eaa	kernel.asm	/^ffff800000103eaa:	48 b8 52 3d 10 00 00 	movabs $0xffff800000103d52,%rax$/;"	l
ffff800000103eb1	kernel.asm	/^ffff800000103eb1:	80 ff ff $/;"	l
ffff800000103eb4	kernel.asm	/^ffff800000103eb4:	ff d0                	callq  *%rax$/;"	l
ffff800000103eb6	kernel.asm	/^ffff800000103eb6:	90                   	nop$/;"	l
ffff800000103eb7	kernel.asm	/^ffff800000103eb7:	c9                   	leaveq $/;"	l
ffff800000103eb8	kernel.asm	/^ffff800000103eb8:	c3                   	retq   $/;"	l
ffff800000103eb9	kernel.asm	/^ffff800000103eb9 <kinit1>:$/;"	l
ffff800000103eb9	kernel.asm	/^ffff800000103eb9:	55                   	push   %rbp$/;"	l
ffff800000103eba	kernel.asm	/^ffff800000103eba:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000103ebd	kernel.asm	/^ffff800000103ebd:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff800000103ec1	kernel.asm	/^ffff800000103ec1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)$/;"	l
ffff800000103ec5	kernel.asm	/^ffff800000103ec5:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)$/;"	l
ffff800000103ec9	kernel.asm	/^ffff800000103ec9:	48 be 3a bc 10 00 00 	movabs $0xffff80000010bc3a,%rsi$/;"	l
ffff800000103ed0	kernel.asm	/^ffff800000103ed0:	80 ff ff $/;"	l
ffff800000103ed3	kernel.asm	/^ffff800000103ed3:	48 bf 40 71 11 00 00 	movabs $0xffff800000117140,%rdi$/;"	l
ffff800000103eda	kernel.asm	/^ffff800000103eda:	80 ff ff $/;"	l
ffff800000103edd	kernel.asm	/^ffff800000103edd:	48 b8 ca 71 10 00 00 	movabs $0xffff8000001071ca,%rax$/;"	l
ffff800000103ee4	kernel.asm	/^ffff800000103ee4:	80 ff ff $/;"	l
ffff800000103ee7	kernel.asm	/^ffff800000103ee7:	ff d0                	callq  *%rax$/;"	l
ffff800000103ee9	kernel.asm	/^ffff800000103ee9:	48 b8 40 71 11 00 00 	movabs $0xffff800000117140,%rax$/;"	l
ffff800000103ef0	kernel.asm	/^ffff800000103ef0:	80 ff ff $/;"	l
ffff800000103ef3	kernel.asm	/^ffff800000103ef3:	c7 40 68 00 00 00 00 	movl   $0x0,0x68(%rax)$/;"	l
ffff800000103efa	kernel.asm	/^ffff800000103efa:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
ffff800000103efe	kernel.asm	/^ffff800000103efe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000103f02	kernel.asm	/^ffff800000103f02:	48 89 d6             	mov    %rdx,%rsi$/;"	l
ffff800000103f05	kernel.asm	/^ffff800000103f05:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000103f08	kernel.asm	/^ffff800000103f08:	48 b8 55 3f 10 00 00 	movabs $0xffff800000103f55,%rax$/;"	l
ffff800000103f0f	kernel.asm	/^ffff800000103f0f:	80 ff ff $/;"	l
ffff800000103f12	kernel.asm	/^ffff800000103f12:	ff d0                	callq  *%rax$/;"	l
ffff800000103f14	kernel.asm	/^ffff800000103f14:	90                   	nop$/;"	l
ffff800000103f15	kernel.asm	/^ffff800000103f15:	c9                   	leaveq $/;"	l
ffff800000103f16	kernel.asm	/^ffff800000103f16:	c3                   	retq   $/;"	l
ffff800000103f17	kernel.asm	/^ffff800000103f17 <kinit2>:$/;"	l
ffff800000103f17	kernel.asm	/^ffff800000103f17:	55                   	push   %rbp$/;"	l
ffff800000103f18	kernel.asm	/^ffff800000103f18:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000103f1b	kernel.asm	/^ffff800000103f1b:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff800000103f1f	kernel.asm	/^ffff800000103f1f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)$/;"	l
ffff800000103f23	kernel.asm	/^ffff800000103f23:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)$/;"	l
ffff800000103f27	kernel.asm	/^ffff800000103f27:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
ffff800000103f2b	kernel.asm	/^ffff800000103f2b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000103f2f	kernel.asm	/^ffff800000103f2f:	48 89 d6             	mov    %rdx,%rsi$/;"	l
ffff800000103f32	kernel.asm	/^ffff800000103f32:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000103f35	kernel.asm	/^ffff800000103f35:	48 b8 55 3f 10 00 00 	movabs $0xffff800000103f55,%rax$/;"	l
ffff800000103f3c	kernel.asm	/^ffff800000103f3c:	80 ff ff $/;"	l
ffff800000103f3f	kernel.asm	/^ffff800000103f3f:	ff d0                	callq  *%rax$/;"	l
ffff800000103f41	kernel.asm	/^ffff800000103f41:	48 b8 40 71 11 00 00 	movabs $0xffff800000117140,%rax$/;"	l
ffff800000103f48	kernel.asm	/^ffff800000103f48:	80 ff ff $/;"	l
ffff800000103f4b	kernel.asm	/^ffff800000103f4b:	c7 40 68 01 00 00 00 	movl   $0x1,0x68(%rax)$/;"	l
ffff800000103f52	kernel.asm	/^ffff800000103f52:	90                   	nop$/;"	l
ffff800000103f53	kernel.asm	/^ffff800000103f53:	c9                   	leaveq $/;"	l
ffff800000103f54	kernel.asm	/^ffff800000103f54:	c3                   	retq   $/;"	l
ffff800000103f55	kernel.asm	/^ffff800000103f55 <freerange>:$/;"	l
ffff800000103f55	kernel.asm	/^ffff800000103f55:	55                   	push   %rbp$/;"	l
ffff800000103f56	kernel.asm	/^ffff800000103f56:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000103f59	kernel.asm	/^ffff800000103f59:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ffff800000103f5d	kernel.asm	/^ffff800000103f5d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
ffff800000103f61	kernel.asm	/^ffff800000103f61:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)$/;"	l
ffff800000103f65	kernel.asm	/^ffff800000103f65:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000103f69	kernel.asm	/^ffff800000103f69:	48 05 ff 0f 00 00    	add    $0xfff,%rax$/;"	l
ffff800000103f6f	kernel.asm	/^ffff800000103f6f:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax$/;"	l
ffff800000103f75	kernel.asm	/^ffff800000103f75:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff800000103f79	kernel.asm	/^ffff800000103f79:	eb 1b                	jmp    ffff800000103f96 <freerange+0x41>$/;"	l
ffff800000103f7b	kernel.asm	/^ffff800000103f7b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000103f7f	kernel.asm	/^ffff800000103f7f:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000103f82	kernel.asm	/^ffff800000103f82:	48 b8 a9 3f 10 00 00 	movabs $0xffff800000103fa9,%rax$/;"	l
ffff800000103f89	kernel.asm	/^ffff800000103f89:	80 ff ff $/;"	l
ffff800000103f8c	kernel.asm	/^ffff800000103f8c:	ff d0                	callq  *%rax$/;"	l
ffff800000103f8e	kernel.asm	/^ffff800000103f8e:	48 81 45 f8 00 10 00 	addq   $0x1000,-0x8(%rbp)$/;"	l
ffff800000103f95	kernel.asm	/^ffff800000103f95:	00 $/;"	l
ffff800000103f96	kernel.asm	/^ffff800000103f96:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000103f9a	kernel.asm	/^ffff800000103f9a:	48 05 00 10 00 00    	add    $0x1000,%rax$/;"	l
ffff800000103fa0	kernel.asm	/^ffff800000103fa0:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax$/;"	l
ffff800000103fa4	kernel.asm	/^ffff800000103fa4:	76 d5                	jbe    ffff800000103f7b <freerange+0x26>$/;"	l
ffff800000103fa6	kernel.asm	/^ffff800000103fa6:	90                   	nop$/;"	l
ffff800000103fa7	kernel.asm	/^ffff800000103fa7:	c9                   	leaveq $/;"	l
ffff800000103fa8	kernel.asm	/^ffff800000103fa8:	c3                   	retq   $/;"	l
ffff800000103fa9	kernel.asm	/^ffff800000103fa9 <kfree>:$/;"	l
ffff800000103fa9	kernel.asm	/^ffff800000103fa9:	55                   	push   %rbp$/;"	l
ffff800000103faa	kernel.asm	/^ffff800000103faa:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000103fad	kernel.asm	/^ffff800000103fad:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ffff800000103fb1	kernel.asm	/^ffff800000103fb1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
ffff800000103fb5	kernel.asm	/^ffff800000103fb5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000103fb9	kernel.asm	/^ffff800000103fb9:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
ffff800000103fbe	kernel.asm	/^ffff800000103fbe:	48 85 c0             	test   %rax,%rax$/;"	l
ffff800000103fc1	kernel.asm	/^ffff800000103fc1:	75 29                	jne    ffff800000103fec <kfree+0x43>$/;"	l
ffff800000103fc3	kernel.asm	/^ffff800000103fc3:	48 b8 00 c0 11 00 00 	movabs $0xffff80000011c000,%rax$/;"	l
ffff800000103fca	kernel.asm	/^ffff800000103fca:	80 ff ff $/;"	l
ffff800000103fcd	kernel.asm	/^ffff800000103fcd:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)$/;"	l
ffff800000103fd1	kernel.asm	/^ffff800000103fd1:	72 19                	jb     ffff800000103fec <kfree+0x43>$/;"	l
ffff800000103fd3	kernel.asm	/^ffff800000103fd3:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx$/;"	l
ffff800000103fd7	kernel.asm	/^ffff800000103fd7:	48 b8 00 00 00 00 00 	movabs $0x800000000000,%rax$/;"	l
ffff800000103fde	kernel.asm	/^ffff800000103fde:	80 00 00 $/;"	l
ffff800000103fe1	kernel.asm	/^ffff800000103fe1:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff800000103fe4	kernel.asm	/^ffff800000103fe4:	48 3d ff ff ff 0d    	cmp    $0xdffffff,%rax$/;"	l
ffff800000103fea	kernel.asm	/^ffff800000103fea:	76 16                	jbe    ffff800000104002 <kfree+0x59>$/;"	l
ffff800000103fec	kernel.asm	/^ffff800000103fec:	48 bf 3f bc 10 00 00 	movabs $0xffff80000010bc3f,%rdi$/;"	l
ffff800000103ff3	kernel.asm	/^ffff800000103ff3:	80 ff ff $/;"	l
ffff800000103ff6	kernel.asm	/^ffff800000103ff6:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff800000103ffd	kernel.asm	/^ffff800000103ffd:	80 ff ff $/;"	l
ffff800000104000	kernel.asm	/^ffff800000104000:	ff d0                	callq  *%rax$/;"	l
ffff800000104002	kernel.asm	/^ffff800000104002:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000104006	kernel.asm	/^ffff800000104006:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
ffff80000010400b	kernel.asm	/^ffff80000010400b:	be 01 00 00 00       	mov    $0x1,%esi$/;"	l
ffff800000104010	kernel.asm	/^ffff800000104010:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000104013	kernel.asm	/^ffff800000104013:	48 b8 9b 75 10 00 00 	movabs $0xffff80000010759b,%rax$/;"	l
ffff80000010401a	kernel.asm	/^ffff80000010401a:	80 ff ff $/;"	l
ffff80000010401d	kernel.asm	/^ffff80000010401d:	ff d0                	callq  *%rax$/;"	l
ffff80000010401f	kernel.asm	/^ffff80000010401f:	48 b8 40 71 11 00 00 	movabs $0xffff800000117140,%rax$/;"	l
ffff800000104026	kernel.asm	/^ffff800000104026:	80 ff ff $/;"	l
ffff800000104029	kernel.asm	/^ffff800000104029:	8b 40 68             	mov    0x68(%rax),%eax$/;"	l
ffff80000010402c	kernel.asm	/^ffff80000010402c:	85 c0                	test   %eax,%eax$/;"	l
ffff80000010402e	kernel.asm	/^ffff80000010402e:	74 16                	je     ffff800000104046 <kfree+0x9d>$/;"	l
ffff800000104030	kernel.asm	/^ffff800000104030:	48 bf 40 71 11 00 00 	movabs $0xffff800000117140,%rdi$/;"	l
ffff800000104037	kernel.asm	/^ffff800000104037:	80 ff ff $/;"	l
ffff80000010403a	kernel.asm	/^ffff80000010403a:	48 b8 ff 71 10 00 00 	movabs $0xffff8000001071ff,%rax$/;"	l
ffff800000104041	kernel.asm	/^ffff800000104041:	80 ff ff $/;"	l
ffff800000104044	kernel.asm	/^ffff800000104044:	ff d0                	callq  *%rax$/;"	l
ffff800000104046	kernel.asm	/^ffff800000104046:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010404a	kernel.asm	/^ffff80000010404a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff80000010404e	kernel.asm	/^ffff80000010404e:	48 b8 40 71 11 00 00 	movabs $0xffff800000117140,%rax$/;"	l
ffff800000104055	kernel.asm	/^ffff800000104055:	80 ff ff $/;"	l
ffff800000104058	kernel.asm	/^ffff800000104058:	48 8b 50 70          	mov    0x70(%rax),%rdx$/;"	l
ffff80000010405c	kernel.asm	/^ffff80000010405c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000104060	kernel.asm	/^ffff800000104060:	48 89 10             	mov    %rdx,(%rax)$/;"	l
ffff800000104063	kernel.asm	/^ffff800000104063:	48 b8 40 71 11 00 00 	movabs $0xffff800000117140,%rax$/;"	l
ffff80000010406a	kernel.asm	/^ffff80000010406a:	80 ff ff $/;"	l
ffff80000010406d	kernel.asm	/^ffff80000010406d:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx$/;"	l
ffff800000104071	kernel.asm	/^ffff800000104071:	48 89 50 70          	mov    %rdx,0x70(%rax)$/;"	l
ffff800000104075	kernel.asm	/^ffff800000104075:	48 b8 40 71 11 00 00 	movabs $0xffff800000117140,%rax$/;"	l
ffff80000010407c	kernel.asm	/^ffff80000010407c:	80 ff ff $/;"	l
ffff80000010407f	kernel.asm	/^ffff80000010407f:	8b 40 68             	mov    0x68(%rax),%eax$/;"	l
ffff800000104082	kernel.asm	/^ffff800000104082:	85 c0                	test   %eax,%eax$/;"	l
ffff800000104084	kernel.asm	/^ffff800000104084:	74 16                	je     ffff80000010409c <kfree+0xf3>$/;"	l
ffff800000104086	kernel.asm	/^ffff800000104086:	48 bf 40 71 11 00 00 	movabs $0xffff800000117140,%rdi$/;"	l
ffff80000010408d	kernel.asm	/^ffff80000010408d:	80 ff ff $/;"	l
ffff800000104090	kernel.asm	/^ffff800000104090:	48 b8 98 72 10 00 00 	movabs $0xffff800000107298,%rax$/;"	l
ffff800000104097	kernel.asm	/^ffff800000104097:	80 ff ff $/;"	l
ffff80000010409a	kernel.asm	/^ffff80000010409a:	ff d0                	callq  *%rax$/;"	l
ffff80000010409c	kernel.asm	/^ffff80000010409c:	90                   	nop$/;"	l
ffff80000010409d	kernel.asm	/^ffff80000010409d:	c9                   	leaveq $/;"	l
ffff80000010409e	kernel.asm	/^ffff80000010409e:	c3                   	retq   $/;"	l
ffff80000010409f	kernel.asm	/^ffff80000010409f <kalloc>:$/;"	l
ffff80000010409f	kernel.asm	/^ffff80000010409f:	55                   	push   %rbp$/;"	l
ffff8000001040a0	kernel.asm	/^ffff8000001040a0:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff8000001040a3	kernel.asm	/^ffff8000001040a3:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff8000001040a7	kernel.asm	/^ffff8000001040a7:	48 b8 40 71 11 00 00 	movabs $0xffff800000117140,%rax$/;"	l
ffff8000001040ae	kernel.asm	/^ffff8000001040ae:	80 ff ff $/;"	l
ffff8000001040b1	kernel.asm	/^ffff8000001040b1:	8b 40 68             	mov    0x68(%rax),%eax$/;"	l
ffff8000001040b4	kernel.asm	/^ffff8000001040b4:	85 c0                	test   %eax,%eax$/;"	l
ffff8000001040b6	kernel.asm	/^ffff8000001040b6:	74 16                	je     ffff8000001040ce <kalloc+0x2f>$/;"	l
ffff8000001040b8	kernel.asm	/^ffff8000001040b8:	48 bf 40 71 11 00 00 	movabs $0xffff800000117140,%rdi$/;"	l
ffff8000001040bf	kernel.asm	/^ffff8000001040bf:	80 ff ff $/;"	l
ffff8000001040c2	kernel.asm	/^ffff8000001040c2:	48 b8 ff 71 10 00 00 	movabs $0xffff8000001071ff,%rax$/;"	l
ffff8000001040c9	kernel.asm	/^ffff8000001040c9:	80 ff ff $/;"	l
ffff8000001040cc	kernel.asm	/^ffff8000001040cc:	ff d0                	callq  *%rax$/;"	l
ffff8000001040ce	kernel.asm	/^ffff8000001040ce:	48 b8 40 71 11 00 00 	movabs $0xffff800000117140,%rax$/;"	l
ffff8000001040d5	kernel.asm	/^ffff8000001040d5:	80 ff ff $/;"	l
ffff8000001040d8	kernel.asm	/^ffff8000001040d8:	48 8b 40 70          	mov    0x70(%rax),%rax$/;"	l
ffff8000001040dc	kernel.asm	/^ffff8000001040dc:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff8000001040e0	kernel.asm	/^ffff8000001040e0:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)$/;"	l
ffff8000001040e5	kernel.asm	/^ffff8000001040e5:	74 15                	je     ffff8000001040fc <kalloc+0x5d>$/;"	l
ffff8000001040e7	kernel.asm	/^ffff8000001040e7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001040eb	kernel.asm	/^ffff8000001040eb:	48 8b 10             	mov    (%rax),%rdx$/;"	l
ffff8000001040ee	kernel.asm	/^ffff8000001040ee:	48 b8 40 71 11 00 00 	movabs $0xffff800000117140,%rax$/;"	l
ffff8000001040f5	kernel.asm	/^ffff8000001040f5:	80 ff ff $/;"	l
ffff8000001040f8	kernel.asm	/^ffff8000001040f8:	48 89 50 70          	mov    %rdx,0x70(%rax)$/;"	l
ffff8000001040fc	kernel.asm	/^ffff8000001040fc:	48 b8 40 71 11 00 00 	movabs $0xffff800000117140,%rax$/;"	l
ffff800000104103	kernel.asm	/^ffff800000104103:	80 ff ff $/;"	l
ffff800000104106	kernel.asm	/^ffff800000104106:	8b 40 68             	mov    0x68(%rax),%eax$/;"	l
ffff800000104109	kernel.asm	/^ffff800000104109:	85 c0                	test   %eax,%eax$/;"	l
ffff80000010410b	kernel.asm	/^ffff80000010410b:	74 16                	je     ffff800000104123 <kalloc+0x84>$/;"	l
ffff80000010410d	kernel.asm	/^ffff80000010410d:	48 bf 40 71 11 00 00 	movabs $0xffff800000117140,%rdi$/;"	l
ffff800000104114	kernel.asm	/^ffff800000104114:	80 ff ff $/;"	l
ffff800000104117	kernel.asm	/^ffff800000104117:	48 b8 98 72 10 00 00 	movabs $0xffff800000107298,%rax$/;"	l
ffff80000010411e	kernel.asm	/^ffff80000010411e:	80 ff ff $/;"	l
ffff800000104121	kernel.asm	/^ffff800000104121:	ff d0                	callq  *%rax$/;"	l
ffff800000104123	kernel.asm	/^ffff800000104123:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000104127	kernel.asm	/^ffff800000104127:	c9                   	leaveq $/;"	l
ffff800000104128	kernel.asm	/^ffff800000104128:	c3                   	retq   $/;"	l
ffff800000104129	kernel.asm	/^ffff800000104129 <inb>:$/;"	l
ffff800000104129	kernel.asm	/^ffff800000104129:	55                   	push   %rbp$/;"	l
ffff80000010412a	kernel.asm	/^ffff80000010412a:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010412d	kernel.asm	/^ffff80000010412d:	48 83 ec 18          	sub    $0x18,%rsp$/;"	l
ffff800000104131	kernel.asm	/^ffff800000104131:	89 f8                	mov    %edi,%eax$/;"	l
ffff800000104133	kernel.asm	/^ffff800000104133:	66 89 45 ec          	mov    %ax,-0x14(%rbp)$/;"	l
ffff800000104137	kernel.asm	/^ffff800000104137:	0f b7 45 ec          	movzwl -0x14(%rbp),%eax$/;"	l
ffff80000010413b	kernel.asm	/^ffff80000010413b:	89 c2                	mov    %eax,%edx$/;"	l
ffff80000010413d	kernel.asm	/^ffff80000010413d:	ec                   	in     (%dx),%al$/;"	l
ffff80000010413e	kernel.asm	/^ffff80000010413e:	88 45 ff             	mov    %al,-0x1(%rbp)$/;"	l
ffff800000104141	kernel.asm	/^ffff800000104141:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax$/;"	l
ffff800000104145	kernel.asm	/^ffff800000104145:	c9                   	leaveq $/;"	l
ffff800000104146	kernel.asm	/^ffff800000104146:	c3                   	retq   $/;"	l
ffff800000104147	kernel.asm	/^ffff800000104147 <kbdgetc>:$/;"	l
ffff800000104147	kernel.asm	/^ffff800000104147:	55                   	push   %rbp$/;"	l
ffff800000104148	kernel.asm	/^ffff800000104148:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010414b	kernel.asm	/^ffff80000010414b:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff80000010414f	kernel.asm	/^ffff80000010414f:	bf 64 00 00 00       	mov    $0x64,%edi$/;"	l
ffff800000104154	kernel.asm	/^ffff800000104154:	48 b8 29 41 10 00 00 	movabs $0xffff800000104129,%rax$/;"	l
ffff80000010415b	kernel.asm	/^ffff80000010415b:	80 ff ff $/;"	l
ffff80000010415e	kernel.asm	/^ffff80000010415e:	ff d0                	callq  *%rax$/;"	l
ffff800000104160	kernel.asm	/^ffff800000104160:	0f b6 c0             	movzbl %al,%eax$/;"	l
ffff800000104163	kernel.asm	/^ffff800000104163:	89 45 f4             	mov    %eax,-0xc(%rbp)$/;"	l
ffff800000104166	kernel.asm	/^ffff800000104166:	8b 45 f4             	mov    -0xc(%rbp),%eax$/;"	l
ffff800000104169	kernel.asm	/^ffff800000104169:	83 e0 01             	and    $0x1,%eax$/;"	l
ffff80000010416c	kernel.asm	/^ffff80000010416c:	85 c0                	test   %eax,%eax$/;"	l
ffff80000010416e	kernel.asm	/^ffff80000010416e:	75 0a                	jne    ffff80000010417a <kbdgetc+0x33>$/;"	l
ffff800000104170	kernel.asm	/^ffff800000104170:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff800000104175	kernel.asm	/^ffff800000104175:	e9 ae 01 00 00       	jmpq   ffff800000104328 <kbdgetc+0x1e1>$/;"	l
ffff80000010417a	kernel.asm	/^ffff80000010417a:	bf 60 00 00 00       	mov    $0x60,%edi$/;"	l
ffff80000010417f	kernel.asm	/^ffff80000010417f:	48 b8 29 41 10 00 00 	movabs $0xffff800000104129,%rax$/;"	l
ffff800000104186	kernel.asm	/^ffff800000104186:	80 ff ff $/;"	l
ffff800000104189	kernel.asm	/^ffff800000104189:	ff d0                	callq  *%rax$/;"	l
ffff80000010418b	kernel.asm	/^ffff80000010418b:	0f b6 c0             	movzbl %al,%eax$/;"	l
ffff80000010418e	kernel.asm	/^ffff80000010418e:	89 45 fc             	mov    %eax,-0x4(%rbp)$/;"	l
ffff800000104191	kernel.asm	/^ffff800000104191:	81 7d fc e0 00 00 00 	cmpl   $0xe0,-0x4(%rbp)$/;"	l
ffff800000104198	kernel.asm	/^ffff800000104198:	75 27                	jne    ffff8000001041c1 <kbdgetc+0x7a>$/;"	l
ffff80000010419a	kernel.asm	/^ffff80000010419a:	48 b8 b8 71 11 00 00 	movabs $0xffff8000001171b8,%rax$/;"	l
ffff8000001041a1	kernel.asm	/^ffff8000001041a1:	80 ff ff $/;"	l
ffff8000001041a4	kernel.asm	/^ffff8000001041a4:	8b 00                	mov    (%rax),%eax$/;"	l
ffff8000001041a6	kernel.asm	/^ffff8000001041a6:	83 c8 40             	or     $0x40,%eax$/;"	l
ffff8000001041a9	kernel.asm	/^ffff8000001041a9:	89 c2                	mov    %eax,%edx$/;"	l
ffff8000001041ab	kernel.asm	/^ffff8000001041ab:	48 b8 b8 71 11 00 00 	movabs $0xffff8000001171b8,%rax$/;"	l
ffff8000001041b2	kernel.asm	/^ffff8000001041b2:	80 ff ff $/;"	l
ffff8000001041b5	kernel.asm	/^ffff8000001041b5:	89 10                	mov    %edx,(%rax)$/;"	l
ffff8000001041b7	kernel.asm	/^ffff8000001041b7:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff8000001041bc	kernel.asm	/^ffff8000001041bc:	e9 67 01 00 00       	jmpq   ffff800000104328 <kbdgetc+0x1e1>$/;"	l
ffff8000001041c1	kernel.asm	/^ffff8000001041c1:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff8000001041c4	kernel.asm	/^ffff8000001041c4:	25 80 00 00 00       	and    $0x80,%eax$/;"	l
ffff8000001041c9	kernel.asm	/^ffff8000001041c9:	85 c0                	test   %eax,%eax$/;"	l
ffff8000001041cb	kernel.asm	/^ffff8000001041cb:	74 60                	je     ffff80000010422d <kbdgetc+0xe6>$/;"	l
ffff8000001041cd	kernel.asm	/^ffff8000001041cd:	48 b8 b8 71 11 00 00 	movabs $0xffff8000001171b8,%rax$/;"	l
ffff8000001041d4	kernel.asm	/^ffff8000001041d4:	80 ff ff $/;"	l
ffff8000001041d7	kernel.asm	/^ffff8000001041d7:	8b 00                	mov    (%rax),%eax$/;"	l
ffff8000001041d9	kernel.asm	/^ffff8000001041d9:	83 e0 40             	and    $0x40,%eax$/;"	l
ffff8000001041dc	kernel.asm	/^ffff8000001041dc:	85 c0                	test   %eax,%eax$/;"	l
ffff8000001041de	kernel.asm	/^ffff8000001041de:	75 08                	jne    ffff8000001041e8 <kbdgetc+0xa1>$/;"	l
ffff8000001041e0	kernel.asm	/^ffff8000001041e0:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff8000001041e3	kernel.asm	/^ffff8000001041e3:	83 e0 7f             	and    $0x7f,%eax$/;"	l
ffff8000001041e6	kernel.asm	/^ffff8000001041e6:	eb 03                	jmp    ffff8000001041eb <kbdgetc+0xa4>$/;"	l
ffff8000001041e8	kernel.asm	/^ffff8000001041e8:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff8000001041eb	kernel.asm	/^ffff8000001041eb:	89 45 fc             	mov    %eax,-0x4(%rbp)$/;"	l
ffff8000001041ee	kernel.asm	/^ffff8000001041ee:	48 ba 20 d0 10 00 00 	movabs $0xffff80000010d020,%rdx$/;"	l
ffff8000001041f5	kernel.asm	/^ffff8000001041f5:	80 ff ff $/;"	l
ffff8000001041f8	kernel.asm	/^ffff8000001041f8:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff8000001041fb	kernel.asm	/^ffff8000001041fb:	0f b6 04 02          	movzbl (%rdx,%rax,1),%eax$/;"	l
ffff8000001041ff	kernel.asm	/^ffff8000001041ff:	83 c8 40             	or     $0x40,%eax$/;"	l
ffff800000104202	kernel.asm	/^ffff800000104202:	0f b6 c0             	movzbl %al,%eax$/;"	l
ffff800000104205	kernel.asm	/^ffff800000104205:	f7 d0                	not    %eax$/;"	l
ffff800000104207	kernel.asm	/^ffff800000104207:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000104209	kernel.asm	/^ffff800000104209:	48 b8 b8 71 11 00 00 	movabs $0xffff8000001171b8,%rax$/;"	l
ffff800000104210	kernel.asm	/^ffff800000104210:	80 ff ff $/;"	l
ffff800000104213	kernel.asm	/^ffff800000104213:	8b 00                	mov    (%rax),%eax$/;"	l
ffff800000104215	kernel.asm	/^ffff800000104215:	21 c2                	and    %eax,%edx$/;"	l
ffff800000104217	kernel.asm	/^ffff800000104217:	48 b8 b8 71 11 00 00 	movabs $0xffff8000001171b8,%rax$/;"	l
ffff80000010421e	kernel.asm	/^ffff80000010421e:	80 ff ff $/;"	l
ffff800000104221	kernel.asm	/^ffff800000104221:	89 10                	mov    %edx,(%rax)$/;"	l
ffff800000104223	kernel.asm	/^ffff800000104223:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000104228	kernel.asm	/^ffff800000104228:	e9 fb 00 00 00       	jmpq   ffff800000104328 <kbdgetc+0x1e1>$/;"	l
ffff80000010422d	kernel.asm	/^ffff80000010422d:	48 b8 b8 71 11 00 00 	movabs $0xffff8000001171b8,%rax$/;"	l
ffff800000104234	kernel.asm	/^ffff800000104234:	80 ff ff $/;"	l
ffff800000104237	kernel.asm	/^ffff800000104237:	8b 00                	mov    (%rax),%eax$/;"	l
ffff800000104239	kernel.asm	/^ffff800000104239:	83 e0 40             	and    $0x40,%eax$/;"	l
ffff80000010423c	kernel.asm	/^ffff80000010423c:	85 c0                	test   %eax,%eax$/;"	l
ffff80000010423e	kernel.asm	/^ffff80000010423e:	74 24                	je     ffff800000104264 <kbdgetc+0x11d>$/;"	l
ffff800000104240	kernel.asm	/^ffff800000104240:	81 4d fc 80 00 00 00 	orl    $0x80,-0x4(%rbp)$/;"	l
ffff800000104247	kernel.asm	/^ffff800000104247:	48 b8 b8 71 11 00 00 	movabs $0xffff8000001171b8,%rax$/;"	l
ffff80000010424e	kernel.asm	/^ffff80000010424e:	80 ff ff $/;"	l
ffff800000104251	kernel.asm	/^ffff800000104251:	8b 00                	mov    (%rax),%eax$/;"	l
ffff800000104253	kernel.asm	/^ffff800000104253:	83 e0 bf             	and    $0xffffffbf,%eax$/;"	l
ffff800000104256	kernel.asm	/^ffff800000104256:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000104258	kernel.asm	/^ffff800000104258:	48 b8 b8 71 11 00 00 	movabs $0xffff8000001171b8,%rax$/;"	l
ffff80000010425f	kernel.asm	/^ffff80000010425f:	80 ff ff $/;"	l
ffff800000104262	kernel.asm	/^ffff800000104262:	89 10                	mov    %edx,(%rax)$/;"	l
ffff800000104264	kernel.asm	/^ffff800000104264:	48 ba 20 d0 10 00 00 	movabs $0xffff80000010d020,%rdx$/;"	l
ffff80000010426b	kernel.asm	/^ffff80000010426b:	80 ff ff $/;"	l
ffff80000010426e	kernel.asm	/^ffff80000010426e:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff800000104271	kernel.asm	/^ffff800000104271:	0f b6 04 02          	movzbl (%rdx,%rax,1),%eax$/;"	l
ffff800000104275	kernel.asm	/^ffff800000104275:	0f b6 d0             	movzbl %al,%edx$/;"	l
ffff800000104278	kernel.asm	/^ffff800000104278:	48 b8 b8 71 11 00 00 	movabs $0xffff8000001171b8,%rax$/;"	l
ffff80000010427f	kernel.asm	/^ffff80000010427f:	80 ff ff $/;"	l
ffff800000104282	kernel.asm	/^ffff800000104282:	8b 00                	mov    (%rax),%eax$/;"	l
ffff800000104284	kernel.asm	/^ffff800000104284:	09 c2                	or     %eax,%edx$/;"	l
ffff800000104286	kernel.asm	/^ffff800000104286:	48 b8 b8 71 11 00 00 	movabs $0xffff8000001171b8,%rax$/;"	l
ffff80000010428d	kernel.asm	/^ffff80000010428d:	80 ff ff $/;"	l
ffff800000104290	kernel.asm	/^ffff800000104290:	89 10                	mov    %edx,(%rax)$/;"	l
ffff800000104292	kernel.asm	/^ffff800000104292:	48 ba 20 d1 10 00 00 	movabs $0xffff80000010d120,%rdx$/;"	l
ffff800000104299	kernel.asm	/^ffff800000104299:	80 ff ff $/;"	l
ffff80000010429c	kernel.asm	/^ffff80000010429c:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff80000010429f	kernel.asm	/^ffff80000010429f:	0f b6 04 02          	movzbl (%rdx,%rax,1),%eax$/;"	l
ffff8000001042a3	kernel.asm	/^ffff8000001042a3:	0f b6 d0             	movzbl %al,%edx$/;"	l
ffff8000001042a6	kernel.asm	/^ffff8000001042a6:	48 b8 b8 71 11 00 00 	movabs $0xffff8000001171b8,%rax$/;"	l
ffff8000001042ad	kernel.asm	/^ffff8000001042ad:	80 ff ff $/;"	l
ffff8000001042b0	kernel.asm	/^ffff8000001042b0:	8b 00                	mov    (%rax),%eax$/;"	l
ffff8000001042b2	kernel.asm	/^ffff8000001042b2:	31 c2                	xor    %eax,%edx$/;"	l
ffff8000001042b4	kernel.asm	/^ffff8000001042b4:	48 b8 b8 71 11 00 00 	movabs $0xffff8000001171b8,%rax$/;"	l
ffff8000001042bb	kernel.asm	/^ffff8000001042bb:	80 ff ff $/;"	l
ffff8000001042be	kernel.asm	/^ffff8000001042be:	89 10                	mov    %edx,(%rax)$/;"	l
ffff8000001042c0	kernel.asm	/^ffff8000001042c0:	48 b8 b8 71 11 00 00 	movabs $0xffff8000001171b8,%rax$/;"	l
ffff8000001042c7	kernel.asm	/^ffff8000001042c7:	80 ff ff $/;"	l
ffff8000001042ca	kernel.asm	/^ffff8000001042ca:	8b 00                	mov    (%rax),%eax$/;"	l
ffff8000001042cc	kernel.asm	/^ffff8000001042cc:	83 e0 03             	and    $0x3,%eax$/;"	l
ffff8000001042cf	kernel.asm	/^ffff8000001042cf:	89 c2                	mov    %eax,%edx$/;"	l
ffff8000001042d1	kernel.asm	/^ffff8000001042d1:	48 b8 20 d5 10 00 00 	movabs $0xffff80000010d520,%rax$/;"	l
ffff8000001042d8	kernel.asm	/^ffff8000001042d8:	80 ff ff $/;"	l
ffff8000001042db	kernel.asm	/^ffff8000001042db:	89 d2                	mov    %edx,%edx$/;"	l
ffff8000001042dd	kernel.asm	/^ffff8000001042dd:	48 8b 14 d0          	mov    (%rax,%rdx,8),%rdx$/;"	l
ffff8000001042e1	kernel.asm	/^ffff8000001042e1:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff8000001042e4	kernel.asm	/^ffff8000001042e4:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff8000001042e7	kernel.asm	/^ffff8000001042e7:	0f b6 00             	movzbl (%rax),%eax$/;"	l
ffff8000001042ea	kernel.asm	/^ffff8000001042ea:	0f b6 c0             	movzbl %al,%eax$/;"	l
ffff8000001042ed	kernel.asm	/^ffff8000001042ed:	89 45 f8             	mov    %eax,-0x8(%rbp)$/;"	l
ffff8000001042f0	kernel.asm	/^ffff8000001042f0:	48 b8 b8 71 11 00 00 	movabs $0xffff8000001171b8,%rax$/;"	l
ffff8000001042f7	kernel.asm	/^ffff8000001042f7:	80 ff ff $/;"	l
ffff8000001042fa	kernel.asm	/^ffff8000001042fa:	8b 00                	mov    (%rax),%eax$/;"	l
ffff8000001042fc	kernel.asm	/^ffff8000001042fc:	83 e0 08             	and    $0x8,%eax$/;"	l
ffff8000001042ff	kernel.asm	/^ffff8000001042ff:	85 c0                	test   %eax,%eax$/;"	l
ffff800000104301	kernel.asm	/^ffff800000104301:	74 22                	je     ffff800000104325 <kbdgetc+0x1de>$/;"	l
ffff800000104303	kernel.asm	/^ffff800000104303:	83 7d f8 60          	cmpl   $0x60,-0x8(%rbp)$/;"	l
ffff800000104307	kernel.asm	/^ffff800000104307:	76 0c                	jbe    ffff800000104315 <kbdgetc+0x1ce>$/;"	l
ffff800000104309	kernel.asm	/^ffff800000104309:	83 7d f8 7a          	cmpl   $0x7a,-0x8(%rbp)$/;"	l
ffff80000010430d	kernel.asm	/^ffff80000010430d:	77 06                	ja     ffff800000104315 <kbdgetc+0x1ce>$/;"	l
ffff80000010430f	kernel.asm	/^ffff80000010430f:	83 6d f8 20          	subl   $0x20,-0x8(%rbp)$/;"	l
ffff800000104313	kernel.asm	/^ffff800000104313:	eb 10                	jmp    ffff800000104325 <kbdgetc+0x1de>$/;"	l
ffff800000104315	kernel.asm	/^ffff800000104315:	83 7d f8 40          	cmpl   $0x40,-0x8(%rbp)$/;"	l
ffff800000104319	kernel.asm	/^ffff800000104319:	76 0a                	jbe    ffff800000104325 <kbdgetc+0x1de>$/;"	l
ffff80000010431b	kernel.asm	/^ffff80000010431b:	83 7d f8 5a          	cmpl   $0x5a,-0x8(%rbp)$/;"	l
ffff80000010431f	kernel.asm	/^ffff80000010431f:	77 04                	ja     ffff800000104325 <kbdgetc+0x1de>$/;"	l
ffff800000104321	kernel.asm	/^ffff800000104321:	83 45 f8 20          	addl   $0x20,-0x8(%rbp)$/;"	l
ffff800000104325	kernel.asm	/^ffff800000104325:	8b 45 f8             	mov    -0x8(%rbp),%eax$/;"	l
ffff800000104328	kernel.asm	/^ffff800000104328:	c9                   	leaveq $/;"	l
ffff800000104329	kernel.asm	/^ffff800000104329:	c3                   	retq   $/;"	l
ffff80000010432a	kernel.asm	/^ffff80000010432a <kbdintr>:$/;"	l
ffff80000010432a	kernel.asm	/^ffff80000010432a:	55                   	push   %rbp$/;"	l
ffff80000010432b	kernel.asm	/^ffff80000010432b:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010432e	kernel.asm	/^ffff80000010432e:	48 bf 47 41 10 00 00 	movabs $0xffff800000104147,%rdi$/;"	l
ffff800000104335	kernel.asm	/^ffff800000104335:	80 ff ff $/;"	l
ffff800000104338	kernel.asm	/^ffff800000104338:	48 b8 c7 0e 10 00 00 	movabs $0xffff800000100ec7,%rax$/;"	l
ffff80000010433f	kernel.asm	/^ffff80000010433f:	80 ff ff $/;"	l
ffff800000104342	kernel.asm	/^ffff800000104342:	ff d0                	callq  *%rax$/;"	l
ffff800000104344	kernel.asm	/^ffff800000104344:	90                   	nop$/;"	l
ffff800000104345	kernel.asm	/^ffff800000104345:	5d                   	pop    %rbp$/;"	l
ffff800000104346	kernel.asm	/^ffff800000104346:	c3                   	retq   $/;"	l
ffff800000104347	kernel.asm	/^ffff800000104347 <inb>:$/;"	l
ffff800000104347	kernel.asm	/^ffff800000104347:	55                   	push   %rbp$/;"	l
ffff800000104348	kernel.asm	/^ffff800000104348:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010434b	kernel.asm	/^ffff80000010434b:	48 83 ec 18          	sub    $0x18,%rsp$/;"	l
ffff80000010434f	kernel.asm	/^ffff80000010434f:	89 f8                	mov    %edi,%eax$/;"	l
ffff800000104351	kernel.asm	/^ffff800000104351:	66 89 45 ec          	mov    %ax,-0x14(%rbp)$/;"	l
ffff800000104355	kernel.asm	/^ffff800000104355:	0f b7 45 ec          	movzwl -0x14(%rbp),%eax$/;"	l
ffff800000104359	kernel.asm	/^ffff800000104359:	89 c2                	mov    %eax,%edx$/;"	l
ffff80000010435b	kernel.asm	/^ffff80000010435b:	ec                   	in     (%dx),%al$/;"	l
ffff80000010435c	kernel.asm	/^ffff80000010435c:	88 45 ff             	mov    %al,-0x1(%rbp)$/;"	l
ffff80000010435f	kernel.asm	/^ffff80000010435f:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax$/;"	l
ffff800000104363	kernel.asm	/^ffff800000104363:	c9                   	leaveq $/;"	l
ffff800000104364	kernel.asm	/^ffff800000104364:	c3                   	retq   $/;"	l
ffff800000104365	kernel.asm	/^ffff800000104365 <outb>:$/;"	l
ffff800000104365	kernel.asm	/^ffff800000104365:	55                   	push   %rbp$/;"	l
ffff800000104366	kernel.asm	/^ffff800000104366:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000104369	kernel.asm	/^ffff800000104369:	48 83 ec 08          	sub    $0x8,%rsp$/;"	l
ffff80000010436d	kernel.asm	/^ffff80000010436d:	89 fa                	mov    %edi,%edx$/;"	l
ffff80000010436f	kernel.asm	/^ffff80000010436f:	89 f0                	mov    %esi,%eax$/;"	l
ffff800000104371	kernel.asm	/^ffff800000104371:	66 89 55 fc          	mov    %dx,-0x4(%rbp)$/;"	l
ffff800000104375	kernel.asm	/^ffff800000104375:	88 45 f8             	mov    %al,-0x8(%rbp)$/;"	l
ffff800000104378	kernel.asm	/^ffff800000104378:	0f b6 45 f8          	movzbl -0x8(%rbp),%eax$/;"	l
ffff80000010437c	kernel.asm	/^ffff80000010437c:	0f b7 55 fc          	movzwl -0x4(%rbp),%edx$/;"	l
ffff800000104380	kernel.asm	/^ffff800000104380:	ee                   	out    %al,(%dx)$/;"	l
ffff800000104381	kernel.asm	/^ffff800000104381:	90                   	nop$/;"	l
ffff800000104382	kernel.asm	/^ffff800000104382:	c9                   	leaveq $/;"	l
ffff800000104383	kernel.asm	/^ffff800000104383:	c3                   	retq   $/;"	l
ffff800000104384	kernel.asm	/^ffff800000104384 <readeflags>:$/;"	l
ffff800000104384	kernel.asm	/^ffff800000104384:	55                   	push   %rbp$/;"	l
ffff800000104385	kernel.asm	/^ffff800000104385:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000104388	kernel.asm	/^ffff800000104388:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff80000010438c	kernel.asm	/^ffff80000010438c:	9c                   	pushfq $/;"	l
ffff80000010438d	kernel.asm	/^ffff80000010438d:	58                   	pop    %rax$/;"	l
ffff80000010438e	kernel.asm	/^ffff80000010438e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff800000104392	kernel.asm	/^ffff800000104392:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000104396	kernel.asm	/^ffff800000104396:	c9                   	leaveq $/;"	l
ffff800000104397	kernel.asm	/^ffff800000104397:	c3                   	retq   $/;"	l
ffff800000104398	kernel.asm	/^ffff800000104398 <lapicw>:$/;"	l
ffff800000104398	kernel.asm	/^ffff800000104398:	55                   	push   %rbp$/;"	l
ffff800000104399	kernel.asm	/^ffff800000104399:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010439c	kernel.asm	/^ffff80000010439c:	48 83 ec 08          	sub    $0x8,%rsp$/;"	l
ffff8000001043a0	kernel.asm	/^ffff8000001043a0:	89 7d fc             	mov    %edi,-0x4(%rbp)$/;"	l
ffff8000001043a3	kernel.asm	/^ffff8000001043a3:	89 75 f8             	mov    %esi,-0x8(%rbp)$/;"	l
ffff8000001043a6	kernel.asm	/^ffff8000001043a6:	48 b8 c0 71 11 00 00 	movabs $0xffff8000001171c0,%rax$/;"	l
ffff8000001043ad	kernel.asm	/^ffff8000001043ad:	80 ff ff $/;"	l
ffff8000001043b0	kernel.asm	/^ffff8000001043b0:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff8000001043b3	kernel.asm	/^ffff8000001043b3:	8b 55 fc             	mov    -0x4(%rbp),%edx$/;"	l
ffff8000001043b6	kernel.asm	/^ffff8000001043b6:	48 63 d2             	movslq %edx,%rdx$/;"	l
ffff8000001043b9	kernel.asm	/^ffff8000001043b9:	48 c1 e2 02          	shl    $0x2,%rdx$/;"	l
ffff8000001043bd	kernel.asm	/^ffff8000001043bd:	48 01 c2             	add    %rax,%rdx$/;"	l
ffff8000001043c0	kernel.asm	/^ffff8000001043c0:	8b 45 f8             	mov    -0x8(%rbp),%eax$/;"	l
ffff8000001043c3	kernel.asm	/^ffff8000001043c3:	89 02                	mov    %eax,(%rdx)$/;"	l
ffff8000001043c5	kernel.asm	/^ffff8000001043c5:	48 b8 c0 71 11 00 00 	movabs $0xffff8000001171c0,%rax$/;"	l
ffff8000001043cc	kernel.asm	/^ffff8000001043cc:	80 ff ff $/;"	l
ffff8000001043cf	kernel.asm	/^ffff8000001043cf:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff8000001043d2	kernel.asm	/^ffff8000001043d2:	48 83 c0 20          	add    $0x20,%rax$/;"	l
ffff8000001043d6	kernel.asm	/^ffff8000001043d6:	8b 00                	mov    (%rax),%eax$/;"	l
ffff8000001043d8	kernel.asm	/^ffff8000001043d8:	90                   	nop$/;"	l
ffff8000001043d9	kernel.asm	/^ffff8000001043d9:	c9                   	leaveq $/;"	l
ffff8000001043da	kernel.asm	/^ffff8000001043da:	c3                   	retq   $/;"	l
ffff8000001043db	kernel.asm	/^ffff8000001043db <lapicinit>:$/;"	l
ffff8000001043db	kernel.asm	/^ffff8000001043db:	55                   	push   %rbp$/;"	l
ffff8000001043dc	kernel.asm	/^ffff8000001043dc:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff8000001043df	kernel.asm	/^ffff8000001043df:	48 b8 c0 71 11 00 00 	movabs $0xffff8000001171c0,%rax$/;"	l
ffff8000001043e6	kernel.asm	/^ffff8000001043e6:	80 ff ff $/;"	l
ffff8000001043e9	kernel.asm	/^ffff8000001043e9:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff8000001043ec	kernel.asm	/^ffff8000001043ec:	48 85 c0             	test   %rax,%rax$/;"	l
ffff8000001043ef	kernel.asm	/^ffff8000001043ef:	0f 84 73 01 00 00    	je     ffff800000104568 <lapicinit+0x18d>$/;"	l
ffff8000001043f5	kernel.asm	/^ffff8000001043f5:	be 3f 01 00 00       	mov    $0x13f,%esi$/;"	l
ffff8000001043fa	kernel.asm	/^ffff8000001043fa:	bf 3c 00 00 00       	mov    $0x3c,%edi$/;"	l
ffff8000001043ff	kernel.asm	/^ffff8000001043ff:	48 b8 98 43 10 00 00 	movabs $0xffff800000104398,%rax$/;"	l
ffff800000104406	kernel.asm	/^ffff800000104406:	80 ff ff $/;"	l
ffff800000104409	kernel.asm	/^ffff800000104409:	ff d0                	callq  *%rax$/;"	l
ffff80000010440b	kernel.asm	/^ffff80000010440b:	be 0b 00 00 00       	mov    $0xb,%esi$/;"	l
ffff800000104410	kernel.asm	/^ffff800000104410:	bf f8 00 00 00       	mov    $0xf8,%edi$/;"	l
ffff800000104415	kernel.asm	/^ffff800000104415:	48 b8 98 43 10 00 00 	movabs $0xffff800000104398,%rax$/;"	l
ffff80000010441c	kernel.asm	/^ffff80000010441c:	80 ff ff $/;"	l
ffff80000010441f	kernel.asm	/^ffff80000010441f:	ff d0                	callq  *%rax$/;"	l
ffff800000104421	kernel.asm	/^ffff800000104421:	be 20 00 02 00       	mov    $0x20020,%esi$/;"	l
ffff800000104426	kernel.asm	/^ffff800000104426:	bf c8 00 00 00       	mov    $0xc8,%edi$/;"	l
ffff80000010442b	kernel.asm	/^ffff80000010442b:	48 b8 98 43 10 00 00 	movabs $0xffff800000104398,%rax$/;"	l
ffff800000104432	kernel.asm	/^ffff800000104432:	80 ff ff $/;"	l
ffff800000104435	kernel.asm	/^ffff800000104435:	ff d0                	callq  *%rax$/;"	l
ffff800000104437	kernel.asm	/^ffff800000104437:	be 80 96 98 00       	mov    $0x989680,%esi$/;"	l
ffff80000010443c	kernel.asm	/^ffff80000010443c:	bf e0 00 00 00       	mov    $0xe0,%edi$/;"	l
ffff800000104441	kernel.asm	/^ffff800000104441:	48 b8 98 43 10 00 00 	movabs $0xffff800000104398,%rax$/;"	l
ffff800000104448	kernel.asm	/^ffff800000104448:	80 ff ff $/;"	l
ffff80000010444b	kernel.asm	/^ffff80000010444b:	ff d0                	callq  *%rax$/;"	l
ffff80000010444d	kernel.asm	/^ffff80000010444d:	be 00 00 01 00       	mov    $0x10000,%esi$/;"	l
ffff800000104452	kernel.asm	/^ffff800000104452:	bf d4 00 00 00       	mov    $0xd4,%edi$/;"	l
ffff800000104457	kernel.asm	/^ffff800000104457:	48 b8 98 43 10 00 00 	movabs $0xffff800000104398,%rax$/;"	l
ffff80000010445e	kernel.asm	/^ffff80000010445e:	80 ff ff $/;"	l
ffff800000104461	kernel.asm	/^ffff800000104461:	ff d0                	callq  *%rax$/;"	l
ffff800000104463	kernel.asm	/^ffff800000104463:	be 00 00 01 00       	mov    $0x10000,%esi$/;"	l
ffff800000104468	kernel.asm	/^ffff800000104468:	bf d8 00 00 00       	mov    $0xd8,%edi$/;"	l
ffff80000010446d	kernel.asm	/^ffff80000010446d:	48 b8 98 43 10 00 00 	movabs $0xffff800000104398,%rax$/;"	l
ffff800000104474	kernel.asm	/^ffff800000104474:	80 ff ff $/;"	l
ffff800000104477	kernel.asm	/^ffff800000104477:	ff d0                	callq  *%rax$/;"	l
ffff800000104479	kernel.asm	/^ffff800000104479:	48 b8 c0 71 11 00 00 	movabs $0xffff8000001171c0,%rax$/;"	l
ffff800000104480	kernel.asm	/^ffff800000104480:	80 ff ff $/;"	l
ffff800000104483	kernel.asm	/^ffff800000104483:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff800000104486	kernel.asm	/^ffff800000104486:	48 83 c0 30          	add    $0x30,%rax$/;"	l
ffff80000010448a	kernel.asm	/^ffff80000010448a:	8b 00                	mov    (%rax),%eax$/;"	l
ffff80000010448c	kernel.asm	/^ffff80000010448c:	c1 e8 10             	shr    $0x10,%eax$/;"	l
ffff80000010448f	kernel.asm	/^ffff80000010448f:	0f b6 c0             	movzbl %al,%eax$/;"	l
ffff800000104492	kernel.asm	/^ffff800000104492:	83 f8 03             	cmp    $0x3,%eax$/;"	l
ffff800000104495	kernel.asm	/^ffff800000104495:	76 16                	jbe    ffff8000001044ad <lapicinit+0xd2>$/;"	l
ffff800000104497	kernel.asm	/^ffff800000104497:	be 00 00 01 00       	mov    $0x10000,%esi$/;"	l
ffff80000010449c	kernel.asm	/^ffff80000010449c:	bf d0 00 00 00       	mov    $0xd0,%edi$/;"	l
ffff8000001044a1	kernel.asm	/^ffff8000001044a1:	48 b8 98 43 10 00 00 	movabs $0xffff800000104398,%rax$/;"	l
ffff8000001044a8	kernel.asm	/^ffff8000001044a8:	80 ff ff $/;"	l
ffff8000001044ab	kernel.asm	/^ffff8000001044ab:	ff d0                	callq  *%rax$/;"	l
ffff8000001044ad	kernel.asm	/^ffff8000001044ad:	be 33 00 00 00       	mov    $0x33,%esi$/;"	l
ffff8000001044b2	kernel.asm	/^ffff8000001044b2:	bf dc 00 00 00       	mov    $0xdc,%edi$/;"	l
ffff8000001044b7	kernel.asm	/^ffff8000001044b7:	48 b8 98 43 10 00 00 	movabs $0xffff800000104398,%rax$/;"	l
ffff8000001044be	kernel.asm	/^ffff8000001044be:	80 ff ff $/;"	l
ffff8000001044c1	kernel.asm	/^ffff8000001044c1:	ff d0                	callq  *%rax$/;"	l
ffff8000001044c3	kernel.asm	/^ffff8000001044c3:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffff8000001044c8	kernel.asm	/^ffff8000001044c8:	bf a0 00 00 00       	mov    $0xa0,%edi$/;"	l
ffff8000001044cd	kernel.asm	/^ffff8000001044cd:	48 b8 98 43 10 00 00 	movabs $0xffff800000104398,%rax$/;"	l
ffff8000001044d4	kernel.asm	/^ffff8000001044d4:	80 ff ff $/;"	l
ffff8000001044d7	kernel.asm	/^ffff8000001044d7:	ff d0                	callq  *%rax$/;"	l
ffff8000001044d9	kernel.asm	/^ffff8000001044d9:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffff8000001044de	kernel.asm	/^ffff8000001044de:	bf a0 00 00 00       	mov    $0xa0,%edi$/;"	l
ffff8000001044e3	kernel.asm	/^ffff8000001044e3:	48 b8 98 43 10 00 00 	movabs $0xffff800000104398,%rax$/;"	l
ffff8000001044ea	kernel.asm	/^ffff8000001044ea:	80 ff ff $/;"	l
ffff8000001044ed	kernel.asm	/^ffff8000001044ed:	ff d0                	callq  *%rax$/;"	l
ffff8000001044ef	kernel.asm	/^ffff8000001044ef:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffff8000001044f4	kernel.asm	/^ffff8000001044f4:	bf 2c 00 00 00       	mov    $0x2c,%edi$/;"	l
ffff8000001044f9	kernel.asm	/^ffff8000001044f9:	48 b8 98 43 10 00 00 	movabs $0xffff800000104398,%rax$/;"	l
ffff800000104500	kernel.asm	/^ffff800000104500:	80 ff ff $/;"	l
ffff800000104503	kernel.asm	/^ffff800000104503:	ff d0                	callq  *%rax$/;"	l
ffff800000104505	kernel.asm	/^ffff800000104505:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffff80000010450a	kernel.asm	/^ffff80000010450a:	bf c4 00 00 00       	mov    $0xc4,%edi$/;"	l
ffff80000010450f	kernel.asm	/^ffff80000010450f:	48 b8 98 43 10 00 00 	movabs $0xffff800000104398,%rax$/;"	l
ffff800000104516	kernel.asm	/^ffff800000104516:	80 ff ff $/;"	l
ffff800000104519	kernel.asm	/^ffff800000104519:	ff d0                	callq  *%rax$/;"	l
ffff80000010451b	kernel.asm	/^ffff80000010451b:	be 00 85 08 00       	mov    $0x88500,%esi$/;"	l
ffff800000104520	kernel.asm	/^ffff800000104520:	bf c0 00 00 00       	mov    $0xc0,%edi$/;"	l
ffff800000104525	kernel.asm	/^ffff800000104525:	48 b8 98 43 10 00 00 	movabs $0xffff800000104398,%rax$/;"	l
ffff80000010452c	kernel.asm	/^ffff80000010452c:	80 ff ff $/;"	l
ffff80000010452f	kernel.asm	/^ffff80000010452f:	ff d0                	callq  *%rax$/;"	l
ffff800000104531	kernel.asm	/^ffff800000104531:	90                   	nop$/;"	l
ffff800000104532	kernel.asm	/^ffff800000104532:	48 b8 c0 71 11 00 00 	movabs $0xffff8000001171c0,%rax$/;"	l
ffff800000104539	kernel.asm	/^ffff800000104539:	80 ff ff $/;"	l
ffff80000010453c	kernel.asm	/^ffff80000010453c:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff80000010453f	kernel.asm	/^ffff80000010453f:	48 05 00 03 00 00    	add    $0x300,%rax$/;"	l
ffff800000104545	kernel.asm	/^ffff800000104545:	8b 00                	mov    (%rax),%eax$/;"	l
ffff800000104547	kernel.asm	/^ffff800000104547:	25 00 10 00 00       	and    $0x1000,%eax$/;"	l
ffff80000010454c	kernel.asm	/^ffff80000010454c:	85 c0                	test   %eax,%eax$/;"	l
ffff80000010454e	kernel.asm	/^ffff80000010454e:	75 e2                	jne    ffff800000104532 <lapicinit+0x157>$/;"	l
ffff800000104550	kernel.asm	/^ffff800000104550:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffff800000104555	kernel.asm	/^ffff800000104555:	bf 20 00 00 00       	mov    $0x20,%edi$/;"	l
ffff80000010455a	kernel.asm	/^ffff80000010455a:	48 b8 98 43 10 00 00 	movabs $0xffff800000104398,%rax$/;"	l
ffff800000104561	kernel.asm	/^ffff800000104561:	80 ff ff $/;"	l
ffff800000104564	kernel.asm	/^ffff800000104564:	ff d0                	callq  *%rax$/;"	l
ffff800000104566	kernel.asm	/^ffff800000104566:	eb 01                	jmp    ffff800000104569 <lapicinit+0x18e>$/;"	l
ffff800000104568	kernel.asm	/^ffff800000104568:	90                   	nop$/;"	l
ffff800000104569	kernel.asm	/^ffff800000104569:	5d                   	pop    %rbp$/;"	l
ffff80000010456a	kernel.asm	/^ffff80000010456a:	c3                   	retq   $/;"	l
ffff80000010456b	kernel.asm	/^ffff80000010456b <cpunum>:$/;"	l
ffff80000010456b	kernel.asm	/^ffff80000010456b:	55                   	push   %rbp$/;"	l
ffff80000010456c	kernel.asm	/^ffff80000010456c:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010456f	kernel.asm	/^ffff80000010456f:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff800000104573	kernel.asm	/^ffff800000104573:	48 b8 84 43 10 00 00 	movabs $0xffff800000104384,%rax$/;"	l
ffff80000010457a	kernel.asm	/^ffff80000010457a:	80 ff ff $/;"	l
ffff80000010457d	kernel.asm	/^ffff80000010457d:	ff d0                	callq  *%rax$/;"	l
ffff80000010457f	kernel.asm	/^ffff80000010457f:	25 00 02 00 00       	and    $0x200,%eax$/;"	l
ffff800000104584	kernel.asm	/^ffff800000104584:	48 85 c0             	test   %rax,%rax$/;"	l
ffff800000104587	kernel.asm	/^ffff800000104587:	74 41                	je     ffff8000001045ca <cpunum+0x5f>$/;"	l
ffff800000104589	kernel.asm	/^ffff800000104589:	48 b8 c8 71 11 00 00 	movabs $0xffff8000001171c8,%rax$/;"	l
ffff800000104590	kernel.asm	/^ffff800000104590:	80 ff ff $/;"	l
ffff800000104593	kernel.asm	/^ffff800000104593:	8b 00                	mov    (%rax),%eax$/;"	l
ffff800000104595	kernel.asm	/^ffff800000104595:	8d 48 01             	lea    0x1(%rax),%ecx$/;"	l
ffff800000104598	kernel.asm	/^ffff800000104598:	48 ba c8 71 11 00 00 	movabs $0xffff8000001171c8,%rdx$/;"	l
ffff80000010459f	kernel.asm	/^ffff80000010459f:	80 ff ff $/;"	l
ffff8000001045a2	kernel.asm	/^ffff8000001045a2:	89 0a                	mov    %ecx,(%rdx)$/;"	l
ffff8000001045a4	kernel.asm	/^ffff8000001045a4:	85 c0                	test   %eax,%eax$/;"	l
ffff8000001045a6	kernel.asm	/^ffff8000001045a6:	75 22                	jne    ffff8000001045ca <cpunum+0x5f>$/;"	l
ffff8000001045a8	kernel.asm	/^ffff8000001045a8:	48 8b 45 08          	mov    0x8(%rbp),%rax$/;"	l
ffff8000001045ac	kernel.asm	/^ffff8000001045ac:	48 89 c6             	mov    %rax,%rsi$/;"	l
ffff8000001045af	kernel.asm	/^ffff8000001045af:	48 bf 48 bc 10 00 00 	movabs $0xffff80000010bc48,%rdi$/;"	l
ffff8000001045b6	kernel.asm	/^ffff8000001045b6:	80 ff ff $/;"	l
ffff8000001045b9	kernel.asm	/^ffff8000001045b9:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff8000001045be	kernel.asm	/^ffff8000001045be:	48 ba ac 07 10 00 00 	movabs $0xffff8000001007ac,%rdx$/;"	l
ffff8000001045c5	kernel.asm	/^ffff8000001045c5:	80 ff ff $/;"	l
ffff8000001045c8	kernel.asm	/^ffff8000001045c8:	ff d2                	callq  *%rdx$/;"	l
ffff8000001045ca	kernel.asm	/^ffff8000001045ca:	48 b8 c0 71 11 00 00 	movabs $0xffff8000001171c0,%rax$/;"	l
ffff8000001045d1	kernel.asm	/^ffff8000001045d1:	80 ff ff $/;"	l
ffff8000001045d4	kernel.asm	/^ffff8000001045d4:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff8000001045d7	kernel.asm	/^ffff8000001045d7:	48 85 c0             	test   %rax,%rax$/;"	l
ffff8000001045da	kernel.asm	/^ffff8000001045da:	75 0a                	jne    ffff8000001045e6 <cpunum+0x7b>$/;"	l
ffff8000001045dc	kernel.asm	/^ffff8000001045dc:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff8000001045e1	kernel.asm	/^ffff8000001045e1:	e9 8b 00 00 00       	jmpq   ffff800000104671 <cpunum+0x106>$/;"	l
ffff8000001045e6	kernel.asm	/^ffff8000001045e6:	48 b8 c0 71 11 00 00 	movabs $0xffff8000001171c0,%rax$/;"	l
ffff8000001045ed	kernel.asm	/^ffff8000001045ed:	80 ff ff $/;"	l
ffff8000001045f0	kernel.asm	/^ffff8000001045f0:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff8000001045f3	kernel.asm	/^ffff8000001045f3:	48 83 c0 20          	add    $0x20,%rax$/;"	l
ffff8000001045f7	kernel.asm	/^ffff8000001045f7:	8b 00                	mov    (%rax),%eax$/;"	l
ffff8000001045f9	kernel.asm	/^ffff8000001045f9:	c1 e8 18             	shr    $0x18,%eax$/;"	l
ffff8000001045fc	kernel.asm	/^ffff8000001045fc:	89 45 f8             	mov    %eax,-0x8(%rbp)$/;"	l
ffff8000001045ff	kernel.asm	/^ffff8000001045ff:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)$/;"	l
ffff800000104606	kernel.asm	/^ffff800000104606:	eb 42                	jmp    ffff80000010464a <cpunum+0xdf>$/;"	l
ffff800000104608	kernel.asm	/^ffff800000104608:	48 b9 e0 72 11 00 00 	movabs $0xffff8000001172e0,%rcx$/;"	l
ffff80000010460f	kernel.asm	/^ffff80000010460f:	80 ff ff $/;"	l
ffff800000104612	kernel.asm	/^ffff800000104612:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff800000104615	kernel.asm	/^ffff800000104615:	48 98                	cltq   $/;"	l
ffff800000104617	kernel.asm	/^ffff800000104617:	48 89 c2             	mov    %rax,%rdx$/;"	l
ffff80000010461a	kernel.asm	/^ffff80000010461a:	48 8d 04 d5 00 00 00 	lea    0x0(,%rdx,8),%rax$/;"	l
ffff800000104621	kernel.asm	/^ffff800000104621:	00 $/;"	l
ffff800000104622	kernel.asm	/^ffff800000104622:	48 89 c2             	mov    %rax,%rdx$/;"	l
ffff800000104625	kernel.asm	/^ffff800000104625:	48 89 d0             	mov    %rdx,%rax$/;"	l
ffff800000104628	kernel.asm	/^ffff800000104628:	48 c1 e0 05          	shl    $0x5,%rax$/;"	l
ffff80000010462c	kernel.asm	/^ffff80000010462c:	48 29 d0             	sub    %rdx,%rax$/;"	l
ffff80000010462f	kernel.asm	/^ffff80000010462f:	48 01 c8             	add    %rcx,%rax$/;"	l
ffff800000104632	kernel.asm	/^ffff800000104632:	48 83 c0 01          	add    $0x1,%rax$/;"	l
ffff800000104636	kernel.asm	/^ffff800000104636:	0f b6 00             	movzbl (%rax),%eax$/;"	l
ffff800000104639	kernel.asm	/^ffff800000104639:	0f b6 c0             	movzbl %al,%eax$/;"	l
ffff80000010463c	kernel.asm	/^ffff80000010463c:	3b 45 f8             	cmp    -0x8(%rbp),%eax$/;"	l
ffff80000010463f	kernel.asm	/^ffff80000010463f:	75 05                	jne    ffff800000104646 <cpunum+0xdb>$/;"	l
ffff800000104641	kernel.asm	/^ffff800000104641:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff800000104644	kernel.asm	/^ffff800000104644:	eb 2b                	jmp    ffff800000104671 <cpunum+0x106>$/;"	l
ffff800000104646	kernel.asm	/^ffff800000104646:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)$/;"	l
ffff80000010464a	kernel.asm	/^ffff80000010464a:	48 b8 a0 7a 11 00 00 	movabs $0xffff800000117aa0,%rax$/;"	l
ffff800000104651	kernel.asm	/^ffff800000104651:	80 ff ff $/;"	l
ffff800000104654	kernel.asm	/^ffff800000104654:	8b 00                	mov    (%rax),%eax$/;"	l
ffff800000104656	kernel.asm	/^ffff800000104656:	39 45 fc             	cmp    %eax,-0x4(%rbp)$/;"	l
ffff800000104659	kernel.asm	/^ffff800000104659:	7c ad                	jl     ffff800000104608 <cpunum+0x9d>$/;"	l
ffff80000010465b	kernel.asm	/^ffff80000010465b:	48 bf 74 bc 10 00 00 	movabs $0xffff80000010bc74,%rdi$/;"	l
ffff800000104662	kernel.asm	/^ffff800000104662:	80 ff ff $/;"	l
ffff800000104665	kernel.asm	/^ffff800000104665:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff80000010466c	kernel.asm	/^ffff80000010466c:	80 ff ff $/;"	l
ffff80000010466f	kernel.asm	/^ffff80000010466f:	ff d0                	callq  *%rax$/;"	l
ffff800000104671	kernel.asm	/^ffff800000104671:	c9                   	leaveq $/;"	l
ffff800000104672	kernel.asm	/^ffff800000104672:	c3                   	retq   $/;"	l
ffff800000104673	kernel.asm	/^ffff800000104673 <lapiceoi>:$/;"	l
ffff800000104673	kernel.asm	/^ffff800000104673:	55                   	push   %rbp$/;"	l
ffff800000104674	kernel.asm	/^ffff800000104674:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000104677	kernel.asm	/^ffff800000104677:	48 b8 c0 71 11 00 00 	movabs $0xffff8000001171c0,%rax$/;"	l
ffff80000010467e	kernel.asm	/^ffff80000010467e:	80 ff ff $/;"	l
ffff800000104681	kernel.asm	/^ffff800000104681:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff800000104684	kernel.asm	/^ffff800000104684:	48 85 c0             	test   %rax,%rax$/;"	l
ffff800000104687	kernel.asm	/^ffff800000104687:	74 16                	je     ffff80000010469f <lapiceoi+0x2c>$/;"	l
ffff800000104689	kernel.asm	/^ffff800000104689:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffff80000010468e	kernel.asm	/^ffff80000010468e:	bf 2c 00 00 00       	mov    $0x2c,%edi$/;"	l
ffff800000104693	kernel.asm	/^ffff800000104693:	48 b8 98 43 10 00 00 	movabs $0xffff800000104398,%rax$/;"	l
ffff80000010469a	kernel.asm	/^ffff80000010469a:	80 ff ff $/;"	l
ffff80000010469d	kernel.asm	/^ffff80000010469d:	ff d0                	callq  *%rax$/;"	l
ffff80000010469f	kernel.asm	/^ffff80000010469f:	90                   	nop$/;"	l
ffff8000001046a0	kernel.asm	/^ffff8000001046a0:	5d                   	pop    %rbp$/;"	l
ffff8000001046a1	kernel.asm	/^ffff8000001046a1:	c3                   	retq   $/;"	l
ffff8000001046a2	kernel.asm	/^ffff8000001046a2 <microdelay>:$/;"	l
ffff8000001046a2	kernel.asm	/^ffff8000001046a2:	55                   	push   %rbp$/;"	l
ffff8000001046a3	kernel.asm	/^ffff8000001046a3:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff8000001046a6	kernel.asm	/^ffff8000001046a6:	48 83 ec 08          	sub    $0x8,%rsp$/;"	l
ffff8000001046aa	kernel.asm	/^ffff8000001046aa:	89 7d fc             	mov    %edi,-0x4(%rbp)$/;"	l
ffff8000001046ad	kernel.asm	/^ffff8000001046ad:	90                   	nop$/;"	l
ffff8000001046ae	kernel.asm	/^ffff8000001046ae:	c9                   	leaveq $/;"	l
ffff8000001046af	kernel.asm	/^ffff8000001046af:	c3                   	retq   $/;"	l
ffff8000001046b0	kernel.asm	/^ffff8000001046b0 <lapicstartap>:$/;"	l
ffff8000001046b0	kernel.asm	/^ffff8000001046b0:	55                   	push   %rbp$/;"	l
ffff8000001046b1	kernel.asm	/^ffff8000001046b1:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff8000001046b4	kernel.asm	/^ffff8000001046b4:	48 83 ec 18          	sub    $0x18,%rsp$/;"	l
ffff8000001046b8	kernel.asm	/^ffff8000001046b8:	89 f8                	mov    %edi,%eax$/;"	l
ffff8000001046ba	kernel.asm	/^ffff8000001046ba:	89 75 e8             	mov    %esi,-0x18(%rbp)$/;"	l
ffff8000001046bd	kernel.asm	/^ffff8000001046bd:	88 45 ec             	mov    %al,-0x14(%rbp)$/;"	l
ffff8000001046c0	kernel.asm	/^ffff8000001046c0:	be 0f 00 00 00       	mov    $0xf,%esi$/;"	l
ffff8000001046c5	kernel.asm	/^ffff8000001046c5:	bf 70 00 00 00       	mov    $0x70,%edi$/;"	l
ffff8000001046ca	kernel.asm	/^ffff8000001046ca:	48 b8 65 43 10 00 00 	movabs $0xffff800000104365,%rax$/;"	l
ffff8000001046d1	kernel.asm	/^ffff8000001046d1:	80 ff ff $/;"	l
ffff8000001046d4	kernel.asm	/^ffff8000001046d4:	ff d0                	callq  *%rax$/;"	l
ffff8000001046d6	kernel.asm	/^ffff8000001046d6:	be 0a 00 00 00       	mov    $0xa,%esi$/;"	l
ffff8000001046db	kernel.asm	/^ffff8000001046db:	bf 71 00 00 00       	mov    $0x71,%edi$/;"	l
ffff8000001046e0	kernel.asm	/^ffff8000001046e0:	48 b8 65 43 10 00 00 	movabs $0xffff800000104365,%rax$/;"	l
ffff8000001046e7	kernel.asm	/^ffff8000001046e7:	80 ff ff $/;"	l
ffff8000001046ea	kernel.asm	/^ffff8000001046ea:	ff d0                	callq  *%rax$/;"	l
ffff8000001046ec	kernel.asm	/^ffff8000001046ec:	48 b8 67 04 00 00 00 	movabs $0xffff800000000467,%rax$/;"	l
ffff8000001046f3	kernel.asm	/^ffff8000001046f3:	80 ff ff $/;"	l
ffff8000001046f6	kernel.asm	/^ffff8000001046f6:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ffff8000001046fa	kernel.asm	/^ffff8000001046fa:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff8000001046fe	kernel.asm	/^ffff8000001046fe:	66 c7 00 00 00       	movw   $0x0,(%rax)$/;"	l
ffff800000104703	kernel.asm	/^ffff800000104703:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000104707	kernel.asm	/^ffff800000104707:	48 83 c0 02          	add    $0x2,%rax$/;"	l
ffff80000010470b	kernel.asm	/^ffff80000010470b:	8b 55 e8             	mov    -0x18(%rbp),%edx$/;"	l
ffff80000010470e	kernel.asm	/^ffff80000010470e:	c1 ea 04             	shr    $0x4,%edx$/;"	l
ffff800000104711	kernel.asm	/^ffff800000104711:	66 89 10             	mov    %dx,(%rax)$/;"	l
ffff800000104714	kernel.asm	/^ffff800000104714:	0f b6 45 ec          	movzbl -0x14(%rbp),%eax$/;"	l
ffff800000104718	kernel.asm	/^ffff800000104718:	c1 e0 18             	shl    $0x18,%eax$/;"	l
ffff80000010471b	kernel.asm	/^ffff80000010471b:	89 c6                	mov    %eax,%esi$/;"	l
ffff80000010471d	kernel.asm	/^ffff80000010471d:	bf c4 00 00 00       	mov    $0xc4,%edi$/;"	l
ffff800000104722	kernel.asm	/^ffff800000104722:	48 b8 98 43 10 00 00 	movabs $0xffff800000104398,%rax$/;"	l
ffff800000104729	kernel.asm	/^ffff800000104729:	80 ff ff $/;"	l
ffff80000010472c	kernel.asm	/^ffff80000010472c:	ff d0                	callq  *%rax$/;"	l
ffff80000010472e	kernel.asm	/^ffff80000010472e:	be 00 c5 00 00       	mov    $0xc500,%esi$/;"	l
ffff800000104733	kernel.asm	/^ffff800000104733:	bf c0 00 00 00       	mov    $0xc0,%edi$/;"	l
ffff800000104738	kernel.asm	/^ffff800000104738:	48 b8 98 43 10 00 00 	movabs $0xffff800000104398,%rax$/;"	l
ffff80000010473f	kernel.asm	/^ffff80000010473f:	80 ff ff $/;"	l
ffff800000104742	kernel.asm	/^ffff800000104742:	ff d0                	callq  *%rax$/;"	l
ffff800000104744	kernel.asm	/^ffff800000104744:	bf c8 00 00 00       	mov    $0xc8,%edi$/;"	l
ffff800000104749	kernel.asm	/^ffff800000104749:	48 b8 a2 46 10 00 00 	movabs $0xffff8000001046a2,%rax$/;"	l
ffff800000104750	kernel.asm	/^ffff800000104750:	80 ff ff $/;"	l
ffff800000104753	kernel.asm	/^ffff800000104753:	ff d0                	callq  *%rax$/;"	l
ffff800000104755	kernel.asm	/^ffff800000104755:	be 00 85 00 00       	mov    $0x8500,%esi$/;"	l
ffff80000010475a	kernel.asm	/^ffff80000010475a:	bf c0 00 00 00       	mov    $0xc0,%edi$/;"	l
ffff80000010475f	kernel.asm	/^ffff80000010475f:	48 b8 98 43 10 00 00 	movabs $0xffff800000104398,%rax$/;"	l
ffff800000104766	kernel.asm	/^ffff800000104766:	80 ff ff $/;"	l
ffff800000104769	kernel.asm	/^ffff800000104769:	ff d0                	callq  *%rax$/;"	l
ffff80000010476b	kernel.asm	/^ffff80000010476b:	bf 64 00 00 00       	mov    $0x64,%edi$/;"	l
ffff800000104770	kernel.asm	/^ffff800000104770:	48 b8 a2 46 10 00 00 	movabs $0xffff8000001046a2,%rax$/;"	l
ffff800000104777	kernel.asm	/^ffff800000104777:	80 ff ff $/;"	l
ffff80000010477a	kernel.asm	/^ffff80000010477a:	ff d0                	callq  *%rax$/;"	l
ffff80000010477c	kernel.asm	/^ffff80000010477c:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)$/;"	l
ffff800000104783	kernel.asm	/^ffff800000104783:	eb 4b                	jmp    ffff8000001047d0 <lapicstartap+0x120>$/;"	l
ffff800000104785	kernel.asm	/^ffff800000104785:	0f b6 45 ec          	movzbl -0x14(%rbp),%eax$/;"	l
ffff800000104789	kernel.asm	/^ffff800000104789:	c1 e0 18             	shl    $0x18,%eax$/;"	l
ffff80000010478c	kernel.asm	/^ffff80000010478c:	89 c6                	mov    %eax,%esi$/;"	l
ffff80000010478e	kernel.asm	/^ffff80000010478e:	bf c4 00 00 00       	mov    $0xc4,%edi$/;"	l
ffff800000104793	kernel.asm	/^ffff800000104793:	48 b8 98 43 10 00 00 	movabs $0xffff800000104398,%rax$/;"	l
ffff80000010479a	kernel.asm	/^ffff80000010479a:	80 ff ff $/;"	l
ffff80000010479d	kernel.asm	/^ffff80000010479d:	ff d0                	callq  *%rax$/;"	l
ffff80000010479f	kernel.asm	/^ffff80000010479f:	8b 45 e8             	mov    -0x18(%rbp),%eax$/;"	l
ffff8000001047a2	kernel.asm	/^ffff8000001047a2:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
ffff8000001047a5	kernel.asm	/^ffff8000001047a5:	80 cc 06             	or     $0x6,%ah$/;"	l
ffff8000001047a8	kernel.asm	/^ffff8000001047a8:	89 c6                	mov    %eax,%esi$/;"	l
ffff8000001047aa	kernel.asm	/^ffff8000001047aa:	bf c0 00 00 00       	mov    $0xc0,%edi$/;"	l
ffff8000001047af	kernel.asm	/^ffff8000001047af:	48 b8 98 43 10 00 00 	movabs $0xffff800000104398,%rax$/;"	l
ffff8000001047b6	kernel.asm	/^ffff8000001047b6:	80 ff ff $/;"	l
ffff8000001047b9	kernel.asm	/^ffff8000001047b9:	ff d0                	callq  *%rax$/;"	l
ffff8000001047bb	kernel.asm	/^ffff8000001047bb:	bf c8 00 00 00       	mov    $0xc8,%edi$/;"	l
ffff8000001047c0	kernel.asm	/^ffff8000001047c0:	48 b8 a2 46 10 00 00 	movabs $0xffff8000001046a2,%rax$/;"	l
ffff8000001047c7	kernel.asm	/^ffff8000001047c7:	80 ff ff $/;"	l
ffff8000001047ca	kernel.asm	/^ffff8000001047ca:	ff d0                	callq  *%rax$/;"	l
ffff8000001047cc	kernel.asm	/^ffff8000001047cc:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)$/;"	l
ffff8000001047d0	kernel.asm	/^ffff8000001047d0:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)$/;"	l
ffff8000001047d4	kernel.asm	/^ffff8000001047d4:	7e af                	jle    ffff800000104785 <lapicstartap+0xd5>$/;"	l
ffff8000001047d6	kernel.asm	/^ffff8000001047d6:	90                   	nop$/;"	l
ffff8000001047d7	kernel.asm	/^ffff8000001047d7:	c9                   	leaveq $/;"	l
ffff8000001047d8	kernel.asm	/^ffff8000001047d8:	c3                   	retq   $/;"	l
ffff8000001047d9	kernel.asm	/^ffff8000001047d9 <cmos_read>:$/;"	l
ffff8000001047d9	kernel.asm	/^ffff8000001047d9:	55                   	push   %rbp$/;"	l
ffff8000001047da	kernel.asm	/^ffff8000001047da:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff8000001047dd	kernel.asm	/^ffff8000001047dd:	48 83 ec 08          	sub    $0x8,%rsp$/;"	l
ffff8000001047e1	kernel.asm	/^ffff8000001047e1:	89 7d fc             	mov    %edi,-0x4(%rbp)$/;"	l
ffff8000001047e4	kernel.asm	/^ffff8000001047e4:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff8000001047e7	kernel.asm	/^ffff8000001047e7:	0f b6 c0             	movzbl %al,%eax$/;"	l
ffff8000001047ea	kernel.asm	/^ffff8000001047ea:	89 c6                	mov    %eax,%esi$/;"	l
ffff8000001047ec	kernel.asm	/^ffff8000001047ec:	bf 70 00 00 00       	mov    $0x70,%edi$/;"	l
ffff8000001047f1	kernel.asm	/^ffff8000001047f1:	48 b8 65 43 10 00 00 	movabs $0xffff800000104365,%rax$/;"	l
ffff8000001047f8	kernel.asm	/^ffff8000001047f8:	80 ff ff $/;"	l
ffff8000001047fb	kernel.asm	/^ffff8000001047fb:	ff d0                	callq  *%rax$/;"	l
ffff8000001047fd	kernel.asm	/^ffff8000001047fd:	bf c8 00 00 00       	mov    $0xc8,%edi$/;"	l
ffff800000104802	kernel.asm	/^ffff800000104802:	48 b8 a2 46 10 00 00 	movabs $0xffff8000001046a2,%rax$/;"	l
ffff800000104809	kernel.asm	/^ffff800000104809:	80 ff ff $/;"	l
ffff80000010480c	kernel.asm	/^ffff80000010480c:	ff d0                	callq  *%rax$/;"	l
ffff80000010480e	kernel.asm	/^ffff80000010480e:	bf 71 00 00 00       	mov    $0x71,%edi$/;"	l
ffff800000104813	kernel.asm	/^ffff800000104813:	48 b8 47 43 10 00 00 	movabs $0xffff800000104347,%rax$/;"	l
ffff80000010481a	kernel.asm	/^ffff80000010481a:	80 ff ff $/;"	l
ffff80000010481d	kernel.asm	/^ffff80000010481d:	ff d0                	callq  *%rax$/;"	l
ffff80000010481f	kernel.asm	/^ffff80000010481f:	0f b6 c0             	movzbl %al,%eax$/;"	l
ffff800000104822	kernel.asm	/^ffff800000104822:	c9                   	leaveq $/;"	l
ffff800000104823	kernel.asm	/^ffff800000104823:	c3                   	retq   $/;"	l
ffff800000104824	kernel.asm	/^ffff800000104824 <fill_rtcdate>:$/;"	l
ffff800000104824	kernel.asm	/^ffff800000104824:	55                   	push   %rbp$/;"	l
ffff800000104825	kernel.asm	/^ffff800000104825:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000104828	kernel.asm	/^ffff800000104828:	48 83 ec 08          	sub    $0x8,%rsp$/;"	l
ffff80000010482c	kernel.asm	/^ffff80000010482c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)$/;"	l
ffff800000104830	kernel.asm	/^ffff800000104830:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
ffff800000104835	kernel.asm	/^ffff800000104835:	48 b8 d9 47 10 00 00 	movabs $0xffff8000001047d9,%rax$/;"	l
ffff80000010483c	kernel.asm	/^ffff80000010483c:	80 ff ff $/;"	l
ffff80000010483f	kernel.asm	/^ffff80000010483f:	ff d0                	callq  *%rax$/;"	l
ffff800000104841	kernel.asm	/^ffff800000104841:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000104843	kernel.asm	/^ffff800000104843:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000104847	kernel.asm	/^ffff800000104847:	89 10                	mov    %edx,(%rax)$/;"	l
ffff800000104849	kernel.asm	/^ffff800000104849:	bf 02 00 00 00       	mov    $0x2,%edi$/;"	l
ffff80000010484e	kernel.asm	/^ffff80000010484e:	48 b8 d9 47 10 00 00 	movabs $0xffff8000001047d9,%rax$/;"	l
ffff800000104855	kernel.asm	/^ffff800000104855:	80 ff ff $/;"	l
ffff800000104858	kernel.asm	/^ffff800000104858:	ff d0                	callq  *%rax$/;"	l
ffff80000010485a	kernel.asm	/^ffff80000010485a:	89 c2                	mov    %eax,%edx$/;"	l
ffff80000010485c	kernel.asm	/^ffff80000010485c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000104860	kernel.asm	/^ffff800000104860:	89 50 04             	mov    %edx,0x4(%rax)$/;"	l
ffff800000104863	kernel.asm	/^ffff800000104863:	bf 04 00 00 00       	mov    $0x4,%edi$/;"	l
ffff800000104868	kernel.asm	/^ffff800000104868:	48 b8 d9 47 10 00 00 	movabs $0xffff8000001047d9,%rax$/;"	l
ffff80000010486f	kernel.asm	/^ffff80000010486f:	80 ff ff $/;"	l
ffff800000104872	kernel.asm	/^ffff800000104872:	ff d0                	callq  *%rax$/;"	l
ffff800000104874	kernel.asm	/^ffff800000104874:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000104876	kernel.asm	/^ffff800000104876:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010487a	kernel.asm	/^ffff80000010487a:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
ffff80000010487d	kernel.asm	/^ffff80000010487d:	bf 07 00 00 00       	mov    $0x7,%edi$/;"	l
ffff800000104882	kernel.asm	/^ffff800000104882:	48 b8 d9 47 10 00 00 	movabs $0xffff8000001047d9,%rax$/;"	l
ffff800000104889	kernel.asm	/^ffff800000104889:	80 ff ff $/;"	l
ffff80000010488c	kernel.asm	/^ffff80000010488c:	ff d0                	callq  *%rax$/;"	l
ffff80000010488e	kernel.asm	/^ffff80000010488e:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000104890	kernel.asm	/^ffff800000104890:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000104894	kernel.asm	/^ffff800000104894:	89 50 0c             	mov    %edx,0xc(%rax)$/;"	l
ffff800000104897	kernel.asm	/^ffff800000104897:	bf 08 00 00 00       	mov    $0x8,%edi$/;"	l
ffff80000010489c	kernel.asm	/^ffff80000010489c:	48 b8 d9 47 10 00 00 	movabs $0xffff8000001047d9,%rax$/;"	l
ffff8000001048a3	kernel.asm	/^ffff8000001048a3:	80 ff ff $/;"	l
ffff8000001048a6	kernel.asm	/^ffff8000001048a6:	ff d0                	callq  *%rax$/;"	l
ffff8000001048a8	kernel.asm	/^ffff8000001048a8:	89 c2                	mov    %eax,%edx$/;"	l
ffff8000001048aa	kernel.asm	/^ffff8000001048aa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001048ae	kernel.asm	/^ffff8000001048ae:	89 50 10             	mov    %edx,0x10(%rax)$/;"	l
ffff8000001048b1	kernel.asm	/^ffff8000001048b1:	bf 09 00 00 00       	mov    $0x9,%edi$/;"	l
ffff8000001048b6	kernel.asm	/^ffff8000001048b6:	48 b8 d9 47 10 00 00 	movabs $0xffff8000001047d9,%rax$/;"	l
ffff8000001048bd	kernel.asm	/^ffff8000001048bd:	80 ff ff $/;"	l
ffff8000001048c0	kernel.asm	/^ffff8000001048c0:	ff d0                	callq  *%rax$/;"	l
ffff8000001048c2	kernel.asm	/^ffff8000001048c2:	89 c2                	mov    %eax,%edx$/;"	l
ffff8000001048c4	kernel.asm	/^ffff8000001048c4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001048c8	kernel.asm	/^ffff8000001048c8:	89 50 14             	mov    %edx,0x14(%rax)$/;"	l
ffff8000001048cb	kernel.asm	/^ffff8000001048cb:	90                   	nop$/;"	l
ffff8000001048cc	kernel.asm	/^ffff8000001048cc:	c9                   	leaveq $/;"	l
ffff8000001048cd	kernel.asm	/^ffff8000001048cd:	c3                   	retq   $/;"	l
ffff8000001048ce	kernel.asm	/^ffff8000001048ce <cmostime>:$/;"	l
ffff8000001048ce	kernel.asm	/^ffff8000001048ce:	55                   	push   %rbp$/;"	l
ffff8000001048cf	kernel.asm	/^ffff8000001048cf:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff8000001048d2	kernel.asm	/^ffff8000001048d2:	48 83 ec 50          	sub    $0x50,%rsp$/;"	l
ffff8000001048d6	kernel.asm	/^ffff8000001048d6:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)$/;"	l
ffff8000001048da	kernel.asm	/^ffff8000001048da:	bf 0b 00 00 00       	mov    $0xb,%edi$/;"	l
ffff8000001048df	kernel.asm	/^ffff8000001048df:	48 b8 d9 47 10 00 00 	movabs $0xffff8000001047d9,%rax$/;"	l
ffff8000001048e6	kernel.asm	/^ffff8000001048e6:	80 ff ff $/;"	l
ffff8000001048e9	kernel.asm	/^ffff8000001048e9:	ff d0                	callq  *%rax$/;"	l
ffff8000001048eb	kernel.asm	/^ffff8000001048eb:	89 45 fc             	mov    %eax,-0x4(%rbp)$/;"	l
ffff8000001048ee	kernel.asm	/^ffff8000001048ee:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff8000001048f1	kernel.asm	/^ffff8000001048f1:	83 e0 04             	and    $0x4,%eax$/;"	l
ffff8000001048f4	kernel.asm	/^ffff8000001048f4:	85 c0                	test   %eax,%eax$/;"	l
ffff8000001048f6	kernel.asm	/^ffff8000001048f6:	0f 94 c0             	sete   %al$/;"	l
ffff8000001048f9	kernel.asm	/^ffff8000001048f9:	0f b6 c0             	movzbl %al,%eax$/;"	l
ffff8000001048fc	kernel.asm	/^ffff8000001048fc:	89 45 f8             	mov    %eax,-0x8(%rbp)$/;"	l
ffff8000001048ff	kernel.asm	/^ffff8000001048ff:	48 8d 45 e0          	lea    -0x20(%rbp),%rax$/;"	l
ffff800000104903	kernel.asm	/^ffff800000104903:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000104906	kernel.asm	/^ffff800000104906:	48 b8 24 48 10 00 00 	movabs $0xffff800000104824,%rax$/;"	l
ffff80000010490d	kernel.asm	/^ffff80000010490d:	80 ff ff $/;"	l
ffff800000104910	kernel.asm	/^ffff800000104910:	ff d0                	callq  *%rax$/;"	l
ffff800000104912	kernel.asm	/^ffff800000104912:	bf 0a 00 00 00       	mov    $0xa,%edi$/;"	l
ffff800000104917	kernel.asm	/^ffff800000104917:	48 b8 d9 47 10 00 00 	movabs $0xffff8000001047d9,%rax$/;"	l
ffff80000010491e	kernel.asm	/^ffff80000010491e:	80 ff ff $/;"	l
ffff800000104921	kernel.asm	/^ffff800000104921:	ff d0                	callq  *%rax$/;"	l
ffff800000104923	kernel.asm	/^ffff800000104923:	25 80 00 00 00       	and    $0x80,%eax$/;"	l
ffff800000104928	kernel.asm	/^ffff800000104928:	85 c0                	test   %eax,%eax$/;"	l
ffff80000010492a	kernel.asm	/^ffff80000010492a:	75 38                	jne    ffff800000104964 <cmostime+0x96>$/;"	l
ffff80000010492c	kernel.asm	/^ffff80000010492c:	48 8d 45 c0          	lea    -0x40(%rbp),%rax$/;"	l
ffff800000104930	kernel.asm	/^ffff800000104930:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000104933	kernel.asm	/^ffff800000104933:	48 b8 24 48 10 00 00 	movabs $0xffff800000104824,%rax$/;"	l
ffff80000010493a	kernel.asm	/^ffff80000010493a:	80 ff ff $/;"	l
ffff80000010493d	kernel.asm	/^ffff80000010493d:	ff d0                	callq  *%rax$/;"	l
ffff80000010493f	kernel.asm	/^ffff80000010493f:	48 8d 4d c0          	lea    -0x40(%rbp),%rcx$/;"	l
ffff800000104943	kernel.asm	/^ffff800000104943:	48 8d 45 e0          	lea    -0x20(%rbp),%rax$/;"	l
ffff800000104947	kernel.asm	/^ffff800000104947:	ba 18 00 00 00       	mov    $0x18,%edx$/;"	l
ffff80000010494c	kernel.asm	/^ffff80000010494c:	48 89 ce             	mov    %rcx,%rsi$/;"	l
ffff80000010494f	kernel.asm	/^ffff80000010494f:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000104952	kernel.asm	/^ffff800000104952:	48 b8 29 76 10 00 00 	movabs $0xffff800000107629,%rax$/;"	l
ffff800000104959	kernel.asm	/^ffff800000104959:	80 ff ff $/;"	l
ffff80000010495c	kernel.asm	/^ffff80000010495c:	ff d0                	callq  *%rax$/;"	l
ffff80000010495e	kernel.asm	/^ffff80000010495e:	85 c0                	test   %eax,%eax$/;"	l
ffff800000104960	kernel.asm	/^ffff800000104960:	74 05                	je     ffff800000104967 <cmostime+0x99>$/;"	l
ffff800000104962	kernel.asm	/^ffff800000104962:	eb 9b                	jmp    ffff8000001048ff <cmostime+0x31>$/;"	l
ffff800000104964	kernel.asm	/^ffff800000104964:	90                   	nop$/;"	l
ffff800000104965	kernel.asm	/^ffff800000104965:	eb 98                	jmp    ffff8000001048ff <cmostime+0x31>$/;"	l
ffff800000104967	kernel.asm	/^ffff800000104967:	90                   	nop$/;"	l
ffff800000104968	kernel.asm	/^ffff800000104968:	83 7d f8 00          	cmpl   $0x0,-0x8(%rbp)$/;"	l
ffff80000010496c	kernel.asm	/^ffff80000010496c:	0f 84 b4 00 00 00    	je     ffff800000104a26 <cmostime+0x158>$/;"	l
ffff800000104972	kernel.asm	/^ffff800000104972:	8b 45 e0             	mov    -0x20(%rbp),%eax$/;"	l
ffff800000104975	kernel.asm	/^ffff800000104975:	c1 e8 04             	shr    $0x4,%eax$/;"	l
ffff800000104978	kernel.asm	/^ffff800000104978:	89 c2                	mov    %eax,%edx$/;"	l
ffff80000010497a	kernel.asm	/^ffff80000010497a:	89 d0                	mov    %edx,%eax$/;"	l
ffff80000010497c	kernel.asm	/^ffff80000010497c:	c1 e0 02             	shl    $0x2,%eax$/;"	l
ffff80000010497f	kernel.asm	/^ffff80000010497f:	01 d0                	add    %edx,%eax$/;"	l
ffff800000104981	kernel.asm	/^ffff800000104981:	01 c0                	add    %eax,%eax$/;"	l
ffff800000104983	kernel.asm	/^ffff800000104983:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000104985	kernel.asm	/^ffff800000104985:	8b 45 e0             	mov    -0x20(%rbp),%eax$/;"	l
ffff800000104988	kernel.asm	/^ffff800000104988:	83 e0 0f             	and    $0xf,%eax$/;"	l
ffff80000010498b	kernel.asm	/^ffff80000010498b:	01 d0                	add    %edx,%eax$/;"	l
ffff80000010498d	kernel.asm	/^ffff80000010498d:	89 45 e0             	mov    %eax,-0x20(%rbp)$/;"	l
ffff800000104990	kernel.asm	/^ffff800000104990:	8b 45 e4             	mov    -0x1c(%rbp),%eax$/;"	l
ffff800000104993	kernel.asm	/^ffff800000104993:	c1 e8 04             	shr    $0x4,%eax$/;"	l
ffff800000104996	kernel.asm	/^ffff800000104996:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000104998	kernel.asm	/^ffff800000104998:	89 d0                	mov    %edx,%eax$/;"	l
ffff80000010499a	kernel.asm	/^ffff80000010499a:	c1 e0 02             	shl    $0x2,%eax$/;"	l
ffff80000010499d	kernel.asm	/^ffff80000010499d:	01 d0                	add    %edx,%eax$/;"	l
ffff80000010499f	kernel.asm	/^ffff80000010499f:	01 c0                	add    %eax,%eax$/;"	l
ffff8000001049a1	kernel.asm	/^ffff8000001049a1:	89 c2                	mov    %eax,%edx$/;"	l
ffff8000001049a3	kernel.asm	/^ffff8000001049a3:	8b 45 e4             	mov    -0x1c(%rbp),%eax$/;"	l
ffff8000001049a6	kernel.asm	/^ffff8000001049a6:	83 e0 0f             	and    $0xf,%eax$/;"	l
ffff8000001049a9	kernel.asm	/^ffff8000001049a9:	01 d0                	add    %edx,%eax$/;"	l
ffff8000001049ab	kernel.asm	/^ffff8000001049ab:	89 45 e4             	mov    %eax,-0x1c(%rbp)$/;"	l
ffff8000001049ae	kernel.asm	/^ffff8000001049ae:	8b 45 e8             	mov    -0x18(%rbp),%eax$/;"	l
ffff8000001049b1	kernel.asm	/^ffff8000001049b1:	c1 e8 04             	shr    $0x4,%eax$/;"	l
ffff8000001049b4	kernel.asm	/^ffff8000001049b4:	89 c2                	mov    %eax,%edx$/;"	l
ffff8000001049b6	kernel.asm	/^ffff8000001049b6:	89 d0                	mov    %edx,%eax$/;"	l
ffff8000001049b8	kernel.asm	/^ffff8000001049b8:	c1 e0 02             	shl    $0x2,%eax$/;"	l
ffff8000001049bb	kernel.asm	/^ffff8000001049bb:	01 d0                	add    %edx,%eax$/;"	l
ffff8000001049bd	kernel.asm	/^ffff8000001049bd:	01 c0                	add    %eax,%eax$/;"	l
ffff8000001049bf	kernel.asm	/^ffff8000001049bf:	89 c2                	mov    %eax,%edx$/;"	l
ffff8000001049c1	kernel.asm	/^ffff8000001049c1:	8b 45 e8             	mov    -0x18(%rbp),%eax$/;"	l
ffff8000001049c4	kernel.asm	/^ffff8000001049c4:	83 e0 0f             	and    $0xf,%eax$/;"	l
ffff8000001049c7	kernel.asm	/^ffff8000001049c7:	01 d0                	add    %edx,%eax$/;"	l
ffff8000001049c9	kernel.asm	/^ffff8000001049c9:	89 45 e8             	mov    %eax,-0x18(%rbp)$/;"	l
ffff8000001049cc	kernel.asm	/^ffff8000001049cc:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
ffff8000001049cf	kernel.asm	/^ffff8000001049cf:	c1 e8 04             	shr    $0x4,%eax$/;"	l
ffff8000001049d2	kernel.asm	/^ffff8000001049d2:	89 c2                	mov    %eax,%edx$/;"	l
ffff8000001049d4	kernel.asm	/^ffff8000001049d4:	89 d0                	mov    %edx,%eax$/;"	l
ffff8000001049d6	kernel.asm	/^ffff8000001049d6:	c1 e0 02             	shl    $0x2,%eax$/;"	l
ffff8000001049d9	kernel.asm	/^ffff8000001049d9:	01 d0                	add    %edx,%eax$/;"	l
ffff8000001049db	kernel.asm	/^ffff8000001049db:	01 c0                	add    %eax,%eax$/;"	l
ffff8000001049dd	kernel.asm	/^ffff8000001049dd:	89 c2                	mov    %eax,%edx$/;"	l
ffff8000001049df	kernel.asm	/^ffff8000001049df:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
ffff8000001049e2	kernel.asm	/^ffff8000001049e2:	83 e0 0f             	and    $0xf,%eax$/;"	l
ffff8000001049e5	kernel.asm	/^ffff8000001049e5:	01 d0                	add    %edx,%eax$/;"	l
ffff8000001049e7	kernel.asm	/^ffff8000001049e7:	89 45 ec             	mov    %eax,-0x14(%rbp)$/;"	l
ffff8000001049ea	kernel.asm	/^ffff8000001049ea:	8b 45 f0             	mov    -0x10(%rbp),%eax$/;"	l
ffff8000001049ed	kernel.asm	/^ffff8000001049ed:	c1 e8 04             	shr    $0x4,%eax$/;"	l
ffff8000001049f0	kernel.asm	/^ffff8000001049f0:	89 c2                	mov    %eax,%edx$/;"	l
ffff8000001049f2	kernel.asm	/^ffff8000001049f2:	89 d0                	mov    %edx,%eax$/;"	l
ffff8000001049f4	kernel.asm	/^ffff8000001049f4:	c1 e0 02             	shl    $0x2,%eax$/;"	l
ffff8000001049f7	kernel.asm	/^ffff8000001049f7:	01 d0                	add    %edx,%eax$/;"	l
ffff8000001049f9	kernel.asm	/^ffff8000001049f9:	01 c0                	add    %eax,%eax$/;"	l
ffff8000001049fb	kernel.asm	/^ffff8000001049fb:	89 c2                	mov    %eax,%edx$/;"	l
ffff8000001049fd	kernel.asm	/^ffff8000001049fd:	8b 45 f0             	mov    -0x10(%rbp),%eax$/;"	l
ffff800000104a00	kernel.asm	/^ffff800000104a00:	83 e0 0f             	and    $0xf,%eax$/;"	l
ffff800000104a03	kernel.asm	/^ffff800000104a03:	01 d0                	add    %edx,%eax$/;"	l
ffff800000104a05	kernel.asm	/^ffff800000104a05:	89 45 f0             	mov    %eax,-0x10(%rbp)$/;"	l
ffff800000104a08	kernel.asm	/^ffff800000104a08:	8b 45 f4             	mov    -0xc(%rbp),%eax$/;"	l
ffff800000104a0b	kernel.asm	/^ffff800000104a0b:	c1 e8 04             	shr    $0x4,%eax$/;"	l
ffff800000104a0e	kernel.asm	/^ffff800000104a0e:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000104a10	kernel.asm	/^ffff800000104a10:	89 d0                	mov    %edx,%eax$/;"	l
ffff800000104a12	kernel.asm	/^ffff800000104a12:	c1 e0 02             	shl    $0x2,%eax$/;"	l
ffff800000104a15	kernel.asm	/^ffff800000104a15:	01 d0                	add    %edx,%eax$/;"	l
ffff800000104a17	kernel.asm	/^ffff800000104a17:	01 c0                	add    %eax,%eax$/;"	l
ffff800000104a19	kernel.asm	/^ffff800000104a19:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000104a1b	kernel.asm	/^ffff800000104a1b:	8b 45 f4             	mov    -0xc(%rbp),%eax$/;"	l
ffff800000104a1e	kernel.asm	/^ffff800000104a1e:	83 e0 0f             	and    $0xf,%eax$/;"	l
ffff800000104a21	kernel.asm	/^ffff800000104a21:	01 d0                	add    %edx,%eax$/;"	l
ffff800000104a23	kernel.asm	/^ffff800000104a23:	89 45 f4             	mov    %eax,-0xc(%rbp)$/;"	l
ffff800000104a26	kernel.asm	/^ffff800000104a26:	48 8b 45 b8          	mov    -0x48(%rbp),%rax$/;"	l
ffff800000104a2a	kernel.asm	/^ffff800000104a2a:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx$/;"	l
ffff800000104a2e	kernel.asm	/^ffff800000104a2e:	48 89 10             	mov    %rdx,(%rax)$/;"	l
ffff800000104a31	kernel.asm	/^ffff800000104a31:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx$/;"	l
ffff800000104a35	kernel.asm	/^ffff800000104a35:	48 89 50 08          	mov    %rdx,0x8(%rax)$/;"	l
ffff800000104a39	kernel.asm	/^ffff800000104a39:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
ffff800000104a3d	kernel.asm	/^ffff800000104a3d:	48 89 50 10          	mov    %rdx,0x10(%rax)$/;"	l
ffff800000104a41	kernel.asm	/^ffff800000104a41:	48 8b 45 b8          	mov    -0x48(%rbp),%rax$/;"	l
ffff800000104a45	kernel.asm	/^ffff800000104a45:	8b 40 14             	mov    0x14(%rax),%eax$/;"	l
ffff800000104a48	kernel.asm	/^ffff800000104a48:	8d 90 d0 07 00 00    	lea    0x7d0(%rax),%edx$/;"	l
ffff800000104a4e	kernel.asm	/^ffff800000104a4e:	48 8b 45 b8          	mov    -0x48(%rbp),%rax$/;"	l
ffff800000104a52	kernel.asm	/^ffff800000104a52:	89 50 14             	mov    %edx,0x14(%rax)$/;"	l
ffff800000104a55	kernel.asm	/^ffff800000104a55:	90                   	nop$/;"	l
ffff800000104a56	kernel.asm	/^ffff800000104a56:	c9                   	leaveq $/;"	l
ffff800000104a57	kernel.asm	/^ffff800000104a57:	c3                   	retq   $/;"	l
ffff800000104a58	kernel.asm	/^ffff800000104a58 <initlog>:$/;"	l
ffff800000104a58	kernel.asm	/^ffff800000104a58:	55                   	push   %rbp$/;"	l
ffff800000104a59	kernel.asm	/^ffff800000104a59:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000104a5c	kernel.asm	/^ffff800000104a5c:	48 83 ec 30          	sub    $0x30,%rsp$/;"	l
ffff800000104a60	kernel.asm	/^ffff800000104a60:	89 7d dc             	mov    %edi,-0x24(%rbp)$/;"	l
ffff800000104a63	kernel.asm	/^ffff800000104a63:	48 be 84 bc 10 00 00 	movabs $0xffff80000010bc84,%rsi$/;"	l
ffff800000104a6a	kernel.asm	/^ffff800000104a6a:	80 ff ff $/;"	l
ffff800000104a6d	kernel.asm	/^ffff800000104a6d:	48 bf e0 71 11 00 00 	movabs $0xffff8000001171e0,%rdi$/;"	l
ffff800000104a74	kernel.asm	/^ffff800000104a74:	80 ff ff $/;"	l
ffff800000104a77	kernel.asm	/^ffff800000104a77:	48 b8 ca 71 10 00 00 	movabs $0xffff8000001071ca,%rax$/;"	l
ffff800000104a7e	kernel.asm	/^ffff800000104a7e:	80 ff ff $/;"	l
ffff800000104a81	kernel.asm	/^ffff800000104a81:	ff d0                	callq  *%rax$/;"	l
ffff800000104a83	kernel.asm	/^ffff800000104a83:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx$/;"	l
ffff800000104a87	kernel.asm	/^ffff800000104a87:	8b 45 dc             	mov    -0x24(%rbp),%eax$/;"	l
ffff800000104a8a	kernel.asm	/^ffff800000104a8a:	48 89 d6             	mov    %rdx,%rsi$/;"	l
ffff800000104a8d	kernel.asm	/^ffff800000104a8d:	89 c7                	mov    %eax,%edi$/;"	l
ffff800000104a8f	kernel.asm	/^ffff800000104a8f:	48 b8 cf 1f 10 00 00 	movabs $0xffff800000101fcf,%rax$/;"	l
ffff800000104a96	kernel.asm	/^ffff800000104a96:	80 ff ff $/;"	l
ffff800000104a99	kernel.asm	/^ffff800000104a99:	ff d0                	callq  *%rax$/;"	l
ffff800000104a9b	kernel.asm	/^ffff800000104a9b:	8b 45 f0             	mov    -0x10(%rbp),%eax$/;"	l
ffff800000104a9e	kernel.asm	/^ffff800000104a9e:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000104aa0	kernel.asm	/^ffff800000104aa0:	48 b8 e0 71 11 00 00 	movabs $0xffff8000001171e0,%rax$/;"	l
ffff800000104aa7	kernel.asm	/^ffff800000104aa7:	80 ff ff $/;"	l
ffff800000104aaa	kernel.asm	/^ffff800000104aaa:	89 50 68             	mov    %edx,0x68(%rax)$/;"	l
ffff800000104aad	kernel.asm	/^ffff800000104aad:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
ffff800000104ab0	kernel.asm	/^ffff800000104ab0:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000104ab2	kernel.asm	/^ffff800000104ab2:	48 b8 e0 71 11 00 00 	movabs $0xffff8000001171e0,%rax$/;"	l
ffff800000104ab9	kernel.asm	/^ffff800000104ab9:	80 ff ff $/;"	l
ffff800000104abc	kernel.asm	/^ffff800000104abc:	89 50 6c             	mov    %edx,0x6c(%rax)$/;"	l
ffff800000104abf	kernel.asm	/^ffff800000104abf:	48 b8 e0 71 11 00 00 	movabs $0xffff8000001171e0,%rax$/;"	l
ffff800000104ac6	kernel.asm	/^ffff800000104ac6:	80 ff ff $/;"	l
ffff800000104ac9	kernel.asm	/^ffff800000104ac9:	8b 55 dc             	mov    -0x24(%rbp),%edx$/;"	l
ffff800000104acc	kernel.asm	/^ffff800000104acc:	89 50 78             	mov    %edx,0x78(%rax)$/;"	l
ffff800000104acf	kernel.asm	/^ffff800000104acf:	48 b8 62 4d 10 00 00 	movabs $0xffff800000104d62,%rax$/;"	l
ffff800000104ad6	kernel.asm	/^ffff800000104ad6:	80 ff ff $/;"	l
ffff800000104ad9	kernel.asm	/^ffff800000104ad9:	ff d0                	callq  *%rax$/;"	l
ffff800000104adb	kernel.asm	/^ffff800000104adb:	90                   	nop$/;"	l
ffff800000104adc	kernel.asm	/^ffff800000104adc:	c9                   	leaveq $/;"	l
ffff800000104add	kernel.asm	/^ffff800000104add:	c3                   	retq   $/;"	l
ffff800000104ade	kernel.asm	/^ffff800000104ade <install_trans>:$/;"	l
ffff800000104ade	kernel.asm	/^ffff800000104ade:	55                   	push   %rbp$/;"	l
ffff800000104adf	kernel.asm	/^ffff800000104adf:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000104ae2	kernel.asm	/^ffff800000104ae2:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ffff800000104ae6	kernel.asm	/^ffff800000104ae6:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)$/;"	l
ffff800000104aed	kernel.asm	/^ffff800000104aed:	e9 dc 00 00 00       	jmpq   ffff800000104bce <install_trans+0xf0>$/;"	l
ffff800000104af2	kernel.asm	/^ffff800000104af2:	48 b8 e0 71 11 00 00 	movabs $0xffff8000001171e0,%rax$/;"	l
ffff800000104af9	kernel.asm	/^ffff800000104af9:	80 ff ff $/;"	l
ffff800000104afc	kernel.asm	/^ffff800000104afc:	8b 50 68             	mov    0x68(%rax),%edx$/;"	l
ffff800000104aff	kernel.asm	/^ffff800000104aff:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff800000104b02	kernel.asm	/^ffff800000104b02:	01 d0                	add    %edx,%eax$/;"	l
ffff800000104b04	kernel.asm	/^ffff800000104b04:	83 c0 01             	add    $0x1,%eax$/;"	l
ffff800000104b07	kernel.asm	/^ffff800000104b07:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000104b09	kernel.asm	/^ffff800000104b09:	48 b8 e0 71 11 00 00 	movabs $0xffff8000001171e0,%rax$/;"	l
ffff800000104b10	kernel.asm	/^ffff800000104b10:	80 ff ff $/;"	l
ffff800000104b13	kernel.asm	/^ffff800000104b13:	8b 40 78             	mov    0x78(%rax),%eax$/;"	l
ffff800000104b16	kernel.asm	/^ffff800000104b16:	89 d6                	mov    %edx,%esi$/;"	l
ffff800000104b18	kernel.asm	/^ffff800000104b18:	89 c7                	mov    %eax,%edi$/;"	l
ffff800000104b1a	kernel.asm	/^ffff800000104b1a:	48 b8 f8 03 10 00 00 	movabs $0xffff8000001003f8,%rax$/;"	l
ffff800000104b21	kernel.asm	/^ffff800000104b21:	80 ff ff $/;"	l
ffff800000104b24	kernel.asm	/^ffff800000104b24:	ff d0                	callq  *%rax$/;"	l
ffff800000104b26	kernel.asm	/^ffff800000104b26:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ffff800000104b2a	kernel.asm	/^ffff800000104b2a:	48 b8 e0 71 11 00 00 	movabs $0xffff8000001171e0,%rax$/;"	l
ffff800000104b31	kernel.asm	/^ffff800000104b31:	80 ff ff $/;"	l
ffff800000104b34	kernel.asm	/^ffff800000104b34:	8b 55 fc             	mov    -0x4(%rbp),%edx$/;"	l
ffff800000104b37	kernel.asm	/^ffff800000104b37:	48 63 d2             	movslq %edx,%rdx$/;"	l
ffff800000104b3a	kernel.asm	/^ffff800000104b3a:	48 83 c2 1c          	add    $0x1c,%rdx$/;"	l
ffff800000104b3e	kernel.asm	/^ffff800000104b3e:	8b 44 90 10          	mov    0x10(%rax,%rdx,4),%eax$/;"	l
ffff800000104b42	kernel.asm	/^ffff800000104b42:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000104b44	kernel.asm	/^ffff800000104b44:	48 b8 e0 71 11 00 00 	movabs $0xffff8000001171e0,%rax$/;"	l
ffff800000104b4b	kernel.asm	/^ffff800000104b4b:	80 ff ff $/;"	l
ffff800000104b4e	kernel.asm	/^ffff800000104b4e:	8b 40 78             	mov    0x78(%rax),%eax$/;"	l
ffff800000104b51	kernel.asm	/^ffff800000104b51:	89 d6                	mov    %edx,%esi$/;"	l
ffff800000104b53	kernel.asm	/^ffff800000104b53:	89 c7                	mov    %eax,%edi$/;"	l
ffff800000104b55	kernel.asm	/^ffff800000104b55:	48 b8 f8 03 10 00 00 	movabs $0xffff8000001003f8,%rax$/;"	l
ffff800000104b5c	kernel.asm	/^ffff800000104b5c:	80 ff ff $/;"	l
ffff800000104b5f	kernel.asm	/^ffff800000104b5f:	ff d0                	callq  *%rax$/;"	l
ffff800000104b61	kernel.asm	/^ffff800000104b61:	48 89 45 e8          	mov    %rax,-0x18(%rbp)$/;"	l
ffff800000104b65	kernel.asm	/^ffff800000104b65:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000104b69	kernel.asm	/^ffff800000104b69:	48 8d 88 b0 00 00 00 	lea    0xb0(%rax),%rcx$/;"	l
ffff800000104b70	kernel.asm	/^ffff800000104b70:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000104b74	kernel.asm	/^ffff800000104b74:	48 05 b0 00 00 00    	add    $0xb0,%rax$/;"	l
ffff800000104b7a	kernel.asm	/^ffff800000104b7a:	ba 00 02 00 00       	mov    $0x200,%edx$/;"	l
ffff800000104b7f	kernel.asm	/^ffff800000104b7f:	48 89 ce             	mov    %rcx,%rsi$/;"	l
ffff800000104b82	kernel.asm	/^ffff800000104b82:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000104b85	kernel.asm	/^ffff800000104b85:	48 b8 98 76 10 00 00 	movabs $0xffff800000107698,%rax$/;"	l
ffff800000104b8c	kernel.asm	/^ffff800000104b8c:	80 ff ff $/;"	l
ffff800000104b8f	kernel.asm	/^ffff800000104b8f:	ff d0                	callq  *%rax$/;"	l
ffff800000104b91	kernel.asm	/^ffff800000104b91:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000104b95	kernel.asm	/^ffff800000104b95:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000104b98	kernel.asm	/^ffff800000104b98:	48 b8 46 04 10 00 00 	movabs $0xffff800000100446,%rax$/;"	l
ffff800000104b9f	kernel.asm	/^ffff800000104b9f:	80 ff ff $/;"	l
ffff800000104ba2	kernel.asm	/^ffff800000104ba2:	ff d0                	callq  *%rax$/;"	l
ffff800000104ba4	kernel.asm	/^ffff800000104ba4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000104ba8	kernel.asm	/^ffff800000104ba8:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000104bab	kernel.asm	/^ffff800000104bab:	48 b8 aa 04 10 00 00 	movabs $0xffff8000001004aa,%rax$/;"	l
ffff800000104bb2	kernel.asm	/^ffff800000104bb2:	80 ff ff $/;"	l
ffff800000104bb5	kernel.asm	/^ffff800000104bb5:	ff d0                	callq  *%rax$/;"	l
ffff800000104bb7	kernel.asm	/^ffff800000104bb7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000104bbb	kernel.asm	/^ffff800000104bbb:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000104bbe	kernel.asm	/^ffff800000104bbe:	48 b8 aa 04 10 00 00 	movabs $0xffff8000001004aa,%rax$/;"	l
ffff800000104bc5	kernel.asm	/^ffff800000104bc5:	80 ff ff $/;"	l
ffff800000104bc8	kernel.asm	/^ffff800000104bc8:	ff d0                	callq  *%rax$/;"	l
ffff800000104bca	kernel.asm	/^ffff800000104bca:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)$/;"	l
ffff800000104bce	kernel.asm	/^ffff800000104bce:	48 b8 e0 71 11 00 00 	movabs $0xffff8000001171e0,%rax$/;"	l
ffff800000104bd5	kernel.asm	/^ffff800000104bd5:	80 ff ff $/;"	l
ffff800000104bd8	kernel.asm	/^ffff800000104bd8:	8b 40 7c             	mov    0x7c(%rax),%eax$/;"	l
ffff800000104bdb	kernel.asm	/^ffff800000104bdb:	3b 45 fc             	cmp    -0x4(%rbp),%eax$/;"	l
ffff800000104bde	kernel.asm	/^ffff800000104bde:	0f 8f 0e ff ff ff    	jg     ffff800000104af2 <install_trans+0x14>$/;"	l
ffff800000104be4	kernel.asm	/^ffff800000104be4:	90                   	nop$/;"	l
ffff800000104be5	kernel.asm	/^ffff800000104be5:	c9                   	leaveq $/;"	l
ffff800000104be6	kernel.asm	/^ffff800000104be6:	c3                   	retq   $/;"	l
ffff800000104be7	kernel.asm	/^ffff800000104be7 <read_head>:$/;"	l
ffff800000104be7	kernel.asm	/^ffff800000104be7:	55                   	push   %rbp$/;"	l
ffff800000104be8	kernel.asm	/^ffff800000104be8:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000104beb	kernel.asm	/^ffff800000104beb:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ffff800000104bef	kernel.asm	/^ffff800000104bef:	48 b8 e0 71 11 00 00 	movabs $0xffff8000001171e0,%rax$/;"	l
ffff800000104bf6	kernel.asm	/^ffff800000104bf6:	80 ff ff $/;"	l
ffff800000104bf9	kernel.asm	/^ffff800000104bf9:	8b 40 68             	mov    0x68(%rax),%eax$/;"	l
ffff800000104bfc	kernel.asm	/^ffff800000104bfc:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000104bfe	kernel.asm	/^ffff800000104bfe:	48 b8 e0 71 11 00 00 	movabs $0xffff8000001171e0,%rax$/;"	l
ffff800000104c05	kernel.asm	/^ffff800000104c05:	80 ff ff $/;"	l
ffff800000104c08	kernel.asm	/^ffff800000104c08:	8b 40 78             	mov    0x78(%rax),%eax$/;"	l
ffff800000104c0b	kernel.asm	/^ffff800000104c0b:	89 d6                	mov    %edx,%esi$/;"	l
ffff800000104c0d	kernel.asm	/^ffff800000104c0d:	89 c7                	mov    %eax,%edi$/;"	l
ffff800000104c0f	kernel.asm	/^ffff800000104c0f:	48 b8 f8 03 10 00 00 	movabs $0xffff8000001003f8,%rax$/;"	l
ffff800000104c16	kernel.asm	/^ffff800000104c16:	80 ff ff $/;"	l
ffff800000104c19	kernel.asm	/^ffff800000104c19:	ff d0                	callq  *%rax$/;"	l
ffff800000104c1b	kernel.asm	/^ffff800000104c1b:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ffff800000104c1f	kernel.asm	/^ffff800000104c1f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000104c23	kernel.asm	/^ffff800000104c23:	48 05 b0 00 00 00    	add    $0xb0,%rax$/;"	l
ffff800000104c29	kernel.asm	/^ffff800000104c29:	48 89 45 e8          	mov    %rax,-0x18(%rbp)$/;"	l
ffff800000104c2d	kernel.asm	/^ffff800000104c2d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000104c31	kernel.asm	/^ffff800000104c31:	8b 10                	mov    (%rax),%edx$/;"	l
ffff800000104c33	kernel.asm	/^ffff800000104c33:	48 b8 e0 71 11 00 00 	movabs $0xffff8000001171e0,%rax$/;"	l
ffff800000104c3a	kernel.asm	/^ffff800000104c3a:	80 ff ff $/;"	l
ffff800000104c3d	kernel.asm	/^ffff800000104c3d:	89 50 7c             	mov    %edx,0x7c(%rax)$/;"	l
ffff800000104c40	kernel.asm	/^ffff800000104c40:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)$/;"	l
ffff800000104c47	kernel.asm	/^ffff800000104c47:	eb 2a                	jmp    ffff800000104c73 <read_head+0x8c>$/;"	l
ffff800000104c49	kernel.asm	/^ffff800000104c49:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000104c4d	kernel.asm	/^ffff800000104c4d:	8b 55 fc             	mov    -0x4(%rbp),%edx$/;"	l
ffff800000104c50	kernel.asm	/^ffff800000104c50:	48 63 d2             	movslq %edx,%rdx$/;"	l
ffff800000104c53	kernel.asm	/^ffff800000104c53:	8b 54 90 04          	mov    0x4(%rax,%rdx,4),%edx$/;"	l
ffff800000104c57	kernel.asm	/^ffff800000104c57:	48 b8 e0 71 11 00 00 	movabs $0xffff8000001171e0,%rax$/;"	l
ffff800000104c5e	kernel.asm	/^ffff800000104c5e:	80 ff ff $/;"	l
ffff800000104c61	kernel.asm	/^ffff800000104c61:	8b 4d fc             	mov    -0x4(%rbp),%ecx$/;"	l
ffff800000104c64	kernel.asm	/^ffff800000104c64:	48 63 c9             	movslq %ecx,%rcx$/;"	l
ffff800000104c67	kernel.asm	/^ffff800000104c67:	48 83 c1 1c          	add    $0x1c,%rcx$/;"	l
ffff800000104c6b	kernel.asm	/^ffff800000104c6b:	89 54 88 10          	mov    %edx,0x10(%rax,%rcx,4)$/;"	l
ffff800000104c6f	kernel.asm	/^ffff800000104c6f:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)$/;"	l
ffff800000104c73	kernel.asm	/^ffff800000104c73:	48 b8 e0 71 11 00 00 	movabs $0xffff8000001171e0,%rax$/;"	l
ffff800000104c7a	kernel.asm	/^ffff800000104c7a:	80 ff ff $/;"	l
ffff800000104c7d	kernel.asm	/^ffff800000104c7d:	8b 40 7c             	mov    0x7c(%rax),%eax$/;"	l
ffff800000104c80	kernel.asm	/^ffff800000104c80:	3b 45 fc             	cmp    -0x4(%rbp),%eax$/;"	l
ffff800000104c83	kernel.asm	/^ffff800000104c83:	7f c4                	jg     ffff800000104c49 <read_head+0x62>$/;"	l
ffff800000104c85	kernel.asm	/^ffff800000104c85:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000104c89	kernel.asm	/^ffff800000104c89:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000104c8c	kernel.asm	/^ffff800000104c8c:	48 b8 aa 04 10 00 00 	movabs $0xffff8000001004aa,%rax$/;"	l
ffff800000104c93	kernel.asm	/^ffff800000104c93:	80 ff ff $/;"	l
ffff800000104c96	kernel.asm	/^ffff800000104c96:	ff d0                	callq  *%rax$/;"	l
ffff800000104c98	kernel.asm	/^ffff800000104c98:	90                   	nop$/;"	l
ffff800000104c99	kernel.asm	/^ffff800000104c99:	c9                   	leaveq $/;"	l
ffff800000104c9a	kernel.asm	/^ffff800000104c9a:	c3                   	retq   $/;"	l
ffff800000104c9b	kernel.asm	/^ffff800000104c9b <write_head>:$/;"	l
ffff800000104c9b	kernel.asm	/^ffff800000104c9b:	55                   	push   %rbp$/;"	l
ffff800000104c9c	kernel.asm	/^ffff800000104c9c:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000104c9f	kernel.asm	/^ffff800000104c9f:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ffff800000104ca3	kernel.asm	/^ffff800000104ca3:	48 b8 e0 71 11 00 00 	movabs $0xffff8000001171e0,%rax$/;"	l
ffff800000104caa	kernel.asm	/^ffff800000104caa:	80 ff ff $/;"	l
ffff800000104cad	kernel.asm	/^ffff800000104cad:	8b 40 68             	mov    0x68(%rax),%eax$/;"	l
ffff800000104cb0	kernel.asm	/^ffff800000104cb0:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000104cb2	kernel.asm	/^ffff800000104cb2:	48 b8 e0 71 11 00 00 	movabs $0xffff8000001171e0,%rax$/;"	l
ffff800000104cb9	kernel.asm	/^ffff800000104cb9:	80 ff ff $/;"	l
ffff800000104cbc	kernel.asm	/^ffff800000104cbc:	8b 40 78             	mov    0x78(%rax),%eax$/;"	l
ffff800000104cbf	kernel.asm	/^ffff800000104cbf:	89 d6                	mov    %edx,%esi$/;"	l
ffff800000104cc1	kernel.asm	/^ffff800000104cc1:	89 c7                	mov    %eax,%edi$/;"	l
ffff800000104cc3	kernel.asm	/^ffff800000104cc3:	48 b8 f8 03 10 00 00 	movabs $0xffff8000001003f8,%rax$/;"	l
ffff800000104cca	kernel.asm	/^ffff800000104cca:	80 ff ff $/;"	l
ffff800000104ccd	kernel.asm	/^ffff800000104ccd:	ff d0                	callq  *%rax$/;"	l
ffff800000104ccf	kernel.asm	/^ffff800000104ccf:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ffff800000104cd3	kernel.asm	/^ffff800000104cd3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000104cd7	kernel.asm	/^ffff800000104cd7:	48 05 b0 00 00 00    	add    $0xb0,%rax$/;"	l
ffff800000104cdd	kernel.asm	/^ffff800000104cdd:	48 89 45 e8          	mov    %rax,-0x18(%rbp)$/;"	l
ffff800000104ce1	kernel.asm	/^ffff800000104ce1:	48 b8 e0 71 11 00 00 	movabs $0xffff8000001171e0,%rax$/;"	l
ffff800000104ce8	kernel.asm	/^ffff800000104ce8:	80 ff ff $/;"	l
ffff800000104ceb	kernel.asm	/^ffff800000104ceb:	8b 50 7c             	mov    0x7c(%rax),%edx$/;"	l
ffff800000104cee	kernel.asm	/^ffff800000104cee:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000104cf2	kernel.asm	/^ffff800000104cf2:	89 10                	mov    %edx,(%rax)$/;"	l
ffff800000104cf4	kernel.asm	/^ffff800000104cf4:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)$/;"	l
ffff800000104cfb	kernel.asm	/^ffff800000104cfb:	eb 2a                	jmp    ffff800000104d27 <write_head+0x8c>$/;"	l
ffff800000104cfd	kernel.asm	/^ffff800000104cfd:	48 b8 e0 71 11 00 00 	movabs $0xffff8000001171e0,%rax$/;"	l
ffff800000104d04	kernel.asm	/^ffff800000104d04:	80 ff ff $/;"	l
ffff800000104d07	kernel.asm	/^ffff800000104d07:	8b 55 fc             	mov    -0x4(%rbp),%edx$/;"	l
ffff800000104d0a	kernel.asm	/^ffff800000104d0a:	48 63 d2             	movslq %edx,%rdx$/;"	l
ffff800000104d0d	kernel.asm	/^ffff800000104d0d:	48 83 c2 1c          	add    $0x1c,%rdx$/;"	l
ffff800000104d11	kernel.asm	/^ffff800000104d11:	8b 4c 90 10          	mov    0x10(%rax,%rdx,4),%ecx$/;"	l
ffff800000104d15	kernel.asm	/^ffff800000104d15:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000104d19	kernel.asm	/^ffff800000104d19:	8b 55 fc             	mov    -0x4(%rbp),%edx$/;"	l
ffff800000104d1c	kernel.asm	/^ffff800000104d1c:	48 63 d2             	movslq %edx,%rdx$/;"	l
ffff800000104d1f	kernel.asm	/^ffff800000104d1f:	89 4c 90 04          	mov    %ecx,0x4(%rax,%rdx,4)$/;"	l
ffff800000104d23	kernel.asm	/^ffff800000104d23:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)$/;"	l
ffff800000104d27	kernel.asm	/^ffff800000104d27:	48 b8 e0 71 11 00 00 	movabs $0xffff8000001171e0,%rax$/;"	l
ffff800000104d2e	kernel.asm	/^ffff800000104d2e:	80 ff ff $/;"	l
ffff800000104d31	kernel.asm	/^ffff800000104d31:	8b 40 7c             	mov    0x7c(%rax),%eax$/;"	l
ffff800000104d34	kernel.asm	/^ffff800000104d34:	3b 45 fc             	cmp    -0x4(%rbp),%eax$/;"	l
ffff800000104d37	kernel.asm	/^ffff800000104d37:	7f c4                	jg     ffff800000104cfd <write_head+0x62>$/;"	l
ffff800000104d39	kernel.asm	/^ffff800000104d39:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000104d3d	kernel.asm	/^ffff800000104d3d:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000104d40	kernel.asm	/^ffff800000104d40:	48 b8 46 04 10 00 00 	movabs $0xffff800000100446,%rax$/;"	l
ffff800000104d47	kernel.asm	/^ffff800000104d47:	80 ff ff $/;"	l
ffff800000104d4a	kernel.asm	/^ffff800000104d4a:	ff d0                	callq  *%rax$/;"	l
ffff800000104d4c	kernel.asm	/^ffff800000104d4c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000104d50	kernel.asm	/^ffff800000104d50:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000104d53	kernel.asm	/^ffff800000104d53:	48 b8 aa 04 10 00 00 	movabs $0xffff8000001004aa,%rax$/;"	l
ffff800000104d5a	kernel.asm	/^ffff800000104d5a:	80 ff ff $/;"	l
ffff800000104d5d	kernel.asm	/^ffff800000104d5d:	ff d0                	callq  *%rax$/;"	l
ffff800000104d5f	kernel.asm	/^ffff800000104d5f:	90                   	nop$/;"	l
ffff800000104d60	kernel.asm	/^ffff800000104d60:	c9                   	leaveq $/;"	l
ffff800000104d61	kernel.asm	/^ffff800000104d61:	c3                   	retq   $/;"	l
ffff800000104d62	kernel.asm	/^ffff800000104d62 <recover_from_log>:$/;"	l
ffff800000104d62	kernel.asm	/^ffff800000104d62:	55                   	push   %rbp$/;"	l
ffff800000104d63	kernel.asm	/^ffff800000104d63:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000104d66	kernel.asm	/^ffff800000104d66:	48 b8 e7 4b 10 00 00 	movabs $0xffff800000104be7,%rax$/;"	l
ffff800000104d6d	kernel.asm	/^ffff800000104d6d:	80 ff ff $/;"	l
ffff800000104d70	kernel.asm	/^ffff800000104d70:	ff d0                	callq  *%rax$/;"	l
ffff800000104d72	kernel.asm	/^ffff800000104d72:	48 b8 de 4a 10 00 00 	movabs $0xffff800000104ade,%rax$/;"	l
ffff800000104d79	kernel.asm	/^ffff800000104d79:	80 ff ff $/;"	l
ffff800000104d7c	kernel.asm	/^ffff800000104d7c:	ff d0                	callq  *%rax$/;"	l
ffff800000104d7e	kernel.asm	/^ffff800000104d7e:	48 b8 e0 71 11 00 00 	movabs $0xffff8000001171e0,%rax$/;"	l
ffff800000104d85	kernel.asm	/^ffff800000104d85:	80 ff ff $/;"	l
ffff800000104d88	kernel.asm	/^ffff800000104d88:	c7 40 7c 00 00 00 00 	movl   $0x0,0x7c(%rax)$/;"	l
ffff800000104d8f	kernel.asm	/^ffff800000104d8f:	48 b8 9b 4c 10 00 00 	movabs $0xffff800000104c9b,%rax$/;"	l
ffff800000104d96	kernel.asm	/^ffff800000104d96:	80 ff ff $/;"	l
ffff800000104d99	kernel.asm	/^ffff800000104d99:	ff d0                	callq  *%rax$/;"	l
ffff800000104d9b	kernel.asm	/^ffff800000104d9b:	90                   	nop$/;"	l
ffff800000104d9c	kernel.asm	/^ffff800000104d9c:	5d                   	pop    %rbp$/;"	l
ffff800000104d9d	kernel.asm	/^ffff800000104d9d:	c3                   	retq   $/;"	l
ffff800000104d9e	kernel.asm	/^ffff800000104d9e <begin_op>:$/;"	l
ffff800000104d9e	kernel.asm	/^ffff800000104d9e:	55                   	push   %rbp$/;"	l
ffff800000104d9f	kernel.asm	/^ffff800000104d9f:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000104da2	kernel.asm	/^ffff800000104da2:	48 bf e0 71 11 00 00 	movabs $0xffff8000001171e0,%rdi$/;"	l
ffff800000104da9	kernel.asm	/^ffff800000104da9:	80 ff ff $/;"	l
ffff800000104dac	kernel.asm	/^ffff800000104dac:	48 b8 ff 71 10 00 00 	movabs $0xffff8000001071ff,%rax$/;"	l
ffff800000104db3	kernel.asm	/^ffff800000104db3:	80 ff ff $/;"	l
ffff800000104db6	kernel.asm	/^ffff800000104db6:	ff d0                	callq  *%rax$/;"	l
ffff800000104db8	kernel.asm	/^ffff800000104db8:	48 b8 e0 71 11 00 00 	movabs $0xffff8000001171e0,%rax$/;"	l
ffff800000104dbf	kernel.asm	/^ffff800000104dbf:	80 ff ff $/;"	l
ffff800000104dc2	kernel.asm	/^ffff800000104dc2:	8b 40 74             	mov    0x74(%rax),%eax$/;"	l
ffff800000104dc5	kernel.asm	/^ffff800000104dc5:	85 c0                	test   %eax,%eax$/;"	l
ffff800000104dc7	kernel.asm	/^ffff800000104dc7:	74 22                	je     ffff800000104deb <begin_op+0x4d>$/;"	l
ffff800000104dc9	kernel.asm	/^ffff800000104dc9:	48 be e0 71 11 00 00 	movabs $0xffff8000001171e0,%rsi$/;"	l
ffff800000104dd0	kernel.asm	/^ffff800000104dd0:	80 ff ff $/;"	l
ffff800000104dd3	kernel.asm	/^ffff800000104dd3:	48 bf e0 71 11 00 00 	movabs $0xffff8000001171e0,%rdi$/;"	l
ffff800000104dda	kernel.asm	/^ffff800000104dda:	80 ff ff $/;"	l
ffff800000104ddd	kernel.asm	/^ffff800000104ddd:	48 b8 23 6c 10 00 00 	movabs $0xffff800000106c23,%rax$/;"	l
ffff800000104de4	kernel.asm	/^ffff800000104de4:	80 ff ff $/;"	l
ffff800000104de7	kernel.asm	/^ffff800000104de7:	ff d0                	callq  *%rax$/;"	l
ffff800000104de9	kernel.asm	/^ffff800000104de9:	eb cd                	jmp    ffff800000104db8 <begin_op+0x1a>$/;"	l
ffff800000104deb	kernel.asm	/^ffff800000104deb:	48 b8 e0 71 11 00 00 	movabs $0xffff8000001171e0,%rax$/;"	l
ffff800000104df2	kernel.asm	/^ffff800000104df2:	80 ff ff $/;"	l
ffff800000104df5	kernel.asm	/^ffff800000104df5:	8b 48 7c             	mov    0x7c(%rax),%ecx$/;"	l
ffff800000104df8	kernel.asm	/^ffff800000104df8:	48 b8 e0 71 11 00 00 	movabs $0xffff8000001171e0,%rax$/;"	l
ffff800000104dff	kernel.asm	/^ffff800000104dff:	80 ff ff $/;"	l
ffff800000104e02	kernel.asm	/^ffff800000104e02:	8b 40 70             	mov    0x70(%rax),%eax$/;"	l
ffff800000104e05	kernel.asm	/^ffff800000104e05:	8d 50 01             	lea    0x1(%rax),%edx$/;"	l
ffff800000104e08	kernel.asm	/^ffff800000104e08:	89 d0                	mov    %edx,%eax$/;"	l
ffff800000104e0a	kernel.asm	/^ffff800000104e0a:	c1 e0 02             	shl    $0x2,%eax$/;"	l
ffff800000104e0d	kernel.asm	/^ffff800000104e0d:	01 d0                	add    %edx,%eax$/;"	l
ffff800000104e0f	kernel.asm	/^ffff800000104e0f:	01 c0                	add    %eax,%eax$/;"	l
ffff800000104e11	kernel.asm	/^ffff800000104e11:	01 c8                	add    %ecx,%eax$/;"	l
ffff800000104e13	kernel.asm	/^ffff800000104e13:	83 f8 1e             	cmp    $0x1e,%eax$/;"	l
ffff800000104e16	kernel.asm	/^ffff800000104e16:	7e 25                	jle    ffff800000104e3d <begin_op+0x9f>$/;"	l
ffff800000104e18	kernel.asm	/^ffff800000104e18:	48 be e0 71 11 00 00 	movabs $0xffff8000001171e0,%rsi$/;"	l
ffff800000104e1f	kernel.asm	/^ffff800000104e1f:	80 ff ff $/;"	l
ffff800000104e22	kernel.asm	/^ffff800000104e22:	48 bf e0 71 11 00 00 	movabs $0xffff8000001171e0,%rdi$/;"	l
ffff800000104e29	kernel.asm	/^ffff800000104e29:	80 ff ff $/;"	l
ffff800000104e2c	kernel.asm	/^ffff800000104e2c:	48 b8 23 6c 10 00 00 	movabs $0xffff800000106c23,%rax$/;"	l
ffff800000104e33	kernel.asm	/^ffff800000104e33:	80 ff ff $/;"	l
ffff800000104e36	kernel.asm	/^ffff800000104e36:	ff d0                	callq  *%rax$/;"	l
ffff800000104e38	kernel.asm	/^ffff800000104e38:	e9 7b ff ff ff       	jmpq   ffff800000104db8 <begin_op+0x1a>$/;"	l
ffff800000104e3d	kernel.asm	/^ffff800000104e3d:	48 b8 e0 71 11 00 00 	movabs $0xffff8000001171e0,%rax$/;"	l
ffff800000104e44	kernel.asm	/^ffff800000104e44:	80 ff ff $/;"	l
ffff800000104e47	kernel.asm	/^ffff800000104e47:	8b 40 70             	mov    0x70(%rax),%eax$/;"	l
ffff800000104e4a	kernel.asm	/^ffff800000104e4a:	8d 50 01             	lea    0x1(%rax),%edx$/;"	l
ffff800000104e4d	kernel.asm	/^ffff800000104e4d:	48 b8 e0 71 11 00 00 	movabs $0xffff8000001171e0,%rax$/;"	l
ffff800000104e54	kernel.asm	/^ffff800000104e54:	80 ff ff $/;"	l
ffff800000104e57	kernel.asm	/^ffff800000104e57:	89 50 70             	mov    %edx,0x70(%rax)$/;"	l
ffff800000104e5a	kernel.asm	/^ffff800000104e5a:	48 bf e0 71 11 00 00 	movabs $0xffff8000001171e0,%rdi$/;"	l
ffff800000104e61	kernel.asm	/^ffff800000104e61:	80 ff ff $/;"	l
ffff800000104e64	kernel.asm	/^ffff800000104e64:	48 b8 98 72 10 00 00 	movabs $0xffff800000107298,%rax$/;"	l
ffff800000104e6b	kernel.asm	/^ffff800000104e6b:	80 ff ff $/;"	l
ffff800000104e6e	kernel.asm	/^ffff800000104e6e:	ff d0                	callq  *%rax$/;"	l
ffff800000104e70	kernel.asm	/^ffff800000104e70:	90                   	nop$/;"	l
ffff800000104e71	kernel.asm	/^ffff800000104e71:	90                   	nop$/;"	l
ffff800000104e72	kernel.asm	/^ffff800000104e72:	5d                   	pop    %rbp$/;"	l
ffff800000104e73	kernel.asm	/^ffff800000104e73:	c3                   	retq   $/;"	l
ffff800000104e74	kernel.asm	/^ffff800000104e74 <end_op>:$/;"	l
ffff800000104e74	kernel.asm	/^ffff800000104e74:	55                   	push   %rbp$/;"	l
ffff800000104e75	kernel.asm	/^ffff800000104e75:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000104e78	kernel.asm	/^ffff800000104e78:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff800000104e7c	kernel.asm	/^ffff800000104e7c:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)$/;"	l
ffff800000104e83	kernel.asm	/^ffff800000104e83:	48 bf e0 71 11 00 00 	movabs $0xffff8000001171e0,%rdi$/;"	l
ffff800000104e8a	kernel.asm	/^ffff800000104e8a:	80 ff ff $/;"	l
ffff800000104e8d	kernel.asm	/^ffff800000104e8d:	48 b8 ff 71 10 00 00 	movabs $0xffff8000001071ff,%rax$/;"	l
ffff800000104e94	kernel.asm	/^ffff800000104e94:	80 ff ff $/;"	l
ffff800000104e97	kernel.asm	/^ffff800000104e97:	ff d0                	callq  *%rax$/;"	l
ffff800000104e99	kernel.asm	/^ffff800000104e99:	48 b8 e0 71 11 00 00 	movabs $0xffff8000001171e0,%rax$/;"	l
ffff800000104ea0	kernel.asm	/^ffff800000104ea0:	80 ff ff $/;"	l
ffff800000104ea3	kernel.asm	/^ffff800000104ea3:	8b 40 70             	mov    0x70(%rax),%eax$/;"	l
ffff800000104ea6	kernel.asm	/^ffff800000104ea6:	8d 50 ff             	lea    -0x1(%rax),%edx$/;"	l
ffff800000104ea9	kernel.asm	/^ffff800000104ea9:	48 b8 e0 71 11 00 00 	movabs $0xffff8000001171e0,%rax$/;"	l
ffff800000104eb0	kernel.asm	/^ffff800000104eb0:	80 ff ff $/;"	l
ffff800000104eb3	kernel.asm	/^ffff800000104eb3:	89 50 70             	mov    %edx,0x70(%rax)$/;"	l
ffff800000104eb6	kernel.asm	/^ffff800000104eb6:	48 b8 e0 71 11 00 00 	movabs $0xffff8000001171e0,%rax$/;"	l
ffff800000104ebd	kernel.asm	/^ffff800000104ebd:	80 ff ff $/;"	l
ffff800000104ec0	kernel.asm	/^ffff800000104ec0:	8b 40 74             	mov    0x74(%rax),%eax$/;"	l
ffff800000104ec3	kernel.asm	/^ffff800000104ec3:	85 c0                	test   %eax,%eax$/;"	l
ffff800000104ec5	kernel.asm	/^ffff800000104ec5:	74 16                	je     ffff800000104edd <end_op+0x69>$/;"	l
ffff800000104ec7	kernel.asm	/^ffff800000104ec7:	48 bf 88 bc 10 00 00 	movabs $0xffff80000010bc88,%rdi$/;"	l
ffff800000104ece	kernel.asm	/^ffff800000104ece:	80 ff ff $/;"	l
ffff800000104ed1	kernel.asm	/^ffff800000104ed1:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff800000104ed8	kernel.asm	/^ffff800000104ed8:	80 ff ff $/;"	l
ffff800000104edb	kernel.asm	/^ffff800000104edb:	ff d0                	callq  *%rax$/;"	l
ffff800000104edd	kernel.asm	/^ffff800000104edd:	48 b8 e0 71 11 00 00 	movabs $0xffff8000001171e0,%rax$/;"	l
ffff800000104ee4	kernel.asm	/^ffff800000104ee4:	80 ff ff $/;"	l
ffff800000104ee7	kernel.asm	/^ffff800000104ee7:	8b 40 70             	mov    0x70(%rax),%eax$/;"	l
ffff800000104eea	kernel.asm	/^ffff800000104eea:	85 c0                	test   %eax,%eax$/;"	l
ffff800000104eec	kernel.asm	/^ffff800000104eec:	75 1a                	jne    ffff800000104f08 <end_op+0x94>$/;"	l
ffff800000104eee	kernel.asm	/^ffff800000104eee:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%rbp)$/;"	l
ffff800000104ef5	kernel.asm	/^ffff800000104ef5:	48 b8 e0 71 11 00 00 	movabs $0xffff8000001171e0,%rax$/;"	l
ffff800000104efc	kernel.asm	/^ffff800000104efc:	80 ff ff $/;"	l
ffff800000104eff	kernel.asm	/^ffff800000104eff:	c7 40 74 01 00 00 00 	movl   $0x1,0x74(%rax)$/;"	l
ffff800000104f06	kernel.asm	/^ffff800000104f06:	eb 16                	jmp    ffff800000104f1e <end_op+0xaa>$/;"	l
ffff800000104f08	kernel.asm	/^ffff800000104f08:	48 bf e0 71 11 00 00 	movabs $0xffff8000001171e0,%rdi$/;"	l
ffff800000104f0f	kernel.asm	/^ffff800000104f0f:	80 ff ff $/;"	l
ffff800000104f12	kernel.asm	/^ffff800000104f12:	48 b8 8b 6d 10 00 00 	movabs $0xffff800000106d8b,%rax$/;"	l
ffff800000104f19	kernel.asm	/^ffff800000104f19:	80 ff ff $/;"	l
ffff800000104f1c	kernel.asm	/^ffff800000104f1c:	ff d0                	callq  *%rax$/;"	l
ffff800000104f1e	kernel.asm	/^ffff800000104f1e:	48 bf e0 71 11 00 00 	movabs $0xffff8000001171e0,%rdi$/;"	l
ffff800000104f25	kernel.asm	/^ffff800000104f25:	80 ff ff $/;"	l
ffff800000104f28	kernel.asm	/^ffff800000104f28:	48 b8 98 72 10 00 00 	movabs $0xffff800000107298,%rax$/;"	l
ffff800000104f2f	kernel.asm	/^ffff800000104f2f:	80 ff ff $/;"	l
ffff800000104f32	kernel.asm	/^ffff800000104f32:	ff d0                	callq  *%rax$/;"	l
ffff800000104f34	kernel.asm	/^ffff800000104f34:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)$/;"	l
ffff800000104f38	kernel.asm	/^ffff800000104f38:	74 64                	je     ffff800000104f9e <end_op+0x12a>$/;"	l
ffff800000104f3a	kernel.asm	/^ffff800000104f3a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000104f3f	kernel.asm	/^ffff800000104f3f:	48 ba aa 50 10 00 00 	movabs $0xffff8000001050aa,%rdx$/;"	l
ffff800000104f46	kernel.asm	/^ffff800000104f46:	80 ff ff $/;"	l
ffff800000104f49	kernel.asm	/^ffff800000104f49:	ff d2                	callq  *%rdx$/;"	l
ffff800000104f4b	kernel.asm	/^ffff800000104f4b:	48 bf e0 71 11 00 00 	movabs $0xffff8000001171e0,%rdi$/;"	l
ffff800000104f52	kernel.asm	/^ffff800000104f52:	80 ff ff $/;"	l
ffff800000104f55	kernel.asm	/^ffff800000104f55:	48 b8 ff 71 10 00 00 	movabs $0xffff8000001071ff,%rax$/;"	l
ffff800000104f5c	kernel.asm	/^ffff800000104f5c:	80 ff ff $/;"	l
ffff800000104f5f	kernel.asm	/^ffff800000104f5f:	ff d0                	callq  *%rax$/;"	l
ffff800000104f61	kernel.asm	/^ffff800000104f61:	48 b8 e0 71 11 00 00 	movabs $0xffff8000001171e0,%rax$/;"	l
ffff800000104f68	kernel.asm	/^ffff800000104f68:	80 ff ff $/;"	l
ffff800000104f6b	kernel.asm	/^ffff800000104f6b:	c7 40 74 00 00 00 00 	movl   $0x0,0x74(%rax)$/;"	l
ffff800000104f72	kernel.asm	/^ffff800000104f72:	48 bf e0 71 11 00 00 	movabs $0xffff8000001171e0,%rdi$/;"	l
ffff800000104f79	kernel.asm	/^ffff800000104f79:	80 ff ff $/;"	l
ffff800000104f7c	kernel.asm	/^ffff800000104f7c:	48 b8 8b 6d 10 00 00 	movabs $0xffff800000106d8b,%rax$/;"	l
ffff800000104f83	kernel.asm	/^ffff800000104f83:	80 ff ff $/;"	l
ffff800000104f86	kernel.asm	/^ffff800000104f86:	ff d0                	callq  *%rax$/;"	l
ffff800000104f88	kernel.asm	/^ffff800000104f88:	48 bf e0 71 11 00 00 	movabs $0xffff8000001171e0,%rdi$/;"	l
ffff800000104f8f	kernel.asm	/^ffff800000104f8f:	80 ff ff $/;"	l
ffff800000104f92	kernel.asm	/^ffff800000104f92:	48 b8 98 72 10 00 00 	movabs $0xffff800000107298,%rax$/;"	l
ffff800000104f99	kernel.asm	/^ffff800000104f99:	80 ff ff $/;"	l
ffff800000104f9c	kernel.asm	/^ffff800000104f9c:	ff d0                	callq  *%rax$/;"	l
ffff800000104f9e	kernel.asm	/^ffff800000104f9e:	90                   	nop$/;"	l
ffff800000104f9f	kernel.asm	/^ffff800000104f9f:	c9                   	leaveq $/;"	l
ffff800000104fa0	kernel.asm	/^ffff800000104fa0:	c3                   	retq   $/;"	l
ffff800000104fa1	kernel.asm	/^ffff800000104fa1 <write_log>:$/;"	l
ffff800000104fa1	kernel.asm	/^ffff800000104fa1:	55                   	push   %rbp$/;"	l
ffff800000104fa2	kernel.asm	/^ffff800000104fa2:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000104fa5	kernel.asm	/^ffff800000104fa5:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ffff800000104fa9	kernel.asm	/^ffff800000104fa9:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)$/;"	l
ffff800000104fb0	kernel.asm	/^ffff800000104fb0:	e9 dc 00 00 00       	jmpq   ffff800000105091 <write_log+0xf0>$/;"	l
ffff800000104fb5	kernel.asm	/^ffff800000104fb5:	48 b8 e0 71 11 00 00 	movabs $0xffff8000001171e0,%rax$/;"	l
ffff800000104fbc	kernel.asm	/^ffff800000104fbc:	80 ff ff $/;"	l
ffff800000104fbf	kernel.asm	/^ffff800000104fbf:	8b 50 68             	mov    0x68(%rax),%edx$/;"	l
ffff800000104fc2	kernel.asm	/^ffff800000104fc2:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff800000104fc5	kernel.asm	/^ffff800000104fc5:	01 d0                	add    %edx,%eax$/;"	l
ffff800000104fc7	kernel.asm	/^ffff800000104fc7:	83 c0 01             	add    $0x1,%eax$/;"	l
ffff800000104fca	kernel.asm	/^ffff800000104fca:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000104fcc	kernel.asm	/^ffff800000104fcc:	48 b8 e0 71 11 00 00 	movabs $0xffff8000001171e0,%rax$/;"	l
ffff800000104fd3	kernel.asm	/^ffff800000104fd3:	80 ff ff $/;"	l
ffff800000104fd6	kernel.asm	/^ffff800000104fd6:	8b 40 78             	mov    0x78(%rax),%eax$/;"	l
ffff800000104fd9	kernel.asm	/^ffff800000104fd9:	89 d6                	mov    %edx,%esi$/;"	l
ffff800000104fdb	kernel.asm	/^ffff800000104fdb:	89 c7                	mov    %eax,%edi$/;"	l
ffff800000104fdd	kernel.asm	/^ffff800000104fdd:	48 b8 f8 03 10 00 00 	movabs $0xffff8000001003f8,%rax$/;"	l
ffff800000104fe4	kernel.asm	/^ffff800000104fe4:	80 ff ff $/;"	l
ffff800000104fe7	kernel.asm	/^ffff800000104fe7:	ff d0                	callq  *%rax$/;"	l
ffff800000104fe9	kernel.asm	/^ffff800000104fe9:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ffff800000104fed	kernel.asm	/^ffff800000104fed:	48 b8 e0 71 11 00 00 	movabs $0xffff8000001171e0,%rax$/;"	l
ffff800000104ff4	kernel.asm	/^ffff800000104ff4:	80 ff ff $/;"	l
ffff800000104ff7	kernel.asm	/^ffff800000104ff7:	8b 55 fc             	mov    -0x4(%rbp),%edx$/;"	l
ffff800000104ffa	kernel.asm	/^ffff800000104ffa:	48 63 d2             	movslq %edx,%rdx$/;"	l
ffff800000104ffd	kernel.asm	/^ffff800000104ffd:	48 83 c2 1c          	add    $0x1c,%rdx$/;"	l
ffff800000105001	kernel.asm	/^ffff800000105001:	8b 44 90 10          	mov    0x10(%rax,%rdx,4),%eax$/;"	l
ffff800000105005	kernel.asm	/^ffff800000105005:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000105007	kernel.asm	/^ffff800000105007:	48 b8 e0 71 11 00 00 	movabs $0xffff8000001171e0,%rax$/;"	l
ffff80000010500e	kernel.asm	/^ffff80000010500e:	80 ff ff $/;"	l
ffff800000105011	kernel.asm	/^ffff800000105011:	8b 40 78             	mov    0x78(%rax),%eax$/;"	l
ffff800000105014	kernel.asm	/^ffff800000105014:	89 d6                	mov    %edx,%esi$/;"	l
ffff800000105016	kernel.asm	/^ffff800000105016:	89 c7                	mov    %eax,%edi$/;"	l
ffff800000105018	kernel.asm	/^ffff800000105018:	48 b8 f8 03 10 00 00 	movabs $0xffff8000001003f8,%rax$/;"	l
ffff80000010501f	kernel.asm	/^ffff80000010501f:	80 ff ff $/;"	l
ffff800000105022	kernel.asm	/^ffff800000105022:	ff d0                	callq  *%rax$/;"	l
ffff800000105024	kernel.asm	/^ffff800000105024:	48 89 45 e8          	mov    %rax,-0x18(%rbp)$/;"	l
ffff800000105028	kernel.asm	/^ffff800000105028:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010502c	kernel.asm	/^ffff80000010502c:	48 8d 88 b0 00 00 00 	lea    0xb0(%rax),%rcx$/;"	l
ffff800000105033	kernel.asm	/^ffff800000105033:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000105037	kernel.asm	/^ffff800000105037:	48 05 b0 00 00 00    	add    $0xb0,%rax$/;"	l
ffff80000010503d	kernel.asm	/^ffff80000010503d:	ba 00 02 00 00       	mov    $0x200,%edx$/;"	l
ffff800000105042	kernel.asm	/^ffff800000105042:	48 89 ce             	mov    %rcx,%rsi$/;"	l
ffff800000105045	kernel.asm	/^ffff800000105045:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000105048	kernel.asm	/^ffff800000105048:	48 b8 98 76 10 00 00 	movabs $0xffff800000107698,%rax$/;"	l
ffff80000010504f	kernel.asm	/^ffff80000010504f:	80 ff ff $/;"	l
ffff800000105052	kernel.asm	/^ffff800000105052:	ff d0                	callq  *%rax$/;"	l
ffff800000105054	kernel.asm	/^ffff800000105054:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000105058	kernel.asm	/^ffff800000105058:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010505b	kernel.asm	/^ffff80000010505b:	48 b8 46 04 10 00 00 	movabs $0xffff800000100446,%rax$/;"	l
ffff800000105062	kernel.asm	/^ffff800000105062:	80 ff ff $/;"	l
ffff800000105065	kernel.asm	/^ffff800000105065:	ff d0                	callq  *%rax$/;"	l
ffff800000105067	kernel.asm	/^ffff800000105067:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010506b	kernel.asm	/^ffff80000010506b:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010506e	kernel.asm	/^ffff80000010506e:	48 b8 aa 04 10 00 00 	movabs $0xffff8000001004aa,%rax$/;"	l
ffff800000105075	kernel.asm	/^ffff800000105075:	80 ff ff $/;"	l
ffff800000105078	kernel.asm	/^ffff800000105078:	ff d0                	callq  *%rax$/;"	l
ffff80000010507a	kernel.asm	/^ffff80000010507a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff80000010507e	kernel.asm	/^ffff80000010507e:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000105081	kernel.asm	/^ffff800000105081:	48 b8 aa 04 10 00 00 	movabs $0xffff8000001004aa,%rax$/;"	l
ffff800000105088	kernel.asm	/^ffff800000105088:	80 ff ff $/;"	l
ffff80000010508b	kernel.asm	/^ffff80000010508b:	ff d0                	callq  *%rax$/;"	l
ffff80000010508d	kernel.asm	/^ffff80000010508d:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)$/;"	l
ffff800000105091	kernel.asm	/^ffff800000105091:	48 b8 e0 71 11 00 00 	movabs $0xffff8000001171e0,%rax$/;"	l
ffff800000105098	kernel.asm	/^ffff800000105098:	80 ff ff $/;"	l
ffff80000010509b	kernel.asm	/^ffff80000010509b:	8b 40 7c             	mov    0x7c(%rax),%eax$/;"	l
ffff80000010509e	kernel.asm	/^ffff80000010509e:	3b 45 fc             	cmp    -0x4(%rbp),%eax$/;"	l
ffff8000001050a1	kernel.asm	/^ffff8000001050a1:	0f 8f 0e ff ff ff    	jg     ffff800000104fb5 <write_log+0x14>$/;"	l
ffff8000001050a7	kernel.asm	/^ffff8000001050a7:	90                   	nop$/;"	l
ffff8000001050a8	kernel.asm	/^ffff8000001050a8:	c9                   	leaveq $/;"	l
ffff8000001050a9	kernel.asm	/^ffff8000001050a9:	c3                   	retq   $/;"	l
ffff8000001050aa	kernel.asm	/^ffff8000001050aa <commit>:$/;"	l
ffff8000001050aa	kernel.asm	/^ffff8000001050aa:	55                   	push   %rbp$/;"	l
ffff8000001050ab	kernel.asm	/^ffff8000001050ab:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff8000001050ae	kernel.asm	/^ffff8000001050ae:	48 b8 e0 71 11 00 00 	movabs $0xffff8000001171e0,%rax$/;"	l
ffff8000001050b5	kernel.asm	/^ffff8000001050b5:	80 ff ff $/;"	l
ffff8000001050b8	kernel.asm	/^ffff8000001050b8:	8b 40 7c             	mov    0x7c(%rax),%eax$/;"	l
ffff8000001050bb	kernel.asm	/^ffff8000001050bb:	85 c0                	test   %eax,%eax$/;"	l
ffff8000001050bd	kernel.asm	/^ffff8000001050bd:	7e 41                	jle    ffff800000105100 <commit+0x56>$/;"	l
ffff8000001050bf	kernel.asm	/^ffff8000001050bf:	48 b8 a1 4f 10 00 00 	movabs $0xffff800000104fa1,%rax$/;"	l
ffff8000001050c6	kernel.asm	/^ffff8000001050c6:	80 ff ff $/;"	l
ffff8000001050c9	kernel.asm	/^ffff8000001050c9:	ff d0                	callq  *%rax$/;"	l
ffff8000001050cb	kernel.asm	/^ffff8000001050cb:	48 b8 9b 4c 10 00 00 	movabs $0xffff800000104c9b,%rax$/;"	l
ffff8000001050d2	kernel.asm	/^ffff8000001050d2:	80 ff ff $/;"	l
ffff8000001050d5	kernel.asm	/^ffff8000001050d5:	ff d0                	callq  *%rax$/;"	l
ffff8000001050d7	kernel.asm	/^ffff8000001050d7:	48 b8 de 4a 10 00 00 	movabs $0xffff800000104ade,%rax$/;"	l
ffff8000001050de	kernel.asm	/^ffff8000001050de:	80 ff ff $/;"	l
ffff8000001050e1	kernel.asm	/^ffff8000001050e1:	ff d0                	callq  *%rax$/;"	l
ffff8000001050e3	kernel.asm	/^ffff8000001050e3:	48 b8 e0 71 11 00 00 	movabs $0xffff8000001171e0,%rax$/;"	l
ffff8000001050ea	kernel.asm	/^ffff8000001050ea:	80 ff ff $/;"	l
ffff8000001050ed	kernel.asm	/^ffff8000001050ed:	c7 40 7c 00 00 00 00 	movl   $0x0,0x7c(%rax)$/;"	l
ffff8000001050f4	kernel.asm	/^ffff8000001050f4:	48 b8 9b 4c 10 00 00 	movabs $0xffff800000104c9b,%rax$/;"	l
ffff8000001050fb	kernel.asm	/^ffff8000001050fb:	80 ff ff $/;"	l
ffff8000001050fe	kernel.asm	/^ffff8000001050fe:	ff d0                	callq  *%rax$/;"	l
ffff800000105100	kernel.asm	/^ffff800000105100:	90                   	nop$/;"	l
ffff800000105101	kernel.asm	/^ffff800000105101:	5d                   	pop    %rbp$/;"	l
ffff800000105102	kernel.asm	/^ffff800000105102:	c3                   	retq   $/;"	l
ffff800000105103	kernel.asm	/^ffff800000105103 <log_write>:$/;"	l
ffff800000105103	kernel.asm	/^ffff800000105103:	55                   	push   %rbp$/;"	l
ffff800000105104	kernel.asm	/^ffff800000105104:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000105107	kernel.asm	/^ffff800000105107:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ffff80000010510b	kernel.asm	/^ffff80000010510b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
ffff80000010510f	kernel.asm	/^ffff80000010510f:	48 b8 e0 71 11 00 00 	movabs $0xffff8000001171e0,%rax$/;"	l
ffff800000105116	kernel.asm	/^ffff800000105116:	80 ff ff $/;"	l
ffff800000105119	kernel.asm	/^ffff800000105119:	8b 40 7c             	mov    0x7c(%rax),%eax$/;"	l
ffff80000010511c	kernel.asm	/^ffff80000010511c:	83 f8 1d             	cmp    $0x1d,%eax$/;"	l
ffff80000010511f	kernel.asm	/^ffff80000010511f:	7f 21                	jg     ffff800000105142 <log_write+0x3f>$/;"	l
ffff800000105121	kernel.asm	/^ffff800000105121:	48 b8 e0 71 11 00 00 	movabs $0xffff8000001171e0,%rax$/;"	l
ffff800000105128	kernel.asm	/^ffff800000105128:	80 ff ff $/;"	l
ffff80000010512b	kernel.asm	/^ffff80000010512b:	8b 50 7c             	mov    0x7c(%rax),%edx$/;"	l
ffff80000010512e	kernel.asm	/^ffff80000010512e:	48 b8 e0 71 11 00 00 	movabs $0xffff8000001171e0,%rax$/;"	l
ffff800000105135	kernel.asm	/^ffff800000105135:	80 ff ff $/;"	l
ffff800000105138	kernel.asm	/^ffff800000105138:	8b 40 6c             	mov    0x6c(%rax),%eax$/;"	l
ffff80000010513b	kernel.asm	/^ffff80000010513b:	83 e8 01             	sub    $0x1,%eax$/;"	l
ffff80000010513e	kernel.asm	/^ffff80000010513e:	39 c2                	cmp    %eax,%edx$/;"	l
ffff800000105140	kernel.asm	/^ffff800000105140:	7c 16                	jl     ffff800000105158 <log_write+0x55>$/;"	l
ffff800000105142	kernel.asm	/^ffff800000105142:	48 bf 97 bc 10 00 00 	movabs $0xffff80000010bc97,%rdi$/;"	l
ffff800000105149	kernel.asm	/^ffff800000105149:	80 ff ff $/;"	l
ffff80000010514c	kernel.asm	/^ffff80000010514c:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff800000105153	kernel.asm	/^ffff800000105153:	80 ff ff $/;"	l
ffff800000105156	kernel.asm	/^ffff800000105156:	ff d0                	callq  *%rax$/;"	l
ffff800000105158	kernel.asm	/^ffff800000105158:	48 b8 e0 71 11 00 00 	movabs $0xffff8000001171e0,%rax$/;"	l
ffff80000010515f	kernel.asm	/^ffff80000010515f:	80 ff ff $/;"	l
ffff800000105162	kernel.asm	/^ffff800000105162:	8b 40 70             	mov    0x70(%rax),%eax$/;"	l
ffff800000105165	kernel.asm	/^ffff800000105165:	85 c0                	test   %eax,%eax$/;"	l
ffff800000105167	kernel.asm	/^ffff800000105167:	7f 16                	jg     ffff80000010517f <log_write+0x7c>$/;"	l
ffff800000105169	kernel.asm	/^ffff800000105169:	48 bf ad bc 10 00 00 	movabs $0xffff80000010bcad,%rdi$/;"	l
ffff800000105170	kernel.asm	/^ffff800000105170:	80 ff ff $/;"	l
ffff800000105173	kernel.asm	/^ffff800000105173:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff80000010517a	kernel.asm	/^ffff80000010517a:	80 ff ff $/;"	l
ffff80000010517d	kernel.asm	/^ffff80000010517d:	ff d0                	callq  *%rax$/;"	l
ffff80000010517f	kernel.asm	/^ffff80000010517f:	48 bf e0 71 11 00 00 	movabs $0xffff8000001171e0,%rdi$/;"	l
ffff800000105186	kernel.asm	/^ffff800000105186:	80 ff ff $/;"	l
ffff800000105189	kernel.asm	/^ffff800000105189:	48 b8 ff 71 10 00 00 	movabs $0xffff8000001071ff,%rax$/;"	l
ffff800000105190	kernel.asm	/^ffff800000105190:	80 ff ff $/;"	l
ffff800000105193	kernel.asm	/^ffff800000105193:	ff d0                	callq  *%rax$/;"	l
ffff800000105195	kernel.asm	/^ffff800000105195:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)$/;"	l
ffff80000010519c	kernel.asm	/^ffff80000010519c:	eb 29                	jmp    ffff8000001051c7 <log_write+0xc4>$/;"	l
ffff80000010519e	kernel.asm	/^ffff80000010519e:	48 b8 e0 71 11 00 00 	movabs $0xffff8000001171e0,%rax$/;"	l
ffff8000001051a5	kernel.asm	/^ffff8000001051a5:	80 ff ff $/;"	l
ffff8000001051a8	kernel.asm	/^ffff8000001051a8:	8b 55 fc             	mov    -0x4(%rbp),%edx$/;"	l
ffff8000001051ab	kernel.asm	/^ffff8000001051ab:	48 63 d2             	movslq %edx,%rdx$/;"	l
ffff8000001051ae	kernel.asm	/^ffff8000001051ae:	48 83 c2 1c          	add    $0x1c,%rdx$/;"	l
ffff8000001051b2	kernel.asm	/^ffff8000001051b2:	8b 44 90 10          	mov    0x10(%rax,%rdx,4),%eax$/;"	l
ffff8000001051b6	kernel.asm	/^ffff8000001051b6:	89 c2                	mov    %eax,%edx$/;"	l
ffff8000001051b8	kernel.asm	/^ffff8000001051b8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff8000001051bc	kernel.asm	/^ffff8000001051bc:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
ffff8000001051bf	kernel.asm	/^ffff8000001051bf:	39 c2                	cmp    %eax,%edx$/;"	l
ffff8000001051c1	kernel.asm	/^ffff8000001051c1:	74 18                	je     ffff8000001051db <log_write+0xd8>$/;"	l
ffff8000001051c3	kernel.asm	/^ffff8000001051c3:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)$/;"	l
ffff8000001051c7	kernel.asm	/^ffff8000001051c7:	48 b8 e0 71 11 00 00 	movabs $0xffff8000001171e0,%rax$/;"	l
ffff8000001051ce	kernel.asm	/^ffff8000001051ce:	80 ff ff $/;"	l
ffff8000001051d1	kernel.asm	/^ffff8000001051d1:	8b 40 7c             	mov    0x7c(%rax),%eax$/;"	l
ffff8000001051d4	kernel.asm	/^ffff8000001051d4:	3b 45 fc             	cmp    -0x4(%rbp),%eax$/;"	l
ffff8000001051d7	kernel.asm	/^ffff8000001051d7:	7f c5                	jg     ffff80000010519e <log_write+0x9b>$/;"	l
ffff8000001051d9	kernel.asm	/^ffff8000001051d9:	eb 01                	jmp    ffff8000001051dc <log_write+0xd9>$/;"	l
ffff8000001051db	kernel.asm	/^ffff8000001051db:	90                   	nop$/;"	l
ffff8000001051dc	kernel.asm	/^ffff8000001051dc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff8000001051e0	kernel.asm	/^ffff8000001051e0:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
ffff8000001051e3	kernel.asm	/^ffff8000001051e3:	89 c1                	mov    %eax,%ecx$/;"	l
ffff8000001051e5	kernel.asm	/^ffff8000001051e5:	48 b8 e0 71 11 00 00 	movabs $0xffff8000001171e0,%rax$/;"	l
ffff8000001051ec	kernel.asm	/^ffff8000001051ec:	80 ff ff $/;"	l
ffff8000001051ef	kernel.asm	/^ffff8000001051ef:	8b 55 fc             	mov    -0x4(%rbp),%edx$/;"	l
ffff8000001051f2	kernel.asm	/^ffff8000001051f2:	48 63 d2             	movslq %edx,%rdx$/;"	l
ffff8000001051f5	kernel.asm	/^ffff8000001051f5:	48 83 c2 1c          	add    $0x1c,%rdx$/;"	l
ffff8000001051f9	kernel.asm	/^ffff8000001051f9:	89 4c 90 10          	mov    %ecx,0x10(%rax,%rdx,4)$/;"	l
ffff8000001051fd	kernel.asm	/^ffff8000001051fd:	48 b8 e0 71 11 00 00 	movabs $0xffff8000001171e0,%rax$/;"	l
ffff800000105204	kernel.asm	/^ffff800000105204:	80 ff ff $/;"	l
ffff800000105207	kernel.asm	/^ffff800000105207:	8b 40 7c             	mov    0x7c(%rax),%eax$/;"	l
ffff80000010520a	kernel.asm	/^ffff80000010520a:	3b 45 fc             	cmp    -0x4(%rbp),%eax$/;"	l
ffff80000010520d	kernel.asm	/^ffff80000010520d:	75 1d                	jne    ffff80000010522c <log_write+0x129>$/;"	l
ffff80000010520f	kernel.asm	/^ffff80000010520f:	48 b8 e0 71 11 00 00 	movabs $0xffff8000001171e0,%rax$/;"	l
ffff800000105216	kernel.asm	/^ffff800000105216:	80 ff ff $/;"	l
ffff800000105219	kernel.asm	/^ffff800000105219:	8b 40 7c             	mov    0x7c(%rax),%eax$/;"	l
ffff80000010521c	kernel.asm	/^ffff80000010521c:	8d 50 01             	lea    0x1(%rax),%edx$/;"	l
ffff80000010521f	kernel.asm	/^ffff80000010521f:	48 b8 e0 71 11 00 00 	movabs $0xffff8000001171e0,%rax$/;"	l
ffff800000105226	kernel.asm	/^ffff800000105226:	80 ff ff $/;"	l
ffff800000105229	kernel.asm	/^ffff800000105229:	89 50 7c             	mov    %edx,0x7c(%rax)$/;"	l
ffff80000010522c	kernel.asm	/^ffff80000010522c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000105230	kernel.asm	/^ffff800000105230:	8b 00                	mov    (%rax),%eax$/;"	l
ffff800000105232	kernel.asm	/^ffff800000105232:	83 c8 04             	or     $0x4,%eax$/;"	l
ffff800000105235	kernel.asm	/^ffff800000105235:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000105237	kernel.asm	/^ffff800000105237:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010523b	kernel.asm	/^ffff80000010523b:	89 10                	mov    %edx,(%rax)$/;"	l
ffff80000010523d	kernel.asm	/^ffff80000010523d:	48 bf e0 71 11 00 00 	movabs $0xffff8000001171e0,%rdi$/;"	l
ffff800000105244	kernel.asm	/^ffff800000105244:	80 ff ff $/;"	l
ffff800000105247	kernel.asm	/^ffff800000105247:	48 b8 98 72 10 00 00 	movabs $0xffff800000107298,%rax$/;"	l
ffff80000010524e	kernel.asm	/^ffff80000010524e:	80 ff ff $/;"	l
ffff800000105251	kernel.asm	/^ffff800000105251:	ff d0                	callq  *%rax$/;"	l
ffff800000105253	kernel.asm	/^ffff800000105253:	90                   	nop$/;"	l
ffff800000105254	kernel.asm	/^ffff800000105254:	c9                   	leaveq $/;"	l
ffff800000105255	kernel.asm	/^ffff800000105255:	c3                   	retq   $/;"	l
ffff800000105256	kernel.asm	/^ffff800000105256 <v2p>:$/;"	l
ffff800000105256	kernel.asm	/^ffff800000105256:	55                   	push   %rbp$/;"	l
ffff800000105257	kernel.asm	/^ffff800000105257:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010525a	kernel.asm	/^ffff80000010525a:	48 83 ec 08          	sub    $0x8,%rsp$/;"	l
ffff80000010525e	kernel.asm	/^ffff80000010525e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)$/;"	l
ffff800000105262	kernel.asm	/^ffff800000105262:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx$/;"	l
ffff800000105266	kernel.asm	/^ffff800000105266:	48 b8 00 00 00 00 00 	movabs $0x800000000000,%rax$/;"	l
ffff80000010526d	kernel.asm	/^ffff80000010526d:	80 00 00 $/;"	l
ffff800000105270	kernel.asm	/^ffff800000105270:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff800000105273	kernel.asm	/^ffff800000105273:	c9                   	leaveq $/;"	l
ffff800000105274	kernel.asm	/^ffff800000105274:	c3                   	retq   $/;"	l
ffff800000105275	kernel.asm	/^ffff800000105275 <xchg>:$/;"	l
ffff800000105275	kernel.asm	/^ffff800000105275:	55                   	push   %rbp$/;"	l
ffff800000105276	kernel.asm	/^ffff800000105276:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000105279	kernel.asm	/^ffff800000105279:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ffff80000010527d	kernel.asm	/^ffff80000010527d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
ffff800000105281	kernel.asm	/^ffff800000105281:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)$/;"	l
ffff800000105285	kernel.asm	/^ffff800000105285:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx$/;"	l
ffff800000105289	kernel.asm	/^ffff800000105289:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff80000010528d	kernel.asm	/^ffff80000010528d:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx$/;"	l
ffff800000105291	kernel.asm	/^ffff800000105291:	f0 87 02             	lock xchg %eax,(%rdx)$/;"	l
ffff800000105294	kernel.asm	/^ffff800000105294:	89 45 fc             	mov    %eax,-0x4(%rbp)$/;"	l
ffff800000105297	kernel.asm	/^ffff800000105297:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff80000010529a	kernel.asm	/^ffff80000010529a:	c9                   	leaveq $/;"	l
ffff80000010529b	kernel.asm	/^ffff80000010529b:	c3                   	retq   $/;"	l
ffff80000010529c	kernel.asm	/^ffff80000010529c <main>:$/;"	l
ffff80000010529c	kernel.asm	/^ffff80000010529c:	55                   	push   %rbp$/;"	l
ffff80000010529d	kernel.asm	/^ffff80000010529d:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff8000001052a0	kernel.asm	/^ffff8000001052a0:	48 b8 ba 98 10 00 00 	movabs $0xffff8000001098ba,%rax$/;"	l
ffff8000001052a7	kernel.asm	/^ffff8000001052a7:	80 ff ff $/;"	l
ffff8000001052aa	kernel.asm	/^ffff8000001052aa:	ff d0                	callq  *%rax$/;"	l
ffff8000001052ac	kernel.asm	/^ffff8000001052ac:	48 be 00 00 40 00 00 	movabs $0xffff800000400000,%rsi$/;"	l
ffff8000001052b3	kernel.asm	/^ffff8000001052b3:	80 ff ff $/;"	l
ffff8000001052b6	kernel.asm	/^ffff8000001052b6:	48 bf 00 c0 11 00 00 	movabs $0xffff80000011c000,%rdi$/;"	l
ffff8000001052bd	kernel.asm	/^ffff8000001052bd:	80 ff ff $/;"	l
ffff8000001052c0	kernel.asm	/^ffff8000001052c0:	48 b8 b9 3e 10 00 00 	movabs $0xffff800000103eb9,%rax$/;"	l
ffff8000001052c7	kernel.asm	/^ffff8000001052c7:	80 ff ff $/;"	l
ffff8000001052ca	kernel.asm	/^ffff8000001052ca:	ff d0                	callq  *%rax$/;"	l
ffff8000001052cc	kernel.asm	/^ffff8000001052cc:	48 b8 8f ab 10 00 00 	movabs $0xffff80000010ab8f,%rax$/;"	l
ffff8000001052d3	kernel.asm	/^ffff8000001052d3:	80 ff ff $/;"	l
ffff8000001052d6	kernel.asm	/^ffff8000001052d6:	ff d0                	callq  *%rax$/;"	l
ffff8000001052d8	kernel.asm	/^ffff8000001052d8:	48 b8 9a 58 10 00 00 	movabs $0xffff80000010589a,%rax$/;"	l
ffff8000001052df	kernel.asm	/^ffff8000001052df:	80 ff ff $/;"	l
ffff8000001052e2	kernel.asm	/^ffff8000001052e2:	ff d0                	callq  *%rax$/;"	l
ffff8000001052e4	kernel.asm	/^ffff8000001052e4:	48 b8 db 43 10 00 00 	movabs $0xffff8000001043db,%rax$/;"	l
ffff8000001052eb	kernel.asm	/^ffff8000001052eb:	80 ff ff $/;"	l
ffff8000001052ee	kernel.asm	/^ffff8000001052ee:	ff d0                	callq  *%rax$/;"	l
ffff8000001052f0	kernel.asm	/^ffff8000001052f0:	48 b8 97 93 10 00 00 	movabs $0xffff800000109397,%rax$/;"	l
ffff8000001052f7	kernel.asm	/^ffff8000001052f7:	80 ff ff $/;"	l
ffff8000001052fa	kernel.asm	/^ffff8000001052fa:	ff d0                	callq  *%rax$/;"	l
ffff8000001052fc	kernel.asm	/^ffff8000001052fc:	48 b8 d1 a6 10 00 00 	movabs $0xffff80000010a6d1,%rax$/;"	l
ffff800000105303	kernel.asm	/^ffff800000105303:	80 ff ff $/;"	l
ffff800000105306	kernel.asm	/^ffff800000105306:	ff d0                	callq  *%rax$/;"	l
ffff800000105308	kernel.asm	/^ffff800000105308:	48 b8 6b 45 10 00 00 	movabs $0xffff80000010456b,%rax$/;"	l
ffff80000010530f	kernel.asm	/^ffff80000010530f:	80 ff ff $/;"	l
ffff800000105312	kernel.asm	/^ffff800000105312:	ff d0                	callq  *%rax$/;"	l
ffff800000105314	kernel.asm	/^ffff800000105314:	89 c6                	mov    %eax,%esi$/;"	l
ffff800000105316	kernel.asm	/^ffff800000105316:	48 bf c8 bc 10 00 00 	movabs $0xffff80000010bcc8,%rdi$/;"	l
ffff80000010531d	kernel.asm	/^ffff80000010531d:	80 ff ff $/;"	l
ffff800000105320	kernel.asm	/^ffff800000105320:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000105325	kernel.asm	/^ffff800000105325:	48 ba ac 07 10 00 00 	movabs $0xffff8000001007ac,%rdx$/;"	l
ffff80000010532c	kernel.asm	/^ffff80000010532c:	80 ff ff $/;"	l
ffff80000010532f	kernel.asm	/^ffff80000010532f:	ff d2                	callq  *%rdx$/;"	l
ffff800000105331	kernel.asm	/^ffff800000105331:	48 b8 88 3d 10 00 00 	movabs $0xffff800000103d88,%rax$/;"	l
ffff800000105338	kernel.asm	/^ffff800000105338:	80 ff ff $/;"	l
ffff80000010533b	kernel.asm	/^ffff80000010533b:	ff d0                	callq  *%rax$/;"	l
ffff80000010533d	kernel.asm	/^ffff80000010533d:	48 b8 bb 13 10 00 00 	movabs $0xffff8000001013bb,%rax$/;"	l
ffff800000105344	kernel.asm	/^ffff800000105344:	80 ff ff $/;"	l
ffff800000105347	kernel.asm	/^ffff800000105347:	ff d0                	callq  *%rax$/;"	l
ffff800000105349	kernel.asm	/^ffff800000105349:	48 b8 be 99 10 00 00 	movabs $0xffff8000001099be,%rax$/;"	l
ffff800000105350	kernel.asm	/^ffff800000105350:	80 ff ff $/;"	l
ffff800000105353	kernel.asm	/^ffff800000105353:	ff d0                	callq  *%rax$/;"	l
ffff800000105355	kernel.asm	/^ffff800000105355:	48 b8 c1 5f 10 00 00 	movabs $0xffff800000105fc1,%rax$/;"	l
ffff80000010535c	kernel.asm	/^ffff80000010535c:	80 ff ff $/;"	l
ffff80000010535f	kernel.asm	/^ffff80000010535f:	ff d0                	callq  *%rax$/;"	l
ffff800000105361	kernel.asm	/^ffff800000105361:	48 b8 53 01 10 00 00 	movabs $0xffff800000100153,%rax$/;"	l
ffff800000105368	kernel.asm	/^ffff800000105368:	80 ff ff $/;"	l
ffff80000010536b	kernel.asm	/^ffff80000010536b:	ff d0                	callq  *%rax$/;"	l
ffff80000010536d	kernel.asm	/^ffff80000010536d:	48 b8 79 1a 10 00 00 	movabs $0xffff800000101a79,%rax$/;"	l
ffff800000105374	kernel.asm	/^ffff800000105374:	80 ff ff $/;"	l
ffff800000105377	kernel.asm	/^ffff800000105377:	ff d0                	callq  *%rax$/;"	l
ffff800000105379	kernel.asm	/^ffff800000105379:	48 b8 03 38 10 00 00 	movabs $0xffff800000103803,%rax$/;"	l
ffff800000105380	kernel.asm	/^ffff800000105380:	80 ff ff $/;"	l
ffff800000105383	kernel.asm	/^ffff800000105383:	ff d0                	callq  *%rax$/;"	l
ffff800000105385	kernel.asm	/^ffff800000105385:	48 b8 73 54 10 00 00 	movabs $0xffff800000105473,%rax$/;"	l
ffff80000010538c	kernel.asm	/^ffff80000010538c:	80 ff ff $/;"	l
ffff80000010538f	kernel.asm	/^ffff80000010538f:	ff d0                	callq  *%rax$/;"	l
ffff800000105391	kernel.asm	/^ffff800000105391:	48 be 00 00 00 0e 00 	movabs $0xffff80000e000000,%rsi$/;"	l
ffff800000105398	kernel.asm	/^ffff800000105398:	80 ff ff $/;"	l
ffff80000010539b	kernel.asm	/^ffff80000010539b:	48 bf 00 00 40 00 00 	movabs $0xffff800000400000,%rdi$/;"	l
ffff8000001053a2	kernel.asm	/^ffff8000001053a2:	80 ff ff $/;"	l
ffff8000001053a5	kernel.asm	/^ffff8000001053a5:	48 b8 17 3f 10 00 00 	movabs $0xffff800000103f17,%rax$/;"	l
ffff8000001053ac	kernel.asm	/^ffff8000001053ac:	80 ff ff $/;"	l
ffff8000001053af	kernel.asm	/^ffff8000001053af:	ff d0                	callq  *%rax$/;"	l
ffff8000001053b1	kernel.asm	/^ffff8000001053b1:	48 b8 60 61 10 00 00 	movabs $0xffff800000106160,%rax$/;"	l
ffff8000001053b8	kernel.asm	/^ffff8000001053b8:	80 ff ff $/;"	l
ffff8000001053bb	kernel.asm	/^ffff8000001053bb:	ff d0                	callq  *%rax$/;"	l
ffff8000001053bd	kernel.asm	/^ffff8000001053bd:	48 b8 fd 53 10 00 00 	movabs $0xffff8000001053fd,%rax$/;"	l
ffff8000001053c4	kernel.asm	/^ffff8000001053c4:	80 ff ff $/;"	l
ffff8000001053c7	kernel.asm	/^ffff8000001053c7:	ff d0                	callq  *%rax$/;"	l
ffff8000001053c9	kernel.asm	/^ffff8000001053c9 <mpenter>:$/;"	l
ffff8000001053c9	kernel.asm	/^ffff8000001053c9:	55                   	push   %rbp$/;"	l
ffff8000001053ca	kernel.asm	/^ffff8000001053ca:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff8000001053cd	kernel.asm	/^ffff8000001053cd:	48 b8 94 ac 10 00 00 	movabs $0xffff80000010ac94,%rax$/;"	l
ffff8000001053d4	kernel.asm	/^ffff8000001053d4:	80 ff ff $/;"	l
ffff8000001053d7	kernel.asm	/^ffff8000001053d7:	ff d0                	callq  *%rax$/;"	l
ffff8000001053d9	kernel.asm	/^ffff8000001053d9:	48 b8 d1 a6 10 00 00 	movabs $0xffff80000010a6d1,%rax$/;"	l
ffff8000001053e0	kernel.asm	/^ffff8000001053e0:	80 ff ff $/;"	l
ffff8000001053e3	kernel.asm	/^ffff8000001053e3:	ff d0                	callq  *%rax$/;"	l
ffff8000001053e5	kernel.asm	/^ffff8000001053e5:	48 b8 db 43 10 00 00 	movabs $0xffff8000001043db,%rax$/;"	l
ffff8000001053ec	kernel.asm	/^ffff8000001053ec:	80 ff ff $/;"	l
ffff8000001053ef	kernel.asm	/^ffff8000001053ef:	ff d0                	callq  *%rax$/;"	l
ffff8000001053f1	kernel.asm	/^ffff8000001053f1:	48 b8 fd 53 10 00 00 	movabs $0xffff8000001053fd,%rax$/;"	l
ffff8000001053f8	kernel.asm	/^ffff8000001053f8:	80 ff ff $/;"	l
ffff8000001053fb	kernel.asm	/^ffff8000001053fb:	ff d0                	callq  *%rax$/;"	l
ffff8000001053fd	kernel.asm	/^ffff8000001053fd <mpmain>:$/;"	l
ffff8000001053fd	kernel.asm	/^ffff8000001053fd:	55                   	push   %rbp$/;"	l
ffff8000001053fe	kernel.asm	/^ffff8000001053fe:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000105401	kernel.asm	/^ffff800000105401:	48 b8 6b 45 10 00 00 	movabs $0xffff80000010456b,%rax$/;"	l
ffff800000105408	kernel.asm	/^ffff800000105408:	80 ff ff $/;"	l
ffff80000010540b	kernel.asm	/^ffff80000010540b:	ff d0                	callq  *%rax$/;"	l
ffff80000010540d	kernel.asm	/^ffff80000010540d:	89 c6                	mov    %eax,%esi$/;"	l
ffff80000010540f	kernel.asm	/^ffff80000010540f:	48 bf df bc 10 00 00 	movabs $0xffff80000010bcdf,%rdi$/;"	l
ffff800000105416	kernel.asm	/^ffff800000105416:	80 ff ff $/;"	l
ffff800000105419	kernel.asm	/^ffff800000105419:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff80000010541e	kernel.asm	/^ffff80000010541e:	48 ba ac 07 10 00 00 	movabs $0xffff8000001007ac,%rdx$/;"	l
ffff800000105425	kernel.asm	/^ffff800000105425:	80 ff ff $/;"	l
ffff800000105428	kernel.asm	/^ffff800000105428:	ff d2                	callq  *%rdx$/;"	l
ffff80000010542a	kernel.asm	/^ffff80000010542a:	48 b8 6f 93 10 00 00 	movabs $0xffff80000010936f,%rax$/;"	l
ffff800000105431	kernel.asm	/^ffff800000105431:	80 ff ff $/;"	l
ffff800000105434	kernel.asm	/^ffff800000105434:	ff d0                	callq  *%rax$/;"	l
ffff800000105436	kernel.asm	/^ffff800000105436:	48 b8 5d a6 10 00 00 	movabs $0xffff80000010a65d,%rax$/;"	l
ffff80000010543d	kernel.asm	/^ffff80000010543d:	80 ff ff $/;"	l
ffff800000105440	kernel.asm	/^ffff800000105440:	ff d0                	callq  *%rax$/;"	l
ffff800000105442	kernel.asm	/^ffff800000105442:	48 c7 c0 f0 ff ff ff 	mov    $0xfffffffffffffff0,%rax$/;"	l
ffff800000105449	kernel.asm	/^ffff800000105449:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff80000010544d	kernel.asm	/^ffff80000010544d:	48 05 e0 00 00 00    	add    $0xe0,%rax$/;"	l
ffff800000105453	kernel.asm	/^ffff800000105453:	be 01 00 00 00       	mov    $0x1,%esi$/;"	l
ffff800000105458	kernel.asm	/^ffff800000105458:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010545b	kernel.asm	/^ffff80000010545b:	48 b8 75 52 10 00 00 	movabs $0xffff800000105275,%rax$/;"	l
ffff800000105462	kernel.asm	/^ffff800000105462:	80 ff ff $/;"	l
ffff800000105465	kernel.asm	/^ffff800000105465:	ff d0                	callq  *%rax$/;"	l
ffff800000105467	kernel.asm	/^ffff800000105467:	48 b8 60 69 10 00 00 	movabs $0xffff800000106960,%rax$/;"	l
ffff80000010546e	kernel.asm	/^ffff80000010546e:	80 ff ff $/;"	l
ffff800000105471	kernel.asm	/^ffff800000105471:	ff d0                	callq  *%rax$/;"	l
ffff800000105473	kernel.asm	/^ffff800000105473 <startothers>:$/;"	l
ffff800000105473	kernel.asm	/^ffff800000105473:	55                   	push   %rbp$/;"	l
ffff800000105474	kernel.asm	/^ffff800000105474:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000105477	kernel.asm	/^ffff800000105477:	53                   	push   %rbx$/;"	l
ffff800000105478	kernel.asm	/^ffff800000105478:	48 83 ec 28          	sub    $0x28,%rsp$/;"	l
ffff80000010547c	kernel.asm	/^ffff80000010547c:	48 b8 00 70 00 00 00 	movabs $0xffff800000007000,%rax$/;"	l
ffff800000105483	kernel.asm	/^ffff800000105483:	80 ff ff $/;"	l
ffff800000105486	kernel.asm	/^ffff800000105486:	48 89 45 e0          	mov    %rax,-0x20(%rbp)$/;"	l
ffff80000010548a	kernel.asm	/^ffff80000010548a:	48 b8 72 00 00 00 00 	movabs $0x72,%rax$/;"	l
ffff800000105491	kernel.asm	/^ffff800000105491:	00 00 00 $/;"	l
ffff800000105494	kernel.asm	/^ffff800000105494:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000105496	kernel.asm	/^ffff800000105496:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff80000010549a	kernel.asm	/^ffff80000010549a:	48 be 8c de 10 00 00 	movabs $0xffff80000010de8c,%rsi$/;"	l
ffff8000001054a1	kernel.asm	/^ffff8000001054a1:	80 ff ff $/;"	l
ffff8000001054a4	kernel.asm	/^ffff8000001054a4:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001054a7	kernel.asm	/^ffff8000001054a7:	48 b8 98 76 10 00 00 	movabs $0xffff800000107698,%rax$/;"	l
ffff8000001054ae	kernel.asm	/^ffff8000001054ae:	80 ff ff $/;"	l
ffff8000001054b1	kernel.asm	/^ffff8000001054b1:	ff d0                	callq  *%rax$/;"	l
ffff8000001054b3	kernel.asm	/^ffff8000001054b3:	48 b8 e0 72 11 00 00 	movabs $0xffff8000001172e0,%rax$/;"	l
ffff8000001054ba	kernel.asm	/^ffff8000001054ba:	80 ff ff $/;"	l
ffff8000001054bd	kernel.asm	/^ffff8000001054bd:	48 89 45 e8          	mov    %rax,-0x18(%rbp)$/;"	l
ffff8000001054c1	kernel.asm	/^ffff8000001054c1:	e9 c2 00 00 00       	jmpq   ffff800000105588 <startothers+0x115>$/;"	l
ffff8000001054c6	kernel.asm	/^ffff8000001054c6:	48 b8 6b 45 10 00 00 	movabs $0xffff80000010456b,%rax$/;"	l
ffff8000001054cd	kernel.asm	/^ffff8000001054cd:	80 ff ff $/;"	l
ffff8000001054d0	kernel.asm	/^ffff8000001054d0:	ff d0                	callq  *%rax$/;"	l
ffff8000001054d2	kernel.asm	/^ffff8000001054d2:	48 98                	cltq   $/;"	l
ffff8000001054d4	kernel.asm	/^ffff8000001054d4:	48 c1 e0 03          	shl    $0x3,%rax$/;"	l
ffff8000001054d8	kernel.asm	/^ffff8000001054d8:	48 89 c2             	mov    %rax,%rdx$/;"	l
ffff8000001054db	kernel.asm	/^ffff8000001054db:	48 c1 e2 05          	shl    $0x5,%rdx$/;"	l
ffff8000001054df	kernel.asm	/^ffff8000001054df:	48 29 c2             	sub    %rax,%rdx$/;"	l
ffff8000001054e2	kernel.asm	/^ffff8000001054e2:	48 b8 e0 72 11 00 00 	movabs $0xffff8000001172e0,%rax$/;"	l
ffff8000001054e9	kernel.asm	/^ffff8000001054e9:	80 ff ff $/;"	l
ffff8000001054ec	kernel.asm	/^ffff8000001054ec:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff8000001054ef	kernel.asm	/^ffff8000001054ef:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax$/;"	l
ffff8000001054f3	kernel.asm	/^ffff8000001054f3:	0f 84 86 00 00 00    	je     ffff80000010557f <startothers+0x10c>$/;"	l
ffff8000001054f9	kernel.asm	/^ffff8000001054f9:	48 b8 9f 40 10 00 00 	movabs $0xffff80000010409f,%rax$/;"	l
ffff800000105500	kernel.asm	/^ffff800000105500:	80 ff ff $/;"	l
ffff800000105503	kernel.asm	/^ffff800000105503:	ff d0                	callq  *%rax$/;"	l
ffff800000105505	kernel.asm	/^ffff800000105505:	48 89 45 d8          	mov    %rax,-0x28(%rbp)$/;"	l
ffff800000105509	kernel.asm	/^ffff800000105509:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff80000010550d	kernel.asm	/^ffff80000010550d:	48 83 e8 04          	sub    $0x4,%rax$/;"	l
ffff800000105511	kernel.asm	/^ffff800000105511:	c7 00 00 80 00 00    	movl   $0x8000,(%rax)$/;"	l
ffff800000105517	kernel.asm	/^ffff800000105517:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff80000010551b	kernel.asm	/^ffff80000010551b:	48 8d 58 f8          	lea    -0x8(%rax),%rbx$/;"	l
ffff80000010551f	kernel.asm	/^ffff80000010551f:	48 bf 49 00 10 00 00 	movabs $0xffff800000100049,%rdi$/;"	l
ffff800000105526	kernel.asm	/^ffff800000105526:	80 ff ff $/;"	l
ffff800000105529	kernel.asm	/^ffff800000105529:	48 b8 56 52 10 00 00 	movabs $0xffff800000105256,%rax$/;"	l
ffff800000105530	kernel.asm	/^ffff800000105530:	80 ff ff $/;"	l
ffff800000105533	kernel.asm	/^ffff800000105533:	ff d0                	callq  *%rax$/;"	l
ffff800000105535	kernel.asm	/^ffff800000105535:	89 03                	mov    %eax,(%rbx)$/;"	l
ffff800000105537	kernel.asm	/^ffff800000105537:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff80000010553b	kernel.asm	/^ffff80000010553b:	48 83 e8 10          	sub    $0x10,%rax$/;"	l
ffff80000010553f	kernel.asm	/^ffff80000010553f:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx$/;"	l
ffff800000105543	kernel.asm	/^ffff800000105543:	48 81 c2 00 10 00 00 	add    $0x1000,%rdx$/;"	l
ffff80000010554a	kernel.asm	/^ffff80000010554a:	48 89 10             	mov    %rdx,(%rax)$/;"	l
ffff80000010554d	kernel.asm	/^ffff80000010554d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff800000105551	kernel.asm	/^ffff800000105551:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000105553	kernel.asm	/^ffff800000105553:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000105557	kernel.asm	/^ffff800000105557:	0f b6 40 01          	movzbl 0x1(%rax),%eax$/;"	l
ffff80000010555b	kernel.asm	/^ffff80000010555b:	0f b6 c0             	movzbl %al,%eax$/;"	l
ffff80000010555e	kernel.asm	/^ffff80000010555e:	89 d6                	mov    %edx,%esi$/;"	l
ffff800000105560	kernel.asm	/^ffff800000105560:	89 c7                	mov    %eax,%edi$/;"	l
ffff800000105562	kernel.asm	/^ffff800000105562:	48 b8 b0 46 10 00 00 	movabs $0xffff8000001046b0,%rax$/;"	l
ffff800000105569	kernel.asm	/^ffff800000105569:	80 ff ff $/;"	l
ffff80000010556c	kernel.asm	/^ffff80000010556c:	ff d0                	callq  *%rax$/;"	l
ffff80000010556e	kernel.asm	/^ffff80000010556e:	90                   	nop$/;"	l
ffff80000010556f	kernel.asm	/^ffff80000010556f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000105573	kernel.asm	/^ffff800000105573:	8b 80 e0 00 00 00    	mov    0xe0(%rax),%eax$/;"	l
ffff800000105579	kernel.asm	/^ffff800000105579:	85 c0                	test   %eax,%eax$/;"	l
ffff80000010557b	kernel.asm	/^ffff80000010557b:	74 f2                	je     ffff80000010556f <startothers+0xfc>$/;"	l
ffff80000010557d	kernel.asm	/^ffff80000010557d:	eb 01                	jmp    ffff800000105580 <startothers+0x10d>$/;"	l
ffff80000010557f	kernel.asm	/^ffff80000010557f:	90                   	nop$/;"	l
ffff800000105580	kernel.asm	/^ffff800000105580:	48 81 45 e8 f8 00 00 	addq   $0xf8,-0x18(%rbp)$/;"	l
ffff800000105587	kernel.asm	/^ffff800000105587:	00 $/;"	l
ffff800000105588	kernel.asm	/^ffff800000105588:	48 b8 a0 7a 11 00 00 	movabs $0xffff800000117aa0,%rax$/;"	l
ffff80000010558f	kernel.asm	/^ffff80000010558f:	80 ff ff $/;"	l
ffff800000105592	kernel.asm	/^ffff800000105592:	8b 00                	mov    (%rax),%eax$/;"	l
ffff800000105594	kernel.asm	/^ffff800000105594:	48 98                	cltq   $/;"	l
ffff800000105596	kernel.asm	/^ffff800000105596:	48 c1 e0 03          	shl    $0x3,%rax$/;"	l
ffff80000010559a	kernel.asm	/^ffff80000010559a:	48 89 c2             	mov    %rax,%rdx$/;"	l
ffff80000010559d	kernel.asm	/^ffff80000010559d:	48 c1 e2 05          	shl    $0x5,%rdx$/;"	l
ffff8000001055a1	kernel.asm	/^ffff8000001055a1:	48 29 c2             	sub    %rax,%rdx$/;"	l
ffff8000001055a4	kernel.asm	/^ffff8000001055a4:	48 b8 e0 72 11 00 00 	movabs $0xffff8000001172e0,%rax$/;"	l
ffff8000001055ab	kernel.asm	/^ffff8000001055ab:	80 ff ff $/;"	l
ffff8000001055ae	kernel.asm	/^ffff8000001055ae:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff8000001055b1	kernel.asm	/^ffff8000001055b1:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax$/;"	l
ffff8000001055b5	kernel.asm	/^ffff8000001055b5:	0f 87 0b ff ff ff    	ja     ffff8000001054c6 <startothers+0x53>$/;"	l
ffff8000001055bb	kernel.asm	/^ffff8000001055bb:	90                   	nop$/;"	l
ffff8000001055bc	kernel.asm	/^ffff8000001055bc:	48 83 c4 28          	add    $0x28,%rsp$/;"	l
ffff8000001055c0	kernel.asm	/^ffff8000001055c0:	5b                   	pop    %rbx$/;"	l
ffff8000001055c1	kernel.asm	/^ffff8000001055c1:	5d                   	pop    %rbp$/;"	l
ffff8000001055c2	kernel.asm	/^ffff8000001055c2:	c3                   	retq   $/;"	l
ffff8000001055c3	kernel.asm	/^ffff8000001055c3 <inb>:$/;"	l
ffff8000001055c3	kernel.asm	/^ffff8000001055c3:	55                   	push   %rbp$/;"	l
ffff8000001055c4	kernel.asm	/^ffff8000001055c4:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff8000001055c7	kernel.asm	/^ffff8000001055c7:	48 83 ec 18          	sub    $0x18,%rsp$/;"	l
ffff8000001055cb	kernel.asm	/^ffff8000001055cb:	89 f8                	mov    %edi,%eax$/;"	l
ffff8000001055cd	kernel.asm	/^ffff8000001055cd:	66 89 45 ec          	mov    %ax,-0x14(%rbp)$/;"	l
ffff8000001055d1	kernel.asm	/^ffff8000001055d1:	0f b7 45 ec          	movzwl -0x14(%rbp),%eax$/;"	l
ffff8000001055d5	kernel.asm	/^ffff8000001055d5:	89 c2                	mov    %eax,%edx$/;"	l
ffff8000001055d7	kernel.asm	/^ffff8000001055d7:	ec                   	in     (%dx),%al$/;"	l
ffff8000001055d8	kernel.asm	/^ffff8000001055d8:	88 45 ff             	mov    %al,-0x1(%rbp)$/;"	l
ffff8000001055db	kernel.asm	/^ffff8000001055db:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax$/;"	l
ffff8000001055df	kernel.asm	/^ffff8000001055df:	c9                   	leaveq $/;"	l
ffff8000001055e0	kernel.asm	/^ffff8000001055e0:	c3                   	retq   $/;"	l
ffff8000001055e1	kernel.asm	/^ffff8000001055e1 <outb>:$/;"	l
ffff8000001055e1	kernel.asm	/^ffff8000001055e1:	55                   	push   %rbp$/;"	l
ffff8000001055e2	kernel.asm	/^ffff8000001055e2:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff8000001055e5	kernel.asm	/^ffff8000001055e5:	48 83 ec 08          	sub    $0x8,%rsp$/;"	l
ffff8000001055e9	kernel.asm	/^ffff8000001055e9:	89 fa                	mov    %edi,%edx$/;"	l
ffff8000001055eb	kernel.asm	/^ffff8000001055eb:	89 f0                	mov    %esi,%eax$/;"	l
ffff8000001055ed	kernel.asm	/^ffff8000001055ed:	66 89 55 fc          	mov    %dx,-0x4(%rbp)$/;"	l
ffff8000001055f1	kernel.asm	/^ffff8000001055f1:	88 45 f8             	mov    %al,-0x8(%rbp)$/;"	l
ffff8000001055f4	kernel.asm	/^ffff8000001055f4:	0f b6 45 f8          	movzbl -0x8(%rbp),%eax$/;"	l
ffff8000001055f8	kernel.asm	/^ffff8000001055f8:	0f b7 55 fc          	movzwl -0x4(%rbp),%edx$/;"	l
ffff8000001055fc	kernel.asm	/^ffff8000001055fc:	ee                   	out    %al,(%dx)$/;"	l
ffff8000001055fd	kernel.asm	/^ffff8000001055fd:	90                   	nop$/;"	l
ffff8000001055fe	kernel.asm	/^ffff8000001055fe:	c9                   	leaveq $/;"	l
ffff8000001055ff	kernel.asm	/^ffff8000001055ff:	c3                   	retq   $/;"	l
ffff800000105600	kernel.asm	/^ffff800000105600 <sum>:$/;"	l
ffff800000105600	kernel.asm	/^ffff800000105600:	55                   	push   %rbp$/;"	l
ffff800000105601	kernel.asm	/^ffff800000105601:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000105604	kernel.asm	/^ffff800000105604:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ffff800000105608	kernel.asm	/^ffff800000105608:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
ffff80000010560c	kernel.asm	/^ffff80000010560c:	89 75 e4             	mov    %esi,-0x1c(%rbp)$/;"	l
ffff80000010560f	kernel.asm	/^ffff80000010560f:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)$/;"	l
ffff800000105616	kernel.asm	/^ffff800000105616:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)$/;"	l
ffff80000010561d	kernel.asm	/^ffff80000010561d:	eb 1a                	jmp    ffff800000105639 <sum+0x39>$/;"	l
ffff80000010561f	kernel.asm	/^ffff80000010561f:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff800000105622	kernel.asm	/^ffff800000105622:	48 63 d0             	movslq %eax,%rdx$/;"	l
ffff800000105625	kernel.asm	/^ffff800000105625:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000105629	kernel.asm	/^ffff800000105629:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff80000010562c	kernel.asm	/^ffff80000010562c:	0f b6 00             	movzbl (%rax),%eax$/;"	l
ffff80000010562f	kernel.asm	/^ffff80000010562f:	0f b6 c0             	movzbl %al,%eax$/;"	l
ffff800000105632	kernel.asm	/^ffff800000105632:	01 45 f8             	add    %eax,-0x8(%rbp)$/;"	l
ffff800000105635	kernel.asm	/^ffff800000105635:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)$/;"	l
ffff800000105639	kernel.asm	/^ffff800000105639:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff80000010563c	kernel.asm	/^ffff80000010563c:	3b 45 e4             	cmp    -0x1c(%rbp),%eax$/;"	l
ffff80000010563f	kernel.asm	/^ffff80000010563f:	7c de                	jl     ffff80000010561f <sum+0x1f>$/;"	l
ffff800000105641	kernel.asm	/^ffff800000105641:	8b 45 f8             	mov    -0x8(%rbp),%eax$/;"	l
ffff800000105644	kernel.asm	/^ffff800000105644:	c9                   	leaveq $/;"	l
ffff800000105645	kernel.asm	/^ffff800000105645:	c3                   	retq   $/;"	l
ffff800000105646	kernel.asm	/^ffff800000105646 <mpsearch1>:$/;"	l
ffff800000105646	kernel.asm	/^ffff800000105646:	55                   	push   %rbp$/;"	l
ffff800000105647	kernel.asm	/^ffff800000105647:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010564a	kernel.asm	/^ffff80000010564a:	48 83 ec 30          	sub    $0x30,%rsp$/;"	l
ffff80000010564e	kernel.asm	/^ffff80000010564e:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)$/;"	l
ffff800000105652	kernel.asm	/^ffff800000105652:	89 75 d4             	mov    %esi,-0x2c(%rbp)$/;"	l
ffff800000105655	kernel.asm	/^ffff800000105655:	48 ba 00 00 00 00 00 	movabs $0xffff800000000000,%rdx$/;"	l
ffff80000010565c	kernel.asm	/^ffff80000010565c:	80 ff ff $/;"	l
ffff80000010565f	kernel.asm	/^ffff80000010565f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff800000105663	kernel.asm	/^ffff800000105663:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff800000105666	kernel.asm	/^ffff800000105666:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ffff80000010566a	kernel.asm	/^ffff80000010566a:	8b 45 d4             	mov    -0x2c(%rbp),%eax$/;"	l
ffff80000010566d	kernel.asm	/^ffff80000010566d:	48 63 d0             	movslq %eax,%rdx$/;"	l
ffff800000105670	kernel.asm	/^ffff800000105670:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000105674	kernel.asm	/^ffff800000105674:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff800000105677	kernel.asm	/^ffff800000105677:	48 89 45 e8          	mov    %rax,-0x18(%rbp)$/;"	l
ffff80000010567b	kernel.asm	/^ffff80000010567b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff80000010567f	kernel.asm	/^ffff80000010567f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff800000105683	kernel.asm	/^ffff800000105683:	eb 4d                	jmp    ffff8000001056d2 <mpsearch1+0x8c>$/;"	l
ffff800000105685	kernel.asm	/^ffff800000105685:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000105689	kernel.asm	/^ffff800000105689:	ba 04 00 00 00       	mov    $0x4,%edx$/;"	l
ffff80000010568e	kernel.asm	/^ffff80000010568e:	48 be f0 bc 10 00 00 	movabs $0xffff80000010bcf0,%rsi$/;"	l
ffff800000105695	kernel.asm	/^ffff800000105695:	80 ff ff $/;"	l
ffff800000105698	kernel.asm	/^ffff800000105698:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010569b	kernel.asm	/^ffff80000010569b:	48 b8 29 76 10 00 00 	movabs $0xffff800000107629,%rax$/;"	l
ffff8000001056a2	kernel.asm	/^ffff8000001056a2:	80 ff ff $/;"	l
ffff8000001056a5	kernel.asm	/^ffff8000001056a5:	ff d0                	callq  *%rax$/;"	l
ffff8000001056a7	kernel.asm	/^ffff8000001056a7:	85 c0                	test   %eax,%eax$/;"	l
ffff8000001056a9	kernel.asm	/^ffff8000001056a9:	75 22                	jne    ffff8000001056cd <mpsearch1+0x87>$/;"	l
ffff8000001056ab	kernel.asm	/^ffff8000001056ab:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001056af	kernel.asm	/^ffff8000001056af:	be 10 00 00 00       	mov    $0x10,%esi$/;"	l
ffff8000001056b4	kernel.asm	/^ffff8000001056b4:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001056b7	kernel.asm	/^ffff8000001056b7:	48 b8 00 56 10 00 00 	movabs $0xffff800000105600,%rax$/;"	l
ffff8000001056be	kernel.asm	/^ffff8000001056be:	80 ff ff $/;"	l
ffff8000001056c1	kernel.asm	/^ffff8000001056c1:	ff d0                	callq  *%rax$/;"	l
ffff8000001056c3	kernel.asm	/^ffff8000001056c3:	84 c0                	test   %al,%al$/;"	l
ffff8000001056c5	kernel.asm	/^ffff8000001056c5:	75 06                	jne    ffff8000001056cd <mpsearch1+0x87>$/;"	l
ffff8000001056c7	kernel.asm	/^ffff8000001056c7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001056cb	kernel.asm	/^ffff8000001056cb:	eb 14                	jmp    ffff8000001056e1 <mpsearch1+0x9b>$/;"	l
ffff8000001056cd	kernel.asm	/^ffff8000001056cd:	48 83 45 f8 10       	addq   $0x10,-0x8(%rbp)$/;"	l
ffff8000001056d2	kernel.asm	/^ffff8000001056d2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001056d6	kernel.asm	/^ffff8000001056d6:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax$/;"	l
ffff8000001056da	kernel.asm	/^ffff8000001056da:	72 a9                	jb     ffff800000105685 <mpsearch1+0x3f>$/;"	l
ffff8000001056dc	kernel.asm	/^ffff8000001056dc:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff8000001056e1	kernel.asm	/^ffff8000001056e1:	c9                   	leaveq $/;"	l
ffff8000001056e2	kernel.asm	/^ffff8000001056e2:	c3                   	retq   $/;"	l
ffff8000001056e3	kernel.asm	/^ffff8000001056e3 <mpsearch>:$/;"	l
ffff8000001056e3	kernel.asm	/^ffff8000001056e3:	55                   	push   %rbp$/;"	l
ffff8000001056e4	kernel.asm	/^ffff8000001056e4:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff8000001056e7	kernel.asm	/^ffff8000001056e7:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ffff8000001056eb	kernel.asm	/^ffff8000001056eb:	48 b8 00 04 00 00 00 	movabs $0xffff800000000400,%rax$/;"	l
ffff8000001056f2	kernel.asm	/^ffff8000001056f2:	80 ff ff $/;"	l
ffff8000001056f5	kernel.asm	/^ffff8000001056f5:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff8000001056f9	kernel.asm	/^ffff8000001056f9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001056fd	kernel.asm	/^ffff8000001056fd:	48 83 c0 0f          	add    $0xf,%rax$/;"	l
ffff800000105701	kernel.asm	/^ffff800000105701:	0f b6 00             	movzbl (%rax),%eax$/;"	l
ffff800000105704	kernel.asm	/^ffff800000105704:	0f b6 c0             	movzbl %al,%eax$/;"	l
ffff800000105707	kernel.asm	/^ffff800000105707:	c1 e0 08             	shl    $0x8,%eax$/;"	l
ffff80000010570a	kernel.asm	/^ffff80000010570a:	89 c2                	mov    %eax,%edx$/;"	l
ffff80000010570c	kernel.asm	/^ffff80000010570c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000105710	kernel.asm	/^ffff800000105710:	48 83 c0 0e          	add    $0xe,%rax$/;"	l
ffff800000105714	kernel.asm	/^ffff800000105714:	0f b6 00             	movzbl (%rax),%eax$/;"	l
ffff800000105717	kernel.asm	/^ffff800000105717:	0f b6 c0             	movzbl %al,%eax$/;"	l
ffff80000010571a	kernel.asm	/^ffff80000010571a:	09 d0                	or     %edx,%eax$/;"	l
ffff80000010571c	kernel.asm	/^ffff80000010571c:	c1 e0 04             	shl    $0x4,%eax$/;"	l
ffff80000010571f	kernel.asm	/^ffff80000010571f:	89 45 f4             	mov    %eax,-0xc(%rbp)$/;"	l
ffff800000105722	kernel.asm	/^ffff800000105722:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)$/;"	l
ffff800000105726	kernel.asm	/^ffff800000105726:	74 28                	je     ffff800000105750 <mpsearch+0x6d>$/;"	l
ffff800000105728	kernel.asm	/^ffff800000105728:	8b 45 f4             	mov    -0xc(%rbp),%eax$/;"	l
ffff80000010572b	kernel.asm	/^ffff80000010572b:	be 00 04 00 00       	mov    $0x400,%esi$/;"	l
ffff800000105730	kernel.asm	/^ffff800000105730:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000105733	kernel.asm	/^ffff800000105733:	48 b8 46 56 10 00 00 	movabs $0xffff800000105646,%rax$/;"	l
ffff80000010573a	kernel.asm	/^ffff80000010573a:	80 ff ff $/;"	l
ffff80000010573d	kernel.asm	/^ffff80000010573d:	ff d0                	callq  *%rax$/;"	l
ffff80000010573f	kernel.asm	/^ffff80000010573f:	48 89 45 e8          	mov    %rax,-0x18(%rbp)$/;"	l
ffff800000105743	kernel.asm	/^ffff800000105743:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)$/;"	l
ffff800000105748	kernel.asm	/^ffff800000105748:	74 5e                	je     ffff8000001057a8 <mpsearch+0xc5>$/;"	l
ffff80000010574a	kernel.asm	/^ffff80000010574a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010574e	kernel.asm	/^ffff80000010574e:	eb 6e                	jmp    ffff8000001057be <mpsearch+0xdb>$/;"	l
ffff800000105750	kernel.asm	/^ffff800000105750:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000105754	kernel.asm	/^ffff800000105754:	48 83 c0 14          	add    $0x14,%rax$/;"	l
ffff800000105758	kernel.asm	/^ffff800000105758:	0f b6 00             	movzbl (%rax),%eax$/;"	l
ffff80000010575b	kernel.asm	/^ffff80000010575b:	0f b6 c0             	movzbl %al,%eax$/;"	l
ffff80000010575e	kernel.asm	/^ffff80000010575e:	c1 e0 08             	shl    $0x8,%eax$/;"	l
ffff800000105761	kernel.asm	/^ffff800000105761:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000105763	kernel.asm	/^ffff800000105763:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000105767	kernel.asm	/^ffff800000105767:	48 83 c0 13          	add    $0x13,%rax$/;"	l
ffff80000010576b	kernel.asm	/^ffff80000010576b:	0f b6 00             	movzbl (%rax),%eax$/;"	l
ffff80000010576e	kernel.asm	/^ffff80000010576e:	0f b6 c0             	movzbl %al,%eax$/;"	l
ffff800000105771	kernel.asm	/^ffff800000105771:	09 d0                	or     %edx,%eax$/;"	l
ffff800000105773	kernel.asm	/^ffff800000105773:	c1 e0 0a             	shl    $0xa,%eax$/;"	l
ffff800000105776	kernel.asm	/^ffff800000105776:	89 45 f4             	mov    %eax,-0xc(%rbp)$/;"	l
ffff800000105779	kernel.asm	/^ffff800000105779:	8b 45 f4             	mov    -0xc(%rbp),%eax$/;"	l
ffff80000010577c	kernel.asm	/^ffff80000010577c:	2d 00 04 00 00       	sub    $0x400,%eax$/;"	l
ffff800000105781	kernel.asm	/^ffff800000105781:	89 c0                	mov    %eax,%eax$/;"	l
ffff800000105783	kernel.asm	/^ffff800000105783:	be 00 04 00 00       	mov    $0x400,%esi$/;"	l
ffff800000105788	kernel.asm	/^ffff800000105788:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010578b	kernel.asm	/^ffff80000010578b:	48 b8 46 56 10 00 00 	movabs $0xffff800000105646,%rax$/;"	l
ffff800000105792	kernel.asm	/^ffff800000105792:	80 ff ff $/;"	l
ffff800000105795	kernel.asm	/^ffff800000105795:	ff d0                	callq  *%rax$/;"	l
ffff800000105797	kernel.asm	/^ffff800000105797:	48 89 45 e8          	mov    %rax,-0x18(%rbp)$/;"	l
ffff80000010579b	kernel.asm	/^ffff80000010579b:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)$/;"	l
ffff8000001057a0	kernel.asm	/^ffff8000001057a0:	74 06                	je     ffff8000001057a8 <mpsearch+0xc5>$/;"	l
ffff8000001057a2	kernel.asm	/^ffff8000001057a2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff8000001057a6	kernel.asm	/^ffff8000001057a6:	eb 16                	jmp    ffff8000001057be <mpsearch+0xdb>$/;"	l
ffff8000001057a8	kernel.asm	/^ffff8000001057a8:	be 00 00 01 00       	mov    $0x10000,%esi$/;"	l
ffff8000001057ad	kernel.asm	/^ffff8000001057ad:	bf 00 00 0f 00       	mov    $0xf0000,%edi$/;"	l
ffff8000001057b2	kernel.asm	/^ffff8000001057b2:	48 b8 46 56 10 00 00 	movabs $0xffff800000105646,%rax$/;"	l
ffff8000001057b9	kernel.asm	/^ffff8000001057b9:	80 ff ff $/;"	l
ffff8000001057bc	kernel.asm	/^ffff8000001057bc:	ff d0                	callq  *%rax$/;"	l
ffff8000001057be	kernel.asm	/^ffff8000001057be:	c9                   	leaveq $/;"	l
ffff8000001057bf	kernel.asm	/^ffff8000001057bf:	c3                   	retq   $/;"	l
ffff8000001057c0	kernel.asm	/^ffff8000001057c0 <mpconfig>:$/;"	l
ffff8000001057c0	kernel.asm	/^ffff8000001057c0:	55                   	push   %rbp$/;"	l
ffff8000001057c1	kernel.asm	/^ffff8000001057c1:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff8000001057c4	kernel.asm	/^ffff8000001057c4:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ffff8000001057c8	kernel.asm	/^ffff8000001057c8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
ffff8000001057cc	kernel.asm	/^ffff8000001057cc:	48 b8 e3 56 10 00 00 	movabs $0xffff8000001056e3,%rax$/;"	l
ffff8000001057d3	kernel.asm	/^ffff8000001057d3:	80 ff ff $/;"	l
ffff8000001057d6	kernel.asm	/^ffff8000001057d6:	ff d0                	callq  *%rax$/;"	l
ffff8000001057d8	kernel.asm	/^ffff8000001057d8:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff8000001057dc	kernel.asm	/^ffff8000001057dc:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)$/;"	l
ffff8000001057e1	kernel.asm	/^ffff8000001057e1:	74 0b                	je     ffff8000001057ee <mpconfig+0x2e>$/;"	l
ffff8000001057e3	kernel.asm	/^ffff8000001057e3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001057e7	kernel.asm	/^ffff8000001057e7:	8b 40 04             	mov    0x4(%rax),%eax$/;"	l
ffff8000001057ea	kernel.asm	/^ffff8000001057ea:	85 c0                	test   %eax,%eax$/;"	l
ffff8000001057ec	kernel.asm	/^ffff8000001057ec:	75 0a                	jne    ffff8000001057f8 <mpconfig+0x38>$/;"	l
ffff8000001057ee	kernel.asm	/^ffff8000001057ee:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff8000001057f3	kernel.asm	/^ffff8000001057f3:	e9 a0 00 00 00       	jmpq   ffff800000105898 <mpconfig+0xd8>$/;"	l
ffff8000001057f8	kernel.asm	/^ffff8000001057f8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001057fc	kernel.asm	/^ffff8000001057fc:	8b 40 04             	mov    0x4(%rax),%eax$/;"	l
ffff8000001057ff	kernel.asm	/^ffff8000001057ff:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000105801	kernel.asm	/^ffff800000105801:	48 b8 00 00 00 00 00 	movabs $0xffff800000000000,%rax$/;"	l
ffff800000105808	kernel.asm	/^ffff800000105808:	80 ff ff $/;"	l
ffff80000010580b	kernel.asm	/^ffff80000010580b:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff80000010580e	kernel.asm	/^ffff80000010580e:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ffff800000105812	kernel.asm	/^ffff800000105812:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000105816	kernel.asm	/^ffff800000105816:	ba 04 00 00 00       	mov    $0x4,%edx$/;"	l
ffff80000010581b	kernel.asm	/^ffff80000010581b:	48 be f5 bc 10 00 00 	movabs $0xffff80000010bcf5,%rsi$/;"	l
ffff800000105822	kernel.asm	/^ffff800000105822:	80 ff ff $/;"	l
ffff800000105825	kernel.asm	/^ffff800000105825:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000105828	kernel.asm	/^ffff800000105828:	48 b8 29 76 10 00 00 	movabs $0xffff800000107629,%rax$/;"	l
ffff80000010582f	kernel.asm	/^ffff80000010582f:	80 ff ff $/;"	l
ffff800000105832	kernel.asm	/^ffff800000105832:	ff d0                	callq  *%rax$/;"	l
ffff800000105834	kernel.asm	/^ffff800000105834:	85 c0                	test   %eax,%eax$/;"	l
ffff800000105836	kernel.asm	/^ffff800000105836:	74 07                	je     ffff80000010583f <mpconfig+0x7f>$/;"	l
ffff800000105838	kernel.asm	/^ffff800000105838:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff80000010583d	kernel.asm	/^ffff80000010583d:	eb 59                	jmp    ffff800000105898 <mpconfig+0xd8>$/;"	l
ffff80000010583f	kernel.asm	/^ffff80000010583f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000105843	kernel.asm	/^ffff800000105843:	0f b6 40 06          	movzbl 0x6(%rax),%eax$/;"	l
ffff800000105847	kernel.asm	/^ffff800000105847:	3c 01                	cmp    $0x1,%al$/;"	l
ffff800000105849	kernel.asm	/^ffff800000105849:	74 13                	je     ffff80000010585e <mpconfig+0x9e>$/;"	l
ffff80000010584b	kernel.asm	/^ffff80000010584b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff80000010584f	kernel.asm	/^ffff80000010584f:	0f b6 40 06          	movzbl 0x6(%rax),%eax$/;"	l
ffff800000105853	kernel.asm	/^ffff800000105853:	3c 04                	cmp    $0x4,%al$/;"	l
ffff800000105855	kernel.asm	/^ffff800000105855:	74 07                	je     ffff80000010585e <mpconfig+0x9e>$/;"	l
ffff800000105857	kernel.asm	/^ffff800000105857:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff80000010585c	kernel.asm	/^ffff80000010585c:	eb 3a                	jmp    ffff800000105898 <mpconfig+0xd8>$/;"	l
ffff80000010585e	kernel.asm	/^ffff80000010585e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000105862	kernel.asm	/^ffff800000105862:	0f b7 40 04          	movzwl 0x4(%rax),%eax$/;"	l
ffff800000105866	kernel.asm	/^ffff800000105866:	0f b7 d0             	movzwl %ax,%edx$/;"	l
ffff800000105869	kernel.asm	/^ffff800000105869:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff80000010586d	kernel.asm	/^ffff80000010586d:	89 d6                	mov    %edx,%esi$/;"	l
ffff80000010586f	kernel.asm	/^ffff80000010586f:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000105872	kernel.asm	/^ffff800000105872:	48 b8 00 56 10 00 00 	movabs $0xffff800000105600,%rax$/;"	l
ffff800000105879	kernel.asm	/^ffff800000105879:	80 ff ff $/;"	l
ffff80000010587c	kernel.asm	/^ffff80000010587c:	ff d0                	callq  *%rax$/;"	l
ffff80000010587e	kernel.asm	/^ffff80000010587e:	84 c0                	test   %al,%al$/;"	l
ffff800000105880	kernel.asm	/^ffff800000105880:	74 07                	je     ffff800000105889 <mpconfig+0xc9>$/;"	l
ffff800000105882	kernel.asm	/^ffff800000105882:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000105887	kernel.asm	/^ffff800000105887:	eb 0f                	jmp    ffff800000105898 <mpconfig+0xd8>$/;"	l
ffff800000105889	kernel.asm	/^ffff800000105889:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010588d	kernel.asm	/^ffff80000010588d:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx$/;"	l
ffff800000105891	kernel.asm	/^ffff800000105891:	48 89 10             	mov    %rdx,(%rax)$/;"	l
ffff800000105894	kernel.asm	/^ffff800000105894:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000105898	kernel.asm	/^ffff800000105898:	c9                   	leaveq $/;"	l
ffff800000105899	kernel.asm	/^ffff800000105899:	c3                   	retq   $/;"	l
ffff80000010589a	kernel.asm	/^ffff80000010589a <mpinit>:$/;"	l
ffff80000010589a	kernel.asm	/^ffff80000010589a:	55                   	push   %rbp$/;"	l
ffff80000010589b	kernel.asm	/^ffff80000010589b:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010589e	kernel.asm	/^ffff80000010589e:	48 83 ec 30          	sub    $0x30,%rsp$/;"	l
ffff8000001058a2	kernel.asm	/^ffff8000001058a2:	48 8d 45 d0          	lea    -0x30(%rbp),%rax$/;"	l
ffff8000001058a6	kernel.asm	/^ffff8000001058a6:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001058a9	kernel.asm	/^ffff8000001058a9:	48 b8 c0 57 10 00 00 	movabs $0xffff8000001057c0,%rax$/;"	l
ffff8000001058b0	kernel.asm	/^ffff8000001058b0:	80 ff ff $/;"	l
ffff8000001058b3	kernel.asm	/^ffff8000001058b3:	ff d0                	callq  *%rax$/;"	l
ffff8000001058b5	kernel.asm	/^ffff8000001058b5:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ffff8000001058b9	kernel.asm	/^ffff8000001058b9:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)$/;"	l
ffff8000001058be	kernel.asm	/^ffff8000001058be:	75 20                	jne    ffff8000001058e0 <mpinit+0x46>$/;"	l
ffff8000001058c0	kernel.asm	/^ffff8000001058c0:	48 bf fa bc 10 00 00 	movabs $0xffff80000010bcfa,%rdi$/;"	l
ffff8000001058c7	kernel.asm	/^ffff8000001058c7:	80 ff ff $/;"	l
ffff8000001058ca	kernel.asm	/^ffff8000001058ca:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff8000001058cf	kernel.asm	/^ffff8000001058cf:	48 ba ac 07 10 00 00 	movabs $0xffff8000001007ac,%rdx$/;"	l
ffff8000001058d6	kernel.asm	/^ffff8000001058d6:	80 ff ff $/;"	l
ffff8000001058d9	kernel.asm	/^ffff8000001058d9:	ff d2                	callq  *%rdx$/;"	l
ffff8000001058db	kernel.asm	/^ffff8000001058db:	e9 bc 01 00 00       	jmpq   ffff800000105a9c <mpinit+0x202>$/;"	l
ffff8000001058e0	kernel.asm	/^ffff8000001058e0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff8000001058e4	kernel.asm	/^ffff8000001058e4:	8b 40 24             	mov    0x24(%rax),%eax$/;"	l
ffff8000001058e7	kernel.asm	/^ffff8000001058e7:	89 c2                	mov    %eax,%edx$/;"	l
ffff8000001058e9	kernel.asm	/^ffff8000001058e9:	48 b8 00 00 00 00 00 	movabs $0xffff800000000000,%rax$/;"	l
ffff8000001058f0	kernel.asm	/^ffff8000001058f0:	80 ff ff $/;"	l
ffff8000001058f3	kernel.asm	/^ffff8000001058f3:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff8000001058f6	kernel.asm	/^ffff8000001058f6:	48 89 c2             	mov    %rax,%rdx$/;"	l
ffff8000001058f9	kernel.asm	/^ffff8000001058f9:	48 b8 c0 71 11 00 00 	movabs $0xffff8000001171c0,%rax$/;"	l
ffff800000105900	kernel.asm	/^ffff800000105900:	80 ff ff $/;"	l
ffff800000105903	kernel.asm	/^ffff800000105903:	48 89 10             	mov    %rdx,(%rax)$/;"	l
ffff800000105906	kernel.asm	/^ffff800000105906:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff80000010590a	kernel.asm	/^ffff80000010590a:	48 83 c0 2c          	add    $0x2c,%rax$/;"	l
ffff80000010590e	kernel.asm	/^ffff80000010590e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff800000105912	kernel.asm	/^ffff800000105912:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000105916	kernel.asm	/^ffff800000105916:	0f b7 40 04          	movzwl 0x4(%rax),%eax$/;"	l
ffff80000010591a	kernel.asm	/^ffff80000010591a:	0f b7 d0             	movzwl %ax,%edx$/;"	l
ffff80000010591d	kernel.asm	/^ffff80000010591d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000105921	kernel.asm	/^ffff800000105921:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff800000105924	kernel.asm	/^ffff800000105924:	48 89 45 e8          	mov    %rax,-0x18(%rbp)$/;"	l
ffff800000105928	kernel.asm	/^ffff800000105928:	e9 ec 00 00 00       	jmpq   ffff800000105a19 <mpinit+0x17f>$/;"	l
ffff80000010592d	kernel.asm	/^ffff80000010592d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000105931	kernel.asm	/^ffff800000105931:	0f b6 00             	movzbl (%rax),%eax$/;"	l
ffff800000105934	kernel.asm	/^ffff800000105934:	0f b6 c0             	movzbl %al,%eax$/;"	l
ffff800000105937	kernel.asm	/^ffff800000105937:	83 f8 04             	cmp    $0x4,%eax$/;"	l
ffff80000010593a	kernel.asm	/^ffff80000010593a:	0f 87 c3 00 00 00    	ja     ffff800000105a03 <mpinit+0x169>$/;"	l
ffff800000105940	kernel.asm	/^ffff800000105940:	89 c0                	mov    %eax,%eax$/;"	l
ffff800000105942	kernel.asm	/^ffff800000105942:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx$/;"	l
ffff800000105949	kernel.asm	/^ffff800000105949:	00 $/;"	l
ffff80000010594a	kernel.asm	/^ffff80000010594a:	48 b8 50 bd 10 00 00 	movabs $0xffff80000010bd50,%rax$/;"	l
ffff800000105951	kernel.asm	/^ffff800000105951:	80 ff ff $/;"	l
ffff800000105954	kernel.asm	/^ffff800000105954:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff800000105957	kernel.asm	/^ffff800000105957:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff80000010595a	kernel.asm	/^ffff80000010595a:	ff e0                	jmpq   *%rax$/;"	l
ffff80000010595c	kernel.asm	/^ffff80000010595c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000105960	kernel.asm	/^ffff800000105960:	48 89 45 e0          	mov    %rax,-0x20(%rbp)$/;"	l
ffff800000105964	kernel.asm	/^ffff800000105964:	48 b8 a0 7a 11 00 00 	movabs $0xffff800000117aa0,%rax$/;"	l
ffff80000010596b	kernel.asm	/^ffff80000010596b:	80 ff ff $/;"	l
ffff80000010596e	kernel.asm	/^ffff80000010596e:	8b 00                	mov    (%rax),%eax$/;"	l
ffff800000105970	kernel.asm	/^ffff800000105970:	83 f8 07             	cmp    $0x7,%eax$/;"	l
ffff800000105973	kernel.asm	/^ffff800000105973:	7f 5d                	jg     ffff8000001059d2 <mpinit+0x138>$/;"	l
ffff800000105975	kernel.asm	/^ffff800000105975:	48 b8 a0 7a 11 00 00 	movabs $0xffff800000117aa0,%rax$/;"	l
ffff80000010597c	kernel.asm	/^ffff80000010597c:	80 ff ff $/;"	l
ffff80000010597f	kernel.asm	/^ffff80000010597f:	8b 10                	mov    (%rax),%edx$/;"	l
ffff800000105981	kernel.asm	/^ffff800000105981:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff800000105985	kernel.asm	/^ffff800000105985:	0f b6 48 01          	movzbl 0x1(%rax),%ecx$/;"	l
ffff800000105989	kernel.asm	/^ffff800000105989:	48 be e0 72 11 00 00 	movabs $0xffff8000001172e0,%rsi$/;"	l
ffff800000105990	kernel.asm	/^ffff800000105990:	80 ff ff $/;"	l
ffff800000105993	kernel.asm	/^ffff800000105993:	48 63 c2             	movslq %edx,%rax$/;"	l
ffff800000105996	kernel.asm	/^ffff800000105996:	48 89 c2             	mov    %rax,%rdx$/;"	l
ffff800000105999	kernel.asm	/^ffff800000105999:	48 8d 04 d5 00 00 00 	lea    0x0(,%rdx,8),%rax$/;"	l
ffff8000001059a0	kernel.asm	/^ffff8000001059a0:	00 $/;"	l
ffff8000001059a1	kernel.asm	/^ffff8000001059a1:	48 89 c2             	mov    %rax,%rdx$/;"	l
ffff8000001059a4	kernel.asm	/^ffff8000001059a4:	48 89 d0             	mov    %rdx,%rax$/;"	l
ffff8000001059a7	kernel.asm	/^ffff8000001059a7:	48 c1 e0 05          	shl    $0x5,%rax$/;"	l
ffff8000001059ab	kernel.asm	/^ffff8000001059ab:	48 29 d0             	sub    %rdx,%rax$/;"	l
ffff8000001059ae	kernel.asm	/^ffff8000001059ae:	48 01 f0             	add    %rsi,%rax$/;"	l
ffff8000001059b1	kernel.asm	/^ffff8000001059b1:	48 83 c0 01          	add    $0x1,%rax$/;"	l
ffff8000001059b5	kernel.asm	/^ffff8000001059b5:	88 08                	mov    %cl,(%rax)$/;"	l
ffff8000001059b7	kernel.asm	/^ffff8000001059b7:	48 b8 a0 7a 11 00 00 	movabs $0xffff800000117aa0,%rax$/;"	l
ffff8000001059be	kernel.asm	/^ffff8000001059be:	80 ff ff $/;"	l
ffff8000001059c1	kernel.asm	/^ffff8000001059c1:	8b 00                	mov    (%rax),%eax$/;"	l
ffff8000001059c3	kernel.asm	/^ffff8000001059c3:	8d 50 01             	lea    0x1(%rax),%edx$/;"	l
ffff8000001059c6	kernel.asm	/^ffff8000001059c6:	48 b8 a0 7a 11 00 00 	movabs $0xffff800000117aa0,%rax$/;"	l
ffff8000001059cd	kernel.asm	/^ffff8000001059cd:	80 ff ff $/;"	l
ffff8000001059d0	kernel.asm	/^ffff8000001059d0:	89 10                	mov    %edx,(%rax)$/;"	l
ffff8000001059d2	kernel.asm	/^ffff8000001059d2:	48 83 45 f8 14       	addq   $0x14,-0x8(%rbp)$/;"	l
ffff8000001059d7	kernel.asm	/^ffff8000001059d7:	eb 40                	jmp    ffff800000105a19 <mpinit+0x17f>$/;"	l
ffff8000001059d9	kernel.asm	/^ffff8000001059d9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001059dd	kernel.asm	/^ffff8000001059dd:	48 89 45 d8          	mov    %rax,-0x28(%rbp)$/;"	l
ffff8000001059e1	kernel.asm	/^ffff8000001059e1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff8000001059e5	kernel.asm	/^ffff8000001059e5:	0f b6 50 01          	movzbl 0x1(%rax),%edx$/;"	l
ffff8000001059e9	kernel.asm	/^ffff8000001059e9:	48 b8 a4 7a 11 00 00 	movabs $0xffff800000117aa4,%rax$/;"	l
ffff8000001059f0	kernel.asm	/^ffff8000001059f0:	80 ff ff $/;"	l
ffff8000001059f3	kernel.asm	/^ffff8000001059f3:	88 10                	mov    %dl,(%rax)$/;"	l
ffff8000001059f5	kernel.asm	/^ffff8000001059f5:	48 83 45 f8 08       	addq   $0x8,-0x8(%rbp)$/;"	l
ffff8000001059fa	kernel.asm	/^ffff8000001059fa:	eb 1d                	jmp    ffff800000105a19 <mpinit+0x17f>$/;"	l
ffff8000001059fc	kernel.asm	/^ffff8000001059fc:	48 83 45 f8 08       	addq   $0x8,-0x8(%rbp)$/;"	l
ffff800000105a01	kernel.asm	/^ffff800000105a01:	eb 16                	jmp    ffff800000105a19 <mpinit+0x17f>$/;"	l
ffff800000105a03	kernel.asm	/^ffff800000105a03:	48 bf 10 bd 10 00 00 	movabs $0xffff80000010bd10,%rdi$/;"	l
ffff800000105a0a	kernel.asm	/^ffff800000105a0a:	80 ff ff $/;"	l
ffff800000105a0d	kernel.asm	/^ffff800000105a0d:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff800000105a14	kernel.asm	/^ffff800000105a14:	80 ff ff $/;"	l
ffff800000105a17	kernel.asm	/^ffff800000105a17:	ff d0                	callq  *%rax$/;"	l
ffff800000105a19	kernel.asm	/^ffff800000105a19:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000105a1d	kernel.asm	/^ffff800000105a1d:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax$/;"	l
ffff800000105a21	kernel.asm	/^ffff800000105a21:	0f 82 06 ff ff ff    	jb     ffff80000010592d <mpinit+0x93>$/;"	l
ffff800000105a27	kernel.asm	/^ffff800000105a27:	48 b8 a0 7a 11 00 00 	movabs $0xffff800000117aa0,%rax$/;"	l
ffff800000105a2e	kernel.asm	/^ffff800000105a2e:	80 ff ff $/;"	l
ffff800000105a31	kernel.asm	/^ffff800000105a31:	8b 00                	mov    (%rax),%eax$/;"	l
ffff800000105a33	kernel.asm	/^ffff800000105a33:	89 c6                	mov    %eax,%esi$/;"	l
ffff800000105a35	kernel.asm	/^ffff800000105a35:	48 bf 31 bd 10 00 00 	movabs $0xffff80000010bd31,%rdi$/;"	l
ffff800000105a3c	kernel.asm	/^ffff800000105a3c:	80 ff ff $/;"	l
ffff800000105a3f	kernel.asm	/^ffff800000105a3f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000105a44	kernel.asm	/^ffff800000105a44:	48 ba ac 07 10 00 00 	movabs $0xffff8000001007ac,%rdx$/;"	l
ffff800000105a4b	kernel.asm	/^ffff800000105a4b:	80 ff ff $/;"	l
ffff800000105a4e	kernel.asm	/^ffff800000105a4e:	ff d2                	callq  *%rdx$/;"	l
ffff800000105a50	kernel.asm	/^ffff800000105a50:	48 8b 45 d0          	mov    -0x30(%rbp),%rax$/;"	l
ffff800000105a54	kernel.asm	/^ffff800000105a54:	0f b6 40 0c          	movzbl 0xc(%rax),%eax$/;"	l
ffff800000105a58	kernel.asm	/^ffff800000105a58:	84 c0                	test   %al,%al$/;"	l
ffff800000105a5a	kernel.asm	/^ffff800000105a5a:	74 40                	je     ffff800000105a9c <mpinit+0x202>$/;"	l
ffff800000105a5c	kernel.asm	/^ffff800000105a5c:	be 70 00 00 00       	mov    $0x70,%esi$/;"	l
ffff800000105a61	kernel.asm	/^ffff800000105a61:	bf 22 00 00 00       	mov    $0x22,%edi$/;"	l
ffff800000105a66	kernel.asm	/^ffff800000105a66:	48 b8 e1 55 10 00 00 	movabs $0xffff8000001055e1,%rax$/;"	l
ffff800000105a6d	kernel.asm	/^ffff800000105a6d:	80 ff ff $/;"	l
ffff800000105a70	kernel.asm	/^ffff800000105a70:	ff d0                	callq  *%rax$/;"	l
ffff800000105a72	kernel.asm	/^ffff800000105a72:	bf 23 00 00 00       	mov    $0x23,%edi$/;"	l
ffff800000105a77	kernel.asm	/^ffff800000105a77:	48 b8 c3 55 10 00 00 	movabs $0xffff8000001055c3,%rax$/;"	l
ffff800000105a7e	kernel.asm	/^ffff800000105a7e:	80 ff ff $/;"	l
ffff800000105a81	kernel.asm	/^ffff800000105a81:	ff d0                	callq  *%rax$/;"	l
ffff800000105a83	kernel.asm	/^ffff800000105a83:	83 c8 01             	or     $0x1,%eax$/;"	l
ffff800000105a86	kernel.asm	/^ffff800000105a86:	0f b6 c0             	movzbl %al,%eax$/;"	l
ffff800000105a89	kernel.asm	/^ffff800000105a89:	89 c6                	mov    %eax,%esi$/;"	l
ffff800000105a8b	kernel.asm	/^ffff800000105a8b:	bf 23 00 00 00       	mov    $0x23,%edi$/;"	l
ffff800000105a90	kernel.asm	/^ffff800000105a90:	48 b8 e1 55 10 00 00 	movabs $0xffff8000001055e1,%rax$/;"	l
ffff800000105a97	kernel.asm	/^ffff800000105a97:	80 ff ff $/;"	l
ffff800000105a9a	kernel.asm	/^ffff800000105a9a:	ff d0                	callq  *%rax$/;"	l
ffff800000105a9c	kernel.asm	/^ffff800000105a9c:	c9                   	leaveq $/;"	l
ffff800000105a9d	kernel.asm	/^ffff800000105a9d:	c3                   	retq   $/;"	l
ffff800000105a9e	kernel.asm	/^ffff800000105a9e <pipealloc>:$/;"	l
ffff800000105a9e	kernel.asm	/^ffff800000105a9e:	55                   	push   %rbp$/;"	l
ffff800000105a9f	kernel.asm	/^ffff800000105a9f:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000105aa2	kernel.asm	/^ffff800000105aa2:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ffff800000105aa6	kernel.asm	/^ffff800000105aa6:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
ffff800000105aaa	kernel.asm	/^ffff800000105aaa:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)$/;"	l
ffff800000105aae	kernel.asm	/^ffff800000105aae:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)$/;"	l
ffff800000105ab5	kernel.asm	/^ffff800000105ab5:	00 $/;"	l
ffff800000105ab6	kernel.asm	/^ffff800000105ab6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff800000105aba	kernel.asm	/^ffff800000105aba:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)$/;"	l
ffff800000105ac1	kernel.asm	/^ffff800000105ac1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff800000105ac5	kernel.asm	/^ffff800000105ac5:	48 8b 10             	mov    (%rax),%rdx$/;"	l
ffff800000105ac8	kernel.asm	/^ffff800000105ac8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000105acc	kernel.asm	/^ffff800000105acc:	48 89 10             	mov    %rdx,(%rax)$/;"	l
ffff800000105acf	kernel.asm	/^ffff800000105acf:	48 b8 a0 1a 10 00 00 	movabs $0xffff800000101aa0,%rax$/;"	l
ffff800000105ad6	kernel.asm	/^ffff800000105ad6:	80 ff ff $/;"	l
ffff800000105ad9	kernel.asm	/^ffff800000105ad9:	ff d0                	callq  *%rax$/;"	l
ffff800000105adb	kernel.asm	/^ffff800000105adb:	48 89 c2             	mov    %rax,%rdx$/;"	l
ffff800000105ade	kernel.asm	/^ffff800000105ade:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000105ae2	kernel.asm	/^ffff800000105ae2:	48 89 10             	mov    %rdx,(%rax)$/;"	l
ffff800000105ae5	kernel.asm	/^ffff800000105ae5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000105ae9	kernel.asm	/^ffff800000105ae9:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff800000105aec	kernel.asm	/^ffff800000105aec:	48 85 c0             	test   %rax,%rax$/;"	l
ffff800000105aef	kernel.asm	/^ffff800000105aef:	0f 84 02 01 00 00    	je     ffff800000105bf7 <pipealloc+0x159>$/;"	l
ffff800000105af5	kernel.asm	/^ffff800000105af5:	48 b8 a0 1a 10 00 00 	movabs $0xffff800000101aa0,%rax$/;"	l
ffff800000105afc	kernel.asm	/^ffff800000105afc:	80 ff ff $/;"	l
ffff800000105aff	kernel.asm	/^ffff800000105aff:	ff d0                	callq  *%rax$/;"	l
ffff800000105b01	kernel.asm	/^ffff800000105b01:	48 89 c2             	mov    %rax,%rdx$/;"	l
ffff800000105b04	kernel.asm	/^ffff800000105b04:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff800000105b08	kernel.asm	/^ffff800000105b08:	48 89 10             	mov    %rdx,(%rax)$/;"	l
ffff800000105b0b	kernel.asm	/^ffff800000105b0b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff800000105b0f	kernel.asm	/^ffff800000105b0f:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff800000105b12	kernel.asm	/^ffff800000105b12:	48 85 c0             	test   %rax,%rax$/;"	l
ffff800000105b15	kernel.asm	/^ffff800000105b15:	0f 84 dc 00 00 00    	je     ffff800000105bf7 <pipealloc+0x159>$/;"	l
ffff800000105b1b	kernel.asm	/^ffff800000105b1b:	48 b8 9f 40 10 00 00 	movabs $0xffff80000010409f,%rax$/;"	l
ffff800000105b22	kernel.asm	/^ffff800000105b22:	80 ff ff $/;"	l
ffff800000105b25	kernel.asm	/^ffff800000105b25:	ff d0                	callq  *%rax$/;"	l
ffff800000105b27	kernel.asm	/^ffff800000105b27:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff800000105b2b	kernel.asm	/^ffff800000105b2b:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)$/;"	l
ffff800000105b30	kernel.asm	/^ffff800000105b30:	0f 84 c0 00 00 00    	je     ffff800000105bf6 <pipealloc+0x158>$/;"	l
ffff800000105b36	kernel.asm	/^ffff800000105b36:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000105b3a	kernel.asm	/^ffff800000105b3a:	c7 80 70 02 00 00 01 	movl   $0x1,0x270(%rax)$/;"	l
ffff800000105b41	kernel.asm	/^ffff800000105b41:	00 00 00 $/;"	l
ffff800000105b44	kernel.asm	/^ffff800000105b44:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000105b48	kernel.asm	/^ffff800000105b48:	c7 80 74 02 00 00 01 	movl   $0x1,0x274(%rax)$/;"	l
ffff800000105b4f	kernel.asm	/^ffff800000105b4f:	00 00 00 $/;"	l
ffff800000105b52	kernel.asm	/^ffff800000105b52:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000105b56	kernel.asm	/^ffff800000105b56:	c7 80 6c 02 00 00 00 	movl   $0x0,0x26c(%rax)$/;"	l
ffff800000105b5d	kernel.asm	/^ffff800000105b5d:	00 00 00 $/;"	l
ffff800000105b60	kernel.asm	/^ffff800000105b60:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000105b64	kernel.asm	/^ffff800000105b64:	c7 80 68 02 00 00 00 	movl   $0x0,0x268(%rax)$/;"	l
ffff800000105b6b	kernel.asm	/^ffff800000105b6b:	00 00 00 $/;"	l
ffff800000105b6e	kernel.asm	/^ffff800000105b6e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000105b72	kernel.asm	/^ffff800000105b72:	48 be 78 bd 10 00 00 	movabs $0xffff80000010bd78,%rsi$/;"	l
ffff800000105b79	kernel.asm	/^ffff800000105b79:	80 ff ff $/;"	l
ffff800000105b7c	kernel.asm	/^ffff800000105b7c:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000105b7f	kernel.asm	/^ffff800000105b7f:	48 b8 ca 71 10 00 00 	movabs $0xffff8000001071ca,%rax$/;"	l
ffff800000105b86	kernel.asm	/^ffff800000105b86:	80 ff ff $/;"	l
ffff800000105b89	kernel.asm	/^ffff800000105b89:	ff d0                	callq  *%rax$/;"	l
ffff800000105b8b	kernel.asm	/^ffff800000105b8b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000105b8f	kernel.asm	/^ffff800000105b8f:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff800000105b92	kernel.asm	/^ffff800000105b92:	c7 00 01 00 00 00    	movl   $0x1,(%rax)$/;"	l
ffff800000105b98	kernel.asm	/^ffff800000105b98:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000105b9c	kernel.asm	/^ffff800000105b9c:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff800000105b9f	kernel.asm	/^ffff800000105b9f:	c6 40 08 01          	movb   $0x1,0x8(%rax)$/;"	l
ffff800000105ba3	kernel.asm	/^ffff800000105ba3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000105ba7	kernel.asm	/^ffff800000105ba7:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff800000105baa	kernel.asm	/^ffff800000105baa:	c6 40 09 00          	movb   $0x0,0x9(%rax)$/;"	l
ffff800000105bae	kernel.asm	/^ffff800000105bae:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000105bb2	kernel.asm	/^ffff800000105bb2:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff800000105bb5	kernel.asm	/^ffff800000105bb5:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx$/;"	l
ffff800000105bb9	kernel.asm	/^ffff800000105bb9:	48 89 50 10          	mov    %rdx,0x10(%rax)$/;"	l
ffff800000105bbd	kernel.asm	/^ffff800000105bbd:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff800000105bc1	kernel.asm	/^ffff800000105bc1:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff800000105bc4	kernel.asm	/^ffff800000105bc4:	c7 00 01 00 00 00    	movl   $0x1,(%rax)$/;"	l
ffff800000105bca	kernel.asm	/^ffff800000105bca:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff800000105bce	kernel.asm	/^ffff800000105bce:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff800000105bd1	kernel.asm	/^ffff800000105bd1:	c6 40 08 00          	movb   $0x0,0x8(%rax)$/;"	l
ffff800000105bd5	kernel.asm	/^ffff800000105bd5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff800000105bd9	kernel.asm	/^ffff800000105bd9:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff800000105bdc	kernel.asm	/^ffff800000105bdc:	c6 40 09 01          	movb   $0x1,0x9(%rax)$/;"	l
ffff800000105be0	kernel.asm	/^ffff800000105be0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff800000105be4	kernel.asm	/^ffff800000105be4:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff800000105be7	kernel.asm	/^ffff800000105be7:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx$/;"	l
ffff800000105beb	kernel.asm	/^ffff800000105beb:	48 89 50 10          	mov    %rdx,0x10(%rax)$/;"	l
ffff800000105bef	kernel.asm	/^ffff800000105bef:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000105bf4	kernel.asm	/^ffff800000105bf4:	eb 64                	jmp    ffff800000105c5a <pipealloc+0x1bc>$/;"	l
ffff800000105bf6	kernel.asm	/^ffff800000105bf6:	90                   	nop$/;"	l
ffff800000105bf7	kernel.asm	/^ffff800000105bf7:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)$/;"	l
ffff800000105bfc	kernel.asm	/^ffff800000105bfc:	74 13                	je     ffff800000105c11 <pipealloc+0x173>$/;"	l
ffff800000105bfe	kernel.asm	/^ffff800000105bfe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000105c02	kernel.asm	/^ffff800000105c02:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000105c05	kernel.asm	/^ffff800000105c05:	48 b8 a9 3f 10 00 00 	movabs $0xffff800000103fa9,%rax$/;"	l
ffff800000105c0c	kernel.asm	/^ffff800000105c0c:	80 ff ff $/;"	l
ffff800000105c0f	kernel.asm	/^ffff800000105c0f:	ff d0                	callq  *%rax$/;"	l
ffff800000105c11	kernel.asm	/^ffff800000105c11:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000105c15	kernel.asm	/^ffff800000105c15:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff800000105c18	kernel.asm	/^ffff800000105c18:	48 85 c0             	test   %rax,%rax$/;"	l
ffff800000105c1b	kernel.asm	/^ffff800000105c1b:	74 16                	je     ffff800000105c33 <pipealloc+0x195>$/;"	l
ffff800000105c1d	kernel.asm	/^ffff800000105c1d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000105c21	kernel.asm	/^ffff800000105c21:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff800000105c24	kernel.asm	/^ffff800000105c24:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000105c27	kernel.asm	/^ffff800000105c27:	48 b8 a2 1b 10 00 00 	movabs $0xffff800000101ba2,%rax$/;"	l
ffff800000105c2e	kernel.asm	/^ffff800000105c2e:	80 ff ff $/;"	l
ffff800000105c31	kernel.asm	/^ffff800000105c31:	ff d0                	callq  *%rax$/;"	l
ffff800000105c33	kernel.asm	/^ffff800000105c33:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff800000105c37	kernel.asm	/^ffff800000105c37:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff800000105c3a	kernel.asm	/^ffff800000105c3a:	48 85 c0             	test   %rax,%rax$/;"	l
ffff800000105c3d	kernel.asm	/^ffff800000105c3d:	74 16                	je     ffff800000105c55 <pipealloc+0x1b7>$/;"	l
ffff800000105c3f	kernel.asm	/^ffff800000105c3f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff800000105c43	kernel.asm	/^ffff800000105c43:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff800000105c46	kernel.asm	/^ffff800000105c46:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000105c49	kernel.asm	/^ffff800000105c49:	48 b8 a2 1b 10 00 00 	movabs $0xffff800000101ba2,%rax$/;"	l
ffff800000105c50	kernel.asm	/^ffff800000105c50:	80 ff ff $/;"	l
ffff800000105c53	kernel.asm	/^ffff800000105c53:	ff d0                	callq  *%rax$/;"	l
ffff800000105c55	kernel.asm	/^ffff800000105c55:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff800000105c5a	kernel.asm	/^ffff800000105c5a:	c9                   	leaveq $/;"	l
ffff800000105c5b	kernel.asm	/^ffff800000105c5b:	c3                   	retq   $/;"	l
ffff800000105c5c	kernel.asm	/^ffff800000105c5c <pipeclose>:$/;"	l
ffff800000105c5c	kernel.asm	/^ffff800000105c5c:	55                   	push   %rbp$/;"	l
ffff800000105c5d	kernel.asm	/^ffff800000105c5d:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000105c60	kernel.asm	/^ffff800000105c60:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff800000105c64	kernel.asm	/^ffff800000105c64:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)$/;"	l
ffff800000105c68	kernel.asm	/^ffff800000105c68:	89 75 f4             	mov    %esi,-0xc(%rbp)$/;"	l
ffff800000105c6b	kernel.asm	/^ffff800000105c6b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000105c6f	kernel.asm	/^ffff800000105c6f:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000105c72	kernel.asm	/^ffff800000105c72:	48 b8 ff 71 10 00 00 	movabs $0xffff8000001071ff,%rax$/;"	l
ffff800000105c79	kernel.asm	/^ffff800000105c79:	80 ff ff $/;"	l
ffff800000105c7c	kernel.asm	/^ffff800000105c7c:	ff d0                	callq  *%rax$/;"	l
ffff800000105c7e	kernel.asm	/^ffff800000105c7e:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)$/;"	l
ffff800000105c82	kernel.asm	/^ffff800000105c82:	74 29                	je     ffff800000105cad <pipeclose+0x51>$/;"	l
ffff800000105c84	kernel.asm	/^ffff800000105c84:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000105c88	kernel.asm	/^ffff800000105c88:	c7 80 74 02 00 00 00 	movl   $0x0,0x274(%rax)$/;"	l
ffff800000105c8f	kernel.asm	/^ffff800000105c8f:	00 00 00 $/;"	l
ffff800000105c92	kernel.asm	/^ffff800000105c92:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000105c96	kernel.asm	/^ffff800000105c96:	48 05 68 02 00 00    	add    $0x268,%rax$/;"	l
ffff800000105c9c	kernel.asm	/^ffff800000105c9c:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000105c9f	kernel.asm	/^ffff800000105c9f:	48 b8 8b 6d 10 00 00 	movabs $0xffff800000106d8b,%rax$/;"	l
ffff800000105ca6	kernel.asm	/^ffff800000105ca6:	80 ff ff $/;"	l
ffff800000105ca9	kernel.asm	/^ffff800000105ca9:	ff d0                	callq  *%rax$/;"	l
ffff800000105cab	kernel.asm	/^ffff800000105cab:	eb 27                	jmp    ffff800000105cd4 <pipeclose+0x78>$/;"	l
ffff800000105cad	kernel.asm	/^ffff800000105cad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000105cb1	kernel.asm	/^ffff800000105cb1:	c7 80 70 02 00 00 00 	movl   $0x0,0x270(%rax)$/;"	l
ffff800000105cb8	kernel.asm	/^ffff800000105cb8:	00 00 00 $/;"	l
ffff800000105cbb	kernel.asm	/^ffff800000105cbb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000105cbf	kernel.asm	/^ffff800000105cbf:	48 05 6c 02 00 00    	add    $0x26c,%rax$/;"	l
ffff800000105cc5	kernel.asm	/^ffff800000105cc5:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000105cc8	kernel.asm	/^ffff800000105cc8:	48 b8 8b 6d 10 00 00 	movabs $0xffff800000106d8b,%rax$/;"	l
ffff800000105ccf	kernel.asm	/^ffff800000105ccf:	80 ff ff $/;"	l
ffff800000105cd2	kernel.asm	/^ffff800000105cd2:	ff d0                	callq  *%rax$/;"	l
ffff800000105cd4	kernel.asm	/^ffff800000105cd4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000105cd8	kernel.asm	/^ffff800000105cd8:	8b 80 70 02 00 00    	mov    0x270(%rax),%eax$/;"	l
ffff800000105cde	kernel.asm	/^ffff800000105cde:	85 c0                	test   %eax,%eax$/;"	l
ffff800000105ce0	kernel.asm	/^ffff800000105ce0:	75 36                	jne    ffff800000105d18 <pipeclose+0xbc>$/;"	l
ffff800000105ce2	kernel.asm	/^ffff800000105ce2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000105ce6	kernel.asm	/^ffff800000105ce6:	8b 80 74 02 00 00    	mov    0x274(%rax),%eax$/;"	l
ffff800000105cec	kernel.asm	/^ffff800000105cec:	85 c0                	test   %eax,%eax$/;"	l
ffff800000105cee	kernel.asm	/^ffff800000105cee:	75 28                	jne    ffff800000105d18 <pipeclose+0xbc>$/;"	l
ffff800000105cf0	kernel.asm	/^ffff800000105cf0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000105cf4	kernel.asm	/^ffff800000105cf4:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000105cf7	kernel.asm	/^ffff800000105cf7:	48 b8 98 72 10 00 00 	movabs $0xffff800000107298,%rax$/;"	l
ffff800000105cfe	kernel.asm	/^ffff800000105cfe:	80 ff ff $/;"	l
ffff800000105d01	kernel.asm	/^ffff800000105d01:	ff d0                	callq  *%rax$/;"	l
ffff800000105d03	kernel.asm	/^ffff800000105d03:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000105d07	kernel.asm	/^ffff800000105d07:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000105d0a	kernel.asm	/^ffff800000105d0a:	48 b8 a9 3f 10 00 00 	movabs $0xffff800000103fa9,%rax$/;"	l
ffff800000105d11	kernel.asm	/^ffff800000105d11:	80 ff ff $/;"	l
ffff800000105d14	kernel.asm	/^ffff800000105d14:	ff d0                	callq  *%rax$/;"	l
ffff800000105d16	kernel.asm	/^ffff800000105d16:	eb 13                	jmp    ffff800000105d2b <pipeclose+0xcf>$/;"	l
ffff800000105d18	kernel.asm	/^ffff800000105d18:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000105d1c	kernel.asm	/^ffff800000105d1c:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000105d1f	kernel.asm	/^ffff800000105d1f:	48 b8 98 72 10 00 00 	movabs $0xffff800000107298,%rax$/;"	l
ffff800000105d26	kernel.asm	/^ffff800000105d26:	80 ff ff $/;"	l
ffff800000105d29	kernel.asm	/^ffff800000105d29:	ff d0                	callq  *%rax$/;"	l
ffff800000105d2b	kernel.asm	/^ffff800000105d2b:	90                   	nop$/;"	l
ffff800000105d2c	kernel.asm	/^ffff800000105d2c:	c9                   	leaveq $/;"	l
ffff800000105d2d	kernel.asm	/^ffff800000105d2d:	c3                   	retq   $/;"	l
ffff800000105d2e	kernel.asm	/^ffff800000105d2e <pipewrite>:$/;"	l
ffff800000105d2e	kernel.asm	/^ffff800000105d2e:	55                   	push   %rbp$/;"	l
ffff800000105d2f	kernel.asm	/^ffff800000105d2f:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000105d32	kernel.asm	/^ffff800000105d32:	48 83 ec 30          	sub    $0x30,%rsp$/;"	l
ffff800000105d36	kernel.asm	/^ffff800000105d36:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
ffff800000105d3a	kernel.asm	/^ffff800000105d3a:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)$/;"	l
ffff800000105d3e	kernel.asm	/^ffff800000105d3e:	89 55 dc             	mov    %edx,-0x24(%rbp)$/;"	l
ffff800000105d41	kernel.asm	/^ffff800000105d41:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000105d45	kernel.asm	/^ffff800000105d45:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000105d48	kernel.asm	/^ffff800000105d48:	48 b8 ff 71 10 00 00 	movabs $0xffff8000001071ff,%rax$/;"	l
ffff800000105d4f	kernel.asm	/^ffff800000105d4f:	80 ff ff $/;"	l
ffff800000105d52	kernel.asm	/^ffff800000105d52:	ff d0                	callq  *%rax$/;"	l
ffff800000105d54	kernel.asm	/^ffff800000105d54:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)$/;"	l
ffff800000105d5b	kernel.asm	/^ffff800000105d5b:	e9 d4 00 00 00       	jmpq   ffff800000105e34 <pipewrite+0x106>$/;"	l
ffff800000105d60	kernel.asm	/^ffff800000105d60:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000105d64	kernel.asm	/^ffff800000105d64:	8b 80 70 02 00 00    	mov    0x270(%rax),%eax$/;"	l
ffff800000105d6a	kernel.asm	/^ffff800000105d6a:	85 c0                	test   %eax,%eax$/;"	l
ffff800000105d6c	kernel.asm	/^ffff800000105d6c:	74 12                	je     ffff800000105d80 <pipewrite+0x52>$/;"	l
ffff800000105d6e	kernel.asm	/^ffff800000105d6e:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000105d75	kernel.asm	/^ffff800000105d75:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000105d79	kernel.asm	/^ffff800000105d79:	8b 40 40             	mov    0x40(%rax),%eax$/;"	l
ffff800000105d7c	kernel.asm	/^ffff800000105d7c:	85 c0                	test   %eax,%eax$/;"	l
ffff800000105d7e	kernel.asm	/^ffff800000105d7e:	74 1d                	je     ffff800000105d9d <pipewrite+0x6f>$/;"	l
ffff800000105d80	kernel.asm	/^ffff800000105d80:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000105d84	kernel.asm	/^ffff800000105d84:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000105d87	kernel.asm	/^ffff800000105d87:	48 b8 98 72 10 00 00 	movabs $0xffff800000107298,%rax$/;"	l
ffff800000105d8e	kernel.asm	/^ffff800000105d8e:	80 ff ff $/;"	l
ffff800000105d91	kernel.asm	/^ffff800000105d91:	ff d0                	callq  *%rax$/;"	l
ffff800000105d93	kernel.asm	/^ffff800000105d93:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff800000105d98	kernel.asm	/^ffff800000105d98:	e9 ce 00 00 00       	jmpq   ffff800000105e6b <pipewrite+0x13d>$/;"	l
ffff800000105d9d	kernel.asm	/^ffff800000105d9d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000105da1	kernel.asm	/^ffff800000105da1:	48 05 68 02 00 00    	add    $0x268,%rax$/;"	l
ffff800000105da7	kernel.asm	/^ffff800000105da7:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000105daa	kernel.asm	/^ffff800000105daa:	48 b8 8b 6d 10 00 00 	movabs $0xffff800000106d8b,%rax$/;"	l
ffff800000105db1	kernel.asm	/^ffff800000105db1:	80 ff ff $/;"	l
ffff800000105db4	kernel.asm	/^ffff800000105db4:	ff d0                	callq  *%rax$/;"	l
ffff800000105db6	kernel.asm	/^ffff800000105db6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000105dba	kernel.asm	/^ffff800000105dba:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx$/;"	l
ffff800000105dbe	kernel.asm	/^ffff800000105dbe:	48 81 c2 6c 02 00 00 	add    $0x26c,%rdx$/;"	l
ffff800000105dc5	kernel.asm	/^ffff800000105dc5:	48 89 c6             	mov    %rax,%rsi$/;"	l
ffff800000105dc8	kernel.asm	/^ffff800000105dc8:	48 89 d7             	mov    %rdx,%rdi$/;"	l
ffff800000105dcb	kernel.asm	/^ffff800000105dcb:	48 b8 23 6c 10 00 00 	movabs $0xffff800000106c23,%rax$/;"	l
ffff800000105dd2	kernel.asm	/^ffff800000105dd2:	80 ff ff $/;"	l
ffff800000105dd5	kernel.asm	/^ffff800000105dd5:	ff d0                	callq  *%rax$/;"	l
ffff800000105dd7	kernel.asm	/^ffff800000105dd7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000105ddb	kernel.asm	/^ffff800000105ddb:	8b 90 6c 02 00 00    	mov    0x26c(%rax),%edx$/;"	l
ffff800000105de1	kernel.asm	/^ffff800000105de1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000105de5	kernel.asm	/^ffff800000105de5:	8b 80 68 02 00 00    	mov    0x268(%rax),%eax$/;"	l
ffff800000105deb	kernel.asm	/^ffff800000105deb:	05 00 02 00 00       	add    $0x200,%eax$/;"	l
ffff800000105df0	kernel.asm	/^ffff800000105df0:	39 c2                	cmp    %eax,%edx$/;"	l
ffff800000105df2	kernel.asm	/^ffff800000105df2:	0f 84 68 ff ff ff    	je     ffff800000105d60 <pipewrite+0x32>$/;"	l
ffff800000105df8	kernel.asm	/^ffff800000105df8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000105dfc	kernel.asm	/^ffff800000105dfc:	8b 80 6c 02 00 00    	mov    0x26c(%rax),%eax$/;"	l
ffff800000105e02	kernel.asm	/^ffff800000105e02:	8d 48 01             	lea    0x1(%rax),%ecx$/;"	l
ffff800000105e05	kernel.asm	/^ffff800000105e05:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx$/;"	l
ffff800000105e09	kernel.asm	/^ffff800000105e09:	89 8a 6c 02 00 00    	mov    %ecx,0x26c(%rdx)$/;"	l
ffff800000105e0f	kernel.asm	/^ffff800000105e0f:	25 ff 01 00 00       	and    $0x1ff,%eax$/;"	l
ffff800000105e14	kernel.asm	/^ffff800000105e14:	89 c1                	mov    %eax,%ecx$/;"	l
ffff800000105e16	kernel.asm	/^ffff800000105e16:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff800000105e19	kernel.asm	/^ffff800000105e19:	48 63 d0             	movslq %eax,%rdx$/;"	l
ffff800000105e1c	kernel.asm	/^ffff800000105e1c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff800000105e20	kernel.asm	/^ffff800000105e20:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff800000105e23	kernel.asm	/^ffff800000105e23:	0f b6 10             	movzbl (%rax),%edx$/;"	l
ffff800000105e26	kernel.asm	/^ffff800000105e26:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000105e2a	kernel.asm	/^ffff800000105e2a:	89 c9                	mov    %ecx,%ecx$/;"	l
ffff800000105e2c	kernel.asm	/^ffff800000105e2c:	88 54 08 68          	mov    %dl,0x68(%rax,%rcx,1)$/;"	l
ffff800000105e30	kernel.asm	/^ffff800000105e30:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)$/;"	l
ffff800000105e34	kernel.asm	/^ffff800000105e34:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff800000105e37	kernel.asm	/^ffff800000105e37:	3b 45 dc             	cmp    -0x24(%rbp),%eax$/;"	l
ffff800000105e3a	kernel.asm	/^ffff800000105e3a:	7c 9b                	jl     ffff800000105dd7 <pipewrite+0xa9>$/;"	l
ffff800000105e3c	kernel.asm	/^ffff800000105e3c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000105e40	kernel.asm	/^ffff800000105e40:	48 05 68 02 00 00    	add    $0x268,%rax$/;"	l
ffff800000105e46	kernel.asm	/^ffff800000105e46:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000105e49	kernel.asm	/^ffff800000105e49:	48 b8 8b 6d 10 00 00 	movabs $0xffff800000106d8b,%rax$/;"	l
ffff800000105e50	kernel.asm	/^ffff800000105e50:	80 ff ff $/;"	l
ffff800000105e53	kernel.asm	/^ffff800000105e53:	ff d0                	callq  *%rax$/;"	l
ffff800000105e55	kernel.asm	/^ffff800000105e55:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000105e59	kernel.asm	/^ffff800000105e59:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000105e5c	kernel.asm	/^ffff800000105e5c:	48 b8 98 72 10 00 00 	movabs $0xffff800000107298,%rax$/;"	l
ffff800000105e63	kernel.asm	/^ffff800000105e63:	80 ff ff $/;"	l
ffff800000105e66	kernel.asm	/^ffff800000105e66:	ff d0                	callq  *%rax$/;"	l
ffff800000105e68	kernel.asm	/^ffff800000105e68:	8b 45 dc             	mov    -0x24(%rbp),%eax$/;"	l
ffff800000105e6b	kernel.asm	/^ffff800000105e6b:	c9                   	leaveq $/;"	l
ffff800000105e6c	kernel.asm	/^ffff800000105e6c:	c3                   	retq   $/;"	l
ffff800000105e6d	kernel.asm	/^ffff800000105e6d <piperead>:$/;"	l
ffff800000105e6d	kernel.asm	/^ffff800000105e6d:	55                   	push   %rbp$/;"	l
ffff800000105e6e	kernel.asm	/^ffff800000105e6e:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000105e71	kernel.asm	/^ffff800000105e71:	48 83 ec 30          	sub    $0x30,%rsp$/;"	l
ffff800000105e75	kernel.asm	/^ffff800000105e75:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
ffff800000105e79	kernel.asm	/^ffff800000105e79:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)$/;"	l
ffff800000105e7d	kernel.asm	/^ffff800000105e7d:	89 55 dc             	mov    %edx,-0x24(%rbp)$/;"	l
ffff800000105e80	kernel.asm	/^ffff800000105e80:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000105e84	kernel.asm	/^ffff800000105e84:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000105e87	kernel.asm	/^ffff800000105e87:	48 b8 ff 71 10 00 00 	movabs $0xffff8000001071ff,%rax$/;"	l
ffff800000105e8e	kernel.asm	/^ffff800000105e8e:	80 ff ff $/;"	l
ffff800000105e91	kernel.asm	/^ffff800000105e91:	ff d0                	callq  *%rax$/;"	l
ffff800000105e93	kernel.asm	/^ffff800000105e93:	eb 50                	jmp    ffff800000105ee5 <piperead+0x78>$/;"	l
ffff800000105e95	kernel.asm	/^ffff800000105e95:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000105e9c	kernel.asm	/^ffff800000105e9c:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000105ea0	kernel.asm	/^ffff800000105ea0:	8b 40 40             	mov    0x40(%rax),%eax$/;"	l
ffff800000105ea3	kernel.asm	/^ffff800000105ea3:	85 c0                	test   %eax,%eax$/;"	l
ffff800000105ea5	kernel.asm	/^ffff800000105ea5:	74 1d                	je     ffff800000105ec4 <piperead+0x57>$/;"	l
ffff800000105ea7	kernel.asm	/^ffff800000105ea7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000105eab	kernel.asm	/^ffff800000105eab:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000105eae	kernel.asm	/^ffff800000105eae:	48 b8 98 72 10 00 00 	movabs $0xffff800000107298,%rax$/;"	l
ffff800000105eb5	kernel.asm	/^ffff800000105eb5:	80 ff ff $/;"	l
ffff800000105eb8	kernel.asm	/^ffff800000105eb8:	ff d0                	callq  *%rax$/;"	l
ffff800000105eba	kernel.asm	/^ffff800000105eba:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff800000105ebf	kernel.asm	/^ffff800000105ebf:	e9 df 00 00 00       	jmpq   ffff800000105fa3 <piperead+0x136>$/;"	l
ffff800000105ec4	kernel.asm	/^ffff800000105ec4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000105ec8	kernel.asm	/^ffff800000105ec8:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx$/;"	l
ffff800000105ecc	kernel.asm	/^ffff800000105ecc:	48 81 c2 68 02 00 00 	add    $0x268,%rdx$/;"	l
ffff800000105ed3	kernel.asm	/^ffff800000105ed3:	48 89 c6             	mov    %rax,%rsi$/;"	l
ffff800000105ed6	kernel.asm	/^ffff800000105ed6:	48 89 d7             	mov    %rdx,%rdi$/;"	l
ffff800000105ed9	kernel.asm	/^ffff800000105ed9:	48 b8 23 6c 10 00 00 	movabs $0xffff800000106c23,%rax$/;"	l
ffff800000105ee0	kernel.asm	/^ffff800000105ee0:	80 ff ff $/;"	l
ffff800000105ee3	kernel.asm	/^ffff800000105ee3:	ff d0                	callq  *%rax$/;"	l
ffff800000105ee5	kernel.asm	/^ffff800000105ee5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000105ee9	kernel.asm	/^ffff800000105ee9:	8b 90 68 02 00 00    	mov    0x268(%rax),%edx$/;"	l
ffff800000105eef	kernel.asm	/^ffff800000105eef:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000105ef3	kernel.asm	/^ffff800000105ef3:	8b 80 6c 02 00 00    	mov    0x26c(%rax),%eax$/;"	l
ffff800000105ef9	kernel.asm	/^ffff800000105ef9:	39 c2                	cmp    %eax,%edx$/;"	l
ffff800000105efb	kernel.asm	/^ffff800000105efb:	75 0e                	jne    ffff800000105f0b <piperead+0x9e>$/;"	l
ffff800000105efd	kernel.asm	/^ffff800000105efd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000105f01	kernel.asm	/^ffff800000105f01:	8b 80 74 02 00 00    	mov    0x274(%rax),%eax$/;"	l
ffff800000105f07	kernel.asm	/^ffff800000105f07:	85 c0                	test   %eax,%eax$/;"	l
ffff800000105f09	kernel.asm	/^ffff800000105f09:	75 8a                	jne    ffff800000105e95 <piperead+0x28>$/;"	l
ffff800000105f0b	kernel.asm	/^ffff800000105f0b:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)$/;"	l
ffff800000105f12	kernel.asm	/^ffff800000105f12:	eb 55                	jmp    ffff800000105f69 <piperead+0xfc>$/;"	l
ffff800000105f14	kernel.asm	/^ffff800000105f14:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000105f18	kernel.asm	/^ffff800000105f18:	8b 90 68 02 00 00    	mov    0x268(%rax),%edx$/;"	l
ffff800000105f1e	kernel.asm	/^ffff800000105f1e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000105f22	kernel.asm	/^ffff800000105f22:	8b 80 6c 02 00 00    	mov    0x26c(%rax),%eax$/;"	l
ffff800000105f28	kernel.asm	/^ffff800000105f28:	39 c2                	cmp    %eax,%edx$/;"	l
ffff800000105f2a	kernel.asm	/^ffff800000105f2a:	74 47                	je     ffff800000105f73 <piperead+0x106>$/;"	l
ffff800000105f2c	kernel.asm	/^ffff800000105f2c:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff800000105f2f	kernel.asm	/^ffff800000105f2f:	48 63 d0             	movslq %eax,%rdx$/;"	l
ffff800000105f32	kernel.asm	/^ffff800000105f32:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff800000105f36	kernel.asm	/^ffff800000105f36:	48 8d 34 02          	lea    (%rdx,%rax,1),%rsi$/;"	l
ffff800000105f3a	kernel.asm	/^ffff800000105f3a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000105f3e	kernel.asm	/^ffff800000105f3e:	8b 80 68 02 00 00    	mov    0x268(%rax),%eax$/;"	l
ffff800000105f44	kernel.asm	/^ffff800000105f44:	8d 48 01             	lea    0x1(%rax),%ecx$/;"	l
ffff800000105f47	kernel.asm	/^ffff800000105f47:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx$/;"	l
ffff800000105f4b	kernel.asm	/^ffff800000105f4b:	89 8a 68 02 00 00    	mov    %ecx,0x268(%rdx)$/;"	l
ffff800000105f51	kernel.asm	/^ffff800000105f51:	25 ff 01 00 00       	and    $0x1ff,%eax$/;"	l
ffff800000105f56	kernel.asm	/^ffff800000105f56:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000105f58	kernel.asm	/^ffff800000105f58:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000105f5c	kernel.asm	/^ffff800000105f5c:	89 d2                	mov    %edx,%edx$/;"	l
ffff800000105f5e	kernel.asm	/^ffff800000105f5e:	0f b6 44 10 68       	movzbl 0x68(%rax,%rdx,1),%eax$/;"	l
ffff800000105f63	kernel.asm	/^ffff800000105f63:	88 06                	mov    %al,(%rsi)$/;"	l
ffff800000105f65	kernel.asm	/^ffff800000105f65:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)$/;"	l
ffff800000105f69	kernel.asm	/^ffff800000105f69:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff800000105f6c	kernel.asm	/^ffff800000105f6c:	3b 45 dc             	cmp    -0x24(%rbp),%eax$/;"	l
ffff800000105f6f	kernel.asm	/^ffff800000105f6f:	7c a3                	jl     ffff800000105f14 <piperead+0xa7>$/;"	l
ffff800000105f71	kernel.asm	/^ffff800000105f71:	eb 01                	jmp    ffff800000105f74 <piperead+0x107>$/;"	l
ffff800000105f73	kernel.asm	/^ffff800000105f73:	90                   	nop$/;"	l
ffff800000105f74	kernel.asm	/^ffff800000105f74:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000105f78	kernel.asm	/^ffff800000105f78:	48 05 6c 02 00 00    	add    $0x26c,%rax$/;"	l
ffff800000105f7e	kernel.asm	/^ffff800000105f7e:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000105f81	kernel.asm	/^ffff800000105f81:	48 b8 8b 6d 10 00 00 	movabs $0xffff800000106d8b,%rax$/;"	l
ffff800000105f88	kernel.asm	/^ffff800000105f88:	80 ff ff $/;"	l
ffff800000105f8b	kernel.asm	/^ffff800000105f8b:	ff d0                	callq  *%rax$/;"	l
ffff800000105f8d	kernel.asm	/^ffff800000105f8d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000105f91	kernel.asm	/^ffff800000105f91:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000105f94	kernel.asm	/^ffff800000105f94:	48 b8 98 72 10 00 00 	movabs $0xffff800000107298,%rax$/;"	l
ffff800000105f9b	kernel.asm	/^ffff800000105f9b:	80 ff ff $/;"	l
ffff800000105f9e	kernel.asm	/^ffff800000105f9e:	ff d0                	callq  *%rax$/;"	l
ffff800000105fa0	kernel.asm	/^ffff800000105fa0:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff800000105fa3	kernel.asm	/^ffff800000105fa3:	c9                   	leaveq $/;"	l
ffff800000105fa4	kernel.asm	/^ffff800000105fa4:	c3                   	retq   $/;"	l
ffff800000105fa5	kernel.asm	/^ffff800000105fa5 <readeflags>:$/;"	l
ffff800000105fa5	kernel.asm	/^ffff800000105fa5:	55                   	push   %rbp$/;"	l
ffff800000105fa6	kernel.asm	/^ffff800000105fa6:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000105fa9	kernel.asm	/^ffff800000105fa9:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff800000105fad	kernel.asm	/^ffff800000105fad:	9c                   	pushfq $/;"	l
ffff800000105fae	kernel.asm	/^ffff800000105fae:	58                   	pop    %rax$/;"	l
ffff800000105faf	kernel.asm	/^ffff800000105faf:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff800000105fb3	kernel.asm	/^ffff800000105fb3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000105fb7	kernel.asm	/^ffff800000105fb7:	c9                   	leaveq $/;"	l
ffff800000105fb8	kernel.asm	/^ffff800000105fb8:	c3                   	retq   $/;"	l
ffff800000105fb9	kernel.asm	/^ffff800000105fb9 <sti>:$/;"	l
ffff800000105fb9	kernel.asm	/^ffff800000105fb9:	55                   	push   %rbp$/;"	l
ffff800000105fba	kernel.asm	/^ffff800000105fba:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000105fbd	kernel.asm	/^ffff800000105fbd:	fb                   	sti    $/;"	l
ffff800000105fbe	kernel.asm	/^ffff800000105fbe:	90                   	nop$/;"	l
ffff800000105fbf	kernel.asm	/^ffff800000105fbf:	5d                   	pop    %rbp$/;"	l
ffff800000105fc0	kernel.asm	/^ffff800000105fc0:	c3                   	retq   $/;"	l
ffff800000105fc1	kernel.asm	/^ffff800000105fc1 <pinit>:$/;"	l
ffff800000105fc1	kernel.asm	/^ffff800000105fc1:	55                   	push   %rbp$/;"	l
ffff800000105fc2	kernel.asm	/^ffff800000105fc2:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000105fc5	kernel.asm	/^ffff800000105fc5:	48 be 7d bd 10 00 00 	movabs $0xffff80000010bd7d,%rsi$/;"	l
ffff800000105fcc	kernel.asm	/^ffff800000105fcc:	80 ff ff $/;"	l
ffff800000105fcf	kernel.asm	/^ffff800000105fcf:	48 bf c0 7a 11 00 00 	movabs $0xffff800000117ac0,%rdi$/;"	l
ffff800000105fd6	kernel.asm	/^ffff800000105fd6:	80 ff ff $/;"	l
ffff800000105fd9	kernel.asm	/^ffff800000105fd9:	48 b8 ca 71 10 00 00 	movabs $0xffff8000001071ca,%rax$/;"	l
ffff800000105fe0	kernel.asm	/^ffff800000105fe0:	80 ff ff $/;"	l
ffff800000105fe3	kernel.asm	/^ffff800000105fe3:	ff d0                	callq  *%rax$/;"	l
ffff800000105fe5	kernel.asm	/^ffff800000105fe5:	90                   	nop$/;"	l
ffff800000105fe6	kernel.asm	/^ffff800000105fe6:	5d                   	pop    %rbp$/;"	l
ffff800000105fe7	kernel.asm	/^ffff800000105fe7:	c3                   	retq   $/;"	l
ffff800000105fe8	kernel.asm	/^ffff800000105fe8 <allocproc>:$/;"	l
ffff800000105fe8	kernel.asm	/^ffff800000105fe8:	55                   	push   %rbp$/;"	l
ffff800000105fe9	kernel.asm	/^ffff800000105fe9:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000105fec	kernel.asm	/^ffff800000105fec:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff800000105ff0	kernel.asm	/^ffff800000105ff0:	48 bf c0 7a 11 00 00 	movabs $0xffff800000117ac0,%rdi$/;"	l
ffff800000105ff7	kernel.asm	/^ffff800000105ff7:	80 ff ff $/;"	l
ffff800000105ffa	kernel.asm	/^ffff800000105ffa:	48 b8 ff 71 10 00 00 	movabs $0xffff8000001071ff,%rax$/;"	l
ffff800000106001	kernel.asm	/^ffff800000106001:	80 ff ff $/;"	l
ffff800000106004	kernel.asm	/^ffff800000106004:	ff d0                	callq  *%rax$/;"	l
ffff800000106006	kernel.asm	/^ffff800000106006:	48 b8 28 7b 11 00 00 	movabs $0xffff800000117b28,%rax$/;"	l
ffff80000010600d	kernel.asm	/^ffff80000010600d:	80 ff ff $/;"	l
ffff800000106010	kernel.asm	/^ffff800000106010:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff800000106014	kernel.asm	/^ffff800000106014:	eb 13                	jmp    ffff800000106029 <allocproc+0x41>$/;"	l
ffff800000106016	kernel.asm	/^ffff800000106016:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010601a	kernel.asm	/^ffff80000010601a:	8b 40 18             	mov    0x18(%rax),%eax$/;"	l
ffff80000010601d	kernel.asm	/^ffff80000010601d:	85 c0                	test   %eax,%eax$/;"	l
ffff80000010601f	kernel.asm	/^ffff80000010601f:	74 38                	je     ffff800000106059 <allocproc+0x71>$/;"	l
ffff800000106021	kernel.asm	/^ffff800000106021:	48 81 45 f8 e0 00 00 	addq   $0xe0,-0x8(%rbp)$/;"	l
ffff800000106028	kernel.asm	/^ffff800000106028:	00 $/;"	l
ffff800000106029	kernel.asm	/^ffff800000106029:	48 b8 28 b3 11 00 00 	movabs $0xffff80000011b328,%rax$/;"	l
ffff800000106030	kernel.asm	/^ffff800000106030:	80 ff ff $/;"	l
ffff800000106033	kernel.asm	/^ffff800000106033:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)$/;"	l
ffff800000106037	kernel.asm	/^ffff800000106037:	72 dd                	jb     ffff800000106016 <allocproc+0x2e>$/;"	l
ffff800000106039	kernel.asm	/^ffff800000106039:	48 bf c0 7a 11 00 00 	movabs $0xffff800000117ac0,%rdi$/;"	l
ffff800000106040	kernel.asm	/^ffff800000106040:	80 ff ff $/;"	l
ffff800000106043	kernel.asm	/^ffff800000106043:	48 b8 98 72 10 00 00 	movabs $0xffff800000107298,%rax$/;"	l
ffff80000010604a	kernel.asm	/^ffff80000010604a:	80 ff ff $/;"	l
ffff80000010604d	kernel.asm	/^ffff80000010604d:	ff d0                	callq  *%rax$/;"	l
ffff80000010604f	kernel.asm	/^ffff80000010604f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000106054	kernel.asm	/^ffff800000106054:	e9 05 01 00 00       	jmpq   ffff80000010615e <allocproc+0x176>$/;"	l
ffff800000106059	kernel.asm	/^ffff800000106059:	90                   	nop$/;"	l
ffff80000010605a	kernel.asm	/^ffff80000010605a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010605e	kernel.asm	/^ffff80000010605e:	c7 40 18 01 00 00 00 	movl   $0x1,0x18(%rax)$/;"	l
ffff800000106065	kernel.asm	/^ffff800000106065:	48 b8 40 d5 10 00 00 	movabs $0xffff80000010d540,%rax$/;"	l
ffff80000010606c	kernel.asm	/^ffff80000010606c:	80 ff ff $/;"	l
ffff80000010606f	kernel.asm	/^ffff80000010606f:	8b 00                	mov    (%rax),%eax$/;"	l
ffff800000106071	kernel.asm	/^ffff800000106071:	8d 48 01             	lea    0x1(%rax),%ecx$/;"	l
ffff800000106074	kernel.asm	/^ffff800000106074:	48 ba 40 d5 10 00 00 	movabs $0xffff80000010d540,%rdx$/;"	l
ffff80000010607b	kernel.asm	/^ffff80000010607b:	80 ff ff $/;"	l
ffff80000010607e	kernel.asm	/^ffff80000010607e:	89 0a                	mov    %ecx,(%rdx)$/;"	l
ffff800000106080	kernel.asm	/^ffff800000106080:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx$/;"	l
ffff800000106084	kernel.asm	/^ffff800000106084:	89 42 1c             	mov    %eax,0x1c(%rdx)$/;"	l
ffff800000106087	kernel.asm	/^ffff800000106087:	48 bf c0 7a 11 00 00 	movabs $0xffff800000117ac0,%rdi$/;"	l
ffff80000010608e	kernel.asm	/^ffff80000010608e:	80 ff ff $/;"	l
ffff800000106091	kernel.asm	/^ffff800000106091:	48 b8 98 72 10 00 00 	movabs $0xffff800000107298,%rax$/;"	l
ffff800000106098	kernel.asm	/^ffff800000106098:	80 ff ff $/;"	l
ffff80000010609b	kernel.asm	/^ffff80000010609b:	ff d0                	callq  *%rax$/;"	l
ffff80000010609d	kernel.asm	/^ffff80000010609d:	48 b8 9f 40 10 00 00 	movabs $0xffff80000010409f,%rax$/;"	l
ffff8000001060a4	kernel.asm	/^ffff8000001060a4:	80 ff ff $/;"	l
ffff8000001060a7	kernel.asm	/^ffff8000001060a7:	ff d0                	callq  *%rax$/;"	l
ffff8000001060a9	kernel.asm	/^ffff8000001060a9:	48 89 c2             	mov    %rax,%rdx$/;"	l
ffff8000001060ac	kernel.asm	/^ffff8000001060ac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001060b0	kernel.asm	/^ffff8000001060b0:	48 89 50 10          	mov    %rdx,0x10(%rax)$/;"	l
ffff8000001060b4	kernel.asm	/^ffff8000001060b4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001060b8	kernel.asm	/^ffff8000001060b8:	48 8b 40 10          	mov    0x10(%rax),%rax$/;"	l
ffff8000001060bc	kernel.asm	/^ffff8000001060bc:	48 85 c0             	test   %rax,%rax$/;"	l
ffff8000001060bf	kernel.asm	/^ffff8000001060bf:	75 15                	jne    ffff8000001060d6 <allocproc+0xee>$/;"	l
ffff8000001060c1	kernel.asm	/^ffff8000001060c1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001060c5	kernel.asm	/^ffff8000001060c5:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%rax)$/;"	l
ffff8000001060cc	kernel.asm	/^ffff8000001060cc:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff8000001060d1	kernel.asm	/^ffff8000001060d1:	e9 88 00 00 00       	jmpq   ffff80000010615e <allocproc+0x176>$/;"	l
ffff8000001060d6	kernel.asm	/^ffff8000001060d6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001060da	kernel.asm	/^ffff8000001060da:	48 8b 40 10          	mov    0x10(%rax),%rax$/;"	l
ffff8000001060de	kernel.asm	/^ffff8000001060de:	48 05 00 10 00 00    	add    $0x1000,%rax$/;"	l
ffff8000001060e4	kernel.asm	/^ffff8000001060e4:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ffff8000001060e8	kernel.asm	/^ffff8000001060e8:	48 81 6d f0 b0 00 00 	subq   $0xb0,-0x10(%rbp)$/;"	l
ffff8000001060ef	kernel.asm	/^ffff8000001060ef:	00 $/;"	l
ffff8000001060f0	kernel.asm	/^ffff8000001060f0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001060f4	kernel.asm	/^ffff8000001060f4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
ffff8000001060f8	kernel.asm	/^ffff8000001060f8:	48 89 50 28          	mov    %rdx,0x28(%rax)$/;"	l
ffff8000001060fc	kernel.asm	/^ffff8000001060fc:	48 83 6d f0 08       	subq   $0x8,-0x10(%rbp)$/;"	l
ffff800000106101	kernel.asm	/^ffff800000106101:	48 ba f4 91 10 00 00 	movabs $0xffff8000001091f4,%rdx$/;"	l
ffff800000106108	kernel.asm	/^ffff800000106108:	80 ff ff $/;"	l
ffff80000010610b	kernel.asm	/^ffff80000010610b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff80000010610f	kernel.asm	/^ffff80000010610f:	48 89 10             	mov    %rdx,(%rax)$/;"	l
ffff800000106112	kernel.asm	/^ffff800000106112:	48 83 6d f0 40       	subq   $0x40,-0x10(%rbp)$/;"	l
ffff800000106117	kernel.asm	/^ffff800000106117:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010611b	kernel.asm	/^ffff80000010611b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
ffff80000010611f	kernel.asm	/^ffff80000010611f:	48 89 50 30          	mov    %rdx,0x30(%rax)$/;"	l
ffff800000106123	kernel.asm	/^ffff800000106123:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000106127	kernel.asm	/^ffff800000106127:	48 8b 40 30          	mov    0x30(%rax),%rax$/;"	l
ffff80000010612b	kernel.asm	/^ffff80000010612b:	ba 40 00 00 00       	mov    $0x40,%edx$/;"	l
ffff800000106130	kernel.asm	/^ffff800000106130:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffff800000106135	kernel.asm	/^ffff800000106135:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000106138	kernel.asm	/^ffff800000106138:	48 b8 9b 75 10 00 00 	movabs $0xffff80000010759b,%rax$/;"	l
ffff80000010613f	kernel.asm	/^ffff80000010613f:	80 ff ff $/;"	l
ffff800000106142	kernel.asm	/^ffff800000106142:	ff d0                	callq  *%rax$/;"	l
ffff800000106144	kernel.asm	/^ffff800000106144:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000106148	kernel.asm	/^ffff800000106148:	48 8b 40 30          	mov    0x30(%rax),%rax$/;"	l
ffff80000010614c	kernel.asm	/^ffff80000010614c:	48 ba c4 6b 10 00 00 	movabs $0xffff800000106bc4,%rdx$/;"	l
ffff800000106153	kernel.asm	/^ffff800000106153:	80 ff ff $/;"	l
ffff800000106156	kernel.asm	/^ffff800000106156:	48 89 50 38          	mov    %rdx,0x38(%rax)$/;"	l
ffff80000010615a	kernel.asm	/^ffff80000010615a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010615e	kernel.asm	/^ffff80000010615e:	c9                   	leaveq $/;"	l
ffff80000010615f	kernel.asm	/^ffff80000010615f:	c3                   	retq   $/;"	l
ffff800000106160	kernel.asm	/^ffff800000106160 <userinit>:$/;"	l
ffff800000106160	kernel.asm	/^ffff800000106160:	55                   	push   %rbp$/;"	l
ffff800000106161	kernel.asm	/^ffff800000106161:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000106164	kernel.asm	/^ffff800000106164:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff800000106168	kernel.asm	/^ffff800000106168:	48 b8 e8 5f 10 00 00 	movabs $0xffff800000105fe8,%rax$/;"	l
ffff80000010616f	kernel.asm	/^ffff80000010616f:	80 ff ff $/;"	l
ffff800000106172	kernel.asm	/^ffff800000106172:	ff d0                	callq  *%rax$/;"	l
ffff800000106174	kernel.asm	/^ffff800000106174:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff800000106178	kernel.asm	/^ffff800000106178:	48 b8 28 b3 11 00 00 	movabs $0xffff80000011b328,%rax$/;"	l
ffff80000010617f	kernel.asm	/^ffff80000010617f:	80 ff ff $/;"	l
ffff800000106182	kernel.asm	/^ffff800000106182:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx$/;"	l
ffff800000106186	kernel.asm	/^ffff800000106186:	48 89 10             	mov    %rdx,(%rax)$/;"	l
ffff800000106189	kernel.asm	/^ffff800000106189:	48 b8 20 ab 10 00 00 	movabs $0xffff80000010ab20,%rax$/;"	l
ffff800000106190	kernel.asm	/^ffff800000106190:	80 ff ff $/;"	l
ffff800000106193	kernel.asm	/^ffff800000106193:	ff d0                	callq  *%rax$/;"	l
ffff800000106195	kernel.asm	/^ffff800000106195:	48 89 c2             	mov    %rax,%rdx$/;"	l
ffff800000106198	kernel.asm	/^ffff800000106198:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010619c	kernel.asm	/^ffff80000010619c:	48 89 50 08          	mov    %rdx,0x8(%rax)$/;"	l
ffff8000001061a0	kernel.asm	/^ffff8000001061a0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001061a4	kernel.asm	/^ffff8000001061a4:	48 8b 40 08          	mov    0x8(%rax),%rax$/;"	l
ffff8000001061a8	kernel.asm	/^ffff8000001061a8:	48 85 c0             	test   %rax,%rax$/;"	l
ffff8000001061ab	kernel.asm	/^ffff8000001061ab:	75 16                	jne    ffff8000001061c3 <userinit+0x63>$/;"	l
ffff8000001061ad	kernel.asm	/^ffff8000001061ad:	48 bf 84 bd 10 00 00 	movabs $0xffff80000010bd84,%rdi$/;"	l
ffff8000001061b4	kernel.asm	/^ffff8000001061b4:	80 ff ff $/;"	l
ffff8000001061b7	kernel.asm	/^ffff8000001061b7:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff8000001061be	kernel.asm	/^ffff8000001061be:	80 ff ff $/;"	l
ffff8000001061c1	kernel.asm	/^ffff8000001061c1:	ff d0                	callq  *%rax$/;"	l
ffff8000001061c3	kernel.asm	/^ffff8000001061c3:	48 b8 3c 00 00 00 00 	movabs $0x3c,%rax$/;"	l
ffff8000001061ca	kernel.asm	/^ffff8000001061ca:	00 00 00 $/;"	l
ffff8000001061cd	kernel.asm	/^ffff8000001061cd:	89 c2                	mov    %eax,%edx$/;"	l
ffff8000001061cf	kernel.asm	/^ffff8000001061cf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001061d3	kernel.asm	/^ffff8000001061d3:	48 8b 40 08          	mov    0x8(%rax),%rax$/;"	l
ffff8000001061d7	kernel.asm	/^ffff8000001061d7:	48 be 50 de 10 00 00 	movabs $0xffff80000010de50,%rsi$/;"	l
ffff8000001061de	kernel.asm	/^ffff8000001061de:	80 ff ff $/;"	l
ffff8000001061e1	kernel.asm	/^ffff8000001061e1:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001061e4	kernel.asm	/^ffff8000001061e4:	48 b8 a0 b0 10 00 00 	movabs $0xffff80000010b0a0,%rax$/;"	l
ffff8000001061eb	kernel.asm	/^ffff8000001061eb:	80 ff ff $/;"	l
ffff8000001061ee	kernel.asm	/^ffff8000001061ee:	ff d0                	callq  *%rax$/;"	l
ffff8000001061f0	kernel.asm	/^ffff8000001061f0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001061f4	kernel.asm	/^ffff8000001061f4:	48 c7 00 00 10 00 00 	movq   $0x1000,(%rax)$/;"	l
ffff8000001061fb	kernel.asm	/^ffff8000001061fb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001061ff	kernel.asm	/^ffff8000001061ff:	48 8b 40 28          	mov    0x28(%rax),%rax$/;"	l
ffff800000106203	kernel.asm	/^ffff800000106203:	ba b0 00 00 00       	mov    $0xb0,%edx$/;"	l
ffff800000106208	kernel.asm	/^ffff800000106208:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffff80000010620d	kernel.asm	/^ffff80000010620d:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000106210	kernel.asm	/^ffff800000106210:	48 b8 9b 75 10 00 00 	movabs $0xffff80000010759b,%rax$/;"	l
ffff800000106217	kernel.asm	/^ffff800000106217:	80 ff ff $/;"	l
ffff80000010621a	kernel.asm	/^ffff80000010621a:	ff d0                	callq  *%rax$/;"	l
ffff80000010621c	kernel.asm	/^ffff80000010621c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000106220	kernel.asm	/^ffff800000106220:	48 8b 40 28          	mov    0x28(%rax),%rax$/;"	l
ffff800000106224	kernel.asm	/^ffff800000106224:	48 c7 80 90 00 00 00 	movq   $0x2b,0x90(%rax)$/;"	l
ffff80000010622b	kernel.asm	/^ffff80000010622b:	2b 00 00 00 $/;"	l
ffff80000010622f	kernel.asm	/^ffff80000010622f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000106233	kernel.asm	/^ffff800000106233:	48 8b 40 28          	mov    0x28(%rax),%rax$/;"	l
ffff800000106237	kernel.asm	/^ffff800000106237:	48 c7 80 a8 00 00 00 	movq   $0x23,0xa8(%rax)$/;"	l
ffff80000010623e	kernel.asm	/^ffff80000010623e:	23 00 00 00 $/;"	l
ffff800000106242	kernel.asm	/^ffff800000106242:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000106246	kernel.asm	/^ffff800000106246:	48 8b 40 28          	mov    0x28(%rax),%rax$/;"	l
ffff80000010624a	kernel.asm	/^ffff80000010624a:	48 c7 40 50 00 02 00 	movq   $0x200,0x50(%rax)$/;"	l
ffff800000106251	kernel.asm	/^ffff800000106251:	00 $/;"	l
ffff800000106252	kernel.asm	/^ffff800000106252:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000106256	kernel.asm	/^ffff800000106256:	48 8b 40 28          	mov    0x28(%rax),%rax$/;"	l
ffff80000010625a	kernel.asm	/^ffff80000010625a:	48 c7 80 a0 00 00 00 	movq   $0x1000,0xa0(%rax)$/;"	l
ffff800000106261	kernel.asm	/^ffff800000106261:	00 10 00 00 $/;"	l
ffff800000106265	kernel.asm	/^ffff800000106265:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000106269	kernel.asm	/^ffff800000106269:	48 8b 40 28          	mov    0x28(%rax),%rax$/;"	l
ffff80000010626d	kernel.asm	/^ffff80000010626d:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)$/;"	l
ffff800000106274	kernel.asm	/^ffff800000106274:	00 $/;"	l
ffff800000106275	kernel.asm	/^ffff800000106275:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000106279	kernel.asm	/^ffff800000106279:	48 05 d0 00 00 00    	add    $0xd0,%rax$/;"	l
ffff80000010627f	kernel.asm	/^ffff80000010627f:	ba 10 00 00 00       	mov    $0x10,%edx$/;"	l
ffff800000106284	kernel.asm	/^ffff800000106284:	48 be 9d bd 10 00 00 	movabs $0xffff80000010bd9d,%rsi$/;"	l
ffff80000010628b	kernel.asm	/^ffff80000010628b:	80 ff ff $/;"	l
ffff80000010628e	kernel.asm	/^ffff80000010628e:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000106291	kernel.asm	/^ffff800000106291:	48 b8 4b 78 10 00 00 	movabs $0xffff80000010784b,%rax$/;"	l
ffff800000106298	kernel.asm	/^ffff800000106298:	80 ff ff $/;"	l
ffff80000010629b	kernel.asm	/^ffff80000010629b:	ff d0                	callq  *%rax$/;"	l
ffff80000010629d	kernel.asm	/^ffff80000010629d:	48 bf a6 bd 10 00 00 	movabs $0xffff80000010bda6,%rdi$/;"	l
ffff8000001062a4	kernel.asm	/^ffff8000001062a4:	80 ff ff $/;"	l
ffff8000001062a7	kernel.asm	/^ffff8000001062a7:	48 b8 ba 36 10 00 00 	movabs $0xffff8000001036ba,%rax$/;"	l
ffff8000001062ae	kernel.asm	/^ffff8000001062ae:	80 ff ff $/;"	l
ffff8000001062b1	kernel.asm	/^ffff8000001062b1:	ff d0                	callq  *%rax$/;"	l
ffff8000001062b3	kernel.asm	/^ffff8000001062b3:	48 89 c2             	mov    %rax,%rdx$/;"	l
ffff8000001062b6	kernel.asm	/^ffff8000001062b6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001062ba	kernel.asm	/^ffff8000001062ba:	48 89 90 c8 00 00 00 	mov    %rdx,0xc8(%rax)$/;"	l
ffff8000001062c1	kernel.asm	/^ffff8000001062c1:	48 bf c0 7a 11 00 00 	movabs $0xffff800000117ac0,%rdi$/;"	l
ffff8000001062c8	kernel.asm	/^ffff8000001062c8:	80 ff ff $/;"	l
ffff8000001062cb	kernel.asm	/^ffff8000001062cb:	48 b8 ff 71 10 00 00 	movabs $0xffff8000001071ff,%rax$/;"	l
ffff8000001062d2	kernel.asm	/^ffff8000001062d2:	80 ff ff $/;"	l
ffff8000001062d5	kernel.asm	/^ffff8000001062d5:	ff d0                	callq  *%rax$/;"	l
ffff8000001062d7	kernel.asm	/^ffff8000001062d7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001062db	kernel.asm	/^ffff8000001062db:	c7 40 18 03 00 00 00 	movl   $0x3,0x18(%rax)$/;"	l
ffff8000001062e2	kernel.asm	/^ffff8000001062e2:	48 bf c0 7a 11 00 00 	movabs $0xffff800000117ac0,%rdi$/;"	l
ffff8000001062e9	kernel.asm	/^ffff8000001062e9:	80 ff ff $/;"	l
ffff8000001062ec	kernel.asm	/^ffff8000001062ec:	48 b8 98 72 10 00 00 	movabs $0xffff800000107298,%rax$/;"	l
ffff8000001062f3	kernel.asm	/^ffff8000001062f3:	80 ff ff $/;"	l
ffff8000001062f6	kernel.asm	/^ffff8000001062f6:	ff d0                	callq  *%rax$/;"	l
ffff8000001062f8	kernel.asm	/^ffff8000001062f8:	90                   	nop$/;"	l
ffff8000001062f9	kernel.asm	/^ffff8000001062f9:	c9                   	leaveq $/;"	l
ffff8000001062fa	kernel.asm	/^ffff8000001062fa:	c3                   	retq   $/;"	l
ffff8000001062fb	kernel.asm	/^ffff8000001062fb <growproc>:$/;"	l
ffff8000001062fb	kernel.asm	/^ffff8000001062fb:	55                   	push   %rbp$/;"	l
ffff8000001062fc	kernel.asm	/^ffff8000001062fc:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff8000001062ff	kernel.asm	/^ffff8000001062ff:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ffff800000106303	kernel.asm	/^ffff800000106303:	89 7d ec             	mov    %edi,-0x14(%rbp)$/;"	l
ffff800000106306	kernel.asm	/^ffff800000106306:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff80000010630d	kernel.asm	/^ffff80000010630d:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000106311	kernel.asm	/^ffff800000106311:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff800000106314	kernel.asm	/^ffff800000106314:	89 45 fc             	mov    %eax,-0x4(%rbp)$/;"	l
ffff800000106317	kernel.asm	/^ffff800000106317:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)$/;"	l
ffff80000010631b	kernel.asm	/^ffff80000010631b:	7e 3b                	jle    ffff800000106358 <growproc+0x5d>$/;"	l
ffff80000010631d	kernel.asm	/^ffff80000010631d:	8b 55 ec             	mov    -0x14(%rbp),%edx$/;"	l
ffff800000106320	kernel.asm	/^ffff800000106320:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff800000106323	kernel.asm	/^ffff800000106323:	01 c2                	add    %eax,%edx$/;"	l
ffff800000106325	kernel.asm	/^ffff800000106325:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff80000010632c	kernel.asm	/^ffff80000010632c:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000106330	kernel.asm	/^ffff800000106330:	48 8b 40 08          	mov    0x8(%rax),%rax$/;"	l
ffff800000106334	kernel.asm	/^ffff800000106334:	8b 4d fc             	mov    -0x4(%rbp),%ecx$/;"	l
ffff800000106337	kernel.asm	/^ffff800000106337:	89 ce                	mov    %ecx,%esi$/;"	l
ffff800000106339	kernel.asm	/^ffff800000106339:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010633c	kernel.asm	/^ffff80000010633c:	48 b8 78 b2 10 00 00 	movabs $0xffff80000010b278,%rax$/;"	l
ffff800000106343	kernel.asm	/^ffff800000106343:	80 ff ff $/;"	l
ffff800000106346	kernel.asm	/^ffff800000106346:	ff d0                	callq  *%rax$/;"	l
ffff800000106348	kernel.asm	/^ffff800000106348:	89 45 fc             	mov    %eax,-0x4(%rbp)$/;"	l
ffff80000010634b	kernel.asm	/^ffff80000010634b:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)$/;"	l
ffff80000010634f	kernel.asm	/^ffff80000010634f:	75 4b                	jne    ffff80000010639c <growproc+0xa1>$/;"	l
ffff800000106351	kernel.asm	/^ffff800000106351:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff800000106356	kernel.asm	/^ffff800000106356:	eb 74                	jmp    ffff8000001063cc <growproc+0xd1>$/;"	l
ffff800000106358	kernel.asm	/^ffff800000106358:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)$/;"	l
ffff80000010635c	kernel.asm	/^ffff80000010635c:	79 3e                	jns    ffff80000010639c <growproc+0xa1>$/;"	l
ffff80000010635e	kernel.asm	/^ffff80000010635e:	8b 55 ec             	mov    -0x14(%rbp),%edx$/;"	l
ffff800000106361	kernel.asm	/^ffff800000106361:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff800000106364	kernel.asm	/^ffff800000106364:	01 d0                	add    %edx,%eax$/;"	l
ffff800000106366	kernel.asm	/^ffff800000106366:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000106368	kernel.asm	/^ffff800000106368:	8b 4d fc             	mov    -0x4(%rbp),%ecx$/;"	l
ffff80000010636b	kernel.asm	/^ffff80000010636b:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000106372	kernel.asm	/^ffff800000106372:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000106376	kernel.asm	/^ffff800000106376:	48 8b 40 08          	mov    0x8(%rax),%rax$/;"	l
ffff80000010637a	kernel.asm	/^ffff80000010637a:	48 89 ce             	mov    %rcx,%rsi$/;"	l
ffff80000010637d	kernel.asm	/^ffff80000010637d:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000106380	kernel.asm	/^ffff800000106380:	48 b8 cc b3 10 00 00 	movabs $0xffff80000010b3cc,%rax$/;"	l
ffff800000106387	kernel.asm	/^ffff800000106387:	80 ff ff $/;"	l
ffff80000010638a	kernel.asm	/^ffff80000010638a:	ff d0                	callq  *%rax$/;"	l
ffff80000010638c	kernel.asm	/^ffff80000010638c:	89 45 fc             	mov    %eax,-0x4(%rbp)$/;"	l
ffff80000010638f	kernel.asm	/^ffff80000010638f:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)$/;"	l
ffff800000106393	kernel.asm	/^ffff800000106393:	75 07                	jne    ffff80000010639c <growproc+0xa1>$/;"	l
ffff800000106395	kernel.asm	/^ffff800000106395:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff80000010639a	kernel.asm	/^ffff80000010639a:	eb 30                	jmp    ffff8000001063cc <growproc+0xd1>$/;"	l
ffff80000010639c	kernel.asm	/^ffff80000010639c:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff8000001063a3	kernel.asm	/^ffff8000001063a3:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff8000001063a7	kernel.asm	/^ffff8000001063a7:	8b 55 fc             	mov    -0x4(%rbp),%edx$/;"	l
ffff8000001063aa	kernel.asm	/^ffff8000001063aa:	48 89 10             	mov    %rdx,(%rax)$/;"	l
ffff8000001063ad	kernel.asm	/^ffff8000001063ad:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff8000001063b4	kernel.asm	/^ffff8000001063b4:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff8000001063b8	kernel.asm	/^ffff8000001063b8:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001063bb	kernel.asm	/^ffff8000001063bb:	48 b8 c6 ac 10 00 00 	movabs $0xffff80000010acc6,%rax$/;"	l
ffff8000001063c2	kernel.asm	/^ffff8000001063c2:	80 ff ff $/;"	l
ffff8000001063c5	kernel.asm	/^ffff8000001063c5:	ff d0                	callq  *%rax$/;"	l
ffff8000001063c7	kernel.asm	/^ffff8000001063c7:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff8000001063cc	kernel.asm	/^ffff8000001063cc:	c9                   	leaveq $/;"	l
ffff8000001063cd	kernel.asm	/^ffff8000001063cd:	c3                   	retq   $/;"	l
ffff8000001063ce	kernel.asm	/^ffff8000001063ce <fork>:$/;"	l
ffff8000001063ce	kernel.asm	/^ffff8000001063ce:	55                   	push   %rbp$/;"	l
ffff8000001063cf	kernel.asm	/^ffff8000001063cf:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff8000001063d2	kernel.asm	/^ffff8000001063d2:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ffff8000001063d6	kernel.asm	/^ffff8000001063d6:	48 b8 e8 5f 10 00 00 	movabs $0xffff800000105fe8,%rax$/;"	l
ffff8000001063dd	kernel.asm	/^ffff8000001063dd:	80 ff ff $/;"	l
ffff8000001063e0	kernel.asm	/^ffff8000001063e0:	ff d0                	callq  *%rax$/;"	l
ffff8000001063e2	kernel.asm	/^ffff8000001063e2:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ffff8000001063e6	kernel.asm	/^ffff8000001063e6:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)$/;"	l
ffff8000001063eb	kernel.asm	/^ffff8000001063eb:	75 0a                	jne    ffff8000001063f7 <fork+0x29>$/;"	l
ffff8000001063ed	kernel.asm	/^ffff8000001063ed:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff8000001063f2	kernel.asm	/^ffff8000001063f2:	e9 f6 01 00 00       	jmpq   ffff8000001065ed <fork+0x21f>$/;"	l
ffff8000001063f7	kernel.asm	/^ffff8000001063f7:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff8000001063fe	kernel.asm	/^ffff8000001063fe:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000106402	kernel.asm	/^ffff800000106402:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff800000106405	kernel.asm	/^ffff800000106405:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000106407	kernel.asm	/^ffff800000106407:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff80000010640e	kernel.asm	/^ffff80000010640e:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000106412	kernel.asm	/^ffff800000106412:	48 8b 40 08          	mov    0x8(%rax),%rax$/;"	l
ffff800000106416	kernel.asm	/^ffff800000106416:	89 d6                	mov    %edx,%esi$/;"	l
ffff800000106418	kernel.asm	/^ffff800000106418:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010641b	kernel.asm	/^ffff80000010641b:	48 b8 5e b7 10 00 00 	movabs $0xffff80000010b75e,%rax$/;"	l
ffff800000106422	kernel.asm	/^ffff800000106422:	80 ff ff $/;"	l
ffff800000106425	kernel.asm	/^ffff800000106425:	ff d0                	callq  *%rax$/;"	l
ffff800000106427	kernel.asm	/^ffff800000106427:	48 89 c2             	mov    %rax,%rdx$/;"	l
ffff80000010642a	kernel.asm	/^ffff80000010642a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff80000010642e	kernel.asm	/^ffff80000010642e:	48 89 50 08          	mov    %rdx,0x8(%rax)$/;"	l
ffff800000106432	kernel.asm	/^ffff800000106432:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000106436	kernel.asm	/^ffff800000106436:	48 8b 40 08          	mov    0x8(%rax),%rax$/;"	l
ffff80000010643a	kernel.asm	/^ffff80000010643a:	48 85 c0             	test   %rax,%rax$/;"	l
ffff80000010643d	kernel.asm	/^ffff80000010643d:	75 38                	jne    ffff800000106477 <fork+0xa9>$/;"	l
ffff80000010643f	kernel.asm	/^ffff80000010643f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000106443	kernel.asm	/^ffff800000106443:	48 8b 40 10          	mov    0x10(%rax),%rax$/;"	l
ffff800000106447	kernel.asm	/^ffff800000106447:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010644a	kernel.asm	/^ffff80000010644a:	48 b8 a9 3f 10 00 00 	movabs $0xffff800000103fa9,%rax$/;"	l
ffff800000106451	kernel.asm	/^ffff800000106451:	80 ff ff $/;"	l
ffff800000106454	kernel.asm	/^ffff800000106454:	ff d0                	callq  *%rax$/;"	l
ffff800000106456	kernel.asm	/^ffff800000106456:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff80000010645a	kernel.asm	/^ffff80000010645a:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)$/;"	l
ffff800000106461	kernel.asm	/^ffff800000106461:	00 $/;"	l
ffff800000106462	kernel.asm	/^ffff800000106462:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000106466	kernel.asm	/^ffff800000106466:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%rax)$/;"	l
ffff80000010646d	kernel.asm	/^ffff80000010646d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff800000106472	kernel.asm	/^ffff800000106472:	e9 76 01 00 00       	jmpq   ffff8000001065ed <fork+0x21f>$/;"	l
ffff800000106477	kernel.asm	/^ffff800000106477:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff80000010647e	kernel.asm	/^ffff80000010647e:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000106482	kernel.asm	/^ffff800000106482:	48 8b 10             	mov    (%rax),%rdx$/;"	l
ffff800000106485	kernel.asm	/^ffff800000106485:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000106489	kernel.asm	/^ffff800000106489:	48 89 10             	mov    %rdx,(%rax)$/;"	l
ffff80000010648c	kernel.asm	/^ffff80000010648c:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000106493	kernel.asm	/^ffff800000106493:	64 48 8b 10          	mov    %fs:(%rax),%rdx$/;"	l
ffff800000106497	kernel.asm	/^ffff800000106497:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff80000010649b	kernel.asm	/^ffff80000010649b:	48 89 50 20          	mov    %rdx,0x20(%rax)$/;"	l
ffff80000010649f	kernel.asm	/^ffff80000010649f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff8000001064a3	kernel.asm	/^ffff8000001064a3:	48 8b 50 28          	mov    0x28(%rax),%rdx$/;"	l
ffff8000001064a7	kernel.asm	/^ffff8000001064a7:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff8000001064ae	kernel.asm	/^ffff8000001064ae:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff8000001064b2	kernel.asm	/^ffff8000001064b2:	48 8b 40 28          	mov    0x28(%rax),%rax$/;"	l
ffff8000001064b6	kernel.asm	/^ffff8000001064b6:	48 89 c6             	mov    %rax,%rsi$/;"	l
ffff8000001064b9	kernel.asm	/^ffff8000001064b9:	b8 16 00 00 00       	mov    $0x16,%eax$/;"	l
ffff8000001064be	kernel.asm	/^ffff8000001064be:	48 89 d7             	mov    %rdx,%rdi$/;"	l
ffff8000001064c1	kernel.asm	/^ffff8000001064c1:	48 89 c1             	mov    %rax,%rcx$/;"	l
ffff8000001064c4	kernel.asm	/^ffff8000001064c4:	f3 48 a5             	rep movsq %ds:(%rsi),%es:(%rdi)$/;"	l
ffff8000001064c7	kernel.asm	/^ffff8000001064c7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff8000001064cb	kernel.asm	/^ffff8000001064cb:	48 8b 40 28          	mov    0x28(%rax),%rax$/;"	l
ffff8000001064cf	kernel.asm	/^ffff8000001064cf:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)$/;"	l
ffff8000001064d6	kernel.asm	/^ffff8000001064d6:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)$/;"	l
ffff8000001064dd	kernel.asm	/^ffff8000001064dd:	eb 62                	jmp    ffff800000106541 <fork+0x173>$/;"	l
ffff8000001064df	kernel.asm	/^ffff8000001064df:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff8000001064e6	kernel.asm	/^ffff8000001064e6:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff8000001064ea	kernel.asm	/^ffff8000001064ea:	8b 55 fc             	mov    -0x4(%rbp),%edx$/;"	l
ffff8000001064ed	kernel.asm	/^ffff8000001064ed:	48 63 d2             	movslq %edx,%rdx$/;"	l
ffff8000001064f0	kernel.asm	/^ffff8000001064f0:	48 83 c2 08          	add    $0x8,%rdx$/;"	l
ffff8000001064f4	kernel.asm	/^ffff8000001064f4:	48 8b 44 d0 08       	mov    0x8(%rax,%rdx,8),%rax$/;"	l
ffff8000001064f9	kernel.asm	/^ffff8000001064f9:	48 85 c0             	test   %rax,%rax$/;"	l
ffff8000001064fc	kernel.asm	/^ffff8000001064fc:	74 3f                	je     ffff80000010653d <fork+0x16f>$/;"	l
ffff8000001064fe	kernel.asm	/^ffff8000001064fe:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000106505	kernel.asm	/^ffff800000106505:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000106509	kernel.asm	/^ffff800000106509:	8b 55 fc             	mov    -0x4(%rbp),%edx$/;"	l
ffff80000010650c	kernel.asm	/^ffff80000010650c:	48 63 d2             	movslq %edx,%rdx$/;"	l
ffff80000010650f	kernel.asm	/^ffff80000010650f:	48 83 c2 08          	add    $0x8,%rdx$/;"	l
ffff800000106513	kernel.asm	/^ffff800000106513:	48 8b 44 d0 08       	mov    0x8(%rax,%rdx,8),%rax$/;"	l
ffff800000106518	kernel.asm	/^ffff800000106518:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010651b	kernel.asm	/^ffff80000010651b:	48 b8 32 1b 10 00 00 	movabs $0xffff800000101b32,%rax$/;"	l
ffff800000106522	kernel.asm	/^ffff800000106522:	80 ff ff $/;"	l
ffff800000106525	kernel.asm	/^ffff800000106525:	ff d0                	callq  *%rax$/;"	l
ffff800000106527	kernel.asm	/^ffff800000106527:	48 89 c1             	mov    %rax,%rcx$/;"	l
ffff80000010652a	kernel.asm	/^ffff80000010652a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff80000010652e	kernel.asm	/^ffff80000010652e:	8b 55 fc             	mov    -0x4(%rbp),%edx$/;"	l
ffff800000106531	kernel.asm	/^ffff800000106531:	48 63 d2             	movslq %edx,%rdx$/;"	l
ffff800000106534	kernel.asm	/^ffff800000106534:	48 83 c2 08          	add    $0x8,%rdx$/;"	l
ffff800000106538	kernel.asm	/^ffff800000106538:	48 89 4c d0 08       	mov    %rcx,0x8(%rax,%rdx,8)$/;"	l
ffff80000010653d	kernel.asm	/^ffff80000010653d:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)$/;"	l
ffff800000106541	kernel.asm	/^ffff800000106541:	83 7d fc 0f          	cmpl   $0xf,-0x4(%rbp)$/;"	l
ffff800000106545	kernel.asm	/^ffff800000106545:	7e 98                	jle    ffff8000001064df <fork+0x111>$/;"	l
ffff800000106547	kernel.asm	/^ffff800000106547:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff80000010654e	kernel.asm	/^ffff80000010654e:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000106552	kernel.asm	/^ffff800000106552:	48 8b 80 c8 00 00 00 	mov    0xc8(%rax),%rax$/;"	l
ffff800000106559	kernel.asm	/^ffff800000106559:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010655c	kernel.asm	/^ffff80000010655c:	48 b8 7b 27 10 00 00 	movabs $0xffff80000010277b,%rax$/;"	l
ffff800000106563	kernel.asm	/^ffff800000106563:	80 ff ff $/;"	l
ffff800000106566	kernel.asm	/^ffff800000106566:	ff d0                	callq  *%rax$/;"	l
ffff800000106568	kernel.asm	/^ffff800000106568:	48 89 c2             	mov    %rax,%rdx$/;"	l
ffff80000010656b	kernel.asm	/^ffff80000010656b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff80000010656f	kernel.asm	/^ffff80000010656f:	48 89 90 c8 00 00 00 	mov    %rdx,0xc8(%rax)$/;"	l
ffff800000106576	kernel.asm	/^ffff800000106576:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff80000010657d	kernel.asm	/^ffff80000010657d:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000106581	kernel.asm	/^ffff800000106581:	48 8d 88 d0 00 00 00 	lea    0xd0(%rax),%rcx$/;"	l
ffff800000106588	kernel.asm	/^ffff800000106588:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff80000010658c	kernel.asm	/^ffff80000010658c:	48 05 d0 00 00 00    	add    $0xd0,%rax$/;"	l
ffff800000106592	kernel.asm	/^ffff800000106592:	ba 10 00 00 00       	mov    $0x10,%edx$/;"	l
ffff800000106597	kernel.asm	/^ffff800000106597:	48 89 ce             	mov    %rcx,%rsi$/;"	l
ffff80000010659a	kernel.asm	/^ffff80000010659a:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010659d	kernel.asm	/^ffff80000010659d:	48 b8 4b 78 10 00 00 	movabs $0xffff80000010784b,%rax$/;"	l
ffff8000001065a4	kernel.asm	/^ffff8000001065a4:	80 ff ff $/;"	l
ffff8000001065a7	kernel.asm	/^ffff8000001065a7:	ff d0                	callq  *%rax$/;"	l
ffff8000001065a9	kernel.asm	/^ffff8000001065a9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff8000001065ad	kernel.asm	/^ffff8000001065ad:	8b 40 1c             	mov    0x1c(%rax),%eax$/;"	l
ffff8000001065b0	kernel.asm	/^ffff8000001065b0:	89 45 ec             	mov    %eax,-0x14(%rbp)$/;"	l
ffff8000001065b3	kernel.asm	/^ffff8000001065b3:	48 bf c0 7a 11 00 00 	movabs $0xffff800000117ac0,%rdi$/;"	l
ffff8000001065ba	kernel.asm	/^ffff8000001065ba:	80 ff ff $/;"	l
ffff8000001065bd	kernel.asm	/^ffff8000001065bd:	48 b8 ff 71 10 00 00 	movabs $0xffff8000001071ff,%rax$/;"	l
ffff8000001065c4	kernel.asm	/^ffff8000001065c4:	80 ff ff $/;"	l
ffff8000001065c7	kernel.asm	/^ffff8000001065c7:	ff d0                	callq  *%rax$/;"	l
ffff8000001065c9	kernel.asm	/^ffff8000001065c9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff8000001065cd	kernel.asm	/^ffff8000001065cd:	c7 40 18 03 00 00 00 	movl   $0x3,0x18(%rax)$/;"	l
ffff8000001065d4	kernel.asm	/^ffff8000001065d4:	48 bf c0 7a 11 00 00 	movabs $0xffff800000117ac0,%rdi$/;"	l
ffff8000001065db	kernel.asm	/^ffff8000001065db:	80 ff ff $/;"	l
ffff8000001065de	kernel.asm	/^ffff8000001065de:	48 b8 98 72 10 00 00 	movabs $0xffff800000107298,%rax$/;"	l
ffff8000001065e5	kernel.asm	/^ffff8000001065e5:	80 ff ff $/;"	l
ffff8000001065e8	kernel.asm	/^ffff8000001065e8:	ff d0                	callq  *%rax$/;"	l
ffff8000001065ea	kernel.asm	/^ffff8000001065ea:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
ffff8000001065ed	kernel.asm	/^ffff8000001065ed:	c9                   	leaveq $/;"	l
ffff8000001065ee	kernel.asm	/^ffff8000001065ee:	c3                   	retq   $/;"	l
ffff8000001065ef	kernel.asm	/^ffff8000001065ef <exit>:$/;"	l
ffff8000001065ef	kernel.asm	/^ffff8000001065ef:	55                   	push   %rbp$/;"	l
ffff8000001065f0	kernel.asm	/^ffff8000001065f0:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff8000001065f3	kernel.asm	/^ffff8000001065f3:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff8000001065f7	kernel.asm	/^ffff8000001065f7:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff8000001065fe	kernel.asm	/^ffff8000001065fe:	64 48 8b 10          	mov    %fs:(%rax),%rdx$/;"	l
ffff800000106602	kernel.asm	/^ffff800000106602:	48 b8 28 b3 11 00 00 	movabs $0xffff80000011b328,%rax$/;"	l
ffff800000106609	kernel.asm	/^ffff800000106609:	80 ff ff $/;"	l
ffff80000010660c	kernel.asm	/^ffff80000010660c:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff80000010660f	kernel.asm	/^ffff80000010660f:	48 39 c2             	cmp    %rax,%rdx$/;"	l
ffff800000106612	kernel.asm	/^ffff800000106612:	75 16                	jne    ffff80000010662a <exit+0x3b>$/;"	l
ffff800000106614	kernel.asm	/^ffff800000106614:	48 bf a8 bd 10 00 00 	movabs $0xffff80000010bda8,%rdi$/;"	l
ffff80000010661b	kernel.asm	/^ffff80000010661b:	80 ff ff $/;"	l
ffff80000010661e	kernel.asm	/^ffff80000010661e:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff800000106625	kernel.asm	/^ffff800000106625:	80 ff ff $/;"	l
ffff800000106628	kernel.asm	/^ffff800000106628:	ff d0                	callq  *%rax$/;"	l
ffff80000010662a	kernel.asm	/^ffff80000010662a:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)$/;"	l
ffff800000106631	kernel.asm	/^ffff800000106631:	eb 6a                	jmp    ffff80000010669d <exit+0xae>$/;"	l
ffff800000106633	kernel.asm	/^ffff800000106633:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff80000010663a	kernel.asm	/^ffff80000010663a:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff80000010663e	kernel.asm	/^ffff80000010663e:	8b 55 f4             	mov    -0xc(%rbp),%edx$/;"	l
ffff800000106641	kernel.asm	/^ffff800000106641:	48 63 d2             	movslq %edx,%rdx$/;"	l
ffff800000106644	kernel.asm	/^ffff800000106644:	48 83 c2 08          	add    $0x8,%rdx$/;"	l
ffff800000106648	kernel.asm	/^ffff800000106648:	48 8b 44 d0 08       	mov    0x8(%rax,%rdx,8),%rax$/;"	l
ffff80000010664d	kernel.asm	/^ffff80000010664d:	48 85 c0             	test   %rax,%rax$/;"	l
ffff800000106650	kernel.asm	/^ffff800000106650:	74 47                	je     ffff800000106699 <exit+0xaa>$/;"	l
ffff800000106652	kernel.asm	/^ffff800000106652:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000106659	kernel.asm	/^ffff800000106659:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff80000010665d	kernel.asm	/^ffff80000010665d:	8b 55 f4             	mov    -0xc(%rbp),%edx$/;"	l
ffff800000106660	kernel.asm	/^ffff800000106660:	48 63 d2             	movslq %edx,%rdx$/;"	l
ffff800000106663	kernel.asm	/^ffff800000106663:	48 83 c2 08          	add    $0x8,%rdx$/;"	l
ffff800000106667	kernel.asm	/^ffff800000106667:	48 8b 44 d0 08       	mov    0x8(%rax,%rdx,8),%rax$/;"	l
ffff80000010666c	kernel.asm	/^ffff80000010666c:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010666f	kernel.asm	/^ffff80000010666f:	48 b8 a2 1b 10 00 00 	movabs $0xffff800000101ba2,%rax$/;"	l
ffff800000106676	kernel.asm	/^ffff800000106676:	80 ff ff $/;"	l
ffff800000106679	kernel.asm	/^ffff800000106679:	ff d0                	callq  *%rax$/;"	l
ffff80000010667b	kernel.asm	/^ffff80000010667b:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000106682	kernel.asm	/^ffff800000106682:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000106686	kernel.asm	/^ffff800000106686:	8b 55 f4             	mov    -0xc(%rbp),%edx$/;"	l
ffff800000106689	kernel.asm	/^ffff800000106689:	48 63 d2             	movslq %edx,%rdx$/;"	l
ffff80000010668c	kernel.asm	/^ffff80000010668c:	48 83 c2 08          	add    $0x8,%rdx$/;"	l
ffff800000106690	kernel.asm	/^ffff800000106690:	48 c7 44 d0 08 00 00 	movq   $0x0,0x8(%rax,%rdx,8)$/;"	l
ffff800000106697	kernel.asm	/^ffff800000106697:	00 00 $/;"	l
ffff800000106699	kernel.asm	/^ffff800000106699:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)$/;"	l
ffff80000010669d	kernel.asm	/^ffff80000010669d:	83 7d f4 0f          	cmpl   $0xf,-0xc(%rbp)$/;"	l
ffff8000001066a1	kernel.asm	/^ffff8000001066a1:	7e 90                	jle    ffff800000106633 <exit+0x44>$/;"	l
ffff8000001066a3	kernel.asm	/^ffff8000001066a3:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff8000001066a8	kernel.asm	/^ffff8000001066a8:	48 ba 9e 4d 10 00 00 	movabs $0xffff800000104d9e,%rdx$/;"	l
ffff8000001066af	kernel.asm	/^ffff8000001066af:	80 ff ff $/;"	l
ffff8000001066b2	kernel.asm	/^ffff8000001066b2:	ff d2                	callq  *%rdx$/;"	l
ffff8000001066b4	kernel.asm	/^ffff8000001066b4:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff8000001066bb	kernel.asm	/^ffff8000001066bb:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff8000001066bf	kernel.asm	/^ffff8000001066bf:	48 8b 80 c8 00 00 00 	mov    0xc8(%rax),%rax$/;"	l
ffff8000001066c6	kernel.asm	/^ffff8000001066c6:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001066c9	kernel.asm	/^ffff8000001066c9:	48 b8 c4 29 10 00 00 	movabs $0xffff8000001029c4,%rax$/;"	l
ffff8000001066d0	kernel.asm	/^ffff8000001066d0:	80 ff ff $/;"	l
ffff8000001066d3	kernel.asm	/^ffff8000001066d3:	ff d0                	callq  *%rax$/;"	l
ffff8000001066d5	kernel.asm	/^ffff8000001066d5:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff8000001066da	kernel.asm	/^ffff8000001066da:	48 ba 74 4e 10 00 00 	movabs $0xffff800000104e74,%rdx$/;"	l
ffff8000001066e1	kernel.asm	/^ffff8000001066e1:	80 ff ff $/;"	l
ffff8000001066e4	kernel.asm	/^ffff8000001066e4:	ff d2                	callq  *%rdx$/;"	l
ffff8000001066e6	kernel.asm	/^ffff8000001066e6:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff8000001066ed	kernel.asm	/^ffff8000001066ed:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff8000001066f1	kernel.asm	/^ffff8000001066f1:	48 c7 80 c8 00 00 00 	movq   $0x0,0xc8(%rax)$/;"	l
ffff8000001066f8	kernel.asm	/^ffff8000001066f8:	00 00 00 00 $/;"	l
ffff8000001066fc	kernel.asm	/^ffff8000001066fc:	48 bf c0 7a 11 00 00 	movabs $0xffff800000117ac0,%rdi$/;"	l
ffff800000106703	kernel.asm	/^ffff800000106703:	80 ff ff $/;"	l
ffff800000106706	kernel.asm	/^ffff800000106706:	48 b8 ff 71 10 00 00 	movabs $0xffff8000001071ff,%rax$/;"	l
ffff80000010670d	kernel.asm	/^ffff80000010670d:	80 ff ff $/;"	l
ffff800000106710	kernel.asm	/^ffff800000106710:	ff d0                	callq  *%rax$/;"	l
ffff800000106712	kernel.asm	/^ffff800000106712:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000106719	kernel.asm	/^ffff800000106719:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff80000010671d	kernel.asm	/^ffff80000010671d:	48 8b 40 20          	mov    0x20(%rax),%rax$/;"	l
ffff800000106721	kernel.asm	/^ffff800000106721:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000106724	kernel.asm	/^ffff800000106724:	48 b8 2f 6d 10 00 00 	movabs $0xffff800000106d2f,%rax$/;"	l
ffff80000010672b	kernel.asm	/^ffff80000010672b:	80 ff ff $/;"	l
ffff80000010672e	kernel.asm	/^ffff80000010672e:	ff d0                	callq  *%rax$/;"	l
ffff800000106730	kernel.asm	/^ffff800000106730:	48 b8 28 7b 11 00 00 	movabs $0xffff800000117b28,%rax$/;"	l
ffff800000106737	kernel.asm	/^ffff800000106737:	80 ff ff $/;"	l
ffff80000010673a	kernel.asm	/^ffff80000010673a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff80000010673e	kernel.asm	/^ffff80000010673e:	eb 5d                	jmp    ffff80000010679d <exit+0x1ae>$/;"	l
ffff800000106740	kernel.asm	/^ffff800000106740:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000106744	kernel.asm	/^ffff800000106744:	48 8b 50 20          	mov    0x20(%rax),%rdx$/;"	l
ffff800000106748	kernel.asm	/^ffff800000106748:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff80000010674f	kernel.asm	/^ffff80000010674f:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000106753	kernel.asm	/^ffff800000106753:	48 39 c2             	cmp    %rax,%rdx$/;"	l
ffff800000106756	kernel.asm	/^ffff800000106756:	75 3d                	jne    ffff800000106795 <exit+0x1a6>$/;"	l
ffff800000106758	kernel.asm	/^ffff800000106758:	48 b8 28 b3 11 00 00 	movabs $0xffff80000011b328,%rax$/;"	l
ffff80000010675f	kernel.asm	/^ffff80000010675f:	80 ff ff $/;"	l
ffff800000106762	kernel.asm	/^ffff800000106762:	48 8b 10             	mov    (%rax),%rdx$/;"	l
ffff800000106765	kernel.asm	/^ffff800000106765:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000106769	kernel.asm	/^ffff800000106769:	48 89 50 20          	mov    %rdx,0x20(%rax)$/;"	l
ffff80000010676d	kernel.asm	/^ffff80000010676d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000106771	kernel.asm	/^ffff800000106771:	8b 40 18             	mov    0x18(%rax),%eax$/;"	l
ffff800000106774	kernel.asm	/^ffff800000106774:	83 f8 05             	cmp    $0x5,%eax$/;"	l
ffff800000106777	kernel.asm	/^ffff800000106777:	75 1c                	jne    ffff800000106795 <exit+0x1a6>$/;"	l
ffff800000106779	kernel.asm	/^ffff800000106779:	48 b8 28 b3 11 00 00 	movabs $0xffff80000011b328,%rax$/;"	l
ffff800000106780	kernel.asm	/^ffff800000106780:	80 ff ff $/;"	l
ffff800000106783	kernel.asm	/^ffff800000106783:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff800000106786	kernel.asm	/^ffff800000106786:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000106789	kernel.asm	/^ffff800000106789:	48 b8 2f 6d 10 00 00 	movabs $0xffff800000106d2f,%rax$/;"	l
ffff800000106790	kernel.asm	/^ffff800000106790:	80 ff ff $/;"	l
ffff800000106793	kernel.asm	/^ffff800000106793:	ff d0                	callq  *%rax$/;"	l
ffff800000106795	kernel.asm	/^ffff800000106795:	48 81 45 f8 e0 00 00 	addq   $0xe0,-0x8(%rbp)$/;"	l
ffff80000010679c	kernel.asm	/^ffff80000010679c:	00 $/;"	l
ffff80000010679d	kernel.asm	/^ffff80000010679d:	48 b8 28 b3 11 00 00 	movabs $0xffff80000011b328,%rax$/;"	l
ffff8000001067a4	kernel.asm	/^ffff8000001067a4:	80 ff ff $/;"	l
ffff8000001067a7	kernel.asm	/^ffff8000001067a7:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)$/;"	l
ffff8000001067ab	kernel.asm	/^ffff8000001067ab:	72 93                	jb     ffff800000106740 <exit+0x151>$/;"	l
ffff8000001067ad	kernel.asm	/^ffff8000001067ad:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff8000001067b4	kernel.asm	/^ffff8000001067b4:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff8000001067b8	kernel.asm	/^ffff8000001067b8:	c7 40 18 05 00 00 00 	movl   $0x5,0x18(%rax)$/;"	l
ffff8000001067bf	kernel.asm	/^ffff8000001067bf:	48 b8 5f 6a 10 00 00 	movabs $0xffff800000106a5f,%rax$/;"	l
ffff8000001067c6	kernel.asm	/^ffff8000001067c6:	80 ff ff $/;"	l
ffff8000001067c9	kernel.asm	/^ffff8000001067c9:	ff d0                	callq  *%rax$/;"	l
ffff8000001067cb	kernel.asm	/^ffff8000001067cb:	48 bf b5 bd 10 00 00 	movabs $0xffff80000010bdb5,%rdi$/;"	l
ffff8000001067d2	kernel.asm	/^ffff8000001067d2:	80 ff ff $/;"	l
ffff8000001067d5	kernel.asm	/^ffff8000001067d5:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff8000001067dc	kernel.asm	/^ffff8000001067dc:	80 ff ff $/;"	l
ffff8000001067df	kernel.asm	/^ffff8000001067df:	ff d0                	callq  *%rax$/;"	l
ffff8000001067e1	kernel.asm	/^ffff8000001067e1 <wait>:$/;"	l
ffff8000001067e1	kernel.asm	/^ffff8000001067e1:	55                   	push   %rbp$/;"	l
ffff8000001067e2	kernel.asm	/^ffff8000001067e2:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff8000001067e5	kernel.asm	/^ffff8000001067e5:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff8000001067e9	kernel.asm	/^ffff8000001067e9:	48 bf c0 7a 11 00 00 	movabs $0xffff800000117ac0,%rdi$/;"	l
ffff8000001067f0	kernel.asm	/^ffff8000001067f0:	80 ff ff $/;"	l
ffff8000001067f3	kernel.asm	/^ffff8000001067f3:	48 b8 ff 71 10 00 00 	movabs $0xffff8000001071ff,%rax$/;"	l
ffff8000001067fa	kernel.asm	/^ffff8000001067fa:	80 ff ff $/;"	l
ffff8000001067fd	kernel.asm	/^ffff8000001067fd:	ff d0                	callq  *%rax$/;"	l
ffff8000001067ff	kernel.asm	/^ffff8000001067ff:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)$/;"	l
ffff800000106806	kernel.asm	/^ffff800000106806:	48 b8 28 7b 11 00 00 	movabs $0xffff800000117b28,%rax$/;"	l
ffff80000010680d	kernel.asm	/^ffff80000010680d:	80 ff ff $/;"	l
ffff800000106810	kernel.asm	/^ffff800000106810:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff800000106814	kernel.asm	/^ffff800000106814:	e9 d3 00 00 00       	jmpq   ffff8000001068ec <wait+0x10b>$/;"	l
ffff800000106819	kernel.asm	/^ffff800000106819:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010681d	kernel.asm	/^ffff80000010681d:	48 8b 50 20          	mov    0x20(%rax),%rdx$/;"	l
ffff800000106821	kernel.asm	/^ffff800000106821:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000106828	kernel.asm	/^ffff800000106828:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff80000010682c	kernel.asm	/^ffff80000010682c:	48 39 c2             	cmp    %rax,%rdx$/;"	l
ffff80000010682f	kernel.asm	/^ffff80000010682f:	0f 85 ae 00 00 00    	jne    ffff8000001068e3 <wait+0x102>$/;"	l
ffff800000106835	kernel.asm	/^ffff800000106835:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%rbp)$/;"	l
ffff80000010683c	kernel.asm	/^ffff80000010683c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000106840	kernel.asm	/^ffff800000106840:	8b 40 18             	mov    0x18(%rax),%eax$/;"	l
ffff800000106843	kernel.asm	/^ffff800000106843:	83 f8 05             	cmp    $0x5,%eax$/;"	l
ffff800000106846	kernel.asm	/^ffff800000106846:	0f 85 98 00 00 00    	jne    ffff8000001068e4 <wait+0x103>$/;"	l
ffff80000010684c	kernel.asm	/^ffff80000010684c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000106850	kernel.asm	/^ffff800000106850:	8b 40 1c             	mov    0x1c(%rax),%eax$/;"	l
ffff800000106853	kernel.asm	/^ffff800000106853:	89 45 f0             	mov    %eax,-0x10(%rbp)$/;"	l
ffff800000106856	kernel.asm	/^ffff800000106856:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010685a	kernel.asm	/^ffff80000010685a:	48 8b 40 10          	mov    0x10(%rax),%rax$/;"	l
ffff80000010685e	kernel.asm	/^ffff80000010685e:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000106861	kernel.asm	/^ffff800000106861:	48 b8 a9 3f 10 00 00 	movabs $0xffff800000103fa9,%rax$/;"	l
ffff800000106868	kernel.asm	/^ffff800000106868:	80 ff ff $/;"	l
ffff80000010686b	kernel.asm	/^ffff80000010686b:	ff d0                	callq  *%rax$/;"	l
ffff80000010686d	kernel.asm	/^ffff80000010686d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000106871	kernel.asm	/^ffff800000106871:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)$/;"	l
ffff800000106878	kernel.asm	/^ffff800000106878:	00 $/;"	l
ffff800000106879	kernel.asm	/^ffff800000106879:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010687d	kernel.asm	/^ffff80000010687d:	48 8b 40 08          	mov    0x8(%rax),%rax$/;"	l
ffff800000106881	kernel.asm	/^ffff800000106881:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000106884	kernel.asm	/^ffff800000106884:	48 b8 c2 b4 10 00 00 	movabs $0xffff80000010b4c2,%rax$/;"	l
ffff80000010688b	kernel.asm	/^ffff80000010688b:	80 ff ff $/;"	l
ffff80000010688e	kernel.asm	/^ffff80000010688e:	ff d0                	callq  *%rax$/;"	l
ffff800000106890	kernel.asm	/^ffff800000106890:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000106894	kernel.asm	/^ffff800000106894:	c7 40 1c 00 00 00 00 	movl   $0x0,0x1c(%rax)$/;"	l
ffff80000010689b	kernel.asm	/^ffff80000010689b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010689f	kernel.asm	/^ffff80000010689f:	48 c7 40 20 00 00 00 	movq   $0x0,0x20(%rax)$/;"	l
ffff8000001068a6	kernel.asm	/^ffff8000001068a6:	00 $/;"	l
ffff8000001068a7	kernel.asm	/^ffff8000001068a7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001068ab	kernel.asm	/^ffff8000001068ab:	c6 80 d0 00 00 00 00 	movb   $0x0,0xd0(%rax)$/;"	l
ffff8000001068b2	kernel.asm	/^ffff8000001068b2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001068b6	kernel.asm	/^ffff8000001068b6:	c7 40 40 00 00 00 00 	movl   $0x0,0x40(%rax)$/;"	l
ffff8000001068bd	kernel.asm	/^ffff8000001068bd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001068c1	kernel.asm	/^ffff8000001068c1:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%rax)$/;"	l
ffff8000001068c8	kernel.asm	/^ffff8000001068c8:	48 bf c0 7a 11 00 00 	movabs $0xffff800000117ac0,%rdi$/;"	l
ffff8000001068cf	kernel.asm	/^ffff8000001068cf:	80 ff ff $/;"	l
ffff8000001068d2	kernel.asm	/^ffff8000001068d2:	48 b8 98 72 10 00 00 	movabs $0xffff800000107298,%rax$/;"	l
ffff8000001068d9	kernel.asm	/^ffff8000001068d9:	80 ff ff $/;"	l
ffff8000001068dc	kernel.asm	/^ffff8000001068dc:	ff d0                	callq  *%rax$/;"	l
ffff8000001068de	kernel.asm	/^ffff8000001068de:	8b 45 f0             	mov    -0x10(%rbp),%eax$/;"	l
ffff8000001068e1	kernel.asm	/^ffff8000001068e1:	eb 7b                	jmp    ffff80000010695e <wait+0x17d>$/;"	l
ffff8000001068e3	kernel.asm	/^ffff8000001068e3:	90                   	nop$/;"	l
ffff8000001068e4	kernel.asm	/^ffff8000001068e4:	48 81 45 f8 e0 00 00 	addq   $0xe0,-0x8(%rbp)$/;"	l
ffff8000001068eb	kernel.asm	/^ffff8000001068eb:	00 $/;"	l
ffff8000001068ec	kernel.asm	/^ffff8000001068ec:	48 b8 28 b3 11 00 00 	movabs $0xffff80000011b328,%rax$/;"	l
ffff8000001068f3	kernel.asm	/^ffff8000001068f3:	80 ff ff $/;"	l
ffff8000001068f6	kernel.asm	/^ffff8000001068f6:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)$/;"	l
ffff8000001068fa	kernel.asm	/^ffff8000001068fa:	0f 82 19 ff ff ff    	jb     ffff800000106819 <wait+0x38>$/;"	l
ffff800000106900	kernel.asm	/^ffff800000106900:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)$/;"	l
ffff800000106904	kernel.asm	/^ffff800000106904:	74 12                	je     ffff800000106918 <wait+0x137>$/;"	l
ffff800000106906	kernel.asm	/^ffff800000106906:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff80000010690d	kernel.asm	/^ffff80000010690d:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000106911	kernel.asm	/^ffff800000106911:	8b 40 40             	mov    0x40(%rax),%eax$/;"	l
ffff800000106914	kernel.asm	/^ffff800000106914:	85 c0                	test   %eax,%eax$/;"	l
ffff800000106916	kernel.asm	/^ffff800000106916:	74 1d                	je     ffff800000106935 <wait+0x154>$/;"	l
ffff800000106918	kernel.asm	/^ffff800000106918:	48 bf c0 7a 11 00 00 	movabs $0xffff800000117ac0,%rdi$/;"	l
ffff80000010691f	kernel.asm	/^ffff80000010691f:	80 ff ff $/;"	l
ffff800000106922	kernel.asm	/^ffff800000106922:	48 b8 98 72 10 00 00 	movabs $0xffff800000107298,%rax$/;"	l
ffff800000106929	kernel.asm	/^ffff800000106929:	80 ff ff $/;"	l
ffff80000010692c	kernel.asm	/^ffff80000010692c:	ff d0                	callq  *%rax$/;"	l
ffff80000010692e	kernel.asm	/^ffff80000010692e:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff800000106933	kernel.asm	/^ffff800000106933:	eb 29                	jmp    ffff80000010695e <wait+0x17d>$/;"	l
ffff800000106935	kernel.asm	/^ffff800000106935:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff80000010693c	kernel.asm	/^ffff80000010693c:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000106940	kernel.asm	/^ffff800000106940:	48 be c0 7a 11 00 00 	movabs $0xffff800000117ac0,%rsi$/;"	l
ffff800000106947	kernel.asm	/^ffff800000106947:	80 ff ff $/;"	l
ffff80000010694a	kernel.asm	/^ffff80000010694a:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010694d	kernel.asm	/^ffff80000010694d:	48 b8 23 6c 10 00 00 	movabs $0xffff800000106c23,%rax$/;"	l
ffff800000106954	kernel.asm	/^ffff800000106954:	80 ff ff $/;"	l
ffff800000106957	kernel.asm	/^ffff800000106957:	ff d0                	callq  *%rax$/;"	l
ffff800000106959	kernel.asm	/^ffff800000106959:	e9 a1 fe ff ff       	jmpq   ffff8000001067ff <wait+0x1e>$/;"	l
ffff80000010695e	kernel.asm	/^ffff80000010695e:	c9                   	leaveq $/;"	l
ffff80000010695f	kernel.asm	/^ffff80000010695f:	c3                   	retq   $/;"	l
ffff800000106960	kernel.asm	/^ffff800000106960 <scheduler>:$/;"	l
ffff800000106960	kernel.asm	/^ffff800000106960:	55                   	push   %rbp$/;"	l
ffff800000106961	kernel.asm	/^ffff800000106961:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000106964	kernel.asm	/^ffff800000106964:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff800000106968	kernel.asm	/^ffff800000106968:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)$/;"	l
ffff80000010696f	kernel.asm	/^ffff80000010696f:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)$/;"	l
ffff800000106973	kernel.asm	/^ffff800000106973:	48 b8 b9 5f 10 00 00 	movabs $0xffff800000105fb9,%rax$/;"	l
ffff80000010697a	kernel.asm	/^ffff80000010697a:	80 ff ff $/;"	l
ffff80000010697d	kernel.asm	/^ffff80000010697d:	ff d0                	callq  *%rax$/;"	l
ffff80000010697f	kernel.asm	/^ffff80000010697f:	48 bf c0 7a 11 00 00 	movabs $0xffff800000117ac0,%rdi$/;"	l
ffff800000106986	kernel.asm	/^ffff800000106986:	80 ff ff $/;"	l
ffff800000106989	kernel.asm	/^ffff800000106989:	48 b8 ff 71 10 00 00 	movabs $0xffff8000001071ff,%rax$/;"	l
ffff800000106990	kernel.asm	/^ffff800000106990:	80 ff ff $/;"	l
ffff800000106993	kernel.asm	/^ffff800000106993:	ff d0                	callq  *%rax$/;"	l
ffff800000106995	kernel.asm	/^ffff800000106995:	48 b8 28 7b 11 00 00 	movabs $0xffff800000117b28,%rax$/;"	l
ffff80000010699c	kernel.asm	/^ffff80000010699c:	80 ff ff $/;"	l
ffff80000010699f	kernel.asm	/^ffff80000010699f:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ffff8000001069a3	kernel.asm	/^ffff8000001069a3:	e9 88 00 00 00       	jmpq   ffff800000106a30 <scheduler+0xd0>$/;"	l
ffff8000001069a8	kernel.asm	/^ffff8000001069a8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff8000001069ac	kernel.asm	/^ffff8000001069ac:	8b 40 18             	mov    0x18(%rax),%eax$/;"	l
ffff8000001069af	kernel.asm	/^ffff8000001069af:	83 f8 03             	cmp    $0x3,%eax$/;"	l
ffff8000001069b2	kernel.asm	/^ffff8000001069b2:	75 73                	jne    ffff800000106a27 <scheduler+0xc7>$/;"	l
ffff8000001069b4	kernel.asm	/^ffff8000001069b4:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff8000001069bb	kernel.asm	/^ffff8000001069bb:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
ffff8000001069bf	kernel.asm	/^ffff8000001069bf:	64 48 89 10          	mov    %rdx,%fs:(%rax)$/;"	l
ffff8000001069c3	kernel.asm	/^ffff8000001069c3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff8000001069c7	kernel.asm	/^ffff8000001069c7:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001069ca	kernel.asm	/^ffff8000001069ca:	48 b8 c6 ac 10 00 00 	movabs $0xffff80000010acc6,%rax$/;"	l
ffff8000001069d1	kernel.asm	/^ffff8000001069d1:	80 ff ff $/;"	l
ffff8000001069d4	kernel.asm	/^ffff8000001069d4:	ff d0                	callq  *%rax$/;"	l
ffff8000001069d6	kernel.asm	/^ffff8000001069d6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff8000001069da	kernel.asm	/^ffff8000001069da:	c7 40 18 04 00 00 00 	movl   $0x4,0x18(%rax)$/;"	l
ffff8000001069e1	kernel.asm	/^ffff8000001069e1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff8000001069e5	kernel.asm	/^ffff8000001069e5:	48 8b 40 30          	mov    0x30(%rax),%rax$/;"	l
ffff8000001069e9	kernel.asm	/^ffff8000001069e9:	48 c7 c2 f0 ff ff ff 	mov    $0xfffffffffffffff0,%rdx$/;"	l
ffff8000001069f0	kernel.asm	/^ffff8000001069f0:	64 48 8b 12          	mov    %fs:(%rdx),%rdx$/;"	l
ffff8000001069f4	kernel.asm	/^ffff8000001069f4:	48 83 c2 08          	add    $0x8,%rdx$/;"	l
ffff8000001069f8	kernel.asm	/^ffff8000001069f8:	48 89 c6             	mov    %rax,%rsi$/;"	l
ffff8000001069fb	kernel.asm	/^ffff8000001069fb:	48 89 d7             	mov    %rdx,%rdi$/;"	l
ffff8000001069fe	kernel.asm	/^ffff8000001069fe:	48 b8 df 78 10 00 00 	movabs $0xffff8000001078df,%rax$/;"	l
ffff800000106a05	kernel.asm	/^ffff800000106a05:	80 ff ff $/;"	l
ffff800000106a08	kernel.asm	/^ffff800000106a08:	ff d0                	callq  *%rax$/;"	l
ffff800000106a0a	kernel.asm	/^ffff800000106a0a:	48 b8 94 ac 10 00 00 	movabs $0xffff80000010ac94,%rax$/;"	l
ffff800000106a11	kernel.asm	/^ffff800000106a11:	80 ff ff $/;"	l
ffff800000106a14	kernel.asm	/^ffff800000106a14:	ff d0                	callq  *%rax$/;"	l
ffff800000106a16	kernel.asm	/^ffff800000106a16:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000106a1d	kernel.asm	/^ffff800000106a1d:	64 48 c7 00 00 00 00 	movq   $0x0,%fs:(%rax)$/;"	l
ffff800000106a24	kernel.asm	/^ffff800000106a24:	00 $/;"	l
ffff800000106a25	kernel.asm	/^ffff800000106a25:	eb 01                	jmp    ffff800000106a28 <scheduler+0xc8>$/;"	l
ffff800000106a27	kernel.asm	/^ffff800000106a27:	90                   	nop$/;"	l
ffff800000106a28	kernel.asm	/^ffff800000106a28:	48 81 45 f0 e0 00 00 	addq   $0xe0,-0x10(%rbp)$/;"	l
ffff800000106a2f	kernel.asm	/^ffff800000106a2f:	00 $/;"	l
ffff800000106a30	kernel.asm	/^ffff800000106a30:	48 b8 28 b3 11 00 00 	movabs $0xffff80000011b328,%rax$/;"	l
ffff800000106a37	kernel.asm	/^ffff800000106a37:	80 ff ff $/;"	l
ffff800000106a3a	kernel.asm	/^ffff800000106a3a:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)$/;"	l
ffff800000106a3e	kernel.asm	/^ffff800000106a3e:	0f 82 64 ff ff ff    	jb     ffff8000001069a8 <scheduler+0x48>$/;"	l
ffff800000106a44	kernel.asm	/^ffff800000106a44:	48 bf c0 7a 11 00 00 	movabs $0xffff800000117ac0,%rdi$/;"	l
ffff800000106a4b	kernel.asm	/^ffff800000106a4b:	80 ff ff $/;"	l
ffff800000106a4e	kernel.asm	/^ffff800000106a4e:	48 b8 98 72 10 00 00 	movabs $0xffff800000107298,%rax$/;"	l
ffff800000106a55	kernel.asm	/^ffff800000106a55:	80 ff ff $/;"	l
ffff800000106a58	kernel.asm	/^ffff800000106a58:	ff d0                	callq  *%rax$/;"	l
ffff800000106a5a	kernel.asm	/^ffff800000106a5a:	e9 10 ff ff ff       	jmpq   ffff80000010696f <scheduler+0xf>$/;"	l
ffff800000106a5f	kernel.asm	/^ffff800000106a5f <sched>:$/;"	l
ffff800000106a5f	kernel.asm	/^ffff800000106a5f:	55                   	push   %rbp$/;"	l
ffff800000106a60	kernel.asm	/^ffff800000106a60:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000106a63	kernel.asm	/^ffff800000106a63:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff800000106a67	kernel.asm	/^ffff800000106a67:	48 bf c0 7a 11 00 00 	movabs $0xffff800000117ac0,%rdi$/;"	l
ffff800000106a6e	kernel.asm	/^ffff800000106a6e:	80 ff ff $/;"	l
ffff800000106a71	kernel.asm	/^ffff800000106a71:	48 b8 d6 73 10 00 00 	movabs $0xffff8000001073d6,%rax$/;"	l
ffff800000106a78	kernel.asm	/^ffff800000106a78:	80 ff ff $/;"	l
ffff800000106a7b	kernel.asm	/^ffff800000106a7b:	ff d0                	callq  *%rax$/;"	l
ffff800000106a7d	kernel.asm	/^ffff800000106a7d:	85 c0                	test   %eax,%eax$/;"	l
ffff800000106a7f	kernel.asm	/^ffff800000106a7f:	75 16                	jne    ffff800000106a97 <sched+0x38>$/;"	l
ffff800000106a81	kernel.asm	/^ffff800000106a81:	48 bf c1 bd 10 00 00 	movabs $0xffff80000010bdc1,%rdi$/;"	l
ffff800000106a88	kernel.asm	/^ffff800000106a88:	80 ff ff $/;"	l
ffff800000106a8b	kernel.asm	/^ffff800000106a8b:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff800000106a92	kernel.asm	/^ffff800000106a92:	80 ff ff $/;"	l
ffff800000106a95	kernel.asm	/^ffff800000106a95:	ff d0                	callq  *%rax$/;"	l
ffff800000106a97	kernel.asm	/^ffff800000106a97:	48 c7 c0 f0 ff ff ff 	mov    $0xfffffffffffffff0,%rax$/;"	l
ffff800000106a9e	kernel.asm	/^ffff800000106a9e:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000106aa2	kernel.asm	/^ffff800000106aa2:	8b 80 e4 00 00 00    	mov    0xe4(%rax),%eax$/;"	l
ffff800000106aa8	kernel.asm	/^ffff800000106aa8:	83 f8 01             	cmp    $0x1,%eax$/;"	l
ffff800000106aab	kernel.asm	/^ffff800000106aab:	74 16                	je     ffff800000106ac3 <sched+0x64>$/;"	l
ffff800000106aad	kernel.asm	/^ffff800000106aad:	48 bf d3 bd 10 00 00 	movabs $0xffff80000010bdd3,%rdi$/;"	l
ffff800000106ab4	kernel.asm	/^ffff800000106ab4:	80 ff ff $/;"	l
ffff800000106ab7	kernel.asm	/^ffff800000106ab7:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff800000106abe	kernel.asm	/^ffff800000106abe:	80 ff ff $/;"	l
ffff800000106ac1	kernel.asm	/^ffff800000106ac1:	ff d0                	callq  *%rax$/;"	l
ffff800000106ac3	kernel.asm	/^ffff800000106ac3:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000106aca	kernel.asm	/^ffff800000106aca:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000106ace	kernel.asm	/^ffff800000106ace:	8b 40 18             	mov    0x18(%rax),%eax$/;"	l
ffff800000106ad1	kernel.asm	/^ffff800000106ad1:	83 f8 04             	cmp    $0x4,%eax$/;"	l
ffff800000106ad4	kernel.asm	/^ffff800000106ad4:	75 16                	jne    ffff800000106aec <sched+0x8d>$/;"	l
ffff800000106ad6	kernel.asm	/^ffff800000106ad6:	48 bf df bd 10 00 00 	movabs $0xffff80000010bddf,%rdi$/;"	l
ffff800000106add	kernel.asm	/^ffff800000106add:	80 ff ff $/;"	l
ffff800000106ae0	kernel.asm	/^ffff800000106ae0:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff800000106ae7	kernel.asm	/^ffff800000106ae7:	80 ff ff $/;"	l
ffff800000106aea	kernel.asm	/^ffff800000106aea:	ff d0                	callq  *%rax$/;"	l
ffff800000106aec	kernel.asm	/^ffff800000106aec:	48 b8 a5 5f 10 00 00 	movabs $0xffff800000105fa5,%rax$/;"	l
ffff800000106af3	kernel.asm	/^ffff800000106af3:	80 ff ff $/;"	l
ffff800000106af6	kernel.asm	/^ffff800000106af6:	ff d0                	callq  *%rax$/;"	l
ffff800000106af8	kernel.asm	/^ffff800000106af8:	25 00 02 00 00       	and    $0x200,%eax$/;"	l
ffff800000106afd	kernel.asm	/^ffff800000106afd:	48 85 c0             	test   %rax,%rax$/;"	l
ffff800000106b00	kernel.asm	/^ffff800000106b00:	74 16                	je     ffff800000106b18 <sched+0xb9>$/;"	l
ffff800000106b02	kernel.asm	/^ffff800000106b02:	48 bf ed bd 10 00 00 	movabs $0xffff80000010bded,%rdi$/;"	l
ffff800000106b09	kernel.asm	/^ffff800000106b09:	80 ff ff $/;"	l
ffff800000106b0c	kernel.asm	/^ffff800000106b0c:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff800000106b13	kernel.asm	/^ffff800000106b13:	80 ff ff $/;"	l
ffff800000106b16	kernel.asm	/^ffff800000106b16:	ff d0                	callq  *%rax$/;"	l
ffff800000106b18	kernel.asm	/^ffff800000106b18:	48 c7 c0 f0 ff ff ff 	mov    $0xfffffffffffffff0,%rax$/;"	l
ffff800000106b1f	kernel.asm	/^ffff800000106b1f:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000106b23	kernel.asm	/^ffff800000106b23:	8b 80 e8 00 00 00    	mov    0xe8(%rax),%eax$/;"	l
ffff800000106b29	kernel.asm	/^ffff800000106b29:	89 45 fc             	mov    %eax,-0x4(%rbp)$/;"	l
ffff800000106b2c	kernel.asm	/^ffff800000106b2c:	48 c7 c0 f0 ff ff ff 	mov    $0xfffffffffffffff0,%rax$/;"	l
ffff800000106b33	kernel.asm	/^ffff800000106b33:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000106b37	kernel.asm	/^ffff800000106b37:	48 8b 40 08          	mov    0x8(%rax),%rax$/;"	l
ffff800000106b3b	kernel.asm	/^ffff800000106b3b:	48 c7 c2 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rdx$/;"	l
ffff800000106b42	kernel.asm	/^ffff800000106b42:	64 48 8b 12          	mov    %fs:(%rdx),%rdx$/;"	l
ffff800000106b46	kernel.asm	/^ffff800000106b46:	48 83 c2 30          	add    $0x30,%rdx$/;"	l
ffff800000106b4a	kernel.asm	/^ffff800000106b4a:	48 89 c6             	mov    %rax,%rsi$/;"	l
ffff800000106b4d	kernel.asm	/^ffff800000106b4d:	48 89 d7             	mov    %rdx,%rdi$/;"	l
ffff800000106b50	kernel.asm	/^ffff800000106b50:	48 b8 df 78 10 00 00 	movabs $0xffff8000001078df,%rax$/;"	l
ffff800000106b57	kernel.asm	/^ffff800000106b57:	80 ff ff $/;"	l
ffff800000106b5a	kernel.asm	/^ffff800000106b5a:	ff d0                	callq  *%rax$/;"	l
ffff800000106b5c	kernel.asm	/^ffff800000106b5c:	48 c7 c0 f0 ff ff ff 	mov    $0xfffffffffffffff0,%rax$/;"	l
ffff800000106b63	kernel.asm	/^ffff800000106b63:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000106b67	kernel.asm	/^ffff800000106b67:	8b 55 fc             	mov    -0x4(%rbp),%edx$/;"	l
ffff800000106b6a	kernel.asm	/^ffff800000106b6a:	89 90 e8 00 00 00    	mov    %edx,0xe8(%rax)$/;"	l
ffff800000106b70	kernel.asm	/^ffff800000106b70:	90                   	nop$/;"	l
ffff800000106b71	kernel.asm	/^ffff800000106b71:	c9                   	leaveq $/;"	l
ffff800000106b72	kernel.asm	/^ffff800000106b72:	c3                   	retq   $/;"	l
ffff800000106b73	kernel.asm	/^ffff800000106b73 <yield>:$/;"	l
ffff800000106b73	kernel.asm	/^ffff800000106b73:	55                   	push   %rbp$/;"	l
ffff800000106b74	kernel.asm	/^ffff800000106b74:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000106b77	kernel.asm	/^ffff800000106b77:	48 bf c0 7a 11 00 00 	movabs $0xffff800000117ac0,%rdi$/;"	l
ffff800000106b7e	kernel.asm	/^ffff800000106b7e:	80 ff ff $/;"	l
ffff800000106b81	kernel.asm	/^ffff800000106b81:	48 b8 ff 71 10 00 00 	movabs $0xffff8000001071ff,%rax$/;"	l
ffff800000106b88	kernel.asm	/^ffff800000106b88:	80 ff ff $/;"	l
ffff800000106b8b	kernel.asm	/^ffff800000106b8b:	ff d0                	callq  *%rax$/;"	l
ffff800000106b8d	kernel.asm	/^ffff800000106b8d:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000106b94	kernel.asm	/^ffff800000106b94:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000106b98	kernel.asm	/^ffff800000106b98:	c7 40 18 03 00 00 00 	movl   $0x3,0x18(%rax)$/;"	l
ffff800000106b9f	kernel.asm	/^ffff800000106b9f:	48 b8 5f 6a 10 00 00 	movabs $0xffff800000106a5f,%rax$/;"	l
ffff800000106ba6	kernel.asm	/^ffff800000106ba6:	80 ff ff $/;"	l
ffff800000106ba9	kernel.asm	/^ffff800000106ba9:	ff d0                	callq  *%rax$/;"	l
ffff800000106bab	kernel.asm	/^ffff800000106bab:	48 bf c0 7a 11 00 00 	movabs $0xffff800000117ac0,%rdi$/;"	l
ffff800000106bb2	kernel.asm	/^ffff800000106bb2:	80 ff ff $/;"	l
ffff800000106bb5	kernel.asm	/^ffff800000106bb5:	48 b8 98 72 10 00 00 	movabs $0xffff800000107298,%rax$/;"	l
ffff800000106bbc	kernel.asm	/^ffff800000106bbc:	80 ff ff $/;"	l
ffff800000106bbf	kernel.asm	/^ffff800000106bbf:	ff d0                	callq  *%rax$/;"	l
ffff800000106bc1	kernel.asm	/^ffff800000106bc1:	90                   	nop$/;"	l
ffff800000106bc2	kernel.asm	/^ffff800000106bc2:	5d                   	pop    %rbp$/;"	l
ffff800000106bc3	kernel.asm	/^ffff800000106bc3:	c3                   	retq   $/;"	l
ffff800000106bc4	kernel.asm	/^ffff800000106bc4 <forkret>:$/;"	l
ffff800000106bc4	kernel.asm	/^ffff800000106bc4:	55                   	push   %rbp$/;"	l
ffff800000106bc5	kernel.asm	/^ffff800000106bc5:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000106bc8	kernel.asm	/^ffff800000106bc8:	48 bf c0 7a 11 00 00 	movabs $0xffff800000117ac0,%rdi$/;"	l
ffff800000106bcf	kernel.asm	/^ffff800000106bcf:	80 ff ff $/;"	l
ffff800000106bd2	kernel.asm	/^ffff800000106bd2:	48 b8 98 72 10 00 00 	movabs $0xffff800000107298,%rax$/;"	l
ffff800000106bd9	kernel.asm	/^ffff800000106bd9:	80 ff ff $/;"	l
ffff800000106bdc	kernel.asm	/^ffff800000106bdc:	ff d0                	callq  *%rax$/;"	l
ffff800000106bde	kernel.asm	/^ffff800000106bde:	48 b8 44 d5 10 00 00 	movabs $0xffff80000010d544,%rax$/;"	l
ffff800000106be5	kernel.asm	/^ffff800000106be5:	80 ff ff $/;"	l
ffff800000106be8	kernel.asm	/^ffff800000106be8:	8b 00                	mov    (%rax),%eax$/;"	l
ffff800000106bea	kernel.asm	/^ffff800000106bea:	85 c0                	test   %eax,%eax$/;"	l
ffff800000106bec	kernel.asm	/^ffff800000106bec:	74 32                	je     ffff800000106c20 <forkret+0x5c>$/;"	l
ffff800000106bee	kernel.asm	/^ffff800000106bee:	48 b8 44 d5 10 00 00 	movabs $0xffff80000010d544,%rax$/;"	l
ffff800000106bf5	kernel.asm	/^ffff800000106bf5:	80 ff ff $/;"	l
ffff800000106bf8	kernel.asm	/^ffff800000106bf8:	c7 00 00 00 00 00    	movl   $0x0,(%rax)$/;"	l
ffff800000106bfe	kernel.asm	/^ffff800000106bfe:	bf 01 00 00 00       	mov    $0x1,%edi$/;"	l
ffff800000106c03	kernel.asm	/^ffff800000106c03:	48 b8 64 23 10 00 00 	movabs $0xffff800000102364,%rax$/;"	l
ffff800000106c0a	kernel.asm	/^ffff800000106c0a:	80 ff ff $/;"	l
ffff800000106c0d	kernel.asm	/^ffff800000106c0d:	ff d0                	callq  *%rax$/;"	l
ffff800000106c0f	kernel.asm	/^ffff800000106c0f:	bf 01 00 00 00       	mov    $0x1,%edi$/;"	l
ffff800000106c14	kernel.asm	/^ffff800000106c14:	48 b8 58 4a 10 00 00 	movabs $0xffff800000104a58,%rax$/;"	l
ffff800000106c1b	kernel.asm	/^ffff800000106c1b:	80 ff ff $/;"	l
ffff800000106c1e	kernel.asm	/^ffff800000106c1e:	ff d0                	callq  *%rax$/;"	l
ffff800000106c20	kernel.asm	/^ffff800000106c20:	90                   	nop$/;"	l
ffff800000106c21	kernel.asm	/^ffff800000106c21:	5d                   	pop    %rbp$/;"	l
ffff800000106c22	kernel.asm	/^ffff800000106c22:	c3                   	retq   $/;"	l
ffff800000106c23	kernel.asm	/^ffff800000106c23 <sleep>:$/;"	l
ffff800000106c23	kernel.asm	/^ffff800000106c23:	55                   	push   %rbp$/;"	l
ffff800000106c24	kernel.asm	/^ffff800000106c24:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000106c27	kernel.asm	/^ffff800000106c27:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff800000106c2b	kernel.asm	/^ffff800000106c2b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)$/;"	l
ffff800000106c2f	kernel.asm	/^ffff800000106c2f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)$/;"	l
ffff800000106c33	kernel.asm	/^ffff800000106c33:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000106c3a	kernel.asm	/^ffff800000106c3a:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000106c3e	kernel.asm	/^ffff800000106c3e:	48 85 c0             	test   %rax,%rax$/;"	l
ffff800000106c41	kernel.asm	/^ffff800000106c41:	75 16                	jne    ffff800000106c59 <sleep+0x36>$/;"	l
ffff800000106c43	kernel.asm	/^ffff800000106c43:	48 bf 01 be 10 00 00 	movabs $0xffff80000010be01,%rdi$/;"	l
ffff800000106c4a	kernel.asm	/^ffff800000106c4a:	80 ff ff $/;"	l
ffff800000106c4d	kernel.asm	/^ffff800000106c4d:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff800000106c54	kernel.asm	/^ffff800000106c54:	80 ff ff $/;"	l
ffff800000106c57	kernel.asm	/^ffff800000106c57:	ff d0                	callq  *%rax$/;"	l
ffff800000106c59	kernel.asm	/^ffff800000106c59:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)$/;"	l
ffff800000106c5e	kernel.asm	/^ffff800000106c5e:	75 16                	jne    ffff800000106c76 <sleep+0x53>$/;"	l
ffff800000106c60	kernel.asm	/^ffff800000106c60:	48 bf 07 be 10 00 00 	movabs $0xffff80000010be07,%rdi$/;"	l
ffff800000106c67	kernel.asm	/^ffff800000106c67:	80 ff ff $/;"	l
ffff800000106c6a	kernel.asm	/^ffff800000106c6a:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff800000106c71	kernel.asm	/^ffff800000106c71:	80 ff ff $/;"	l
ffff800000106c74	kernel.asm	/^ffff800000106c74:	ff d0                	callq  *%rax$/;"	l
ffff800000106c76	kernel.asm	/^ffff800000106c76:	48 b8 c0 7a 11 00 00 	movabs $0xffff800000117ac0,%rax$/;"	l
ffff800000106c7d	kernel.asm	/^ffff800000106c7d:	80 ff ff $/;"	l
ffff800000106c80	kernel.asm	/^ffff800000106c80:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)$/;"	l
ffff800000106c84	kernel.asm	/^ffff800000106c84:	74 29                	je     ffff800000106caf <sleep+0x8c>$/;"	l
ffff800000106c86	kernel.asm	/^ffff800000106c86:	48 bf c0 7a 11 00 00 	movabs $0xffff800000117ac0,%rdi$/;"	l
ffff800000106c8d	kernel.asm	/^ffff800000106c8d:	80 ff ff $/;"	l
ffff800000106c90	kernel.asm	/^ffff800000106c90:	48 b8 ff 71 10 00 00 	movabs $0xffff8000001071ff,%rax$/;"	l
ffff800000106c97	kernel.asm	/^ffff800000106c97:	80 ff ff $/;"	l
ffff800000106c9a	kernel.asm	/^ffff800000106c9a:	ff d0                	callq  *%rax$/;"	l
ffff800000106c9c	kernel.asm	/^ffff800000106c9c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000106ca0	kernel.asm	/^ffff800000106ca0:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000106ca3	kernel.asm	/^ffff800000106ca3:	48 b8 98 72 10 00 00 	movabs $0xffff800000107298,%rax$/;"	l
ffff800000106caa	kernel.asm	/^ffff800000106caa:	80 ff ff $/;"	l
ffff800000106cad	kernel.asm	/^ffff800000106cad:	ff d0                	callq  *%rax$/;"	l
ffff800000106caf	kernel.asm	/^ffff800000106caf:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000106cb6	kernel.asm	/^ffff800000106cb6:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000106cba	kernel.asm	/^ffff800000106cba:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx$/;"	l
ffff800000106cbe	kernel.asm	/^ffff800000106cbe:	48 89 50 38          	mov    %rdx,0x38(%rax)$/;"	l
ffff800000106cc2	kernel.asm	/^ffff800000106cc2:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000106cc9	kernel.asm	/^ffff800000106cc9:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000106ccd	kernel.asm	/^ffff800000106ccd:	c7 40 18 02 00 00 00 	movl   $0x2,0x18(%rax)$/;"	l
ffff800000106cd4	kernel.asm	/^ffff800000106cd4:	48 b8 5f 6a 10 00 00 	movabs $0xffff800000106a5f,%rax$/;"	l
ffff800000106cdb	kernel.asm	/^ffff800000106cdb:	80 ff ff $/;"	l
ffff800000106cde	kernel.asm	/^ffff800000106cde:	ff d0                	callq  *%rax$/;"	l
ffff800000106ce0	kernel.asm	/^ffff800000106ce0:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000106ce7	kernel.asm	/^ffff800000106ce7:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000106ceb	kernel.asm	/^ffff800000106ceb:	48 c7 40 38 00 00 00 	movq   $0x0,0x38(%rax)$/;"	l
ffff800000106cf2	kernel.asm	/^ffff800000106cf2:	00 $/;"	l
ffff800000106cf3	kernel.asm	/^ffff800000106cf3:	48 b8 c0 7a 11 00 00 	movabs $0xffff800000117ac0,%rax$/;"	l
ffff800000106cfa	kernel.asm	/^ffff800000106cfa:	80 ff ff $/;"	l
ffff800000106cfd	kernel.asm	/^ffff800000106cfd:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)$/;"	l
ffff800000106d01	kernel.asm	/^ffff800000106d01:	74 29                	je     ffff800000106d2c <sleep+0x109>$/;"	l
ffff800000106d03	kernel.asm	/^ffff800000106d03:	48 bf c0 7a 11 00 00 	movabs $0xffff800000117ac0,%rdi$/;"	l
ffff800000106d0a	kernel.asm	/^ffff800000106d0a:	80 ff ff $/;"	l
ffff800000106d0d	kernel.asm	/^ffff800000106d0d:	48 b8 98 72 10 00 00 	movabs $0xffff800000107298,%rax$/;"	l
ffff800000106d14	kernel.asm	/^ffff800000106d14:	80 ff ff $/;"	l
ffff800000106d17	kernel.asm	/^ffff800000106d17:	ff d0                	callq  *%rax$/;"	l
ffff800000106d19	kernel.asm	/^ffff800000106d19:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000106d1d	kernel.asm	/^ffff800000106d1d:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000106d20	kernel.asm	/^ffff800000106d20:	48 b8 ff 71 10 00 00 	movabs $0xffff8000001071ff,%rax$/;"	l
ffff800000106d27	kernel.asm	/^ffff800000106d27:	80 ff ff $/;"	l
ffff800000106d2a	kernel.asm	/^ffff800000106d2a:	ff d0                	callq  *%rax$/;"	l
ffff800000106d2c	kernel.asm	/^ffff800000106d2c:	90                   	nop$/;"	l
ffff800000106d2d	kernel.asm	/^ffff800000106d2d:	c9                   	leaveq $/;"	l
ffff800000106d2e	kernel.asm	/^ffff800000106d2e:	c3                   	retq   $/;"	l
ffff800000106d2f	kernel.asm	/^ffff800000106d2f <wakeup1>:$/;"	l
ffff800000106d2f	kernel.asm	/^ffff800000106d2f:	55                   	push   %rbp$/;"	l
ffff800000106d30	kernel.asm	/^ffff800000106d30:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000106d33	kernel.asm	/^ffff800000106d33:	48 83 ec 18          	sub    $0x18,%rsp$/;"	l
ffff800000106d37	kernel.asm	/^ffff800000106d37:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
ffff800000106d3b	kernel.asm	/^ffff800000106d3b:	48 b8 28 7b 11 00 00 	movabs $0xffff800000117b28,%rax$/;"	l
ffff800000106d42	kernel.asm	/^ffff800000106d42:	80 ff ff $/;"	l
ffff800000106d45	kernel.asm	/^ffff800000106d45:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff800000106d49	kernel.asm	/^ffff800000106d49:	eb 2d                	jmp    ffff800000106d78 <wakeup1+0x49>$/;"	l
ffff800000106d4b	kernel.asm	/^ffff800000106d4b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000106d4f	kernel.asm	/^ffff800000106d4f:	8b 40 18             	mov    0x18(%rax),%eax$/;"	l
ffff800000106d52	kernel.asm	/^ffff800000106d52:	83 f8 02             	cmp    $0x2,%eax$/;"	l
ffff800000106d55	kernel.asm	/^ffff800000106d55:	75 19                	jne    ffff800000106d70 <wakeup1+0x41>$/;"	l
ffff800000106d57	kernel.asm	/^ffff800000106d57:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000106d5b	kernel.asm	/^ffff800000106d5b:	48 8b 40 38          	mov    0x38(%rax),%rax$/;"	l
ffff800000106d5f	kernel.asm	/^ffff800000106d5f:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax$/;"	l
ffff800000106d63	kernel.asm	/^ffff800000106d63:	75 0b                	jne    ffff800000106d70 <wakeup1+0x41>$/;"	l
ffff800000106d65	kernel.asm	/^ffff800000106d65:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000106d69	kernel.asm	/^ffff800000106d69:	c7 40 18 03 00 00 00 	movl   $0x3,0x18(%rax)$/;"	l
ffff800000106d70	kernel.asm	/^ffff800000106d70:	48 81 45 f8 e0 00 00 	addq   $0xe0,-0x8(%rbp)$/;"	l
ffff800000106d77	kernel.asm	/^ffff800000106d77:	00 $/;"	l
ffff800000106d78	kernel.asm	/^ffff800000106d78:	48 b8 28 b3 11 00 00 	movabs $0xffff80000011b328,%rax$/;"	l
ffff800000106d7f	kernel.asm	/^ffff800000106d7f:	80 ff ff $/;"	l
ffff800000106d82	kernel.asm	/^ffff800000106d82:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)$/;"	l
ffff800000106d86	kernel.asm	/^ffff800000106d86:	72 c3                	jb     ffff800000106d4b <wakeup1+0x1c>$/;"	l
ffff800000106d88	kernel.asm	/^ffff800000106d88:	90                   	nop$/;"	l
ffff800000106d89	kernel.asm	/^ffff800000106d89:	c9                   	leaveq $/;"	l
ffff800000106d8a	kernel.asm	/^ffff800000106d8a:	c3                   	retq   $/;"	l
ffff800000106d8b	kernel.asm	/^ffff800000106d8b <wakeup>:$/;"	l
ffff800000106d8b	kernel.asm	/^ffff800000106d8b:	55                   	push   %rbp$/;"	l
ffff800000106d8c	kernel.asm	/^ffff800000106d8c:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000106d8f	kernel.asm	/^ffff800000106d8f:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff800000106d93	kernel.asm	/^ffff800000106d93:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)$/;"	l
ffff800000106d97	kernel.asm	/^ffff800000106d97:	48 bf c0 7a 11 00 00 	movabs $0xffff800000117ac0,%rdi$/;"	l
ffff800000106d9e	kernel.asm	/^ffff800000106d9e:	80 ff ff $/;"	l
ffff800000106da1	kernel.asm	/^ffff800000106da1:	48 b8 ff 71 10 00 00 	movabs $0xffff8000001071ff,%rax$/;"	l
ffff800000106da8	kernel.asm	/^ffff800000106da8:	80 ff ff $/;"	l
ffff800000106dab	kernel.asm	/^ffff800000106dab:	ff d0                	callq  *%rax$/;"	l
ffff800000106dad	kernel.asm	/^ffff800000106dad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000106db1	kernel.asm	/^ffff800000106db1:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000106db4	kernel.asm	/^ffff800000106db4:	48 b8 2f 6d 10 00 00 	movabs $0xffff800000106d2f,%rax$/;"	l
ffff800000106dbb	kernel.asm	/^ffff800000106dbb:	80 ff ff $/;"	l
ffff800000106dbe	kernel.asm	/^ffff800000106dbe:	ff d0                	callq  *%rax$/;"	l
ffff800000106dc0	kernel.asm	/^ffff800000106dc0:	48 bf c0 7a 11 00 00 	movabs $0xffff800000117ac0,%rdi$/;"	l
ffff800000106dc7	kernel.asm	/^ffff800000106dc7:	80 ff ff $/;"	l
ffff800000106dca	kernel.asm	/^ffff800000106dca:	48 b8 98 72 10 00 00 	movabs $0xffff800000107298,%rax$/;"	l
ffff800000106dd1	kernel.asm	/^ffff800000106dd1:	80 ff ff $/;"	l
ffff800000106dd4	kernel.asm	/^ffff800000106dd4:	ff d0                	callq  *%rax$/;"	l
ffff800000106dd6	kernel.asm	/^ffff800000106dd6:	90                   	nop$/;"	l
ffff800000106dd7	kernel.asm	/^ffff800000106dd7:	c9                   	leaveq $/;"	l
ffff800000106dd8	kernel.asm	/^ffff800000106dd8:	c3                   	retq   $/;"	l
ffff800000106dd9	kernel.asm	/^ffff800000106dd9 <kill>:$/;"	l
ffff800000106dd9	kernel.asm	/^ffff800000106dd9:	55                   	push   %rbp$/;"	l
ffff800000106dda	kernel.asm	/^ffff800000106dda:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000106ddd	kernel.asm	/^ffff800000106ddd:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ffff800000106de1	kernel.asm	/^ffff800000106de1:	89 7d ec             	mov    %edi,-0x14(%rbp)$/;"	l
ffff800000106de4	kernel.asm	/^ffff800000106de4:	48 bf c0 7a 11 00 00 	movabs $0xffff800000117ac0,%rdi$/;"	l
ffff800000106deb	kernel.asm	/^ffff800000106deb:	80 ff ff $/;"	l
ffff800000106dee	kernel.asm	/^ffff800000106dee:	48 b8 ff 71 10 00 00 	movabs $0xffff8000001071ff,%rax$/;"	l
ffff800000106df5	kernel.asm	/^ffff800000106df5:	80 ff ff $/;"	l
ffff800000106df8	kernel.asm	/^ffff800000106df8:	ff d0                	callq  *%rax$/;"	l
ffff800000106dfa	kernel.asm	/^ffff800000106dfa:	48 b8 28 7b 11 00 00 	movabs $0xffff800000117b28,%rax$/;"	l
ffff800000106e01	kernel.asm	/^ffff800000106e01:	80 ff ff $/;"	l
ffff800000106e04	kernel.asm	/^ffff800000106e04:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff800000106e08	kernel.asm	/^ffff800000106e08:	eb 53                	jmp    ffff800000106e5d <kill+0x84>$/;"	l
ffff800000106e0a	kernel.asm	/^ffff800000106e0a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000106e0e	kernel.asm	/^ffff800000106e0e:	8b 40 1c             	mov    0x1c(%rax),%eax$/;"	l
ffff800000106e11	kernel.asm	/^ffff800000106e11:	3b 45 ec             	cmp    -0x14(%rbp),%eax$/;"	l
ffff800000106e14	kernel.asm	/^ffff800000106e14:	75 3f                	jne    ffff800000106e55 <kill+0x7c>$/;"	l
ffff800000106e16	kernel.asm	/^ffff800000106e16:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000106e1a	kernel.asm	/^ffff800000106e1a:	c7 40 40 01 00 00 00 	movl   $0x1,0x40(%rax)$/;"	l
ffff800000106e21	kernel.asm	/^ffff800000106e21:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000106e25	kernel.asm	/^ffff800000106e25:	8b 40 18             	mov    0x18(%rax),%eax$/;"	l
ffff800000106e28	kernel.asm	/^ffff800000106e28:	83 f8 02             	cmp    $0x2,%eax$/;"	l
ffff800000106e2b	kernel.asm	/^ffff800000106e2b:	75 0b                	jne    ffff800000106e38 <kill+0x5f>$/;"	l
ffff800000106e2d	kernel.asm	/^ffff800000106e2d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000106e31	kernel.asm	/^ffff800000106e31:	c7 40 18 03 00 00 00 	movl   $0x3,0x18(%rax)$/;"	l
ffff800000106e38	kernel.asm	/^ffff800000106e38:	48 bf c0 7a 11 00 00 	movabs $0xffff800000117ac0,%rdi$/;"	l
ffff800000106e3f	kernel.asm	/^ffff800000106e3f:	80 ff ff $/;"	l
ffff800000106e42	kernel.asm	/^ffff800000106e42:	48 b8 98 72 10 00 00 	movabs $0xffff800000107298,%rax$/;"	l
ffff800000106e49	kernel.asm	/^ffff800000106e49:	80 ff ff $/;"	l
ffff800000106e4c	kernel.asm	/^ffff800000106e4c:	ff d0                	callq  *%rax$/;"	l
ffff800000106e4e	kernel.asm	/^ffff800000106e4e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000106e53	kernel.asm	/^ffff800000106e53:	eb 33                	jmp    ffff800000106e88 <kill+0xaf>$/;"	l
ffff800000106e55	kernel.asm	/^ffff800000106e55:	48 81 45 f8 e0 00 00 	addq   $0xe0,-0x8(%rbp)$/;"	l
ffff800000106e5c	kernel.asm	/^ffff800000106e5c:	00 $/;"	l
ffff800000106e5d	kernel.asm	/^ffff800000106e5d:	48 b8 28 b3 11 00 00 	movabs $0xffff80000011b328,%rax$/;"	l
ffff800000106e64	kernel.asm	/^ffff800000106e64:	80 ff ff $/;"	l
ffff800000106e67	kernel.asm	/^ffff800000106e67:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)$/;"	l
ffff800000106e6b	kernel.asm	/^ffff800000106e6b:	72 9d                	jb     ffff800000106e0a <kill+0x31>$/;"	l
ffff800000106e6d	kernel.asm	/^ffff800000106e6d:	48 bf c0 7a 11 00 00 	movabs $0xffff800000117ac0,%rdi$/;"	l
ffff800000106e74	kernel.asm	/^ffff800000106e74:	80 ff ff $/;"	l
ffff800000106e77	kernel.asm	/^ffff800000106e77:	48 b8 98 72 10 00 00 	movabs $0xffff800000107298,%rax$/;"	l
ffff800000106e7e	kernel.asm	/^ffff800000106e7e:	80 ff ff $/;"	l
ffff800000106e81	kernel.asm	/^ffff800000106e81:	ff d0                	callq  *%rax$/;"	l
ffff800000106e83	kernel.asm	/^ffff800000106e83:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff800000106e88	kernel.asm	/^ffff800000106e88:	c9                   	leaveq $/;"	l
ffff800000106e89	kernel.asm	/^ffff800000106e89:	c3                   	retq   $/;"	l
ffff800000106e8a	kernel.asm	/^ffff800000106e8a <procdump>:$/;"	l
ffff800000106e8a	kernel.asm	/^ffff800000106e8a:	55                   	push   %rbp$/;"	l
ffff800000106e8b	kernel.asm	/^ffff800000106e8b:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000106e8e	kernel.asm	/^ffff800000106e8e:	48 83 ec 70          	sub    $0x70,%rsp$/;"	l
ffff800000106e92	kernel.asm	/^ffff800000106e92:	48 b8 28 7b 11 00 00 	movabs $0xffff800000117b28,%rax$/;"	l
ffff800000106e99	kernel.asm	/^ffff800000106e99:	80 ff ff $/;"	l
ffff800000106e9c	kernel.asm	/^ffff800000106e9c:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ffff800000106ea0	kernel.asm	/^ffff800000106ea0:	e9 3b 01 00 00       	jmpq   ffff800000106fe0 <procdump+0x156>$/;"	l
ffff800000106ea5	kernel.asm	/^ffff800000106ea5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000106ea9	kernel.asm	/^ffff800000106ea9:	8b 40 18             	mov    0x18(%rax),%eax$/;"	l
ffff800000106eac	kernel.asm	/^ffff800000106eac:	85 c0                	test   %eax,%eax$/;"	l
ffff800000106eae	kernel.asm	/^ffff800000106eae:	0f 84 23 01 00 00    	je     ffff800000106fd7 <procdump+0x14d>$/;"	l
ffff800000106eb4	kernel.asm	/^ffff800000106eb4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000106eb8	kernel.asm	/^ffff800000106eb8:	8b 40 18             	mov    0x18(%rax),%eax$/;"	l
ffff800000106ebb	kernel.asm	/^ffff800000106ebb:	83 f8 05             	cmp    $0x5,%eax$/;"	l
ffff800000106ebe	kernel.asm	/^ffff800000106ebe:	77 39                	ja     ffff800000106ef9 <procdump+0x6f>$/;"	l
ffff800000106ec0	kernel.asm	/^ffff800000106ec0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000106ec4	kernel.asm	/^ffff800000106ec4:	8b 50 18             	mov    0x18(%rax),%edx$/;"	l
ffff800000106ec7	kernel.asm	/^ffff800000106ec7:	48 b8 60 d5 10 00 00 	movabs $0xffff80000010d560,%rax$/;"	l
ffff800000106ece	kernel.asm	/^ffff800000106ece:	80 ff ff $/;"	l
ffff800000106ed1	kernel.asm	/^ffff800000106ed1:	89 d2                	mov    %edx,%edx$/;"	l
ffff800000106ed3	kernel.asm	/^ffff800000106ed3:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax$/;"	l
ffff800000106ed7	kernel.asm	/^ffff800000106ed7:	48 85 c0             	test   %rax,%rax$/;"	l
ffff800000106eda	kernel.asm	/^ffff800000106eda:	74 1d                	je     ffff800000106ef9 <procdump+0x6f>$/;"	l
ffff800000106edc	kernel.asm	/^ffff800000106edc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000106ee0	kernel.asm	/^ffff800000106ee0:	8b 50 18             	mov    0x18(%rax),%edx$/;"	l
ffff800000106ee3	kernel.asm	/^ffff800000106ee3:	48 b8 60 d5 10 00 00 	movabs $0xffff80000010d560,%rax$/;"	l
ffff800000106eea	kernel.asm	/^ffff800000106eea:	80 ff ff $/;"	l
ffff800000106eed	kernel.asm	/^ffff800000106eed:	89 d2                	mov    %edx,%edx$/;"	l
ffff800000106eef	kernel.asm	/^ffff800000106eef:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax$/;"	l
ffff800000106ef3	kernel.asm	/^ffff800000106ef3:	48 89 45 e8          	mov    %rax,-0x18(%rbp)$/;"	l
ffff800000106ef7	kernel.asm	/^ffff800000106ef7:	eb 0e                	jmp    ffff800000106f07 <procdump+0x7d>$/;"	l
ffff800000106ef9	kernel.asm	/^ffff800000106ef9:	48 b8 18 be 10 00 00 	movabs $0xffff80000010be18,%rax$/;"	l
ffff800000106f00	kernel.asm	/^ffff800000106f00:	80 ff ff $/;"	l
ffff800000106f03	kernel.asm	/^ffff800000106f03:	48 89 45 e8          	mov    %rax,-0x18(%rbp)$/;"	l
ffff800000106f07	kernel.asm	/^ffff800000106f07:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000106f0b	kernel.asm	/^ffff800000106f0b:	48 8d 88 d0 00 00 00 	lea    0xd0(%rax),%rcx$/;"	l
ffff800000106f12	kernel.asm	/^ffff800000106f12:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000106f16	kernel.asm	/^ffff800000106f16:	8b 40 1c             	mov    0x1c(%rax),%eax$/;"	l
ffff800000106f19	kernel.asm	/^ffff800000106f19:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx$/;"	l
ffff800000106f1d	kernel.asm	/^ffff800000106f1d:	89 c6                	mov    %eax,%esi$/;"	l
ffff800000106f1f	kernel.asm	/^ffff800000106f1f:	48 bf 1c be 10 00 00 	movabs $0xffff80000010be1c,%rdi$/;"	l
ffff800000106f26	kernel.asm	/^ffff800000106f26:	80 ff ff $/;"	l
ffff800000106f29	kernel.asm	/^ffff800000106f29:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000106f2e	kernel.asm	/^ffff800000106f2e:	49 b8 ac 07 10 00 00 	movabs $0xffff8000001007ac,%r8$/;"	l
ffff800000106f35	kernel.asm	/^ffff800000106f35:	80 ff ff $/;"	l
ffff800000106f38	kernel.asm	/^ffff800000106f38:	41 ff d0             	callq  *%r8$/;"	l
ffff800000106f3b	kernel.asm	/^ffff800000106f3b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000106f3f	kernel.asm	/^ffff800000106f3f:	8b 40 18             	mov    0x18(%rax),%eax$/;"	l
ffff800000106f42	kernel.asm	/^ffff800000106f42:	83 f8 02             	cmp    $0x2,%eax$/;"	l
ffff800000106f45	kernel.asm	/^ffff800000106f45:	75 73                	jne    ffff800000106fba <procdump+0x130>$/;"	l
ffff800000106f47	kernel.asm	/^ffff800000106f47:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000106f4b	kernel.asm	/^ffff800000106f4b:	48 8b 40 30          	mov    0x30(%rax),%rax$/;"	l
ffff800000106f4f	kernel.asm	/^ffff800000106f4f:	48 8b 40 30          	mov    0x30(%rax),%rax$/;"	l
ffff800000106f53	kernel.asm	/^ffff800000106f53:	48 83 c0 10          	add    $0x10,%rax$/;"	l
ffff800000106f57	kernel.asm	/^ffff800000106f57:	48 89 c2             	mov    %rax,%rdx$/;"	l
ffff800000106f5a	kernel.asm	/^ffff800000106f5a:	48 8d 45 90          	lea    -0x70(%rbp),%rax$/;"	l
ffff800000106f5e	kernel.asm	/^ffff800000106f5e:	48 89 c6             	mov    %rax,%rsi$/;"	l
ffff800000106f61	kernel.asm	/^ffff800000106f61:	48 89 d7             	mov    %rdx,%rdi$/;"	l
ffff800000106f64	kernel.asm	/^ffff800000106f64:	48 b8 3d 73 10 00 00 	movabs $0xffff80000010733d,%rax$/;"	l
ffff800000106f6b	kernel.asm	/^ffff800000106f6b:	80 ff ff $/;"	l
ffff800000106f6e	kernel.asm	/^ffff800000106f6e:	ff d0                	callq  *%rax$/;"	l
ffff800000106f70	kernel.asm	/^ffff800000106f70:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)$/;"	l
ffff800000106f77	kernel.asm	/^ffff800000106f77:	eb 2c                	jmp    ffff800000106fa5 <procdump+0x11b>$/;"	l
ffff800000106f79	kernel.asm	/^ffff800000106f79:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff800000106f7c	kernel.asm	/^ffff800000106f7c:	48 98                	cltq   $/;"	l
ffff800000106f7e	kernel.asm	/^ffff800000106f7e:	48 8b 44 c5 90       	mov    -0x70(%rbp,%rax,8),%rax$/;"	l
ffff800000106f83	kernel.asm	/^ffff800000106f83:	48 89 c6             	mov    %rax,%rsi$/;"	l
ffff800000106f86	kernel.asm	/^ffff800000106f86:	48 bf 25 be 10 00 00 	movabs $0xffff80000010be25,%rdi$/;"	l
ffff800000106f8d	kernel.asm	/^ffff800000106f8d:	80 ff ff $/;"	l
ffff800000106f90	kernel.asm	/^ffff800000106f90:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000106f95	kernel.asm	/^ffff800000106f95:	48 ba ac 07 10 00 00 	movabs $0xffff8000001007ac,%rdx$/;"	l
ffff800000106f9c	kernel.asm	/^ffff800000106f9c:	80 ff ff $/;"	l
ffff800000106f9f	kernel.asm	/^ffff800000106f9f:	ff d2                	callq  *%rdx$/;"	l
ffff800000106fa1	kernel.asm	/^ffff800000106fa1:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)$/;"	l
ffff800000106fa5	kernel.asm	/^ffff800000106fa5:	83 7d fc 09          	cmpl   $0x9,-0x4(%rbp)$/;"	l
ffff800000106fa9	kernel.asm	/^ffff800000106fa9:	7f 0f                	jg     ffff800000106fba <procdump+0x130>$/;"	l
ffff800000106fab	kernel.asm	/^ffff800000106fab:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff800000106fae	kernel.asm	/^ffff800000106fae:	48 98                	cltq   $/;"	l
ffff800000106fb0	kernel.asm	/^ffff800000106fb0:	48 8b 44 c5 90       	mov    -0x70(%rbp,%rax,8),%rax$/;"	l
ffff800000106fb5	kernel.asm	/^ffff800000106fb5:	48 85 c0             	test   %rax,%rax$/;"	l
ffff800000106fb8	kernel.asm	/^ffff800000106fb8:	75 bf                	jne    ffff800000106f79 <procdump+0xef>$/;"	l
ffff800000106fba	kernel.asm	/^ffff800000106fba:	48 bf 29 be 10 00 00 	movabs $0xffff80000010be29,%rdi$/;"	l
ffff800000106fc1	kernel.asm	/^ffff800000106fc1:	80 ff ff $/;"	l
ffff800000106fc4	kernel.asm	/^ffff800000106fc4:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000106fc9	kernel.asm	/^ffff800000106fc9:	48 ba ac 07 10 00 00 	movabs $0xffff8000001007ac,%rdx$/;"	l
ffff800000106fd0	kernel.asm	/^ffff800000106fd0:	80 ff ff $/;"	l
ffff800000106fd3	kernel.asm	/^ffff800000106fd3:	ff d2                	callq  *%rdx$/;"	l
ffff800000106fd5	kernel.asm	/^ffff800000106fd5:	eb 01                	jmp    ffff800000106fd8 <procdump+0x14e>$/;"	l
ffff800000106fd7	kernel.asm	/^ffff800000106fd7:	90                   	nop$/;"	l
ffff800000106fd8	kernel.asm	/^ffff800000106fd8:	48 81 45 f0 e0 00 00 	addq   $0xe0,-0x10(%rbp)$/;"	l
ffff800000106fdf	kernel.asm	/^ffff800000106fdf:	00 $/;"	l
ffff800000106fe0	kernel.asm	/^ffff800000106fe0:	48 b8 28 b3 11 00 00 	movabs $0xffff80000011b328,%rax$/;"	l
ffff800000106fe7	kernel.asm	/^ffff800000106fe7:	80 ff ff $/;"	l
ffff800000106fea	kernel.asm	/^ffff800000106fea:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)$/;"	l
ffff800000106fee	kernel.asm	/^ffff800000106fee:	0f 82 b1 fe ff ff    	jb     ffff800000106ea5 <procdump+0x1b>$/;"	l
ffff800000106ff4	kernel.asm	/^ffff800000106ff4:	90                   	nop$/;"	l
ffff800000106ff5	kernel.asm	/^ffff800000106ff5:	c9                   	leaveq $/;"	l
ffff800000106ff6	kernel.asm	/^ffff800000106ff6:	c3                   	retq   $/;"	l
ffff800000106ff7	kernel.asm	/^ffff800000106ff7 <initsleeplock>:$/;"	l
ffff800000106ff7	kernel.asm	/^ffff800000106ff7:	55                   	push   %rbp$/;"	l
ffff800000106ff8	kernel.asm	/^ffff800000106ff8:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000106ffb	kernel.asm	/^ffff800000106ffb:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff800000106fff	kernel.asm	/^ffff800000106fff:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)$/;"	l
ffff800000107003	kernel.asm	/^ffff800000107003:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)$/;"	l
ffff800000107007	kernel.asm	/^ffff800000107007:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010700b	kernel.asm	/^ffff80000010700b:	48 83 c0 08          	add    $0x8,%rax$/;"	l
ffff80000010700f	kernel.asm	/^ffff80000010700f:	48 be 55 be 10 00 00 	movabs $0xffff80000010be55,%rsi$/;"	l
ffff800000107016	kernel.asm	/^ffff800000107016:	80 ff ff $/;"	l
ffff800000107019	kernel.asm	/^ffff800000107019:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010701c	kernel.asm	/^ffff80000010701c:	48 b8 ca 71 10 00 00 	movabs $0xffff8000001071ca,%rax$/;"	l
ffff800000107023	kernel.asm	/^ffff800000107023:	80 ff ff $/;"	l
ffff800000107026	kernel.asm	/^ffff800000107026:	ff d0                	callq  *%rax$/;"	l
ffff800000107028	kernel.asm	/^ffff800000107028:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010702c	kernel.asm	/^ffff80000010702c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
ffff800000107030	kernel.asm	/^ffff800000107030:	48 89 50 70          	mov    %rdx,0x70(%rax)$/;"	l
ffff800000107034	kernel.asm	/^ffff800000107034:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000107038	kernel.asm	/^ffff800000107038:	c7 00 00 00 00 00    	movl   $0x0,(%rax)$/;"	l
ffff80000010703e	kernel.asm	/^ffff80000010703e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000107042	kernel.asm	/^ffff800000107042:	c7 40 78 00 00 00 00 	movl   $0x0,0x78(%rax)$/;"	l
ffff800000107049	kernel.asm	/^ffff800000107049:	90                   	nop$/;"	l
ffff80000010704a	kernel.asm	/^ffff80000010704a:	c9                   	leaveq $/;"	l
ffff80000010704b	kernel.asm	/^ffff80000010704b:	c3                   	retq   $/;"	l
ffff80000010704c	kernel.asm	/^ffff80000010704c <acquiresleep>:$/;"	l
ffff80000010704c	kernel.asm	/^ffff80000010704c:	55                   	push   %rbp$/;"	l
ffff80000010704d	kernel.asm	/^ffff80000010704d:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000107050	kernel.asm	/^ffff800000107050:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff800000107054	kernel.asm	/^ffff800000107054:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)$/;"	l
ffff800000107058	kernel.asm	/^ffff800000107058:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010705c	kernel.asm	/^ffff80000010705c:	48 83 c0 08          	add    $0x8,%rax$/;"	l
ffff800000107060	kernel.asm	/^ffff800000107060:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000107063	kernel.asm	/^ffff800000107063:	48 b8 ff 71 10 00 00 	movabs $0xffff8000001071ff,%rax$/;"	l
ffff80000010706a	kernel.asm	/^ffff80000010706a:	80 ff ff $/;"	l
ffff80000010706d	kernel.asm	/^ffff80000010706d:	ff d0                	callq  *%rax$/;"	l
ffff80000010706f	kernel.asm	/^ffff80000010706f:	eb 1e                	jmp    ffff80000010708f <acquiresleep+0x43>$/;"	l
ffff800000107071	kernel.asm	/^ffff800000107071:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000107075	kernel.asm	/^ffff800000107075:	48 8d 50 08          	lea    0x8(%rax),%rdx$/;"	l
ffff800000107079	kernel.asm	/^ffff800000107079:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010707d	kernel.asm	/^ffff80000010707d:	48 89 d6             	mov    %rdx,%rsi$/;"	l
ffff800000107080	kernel.asm	/^ffff800000107080:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000107083	kernel.asm	/^ffff800000107083:	48 b8 23 6c 10 00 00 	movabs $0xffff800000106c23,%rax$/;"	l
ffff80000010708a	kernel.asm	/^ffff80000010708a:	80 ff ff $/;"	l
ffff80000010708d	kernel.asm	/^ffff80000010708d:	ff d0                	callq  *%rax$/;"	l
ffff80000010708f	kernel.asm	/^ffff80000010708f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000107093	kernel.asm	/^ffff800000107093:	8b 00                	mov    (%rax),%eax$/;"	l
ffff800000107095	kernel.asm	/^ffff800000107095:	85 c0                	test   %eax,%eax$/;"	l
ffff800000107097	kernel.asm	/^ffff800000107097:	75 d8                	jne    ffff800000107071 <acquiresleep+0x25>$/;"	l
ffff800000107099	kernel.asm	/^ffff800000107099:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010709d	kernel.asm	/^ffff80000010709d:	c7 00 01 00 00 00    	movl   $0x1,(%rax)$/;"	l
ffff8000001070a3	kernel.asm	/^ffff8000001070a3:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff8000001070aa	kernel.asm	/^ffff8000001070aa:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff8000001070ae	kernel.asm	/^ffff8000001070ae:	8b 50 1c             	mov    0x1c(%rax),%edx$/;"	l
ffff8000001070b1	kernel.asm	/^ffff8000001070b1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001070b5	kernel.asm	/^ffff8000001070b5:	89 50 78             	mov    %edx,0x78(%rax)$/;"	l
ffff8000001070b8	kernel.asm	/^ffff8000001070b8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001070bc	kernel.asm	/^ffff8000001070bc:	48 83 c0 08          	add    $0x8,%rax$/;"	l
ffff8000001070c0	kernel.asm	/^ffff8000001070c0:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001070c3	kernel.asm	/^ffff8000001070c3:	48 b8 98 72 10 00 00 	movabs $0xffff800000107298,%rax$/;"	l
ffff8000001070ca	kernel.asm	/^ffff8000001070ca:	80 ff ff $/;"	l
ffff8000001070cd	kernel.asm	/^ffff8000001070cd:	ff d0                	callq  *%rax$/;"	l
ffff8000001070cf	kernel.asm	/^ffff8000001070cf:	90                   	nop$/;"	l
ffff8000001070d0	kernel.asm	/^ffff8000001070d0:	c9                   	leaveq $/;"	l
ffff8000001070d1	kernel.asm	/^ffff8000001070d1:	c3                   	retq   $/;"	l
ffff8000001070d2	kernel.asm	/^ffff8000001070d2 <releasesleep>:$/;"	l
ffff8000001070d2	kernel.asm	/^ffff8000001070d2:	55                   	push   %rbp$/;"	l
ffff8000001070d3	kernel.asm	/^ffff8000001070d3:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff8000001070d6	kernel.asm	/^ffff8000001070d6:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff8000001070da	kernel.asm	/^ffff8000001070da:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)$/;"	l
ffff8000001070de	kernel.asm	/^ffff8000001070de:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001070e2	kernel.asm	/^ffff8000001070e2:	48 83 c0 08          	add    $0x8,%rax$/;"	l
ffff8000001070e6	kernel.asm	/^ffff8000001070e6:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001070e9	kernel.asm	/^ffff8000001070e9:	48 b8 ff 71 10 00 00 	movabs $0xffff8000001071ff,%rax$/;"	l
ffff8000001070f0	kernel.asm	/^ffff8000001070f0:	80 ff ff $/;"	l
ffff8000001070f3	kernel.asm	/^ffff8000001070f3:	ff d0                	callq  *%rax$/;"	l
ffff8000001070f5	kernel.asm	/^ffff8000001070f5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001070f9	kernel.asm	/^ffff8000001070f9:	c7 00 00 00 00 00    	movl   $0x0,(%rax)$/;"	l
ffff8000001070ff	kernel.asm	/^ffff8000001070ff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000107103	kernel.asm	/^ffff800000107103:	c7 40 78 00 00 00 00 	movl   $0x0,0x78(%rax)$/;"	l
ffff80000010710a	kernel.asm	/^ffff80000010710a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010710e	kernel.asm	/^ffff80000010710e:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000107111	kernel.asm	/^ffff800000107111:	48 b8 8b 6d 10 00 00 	movabs $0xffff800000106d8b,%rax$/;"	l
ffff800000107118	kernel.asm	/^ffff800000107118:	80 ff ff $/;"	l
ffff80000010711b	kernel.asm	/^ffff80000010711b:	ff d0                	callq  *%rax$/;"	l
ffff80000010711d	kernel.asm	/^ffff80000010711d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000107121	kernel.asm	/^ffff800000107121:	48 83 c0 08          	add    $0x8,%rax$/;"	l
ffff800000107125	kernel.asm	/^ffff800000107125:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000107128	kernel.asm	/^ffff800000107128:	48 b8 98 72 10 00 00 	movabs $0xffff800000107298,%rax$/;"	l
ffff80000010712f	kernel.asm	/^ffff80000010712f:	80 ff ff $/;"	l
ffff800000107132	kernel.asm	/^ffff800000107132:	ff d0                	callq  *%rax$/;"	l
ffff800000107134	kernel.asm	/^ffff800000107134:	90                   	nop$/;"	l
ffff800000107135	kernel.asm	/^ffff800000107135:	c9                   	leaveq $/;"	l
ffff800000107136	kernel.asm	/^ffff800000107136:	c3                   	retq   $/;"	l
ffff800000107137	kernel.asm	/^ffff800000107137 <holdingsleep>:$/;"	l
ffff800000107137	kernel.asm	/^ffff800000107137:	55                   	push   %rbp$/;"	l
ffff800000107138	kernel.asm	/^ffff800000107138:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010713b	kernel.asm	/^ffff80000010713b:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ffff80000010713f	kernel.asm	/^ffff80000010713f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
ffff800000107143	kernel.asm	/^ffff800000107143:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000107147	kernel.asm	/^ffff800000107147:	48 83 c0 08          	add    $0x8,%rax$/;"	l
ffff80000010714b	kernel.asm	/^ffff80000010714b:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010714e	kernel.asm	/^ffff80000010714e:	48 b8 ff 71 10 00 00 	movabs $0xffff8000001071ff,%rax$/;"	l
ffff800000107155	kernel.asm	/^ffff800000107155:	80 ff ff $/;"	l
ffff800000107158	kernel.asm	/^ffff800000107158:	ff d0                	callq  *%rax$/;"	l
ffff80000010715a	kernel.asm	/^ffff80000010715a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010715e	kernel.asm	/^ffff80000010715e:	8b 00                	mov    (%rax),%eax$/;"	l
ffff800000107160	kernel.asm	/^ffff800000107160:	89 45 fc             	mov    %eax,-0x4(%rbp)$/;"	l
ffff800000107163	kernel.asm	/^ffff800000107163:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000107167	kernel.asm	/^ffff800000107167:	48 83 c0 08          	add    $0x8,%rax$/;"	l
ffff80000010716b	kernel.asm	/^ffff80000010716b:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010716e	kernel.asm	/^ffff80000010716e:	48 b8 98 72 10 00 00 	movabs $0xffff800000107298,%rax$/;"	l
ffff800000107175	kernel.asm	/^ffff800000107175:	80 ff ff $/;"	l
ffff800000107178	kernel.asm	/^ffff800000107178:	ff d0                	callq  *%rax$/;"	l
ffff80000010717a	kernel.asm	/^ffff80000010717a:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff80000010717d	kernel.asm	/^ffff80000010717d:	c9                   	leaveq $/;"	l
ffff80000010717e	kernel.asm	/^ffff80000010717e:	c3                   	retq   $/;"	l
ffff80000010717f	kernel.asm	/^ffff80000010717f <readeflags>:$/;"	l
ffff80000010717f	kernel.asm	/^ffff80000010717f:	55                   	push   %rbp$/;"	l
ffff800000107180	kernel.asm	/^ffff800000107180:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000107183	kernel.asm	/^ffff800000107183:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff800000107187	kernel.asm	/^ffff800000107187:	9c                   	pushfq $/;"	l
ffff800000107188	kernel.asm	/^ffff800000107188:	58                   	pop    %rax$/;"	l
ffff800000107189	kernel.asm	/^ffff800000107189:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff80000010718d	kernel.asm	/^ffff80000010718d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000107191	kernel.asm	/^ffff800000107191:	c9                   	leaveq $/;"	l
ffff800000107192	kernel.asm	/^ffff800000107192:	c3                   	retq   $/;"	l
ffff800000107193	kernel.asm	/^ffff800000107193 <cli>:$/;"	l
ffff800000107193	kernel.asm	/^ffff800000107193:	55                   	push   %rbp$/;"	l
ffff800000107194	kernel.asm	/^ffff800000107194:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000107197	kernel.asm	/^ffff800000107197:	fa                   	cli    $/;"	l
ffff800000107198	kernel.asm	/^ffff800000107198:	90                   	nop$/;"	l
ffff800000107199	kernel.asm	/^ffff800000107199:	5d                   	pop    %rbp$/;"	l
ffff80000010719a	kernel.asm	/^ffff80000010719a:	c3                   	retq   $/;"	l
ffff80000010719b	kernel.asm	/^ffff80000010719b <sti>:$/;"	l
ffff80000010719b	kernel.asm	/^ffff80000010719b:	55                   	push   %rbp$/;"	l
ffff80000010719c	kernel.asm	/^ffff80000010719c:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010719f	kernel.asm	/^ffff80000010719f:	fb                   	sti    $/;"	l
ffff8000001071a0	kernel.asm	/^ffff8000001071a0:	90                   	nop$/;"	l
ffff8000001071a1	kernel.asm	/^ffff8000001071a1:	5d                   	pop    %rbp$/;"	l
ffff8000001071a2	kernel.asm	/^ffff8000001071a2:	c3                   	retq   $/;"	l
ffff8000001071a3	kernel.asm	/^ffff8000001071a3 <xchg>:$/;"	l
ffff8000001071a3	kernel.asm	/^ffff8000001071a3:	55                   	push   %rbp$/;"	l
ffff8000001071a4	kernel.asm	/^ffff8000001071a4:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff8000001071a7	kernel.asm	/^ffff8000001071a7:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ffff8000001071ab	kernel.asm	/^ffff8000001071ab:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
ffff8000001071af	kernel.asm	/^ffff8000001071af:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)$/;"	l
ffff8000001071b3	kernel.asm	/^ffff8000001071b3:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx$/;"	l
ffff8000001071b7	kernel.asm	/^ffff8000001071b7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff8000001071bb	kernel.asm	/^ffff8000001071bb:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx$/;"	l
ffff8000001071bf	kernel.asm	/^ffff8000001071bf:	f0 87 02             	lock xchg %eax,(%rdx)$/;"	l
ffff8000001071c2	kernel.asm	/^ffff8000001071c2:	89 45 fc             	mov    %eax,-0x4(%rbp)$/;"	l
ffff8000001071c5	kernel.asm	/^ffff8000001071c5:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff8000001071c8	kernel.asm	/^ffff8000001071c8:	c9                   	leaveq $/;"	l
ffff8000001071c9	kernel.asm	/^ffff8000001071c9:	c3                   	retq   $/;"	l
ffff8000001071ca	kernel.asm	/^ffff8000001071ca <initlock>:$/;"	l
ffff8000001071ca	kernel.asm	/^ffff8000001071ca:	55                   	push   %rbp$/;"	l
ffff8000001071cb	kernel.asm	/^ffff8000001071cb:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff8000001071ce	kernel.asm	/^ffff8000001071ce:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff8000001071d2	kernel.asm	/^ffff8000001071d2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)$/;"	l
ffff8000001071d6	kernel.asm	/^ffff8000001071d6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)$/;"	l
ffff8000001071da	kernel.asm	/^ffff8000001071da:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001071de	kernel.asm	/^ffff8000001071de:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
ffff8000001071e2	kernel.asm	/^ffff8000001071e2:	48 89 50 08          	mov    %rdx,0x8(%rax)$/;"	l
ffff8000001071e6	kernel.asm	/^ffff8000001071e6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001071ea	kernel.asm	/^ffff8000001071ea:	c7 00 00 00 00 00    	movl   $0x0,(%rax)$/;"	l
ffff8000001071f0	kernel.asm	/^ffff8000001071f0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001071f4	kernel.asm	/^ffff8000001071f4:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)$/;"	l
ffff8000001071fb	kernel.asm	/^ffff8000001071fb:	00 $/;"	l
ffff8000001071fc	kernel.asm	/^ffff8000001071fc:	90                   	nop$/;"	l
ffff8000001071fd	kernel.asm	/^ffff8000001071fd:	c9                   	leaveq $/;"	l
ffff8000001071fe	kernel.asm	/^ffff8000001071fe:	c3                   	retq   $/;"	l
ffff8000001071ff	kernel.asm	/^ffff8000001071ff <acquire>:$/;"	l
ffff8000001071ff	kernel.asm	/^ffff8000001071ff:	55                   	push   %rbp$/;"	l
ffff800000107200	kernel.asm	/^ffff800000107200:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000107203	kernel.asm	/^ffff800000107203:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff800000107207	kernel.asm	/^ffff800000107207:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)$/;"	l
ffff80000010720b	kernel.asm	/^ffff80000010720b:	48 b8 12 74 10 00 00 	movabs $0xffff800000107412,%rax$/;"	l
ffff800000107212	kernel.asm	/^ffff800000107212:	80 ff ff $/;"	l
ffff800000107215	kernel.asm	/^ffff800000107215:	ff d0                	callq  *%rax$/;"	l
ffff800000107217	kernel.asm	/^ffff800000107217:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010721b	kernel.asm	/^ffff80000010721b:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010721e	kernel.asm	/^ffff80000010721e:	48 b8 d6 73 10 00 00 	movabs $0xffff8000001073d6,%rax$/;"	l
ffff800000107225	kernel.asm	/^ffff800000107225:	80 ff ff $/;"	l
ffff800000107228	kernel.asm	/^ffff800000107228:	ff d0                	callq  *%rax$/;"	l
ffff80000010722a	kernel.asm	/^ffff80000010722a:	85 c0                	test   %eax,%eax$/;"	l
ffff80000010722c	kernel.asm	/^ffff80000010722c:	74 16                	je     ffff800000107244 <acquire+0x45>$/;"	l
ffff80000010722e	kernel.asm	/^ffff80000010722e:	48 bf 60 be 10 00 00 	movabs $0xffff80000010be60,%rdi$/;"	l
ffff800000107235	kernel.asm	/^ffff800000107235:	80 ff ff $/;"	l
ffff800000107238	kernel.asm	/^ffff800000107238:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff80000010723f	kernel.asm	/^ffff80000010723f:	80 ff ff $/;"	l
ffff800000107242	kernel.asm	/^ffff800000107242:	ff d0                	callq  *%rax$/;"	l
ffff800000107244	kernel.asm	/^ffff800000107244:	90                   	nop$/;"	l
ffff800000107245	kernel.asm	/^ffff800000107245:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000107249	kernel.asm	/^ffff800000107249:	be 01 00 00 00       	mov    $0x1,%esi$/;"	l
ffff80000010724e	kernel.asm	/^ffff80000010724e:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000107251	kernel.asm	/^ffff800000107251:	48 b8 a3 71 10 00 00 	movabs $0xffff8000001071a3,%rax$/;"	l
ffff800000107258	kernel.asm	/^ffff800000107258:	80 ff ff $/;"	l
ffff80000010725b	kernel.asm	/^ffff80000010725b:	ff d0                	callq  *%rax$/;"	l
ffff80000010725d	kernel.asm	/^ffff80000010725d:	85 c0                	test   %eax,%eax$/;"	l
ffff80000010725f	kernel.asm	/^ffff80000010725f:	75 e4                	jne    ffff800000107245 <acquire+0x46>$/;"	l
ffff800000107261	kernel.asm	/^ffff800000107261:	0f ae f0             	mfence $/;"	l
ffff800000107264	kernel.asm	/^ffff800000107264:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000107268	kernel.asm	/^ffff800000107268:	48 c7 c2 f0 ff ff ff 	mov    $0xfffffffffffffff0,%rdx$/;"	l
ffff80000010726f	kernel.asm	/^ffff80000010726f:	64 48 8b 12          	mov    %fs:(%rdx),%rdx$/;"	l
ffff800000107273	kernel.asm	/^ffff800000107273:	48 89 50 10          	mov    %rdx,0x10(%rax)$/;"	l
ffff800000107277	kernel.asm	/^ffff800000107277:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010727b	kernel.asm	/^ffff80000010727b:	48 8d 50 18          	lea    0x18(%rax),%rdx$/;"	l
ffff80000010727f	kernel.asm	/^ffff80000010727f:	48 8d 45 f8          	lea    -0x8(%rbp),%rax$/;"	l
ffff800000107283	kernel.asm	/^ffff800000107283:	48 89 d6             	mov    %rdx,%rsi$/;"	l
ffff800000107286	kernel.asm	/^ffff800000107286:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000107289	kernel.asm	/^ffff800000107289:	48 b8 09 73 10 00 00 	movabs $0xffff800000107309,%rax$/;"	l
ffff800000107290	kernel.asm	/^ffff800000107290:	80 ff ff $/;"	l
ffff800000107293	kernel.asm	/^ffff800000107293:	ff d0                	callq  *%rax$/;"	l
ffff800000107295	kernel.asm	/^ffff800000107295:	90                   	nop$/;"	l
ffff800000107296	kernel.asm	/^ffff800000107296:	c9                   	leaveq $/;"	l
ffff800000107297	kernel.asm	/^ffff800000107297:	c3                   	retq   $/;"	l
ffff800000107298	kernel.asm	/^ffff800000107298 <release>:$/;"	l
ffff800000107298	kernel.asm	/^ffff800000107298:	55                   	push   %rbp$/;"	l
ffff800000107299	kernel.asm	/^ffff800000107299:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010729c	kernel.asm	/^ffff80000010729c:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff8000001072a0	kernel.asm	/^ffff8000001072a0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)$/;"	l
ffff8000001072a4	kernel.asm	/^ffff8000001072a4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001072a8	kernel.asm	/^ffff8000001072a8:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001072ab	kernel.asm	/^ffff8000001072ab:	48 b8 d6 73 10 00 00 	movabs $0xffff8000001073d6,%rax$/;"	l
ffff8000001072b2	kernel.asm	/^ffff8000001072b2:	80 ff ff $/;"	l
ffff8000001072b5	kernel.asm	/^ffff8000001072b5:	ff d0                	callq  *%rax$/;"	l
ffff8000001072b7	kernel.asm	/^ffff8000001072b7:	85 c0                	test   %eax,%eax$/;"	l
ffff8000001072b9	kernel.asm	/^ffff8000001072b9:	75 16                	jne    ffff8000001072d1 <release+0x39>$/;"	l
ffff8000001072bb	kernel.asm	/^ffff8000001072bb:	48 bf 68 be 10 00 00 	movabs $0xffff80000010be68,%rdi$/;"	l
ffff8000001072c2	kernel.asm	/^ffff8000001072c2:	80 ff ff $/;"	l
ffff8000001072c5	kernel.asm	/^ffff8000001072c5:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff8000001072cc	kernel.asm	/^ffff8000001072cc:	80 ff ff $/;"	l
ffff8000001072cf	kernel.asm	/^ffff8000001072cf:	ff d0                	callq  *%rax$/;"	l
ffff8000001072d1	kernel.asm	/^ffff8000001072d1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001072d5	kernel.asm	/^ffff8000001072d5:	48 c7 40 18 00 00 00 	movq   $0x0,0x18(%rax)$/;"	l
ffff8000001072dc	kernel.asm	/^ffff8000001072dc:	00 $/;"	l
ffff8000001072dd	kernel.asm	/^ffff8000001072dd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001072e1	kernel.asm	/^ffff8000001072e1:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)$/;"	l
ffff8000001072e8	kernel.asm	/^ffff8000001072e8:	00 $/;"	l
ffff8000001072e9	kernel.asm	/^ffff8000001072e9:	0f ae f0             	mfence $/;"	l
ffff8000001072ec	kernel.asm	/^ffff8000001072ec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001072f0	kernel.asm	/^ffff8000001072f0:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx$/;"	l
ffff8000001072f4	kernel.asm	/^ffff8000001072f4:	c7 00 00 00 00 00    	movl   $0x0,(%rax)$/;"	l
ffff8000001072fa	kernel.asm	/^ffff8000001072fa:	48 b8 8c 74 10 00 00 	movabs $0xffff80000010748c,%rax$/;"	l
ffff800000107301	kernel.asm	/^ffff800000107301:	80 ff ff $/;"	l
ffff800000107304	kernel.asm	/^ffff800000107304:	ff d0                	callq  *%rax$/;"	l
ffff800000107306	kernel.asm	/^ffff800000107306:	90                   	nop$/;"	l
ffff800000107307	kernel.asm	/^ffff800000107307:	c9                   	leaveq $/;"	l
ffff800000107308	kernel.asm	/^ffff800000107308:	c3                   	retq   $/;"	l
ffff800000107309	kernel.asm	/^ffff800000107309 <getcallerpcs>:$/;"	l
ffff800000107309	kernel.asm	/^ffff800000107309:	55                   	push   %rbp$/;"	l
ffff80000010730a	kernel.asm	/^ffff80000010730a:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010730d	kernel.asm	/^ffff80000010730d:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ffff800000107311	kernel.asm	/^ffff800000107311:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
ffff800000107315	kernel.asm	/^ffff800000107315:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)$/;"	l
ffff800000107319	kernel.asm	/^ffff800000107319:	48 89 e8             	mov    %rbp,%rax$/;"	l
ffff80000010731c	kernel.asm	/^ffff80000010731c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff800000107320	kernel.asm	/^ffff800000107320:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx$/;"	l
ffff800000107324	kernel.asm	/^ffff800000107324:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000107328	kernel.asm	/^ffff800000107328:	48 89 d6             	mov    %rdx,%rsi$/;"	l
ffff80000010732b	kernel.asm	/^ffff80000010732b:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010732e	kernel.asm	/^ffff80000010732e:	48 b8 3d 73 10 00 00 	movabs $0xffff80000010733d,%rax$/;"	l
ffff800000107335	kernel.asm	/^ffff800000107335:	80 ff ff $/;"	l
ffff800000107338	kernel.asm	/^ffff800000107338:	ff d0                	callq  *%rax$/;"	l
ffff80000010733a	kernel.asm	/^ffff80000010733a:	90                   	nop$/;"	l
ffff80000010733b	kernel.asm	/^ffff80000010733b:	c9                   	leaveq $/;"	l
ffff80000010733c	kernel.asm	/^ffff80000010733c:	c3                   	retq   $/;"	l
ffff80000010733d	kernel.asm	/^ffff80000010733d <getstackpcs>:$/;"	l
ffff80000010733d	kernel.asm	/^ffff80000010733d:	55                   	push   %rbp$/;"	l
ffff80000010733e	kernel.asm	/^ffff80000010733e:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000107341	kernel.asm	/^ffff800000107341:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ffff800000107345	kernel.asm	/^ffff800000107345:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
ffff800000107349	kernel.asm	/^ffff800000107349:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)$/;"	l
ffff80000010734d	kernel.asm	/^ffff80000010734d:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)$/;"	l
ffff800000107354	kernel.asm	/^ffff800000107354:	eb 50                	jmp    ffff8000001073a6 <getstackpcs+0x69>$/;"	l
ffff800000107356	kernel.asm	/^ffff800000107356:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)$/;"	l
ffff80000010735b	kernel.asm	/^ffff80000010735b:	74 70                	je     ffff8000001073cd <getstackpcs+0x90>$/;"	l
ffff80000010735d	kernel.asm	/^ffff80000010735d:	48 b8 ff ff ff ff ff 	movabs $0xffff7fffffffffff,%rax$/;"	l
ffff800000107364	kernel.asm	/^ffff800000107364:	7f ff ff $/;"	l
ffff800000107367	kernel.asm	/^ffff800000107367:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)$/;"	l
ffff80000010736b	kernel.asm	/^ffff80000010736b:	76 60                	jbe    ffff8000001073cd <getstackpcs+0x90>$/;"	l
ffff80000010736d	kernel.asm	/^ffff80000010736d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff800000107372	kernel.asm	/^ffff800000107372:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)$/;"	l
ffff800000107376	kernel.asm	/^ffff800000107376:	74 55                	je     ffff8000001073cd <getstackpcs+0x90>$/;"	l
ffff800000107378	kernel.asm	/^ffff800000107378:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff80000010737b	kernel.asm	/^ffff80000010737b:	48 98                	cltq   $/;"	l
ffff80000010737d	kernel.asm	/^ffff80000010737d:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx$/;"	l
ffff800000107384	kernel.asm	/^ffff800000107384:	00 $/;"	l
ffff800000107385	kernel.asm	/^ffff800000107385:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff800000107389	kernel.asm	/^ffff800000107389:	48 01 c2             	add    %rax,%rdx$/;"	l
ffff80000010738c	kernel.asm	/^ffff80000010738c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000107390	kernel.asm	/^ffff800000107390:	48 8b 40 08          	mov    0x8(%rax),%rax$/;"	l
ffff800000107394	kernel.asm	/^ffff800000107394:	48 89 02             	mov    %rax,(%rdx)$/;"	l
ffff800000107397	kernel.asm	/^ffff800000107397:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010739b	kernel.asm	/^ffff80000010739b:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff80000010739e	kernel.asm	/^ffff80000010739e:	48 89 45 e8          	mov    %rax,-0x18(%rbp)$/;"	l
ffff8000001073a2	kernel.asm	/^ffff8000001073a2:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)$/;"	l
ffff8000001073a6	kernel.asm	/^ffff8000001073a6:	83 7d fc 09          	cmpl   $0x9,-0x4(%rbp)$/;"	l
ffff8000001073aa	kernel.asm	/^ffff8000001073aa:	7e aa                	jle    ffff800000107356 <getstackpcs+0x19>$/;"	l
ffff8000001073ac	kernel.asm	/^ffff8000001073ac:	eb 1f                	jmp    ffff8000001073cd <getstackpcs+0x90>$/;"	l
ffff8000001073ae	kernel.asm	/^ffff8000001073ae:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff8000001073b1	kernel.asm	/^ffff8000001073b1:	48 98                	cltq   $/;"	l
ffff8000001073b3	kernel.asm	/^ffff8000001073b3:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx$/;"	l
ffff8000001073ba	kernel.asm	/^ffff8000001073ba:	00 $/;"	l
ffff8000001073bb	kernel.asm	/^ffff8000001073bb:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff8000001073bf	kernel.asm	/^ffff8000001073bf:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff8000001073c2	kernel.asm	/^ffff8000001073c2:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)$/;"	l
ffff8000001073c9	kernel.asm	/^ffff8000001073c9:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)$/;"	l
ffff8000001073cd	kernel.asm	/^ffff8000001073cd:	83 7d fc 09          	cmpl   $0x9,-0x4(%rbp)$/;"	l
ffff8000001073d1	kernel.asm	/^ffff8000001073d1:	7e db                	jle    ffff8000001073ae <getstackpcs+0x71>$/;"	l
ffff8000001073d3	kernel.asm	/^ffff8000001073d3:	90                   	nop$/;"	l
ffff8000001073d4	kernel.asm	/^ffff8000001073d4:	c9                   	leaveq $/;"	l
ffff8000001073d5	kernel.asm	/^ffff8000001073d5:	c3                   	retq   $/;"	l
ffff8000001073d6	kernel.asm	/^ffff8000001073d6 <holding>:$/;"	l
ffff8000001073d6	kernel.asm	/^ffff8000001073d6:	55                   	push   %rbp$/;"	l
ffff8000001073d7	kernel.asm	/^ffff8000001073d7:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff8000001073da	kernel.asm	/^ffff8000001073da:	48 83 ec 08          	sub    $0x8,%rsp$/;"	l
ffff8000001073de	kernel.asm	/^ffff8000001073de:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)$/;"	l
ffff8000001073e2	kernel.asm	/^ffff8000001073e2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001073e6	kernel.asm	/^ffff8000001073e6:	8b 00                	mov    (%rax),%eax$/;"	l
ffff8000001073e8	kernel.asm	/^ffff8000001073e8:	85 c0                	test   %eax,%eax$/;"	l
ffff8000001073ea	kernel.asm	/^ffff8000001073ea:	74 1f                	je     ffff80000010740b <holding+0x35>$/;"	l
ffff8000001073ec	kernel.asm	/^ffff8000001073ec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001073f0	kernel.asm	/^ffff8000001073f0:	48 8b 50 10          	mov    0x10(%rax),%rdx$/;"	l
ffff8000001073f4	kernel.asm	/^ffff8000001073f4:	48 c7 c0 f0 ff ff ff 	mov    $0xfffffffffffffff0,%rax$/;"	l
ffff8000001073fb	kernel.asm	/^ffff8000001073fb:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff8000001073ff	kernel.asm	/^ffff8000001073ff:	48 39 c2             	cmp    %rax,%rdx$/;"	l
ffff800000107402	kernel.asm	/^ffff800000107402:	75 07                	jne    ffff80000010740b <holding+0x35>$/;"	l
ffff800000107404	kernel.asm	/^ffff800000107404:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
ffff800000107409	kernel.asm	/^ffff800000107409:	eb 05                	jmp    ffff800000107410 <holding+0x3a>$/;"	l
ffff80000010740b	kernel.asm	/^ffff80000010740b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000107410	kernel.asm	/^ffff800000107410:	c9                   	leaveq $/;"	l
ffff800000107411	kernel.asm	/^ffff800000107411:	c3                   	retq   $/;"	l
ffff800000107412	kernel.asm	/^ffff800000107412 <pushcli>:$/;"	l
ffff800000107412	kernel.asm	/^ffff800000107412:	55                   	push   %rbp$/;"	l
ffff800000107413	kernel.asm	/^ffff800000107413:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000107416	kernel.asm	/^ffff800000107416:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff80000010741a	kernel.asm	/^ffff80000010741a:	48 b8 7f 71 10 00 00 	movabs $0xffff80000010717f,%rax$/;"	l
ffff800000107421	kernel.asm	/^ffff800000107421:	80 ff ff $/;"	l
ffff800000107424	kernel.asm	/^ffff800000107424:	ff d0                	callq  *%rax$/;"	l
ffff800000107426	kernel.asm	/^ffff800000107426:	89 45 fc             	mov    %eax,-0x4(%rbp)$/;"	l
ffff800000107429	kernel.asm	/^ffff800000107429:	48 b8 93 71 10 00 00 	movabs $0xffff800000107193,%rax$/;"	l
ffff800000107430	kernel.asm	/^ffff800000107430:	80 ff ff $/;"	l
ffff800000107433	kernel.asm	/^ffff800000107433:	ff d0                	callq  *%rax$/;"	l
ffff800000107435	kernel.asm	/^ffff800000107435:	48 c7 c0 f0 ff ff ff 	mov    $0xfffffffffffffff0,%rax$/;"	l
ffff80000010743c	kernel.asm	/^ffff80000010743c:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000107440	kernel.asm	/^ffff800000107440:	8b 80 e4 00 00 00    	mov    0xe4(%rax),%eax$/;"	l
ffff800000107446	kernel.asm	/^ffff800000107446:	85 c0                	test   %eax,%eax$/;"	l
ffff800000107448	kernel.asm	/^ffff800000107448:	75 1a                	jne    ffff800000107464 <pushcli+0x52>$/;"	l
ffff80000010744a	kernel.asm	/^ffff80000010744a:	48 c7 c0 f0 ff ff ff 	mov    $0xfffffffffffffff0,%rax$/;"	l
ffff800000107451	kernel.asm	/^ffff800000107451:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000107455	kernel.asm	/^ffff800000107455:	8b 55 fc             	mov    -0x4(%rbp),%edx$/;"	l
ffff800000107458	kernel.asm	/^ffff800000107458:	81 e2 00 02 00 00    	and    $0x200,%edx$/;"	l
ffff80000010745e	kernel.asm	/^ffff80000010745e:	89 90 e8 00 00 00    	mov    %edx,0xe8(%rax)$/;"	l
ffff800000107464	kernel.asm	/^ffff800000107464:	48 c7 c0 f0 ff ff ff 	mov    $0xfffffffffffffff0,%rax$/;"	l
ffff80000010746b	kernel.asm	/^ffff80000010746b:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff80000010746f	kernel.asm	/^ffff80000010746f:	48 c7 c2 f0 ff ff ff 	mov    $0xfffffffffffffff0,%rdx$/;"	l
ffff800000107476	kernel.asm	/^ffff800000107476:	64 48 8b 12          	mov    %fs:(%rdx),%rdx$/;"	l
ffff80000010747a	kernel.asm	/^ffff80000010747a:	8b 92 e4 00 00 00    	mov    0xe4(%rdx),%edx$/;"	l
ffff800000107480	kernel.asm	/^ffff800000107480:	83 c2 01             	add    $0x1,%edx$/;"	l
ffff800000107483	kernel.asm	/^ffff800000107483:	89 90 e4 00 00 00    	mov    %edx,0xe4(%rax)$/;"	l
ffff800000107489	kernel.asm	/^ffff800000107489:	90                   	nop$/;"	l
ffff80000010748a	kernel.asm	/^ffff80000010748a:	c9                   	leaveq $/;"	l
ffff80000010748b	kernel.asm	/^ffff80000010748b:	c3                   	retq   $/;"	l
ffff80000010748c	kernel.asm	/^ffff80000010748c <popcli>:$/;"	l
ffff80000010748c	kernel.asm	/^ffff80000010748c:	55                   	push   %rbp$/;"	l
ffff80000010748d	kernel.asm	/^ffff80000010748d:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000107490	kernel.asm	/^ffff800000107490:	48 b8 7f 71 10 00 00 	movabs $0xffff80000010717f,%rax$/;"	l
ffff800000107497	kernel.asm	/^ffff800000107497:	80 ff ff $/;"	l
ffff80000010749a	kernel.asm	/^ffff80000010749a:	ff d0                	callq  *%rax$/;"	l
ffff80000010749c	kernel.asm	/^ffff80000010749c:	25 00 02 00 00       	and    $0x200,%eax$/;"	l
ffff8000001074a1	kernel.asm	/^ffff8000001074a1:	48 85 c0             	test   %rax,%rax$/;"	l
ffff8000001074a4	kernel.asm	/^ffff8000001074a4:	74 16                	je     ffff8000001074bc <popcli+0x30>$/;"	l
ffff8000001074a6	kernel.asm	/^ffff8000001074a6:	48 bf 70 be 10 00 00 	movabs $0xffff80000010be70,%rdi$/;"	l
ffff8000001074ad	kernel.asm	/^ffff8000001074ad:	80 ff ff $/;"	l
ffff8000001074b0	kernel.asm	/^ffff8000001074b0:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff8000001074b7	kernel.asm	/^ffff8000001074b7:	80 ff ff $/;"	l
ffff8000001074ba	kernel.asm	/^ffff8000001074ba:	ff d0                	callq  *%rax$/;"	l
ffff8000001074bc	kernel.asm	/^ffff8000001074bc:	48 c7 c0 f0 ff ff ff 	mov    $0xfffffffffffffff0,%rax$/;"	l
ffff8000001074c3	kernel.asm	/^ffff8000001074c3:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff8000001074c7	kernel.asm	/^ffff8000001074c7:	8b 90 e4 00 00 00    	mov    0xe4(%rax),%edx$/;"	l
ffff8000001074cd	kernel.asm	/^ffff8000001074cd:	83 ea 01             	sub    $0x1,%edx$/;"	l
ffff8000001074d0	kernel.asm	/^ffff8000001074d0:	89 90 e4 00 00 00    	mov    %edx,0xe4(%rax)$/;"	l
ffff8000001074d6	kernel.asm	/^ffff8000001074d6:	8b 80 e4 00 00 00    	mov    0xe4(%rax),%eax$/;"	l
ffff8000001074dc	kernel.asm	/^ffff8000001074dc:	85 c0                	test   %eax,%eax$/;"	l
ffff8000001074de	kernel.asm	/^ffff8000001074de:	79 16                	jns    ffff8000001074f6 <popcli+0x6a>$/;"	l
ffff8000001074e0	kernel.asm	/^ffff8000001074e0:	48 bf 87 be 10 00 00 	movabs $0xffff80000010be87,%rdi$/;"	l
ffff8000001074e7	kernel.asm	/^ffff8000001074e7:	80 ff ff $/;"	l
ffff8000001074ea	kernel.asm	/^ffff8000001074ea:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff8000001074f1	kernel.asm	/^ffff8000001074f1:	80 ff ff $/;"	l
ffff8000001074f4	kernel.asm	/^ffff8000001074f4:	ff d0                	callq  *%rax$/;"	l
ffff8000001074f6	kernel.asm	/^ffff8000001074f6:	48 c7 c0 f0 ff ff ff 	mov    $0xfffffffffffffff0,%rax$/;"	l
ffff8000001074fd	kernel.asm	/^ffff8000001074fd:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000107501	kernel.asm	/^ffff800000107501:	8b 80 e4 00 00 00    	mov    0xe4(%rax),%eax$/;"	l
ffff800000107507	kernel.asm	/^ffff800000107507:	85 c0                	test   %eax,%eax$/;"	l
ffff800000107509	kernel.asm	/^ffff800000107509:	75 21                	jne    ffff80000010752c <popcli+0xa0>$/;"	l
ffff80000010750b	kernel.asm	/^ffff80000010750b:	48 c7 c0 f0 ff ff ff 	mov    $0xfffffffffffffff0,%rax$/;"	l
ffff800000107512	kernel.asm	/^ffff800000107512:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000107516	kernel.asm	/^ffff800000107516:	8b 80 e8 00 00 00    	mov    0xe8(%rax),%eax$/;"	l
ffff80000010751c	kernel.asm	/^ffff80000010751c:	85 c0                	test   %eax,%eax$/;"	l
ffff80000010751e	kernel.asm	/^ffff80000010751e:	74 0c                	je     ffff80000010752c <popcli+0xa0>$/;"	l
ffff800000107520	kernel.asm	/^ffff800000107520:	48 b8 9b 71 10 00 00 	movabs $0xffff80000010719b,%rax$/;"	l
ffff800000107527	kernel.asm	/^ffff800000107527:	80 ff ff $/;"	l
ffff80000010752a	kernel.asm	/^ffff80000010752a:	ff d0                	callq  *%rax$/;"	l
ffff80000010752c	kernel.asm	/^ffff80000010752c:	90                   	nop$/;"	l
ffff80000010752d	kernel.asm	/^ffff80000010752d:	5d                   	pop    %rbp$/;"	l
ffff80000010752e	kernel.asm	/^ffff80000010752e:	c3                   	retq   $/;"	l
ffff80000010752f	kernel.asm	/^ffff80000010752f <stosb>:$/;"	l
ffff80000010752f	kernel.asm	/^ffff80000010752f:	55                   	push   %rbp$/;"	l
ffff800000107530	kernel.asm	/^ffff800000107530:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000107533	kernel.asm	/^ffff800000107533:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff800000107537	kernel.asm	/^ffff800000107537:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)$/;"	l
ffff80000010753b	kernel.asm	/^ffff80000010753b:	89 75 f4             	mov    %esi,-0xc(%rbp)$/;"	l
ffff80000010753e	kernel.asm	/^ffff80000010753e:	89 55 f0             	mov    %edx,-0x10(%rbp)$/;"	l
ffff800000107541	kernel.asm	/^ffff800000107541:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx$/;"	l
ffff800000107545	kernel.asm	/^ffff800000107545:	8b 55 f0             	mov    -0x10(%rbp),%edx$/;"	l
ffff800000107548	kernel.asm	/^ffff800000107548:	8b 45 f4             	mov    -0xc(%rbp),%eax$/;"	l
ffff80000010754b	kernel.asm	/^ffff80000010754b:	48 89 ce             	mov    %rcx,%rsi$/;"	l
ffff80000010754e	kernel.asm	/^ffff80000010754e:	48 89 f7             	mov    %rsi,%rdi$/;"	l
ffff800000107551	kernel.asm	/^ffff800000107551:	89 d1                	mov    %edx,%ecx$/;"	l
ffff800000107553	kernel.asm	/^ffff800000107553:	fc                   	cld    $/;"	l
ffff800000107554	kernel.asm	/^ffff800000107554:	f3 aa                	rep stos %al,%es:(%rdi)$/;"	l
ffff800000107556	kernel.asm	/^ffff800000107556:	89 ca                	mov    %ecx,%edx$/;"	l
ffff800000107558	kernel.asm	/^ffff800000107558:	48 89 fe             	mov    %rdi,%rsi$/;"	l
ffff80000010755b	kernel.asm	/^ffff80000010755b:	48 89 75 f8          	mov    %rsi,-0x8(%rbp)$/;"	l
ffff80000010755f	kernel.asm	/^ffff80000010755f:	89 55 f0             	mov    %edx,-0x10(%rbp)$/;"	l
ffff800000107562	kernel.asm	/^ffff800000107562:	90                   	nop$/;"	l
ffff800000107563	kernel.asm	/^ffff800000107563:	c9                   	leaveq $/;"	l
ffff800000107564	kernel.asm	/^ffff800000107564:	c3                   	retq   $/;"	l
ffff800000107565	kernel.asm	/^ffff800000107565 <stosl>:$/;"	l
ffff800000107565	kernel.asm	/^ffff800000107565:	55                   	push   %rbp$/;"	l
ffff800000107566	kernel.asm	/^ffff800000107566:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000107569	kernel.asm	/^ffff800000107569:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff80000010756d	kernel.asm	/^ffff80000010756d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)$/;"	l
ffff800000107571	kernel.asm	/^ffff800000107571:	89 75 f4             	mov    %esi,-0xc(%rbp)$/;"	l
ffff800000107574	kernel.asm	/^ffff800000107574:	89 55 f0             	mov    %edx,-0x10(%rbp)$/;"	l
ffff800000107577	kernel.asm	/^ffff800000107577:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx$/;"	l
ffff80000010757b	kernel.asm	/^ffff80000010757b:	8b 55 f0             	mov    -0x10(%rbp),%edx$/;"	l
ffff80000010757e	kernel.asm	/^ffff80000010757e:	8b 45 f4             	mov    -0xc(%rbp),%eax$/;"	l
ffff800000107581	kernel.asm	/^ffff800000107581:	48 89 ce             	mov    %rcx,%rsi$/;"	l
ffff800000107584	kernel.asm	/^ffff800000107584:	48 89 f7             	mov    %rsi,%rdi$/;"	l
ffff800000107587	kernel.asm	/^ffff800000107587:	89 d1                	mov    %edx,%ecx$/;"	l
ffff800000107589	kernel.asm	/^ffff800000107589:	fc                   	cld    $/;"	l
ffff80000010758a	kernel.asm	/^ffff80000010758a:	f3 ab                	rep stos %eax,%es:(%rdi)$/;"	l
ffff80000010758c	kernel.asm	/^ffff80000010758c:	89 ca                	mov    %ecx,%edx$/;"	l
ffff80000010758e	kernel.asm	/^ffff80000010758e:	48 89 fe             	mov    %rdi,%rsi$/;"	l
ffff800000107591	kernel.asm	/^ffff800000107591:	48 89 75 f8          	mov    %rsi,-0x8(%rbp)$/;"	l
ffff800000107595	kernel.asm	/^ffff800000107595:	89 55 f0             	mov    %edx,-0x10(%rbp)$/;"	l
ffff800000107598	kernel.asm	/^ffff800000107598:	90                   	nop$/;"	l
ffff800000107599	kernel.asm	/^ffff800000107599:	c9                   	leaveq $/;"	l
ffff80000010759a	kernel.asm	/^ffff80000010759a:	c3                   	retq   $/;"	l
ffff80000010759b	kernel.asm	/^ffff80000010759b <memset>:$/;"	l
ffff80000010759b	kernel.asm	/^ffff80000010759b:	55                   	push   %rbp$/;"	l
ffff80000010759c	kernel.asm	/^ffff80000010759c:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010759f	kernel.asm	/^ffff80000010759f:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff8000001075a3	kernel.asm	/^ffff8000001075a3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)$/;"	l
ffff8000001075a7	kernel.asm	/^ffff8000001075a7:	89 75 f4             	mov    %esi,-0xc(%rbp)$/;"	l
ffff8000001075aa	kernel.asm	/^ffff8000001075aa:	89 55 f0             	mov    %edx,-0x10(%rbp)$/;"	l
ffff8000001075ad	kernel.asm	/^ffff8000001075ad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001075b1	kernel.asm	/^ffff8000001075b1:	83 e0 03             	and    $0x3,%eax$/;"	l
ffff8000001075b4	kernel.asm	/^ffff8000001075b4:	48 85 c0             	test   %rax,%rax$/;"	l
ffff8000001075b7	kernel.asm	/^ffff8000001075b7:	75 4f                	jne    ffff800000107608 <memset+0x6d>$/;"	l
ffff8000001075b9	kernel.asm	/^ffff8000001075b9:	8b 45 f0             	mov    -0x10(%rbp),%eax$/;"	l
ffff8000001075bc	kernel.asm	/^ffff8000001075bc:	83 e0 03             	and    $0x3,%eax$/;"	l
ffff8000001075bf	kernel.asm	/^ffff8000001075bf:	85 c0                	test   %eax,%eax$/;"	l
ffff8000001075c1	kernel.asm	/^ffff8000001075c1:	75 45                	jne    ffff800000107608 <memset+0x6d>$/;"	l
ffff8000001075c3	kernel.asm	/^ffff8000001075c3:	81 65 f4 ff 00 00 00 	andl   $0xff,-0xc(%rbp)$/;"	l
ffff8000001075ca	kernel.asm	/^ffff8000001075ca:	8b 45 f0             	mov    -0x10(%rbp),%eax$/;"	l
ffff8000001075cd	kernel.asm	/^ffff8000001075cd:	c1 e8 02             	shr    $0x2,%eax$/;"	l
ffff8000001075d0	kernel.asm	/^ffff8000001075d0:	89 c6                	mov    %eax,%esi$/;"	l
ffff8000001075d2	kernel.asm	/^ffff8000001075d2:	8b 45 f4             	mov    -0xc(%rbp),%eax$/;"	l
ffff8000001075d5	kernel.asm	/^ffff8000001075d5:	c1 e0 18             	shl    $0x18,%eax$/;"	l
ffff8000001075d8	kernel.asm	/^ffff8000001075d8:	89 c2                	mov    %eax,%edx$/;"	l
ffff8000001075da	kernel.asm	/^ffff8000001075da:	8b 45 f4             	mov    -0xc(%rbp),%eax$/;"	l
ffff8000001075dd	kernel.asm	/^ffff8000001075dd:	c1 e0 10             	shl    $0x10,%eax$/;"	l
ffff8000001075e0	kernel.asm	/^ffff8000001075e0:	09 c2                	or     %eax,%edx$/;"	l
ffff8000001075e2	kernel.asm	/^ffff8000001075e2:	8b 45 f4             	mov    -0xc(%rbp),%eax$/;"	l
ffff8000001075e5	kernel.asm	/^ffff8000001075e5:	c1 e0 08             	shl    $0x8,%eax$/;"	l
ffff8000001075e8	kernel.asm	/^ffff8000001075e8:	09 d0                	or     %edx,%eax$/;"	l
ffff8000001075ea	kernel.asm	/^ffff8000001075ea:	0b 45 f4             	or     -0xc(%rbp),%eax$/;"	l
ffff8000001075ed	kernel.asm	/^ffff8000001075ed:	89 c1                	mov    %eax,%ecx$/;"	l
ffff8000001075ef	kernel.asm	/^ffff8000001075ef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001075f3	kernel.asm	/^ffff8000001075f3:	89 f2                	mov    %esi,%edx$/;"	l
ffff8000001075f5	kernel.asm	/^ffff8000001075f5:	89 ce                	mov    %ecx,%esi$/;"	l
ffff8000001075f7	kernel.asm	/^ffff8000001075f7:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001075fa	kernel.asm	/^ffff8000001075fa:	48 b8 65 75 10 00 00 	movabs $0xffff800000107565,%rax$/;"	l
ffff800000107601	kernel.asm	/^ffff800000107601:	80 ff ff $/;"	l
ffff800000107604	kernel.asm	/^ffff800000107604:	ff d0                	callq  *%rax$/;"	l
ffff800000107606	kernel.asm	/^ffff800000107606:	eb 1b                	jmp    ffff800000107623 <memset+0x88>$/;"	l
ffff800000107608	kernel.asm	/^ffff800000107608:	8b 55 f0             	mov    -0x10(%rbp),%edx$/;"	l
ffff80000010760b	kernel.asm	/^ffff80000010760b:	8b 4d f4             	mov    -0xc(%rbp),%ecx$/;"	l
ffff80000010760e	kernel.asm	/^ffff80000010760e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000107612	kernel.asm	/^ffff800000107612:	89 ce                	mov    %ecx,%esi$/;"	l
ffff800000107614	kernel.asm	/^ffff800000107614:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000107617	kernel.asm	/^ffff800000107617:	48 b8 2f 75 10 00 00 	movabs $0xffff80000010752f,%rax$/;"	l
ffff80000010761e	kernel.asm	/^ffff80000010761e:	80 ff ff $/;"	l
ffff800000107621	kernel.asm	/^ffff800000107621:	ff d0                	callq  *%rax$/;"	l
ffff800000107623	kernel.asm	/^ffff800000107623:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000107627	kernel.asm	/^ffff800000107627:	c9                   	leaveq $/;"	l
ffff800000107628	kernel.asm	/^ffff800000107628:	c3                   	retq   $/;"	l
ffff800000107629	kernel.asm	/^ffff800000107629 <memcmp>:$/;"	l
ffff800000107629	kernel.asm	/^ffff800000107629:	55                   	push   %rbp$/;"	l
ffff80000010762a	kernel.asm	/^ffff80000010762a:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010762d	kernel.asm	/^ffff80000010762d:	48 83 ec 28          	sub    $0x28,%rsp$/;"	l
ffff800000107631	kernel.asm	/^ffff800000107631:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
ffff800000107635	kernel.asm	/^ffff800000107635:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)$/;"	l
ffff800000107639	kernel.asm	/^ffff800000107639:	89 55 dc             	mov    %edx,-0x24(%rbp)$/;"	l
ffff80000010763c	kernel.asm	/^ffff80000010763c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000107640	kernel.asm	/^ffff800000107640:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff800000107644	kernel.asm	/^ffff800000107644:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff800000107648	kernel.asm	/^ffff800000107648:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ffff80000010764c	kernel.asm	/^ffff80000010764c:	eb 36                	jmp    ffff800000107684 <memcmp+0x5b>$/;"	l
ffff80000010764e	kernel.asm	/^ffff80000010764e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000107652	kernel.asm	/^ffff800000107652:	0f b6 10             	movzbl (%rax),%edx$/;"	l
ffff800000107655	kernel.asm	/^ffff800000107655:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000107659	kernel.asm	/^ffff800000107659:	0f b6 00             	movzbl (%rax),%eax$/;"	l
ffff80000010765c	kernel.asm	/^ffff80000010765c:	38 c2                	cmp    %al,%dl$/;"	l
ffff80000010765e	kernel.asm	/^ffff80000010765e:	74 1a                	je     ffff80000010767a <memcmp+0x51>$/;"	l
ffff800000107660	kernel.asm	/^ffff800000107660:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000107664	kernel.asm	/^ffff800000107664:	0f b6 00             	movzbl (%rax),%eax$/;"	l
ffff800000107667	kernel.asm	/^ffff800000107667:	0f b6 d0             	movzbl %al,%edx$/;"	l
ffff80000010766a	kernel.asm	/^ffff80000010766a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff80000010766e	kernel.asm	/^ffff80000010766e:	0f b6 00             	movzbl (%rax),%eax$/;"	l
ffff800000107671	kernel.asm	/^ffff800000107671:	0f b6 c0             	movzbl %al,%eax$/;"	l
ffff800000107674	kernel.asm	/^ffff800000107674:	29 c2                	sub    %eax,%edx$/;"	l
ffff800000107676	kernel.asm	/^ffff800000107676:	89 d0                	mov    %edx,%eax$/;"	l
ffff800000107678	kernel.asm	/^ffff800000107678:	eb 1c                	jmp    ffff800000107696 <memcmp+0x6d>$/;"	l
ffff80000010767a	kernel.asm	/^ffff80000010767a:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)$/;"	l
ffff80000010767f	kernel.asm	/^ffff80000010767f:	48 83 45 f0 01       	addq   $0x1,-0x10(%rbp)$/;"	l
ffff800000107684	kernel.asm	/^ffff800000107684:	8b 45 dc             	mov    -0x24(%rbp),%eax$/;"	l
ffff800000107687	kernel.asm	/^ffff800000107687:	8d 50 ff             	lea    -0x1(%rax),%edx$/;"	l
ffff80000010768a	kernel.asm	/^ffff80000010768a:	89 55 dc             	mov    %edx,-0x24(%rbp)$/;"	l
ffff80000010768d	kernel.asm	/^ffff80000010768d:	85 c0                	test   %eax,%eax$/;"	l
ffff80000010768f	kernel.asm	/^ffff80000010768f:	75 bd                	jne    ffff80000010764e <memcmp+0x25>$/;"	l
ffff800000107691	kernel.asm	/^ffff800000107691:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000107696	kernel.asm	/^ffff800000107696:	c9                   	leaveq $/;"	l
ffff800000107697	kernel.asm	/^ffff800000107697:	c3                   	retq   $/;"	l
ffff800000107698	kernel.asm	/^ffff800000107698 <memmove>:$/;"	l
ffff800000107698	kernel.asm	/^ffff800000107698:	55                   	push   %rbp$/;"	l
ffff800000107699	kernel.asm	/^ffff800000107699:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010769c	kernel.asm	/^ffff80000010769c:	48 83 ec 28          	sub    $0x28,%rsp$/;"	l
ffff8000001076a0	kernel.asm	/^ffff8000001076a0:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
ffff8000001076a4	kernel.asm	/^ffff8000001076a4:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)$/;"	l
ffff8000001076a8	kernel.asm	/^ffff8000001076a8:	89 55 dc             	mov    %edx,-0x24(%rbp)$/;"	l
ffff8000001076ab	kernel.asm	/^ffff8000001076ab:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff8000001076af	kernel.asm	/^ffff8000001076af:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff8000001076b3	kernel.asm	/^ffff8000001076b3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff8000001076b7	kernel.asm	/^ffff8000001076b7:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ffff8000001076bb	kernel.asm	/^ffff8000001076bb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001076bf	kernel.asm	/^ffff8000001076bf:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax$/;"	l
ffff8000001076c3	kernel.asm	/^ffff8000001076c3:	73 63                	jae    ffff800000107728 <memmove+0x90>$/;"	l
ffff8000001076c5	kernel.asm	/^ffff8000001076c5:	8b 55 dc             	mov    -0x24(%rbp),%edx$/;"	l
ffff8000001076c8	kernel.asm	/^ffff8000001076c8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001076cc	kernel.asm	/^ffff8000001076cc:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff8000001076cf	kernel.asm	/^ffff8000001076cf:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax$/;"	l
ffff8000001076d3	kernel.asm	/^ffff8000001076d3:	76 53                	jbe    ffff800000107728 <memmove+0x90>$/;"	l
ffff8000001076d5	kernel.asm	/^ffff8000001076d5:	8b 45 dc             	mov    -0x24(%rbp),%eax$/;"	l
ffff8000001076d8	kernel.asm	/^ffff8000001076d8:	48 01 45 f8          	add    %rax,-0x8(%rbp)$/;"	l
ffff8000001076dc	kernel.asm	/^ffff8000001076dc:	8b 45 dc             	mov    -0x24(%rbp),%eax$/;"	l
ffff8000001076df	kernel.asm	/^ffff8000001076df:	48 01 45 f0          	add    %rax,-0x10(%rbp)$/;"	l
ffff8000001076e3	kernel.asm	/^ffff8000001076e3:	eb 17                	jmp    ffff8000001076fc <memmove+0x64>$/;"	l
ffff8000001076e5	kernel.asm	/^ffff8000001076e5:	48 83 6d f0 01       	subq   $0x1,-0x10(%rbp)$/;"	l
ffff8000001076ea	kernel.asm	/^ffff8000001076ea:	48 83 6d f8 01       	subq   $0x1,-0x8(%rbp)$/;"	l
ffff8000001076ef	kernel.asm	/^ffff8000001076ef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001076f3	kernel.asm	/^ffff8000001076f3:	0f b6 10             	movzbl (%rax),%edx$/;"	l
ffff8000001076f6	kernel.asm	/^ffff8000001076f6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff8000001076fa	kernel.asm	/^ffff8000001076fa:	88 10                	mov    %dl,(%rax)$/;"	l
ffff8000001076fc	kernel.asm	/^ffff8000001076fc:	8b 45 dc             	mov    -0x24(%rbp),%eax$/;"	l
ffff8000001076ff	kernel.asm	/^ffff8000001076ff:	8d 50 ff             	lea    -0x1(%rax),%edx$/;"	l
ffff800000107702	kernel.asm	/^ffff800000107702:	89 55 dc             	mov    %edx,-0x24(%rbp)$/;"	l
ffff800000107705	kernel.asm	/^ffff800000107705:	85 c0                	test   %eax,%eax$/;"	l
ffff800000107707	kernel.asm	/^ffff800000107707:	75 dc                	jne    ffff8000001076e5 <memmove+0x4d>$/;"	l
ffff800000107709	kernel.asm	/^ffff800000107709:	eb 2a                	jmp    ffff800000107735 <memmove+0x9d>$/;"	l
ffff80000010770b	kernel.asm	/^ffff80000010770b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff80000010770f	kernel.asm	/^ffff80000010770f:	48 8d 50 01          	lea    0x1(%rax),%rdx$/;"	l
ffff800000107713	kernel.asm	/^ffff800000107713:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)$/;"	l
ffff800000107717	kernel.asm	/^ffff800000107717:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx$/;"	l
ffff80000010771b	kernel.asm	/^ffff80000010771b:	48 8d 4a 01          	lea    0x1(%rdx),%rcx$/;"	l
ffff80000010771f	kernel.asm	/^ffff80000010771f:	48 89 4d f8          	mov    %rcx,-0x8(%rbp)$/;"	l
ffff800000107723	kernel.asm	/^ffff800000107723:	0f b6 12             	movzbl (%rdx),%edx$/;"	l
ffff800000107726	kernel.asm	/^ffff800000107726:	88 10                	mov    %dl,(%rax)$/;"	l
ffff800000107728	kernel.asm	/^ffff800000107728:	8b 45 dc             	mov    -0x24(%rbp),%eax$/;"	l
ffff80000010772b	kernel.asm	/^ffff80000010772b:	8d 50 ff             	lea    -0x1(%rax),%edx$/;"	l
ffff80000010772e	kernel.asm	/^ffff80000010772e:	89 55 dc             	mov    %edx,-0x24(%rbp)$/;"	l
ffff800000107731	kernel.asm	/^ffff800000107731:	85 c0                	test   %eax,%eax$/;"	l
ffff800000107733	kernel.asm	/^ffff800000107733:	75 d6                	jne    ffff80000010770b <memmove+0x73>$/;"	l
ffff800000107735	kernel.asm	/^ffff800000107735:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000107739	kernel.asm	/^ffff800000107739:	c9                   	leaveq $/;"	l
ffff80000010773a	kernel.asm	/^ffff80000010773a:	c3                   	retq   $/;"	l
ffff80000010773b	kernel.asm	/^ffff80000010773b <memcpy>:$/;"	l
ffff80000010773b	kernel.asm	/^ffff80000010773b:	55                   	push   %rbp$/;"	l
ffff80000010773c	kernel.asm	/^ffff80000010773c:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010773f	kernel.asm	/^ffff80000010773f:	48 83 ec 18          	sub    $0x18,%rsp$/;"	l
ffff800000107743	kernel.asm	/^ffff800000107743:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)$/;"	l
ffff800000107747	kernel.asm	/^ffff800000107747:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)$/;"	l
ffff80000010774b	kernel.asm	/^ffff80000010774b:	89 55 ec             	mov    %edx,-0x14(%rbp)$/;"	l
ffff80000010774e	kernel.asm	/^ffff80000010774e:	8b 55 ec             	mov    -0x14(%rbp),%edx$/;"	l
ffff800000107751	kernel.asm	/^ffff800000107751:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx$/;"	l
ffff800000107755	kernel.asm	/^ffff800000107755:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000107759	kernel.asm	/^ffff800000107759:	48 89 ce             	mov    %rcx,%rsi$/;"	l
ffff80000010775c	kernel.asm	/^ffff80000010775c:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010775f	kernel.asm	/^ffff80000010775f:	48 b8 98 76 10 00 00 	movabs $0xffff800000107698,%rax$/;"	l
ffff800000107766	kernel.asm	/^ffff800000107766:	80 ff ff $/;"	l
ffff800000107769	kernel.asm	/^ffff800000107769:	ff d0                	callq  *%rax$/;"	l
ffff80000010776b	kernel.asm	/^ffff80000010776b:	c9                   	leaveq $/;"	l
ffff80000010776c	kernel.asm	/^ffff80000010776c:	c3                   	retq   $/;"	l
ffff80000010776d	kernel.asm	/^ffff80000010776d <strncmp>:$/;"	l
ffff80000010776d	kernel.asm	/^ffff80000010776d:	55                   	push   %rbp$/;"	l
ffff80000010776e	kernel.asm	/^ffff80000010776e:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000107771	kernel.asm	/^ffff800000107771:	48 83 ec 18          	sub    $0x18,%rsp$/;"	l
ffff800000107775	kernel.asm	/^ffff800000107775:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)$/;"	l
ffff800000107779	kernel.asm	/^ffff800000107779:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)$/;"	l
ffff80000010777d	kernel.asm	/^ffff80000010777d:	89 55 ec             	mov    %edx,-0x14(%rbp)$/;"	l
ffff800000107780	kernel.asm	/^ffff800000107780:	eb 0e                	jmp    ffff800000107790 <strncmp+0x23>$/;"	l
ffff800000107782	kernel.asm	/^ffff800000107782:	83 6d ec 01          	subl   $0x1,-0x14(%rbp)$/;"	l
ffff800000107786	kernel.asm	/^ffff800000107786:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)$/;"	l
ffff80000010778b	kernel.asm	/^ffff80000010778b:	48 83 45 f0 01       	addq   $0x1,-0x10(%rbp)$/;"	l
ffff800000107790	kernel.asm	/^ffff800000107790:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)$/;"	l
ffff800000107794	kernel.asm	/^ffff800000107794:	74 1d                	je     ffff8000001077b3 <strncmp+0x46>$/;"	l
ffff800000107796	kernel.asm	/^ffff800000107796:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010779a	kernel.asm	/^ffff80000010779a:	0f b6 00             	movzbl (%rax),%eax$/;"	l
ffff80000010779d	kernel.asm	/^ffff80000010779d:	84 c0                	test   %al,%al$/;"	l
ffff80000010779f	kernel.asm	/^ffff80000010779f:	74 12                	je     ffff8000001077b3 <strncmp+0x46>$/;"	l
ffff8000001077a1	kernel.asm	/^ffff8000001077a1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001077a5	kernel.asm	/^ffff8000001077a5:	0f b6 10             	movzbl (%rax),%edx$/;"	l
ffff8000001077a8	kernel.asm	/^ffff8000001077a8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff8000001077ac	kernel.asm	/^ffff8000001077ac:	0f b6 00             	movzbl (%rax),%eax$/;"	l
ffff8000001077af	kernel.asm	/^ffff8000001077af:	38 c2                	cmp    %al,%dl$/;"	l
ffff8000001077b1	kernel.asm	/^ffff8000001077b1:	74 cf                	je     ffff800000107782 <strncmp+0x15>$/;"	l
ffff8000001077b3	kernel.asm	/^ffff8000001077b3:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)$/;"	l
ffff8000001077b7	kernel.asm	/^ffff8000001077b7:	75 07                	jne    ffff8000001077c0 <strncmp+0x53>$/;"	l
ffff8000001077b9	kernel.asm	/^ffff8000001077b9:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff8000001077be	kernel.asm	/^ffff8000001077be:	eb 18                	jmp    ffff8000001077d8 <strncmp+0x6b>$/;"	l
ffff8000001077c0	kernel.asm	/^ffff8000001077c0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001077c4	kernel.asm	/^ffff8000001077c4:	0f b6 00             	movzbl (%rax),%eax$/;"	l
ffff8000001077c7	kernel.asm	/^ffff8000001077c7:	0f b6 d0             	movzbl %al,%edx$/;"	l
ffff8000001077ca	kernel.asm	/^ffff8000001077ca:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff8000001077ce	kernel.asm	/^ffff8000001077ce:	0f b6 00             	movzbl (%rax),%eax$/;"	l
ffff8000001077d1	kernel.asm	/^ffff8000001077d1:	0f b6 c0             	movzbl %al,%eax$/;"	l
ffff8000001077d4	kernel.asm	/^ffff8000001077d4:	29 c2                	sub    %eax,%edx$/;"	l
ffff8000001077d6	kernel.asm	/^ffff8000001077d6:	89 d0                	mov    %edx,%eax$/;"	l
ffff8000001077d8	kernel.asm	/^ffff8000001077d8:	c9                   	leaveq $/;"	l
ffff8000001077d9	kernel.asm	/^ffff8000001077d9:	c3                   	retq   $/;"	l
ffff8000001077da	kernel.asm	/^ffff8000001077da <strncpy>:$/;"	l
ffff8000001077da	kernel.asm	/^ffff8000001077da:	55                   	push   %rbp$/;"	l
ffff8000001077db	kernel.asm	/^ffff8000001077db:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff8000001077de	kernel.asm	/^ffff8000001077de:	48 83 ec 28          	sub    $0x28,%rsp$/;"	l
ffff8000001077e2	kernel.asm	/^ffff8000001077e2:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
ffff8000001077e6	kernel.asm	/^ffff8000001077e6:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)$/;"	l
ffff8000001077ea	kernel.asm	/^ffff8000001077ea:	89 55 dc             	mov    %edx,-0x24(%rbp)$/;"	l
ffff8000001077ed	kernel.asm	/^ffff8000001077ed:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff8000001077f1	kernel.asm	/^ffff8000001077f1:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff8000001077f5	kernel.asm	/^ffff8000001077f5:	90                   	nop$/;"	l
ffff8000001077f6	kernel.asm	/^ffff8000001077f6:	8b 45 dc             	mov    -0x24(%rbp),%eax$/;"	l
ffff8000001077f9	kernel.asm	/^ffff8000001077f9:	8d 50 ff             	lea    -0x1(%rax),%edx$/;"	l
ffff8000001077fc	kernel.asm	/^ffff8000001077fc:	89 55 dc             	mov    %edx,-0x24(%rbp)$/;"	l
ffff8000001077ff	kernel.asm	/^ffff8000001077ff:	85 c0                	test   %eax,%eax$/;"	l
ffff800000107801	kernel.asm	/^ffff800000107801:	7e 35                	jle    ffff800000107838 <strncpy+0x5e>$/;"	l
ffff800000107803	kernel.asm	/^ffff800000107803:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000107807	kernel.asm	/^ffff800000107807:	48 8d 50 01          	lea    0x1(%rax),%rdx$/;"	l
ffff80000010780b	kernel.asm	/^ffff80000010780b:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)$/;"	l
ffff80000010780f	kernel.asm	/^ffff80000010780f:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx$/;"	l
ffff800000107813	kernel.asm	/^ffff800000107813:	48 8d 4a 01          	lea    0x1(%rdx),%rcx$/;"	l
ffff800000107817	kernel.asm	/^ffff800000107817:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)$/;"	l
ffff80000010781b	kernel.asm	/^ffff80000010781b:	0f b6 12             	movzbl (%rdx),%edx$/;"	l
ffff80000010781e	kernel.asm	/^ffff80000010781e:	88 10                	mov    %dl,(%rax)$/;"	l
ffff800000107820	kernel.asm	/^ffff800000107820:	0f b6 00             	movzbl (%rax),%eax$/;"	l
ffff800000107823	kernel.asm	/^ffff800000107823:	84 c0                	test   %al,%al$/;"	l
ffff800000107825	kernel.asm	/^ffff800000107825:	75 cf                	jne    ffff8000001077f6 <strncpy+0x1c>$/;"	l
ffff800000107827	kernel.asm	/^ffff800000107827:	eb 0f                	jmp    ffff800000107838 <strncpy+0x5e>$/;"	l
ffff800000107829	kernel.asm	/^ffff800000107829:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010782d	kernel.asm	/^ffff80000010782d:	48 8d 50 01          	lea    0x1(%rax),%rdx$/;"	l
ffff800000107831	kernel.asm	/^ffff800000107831:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)$/;"	l
ffff800000107835	kernel.asm	/^ffff800000107835:	c6 00 00             	movb   $0x0,(%rax)$/;"	l
ffff800000107838	kernel.asm	/^ffff800000107838:	8b 45 dc             	mov    -0x24(%rbp),%eax$/;"	l
ffff80000010783b	kernel.asm	/^ffff80000010783b:	8d 50 ff             	lea    -0x1(%rax),%edx$/;"	l
ffff80000010783e	kernel.asm	/^ffff80000010783e:	89 55 dc             	mov    %edx,-0x24(%rbp)$/;"	l
ffff800000107841	kernel.asm	/^ffff800000107841:	85 c0                	test   %eax,%eax$/;"	l
ffff800000107843	kernel.asm	/^ffff800000107843:	7f e4                	jg     ffff800000107829 <strncpy+0x4f>$/;"	l
ffff800000107845	kernel.asm	/^ffff800000107845:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000107849	kernel.asm	/^ffff800000107849:	c9                   	leaveq $/;"	l
ffff80000010784a	kernel.asm	/^ffff80000010784a:	c3                   	retq   $/;"	l
ffff80000010784b	kernel.asm	/^ffff80000010784b <safestrcpy>:$/;"	l
ffff80000010784b	kernel.asm	/^ffff80000010784b:	55                   	push   %rbp$/;"	l
ffff80000010784c	kernel.asm	/^ffff80000010784c:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010784f	kernel.asm	/^ffff80000010784f:	48 83 ec 28          	sub    $0x28,%rsp$/;"	l
ffff800000107853	kernel.asm	/^ffff800000107853:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
ffff800000107857	kernel.asm	/^ffff800000107857:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)$/;"	l
ffff80000010785b	kernel.asm	/^ffff80000010785b:	89 55 dc             	mov    %edx,-0x24(%rbp)$/;"	l
ffff80000010785e	kernel.asm	/^ffff80000010785e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000107862	kernel.asm	/^ffff800000107862:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff800000107866	kernel.asm	/^ffff800000107866:	83 7d dc 00          	cmpl   $0x0,-0x24(%rbp)$/;"	l
ffff80000010786a	kernel.asm	/^ffff80000010786a:	7f 06                	jg     ffff800000107872 <safestrcpy+0x27>$/;"	l
ffff80000010786c	kernel.asm	/^ffff80000010786c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000107870	kernel.asm	/^ffff800000107870:	eb 39                	jmp    ffff8000001078ab <safestrcpy+0x60>$/;"	l
ffff800000107872	kernel.asm	/^ffff800000107872:	83 6d dc 01          	subl   $0x1,-0x24(%rbp)$/;"	l
ffff800000107876	kernel.asm	/^ffff800000107876:	83 7d dc 00          	cmpl   $0x0,-0x24(%rbp)$/;"	l
ffff80000010787a	kernel.asm	/^ffff80000010787a:	7e 24                	jle    ffff8000001078a0 <safestrcpy+0x55>$/;"	l
ffff80000010787c	kernel.asm	/^ffff80000010787c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000107880	kernel.asm	/^ffff800000107880:	48 8d 50 01          	lea    0x1(%rax),%rdx$/;"	l
ffff800000107884	kernel.asm	/^ffff800000107884:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)$/;"	l
ffff800000107888	kernel.asm	/^ffff800000107888:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx$/;"	l
ffff80000010788c	kernel.asm	/^ffff80000010788c:	48 8d 4a 01          	lea    0x1(%rdx),%rcx$/;"	l
ffff800000107890	kernel.asm	/^ffff800000107890:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)$/;"	l
ffff800000107894	kernel.asm	/^ffff800000107894:	0f b6 12             	movzbl (%rdx),%edx$/;"	l
ffff800000107897	kernel.asm	/^ffff800000107897:	88 10                	mov    %dl,(%rax)$/;"	l
ffff800000107899	kernel.asm	/^ffff800000107899:	0f b6 00             	movzbl (%rax),%eax$/;"	l
ffff80000010789c	kernel.asm	/^ffff80000010789c:	84 c0                	test   %al,%al$/;"	l
ffff80000010789e	kernel.asm	/^ffff80000010789e:	75 d2                	jne    ffff800000107872 <safestrcpy+0x27>$/;"	l
ffff8000001078a0	kernel.asm	/^ffff8000001078a0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff8000001078a4	kernel.asm	/^ffff8000001078a4:	c6 00 00             	movb   $0x0,(%rax)$/;"	l
ffff8000001078a7	kernel.asm	/^ffff8000001078a7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001078ab	kernel.asm	/^ffff8000001078ab:	c9                   	leaveq $/;"	l
ffff8000001078ac	kernel.asm	/^ffff8000001078ac:	c3                   	retq   $/;"	l
ffff8000001078ad	kernel.asm	/^ffff8000001078ad <strlen>:$/;"	l
ffff8000001078ad	kernel.asm	/^ffff8000001078ad:	55                   	push   %rbp$/;"	l
ffff8000001078ae	kernel.asm	/^ffff8000001078ae:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff8000001078b1	kernel.asm	/^ffff8000001078b1:	48 83 ec 18          	sub    $0x18,%rsp$/;"	l
ffff8000001078b5	kernel.asm	/^ffff8000001078b5:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
ffff8000001078b9	kernel.asm	/^ffff8000001078b9:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)$/;"	l
ffff8000001078c0	kernel.asm	/^ffff8000001078c0:	eb 04                	jmp    ffff8000001078c6 <strlen+0x19>$/;"	l
ffff8000001078c2	kernel.asm	/^ffff8000001078c2:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)$/;"	l
ffff8000001078c6	kernel.asm	/^ffff8000001078c6:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff8000001078c9	kernel.asm	/^ffff8000001078c9:	48 63 d0             	movslq %eax,%rdx$/;"	l
ffff8000001078cc	kernel.asm	/^ffff8000001078cc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff8000001078d0	kernel.asm	/^ffff8000001078d0:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff8000001078d3	kernel.asm	/^ffff8000001078d3:	0f b6 00             	movzbl (%rax),%eax$/;"	l
ffff8000001078d6	kernel.asm	/^ffff8000001078d6:	84 c0                	test   %al,%al$/;"	l
ffff8000001078d8	kernel.asm	/^ffff8000001078d8:	75 e8                	jne    ffff8000001078c2 <strlen+0x15>$/;"	l
ffff8000001078da	kernel.asm	/^ffff8000001078da:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff8000001078dd	kernel.asm	/^ffff8000001078dd:	c9                   	leaveq $/;"	l
ffff8000001078de	kernel.asm	/^ffff8000001078de:	c3                   	retq   $/;"	l
ffff8000001078df	kernel.asm	/^ffff8000001078df <swtch>:$/;"	l
ffff8000001078df	kernel.asm	/^ffff8000001078df:	55                   	push   %rbp$/;"	l
ffff8000001078e0	kernel.asm	/^ffff8000001078e0:	53                   	push   %rbx$/;"	l
ffff8000001078e1	kernel.asm	/^ffff8000001078e1:	41 53                	push   %r11$/;"	l
ffff8000001078e3	kernel.asm	/^ffff8000001078e3:	41 54                	push   %r12$/;"	l
ffff8000001078e5	kernel.asm	/^ffff8000001078e5:	41 55                	push   %r13$/;"	l
ffff8000001078e7	kernel.asm	/^ffff8000001078e7:	41 56                	push   %r14$/;"	l
ffff8000001078e9	kernel.asm	/^ffff8000001078e9:	41 57                	push   %r15$/;"	l
ffff8000001078eb	kernel.asm	/^ffff8000001078eb:	48 89 27             	mov    %rsp,(%rdi)$/;"	l
ffff8000001078ee	kernel.asm	/^ffff8000001078ee:	48 89 f4             	mov    %rsi,%rsp$/;"	l
ffff8000001078f1	kernel.asm	/^ffff8000001078f1:	41 5f                	pop    %r15$/;"	l
ffff8000001078f3	kernel.asm	/^ffff8000001078f3:	41 5e                	pop    %r14$/;"	l
ffff8000001078f5	kernel.asm	/^ffff8000001078f5:	41 5d                	pop    %r13$/;"	l
ffff8000001078f7	kernel.asm	/^ffff8000001078f7:	41 5c                	pop    %r12$/;"	l
ffff8000001078f9	kernel.asm	/^ffff8000001078f9:	41 5b                	pop    %r11$/;"	l
ffff8000001078fb	kernel.asm	/^ffff8000001078fb:	5b                   	pop    %rbx$/;"	l
ffff8000001078fc	kernel.asm	/^ffff8000001078fc:	5d                   	pop    %rbp$/;"	l
ffff8000001078fd	kernel.asm	/^ffff8000001078fd:	c3                   	retq   $/;"	l
ffff8000001078fe	kernel.asm	/^ffff8000001078fe <fetchint>:$/;"	l
ffff8000001078fe	kernel.asm	/^ffff8000001078fe:	55                   	push   %rbp$/;"	l
ffff8000001078ff	kernel.asm	/^ffff8000001078ff:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000107902	kernel.asm	/^ffff800000107902:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff800000107906	kernel.asm	/^ffff800000107906:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)$/;"	l
ffff80000010790a	kernel.asm	/^ffff80000010790a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)$/;"	l
ffff80000010790e	kernel.asm	/^ffff80000010790e:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000107915	kernel.asm	/^ffff800000107915:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000107919	kernel.asm	/^ffff800000107919:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff80000010791c	kernel.asm	/^ffff80000010791c:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax$/;"	l
ffff800000107920	kernel.asm	/^ffff800000107920:	76 1b                	jbe    ffff80000010793d <fetchint+0x3f>$/;"	l
ffff800000107922	kernel.asm	/^ffff800000107922:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000107926	kernel.asm	/^ffff800000107926:	48 8d 50 04          	lea    0x4(%rax),%rdx$/;"	l
ffff80000010792a	kernel.asm	/^ffff80000010792a:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000107931	kernel.asm	/^ffff800000107931:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000107935	kernel.asm	/^ffff800000107935:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff800000107938	kernel.asm	/^ffff800000107938:	48 39 c2             	cmp    %rax,%rdx$/;"	l
ffff80000010793b	kernel.asm	/^ffff80000010793b:	76 07                	jbe    ffff800000107944 <fetchint+0x46>$/;"	l
ffff80000010793d	kernel.asm	/^ffff80000010793d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff800000107942	kernel.asm	/^ffff800000107942:	eb 11                	jmp    ffff800000107955 <fetchint+0x57>$/;"	l
ffff800000107944	kernel.asm	/^ffff800000107944:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000107948	kernel.asm	/^ffff800000107948:	8b 10                	mov    (%rax),%edx$/;"	l
ffff80000010794a	kernel.asm	/^ffff80000010794a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff80000010794e	kernel.asm	/^ffff80000010794e:	89 10                	mov    %edx,(%rax)$/;"	l
ffff800000107950	kernel.asm	/^ffff800000107950:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000107955	kernel.asm	/^ffff800000107955:	c9                   	leaveq $/;"	l
ffff800000107956	kernel.asm	/^ffff800000107956:	c3                   	retq   $/;"	l
ffff800000107957	kernel.asm	/^ffff800000107957 <fetchaddr>:$/;"	l
ffff800000107957	kernel.asm	/^ffff800000107957:	55                   	push   %rbp$/;"	l
ffff800000107958	kernel.asm	/^ffff800000107958:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010795b	kernel.asm	/^ffff80000010795b:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff80000010795f	kernel.asm	/^ffff80000010795f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)$/;"	l
ffff800000107963	kernel.asm	/^ffff800000107963:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)$/;"	l
ffff800000107967	kernel.asm	/^ffff800000107967:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff80000010796e	kernel.asm	/^ffff80000010796e:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000107972	kernel.asm	/^ffff800000107972:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff800000107975	kernel.asm	/^ffff800000107975:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax$/;"	l
ffff800000107979	kernel.asm	/^ffff800000107979:	76 1b                	jbe    ffff800000107996 <fetchaddr+0x3f>$/;"	l
ffff80000010797b	kernel.asm	/^ffff80000010797b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010797f	kernel.asm	/^ffff80000010797f:	48 8d 50 08          	lea    0x8(%rax),%rdx$/;"	l
ffff800000107983	kernel.asm	/^ffff800000107983:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff80000010798a	kernel.asm	/^ffff80000010798a:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff80000010798e	kernel.asm	/^ffff80000010798e:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff800000107991	kernel.asm	/^ffff800000107991:	48 39 c2             	cmp    %rax,%rdx$/;"	l
ffff800000107994	kernel.asm	/^ffff800000107994:	76 07                	jbe    ffff80000010799d <fetchaddr+0x46>$/;"	l
ffff800000107996	kernel.asm	/^ffff800000107996:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff80000010799b	kernel.asm	/^ffff80000010799b:	eb 13                	jmp    ffff8000001079b0 <fetchaddr+0x59>$/;"	l
ffff80000010799d	kernel.asm	/^ffff80000010799d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001079a1	kernel.asm	/^ffff8000001079a1:	48 8b 10             	mov    (%rax),%rdx$/;"	l
ffff8000001079a4	kernel.asm	/^ffff8000001079a4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff8000001079a8	kernel.asm	/^ffff8000001079a8:	48 89 10             	mov    %rdx,(%rax)$/;"	l
ffff8000001079ab	kernel.asm	/^ffff8000001079ab:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff8000001079b0	kernel.asm	/^ffff8000001079b0:	c9                   	leaveq $/;"	l
ffff8000001079b1	kernel.asm	/^ffff8000001079b1:	c3                   	retq   $/;"	l
ffff8000001079b2	kernel.asm	/^ffff8000001079b2 <fetchstr>:$/;"	l
ffff8000001079b2	kernel.asm	/^ffff8000001079b2:	55                   	push   %rbp$/;"	l
ffff8000001079b3	kernel.asm	/^ffff8000001079b3:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff8000001079b6	kernel.asm	/^ffff8000001079b6:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ffff8000001079ba	kernel.asm	/^ffff8000001079ba:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
ffff8000001079be	kernel.asm	/^ffff8000001079be:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)$/;"	l
ffff8000001079c2	kernel.asm	/^ffff8000001079c2:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff8000001079c9	kernel.asm	/^ffff8000001079c9:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff8000001079cd	kernel.asm	/^ffff8000001079cd:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff8000001079d0	kernel.asm	/^ffff8000001079d0:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax$/;"	l
ffff8000001079d4	kernel.asm	/^ffff8000001079d4:	77 07                	ja     ffff8000001079dd <fetchstr+0x2b>$/;"	l
ffff8000001079d6	kernel.asm	/^ffff8000001079d6:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff8000001079db	kernel.asm	/^ffff8000001079db:	eb 5c                	jmp    ffff800000107a39 <fetchstr+0x87>$/;"	l
ffff8000001079dd	kernel.asm	/^ffff8000001079dd:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx$/;"	l
ffff8000001079e1	kernel.asm	/^ffff8000001079e1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff8000001079e5	kernel.asm	/^ffff8000001079e5:	48 89 10             	mov    %rdx,(%rax)$/;"	l
ffff8000001079e8	kernel.asm	/^ffff8000001079e8:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff8000001079ef	kernel.asm	/^ffff8000001079ef:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff8000001079f3	kernel.asm	/^ffff8000001079f3:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff8000001079f6	kernel.asm	/^ffff8000001079f6:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ffff8000001079fa	kernel.asm	/^ffff8000001079fa:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff8000001079fe	kernel.asm	/^ffff8000001079fe:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff800000107a01	kernel.asm	/^ffff800000107a01:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff800000107a05	kernel.asm	/^ffff800000107a05:	eb 23                	jmp    ffff800000107a2a <fetchstr+0x78>$/;"	l
ffff800000107a07	kernel.asm	/^ffff800000107a07:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000107a0b	kernel.asm	/^ffff800000107a0b:	0f b6 00             	movzbl (%rax),%eax$/;"	l
ffff800000107a0e	kernel.asm	/^ffff800000107a0e:	84 c0                	test   %al,%al$/;"	l
ffff800000107a10	kernel.asm	/^ffff800000107a10:	75 13                	jne    ffff800000107a25 <fetchstr+0x73>$/;"	l
ffff800000107a12	kernel.asm	/^ffff800000107a12:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx$/;"	l
ffff800000107a16	kernel.asm	/^ffff800000107a16:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff800000107a1a	kernel.asm	/^ffff800000107a1a:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff800000107a1d	kernel.asm	/^ffff800000107a1d:	48 29 c2             	sub    %rax,%rdx$/;"	l
ffff800000107a20	kernel.asm	/^ffff800000107a20:	48 89 d0             	mov    %rdx,%rax$/;"	l
ffff800000107a23	kernel.asm	/^ffff800000107a23:	eb 14                	jmp    ffff800000107a39 <fetchstr+0x87>$/;"	l
ffff800000107a25	kernel.asm	/^ffff800000107a25:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)$/;"	l
ffff800000107a2a	kernel.asm	/^ffff800000107a2a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000107a2e	kernel.asm	/^ffff800000107a2e:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax$/;"	l
ffff800000107a32	kernel.asm	/^ffff800000107a32:	72 d3                	jb     ffff800000107a07 <fetchstr+0x55>$/;"	l
ffff800000107a34	kernel.asm	/^ffff800000107a34:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff800000107a39	kernel.asm	/^ffff800000107a39:	c9                   	leaveq $/;"	l
ffff800000107a3a	kernel.asm	/^ffff800000107a3a:	c3                   	retq   $/;"	l
ffff800000107a3b	kernel.asm	/^ffff800000107a3b <fetcharg>:$/;"	l
ffff800000107a3b	kernel.asm	/^ffff800000107a3b:	55                   	push   %rbp$/;"	l
ffff800000107a3c	kernel.asm	/^ffff800000107a3c:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000107a3f	kernel.asm	/^ffff800000107a3f:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff800000107a43	kernel.asm	/^ffff800000107a43:	89 7d fc             	mov    %edi,-0x4(%rbp)$/;"	l
ffff800000107a46	kernel.asm	/^ffff800000107a46:	83 7d fc 05          	cmpl   $0x5,-0x4(%rbp)$/;"	l
ffff800000107a4a	kernel.asm	/^ffff800000107a4a:	0f 87 9b 00 00 00    	ja     ffff800000107aeb <fetcharg+0xb0>$/;"	l
ffff800000107a50	kernel.asm	/^ffff800000107a50:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff800000107a53	kernel.asm	/^ffff800000107a53:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx$/;"	l
ffff800000107a5a	kernel.asm	/^ffff800000107a5a:	00 $/;"	l
ffff800000107a5b	kernel.asm	/^ffff800000107a5b:	48 b8 a0 be 10 00 00 	movabs $0xffff80000010bea0,%rax$/;"	l
ffff800000107a62	kernel.asm	/^ffff800000107a62:	80 ff ff $/;"	l
ffff800000107a65	kernel.asm	/^ffff800000107a65:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff800000107a68	kernel.asm	/^ffff800000107a68:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff800000107a6b	kernel.asm	/^ffff800000107a6b:	ff e0                	jmpq   *%rax$/;"	l
ffff800000107a6d	kernel.asm	/^ffff800000107a6d:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000107a74	kernel.asm	/^ffff800000107a74:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000107a78	kernel.asm	/^ffff800000107a78:	48 8b 40 28          	mov    0x28(%rax),%rax$/;"	l
ffff800000107a7c	kernel.asm	/^ffff800000107a7c:	48 8b 40 30          	mov    0x30(%rax),%rax$/;"	l
ffff800000107a80	kernel.asm	/^ffff800000107a80:	eb 7f                	jmp    ffff800000107b01 <fetcharg+0xc6>$/;"	l
ffff800000107a82	kernel.asm	/^ffff800000107a82:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000107a89	kernel.asm	/^ffff800000107a89:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000107a8d	kernel.asm	/^ffff800000107a8d:	48 8b 40 28          	mov    0x28(%rax),%rax$/;"	l
ffff800000107a91	kernel.asm	/^ffff800000107a91:	48 8b 40 28          	mov    0x28(%rax),%rax$/;"	l
ffff800000107a95	kernel.asm	/^ffff800000107a95:	eb 6a                	jmp    ffff800000107b01 <fetcharg+0xc6>$/;"	l
ffff800000107a97	kernel.asm	/^ffff800000107a97:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000107a9e	kernel.asm	/^ffff800000107a9e:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000107aa2	kernel.asm	/^ffff800000107aa2:	48 8b 40 28          	mov    0x28(%rax),%rax$/;"	l
ffff800000107aa6	kernel.asm	/^ffff800000107aa6:	48 8b 40 18          	mov    0x18(%rax),%rax$/;"	l
ffff800000107aaa	kernel.asm	/^ffff800000107aaa:	eb 55                	jmp    ffff800000107b01 <fetcharg+0xc6>$/;"	l
ffff800000107aac	kernel.asm	/^ffff800000107aac:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000107ab3	kernel.asm	/^ffff800000107ab3:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000107ab7	kernel.asm	/^ffff800000107ab7:	48 8b 40 28          	mov    0x28(%rax),%rax$/;"	l
ffff800000107abb	kernel.asm	/^ffff800000107abb:	48 8b 40 48          	mov    0x48(%rax),%rax$/;"	l
ffff800000107abf	kernel.asm	/^ffff800000107abf:	eb 40                	jmp    ffff800000107b01 <fetcharg+0xc6>$/;"	l
ffff800000107ac1	kernel.asm	/^ffff800000107ac1:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000107ac8	kernel.asm	/^ffff800000107ac8:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000107acc	kernel.asm	/^ffff800000107acc:	48 8b 40 28          	mov    0x28(%rax),%rax$/;"	l
ffff800000107ad0	kernel.asm	/^ffff800000107ad0:	48 8b 40 38          	mov    0x38(%rax),%rax$/;"	l
ffff800000107ad4	kernel.asm	/^ffff800000107ad4:	eb 2b                	jmp    ffff800000107b01 <fetcharg+0xc6>$/;"	l
ffff800000107ad6	kernel.asm	/^ffff800000107ad6:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000107add	kernel.asm	/^ffff800000107add:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000107ae1	kernel.asm	/^ffff800000107ae1:	48 8b 40 28          	mov    0x28(%rax),%rax$/;"	l
ffff800000107ae5	kernel.asm	/^ffff800000107ae5:	48 8b 40 40          	mov    0x40(%rax),%rax$/;"	l
ffff800000107ae9	kernel.asm	/^ffff800000107ae9:	eb 16                	jmp    ffff800000107b01 <fetcharg+0xc6>$/;"	l
ffff800000107aeb	kernel.asm	/^ffff800000107aeb:	48 bf 90 be 10 00 00 	movabs $0xffff80000010be90,%rdi$/;"	l
ffff800000107af2	kernel.asm	/^ffff800000107af2:	80 ff ff $/;"	l
ffff800000107af5	kernel.asm	/^ffff800000107af5:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff800000107afc	kernel.asm	/^ffff800000107afc:	80 ff ff $/;"	l
ffff800000107aff	kernel.asm	/^ffff800000107aff:	ff d0                	callq  *%rax$/;"	l
ffff800000107b01	kernel.asm	/^ffff800000107b01:	c9                   	leaveq $/;"	l
ffff800000107b02	kernel.asm	/^ffff800000107b02:	c3                   	retq   $/;"	l
ffff800000107b03	kernel.asm	/^ffff800000107b03 <argint>:$/;"	l
ffff800000107b03	kernel.asm	/^ffff800000107b03:	55                   	push   %rbp$/;"	l
ffff800000107b04	kernel.asm	/^ffff800000107b04:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000107b07	kernel.asm	/^ffff800000107b07:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff800000107b0b	kernel.asm	/^ffff800000107b0b:	89 7d fc             	mov    %edi,-0x4(%rbp)$/;"	l
ffff800000107b0e	kernel.asm	/^ffff800000107b0e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)$/;"	l
ffff800000107b12	kernel.asm	/^ffff800000107b12:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff800000107b15	kernel.asm	/^ffff800000107b15:	89 c7                	mov    %eax,%edi$/;"	l
ffff800000107b17	kernel.asm	/^ffff800000107b17:	48 b8 3b 7a 10 00 00 	movabs $0xffff800000107a3b,%rax$/;"	l
ffff800000107b1e	kernel.asm	/^ffff800000107b1e:	80 ff ff $/;"	l
ffff800000107b21	kernel.asm	/^ffff800000107b21:	ff d0                	callq  *%rax$/;"	l
ffff800000107b23	kernel.asm	/^ffff800000107b23:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000107b25	kernel.asm	/^ffff800000107b25:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000107b29	kernel.asm	/^ffff800000107b29:	89 10                	mov    %edx,(%rax)$/;"	l
ffff800000107b2b	kernel.asm	/^ffff800000107b2b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000107b30	kernel.asm	/^ffff800000107b30:	c9                   	leaveq $/;"	l
ffff800000107b31	kernel.asm	/^ffff800000107b31:	c3                   	retq   $/;"	l
ffff800000107b32	kernel.asm	/^ffff800000107b32 <argaddr>:$/;"	l
ffff800000107b32	kernel.asm	/^ffff800000107b32:	55                   	push   %rbp$/;"	l
ffff800000107b33	kernel.asm	/^ffff800000107b33:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000107b36	kernel.asm	/^ffff800000107b36:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff800000107b3a	kernel.asm	/^ffff800000107b3a:	89 7d fc             	mov    %edi,-0x4(%rbp)$/;"	l
ffff800000107b3d	kernel.asm	/^ffff800000107b3d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)$/;"	l
ffff800000107b41	kernel.asm	/^ffff800000107b41:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff800000107b44	kernel.asm	/^ffff800000107b44:	89 c7                	mov    %eax,%edi$/;"	l
ffff800000107b46	kernel.asm	/^ffff800000107b46:	48 b8 3b 7a 10 00 00 	movabs $0xffff800000107a3b,%rax$/;"	l
ffff800000107b4d	kernel.asm	/^ffff800000107b4d:	80 ff ff $/;"	l
ffff800000107b50	kernel.asm	/^ffff800000107b50:	ff d0                	callq  *%rax$/;"	l
ffff800000107b52	kernel.asm	/^ffff800000107b52:	48 89 c2             	mov    %rax,%rdx$/;"	l
ffff800000107b55	kernel.asm	/^ffff800000107b55:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000107b59	kernel.asm	/^ffff800000107b59:	48 89 10             	mov    %rdx,(%rax)$/;"	l
ffff800000107b5c	kernel.asm	/^ffff800000107b5c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000107b61	kernel.asm	/^ffff800000107b61:	c9                   	leaveq $/;"	l
ffff800000107b62	kernel.asm	/^ffff800000107b62:	c3                   	retq   $/;"	l
ffff800000107b63	kernel.asm	/^ffff800000107b63 <argptr>:$/;"	l
ffff800000107b63	kernel.asm	/^ffff800000107b63:	55                   	push   %rbp$/;"	l
ffff800000107b64	kernel.asm	/^ffff800000107b64:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000107b67	kernel.asm	/^ffff800000107b67:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ffff800000107b6b	kernel.asm	/^ffff800000107b6b:	89 7d ec             	mov    %edi,-0x14(%rbp)$/;"	l
ffff800000107b6e	kernel.asm	/^ffff800000107b6e:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)$/;"	l
ffff800000107b72	kernel.asm	/^ffff800000107b72:	89 55 e8             	mov    %edx,-0x18(%rbp)$/;"	l
ffff800000107b75	kernel.asm	/^ffff800000107b75:	48 8d 55 f8          	lea    -0x8(%rbp),%rdx$/;"	l
ffff800000107b79	kernel.asm	/^ffff800000107b79:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
ffff800000107b7c	kernel.asm	/^ffff800000107b7c:	48 89 d6             	mov    %rdx,%rsi$/;"	l
ffff800000107b7f	kernel.asm	/^ffff800000107b7f:	89 c7                	mov    %eax,%edi$/;"	l
ffff800000107b81	kernel.asm	/^ffff800000107b81:	48 b8 32 7b 10 00 00 	movabs $0xffff800000107b32,%rax$/;"	l
ffff800000107b88	kernel.asm	/^ffff800000107b88:	80 ff ff $/;"	l
ffff800000107b8b	kernel.asm	/^ffff800000107b8b:	ff d0                	callq  *%rax$/;"	l
ffff800000107b8d	kernel.asm	/^ffff800000107b8d:	85 c0                	test   %eax,%eax$/;"	l
ffff800000107b8f	kernel.asm	/^ffff800000107b8f:	79 07                	jns    ffff800000107b98 <argptr+0x35>$/;"	l
ffff800000107b91	kernel.asm	/^ffff800000107b91:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff800000107b96	kernel.asm	/^ffff800000107b96:	eb 59                	jmp    ffff800000107bf1 <argptr+0x8e>$/;"	l
ffff800000107b98	kernel.asm	/^ffff800000107b98:	83 7d e8 00          	cmpl   $0x0,-0x18(%rbp)$/;"	l
ffff800000107b9c	kernel.asm	/^ffff800000107b9c:	78 39                	js     ffff800000107bd7 <argptr+0x74>$/;"	l
ffff800000107b9e	kernel.asm	/^ffff800000107b9e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000107ba2	kernel.asm	/^ffff800000107ba2:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000107ba4	kernel.asm	/^ffff800000107ba4:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000107bab	kernel.asm	/^ffff800000107bab:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000107baf	kernel.asm	/^ffff800000107baf:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff800000107bb2	kernel.asm	/^ffff800000107bb2:	48 39 c2             	cmp    %rax,%rdx$/;"	l
ffff800000107bb5	kernel.asm	/^ffff800000107bb5:	73 20                	jae    ffff800000107bd7 <argptr+0x74>$/;"	l
ffff800000107bb7	kernel.asm	/^ffff800000107bb7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000107bbb	kernel.asm	/^ffff800000107bbb:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000107bbd	kernel.asm	/^ffff800000107bbd:	8b 45 e8             	mov    -0x18(%rbp),%eax$/;"	l
ffff800000107bc0	kernel.asm	/^ffff800000107bc0:	01 d0                	add    %edx,%eax$/;"	l
ffff800000107bc2	kernel.asm	/^ffff800000107bc2:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000107bc4	kernel.asm	/^ffff800000107bc4:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000107bcb	kernel.asm	/^ffff800000107bcb:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000107bcf	kernel.asm	/^ffff800000107bcf:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff800000107bd2	kernel.asm	/^ffff800000107bd2:	48 39 c2             	cmp    %rax,%rdx$/;"	l
ffff800000107bd5	kernel.asm	/^ffff800000107bd5:	76 07                	jbe    ffff800000107bde <argptr+0x7b>$/;"	l
ffff800000107bd7	kernel.asm	/^ffff800000107bd7:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff800000107bdc	kernel.asm	/^ffff800000107bdc:	eb 13                	jmp    ffff800000107bf1 <argptr+0x8e>$/;"	l
ffff800000107bde	kernel.asm	/^ffff800000107bde:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000107be2	kernel.asm	/^ffff800000107be2:	48 89 c2             	mov    %rax,%rdx$/;"	l
ffff800000107be5	kernel.asm	/^ffff800000107be5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff800000107be9	kernel.asm	/^ffff800000107be9:	48 89 10             	mov    %rdx,(%rax)$/;"	l
ffff800000107bec	kernel.asm	/^ffff800000107bec:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000107bf1	kernel.asm	/^ffff800000107bf1:	c9                   	leaveq $/;"	l
ffff800000107bf2	kernel.asm	/^ffff800000107bf2:	c3                   	retq   $/;"	l
ffff800000107bf3	kernel.asm	/^ffff800000107bf3 <argstr>:$/;"	l
ffff800000107bf3	kernel.asm	/^ffff800000107bf3:	55                   	push   %rbp$/;"	l
ffff800000107bf4	kernel.asm	/^ffff800000107bf4:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000107bf7	kernel.asm	/^ffff800000107bf7:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ffff800000107bfb	kernel.asm	/^ffff800000107bfb:	89 7d ec             	mov    %edi,-0x14(%rbp)$/;"	l
ffff800000107bfe	kernel.asm	/^ffff800000107bfe:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)$/;"	l
ffff800000107c02	kernel.asm	/^ffff800000107c02:	48 8d 55 fc          	lea    -0x4(%rbp),%rdx$/;"	l
ffff800000107c06	kernel.asm	/^ffff800000107c06:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
ffff800000107c09	kernel.asm	/^ffff800000107c09:	48 89 d6             	mov    %rdx,%rsi$/;"	l
ffff800000107c0c	kernel.asm	/^ffff800000107c0c:	89 c7                	mov    %eax,%edi$/;"	l
ffff800000107c0e	kernel.asm	/^ffff800000107c0e:	48 b8 03 7b 10 00 00 	movabs $0xffff800000107b03,%rax$/;"	l
ffff800000107c15	kernel.asm	/^ffff800000107c15:	80 ff ff $/;"	l
ffff800000107c18	kernel.asm	/^ffff800000107c18:	ff d0                	callq  *%rax$/;"	l
ffff800000107c1a	kernel.asm	/^ffff800000107c1a:	85 c0                	test   %eax,%eax$/;"	l
ffff800000107c1c	kernel.asm	/^ffff800000107c1c:	79 07                	jns    ffff800000107c25 <argstr+0x32>$/;"	l
ffff800000107c1e	kernel.asm	/^ffff800000107c1e:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff800000107c23	kernel.asm	/^ffff800000107c23:	eb 1b                	jmp    ffff800000107c40 <argstr+0x4d>$/;"	l
ffff800000107c25	kernel.asm	/^ffff800000107c25:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff800000107c28	kernel.asm	/^ffff800000107c28:	48 98                	cltq   $/;"	l
ffff800000107c2a	kernel.asm	/^ffff800000107c2a:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx$/;"	l
ffff800000107c2e	kernel.asm	/^ffff800000107c2e:	48 89 d6             	mov    %rdx,%rsi$/;"	l
ffff800000107c31	kernel.asm	/^ffff800000107c31:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000107c34	kernel.asm	/^ffff800000107c34:	48 b8 b2 79 10 00 00 	movabs $0xffff8000001079b2,%rax$/;"	l
ffff800000107c3b	kernel.asm	/^ffff800000107c3b:	80 ff ff $/;"	l
ffff800000107c3e	kernel.asm	/^ffff800000107c3e:	ff d0                	callq  *%rax$/;"	l
ffff800000107c40	kernel.asm	/^ffff800000107c40:	c9                   	leaveq $/;"	l
ffff800000107c41	kernel.asm	/^ffff800000107c41:	c3                   	retq   $/;"	l
ffff800000107c42	kernel.asm	/^ffff800000107c42 <syscall>:$/;"	l
ffff800000107c42	kernel.asm	/^ffff800000107c42:	55                   	push   %rbp$/;"	l
ffff800000107c43	kernel.asm	/^ffff800000107c43:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000107c46	kernel.asm	/^ffff800000107c46:	53                   	push   %rbx$/;"	l
ffff800000107c47	kernel.asm	/^ffff800000107c47:	48 83 ec 18          	sub    $0x18,%rsp$/;"	l
ffff800000107c4b	kernel.asm	/^ffff800000107c4b:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000107c52	kernel.asm	/^ffff800000107c52:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000107c56	kernel.asm	/^ffff800000107c56:	48 8b 40 28          	mov    0x28(%rax),%rax$/;"	l
ffff800000107c5a	kernel.asm	/^ffff800000107c5a:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff800000107c5d	kernel.asm	/^ffff800000107c5d:	89 45 ec             	mov    %eax,-0x14(%rbp)$/;"	l
ffff800000107c60	kernel.asm	/^ffff800000107c60:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)$/;"	l
ffff800000107c64	kernel.asm	/^ffff800000107c64:	7e 4b                	jle    ffff800000107cb1 <syscall+0x6f>$/;"	l
ffff800000107c66	kernel.asm	/^ffff800000107c66:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
ffff800000107c69	kernel.asm	/^ffff800000107c69:	83 f8 15             	cmp    $0x15,%eax$/;"	l
ffff800000107c6c	kernel.asm	/^ffff800000107c6c:	77 43                	ja     ffff800000107cb1 <syscall+0x6f>$/;"	l
ffff800000107c6e	kernel.asm	/^ffff800000107c6e:	48 b8 a0 d5 10 00 00 	movabs $0xffff80000010d5a0,%rax$/;"	l
ffff800000107c75	kernel.asm	/^ffff800000107c75:	80 ff ff $/;"	l
ffff800000107c78	kernel.asm	/^ffff800000107c78:	8b 55 ec             	mov    -0x14(%rbp),%edx$/;"	l
ffff800000107c7b	kernel.asm	/^ffff800000107c7b:	48 63 d2             	movslq %edx,%rdx$/;"	l
ffff800000107c7e	kernel.asm	/^ffff800000107c7e:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax$/;"	l
ffff800000107c82	kernel.asm	/^ffff800000107c82:	48 85 c0             	test   %rax,%rax$/;"	l
ffff800000107c85	kernel.asm	/^ffff800000107c85:	74 2a                	je     ffff800000107cb1 <syscall+0x6f>$/;"	l
ffff800000107c87	kernel.asm	/^ffff800000107c87:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000107c8e	kernel.asm	/^ffff800000107c8e:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000107c92	kernel.asm	/^ffff800000107c92:	48 8b 58 28          	mov    0x28(%rax),%rbx$/;"	l
ffff800000107c96	kernel.asm	/^ffff800000107c96:	48 b8 a0 d5 10 00 00 	movabs $0xffff80000010d5a0,%rax$/;"	l
ffff800000107c9d	kernel.asm	/^ffff800000107c9d:	80 ff ff $/;"	l
ffff800000107ca0	kernel.asm	/^ffff800000107ca0:	8b 55 ec             	mov    -0x14(%rbp),%edx$/;"	l
ffff800000107ca3	kernel.asm	/^ffff800000107ca3:	48 63 d2             	movslq %edx,%rdx$/;"	l
ffff800000107ca6	kernel.asm	/^ffff800000107ca6:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax$/;"	l
ffff800000107caa	kernel.asm	/^ffff800000107caa:	ff d0                	callq  *%rax$/;"	l
ffff800000107cac	kernel.asm	/^ffff800000107cac:	48 89 03             	mov    %rax,(%rbx)$/;"	l
ffff800000107caf	kernel.asm	/^ffff800000107caf:	eb 5c                	jmp    ffff800000107d0d <syscall+0xcb>$/;"	l
ffff800000107cb1	kernel.asm	/^ffff800000107cb1:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000107cb8	kernel.asm	/^ffff800000107cb8:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000107cbc	kernel.asm	/^ffff800000107cbc:	48 8d b0 d0 00 00 00 	lea    0xd0(%rax),%rsi$/;"	l
ffff800000107cc3	kernel.asm	/^ffff800000107cc3:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000107cca	kernel.asm	/^ffff800000107cca:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000107cce	kernel.asm	/^ffff800000107cce:	8b 40 1c             	mov    0x1c(%rax),%eax$/;"	l
ffff800000107cd1	kernel.asm	/^ffff800000107cd1:	8b 55 ec             	mov    -0x14(%rbp),%edx$/;"	l
ffff800000107cd4	kernel.asm	/^ffff800000107cd4:	89 d1                	mov    %edx,%ecx$/;"	l
ffff800000107cd6	kernel.asm	/^ffff800000107cd6:	48 89 f2             	mov    %rsi,%rdx$/;"	l
ffff800000107cd9	kernel.asm	/^ffff800000107cd9:	89 c6                	mov    %eax,%esi$/;"	l
ffff800000107cdb	kernel.asm	/^ffff800000107cdb:	48 bf d0 be 10 00 00 	movabs $0xffff80000010bed0,%rdi$/;"	l
ffff800000107ce2	kernel.asm	/^ffff800000107ce2:	80 ff ff $/;"	l
ffff800000107ce5	kernel.asm	/^ffff800000107ce5:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000107cea	kernel.asm	/^ffff800000107cea:	49 b8 ac 07 10 00 00 	movabs $0xffff8000001007ac,%r8$/;"	l
ffff800000107cf1	kernel.asm	/^ffff800000107cf1:	80 ff ff $/;"	l
ffff800000107cf4	kernel.asm	/^ffff800000107cf4:	41 ff d0             	callq  *%r8$/;"	l
ffff800000107cf7	kernel.asm	/^ffff800000107cf7:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000107cfe	kernel.asm	/^ffff800000107cfe:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000107d02	kernel.asm	/^ffff800000107d02:	48 8b 40 28          	mov    0x28(%rax),%rax$/;"	l
ffff800000107d06	kernel.asm	/^ffff800000107d06:	48 c7 00 ff ff ff ff 	movq   $0xffffffffffffffff,(%rax)$/;"	l
ffff800000107d0d	kernel.asm	/^ffff800000107d0d:	90                   	nop$/;"	l
ffff800000107d0e	kernel.asm	/^ffff800000107d0e:	48 83 c4 18          	add    $0x18,%rsp$/;"	l
ffff800000107d12	kernel.asm	/^ffff800000107d12:	5b                   	pop    %rbx$/;"	l
ffff800000107d13	kernel.asm	/^ffff800000107d13:	5d                   	pop    %rbp$/;"	l
ffff800000107d14	kernel.asm	/^ffff800000107d14:	c3                   	retq   $/;"	l
ffff800000107d15	kernel.asm	/^ffff800000107d15 <argfd>:$/;"	l
ffff800000107d15	kernel.asm	/^ffff800000107d15:	55                   	push   %rbp$/;"	l
ffff800000107d16	kernel.asm	/^ffff800000107d16:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000107d19	kernel.asm	/^ffff800000107d19:	48 83 ec 30          	sub    $0x30,%rsp$/;"	l
ffff800000107d1d	kernel.asm	/^ffff800000107d1d:	89 7d ec             	mov    %edi,-0x14(%rbp)$/;"	l
ffff800000107d20	kernel.asm	/^ffff800000107d20:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)$/;"	l
ffff800000107d24	kernel.asm	/^ffff800000107d24:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)$/;"	l
ffff800000107d28	kernel.asm	/^ffff800000107d28:	48 8d 55 f4          	lea    -0xc(%rbp),%rdx$/;"	l
ffff800000107d2c	kernel.asm	/^ffff800000107d2c:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
ffff800000107d2f	kernel.asm	/^ffff800000107d2f:	48 89 d6             	mov    %rdx,%rsi$/;"	l
ffff800000107d32	kernel.asm	/^ffff800000107d32:	89 c7                	mov    %eax,%edi$/;"	l
ffff800000107d34	kernel.asm	/^ffff800000107d34:	48 b8 03 7b 10 00 00 	movabs $0xffff800000107b03,%rax$/;"	l
ffff800000107d3b	kernel.asm	/^ffff800000107d3b:	80 ff ff $/;"	l
ffff800000107d3e	kernel.asm	/^ffff800000107d3e:	ff d0                	callq  *%rax$/;"	l
ffff800000107d40	kernel.asm	/^ffff800000107d40:	85 c0                	test   %eax,%eax$/;"	l
ffff800000107d42	kernel.asm	/^ffff800000107d42:	79 07                	jns    ffff800000107d4b <argfd+0x36>$/;"	l
ffff800000107d44	kernel.asm	/^ffff800000107d44:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff800000107d49	kernel.asm	/^ffff800000107d49:	eb 62                	jmp    ffff800000107dad <argfd+0x98>$/;"	l
ffff800000107d4b	kernel.asm	/^ffff800000107d4b:	8b 45 f4             	mov    -0xc(%rbp),%eax$/;"	l
ffff800000107d4e	kernel.asm	/^ffff800000107d4e:	85 c0                	test   %eax,%eax$/;"	l
ffff800000107d50	kernel.asm	/^ffff800000107d50:	78 2d                	js     ffff800000107d7f <argfd+0x6a>$/;"	l
ffff800000107d52	kernel.asm	/^ffff800000107d52:	8b 45 f4             	mov    -0xc(%rbp),%eax$/;"	l
ffff800000107d55	kernel.asm	/^ffff800000107d55:	83 f8 0f             	cmp    $0xf,%eax$/;"	l
ffff800000107d58	kernel.asm	/^ffff800000107d58:	7f 25                	jg     ffff800000107d7f <argfd+0x6a>$/;"	l
ffff800000107d5a	kernel.asm	/^ffff800000107d5a:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000107d61	kernel.asm	/^ffff800000107d61:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000107d65	kernel.asm	/^ffff800000107d65:	8b 55 f4             	mov    -0xc(%rbp),%edx$/;"	l
ffff800000107d68	kernel.asm	/^ffff800000107d68:	48 63 d2             	movslq %edx,%rdx$/;"	l
ffff800000107d6b	kernel.asm	/^ffff800000107d6b:	48 83 c2 08          	add    $0x8,%rdx$/;"	l
ffff800000107d6f	kernel.asm	/^ffff800000107d6f:	48 8b 44 d0 08       	mov    0x8(%rax,%rdx,8),%rax$/;"	l
ffff800000107d74	kernel.asm	/^ffff800000107d74:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff800000107d78	kernel.asm	/^ffff800000107d78:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)$/;"	l
ffff800000107d7d	kernel.asm	/^ffff800000107d7d:	75 07                	jne    ffff800000107d86 <argfd+0x71>$/;"	l
ffff800000107d7f	kernel.asm	/^ffff800000107d7f:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff800000107d84	kernel.asm	/^ffff800000107d84:	eb 27                	jmp    ffff800000107dad <argfd+0x98>$/;"	l
ffff800000107d86	kernel.asm	/^ffff800000107d86:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)$/;"	l
ffff800000107d8b	kernel.asm	/^ffff800000107d8b:	74 09                	je     ffff800000107d96 <argfd+0x81>$/;"	l
ffff800000107d8d	kernel.asm	/^ffff800000107d8d:	8b 55 f4             	mov    -0xc(%rbp),%edx$/;"	l
ffff800000107d90	kernel.asm	/^ffff800000107d90:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff800000107d94	kernel.asm	/^ffff800000107d94:	89 10                	mov    %edx,(%rax)$/;"	l
ffff800000107d96	kernel.asm	/^ffff800000107d96:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)$/;"	l
ffff800000107d9b	kernel.asm	/^ffff800000107d9b:	74 0b                	je     ffff800000107da8 <argfd+0x93>$/;"	l
ffff800000107d9d	kernel.asm	/^ffff800000107d9d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff800000107da1	kernel.asm	/^ffff800000107da1:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx$/;"	l
ffff800000107da5	kernel.asm	/^ffff800000107da5:	48 89 10             	mov    %rdx,(%rax)$/;"	l
ffff800000107da8	kernel.asm	/^ffff800000107da8:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000107dad	kernel.asm	/^ffff800000107dad:	c9                   	leaveq $/;"	l
ffff800000107dae	kernel.asm	/^ffff800000107dae:	c3                   	retq   $/;"	l
ffff800000107daf	kernel.asm	/^ffff800000107daf <fdalloc>:$/;"	l
ffff800000107daf	kernel.asm	/^ffff800000107daf:	55                   	push   %rbp$/;"	l
ffff800000107db0	kernel.asm	/^ffff800000107db0:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000107db3	kernel.asm	/^ffff800000107db3:	48 83 ec 18          	sub    $0x18,%rsp$/;"	l
ffff800000107db7	kernel.asm	/^ffff800000107db7:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
ffff800000107dbb	kernel.asm	/^ffff800000107dbb:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)$/;"	l
ffff800000107dc2	kernel.asm	/^ffff800000107dc2:	eb 46                	jmp    ffff800000107e0a <fdalloc+0x5b>$/;"	l
ffff800000107dc4	kernel.asm	/^ffff800000107dc4:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000107dcb	kernel.asm	/^ffff800000107dcb:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000107dcf	kernel.asm	/^ffff800000107dcf:	8b 55 fc             	mov    -0x4(%rbp),%edx$/;"	l
ffff800000107dd2	kernel.asm	/^ffff800000107dd2:	48 63 d2             	movslq %edx,%rdx$/;"	l
ffff800000107dd5	kernel.asm	/^ffff800000107dd5:	48 83 c2 08          	add    $0x8,%rdx$/;"	l
ffff800000107dd9	kernel.asm	/^ffff800000107dd9:	48 8b 44 d0 08       	mov    0x8(%rax,%rdx,8),%rax$/;"	l
ffff800000107dde	kernel.asm	/^ffff800000107dde:	48 85 c0             	test   %rax,%rax$/;"	l
ffff800000107de1	kernel.asm	/^ffff800000107de1:	75 23                	jne    ffff800000107e06 <fdalloc+0x57>$/;"	l
ffff800000107de3	kernel.asm	/^ffff800000107de3:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000107dea	kernel.asm	/^ffff800000107dea:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000107dee	kernel.asm	/^ffff800000107dee:	8b 55 fc             	mov    -0x4(%rbp),%edx$/;"	l
ffff800000107df1	kernel.asm	/^ffff800000107df1:	48 63 d2             	movslq %edx,%rdx$/;"	l
ffff800000107df4	kernel.asm	/^ffff800000107df4:	48 8d 4a 08          	lea    0x8(%rdx),%rcx$/;"	l
ffff800000107df8	kernel.asm	/^ffff800000107df8:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx$/;"	l
ffff800000107dfc	kernel.asm	/^ffff800000107dfc:	48 89 54 c8 08       	mov    %rdx,0x8(%rax,%rcx,8)$/;"	l
ffff800000107e01	kernel.asm	/^ffff800000107e01:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff800000107e04	kernel.asm	/^ffff800000107e04:	eb 0f                	jmp    ffff800000107e15 <fdalloc+0x66>$/;"	l
ffff800000107e06	kernel.asm	/^ffff800000107e06:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)$/;"	l
ffff800000107e0a	kernel.asm	/^ffff800000107e0a:	83 7d fc 0f          	cmpl   $0xf,-0x4(%rbp)$/;"	l
ffff800000107e0e	kernel.asm	/^ffff800000107e0e:	7e b4                	jle    ffff800000107dc4 <fdalloc+0x15>$/;"	l
ffff800000107e10	kernel.asm	/^ffff800000107e10:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff800000107e15	kernel.asm	/^ffff800000107e15:	c9                   	leaveq $/;"	l
ffff800000107e16	kernel.asm	/^ffff800000107e16:	c3                   	retq   $/;"	l
ffff800000107e17	kernel.asm	/^ffff800000107e17 <sys_dup>:$/;"	l
ffff800000107e17	kernel.asm	/^ffff800000107e17:	55                   	push   %rbp$/;"	l
ffff800000107e18	kernel.asm	/^ffff800000107e18:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000107e1b	kernel.asm	/^ffff800000107e1b:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff800000107e1f	kernel.asm	/^ffff800000107e1f:	48 8d 45 f0          	lea    -0x10(%rbp),%rax$/;"	l
ffff800000107e23	kernel.asm	/^ffff800000107e23:	48 89 c2             	mov    %rax,%rdx$/;"	l
ffff800000107e26	kernel.asm	/^ffff800000107e26:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffff800000107e2b	kernel.asm	/^ffff800000107e2b:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
ffff800000107e30	kernel.asm	/^ffff800000107e30:	48 b8 15 7d 10 00 00 	movabs $0xffff800000107d15,%rax$/;"	l
ffff800000107e37	kernel.asm	/^ffff800000107e37:	80 ff ff $/;"	l
ffff800000107e3a	kernel.asm	/^ffff800000107e3a:	ff d0                	callq  *%rax$/;"	l
ffff800000107e3c	kernel.asm	/^ffff800000107e3c:	85 c0                	test   %eax,%eax$/;"	l
ffff800000107e3e	kernel.asm	/^ffff800000107e3e:	79 07                	jns    ffff800000107e47 <sys_dup+0x30>$/;"	l
ffff800000107e40	kernel.asm	/^ffff800000107e40:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff800000107e45	kernel.asm	/^ffff800000107e45:	eb 39                	jmp    ffff800000107e80 <sys_dup+0x69>$/;"	l
ffff800000107e47	kernel.asm	/^ffff800000107e47:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000107e4b	kernel.asm	/^ffff800000107e4b:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000107e4e	kernel.asm	/^ffff800000107e4e:	48 b8 af 7d 10 00 00 	movabs $0xffff800000107daf,%rax$/;"	l
ffff800000107e55	kernel.asm	/^ffff800000107e55:	80 ff ff $/;"	l
ffff800000107e58	kernel.asm	/^ffff800000107e58:	ff d0                	callq  *%rax$/;"	l
ffff800000107e5a	kernel.asm	/^ffff800000107e5a:	89 45 fc             	mov    %eax,-0x4(%rbp)$/;"	l
ffff800000107e5d	kernel.asm	/^ffff800000107e5d:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)$/;"	l
ffff800000107e61	kernel.asm	/^ffff800000107e61:	79 07                	jns    ffff800000107e6a <sys_dup+0x53>$/;"	l
ffff800000107e63	kernel.asm	/^ffff800000107e63:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff800000107e68	kernel.asm	/^ffff800000107e68:	eb 16                	jmp    ffff800000107e80 <sys_dup+0x69>$/;"	l
ffff800000107e6a	kernel.asm	/^ffff800000107e6a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000107e6e	kernel.asm	/^ffff800000107e6e:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000107e71	kernel.asm	/^ffff800000107e71:	48 b8 32 1b 10 00 00 	movabs $0xffff800000101b32,%rax$/;"	l
ffff800000107e78	kernel.asm	/^ffff800000107e78:	80 ff ff $/;"	l
ffff800000107e7b	kernel.asm	/^ffff800000107e7b:	ff d0                	callq  *%rax$/;"	l
ffff800000107e7d	kernel.asm	/^ffff800000107e7d:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff800000107e80	kernel.asm	/^ffff800000107e80:	c9                   	leaveq $/;"	l
ffff800000107e81	kernel.asm	/^ffff800000107e81:	c3                   	retq   $/;"	l
ffff800000107e82	kernel.asm	/^ffff800000107e82 <sys_read>:$/;"	l
ffff800000107e82	kernel.asm	/^ffff800000107e82:	55                   	push   %rbp$/;"	l
ffff800000107e83	kernel.asm	/^ffff800000107e83:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000107e86	kernel.asm	/^ffff800000107e86:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ffff800000107e8a	kernel.asm	/^ffff800000107e8a:	48 8d 45 f8          	lea    -0x8(%rbp),%rax$/;"	l
ffff800000107e8e	kernel.asm	/^ffff800000107e8e:	48 89 c2             	mov    %rax,%rdx$/;"	l
ffff800000107e91	kernel.asm	/^ffff800000107e91:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffff800000107e96	kernel.asm	/^ffff800000107e96:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
ffff800000107e9b	kernel.asm	/^ffff800000107e9b:	48 b8 15 7d 10 00 00 	movabs $0xffff800000107d15,%rax$/;"	l
ffff800000107ea2	kernel.asm	/^ffff800000107ea2:	80 ff ff $/;"	l
ffff800000107ea5	kernel.asm	/^ffff800000107ea5:	ff d0                	callq  *%rax$/;"	l
ffff800000107ea7	kernel.asm	/^ffff800000107ea7:	85 c0                	test   %eax,%eax$/;"	l
ffff800000107ea9	kernel.asm	/^ffff800000107ea9:	78 3b                	js     ffff800000107ee6 <sys_read+0x64>$/;"	l
ffff800000107eab	kernel.asm	/^ffff800000107eab:	48 8d 45 f4          	lea    -0xc(%rbp),%rax$/;"	l
ffff800000107eaf	kernel.asm	/^ffff800000107eaf:	48 89 c6             	mov    %rax,%rsi$/;"	l
ffff800000107eb2	kernel.asm	/^ffff800000107eb2:	bf 02 00 00 00       	mov    $0x2,%edi$/;"	l
ffff800000107eb7	kernel.asm	/^ffff800000107eb7:	48 b8 03 7b 10 00 00 	movabs $0xffff800000107b03,%rax$/;"	l
ffff800000107ebe	kernel.asm	/^ffff800000107ebe:	80 ff ff $/;"	l
ffff800000107ec1	kernel.asm	/^ffff800000107ec1:	ff d0                	callq  *%rax$/;"	l
ffff800000107ec3	kernel.asm	/^ffff800000107ec3:	85 c0                	test   %eax,%eax$/;"	l
ffff800000107ec5	kernel.asm	/^ffff800000107ec5:	78 1f                	js     ffff800000107ee6 <sys_read+0x64>$/;"	l
ffff800000107ec7	kernel.asm	/^ffff800000107ec7:	8b 55 f4             	mov    -0xc(%rbp),%edx$/;"	l
ffff800000107eca	kernel.asm	/^ffff800000107eca:	48 8d 45 e8          	lea    -0x18(%rbp),%rax$/;"	l
ffff800000107ece	kernel.asm	/^ffff800000107ece:	48 89 c6             	mov    %rax,%rsi$/;"	l
ffff800000107ed1	kernel.asm	/^ffff800000107ed1:	bf 01 00 00 00       	mov    $0x1,%edi$/;"	l
ffff800000107ed6	kernel.asm	/^ffff800000107ed6:	48 b8 63 7b 10 00 00 	movabs $0xffff800000107b63,%rax$/;"	l
ffff800000107edd	kernel.asm	/^ffff800000107edd:	80 ff ff $/;"	l
ffff800000107ee0	kernel.asm	/^ffff800000107ee0:	ff d0                	callq  *%rax$/;"	l
ffff800000107ee2	kernel.asm	/^ffff800000107ee2:	85 c0                	test   %eax,%eax$/;"	l
ffff800000107ee4	kernel.asm	/^ffff800000107ee4:	79 07                	jns    ffff800000107eed <sys_read+0x6b>$/;"	l
ffff800000107ee6	kernel.asm	/^ffff800000107ee6:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff800000107eeb	kernel.asm	/^ffff800000107eeb:	eb 1d                	jmp    ffff800000107f0a <sys_read+0x88>$/;"	l
ffff800000107eed	kernel.asm	/^ffff800000107eed:	8b 55 f4             	mov    -0xc(%rbp),%edx$/;"	l
ffff800000107ef0	kernel.asm	/^ffff800000107ef0:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx$/;"	l
ffff800000107ef4	kernel.asm	/^ffff800000107ef4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000107ef8	kernel.asm	/^ffff800000107ef8:	48 89 ce             	mov    %rcx,%rsi$/;"	l
ffff800000107efb	kernel.asm	/^ffff800000107efb:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000107efe	kernel.asm	/^ffff800000107efe:	48 b8 4c 1d 10 00 00 	movabs $0xffff800000101d4c,%rax$/;"	l
ffff800000107f05	kernel.asm	/^ffff800000107f05:	80 ff ff $/;"	l
ffff800000107f08	kernel.asm	/^ffff800000107f08:	ff d0                	callq  *%rax$/;"	l
ffff800000107f0a	kernel.asm	/^ffff800000107f0a:	c9                   	leaveq $/;"	l
ffff800000107f0b	kernel.asm	/^ffff800000107f0b:	c3                   	retq   $/;"	l
ffff800000107f0c	kernel.asm	/^ffff800000107f0c <sys_write>:$/;"	l
ffff800000107f0c	kernel.asm	/^ffff800000107f0c:	55                   	push   %rbp$/;"	l
ffff800000107f0d	kernel.asm	/^ffff800000107f0d:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000107f10	kernel.asm	/^ffff800000107f10:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ffff800000107f14	kernel.asm	/^ffff800000107f14:	48 8d 45 f8          	lea    -0x8(%rbp),%rax$/;"	l
ffff800000107f18	kernel.asm	/^ffff800000107f18:	48 89 c2             	mov    %rax,%rdx$/;"	l
ffff800000107f1b	kernel.asm	/^ffff800000107f1b:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffff800000107f20	kernel.asm	/^ffff800000107f20:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
ffff800000107f25	kernel.asm	/^ffff800000107f25:	48 b8 15 7d 10 00 00 	movabs $0xffff800000107d15,%rax$/;"	l
ffff800000107f2c	kernel.asm	/^ffff800000107f2c:	80 ff ff $/;"	l
ffff800000107f2f	kernel.asm	/^ffff800000107f2f:	ff d0                	callq  *%rax$/;"	l
ffff800000107f31	kernel.asm	/^ffff800000107f31:	85 c0                	test   %eax,%eax$/;"	l
ffff800000107f33	kernel.asm	/^ffff800000107f33:	78 3b                	js     ffff800000107f70 <sys_write+0x64>$/;"	l
ffff800000107f35	kernel.asm	/^ffff800000107f35:	48 8d 45 f4          	lea    -0xc(%rbp),%rax$/;"	l
ffff800000107f39	kernel.asm	/^ffff800000107f39:	48 89 c6             	mov    %rax,%rsi$/;"	l
ffff800000107f3c	kernel.asm	/^ffff800000107f3c:	bf 02 00 00 00       	mov    $0x2,%edi$/;"	l
ffff800000107f41	kernel.asm	/^ffff800000107f41:	48 b8 03 7b 10 00 00 	movabs $0xffff800000107b03,%rax$/;"	l
ffff800000107f48	kernel.asm	/^ffff800000107f48:	80 ff ff $/;"	l
ffff800000107f4b	kernel.asm	/^ffff800000107f4b:	ff d0                	callq  *%rax$/;"	l
ffff800000107f4d	kernel.asm	/^ffff800000107f4d:	85 c0                	test   %eax,%eax$/;"	l
ffff800000107f4f	kernel.asm	/^ffff800000107f4f:	78 1f                	js     ffff800000107f70 <sys_write+0x64>$/;"	l
ffff800000107f51	kernel.asm	/^ffff800000107f51:	8b 55 f4             	mov    -0xc(%rbp),%edx$/;"	l
ffff800000107f54	kernel.asm	/^ffff800000107f54:	48 8d 45 e8          	lea    -0x18(%rbp),%rax$/;"	l
ffff800000107f58	kernel.asm	/^ffff800000107f58:	48 89 c6             	mov    %rax,%rsi$/;"	l
ffff800000107f5b	kernel.asm	/^ffff800000107f5b:	bf 01 00 00 00       	mov    $0x1,%edi$/;"	l
ffff800000107f60	kernel.asm	/^ffff800000107f60:	48 b8 63 7b 10 00 00 	movabs $0xffff800000107b63,%rax$/;"	l
ffff800000107f67	kernel.asm	/^ffff800000107f67:	80 ff ff $/;"	l
ffff800000107f6a	kernel.asm	/^ffff800000107f6a:	ff d0                	callq  *%rax$/;"	l
ffff800000107f6c	kernel.asm	/^ffff800000107f6c:	85 c0                	test   %eax,%eax$/;"	l
ffff800000107f6e	kernel.asm	/^ffff800000107f6e:	79 07                	jns    ffff800000107f77 <sys_write+0x6b>$/;"	l
ffff800000107f70	kernel.asm	/^ffff800000107f70:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff800000107f75	kernel.asm	/^ffff800000107f75:	eb 1d                	jmp    ffff800000107f94 <sys_write+0x88>$/;"	l
ffff800000107f77	kernel.asm	/^ffff800000107f77:	8b 55 f4             	mov    -0xc(%rbp),%edx$/;"	l
ffff800000107f7a	kernel.asm	/^ffff800000107f7a:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx$/;"	l
ffff800000107f7e	kernel.asm	/^ffff800000107f7e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000107f82	kernel.asm	/^ffff800000107f82:	48 89 ce             	mov    %rcx,%rsi$/;"	l
ffff800000107f85	kernel.asm	/^ffff800000107f85:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000107f88	kernel.asm	/^ffff800000107f88:	48 b8 3d 1e 10 00 00 	movabs $0xffff800000101e3d,%rax$/;"	l
ffff800000107f8f	kernel.asm	/^ffff800000107f8f:	80 ff ff $/;"	l
ffff800000107f92	kernel.asm	/^ffff800000107f92:	ff d0                	callq  *%rax$/;"	l
ffff800000107f94	kernel.asm	/^ffff800000107f94:	c9                   	leaveq $/;"	l
ffff800000107f95	kernel.asm	/^ffff800000107f95:	c3                   	retq   $/;"	l
ffff800000107f96	kernel.asm	/^ffff800000107f96 <sys_close>:$/;"	l
ffff800000107f96	kernel.asm	/^ffff800000107f96:	55                   	push   %rbp$/;"	l
ffff800000107f97	kernel.asm	/^ffff800000107f97:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000107f9a	kernel.asm	/^ffff800000107f9a:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff800000107f9e	kernel.asm	/^ffff800000107f9e:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx$/;"	l
ffff800000107fa2	kernel.asm	/^ffff800000107fa2:	48 8d 45 fc          	lea    -0x4(%rbp),%rax$/;"	l
ffff800000107fa6	kernel.asm	/^ffff800000107fa6:	48 89 c6             	mov    %rax,%rsi$/;"	l
ffff800000107fa9	kernel.asm	/^ffff800000107fa9:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
ffff800000107fae	kernel.asm	/^ffff800000107fae:	48 b8 15 7d 10 00 00 	movabs $0xffff800000107d15,%rax$/;"	l
ffff800000107fb5	kernel.asm	/^ffff800000107fb5:	80 ff ff $/;"	l
ffff800000107fb8	kernel.asm	/^ffff800000107fb8:	ff d0                	callq  *%rax$/;"	l
ffff800000107fba	kernel.asm	/^ffff800000107fba:	85 c0                	test   %eax,%eax$/;"	l
ffff800000107fbc	kernel.asm	/^ffff800000107fbc:	79 07                	jns    ffff800000107fc5 <sys_close+0x2f>$/;"	l
ffff800000107fbe	kernel.asm	/^ffff800000107fbe:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff800000107fc3	kernel.asm	/^ffff800000107fc3:	eb 36                	jmp    ffff800000107ffb <sys_close+0x65>$/;"	l
ffff800000107fc5	kernel.asm	/^ffff800000107fc5:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000107fcc	kernel.asm	/^ffff800000107fcc:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000107fd0	kernel.asm	/^ffff800000107fd0:	8b 55 fc             	mov    -0x4(%rbp),%edx$/;"	l
ffff800000107fd3	kernel.asm	/^ffff800000107fd3:	48 63 d2             	movslq %edx,%rdx$/;"	l
ffff800000107fd6	kernel.asm	/^ffff800000107fd6:	48 83 c2 08          	add    $0x8,%rdx$/;"	l
ffff800000107fda	kernel.asm	/^ffff800000107fda:	48 c7 44 d0 08 00 00 	movq   $0x0,0x8(%rax,%rdx,8)$/;"	l
ffff800000107fe1	kernel.asm	/^ffff800000107fe1:	00 00 $/;"	l
ffff800000107fe3	kernel.asm	/^ffff800000107fe3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000107fe7	kernel.asm	/^ffff800000107fe7:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000107fea	kernel.asm	/^ffff800000107fea:	48 b8 a2 1b 10 00 00 	movabs $0xffff800000101ba2,%rax$/;"	l
ffff800000107ff1	kernel.asm	/^ffff800000107ff1:	80 ff ff $/;"	l
ffff800000107ff4	kernel.asm	/^ffff800000107ff4:	ff d0                	callq  *%rax$/;"	l
ffff800000107ff6	kernel.asm	/^ffff800000107ff6:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000107ffb	kernel.asm	/^ffff800000107ffb:	c9                   	leaveq $/;"	l
ffff800000107ffc	kernel.asm	/^ffff800000107ffc:	c3                   	retq   $/;"	l
ffff800000107ffd	kernel.asm	/^ffff800000107ffd <sys_fstat>:$/;"	l
ffff800000107ffd	kernel.asm	/^ffff800000107ffd:	55                   	push   %rbp$/;"	l
ffff800000107ffe	kernel.asm	/^ffff800000107ffe:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000108001	kernel.asm	/^ffff800000108001:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff800000108005	kernel.asm	/^ffff800000108005:	48 8d 45 f8          	lea    -0x8(%rbp),%rax$/;"	l
ffff800000108009	kernel.asm	/^ffff800000108009:	48 89 c2             	mov    %rax,%rdx$/;"	l
ffff80000010800c	kernel.asm	/^ffff80000010800c:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffff800000108011	kernel.asm	/^ffff800000108011:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
ffff800000108016	kernel.asm	/^ffff800000108016:	48 b8 15 7d 10 00 00 	movabs $0xffff800000107d15,%rax$/;"	l
ffff80000010801d	kernel.asm	/^ffff80000010801d:	80 ff ff $/;"	l
ffff800000108020	kernel.asm	/^ffff800000108020:	ff d0                	callq  *%rax$/;"	l
ffff800000108022	kernel.asm	/^ffff800000108022:	85 c0                	test   %eax,%eax$/;"	l
ffff800000108024	kernel.asm	/^ffff800000108024:	78 21                	js     ffff800000108047 <sys_fstat+0x4a>$/;"	l
ffff800000108026	kernel.asm	/^ffff800000108026:	48 8d 45 f0          	lea    -0x10(%rbp),%rax$/;"	l
ffff80000010802a	kernel.asm	/^ffff80000010802a:	ba 14 00 00 00       	mov    $0x14,%edx$/;"	l
ffff80000010802f	kernel.asm	/^ffff80000010802f:	48 89 c6             	mov    %rax,%rsi$/;"	l
ffff800000108032	kernel.asm	/^ffff800000108032:	bf 01 00 00 00       	mov    $0x1,%edi$/;"	l
ffff800000108037	kernel.asm	/^ffff800000108037:	48 b8 63 7b 10 00 00 	movabs $0xffff800000107b63,%rax$/;"	l
ffff80000010803e	kernel.asm	/^ffff80000010803e:	80 ff ff $/;"	l
ffff800000108041	kernel.asm	/^ffff800000108041:	ff d0                	callq  *%rax$/;"	l
ffff800000108043	kernel.asm	/^ffff800000108043:	85 c0                	test   %eax,%eax$/;"	l
ffff800000108045	kernel.asm	/^ffff800000108045:	79 07                	jns    ffff80000010804e <sys_fstat+0x51>$/;"	l
ffff800000108047	kernel.asm	/^ffff800000108047:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff80000010804c	kernel.asm	/^ffff80000010804c:	eb 1a                	jmp    ffff800000108068 <sys_fstat+0x6b>$/;"	l
ffff80000010804e	kernel.asm	/^ffff80000010804e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
ffff800000108052	kernel.asm	/^ffff800000108052:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000108056	kernel.asm	/^ffff800000108056:	48 89 d6             	mov    %rdx,%rsi$/;"	l
ffff800000108059	kernel.asm	/^ffff800000108059:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010805c	kernel.asm	/^ffff80000010805c:	48 b8 d7 1c 10 00 00 	movabs $0xffff800000101cd7,%rax$/;"	l
ffff800000108063	kernel.asm	/^ffff800000108063:	80 ff ff $/;"	l
ffff800000108066	kernel.asm	/^ffff800000108066:	ff d0                	callq  *%rax$/;"	l
ffff800000108068	kernel.asm	/^ffff800000108068:	c9                   	leaveq $/;"	l
ffff800000108069	kernel.asm	/^ffff800000108069:	c3                   	retq   $/;"	l
ffff80000010806a	kernel.asm	/^ffff80000010806a <sys_link>:$/;"	l
ffff80000010806a	kernel.asm	/^ffff80000010806a:	55                   	push   %rbp$/;"	l
ffff80000010806b	kernel.asm	/^ffff80000010806b:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010806e	kernel.asm	/^ffff80000010806e:	48 83 ec 30          	sub    $0x30,%rsp$/;"	l
ffff800000108072	kernel.asm	/^ffff800000108072:	48 8d 45 d0          	lea    -0x30(%rbp),%rax$/;"	l
ffff800000108076	kernel.asm	/^ffff800000108076:	48 89 c6             	mov    %rax,%rsi$/;"	l
ffff800000108079	kernel.asm	/^ffff800000108079:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
ffff80000010807e	kernel.asm	/^ffff80000010807e:	48 b8 f3 7b 10 00 00 	movabs $0xffff800000107bf3,%rax$/;"	l
ffff800000108085	kernel.asm	/^ffff800000108085:	80 ff ff $/;"	l
ffff800000108088	kernel.asm	/^ffff800000108088:	ff d0                	callq  *%rax$/;"	l
ffff80000010808a	kernel.asm	/^ffff80000010808a:	85 c0                	test   %eax,%eax$/;"	l
ffff80000010808c	kernel.asm	/^ffff80000010808c:	78 1c                	js     ffff8000001080aa <sys_link+0x40>$/;"	l
ffff80000010808e	kernel.asm	/^ffff80000010808e:	48 8d 45 d8          	lea    -0x28(%rbp),%rax$/;"	l
ffff800000108092	kernel.asm	/^ffff800000108092:	48 89 c6             	mov    %rax,%rsi$/;"	l
ffff800000108095	kernel.asm	/^ffff800000108095:	bf 01 00 00 00       	mov    $0x1,%edi$/;"	l
ffff80000010809a	kernel.asm	/^ffff80000010809a:	48 b8 f3 7b 10 00 00 	movabs $0xffff800000107bf3,%rax$/;"	l
ffff8000001080a1	kernel.asm	/^ffff8000001080a1:	80 ff ff $/;"	l
ffff8000001080a4	kernel.asm	/^ffff8000001080a4:	ff d0                	callq  *%rax$/;"	l
ffff8000001080a6	kernel.asm	/^ffff8000001080a6:	85 c0                	test   %eax,%eax$/;"	l
ffff8000001080a8	kernel.asm	/^ffff8000001080a8:	79 0a                	jns    ffff8000001080b4 <sys_link+0x4a>$/;"	l
ffff8000001080aa	kernel.asm	/^ffff8000001080aa:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff8000001080af	kernel.asm	/^ffff8000001080af:	e9 0c 02 00 00       	jmpq   ffff8000001082c0 <sys_link+0x256>$/;"	l
ffff8000001080b4	kernel.asm	/^ffff8000001080b4:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff8000001080b9	kernel.asm	/^ffff8000001080b9:	48 ba 9e 4d 10 00 00 	movabs $0xffff800000104d9e,%rdx$/;"	l
ffff8000001080c0	kernel.asm	/^ffff8000001080c0:	80 ff ff $/;"	l
ffff8000001080c3	kernel.asm	/^ffff8000001080c3:	ff d2                	callq  *%rdx$/;"	l
ffff8000001080c5	kernel.asm	/^ffff8000001080c5:	48 8b 45 d0          	mov    -0x30(%rbp),%rax$/;"	l
ffff8000001080c9	kernel.asm	/^ffff8000001080c9:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001080cc	kernel.asm	/^ffff8000001080cc:	48 b8 ba 36 10 00 00 	movabs $0xffff8000001036ba,%rax$/;"	l
ffff8000001080d3	kernel.asm	/^ffff8000001080d3:	80 ff ff $/;"	l
ffff8000001080d6	kernel.asm	/^ffff8000001080d6:	ff d0                	callq  *%rax$/;"	l
ffff8000001080d8	kernel.asm	/^ffff8000001080d8:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff8000001080dc	kernel.asm	/^ffff8000001080dc:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)$/;"	l
ffff8000001080e1	kernel.asm	/^ffff8000001080e1:	75 1b                	jne    ffff8000001080fe <sys_link+0x94>$/;"	l
ffff8000001080e3	kernel.asm	/^ffff8000001080e3:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff8000001080e8	kernel.asm	/^ffff8000001080e8:	48 ba 74 4e 10 00 00 	movabs $0xffff800000104e74,%rdx$/;"	l
ffff8000001080ef	kernel.asm	/^ffff8000001080ef:	80 ff ff $/;"	l
ffff8000001080f2	kernel.asm	/^ffff8000001080f2:	ff d2                	callq  *%rdx$/;"	l
ffff8000001080f4	kernel.asm	/^ffff8000001080f4:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff8000001080f9	kernel.asm	/^ffff8000001080f9:	e9 c2 01 00 00       	jmpq   ffff8000001082c0 <sys_link+0x256>$/;"	l
ffff8000001080fe	kernel.asm	/^ffff8000001080fe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000108102	kernel.asm	/^ffff800000108102:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000108105	kernel.asm	/^ffff800000108105:	48 b8 ca 27 10 00 00 	movabs $0xffff8000001027ca,%rax$/;"	l
ffff80000010810c	kernel.asm	/^ffff80000010810c:	80 ff ff $/;"	l
ffff80000010810f	kernel.asm	/^ffff80000010810f:	ff d0                	callq  *%rax$/;"	l
ffff800000108111	kernel.asm	/^ffff800000108111:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000108115	kernel.asm	/^ffff800000108115:	0f b7 80 94 00 00 00 	movzwl 0x94(%rax),%eax$/;"	l
ffff80000010811c	kernel.asm	/^ffff80000010811c:	66 83 f8 01          	cmp    $0x1,%ax$/;"	l
ffff800000108120	kernel.asm	/^ffff800000108120:	75 2e                	jne    ffff800000108150 <sys_link+0xe6>$/;"	l
ffff800000108122	kernel.asm	/^ffff800000108122:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000108126	kernel.asm	/^ffff800000108126:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000108129	kernel.asm	/^ffff800000108129:	48 b8 ae 2a 10 00 00 	movabs $0xffff800000102aae,%rax$/;"	l
ffff800000108130	kernel.asm	/^ffff800000108130:	80 ff ff $/;"	l
ffff800000108133	kernel.asm	/^ffff800000108133:	ff d0                	callq  *%rax$/;"	l
ffff800000108135	kernel.asm	/^ffff800000108135:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff80000010813a	kernel.asm	/^ffff80000010813a:	48 ba 74 4e 10 00 00 	movabs $0xffff800000104e74,%rdx$/;"	l
ffff800000108141	kernel.asm	/^ffff800000108141:	80 ff ff $/;"	l
ffff800000108144	kernel.asm	/^ffff800000108144:	ff d2                	callq  *%rdx$/;"	l
ffff800000108146	kernel.asm	/^ffff800000108146:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff80000010814b	kernel.asm	/^ffff80000010814b:	e9 70 01 00 00       	jmpq   ffff8000001082c0 <sys_link+0x256>$/;"	l
ffff800000108150	kernel.asm	/^ffff800000108150:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000108154	kernel.asm	/^ffff800000108154:	0f b7 80 9a 00 00 00 	movzwl 0x9a(%rax),%eax$/;"	l
ffff80000010815b	kernel.asm	/^ffff80000010815b:	83 c0 01             	add    $0x1,%eax$/;"	l
ffff80000010815e	kernel.asm	/^ffff80000010815e:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000108160	kernel.asm	/^ffff800000108160:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000108164	kernel.asm	/^ffff800000108164:	66 89 90 9a 00 00 00 	mov    %dx,0x9a(%rax)$/;"	l
ffff80000010816b	kernel.asm	/^ffff80000010816b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010816f	kernel.asm	/^ffff80000010816f:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000108172	kernel.asm	/^ffff800000108172:	48 b8 38 25 10 00 00 	movabs $0xffff800000102538,%rax$/;"	l
ffff800000108179	kernel.asm	/^ffff800000108179:	80 ff ff $/;"	l
ffff80000010817c	kernel.asm	/^ffff80000010817c:	ff d0                	callq  *%rax$/;"	l
ffff80000010817e	kernel.asm	/^ffff80000010817e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000108182	kernel.asm	/^ffff800000108182:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000108185	kernel.asm	/^ffff800000108185:	48 b8 5b 29 10 00 00 	movabs $0xffff80000010295b,%rax$/;"	l
ffff80000010818c	kernel.asm	/^ffff80000010818c:	80 ff ff $/;"	l
ffff80000010818f	kernel.asm	/^ffff80000010818f:	ff d0                	callq  *%rax$/;"	l
ffff800000108191	kernel.asm	/^ffff800000108191:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff800000108195	kernel.asm	/^ffff800000108195:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx$/;"	l
ffff800000108199	kernel.asm	/^ffff800000108199:	48 89 d6             	mov    %rdx,%rsi$/;"	l
ffff80000010819c	kernel.asm	/^ffff80000010819c:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010819f	kernel.asm	/^ffff80000010819f:	48 b8 e4 36 10 00 00 	movabs $0xffff8000001036e4,%rax$/;"	l
ffff8000001081a6	kernel.asm	/^ffff8000001081a6:	80 ff ff $/;"	l
ffff8000001081a9	kernel.asm	/^ffff8000001081a9:	ff d0                	callq  *%rax$/;"	l
ffff8000001081ab	kernel.asm	/^ffff8000001081ab:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ffff8000001081af	kernel.asm	/^ffff8000001081af:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)$/;"	l
ffff8000001081b4	kernel.asm	/^ffff8000001081b4:	0f 84 9b 00 00 00    	je     ffff800000108255 <sys_link+0x1eb>$/;"	l
ffff8000001081ba	kernel.asm	/^ffff8000001081ba:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff8000001081be	kernel.asm	/^ffff8000001081be:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001081c1	kernel.asm	/^ffff8000001081c1:	48 b8 ca 27 10 00 00 	movabs $0xffff8000001027ca,%rax$/;"	l
ffff8000001081c8	kernel.asm	/^ffff8000001081c8:	80 ff ff $/;"	l
ffff8000001081cb	kernel.asm	/^ffff8000001081cb:	ff d0                	callq  *%rax$/;"	l
ffff8000001081cd	kernel.asm	/^ffff8000001081cd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff8000001081d1	kernel.asm	/^ffff8000001081d1:	8b 10                	mov    (%rax),%edx$/;"	l
ffff8000001081d3	kernel.asm	/^ffff8000001081d3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001081d7	kernel.asm	/^ffff8000001081d7:	8b 00                	mov    (%rax),%eax$/;"	l
ffff8000001081d9	kernel.asm	/^ffff8000001081d9:	39 c2                	cmp    %eax,%edx$/;"	l
ffff8000001081db	kernel.asm	/^ffff8000001081db:	75 25                	jne    ffff800000108202 <sys_link+0x198>$/;"	l
ffff8000001081dd	kernel.asm	/^ffff8000001081dd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001081e1	kernel.asm	/^ffff8000001081e1:	8b 50 04             	mov    0x4(%rax),%edx$/;"	l
ffff8000001081e4	kernel.asm	/^ffff8000001081e4:	48 8d 4d e0          	lea    -0x20(%rbp),%rcx$/;"	l
ffff8000001081e8	kernel.asm	/^ffff8000001081e8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff8000001081ec	kernel.asm	/^ffff8000001081ec:	48 89 ce             	mov    %rcx,%rsi$/;"	l
ffff8000001081ef	kernel.asm	/^ffff8000001081ef:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001081f2	kernel.asm	/^ffff8000001081f2:	48 b8 30 33 10 00 00 	movabs $0xffff800000103330,%rax$/;"	l
ffff8000001081f9	kernel.asm	/^ffff8000001081f9:	80 ff ff $/;"	l
ffff8000001081fc	kernel.asm	/^ffff8000001081fc:	ff d0                	callq  *%rax$/;"	l
ffff8000001081fe	kernel.asm	/^ffff8000001081fe:	85 c0                	test   %eax,%eax$/;"	l
ffff800000108200	kernel.asm	/^ffff800000108200:	79 15                	jns    ffff800000108217 <sys_link+0x1ad>$/;"	l
ffff800000108202	kernel.asm	/^ffff800000108202:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000108206	kernel.asm	/^ffff800000108206:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000108209	kernel.asm	/^ffff800000108209:	48 b8 ae 2a 10 00 00 	movabs $0xffff800000102aae,%rax$/;"	l
ffff800000108210	kernel.asm	/^ffff800000108210:	80 ff ff $/;"	l
ffff800000108213	kernel.asm	/^ffff800000108213:	ff d0                	callq  *%rax$/;"	l
ffff800000108215	kernel.asm	/^ffff800000108215:	eb 3f                	jmp    ffff800000108256 <sys_link+0x1ec>$/;"	l
ffff800000108217	kernel.asm	/^ffff800000108217:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff80000010821b	kernel.asm	/^ffff80000010821b:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010821e	kernel.asm	/^ffff80000010821e:	48 b8 ae 2a 10 00 00 	movabs $0xffff800000102aae,%rax$/;"	l
ffff800000108225	kernel.asm	/^ffff800000108225:	80 ff ff $/;"	l
ffff800000108228	kernel.asm	/^ffff800000108228:	ff d0                	callq  *%rax$/;"	l
ffff80000010822a	kernel.asm	/^ffff80000010822a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010822e	kernel.asm	/^ffff80000010822e:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000108231	kernel.asm	/^ffff800000108231:	48 b8 c4 29 10 00 00 	movabs $0xffff8000001029c4,%rax$/;"	l
ffff800000108238	kernel.asm	/^ffff800000108238:	80 ff ff $/;"	l
ffff80000010823b	kernel.asm	/^ffff80000010823b:	ff d0                	callq  *%rax$/;"	l
ffff80000010823d	kernel.asm	/^ffff80000010823d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000108242	kernel.asm	/^ffff800000108242:	48 ba 74 4e 10 00 00 	movabs $0xffff800000104e74,%rdx$/;"	l
ffff800000108249	kernel.asm	/^ffff800000108249:	80 ff ff $/;"	l
ffff80000010824c	kernel.asm	/^ffff80000010824c:	ff d2                	callq  *%rdx$/;"	l
ffff80000010824e	kernel.asm	/^ffff80000010824e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000108253	kernel.asm	/^ffff800000108253:	eb 6b                	jmp    ffff8000001082c0 <sys_link+0x256>$/;"	l
ffff800000108255	kernel.asm	/^ffff800000108255:	90                   	nop$/;"	l
ffff800000108256	kernel.asm	/^ffff800000108256:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010825a	kernel.asm	/^ffff80000010825a:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010825d	kernel.asm	/^ffff80000010825d:	48 b8 ca 27 10 00 00 	movabs $0xffff8000001027ca,%rax$/;"	l
ffff800000108264	kernel.asm	/^ffff800000108264:	80 ff ff $/;"	l
ffff800000108267	kernel.asm	/^ffff800000108267:	ff d0                	callq  *%rax$/;"	l
ffff800000108269	kernel.asm	/^ffff800000108269:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010826d	kernel.asm	/^ffff80000010826d:	0f b7 80 9a 00 00 00 	movzwl 0x9a(%rax),%eax$/;"	l
ffff800000108274	kernel.asm	/^ffff800000108274:	83 e8 01             	sub    $0x1,%eax$/;"	l
ffff800000108277	kernel.asm	/^ffff800000108277:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000108279	kernel.asm	/^ffff800000108279:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010827d	kernel.asm	/^ffff80000010827d:	66 89 90 9a 00 00 00 	mov    %dx,0x9a(%rax)$/;"	l
ffff800000108284	kernel.asm	/^ffff800000108284:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000108288	kernel.asm	/^ffff800000108288:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010828b	kernel.asm	/^ffff80000010828b:	48 b8 38 25 10 00 00 	movabs $0xffff800000102538,%rax$/;"	l
ffff800000108292	kernel.asm	/^ffff800000108292:	80 ff ff $/;"	l
ffff800000108295	kernel.asm	/^ffff800000108295:	ff d0                	callq  *%rax$/;"	l
ffff800000108297	kernel.asm	/^ffff800000108297:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010829b	kernel.asm	/^ffff80000010829b:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010829e	kernel.asm	/^ffff80000010829e:	48 b8 ae 2a 10 00 00 	movabs $0xffff800000102aae,%rax$/;"	l
ffff8000001082a5	kernel.asm	/^ffff8000001082a5:	80 ff ff $/;"	l
ffff8000001082a8	kernel.asm	/^ffff8000001082a8:	ff d0                	callq  *%rax$/;"	l
ffff8000001082aa	kernel.asm	/^ffff8000001082aa:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff8000001082af	kernel.asm	/^ffff8000001082af:	48 ba 74 4e 10 00 00 	movabs $0xffff800000104e74,%rdx$/;"	l
ffff8000001082b6	kernel.asm	/^ffff8000001082b6:	80 ff ff $/;"	l
ffff8000001082b9	kernel.asm	/^ffff8000001082b9:	ff d2                	callq  *%rdx$/;"	l
ffff8000001082bb	kernel.asm	/^ffff8000001082bb:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff8000001082c0	kernel.asm	/^ffff8000001082c0:	c9                   	leaveq $/;"	l
ffff8000001082c1	kernel.asm	/^ffff8000001082c1:	c3                   	retq   $/;"	l
ffff8000001082c2	kernel.asm	/^ffff8000001082c2 <isdirempty>:$/;"	l
ffff8000001082c2	kernel.asm	/^ffff8000001082c2:	55                   	push   %rbp$/;"	l
ffff8000001082c3	kernel.asm	/^ffff8000001082c3:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff8000001082c6	kernel.asm	/^ffff8000001082c6:	48 83 ec 30          	sub    $0x30,%rsp$/;"	l
ffff8000001082ca	kernel.asm	/^ffff8000001082ca:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)$/;"	l
ffff8000001082ce	kernel.asm	/^ffff8000001082ce:	c7 45 fc 20 00 00 00 	movl   $0x20,-0x4(%rbp)$/;"	l
ffff8000001082d5	kernel.asm	/^ffff8000001082d5:	eb 53                	jmp    ffff80000010832a <isdirempty+0x68>$/;"	l
ffff8000001082d7	kernel.asm	/^ffff8000001082d7:	8b 55 fc             	mov    -0x4(%rbp),%edx$/;"	l
ffff8000001082da	kernel.asm	/^ffff8000001082da:	48 8d 75 e0          	lea    -0x20(%rbp),%rsi$/;"	l
ffff8000001082de	kernel.asm	/^ffff8000001082de:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff8000001082e2	kernel.asm	/^ffff8000001082e2:	b9 10 00 00 00       	mov    $0x10,%ecx$/;"	l
ffff8000001082e7	kernel.asm	/^ffff8000001082e7:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001082ea	kernel.asm	/^ffff8000001082ea:	48 b8 1e 2e 10 00 00 	movabs $0xffff800000102e1e,%rax$/;"	l
ffff8000001082f1	kernel.asm	/^ffff8000001082f1:	80 ff ff $/;"	l
ffff8000001082f4	kernel.asm	/^ffff8000001082f4:	ff d0                	callq  *%rax$/;"	l
ffff8000001082f6	kernel.asm	/^ffff8000001082f6:	83 f8 10             	cmp    $0x10,%eax$/;"	l
ffff8000001082f9	kernel.asm	/^ffff8000001082f9:	74 16                	je     ffff800000108311 <isdirempty+0x4f>$/;"	l
ffff8000001082fb	kernel.asm	/^ffff8000001082fb:	48 bf ec be 10 00 00 	movabs $0xffff80000010beec,%rdi$/;"	l
ffff800000108302	kernel.asm	/^ffff800000108302:	80 ff ff $/;"	l
ffff800000108305	kernel.asm	/^ffff800000108305:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff80000010830c	kernel.asm	/^ffff80000010830c:	80 ff ff $/;"	l
ffff80000010830f	kernel.asm	/^ffff80000010830f:	ff d0                	callq  *%rax$/;"	l
ffff800000108311	kernel.asm	/^ffff800000108311:	0f b7 45 e0          	movzwl -0x20(%rbp),%eax$/;"	l
ffff800000108315	kernel.asm	/^ffff800000108315:	66 85 c0             	test   %ax,%ax$/;"	l
ffff800000108318	kernel.asm	/^ffff800000108318:	74 07                	je     ffff800000108321 <isdirempty+0x5f>$/;"	l
ffff80000010831a	kernel.asm	/^ffff80000010831a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff80000010831f	kernel.asm	/^ffff80000010831f:	eb 1f                	jmp    ffff800000108340 <isdirempty+0x7e>$/;"	l
ffff800000108321	kernel.asm	/^ffff800000108321:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff800000108324	kernel.asm	/^ffff800000108324:	83 c0 10             	add    $0x10,%eax$/;"	l
ffff800000108327	kernel.asm	/^ffff800000108327:	89 45 fc             	mov    %eax,-0x4(%rbp)$/;"	l
ffff80000010832a	kernel.asm	/^ffff80000010832a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff80000010832e	kernel.asm	/^ffff80000010832e:	8b 90 9c 00 00 00    	mov    0x9c(%rax),%edx$/;"	l
ffff800000108334	kernel.asm	/^ffff800000108334:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff800000108337	kernel.asm	/^ffff800000108337:	39 c2                	cmp    %eax,%edx$/;"	l
ffff800000108339	kernel.asm	/^ffff800000108339:	77 9c                	ja     ffff8000001082d7 <isdirempty+0x15>$/;"	l
ffff80000010833b	kernel.asm	/^ffff80000010833b:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
ffff800000108340	kernel.asm	/^ffff800000108340:	c9                   	leaveq $/;"	l
ffff800000108341	kernel.asm	/^ffff800000108341:	c3                   	retq   $/;"	l
ffff800000108342	kernel.asm	/^ffff800000108342 <sys_unlink>:$/;"	l
ffff800000108342	kernel.asm	/^ffff800000108342:	55                   	push   %rbp$/;"	l
ffff800000108343	kernel.asm	/^ffff800000108343:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000108346	kernel.asm	/^ffff800000108346:	48 83 ec 40          	sub    $0x40,%rsp$/;"	l
ffff80000010834a	kernel.asm	/^ffff80000010834a:	48 8d 45 c8          	lea    -0x38(%rbp),%rax$/;"	l
ffff80000010834e	kernel.asm	/^ffff80000010834e:	48 89 c6             	mov    %rax,%rsi$/;"	l
ffff800000108351	kernel.asm	/^ffff800000108351:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
ffff800000108356	kernel.asm	/^ffff800000108356:	48 b8 f3 7b 10 00 00 	movabs $0xffff800000107bf3,%rax$/;"	l
ffff80000010835d	kernel.asm	/^ffff80000010835d:	80 ff ff $/;"	l
ffff800000108360	kernel.asm	/^ffff800000108360:	ff d0                	callq  *%rax$/;"	l
ffff800000108362	kernel.asm	/^ffff800000108362:	85 c0                	test   %eax,%eax$/;"	l
ffff800000108364	kernel.asm	/^ffff800000108364:	79 0a                	jns    ffff800000108370 <sys_unlink+0x2e>$/;"	l
ffff800000108366	kernel.asm	/^ffff800000108366:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff80000010836b	kernel.asm	/^ffff80000010836b:	e9 80 02 00 00       	jmpq   ffff8000001085f0 <sys_unlink+0x2ae>$/;"	l
ffff800000108370	kernel.asm	/^ffff800000108370:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000108375	kernel.asm	/^ffff800000108375:	48 ba 9e 4d 10 00 00 	movabs $0xffff800000104d9e,%rdx$/;"	l
ffff80000010837c	kernel.asm	/^ffff80000010837c:	80 ff ff $/;"	l
ffff80000010837f	kernel.asm	/^ffff80000010837f:	ff d2                	callq  *%rdx$/;"	l
ffff800000108381	kernel.asm	/^ffff800000108381:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
ffff800000108385	kernel.asm	/^ffff800000108385:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx$/;"	l
ffff800000108389	kernel.asm	/^ffff800000108389:	48 89 d6             	mov    %rdx,%rsi$/;"	l
ffff80000010838c	kernel.asm	/^ffff80000010838c:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010838f	kernel.asm	/^ffff80000010838f:	48 b8 e4 36 10 00 00 	movabs $0xffff8000001036e4,%rax$/;"	l
ffff800000108396	kernel.asm	/^ffff800000108396:	80 ff ff $/;"	l
ffff800000108399	kernel.asm	/^ffff800000108399:	ff d0                	callq  *%rax$/;"	l
ffff80000010839b	kernel.asm	/^ffff80000010839b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff80000010839f	kernel.asm	/^ffff80000010839f:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)$/;"	l
ffff8000001083a4	kernel.asm	/^ffff8000001083a4:	75 1b                	jne    ffff8000001083c1 <sys_unlink+0x7f>$/;"	l
ffff8000001083a6	kernel.asm	/^ffff8000001083a6:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff8000001083ab	kernel.asm	/^ffff8000001083ab:	48 ba 74 4e 10 00 00 	movabs $0xffff800000104e74,%rdx$/;"	l
ffff8000001083b2	kernel.asm	/^ffff8000001083b2:	80 ff ff $/;"	l
ffff8000001083b5	kernel.asm	/^ffff8000001083b5:	ff d2                	callq  *%rdx$/;"	l
ffff8000001083b7	kernel.asm	/^ffff8000001083b7:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff8000001083bc	kernel.asm	/^ffff8000001083bc:	e9 2f 02 00 00       	jmpq   ffff8000001085f0 <sys_unlink+0x2ae>$/;"	l
ffff8000001083c1	kernel.asm	/^ffff8000001083c1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001083c5	kernel.asm	/^ffff8000001083c5:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001083c8	kernel.asm	/^ffff8000001083c8:	48 b8 ca 27 10 00 00 	movabs $0xffff8000001027ca,%rax$/;"	l
ffff8000001083cf	kernel.asm	/^ffff8000001083cf:	80 ff ff $/;"	l
ffff8000001083d2	kernel.asm	/^ffff8000001083d2:	ff d0                	callq  *%rax$/;"	l
ffff8000001083d4	kernel.asm	/^ffff8000001083d4:	48 8d 45 d0          	lea    -0x30(%rbp),%rax$/;"	l
ffff8000001083d8	kernel.asm	/^ffff8000001083d8:	48 be fe be 10 00 00 	movabs $0xffff80000010befe,%rsi$/;"	l
ffff8000001083df	kernel.asm	/^ffff8000001083df:	80 ff ff $/;"	l
ffff8000001083e2	kernel.asm	/^ffff8000001083e2:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001083e5	kernel.asm	/^ffff8000001083e5:	48 b8 ff 31 10 00 00 	movabs $0xffff8000001031ff,%rax$/;"	l
ffff8000001083ec	kernel.asm	/^ffff8000001083ec:	80 ff ff $/;"	l
ffff8000001083ef	kernel.asm	/^ffff8000001083ef:	ff d0                	callq  *%rax$/;"	l
ffff8000001083f1	kernel.asm	/^ffff8000001083f1:	85 c0                	test   %eax,%eax$/;"	l
ffff8000001083f3	kernel.asm	/^ffff8000001083f3:	0f 84 ce 01 00 00    	je     ffff8000001085c7 <sys_unlink+0x285>$/;"	l
ffff8000001083f9	kernel.asm	/^ffff8000001083f9:	48 8d 45 d0          	lea    -0x30(%rbp),%rax$/;"	l
ffff8000001083fd	kernel.asm	/^ffff8000001083fd:	48 be 00 bf 10 00 00 	movabs $0xffff80000010bf00,%rsi$/;"	l
ffff800000108404	kernel.asm	/^ffff800000108404:	80 ff ff $/;"	l
ffff800000108407	kernel.asm	/^ffff800000108407:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010840a	kernel.asm	/^ffff80000010840a:	48 b8 ff 31 10 00 00 	movabs $0xffff8000001031ff,%rax$/;"	l
ffff800000108411	kernel.asm	/^ffff800000108411:	80 ff ff $/;"	l
ffff800000108414	kernel.asm	/^ffff800000108414:	ff d0                	callq  *%rax$/;"	l
ffff800000108416	kernel.asm	/^ffff800000108416:	85 c0                	test   %eax,%eax$/;"	l
ffff800000108418	kernel.asm	/^ffff800000108418:	0f 84 a9 01 00 00    	je     ffff8000001085c7 <sys_unlink+0x285>$/;"	l
ffff80000010841e	kernel.asm	/^ffff80000010841e:	48 8d 55 c4          	lea    -0x3c(%rbp),%rdx$/;"	l
ffff800000108422	kernel.asm	/^ffff800000108422:	48 8d 4d d0          	lea    -0x30(%rbp),%rcx$/;"	l
ffff800000108426	kernel.asm	/^ffff800000108426:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010842a	kernel.asm	/^ffff80000010842a:	48 89 ce             	mov    %rcx,%rsi$/;"	l
ffff80000010842d	kernel.asm	/^ffff80000010842d:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000108430	kernel.asm	/^ffff800000108430:	48 b8 30 32 10 00 00 	movabs $0xffff800000103230,%rax$/;"	l
ffff800000108437	kernel.asm	/^ffff800000108437:	80 ff ff $/;"	l
ffff80000010843a	kernel.asm	/^ffff80000010843a:	ff d0                	callq  *%rax$/;"	l
ffff80000010843c	kernel.asm	/^ffff80000010843c:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ffff800000108440	kernel.asm	/^ffff800000108440:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)$/;"	l
ffff800000108445	kernel.asm	/^ffff800000108445:	0f 84 7b 01 00 00    	je     ffff8000001085c6 <sys_unlink+0x284>$/;"	l
ffff80000010844b	kernel.asm	/^ffff80000010844b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff80000010844f	kernel.asm	/^ffff80000010844f:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000108452	kernel.asm	/^ffff800000108452:	48 b8 ca 27 10 00 00 	movabs $0xffff8000001027ca,%rax$/;"	l
ffff800000108459	kernel.asm	/^ffff800000108459:	80 ff ff $/;"	l
ffff80000010845c	kernel.asm	/^ffff80000010845c:	ff d0                	callq  *%rax$/;"	l
ffff80000010845e	kernel.asm	/^ffff80000010845e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000108462	kernel.asm	/^ffff800000108462:	0f b7 80 9a 00 00 00 	movzwl 0x9a(%rax),%eax$/;"	l
ffff800000108469	kernel.asm	/^ffff800000108469:	66 85 c0             	test   %ax,%ax$/;"	l
ffff80000010846c	kernel.asm	/^ffff80000010846c:	7f 16                	jg     ffff800000108484 <sys_unlink+0x142>$/;"	l
ffff80000010846e	kernel.asm	/^ffff80000010846e:	48 bf 03 bf 10 00 00 	movabs $0xffff80000010bf03,%rdi$/;"	l
ffff800000108475	kernel.asm	/^ffff800000108475:	80 ff ff $/;"	l
ffff800000108478	kernel.asm	/^ffff800000108478:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff80000010847f	kernel.asm	/^ffff80000010847f:	80 ff ff $/;"	l
ffff800000108482	kernel.asm	/^ffff800000108482:	ff d0                	callq  *%rax$/;"	l
ffff800000108484	kernel.asm	/^ffff800000108484:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000108488	kernel.asm	/^ffff800000108488:	0f b7 80 94 00 00 00 	movzwl 0x94(%rax),%eax$/;"	l
ffff80000010848f	kernel.asm	/^ffff80000010848f:	66 83 f8 01          	cmp    $0x1,%ax$/;"	l
ffff800000108493	kernel.asm	/^ffff800000108493:	75 2f                	jne    ffff8000001084c4 <sys_unlink+0x182>$/;"	l
ffff800000108495	kernel.asm	/^ffff800000108495:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000108499	kernel.asm	/^ffff800000108499:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010849c	kernel.asm	/^ffff80000010849c:	48 b8 c2 82 10 00 00 	movabs $0xffff8000001082c2,%rax$/;"	l
ffff8000001084a3	kernel.asm	/^ffff8000001084a3:	80 ff ff $/;"	l
ffff8000001084a6	kernel.asm	/^ffff8000001084a6:	ff d0                	callq  *%rax$/;"	l
ffff8000001084a8	kernel.asm	/^ffff8000001084a8:	85 c0                	test   %eax,%eax$/;"	l
ffff8000001084aa	kernel.asm	/^ffff8000001084aa:	75 18                	jne    ffff8000001084c4 <sys_unlink+0x182>$/;"	l
ffff8000001084ac	kernel.asm	/^ffff8000001084ac:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff8000001084b0	kernel.asm	/^ffff8000001084b0:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001084b3	kernel.asm	/^ffff8000001084b3:	48 b8 ae 2a 10 00 00 	movabs $0xffff800000102aae,%rax$/;"	l
ffff8000001084ba	kernel.asm	/^ffff8000001084ba:	80 ff ff $/;"	l
ffff8000001084bd	kernel.asm	/^ffff8000001084bd:	ff d0                	callq  *%rax$/;"	l
ffff8000001084bf	kernel.asm	/^ffff8000001084bf:	e9 03 01 00 00       	jmpq   ffff8000001085c7 <sys_unlink+0x285>$/;"	l
ffff8000001084c4	kernel.asm	/^ffff8000001084c4:	48 8d 45 e0          	lea    -0x20(%rbp),%rax$/;"	l
ffff8000001084c8	kernel.asm	/^ffff8000001084c8:	ba 10 00 00 00       	mov    $0x10,%edx$/;"	l
ffff8000001084cd	kernel.asm	/^ffff8000001084cd:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffff8000001084d2	kernel.asm	/^ffff8000001084d2:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001084d5	kernel.asm	/^ffff8000001084d5:	48 b8 9b 75 10 00 00 	movabs $0xffff80000010759b,%rax$/;"	l
ffff8000001084dc	kernel.asm	/^ffff8000001084dc:	80 ff ff $/;"	l
ffff8000001084df	kernel.asm	/^ffff8000001084df:	ff d0                	callq  *%rax$/;"	l
ffff8000001084e1	kernel.asm	/^ffff8000001084e1:	8b 55 c4             	mov    -0x3c(%rbp),%edx$/;"	l
ffff8000001084e4	kernel.asm	/^ffff8000001084e4:	48 8d 75 e0          	lea    -0x20(%rbp),%rsi$/;"	l
ffff8000001084e8	kernel.asm	/^ffff8000001084e8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001084ec	kernel.asm	/^ffff8000001084ec:	b9 10 00 00 00       	mov    $0x10,%ecx$/;"	l
ffff8000001084f1	kernel.asm	/^ffff8000001084f1:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001084f4	kernel.asm	/^ffff8000001084f4:	48 b8 ed 2f 10 00 00 	movabs $0xffff800000102fed,%rax$/;"	l
ffff8000001084fb	kernel.asm	/^ffff8000001084fb:	80 ff ff $/;"	l
ffff8000001084fe	kernel.asm	/^ffff8000001084fe:	ff d0                	callq  *%rax$/;"	l
ffff800000108500	kernel.asm	/^ffff800000108500:	83 f8 10             	cmp    $0x10,%eax$/;"	l
ffff800000108503	kernel.asm	/^ffff800000108503:	74 16                	je     ffff80000010851b <sys_unlink+0x1d9>$/;"	l
ffff800000108505	kernel.asm	/^ffff800000108505:	48 bf 15 bf 10 00 00 	movabs $0xffff80000010bf15,%rdi$/;"	l
ffff80000010850c	kernel.asm	/^ffff80000010850c:	80 ff ff $/;"	l
ffff80000010850f	kernel.asm	/^ffff80000010850f:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff800000108516	kernel.asm	/^ffff800000108516:	80 ff ff $/;"	l
ffff800000108519	kernel.asm	/^ffff800000108519:	ff d0                	callq  *%rax$/;"	l
ffff80000010851b	kernel.asm	/^ffff80000010851b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff80000010851f	kernel.asm	/^ffff80000010851f:	0f b7 80 94 00 00 00 	movzwl 0x94(%rax),%eax$/;"	l
ffff800000108526	kernel.asm	/^ffff800000108526:	66 83 f8 01          	cmp    $0x1,%ax$/;"	l
ffff80000010852a	kernel.asm	/^ffff80000010852a:	75 2e                	jne    ffff80000010855a <sys_unlink+0x218>$/;"	l
ffff80000010852c	kernel.asm	/^ffff80000010852c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000108530	kernel.asm	/^ffff800000108530:	0f b7 80 9a 00 00 00 	movzwl 0x9a(%rax),%eax$/;"	l
ffff800000108537	kernel.asm	/^ffff800000108537:	83 e8 01             	sub    $0x1,%eax$/;"	l
ffff80000010853a	kernel.asm	/^ffff80000010853a:	89 c2                	mov    %eax,%edx$/;"	l
ffff80000010853c	kernel.asm	/^ffff80000010853c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000108540	kernel.asm	/^ffff800000108540:	66 89 90 9a 00 00 00 	mov    %dx,0x9a(%rax)$/;"	l
ffff800000108547	kernel.asm	/^ffff800000108547:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010854b	kernel.asm	/^ffff80000010854b:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010854e	kernel.asm	/^ffff80000010854e:	48 b8 38 25 10 00 00 	movabs $0xffff800000102538,%rax$/;"	l
ffff800000108555	kernel.asm	/^ffff800000108555:	80 ff ff $/;"	l
ffff800000108558	kernel.asm	/^ffff800000108558:	ff d0                	callq  *%rax$/;"	l
ffff80000010855a	kernel.asm	/^ffff80000010855a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010855e	kernel.asm	/^ffff80000010855e:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000108561	kernel.asm	/^ffff800000108561:	48 b8 ae 2a 10 00 00 	movabs $0xffff800000102aae,%rax$/;"	l
ffff800000108568	kernel.asm	/^ffff800000108568:	80 ff ff $/;"	l
ffff80000010856b	kernel.asm	/^ffff80000010856b:	ff d0                	callq  *%rax$/;"	l
ffff80000010856d	kernel.asm	/^ffff80000010856d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000108571	kernel.asm	/^ffff800000108571:	0f b7 80 9a 00 00 00 	movzwl 0x9a(%rax),%eax$/;"	l
ffff800000108578	kernel.asm	/^ffff800000108578:	83 e8 01             	sub    $0x1,%eax$/;"	l
ffff80000010857b	kernel.asm	/^ffff80000010857b:	89 c2                	mov    %eax,%edx$/;"	l
ffff80000010857d	kernel.asm	/^ffff80000010857d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000108581	kernel.asm	/^ffff800000108581:	66 89 90 9a 00 00 00 	mov    %dx,0x9a(%rax)$/;"	l
ffff800000108588	kernel.asm	/^ffff800000108588:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff80000010858c	kernel.asm	/^ffff80000010858c:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010858f	kernel.asm	/^ffff80000010858f:	48 b8 38 25 10 00 00 	movabs $0xffff800000102538,%rax$/;"	l
ffff800000108596	kernel.asm	/^ffff800000108596:	80 ff ff $/;"	l
ffff800000108599	kernel.asm	/^ffff800000108599:	ff d0                	callq  *%rax$/;"	l
ffff80000010859b	kernel.asm	/^ffff80000010859b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff80000010859f	kernel.asm	/^ffff80000010859f:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001085a2	kernel.asm	/^ffff8000001085a2:	48 b8 ae 2a 10 00 00 	movabs $0xffff800000102aae,%rax$/;"	l
ffff8000001085a9	kernel.asm	/^ffff8000001085a9:	80 ff ff $/;"	l
ffff8000001085ac	kernel.asm	/^ffff8000001085ac:	ff d0                	callq  *%rax$/;"	l
ffff8000001085ae	kernel.asm	/^ffff8000001085ae:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff8000001085b3	kernel.asm	/^ffff8000001085b3:	48 ba 74 4e 10 00 00 	movabs $0xffff800000104e74,%rdx$/;"	l
ffff8000001085ba	kernel.asm	/^ffff8000001085ba:	80 ff ff $/;"	l
ffff8000001085bd	kernel.asm	/^ffff8000001085bd:	ff d2                	callq  *%rdx$/;"	l
ffff8000001085bf	kernel.asm	/^ffff8000001085bf:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff8000001085c4	kernel.asm	/^ffff8000001085c4:	eb 2a                	jmp    ffff8000001085f0 <sys_unlink+0x2ae>$/;"	l
ffff8000001085c6	kernel.asm	/^ffff8000001085c6:	90                   	nop$/;"	l
ffff8000001085c7	kernel.asm	/^ffff8000001085c7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001085cb	kernel.asm	/^ffff8000001085cb:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001085ce	kernel.asm	/^ffff8000001085ce:	48 b8 ae 2a 10 00 00 	movabs $0xffff800000102aae,%rax$/;"	l
ffff8000001085d5	kernel.asm	/^ffff8000001085d5:	80 ff ff $/;"	l
ffff8000001085d8	kernel.asm	/^ffff8000001085d8:	ff d0                	callq  *%rax$/;"	l
ffff8000001085da	kernel.asm	/^ffff8000001085da:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff8000001085df	kernel.asm	/^ffff8000001085df:	48 ba 74 4e 10 00 00 	movabs $0xffff800000104e74,%rdx$/;"	l
ffff8000001085e6	kernel.asm	/^ffff8000001085e6:	80 ff ff $/;"	l
ffff8000001085e9	kernel.asm	/^ffff8000001085e9:	ff d2                	callq  *%rdx$/;"	l
ffff8000001085eb	kernel.asm	/^ffff8000001085eb:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff8000001085f0	kernel.asm	/^ffff8000001085f0:	c9                   	leaveq $/;"	l
ffff8000001085f1	kernel.asm	/^ffff8000001085f1:	c3                   	retq   $/;"	l
ffff8000001085f2	kernel.asm	/^ffff8000001085f2 <create>:$/;"	l
ffff8000001085f2	kernel.asm	/^ffff8000001085f2:	55                   	push   %rbp$/;"	l
ffff8000001085f3	kernel.asm	/^ffff8000001085f3:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff8000001085f6	kernel.asm	/^ffff8000001085f6:	48 83 ec 50          	sub    $0x50,%rsp$/;"	l
ffff8000001085fa	kernel.asm	/^ffff8000001085fa:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)$/;"	l
ffff8000001085fe	kernel.asm	/^ffff8000001085fe:	89 c8                	mov    %ecx,%eax$/;"	l
ffff800000108600	kernel.asm	/^ffff800000108600:	66 89 75 c4          	mov    %si,-0x3c(%rbp)$/;"	l
ffff800000108604	kernel.asm	/^ffff800000108604:	66 89 55 c0          	mov    %dx,-0x40(%rbp)$/;"	l
ffff800000108608	kernel.asm	/^ffff800000108608:	66 89 45 bc          	mov    %ax,-0x44(%rbp)$/;"	l
ffff80000010860c	kernel.asm	/^ffff80000010860c:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx$/;"	l
ffff800000108610	kernel.asm	/^ffff800000108610:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
ffff800000108614	kernel.asm	/^ffff800000108614:	48 89 d6             	mov    %rdx,%rsi$/;"	l
ffff800000108617	kernel.asm	/^ffff800000108617:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010861a	kernel.asm	/^ffff80000010861a:	48 b8 e4 36 10 00 00 	movabs $0xffff8000001036e4,%rax$/;"	l
ffff800000108621	kernel.asm	/^ffff800000108621:	80 ff ff $/;"	l
ffff800000108624	kernel.asm	/^ffff800000108624:	ff d0                	callq  *%rax$/;"	l
ffff800000108626	kernel.asm	/^ffff800000108626:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff80000010862a	kernel.asm	/^ffff80000010862a:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)$/;"	l
ffff80000010862f	kernel.asm	/^ffff80000010862f:	75 0a                	jne    ffff80000010863b <create+0x49>$/;"	l
ffff800000108631	kernel.asm	/^ffff800000108631:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000108636	kernel.asm	/^ffff800000108636:	e9 1d 02 00 00       	jmpq   ffff800000108858 <create+0x266>$/;"	l
ffff80000010863b	kernel.asm	/^ffff80000010863b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010863f	kernel.asm	/^ffff80000010863f:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000108642	kernel.asm	/^ffff800000108642:	48 b8 ca 27 10 00 00 	movabs $0xffff8000001027ca,%rax$/;"	l
ffff800000108649	kernel.asm	/^ffff800000108649:	80 ff ff $/;"	l
ffff80000010864c	kernel.asm	/^ffff80000010864c:	ff d0                	callq  *%rax$/;"	l
ffff80000010864e	kernel.asm	/^ffff80000010864e:	48 8d 55 ec          	lea    -0x14(%rbp),%rdx$/;"	l
ffff800000108652	kernel.asm	/^ffff800000108652:	48 8d 4d d0          	lea    -0x30(%rbp),%rcx$/;"	l
ffff800000108656	kernel.asm	/^ffff800000108656:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010865a	kernel.asm	/^ffff80000010865a:	48 89 ce             	mov    %rcx,%rsi$/;"	l
ffff80000010865d	kernel.asm	/^ffff80000010865d:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000108660	kernel.asm	/^ffff800000108660:	48 b8 30 32 10 00 00 	movabs $0xffff800000103230,%rax$/;"	l
ffff800000108667	kernel.asm	/^ffff800000108667:	80 ff ff $/;"	l
ffff80000010866a	kernel.asm	/^ffff80000010866a:	ff d0                	callq  *%rax$/;"	l
ffff80000010866c	kernel.asm	/^ffff80000010866c:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ffff800000108670	kernel.asm	/^ffff800000108670:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)$/;"	l
ffff800000108675	kernel.asm	/^ffff800000108675:	74 64                	je     ffff8000001086db <create+0xe9>$/;"	l
ffff800000108677	kernel.asm	/^ffff800000108677:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010867b	kernel.asm	/^ffff80000010867b:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010867e	kernel.asm	/^ffff80000010867e:	48 b8 ae 2a 10 00 00 	movabs $0xffff800000102aae,%rax$/;"	l
ffff800000108685	kernel.asm	/^ffff800000108685:	80 ff ff $/;"	l
ffff800000108688	kernel.asm	/^ffff800000108688:	ff d0                	callq  *%rax$/;"	l
ffff80000010868a	kernel.asm	/^ffff80000010868a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff80000010868e	kernel.asm	/^ffff80000010868e:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000108691	kernel.asm	/^ffff800000108691:	48 b8 ca 27 10 00 00 	movabs $0xffff8000001027ca,%rax$/;"	l
ffff800000108698	kernel.asm	/^ffff800000108698:	80 ff ff $/;"	l
ffff80000010869b	kernel.asm	/^ffff80000010869b:	ff d0                	callq  *%rax$/;"	l
ffff80000010869d	kernel.asm	/^ffff80000010869d:	66 83 7d c4 02       	cmpw   $0x2,-0x3c(%rbp)$/;"	l
ffff8000001086a2	kernel.asm	/^ffff8000001086a2:	75 1a                	jne    ffff8000001086be <create+0xcc>$/;"	l
ffff8000001086a4	kernel.asm	/^ffff8000001086a4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff8000001086a8	kernel.asm	/^ffff8000001086a8:	0f b7 80 94 00 00 00 	movzwl 0x94(%rax),%eax$/;"	l
ffff8000001086af	kernel.asm	/^ffff8000001086af:	66 83 f8 02          	cmp    $0x2,%ax$/;"	l
ffff8000001086b3	kernel.asm	/^ffff8000001086b3:	75 09                	jne    ffff8000001086be <create+0xcc>$/;"	l
ffff8000001086b5	kernel.asm	/^ffff8000001086b5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff8000001086b9	kernel.asm	/^ffff8000001086b9:	e9 9a 01 00 00       	jmpq   ffff800000108858 <create+0x266>$/;"	l
ffff8000001086be	kernel.asm	/^ffff8000001086be:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff8000001086c2	kernel.asm	/^ffff8000001086c2:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001086c5	kernel.asm	/^ffff8000001086c5:	48 b8 ae 2a 10 00 00 	movabs $0xffff800000102aae,%rax$/;"	l
ffff8000001086cc	kernel.asm	/^ffff8000001086cc:	80 ff ff $/;"	l
ffff8000001086cf	kernel.asm	/^ffff8000001086cf:	ff d0                	callq  *%rax$/;"	l
ffff8000001086d1	kernel.asm	/^ffff8000001086d1:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff8000001086d6	kernel.asm	/^ffff8000001086d6:	e9 7d 01 00 00       	jmpq   ffff800000108858 <create+0x266>$/;"	l
ffff8000001086db	kernel.asm	/^ffff8000001086db:	0f bf 55 c4          	movswl -0x3c(%rbp),%edx$/;"	l
ffff8000001086df	kernel.asm	/^ffff8000001086df:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001086e3	kernel.asm	/^ffff8000001086e3:	8b 00                	mov    (%rax),%eax$/;"	l
ffff8000001086e5	kernel.asm	/^ffff8000001086e5:	89 d6                	mov    %edx,%esi$/;"	l
ffff8000001086e7	kernel.asm	/^ffff8000001086e7:	89 c7                	mov    %eax,%edi$/;"	l
ffff8000001086e9	kernel.asm	/^ffff8000001086e9:	48 b8 13 24 10 00 00 	movabs $0xffff800000102413,%rax$/;"	l
ffff8000001086f0	kernel.asm	/^ffff8000001086f0:	80 ff ff $/;"	l
ffff8000001086f3	kernel.asm	/^ffff8000001086f3:	ff d0                	callq  *%rax$/;"	l
ffff8000001086f5	kernel.asm	/^ffff8000001086f5:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ffff8000001086f9	kernel.asm	/^ffff8000001086f9:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)$/;"	l
ffff8000001086fe	kernel.asm	/^ffff8000001086fe:	75 16                	jne    ffff800000108716 <create+0x124>$/;"	l
ffff800000108700	kernel.asm	/^ffff800000108700:	48 bf 24 bf 10 00 00 	movabs $0xffff80000010bf24,%rdi$/;"	l
ffff800000108707	kernel.asm	/^ffff800000108707:	80 ff ff $/;"	l
ffff80000010870a	kernel.asm	/^ffff80000010870a:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff800000108711	kernel.asm	/^ffff800000108711:	80 ff ff $/;"	l
ffff800000108714	kernel.asm	/^ffff800000108714:	ff d0                	callq  *%rax$/;"	l
ffff800000108716	kernel.asm	/^ffff800000108716:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff80000010871a	kernel.asm	/^ffff80000010871a:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010871d	kernel.asm	/^ffff80000010871d:	48 b8 ca 27 10 00 00 	movabs $0xffff8000001027ca,%rax$/;"	l
ffff800000108724	kernel.asm	/^ffff800000108724:	80 ff ff $/;"	l
ffff800000108727	kernel.asm	/^ffff800000108727:	ff d0                	callq  *%rax$/;"	l
ffff800000108729	kernel.asm	/^ffff800000108729:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff80000010872d	kernel.asm	/^ffff80000010872d:	0f b7 55 c0          	movzwl -0x40(%rbp),%edx$/;"	l
ffff800000108731	kernel.asm	/^ffff800000108731:	66 89 90 96 00 00 00 	mov    %dx,0x96(%rax)$/;"	l
ffff800000108738	kernel.asm	/^ffff800000108738:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff80000010873c	kernel.asm	/^ffff80000010873c:	0f b7 55 bc          	movzwl -0x44(%rbp),%edx$/;"	l
ffff800000108740	kernel.asm	/^ffff800000108740:	66 89 90 98 00 00 00 	mov    %dx,0x98(%rax)$/;"	l
ffff800000108747	kernel.asm	/^ffff800000108747:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff80000010874b	kernel.asm	/^ffff80000010874b:	66 c7 80 9a 00 00 00 	movw   $0x1,0x9a(%rax)$/;"	l
ffff800000108752	kernel.asm	/^ffff800000108752:	01 00 $/;"	l
ffff800000108754	kernel.asm	/^ffff800000108754:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000108758	kernel.asm	/^ffff800000108758:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010875b	kernel.asm	/^ffff80000010875b:	48 b8 38 25 10 00 00 	movabs $0xffff800000102538,%rax$/;"	l
ffff800000108762	kernel.asm	/^ffff800000108762:	80 ff ff $/;"	l
ffff800000108765	kernel.asm	/^ffff800000108765:	ff d0                	callq  *%rax$/;"	l
ffff800000108767	kernel.asm	/^ffff800000108767:	66 83 7d c4 01       	cmpw   $0x1,-0x3c(%rbp)$/;"	l
ffff80000010876c	kernel.asm	/^ffff80000010876c:	0f 85 94 00 00 00    	jne    ffff800000108806 <create+0x214>$/;"	l
ffff800000108772	kernel.asm	/^ffff800000108772:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000108776	kernel.asm	/^ffff800000108776:	0f b7 80 9a 00 00 00 	movzwl 0x9a(%rax),%eax$/;"	l
ffff80000010877d	kernel.asm	/^ffff80000010877d:	83 c0 01             	add    $0x1,%eax$/;"	l
ffff800000108780	kernel.asm	/^ffff800000108780:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000108782	kernel.asm	/^ffff800000108782:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000108786	kernel.asm	/^ffff800000108786:	66 89 90 9a 00 00 00 	mov    %dx,0x9a(%rax)$/;"	l
ffff80000010878d	kernel.asm	/^ffff80000010878d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000108791	kernel.asm	/^ffff800000108791:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000108794	kernel.asm	/^ffff800000108794:	48 b8 38 25 10 00 00 	movabs $0xffff800000102538,%rax$/;"	l
ffff80000010879b	kernel.asm	/^ffff80000010879b:	80 ff ff $/;"	l
ffff80000010879e	kernel.asm	/^ffff80000010879e:	ff d0                	callq  *%rax$/;"	l
ffff8000001087a0	kernel.asm	/^ffff8000001087a0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff8000001087a4	kernel.asm	/^ffff8000001087a4:	8b 50 04             	mov    0x4(%rax),%edx$/;"	l
ffff8000001087a7	kernel.asm	/^ffff8000001087a7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff8000001087ab	kernel.asm	/^ffff8000001087ab:	48 be fe be 10 00 00 	movabs $0xffff80000010befe,%rsi$/;"	l
ffff8000001087b2	kernel.asm	/^ffff8000001087b2:	80 ff ff $/;"	l
ffff8000001087b5	kernel.asm	/^ffff8000001087b5:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001087b8	kernel.asm	/^ffff8000001087b8:	48 b8 30 33 10 00 00 	movabs $0xffff800000103330,%rax$/;"	l
ffff8000001087bf	kernel.asm	/^ffff8000001087bf:	80 ff ff $/;"	l
ffff8000001087c2	kernel.asm	/^ffff8000001087c2:	ff d0                	callq  *%rax$/;"	l
ffff8000001087c4	kernel.asm	/^ffff8000001087c4:	85 c0                	test   %eax,%eax$/;"	l
ffff8000001087c6	kernel.asm	/^ffff8000001087c6:	78 28                	js     ffff8000001087f0 <create+0x1fe>$/;"	l
ffff8000001087c8	kernel.asm	/^ffff8000001087c8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001087cc	kernel.asm	/^ffff8000001087cc:	8b 50 04             	mov    0x4(%rax),%edx$/;"	l
ffff8000001087cf	kernel.asm	/^ffff8000001087cf:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff8000001087d3	kernel.asm	/^ffff8000001087d3:	48 be 00 bf 10 00 00 	movabs $0xffff80000010bf00,%rsi$/;"	l
ffff8000001087da	kernel.asm	/^ffff8000001087da:	80 ff ff $/;"	l
ffff8000001087dd	kernel.asm	/^ffff8000001087dd:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001087e0	kernel.asm	/^ffff8000001087e0:	48 b8 30 33 10 00 00 	movabs $0xffff800000103330,%rax$/;"	l
ffff8000001087e7	kernel.asm	/^ffff8000001087e7:	80 ff ff $/;"	l
ffff8000001087ea	kernel.asm	/^ffff8000001087ea:	ff d0                	callq  *%rax$/;"	l
ffff8000001087ec	kernel.asm	/^ffff8000001087ec:	85 c0                	test   %eax,%eax$/;"	l
ffff8000001087ee	kernel.asm	/^ffff8000001087ee:	79 16                	jns    ffff800000108806 <create+0x214>$/;"	l
ffff8000001087f0	kernel.asm	/^ffff8000001087f0:	48 bf 33 bf 10 00 00 	movabs $0xffff80000010bf33,%rdi$/;"	l
ffff8000001087f7	kernel.asm	/^ffff8000001087f7:	80 ff ff $/;"	l
ffff8000001087fa	kernel.asm	/^ffff8000001087fa:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff800000108801	kernel.asm	/^ffff800000108801:	80 ff ff $/;"	l
ffff800000108804	kernel.asm	/^ffff800000108804:	ff d0                	callq  *%rax$/;"	l
ffff800000108806	kernel.asm	/^ffff800000108806:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff80000010880a	kernel.asm	/^ffff80000010880a:	8b 50 04             	mov    0x4(%rax),%edx$/;"	l
ffff80000010880d	kernel.asm	/^ffff80000010880d:	48 8d 4d d0          	lea    -0x30(%rbp),%rcx$/;"	l
ffff800000108811	kernel.asm	/^ffff800000108811:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000108815	kernel.asm	/^ffff800000108815:	48 89 ce             	mov    %rcx,%rsi$/;"	l
ffff800000108818	kernel.asm	/^ffff800000108818:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010881b	kernel.asm	/^ffff80000010881b:	48 b8 30 33 10 00 00 	movabs $0xffff800000103330,%rax$/;"	l
ffff800000108822	kernel.asm	/^ffff800000108822:	80 ff ff $/;"	l
ffff800000108825	kernel.asm	/^ffff800000108825:	ff d0                	callq  *%rax$/;"	l
ffff800000108827	kernel.asm	/^ffff800000108827:	85 c0                	test   %eax,%eax$/;"	l
ffff800000108829	kernel.asm	/^ffff800000108829:	79 16                	jns    ffff800000108841 <create+0x24f>$/;"	l
ffff80000010882b	kernel.asm	/^ffff80000010882b:	48 bf 3f bf 10 00 00 	movabs $0xffff80000010bf3f,%rdi$/;"	l
ffff800000108832	kernel.asm	/^ffff800000108832:	80 ff ff $/;"	l
ffff800000108835	kernel.asm	/^ffff800000108835:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff80000010883c	kernel.asm	/^ffff80000010883c:	80 ff ff $/;"	l
ffff80000010883f	kernel.asm	/^ffff80000010883f:	ff d0                	callq  *%rax$/;"	l
ffff800000108841	kernel.asm	/^ffff800000108841:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000108845	kernel.asm	/^ffff800000108845:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000108848	kernel.asm	/^ffff800000108848:	48 b8 ae 2a 10 00 00 	movabs $0xffff800000102aae,%rax$/;"	l
ffff80000010884f	kernel.asm	/^ffff80000010884f:	80 ff ff $/;"	l
ffff800000108852	kernel.asm	/^ffff800000108852:	ff d0                	callq  *%rax$/;"	l
ffff800000108854	kernel.asm	/^ffff800000108854:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000108858	kernel.asm	/^ffff800000108858:	c9                   	leaveq $/;"	l
ffff800000108859	kernel.asm	/^ffff800000108859:	c3                   	retq   $/;"	l
ffff80000010885a	kernel.asm	/^ffff80000010885a <sys_open>:$/;"	l
ffff80000010885a	kernel.asm	/^ffff80000010885a:	55                   	push   %rbp$/;"	l
ffff80000010885b	kernel.asm	/^ffff80000010885b:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010885e	kernel.asm	/^ffff80000010885e:	48 83 ec 30          	sub    $0x30,%rsp$/;"	l
ffff800000108862	kernel.asm	/^ffff800000108862:	48 8d 45 e0          	lea    -0x20(%rbp),%rax$/;"	l
ffff800000108866	kernel.asm	/^ffff800000108866:	48 89 c6             	mov    %rax,%rsi$/;"	l
ffff800000108869	kernel.asm	/^ffff800000108869:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
ffff80000010886e	kernel.asm	/^ffff80000010886e:	48 b8 f3 7b 10 00 00 	movabs $0xffff800000107bf3,%rax$/;"	l
ffff800000108875	kernel.asm	/^ffff800000108875:	80 ff ff $/;"	l
ffff800000108878	kernel.asm	/^ffff800000108878:	ff d0                	callq  *%rax$/;"	l
ffff80000010887a	kernel.asm	/^ffff80000010887a:	85 c0                	test   %eax,%eax$/;"	l
ffff80000010887c	kernel.asm	/^ffff80000010887c:	78 1c                	js     ffff80000010889a <sys_open+0x40>$/;"	l
ffff80000010887e	kernel.asm	/^ffff80000010887e:	48 8d 45 dc          	lea    -0x24(%rbp),%rax$/;"	l
ffff800000108882	kernel.asm	/^ffff800000108882:	48 89 c6             	mov    %rax,%rsi$/;"	l
ffff800000108885	kernel.asm	/^ffff800000108885:	bf 01 00 00 00       	mov    $0x1,%edi$/;"	l
ffff80000010888a	kernel.asm	/^ffff80000010888a:	48 b8 03 7b 10 00 00 	movabs $0xffff800000107b03,%rax$/;"	l
ffff800000108891	kernel.asm	/^ffff800000108891:	80 ff ff $/;"	l
ffff800000108894	kernel.asm	/^ffff800000108894:	ff d0                	callq  *%rax$/;"	l
ffff800000108896	kernel.asm	/^ffff800000108896:	85 c0                	test   %eax,%eax$/;"	l
ffff800000108898	kernel.asm	/^ffff800000108898:	79 0a                	jns    ffff8000001088a4 <sys_open+0x4a>$/;"	l
ffff80000010889a	kernel.asm	/^ffff80000010889a:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff80000010889f	kernel.asm	/^ffff80000010889f:	e9 fb 01 00 00       	jmpq   ffff800000108a9f <sys_open+0x245>$/;"	l
ffff8000001088a4	kernel.asm	/^ffff8000001088a4:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff8000001088a9	kernel.asm	/^ffff8000001088a9:	48 ba 9e 4d 10 00 00 	movabs $0xffff800000104d9e,%rdx$/;"	l
ffff8000001088b0	kernel.asm	/^ffff8000001088b0:	80 ff ff $/;"	l
ffff8000001088b3	kernel.asm	/^ffff8000001088b3:	ff d2                	callq  *%rdx$/;"	l
ffff8000001088b5	kernel.asm	/^ffff8000001088b5:	8b 45 dc             	mov    -0x24(%rbp),%eax$/;"	l
ffff8000001088b8	kernel.asm	/^ffff8000001088b8:	25 00 02 00 00       	and    $0x200,%eax$/;"	l
ffff8000001088bd	kernel.asm	/^ffff8000001088bd:	85 c0                	test   %eax,%eax$/;"	l
ffff8000001088bf	kernel.asm	/^ffff8000001088bf:	74 4c                	je     ffff80000010890d <sys_open+0xb3>$/;"	l
ffff8000001088c1	kernel.asm	/^ffff8000001088c1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff8000001088c5	kernel.asm	/^ffff8000001088c5:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
ffff8000001088ca	kernel.asm	/^ffff8000001088ca:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
ffff8000001088cf	kernel.asm	/^ffff8000001088cf:	be 02 00 00 00       	mov    $0x2,%esi$/;"	l
ffff8000001088d4	kernel.asm	/^ffff8000001088d4:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001088d7	kernel.asm	/^ffff8000001088d7:	48 b8 f2 85 10 00 00 	movabs $0xffff8000001085f2,%rax$/;"	l
ffff8000001088de	kernel.asm	/^ffff8000001088de:	80 ff ff $/;"	l
ffff8000001088e1	kernel.asm	/^ffff8000001088e1:	ff d0                	callq  *%rax$/;"	l
ffff8000001088e3	kernel.asm	/^ffff8000001088e3:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff8000001088e7	kernel.asm	/^ffff8000001088e7:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)$/;"	l
ffff8000001088ec	kernel.asm	/^ffff8000001088ec:	0f 85 ad 00 00 00    	jne    ffff80000010899f <sys_open+0x145>$/;"	l
ffff8000001088f2	kernel.asm	/^ffff8000001088f2:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff8000001088f7	kernel.asm	/^ffff8000001088f7:	48 ba 74 4e 10 00 00 	movabs $0xffff800000104e74,%rdx$/;"	l
ffff8000001088fe	kernel.asm	/^ffff8000001088fe:	80 ff ff $/;"	l
ffff800000108901	kernel.asm	/^ffff800000108901:	ff d2                	callq  *%rdx$/;"	l
ffff800000108903	kernel.asm	/^ffff800000108903:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff800000108908	kernel.asm	/^ffff800000108908:	e9 92 01 00 00       	jmpq   ffff800000108a9f <sys_open+0x245>$/;"	l
ffff80000010890d	kernel.asm	/^ffff80000010890d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff800000108911	kernel.asm	/^ffff800000108911:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000108914	kernel.asm	/^ffff800000108914:	48 b8 ba 36 10 00 00 	movabs $0xffff8000001036ba,%rax$/;"	l
ffff80000010891b	kernel.asm	/^ffff80000010891b:	80 ff ff $/;"	l
ffff80000010891e	kernel.asm	/^ffff80000010891e:	ff d0                	callq  *%rax$/;"	l
ffff800000108920	kernel.asm	/^ffff800000108920:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff800000108924	kernel.asm	/^ffff800000108924:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)$/;"	l
ffff800000108929	kernel.asm	/^ffff800000108929:	75 1b                	jne    ffff800000108946 <sys_open+0xec>$/;"	l
ffff80000010892b	kernel.asm	/^ffff80000010892b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000108930	kernel.asm	/^ffff800000108930:	48 ba 74 4e 10 00 00 	movabs $0xffff800000104e74,%rdx$/;"	l
ffff800000108937	kernel.asm	/^ffff800000108937:	80 ff ff $/;"	l
ffff80000010893a	kernel.asm	/^ffff80000010893a:	ff d2                	callq  *%rdx$/;"	l
ffff80000010893c	kernel.asm	/^ffff80000010893c:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff800000108941	kernel.asm	/^ffff800000108941:	e9 59 01 00 00       	jmpq   ffff800000108a9f <sys_open+0x245>$/;"	l
ffff800000108946	kernel.asm	/^ffff800000108946:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010894a	kernel.asm	/^ffff80000010894a:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010894d	kernel.asm	/^ffff80000010894d:	48 b8 ca 27 10 00 00 	movabs $0xffff8000001027ca,%rax$/;"	l
ffff800000108954	kernel.asm	/^ffff800000108954:	80 ff ff $/;"	l
ffff800000108957	kernel.asm	/^ffff800000108957:	ff d0                	callq  *%rax$/;"	l
ffff800000108959	kernel.asm	/^ffff800000108959:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010895d	kernel.asm	/^ffff80000010895d:	0f b7 80 94 00 00 00 	movzwl 0x94(%rax),%eax$/;"	l
ffff800000108964	kernel.asm	/^ffff800000108964:	66 83 f8 01          	cmp    $0x1,%ax$/;"	l
ffff800000108968	kernel.asm	/^ffff800000108968:	75 35                	jne    ffff80000010899f <sys_open+0x145>$/;"	l
ffff80000010896a	kernel.asm	/^ffff80000010896a:	8b 45 dc             	mov    -0x24(%rbp),%eax$/;"	l
ffff80000010896d	kernel.asm	/^ffff80000010896d:	85 c0                	test   %eax,%eax$/;"	l
ffff80000010896f	kernel.asm	/^ffff80000010896f:	74 2e                	je     ffff80000010899f <sys_open+0x145>$/;"	l
ffff800000108971	kernel.asm	/^ffff800000108971:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000108975	kernel.asm	/^ffff800000108975:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000108978	kernel.asm	/^ffff800000108978:	48 b8 ae 2a 10 00 00 	movabs $0xffff800000102aae,%rax$/;"	l
ffff80000010897f	kernel.asm	/^ffff80000010897f:	80 ff ff $/;"	l
ffff800000108982	kernel.asm	/^ffff800000108982:	ff d0                	callq  *%rax$/;"	l
ffff800000108984	kernel.asm	/^ffff800000108984:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000108989	kernel.asm	/^ffff800000108989:	48 ba 74 4e 10 00 00 	movabs $0xffff800000104e74,%rdx$/;"	l
ffff800000108990	kernel.asm	/^ffff800000108990:	80 ff ff $/;"	l
ffff800000108993	kernel.asm	/^ffff800000108993:	ff d2                	callq  *%rdx$/;"	l
ffff800000108995	kernel.asm	/^ffff800000108995:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff80000010899a	kernel.asm	/^ffff80000010899a:	e9 00 01 00 00       	jmpq   ffff800000108a9f <sys_open+0x245>$/;"	l
ffff80000010899f	kernel.asm	/^ffff80000010899f:	48 b8 a0 1a 10 00 00 	movabs $0xffff800000101aa0,%rax$/;"	l
ffff8000001089a6	kernel.asm	/^ffff8000001089a6:	80 ff ff $/;"	l
ffff8000001089a9	kernel.asm	/^ffff8000001089a9:	ff d0                	callq  *%rax$/;"	l
ffff8000001089ab	kernel.asm	/^ffff8000001089ab:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ffff8000001089af	kernel.asm	/^ffff8000001089af:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)$/;"	l
ffff8000001089b4	kernel.asm	/^ffff8000001089b4:	74 1c                	je     ffff8000001089d2 <sys_open+0x178>$/;"	l
ffff8000001089b6	kernel.asm	/^ffff8000001089b6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff8000001089ba	kernel.asm	/^ffff8000001089ba:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001089bd	kernel.asm	/^ffff8000001089bd:	48 b8 af 7d 10 00 00 	movabs $0xffff800000107daf,%rax$/;"	l
ffff8000001089c4	kernel.asm	/^ffff8000001089c4:	80 ff ff $/;"	l
ffff8000001089c7	kernel.asm	/^ffff8000001089c7:	ff d0                	callq  *%rax$/;"	l
ffff8000001089c9	kernel.asm	/^ffff8000001089c9:	89 45 ec             	mov    %eax,-0x14(%rbp)$/;"	l
ffff8000001089cc	kernel.asm	/^ffff8000001089cc:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)$/;"	l
ffff8000001089d0	kernel.asm	/^ffff8000001089d0:	79 48                	jns    ffff800000108a1a <sys_open+0x1c0>$/;"	l
ffff8000001089d2	kernel.asm	/^ffff8000001089d2:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)$/;"	l
ffff8000001089d7	kernel.asm	/^ffff8000001089d7:	74 13                	je     ffff8000001089ec <sys_open+0x192>$/;"	l
ffff8000001089d9	kernel.asm	/^ffff8000001089d9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff8000001089dd	kernel.asm	/^ffff8000001089dd:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001089e0	kernel.asm	/^ffff8000001089e0:	48 b8 a2 1b 10 00 00 	movabs $0xffff800000101ba2,%rax$/;"	l
ffff8000001089e7	kernel.asm	/^ffff8000001089e7:	80 ff ff $/;"	l
ffff8000001089ea	kernel.asm	/^ffff8000001089ea:	ff d0                	callq  *%rax$/;"	l
ffff8000001089ec	kernel.asm	/^ffff8000001089ec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001089f0	kernel.asm	/^ffff8000001089f0:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001089f3	kernel.asm	/^ffff8000001089f3:	48 b8 ae 2a 10 00 00 	movabs $0xffff800000102aae,%rax$/;"	l
ffff8000001089fa	kernel.asm	/^ffff8000001089fa:	80 ff ff $/;"	l
ffff8000001089fd	kernel.asm	/^ffff8000001089fd:	ff d0                	callq  *%rax$/;"	l
ffff8000001089ff	kernel.asm	/^ffff8000001089ff:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000108a04	kernel.asm	/^ffff800000108a04:	48 ba 74 4e 10 00 00 	movabs $0xffff800000104e74,%rdx$/;"	l
ffff800000108a0b	kernel.asm	/^ffff800000108a0b:	80 ff ff $/;"	l
ffff800000108a0e	kernel.asm	/^ffff800000108a0e:	ff d2                	callq  *%rdx$/;"	l
ffff800000108a10	kernel.asm	/^ffff800000108a10:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff800000108a15	kernel.asm	/^ffff800000108a15:	e9 85 00 00 00       	jmpq   ffff800000108a9f <sys_open+0x245>$/;"	l
ffff800000108a1a	kernel.asm	/^ffff800000108a1a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000108a1e	kernel.asm	/^ffff800000108a1e:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000108a21	kernel.asm	/^ffff800000108a21:	48 b8 5b 29 10 00 00 	movabs $0xffff80000010295b,%rax$/;"	l
ffff800000108a28	kernel.asm	/^ffff800000108a28:	80 ff ff $/;"	l
ffff800000108a2b	kernel.asm	/^ffff800000108a2b:	ff d0                	callq  *%rax$/;"	l
ffff800000108a2d	kernel.asm	/^ffff800000108a2d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000108a32	kernel.asm	/^ffff800000108a32:	48 ba 74 4e 10 00 00 	movabs $0xffff800000104e74,%rdx$/;"	l
ffff800000108a39	kernel.asm	/^ffff800000108a39:	80 ff ff $/;"	l
ffff800000108a3c	kernel.asm	/^ffff800000108a3c:	ff d2                	callq  *%rdx$/;"	l
ffff800000108a3e	kernel.asm	/^ffff800000108a3e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000108a42	kernel.asm	/^ffff800000108a42:	c7 00 02 00 00 00    	movl   $0x2,(%rax)$/;"	l
ffff800000108a48	kernel.asm	/^ffff800000108a48:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000108a4c	kernel.asm	/^ffff800000108a4c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx$/;"	l
ffff800000108a50	kernel.asm	/^ffff800000108a50:	48 89 50 18          	mov    %rdx,0x18(%rax)$/;"	l
ffff800000108a54	kernel.asm	/^ffff800000108a54:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000108a58	kernel.asm	/^ffff800000108a58:	c7 40 20 00 00 00 00 	movl   $0x0,0x20(%rax)$/;"	l
ffff800000108a5f	kernel.asm	/^ffff800000108a5f:	8b 45 dc             	mov    -0x24(%rbp),%eax$/;"	l
ffff800000108a62	kernel.asm	/^ffff800000108a62:	83 e0 01             	and    $0x1,%eax$/;"	l
ffff800000108a65	kernel.asm	/^ffff800000108a65:	85 c0                	test   %eax,%eax$/;"	l
ffff800000108a67	kernel.asm	/^ffff800000108a67:	0f 94 c0             	sete   %al$/;"	l
ffff800000108a6a	kernel.asm	/^ffff800000108a6a:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000108a6c	kernel.asm	/^ffff800000108a6c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000108a70	kernel.asm	/^ffff800000108a70:	88 50 08             	mov    %dl,0x8(%rax)$/;"	l
ffff800000108a73	kernel.asm	/^ffff800000108a73:	8b 45 dc             	mov    -0x24(%rbp),%eax$/;"	l
ffff800000108a76	kernel.asm	/^ffff800000108a76:	83 e0 01             	and    $0x1,%eax$/;"	l
ffff800000108a79	kernel.asm	/^ffff800000108a79:	85 c0                	test   %eax,%eax$/;"	l
ffff800000108a7b	kernel.asm	/^ffff800000108a7b:	75 0a                	jne    ffff800000108a87 <sys_open+0x22d>$/;"	l
ffff800000108a7d	kernel.asm	/^ffff800000108a7d:	8b 45 dc             	mov    -0x24(%rbp),%eax$/;"	l
ffff800000108a80	kernel.asm	/^ffff800000108a80:	83 e0 02             	and    $0x2,%eax$/;"	l
ffff800000108a83	kernel.asm	/^ffff800000108a83:	85 c0                	test   %eax,%eax$/;"	l
ffff800000108a85	kernel.asm	/^ffff800000108a85:	74 07                	je     ffff800000108a8e <sys_open+0x234>$/;"	l
ffff800000108a87	kernel.asm	/^ffff800000108a87:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
ffff800000108a8c	kernel.asm	/^ffff800000108a8c:	eb 05                	jmp    ffff800000108a93 <sys_open+0x239>$/;"	l
ffff800000108a8e	kernel.asm	/^ffff800000108a8e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000108a93	kernel.asm	/^ffff800000108a93:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000108a95	kernel.asm	/^ffff800000108a95:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000108a99	kernel.asm	/^ffff800000108a99:	88 50 09             	mov    %dl,0x9(%rax)$/;"	l
ffff800000108a9c	kernel.asm	/^ffff800000108a9c:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
ffff800000108a9f	kernel.asm	/^ffff800000108a9f:	c9                   	leaveq $/;"	l
ffff800000108aa0	kernel.asm	/^ffff800000108aa0:	c3                   	retq   $/;"	l
ffff800000108aa1	kernel.asm	/^ffff800000108aa1 <sys_mkdir>:$/;"	l
ffff800000108aa1	kernel.asm	/^ffff800000108aa1:	55                   	push   %rbp$/;"	l
ffff800000108aa2	kernel.asm	/^ffff800000108aa2:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000108aa5	kernel.asm	/^ffff800000108aa5:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff800000108aa9	kernel.asm	/^ffff800000108aa9:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000108aae	kernel.asm	/^ffff800000108aae:	48 ba 9e 4d 10 00 00 	movabs $0xffff800000104d9e,%rdx$/;"	l
ffff800000108ab5	kernel.asm	/^ffff800000108ab5:	80 ff ff $/;"	l
ffff800000108ab8	kernel.asm	/^ffff800000108ab8:	ff d2                	callq  *%rdx$/;"	l
ffff800000108aba	kernel.asm	/^ffff800000108aba:	48 8d 45 f0          	lea    -0x10(%rbp),%rax$/;"	l
ffff800000108abe	kernel.asm	/^ffff800000108abe:	48 89 c6             	mov    %rax,%rsi$/;"	l
ffff800000108ac1	kernel.asm	/^ffff800000108ac1:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
ffff800000108ac6	kernel.asm	/^ffff800000108ac6:	48 b8 f3 7b 10 00 00 	movabs $0xffff800000107bf3,%rax$/;"	l
ffff800000108acd	kernel.asm	/^ffff800000108acd:	80 ff ff $/;"	l
ffff800000108ad0	kernel.asm	/^ffff800000108ad0:	ff d0                	callq  *%rax$/;"	l
ffff800000108ad2	kernel.asm	/^ffff800000108ad2:	85 c0                	test   %eax,%eax$/;"	l
ffff800000108ad4	kernel.asm	/^ffff800000108ad4:	78 2d                	js     ffff800000108b03 <sys_mkdir+0x62>$/;"	l
ffff800000108ad6	kernel.asm	/^ffff800000108ad6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000108ada	kernel.asm	/^ffff800000108ada:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
ffff800000108adf	kernel.asm	/^ffff800000108adf:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
ffff800000108ae4	kernel.asm	/^ffff800000108ae4:	be 01 00 00 00       	mov    $0x1,%esi$/;"	l
ffff800000108ae9	kernel.asm	/^ffff800000108ae9:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000108aec	kernel.asm	/^ffff800000108aec:	48 b8 f2 85 10 00 00 	movabs $0xffff8000001085f2,%rax$/;"	l
ffff800000108af3	kernel.asm	/^ffff800000108af3:	80 ff ff $/;"	l
ffff800000108af6	kernel.asm	/^ffff800000108af6:	ff d0                	callq  *%rax$/;"	l
ffff800000108af8	kernel.asm	/^ffff800000108af8:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff800000108afc	kernel.asm	/^ffff800000108afc:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)$/;"	l
ffff800000108b01	kernel.asm	/^ffff800000108b01:	75 18                	jne    ffff800000108b1b <sys_mkdir+0x7a>$/;"	l
ffff800000108b03	kernel.asm	/^ffff800000108b03:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000108b08	kernel.asm	/^ffff800000108b08:	48 ba 74 4e 10 00 00 	movabs $0xffff800000104e74,%rdx$/;"	l
ffff800000108b0f	kernel.asm	/^ffff800000108b0f:	80 ff ff $/;"	l
ffff800000108b12	kernel.asm	/^ffff800000108b12:	ff d2                	callq  *%rdx$/;"	l
ffff800000108b14	kernel.asm	/^ffff800000108b14:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff800000108b19	kernel.asm	/^ffff800000108b19:	eb 29                	jmp    ffff800000108b44 <sys_mkdir+0xa3>$/;"	l
ffff800000108b1b	kernel.asm	/^ffff800000108b1b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000108b1f	kernel.asm	/^ffff800000108b1f:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000108b22	kernel.asm	/^ffff800000108b22:	48 b8 ae 2a 10 00 00 	movabs $0xffff800000102aae,%rax$/;"	l
ffff800000108b29	kernel.asm	/^ffff800000108b29:	80 ff ff $/;"	l
ffff800000108b2c	kernel.asm	/^ffff800000108b2c:	ff d0                	callq  *%rax$/;"	l
ffff800000108b2e	kernel.asm	/^ffff800000108b2e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000108b33	kernel.asm	/^ffff800000108b33:	48 ba 74 4e 10 00 00 	movabs $0xffff800000104e74,%rdx$/;"	l
ffff800000108b3a	kernel.asm	/^ffff800000108b3a:	80 ff ff $/;"	l
ffff800000108b3d	kernel.asm	/^ffff800000108b3d:	ff d2                	callq  *%rdx$/;"	l
ffff800000108b3f	kernel.asm	/^ffff800000108b3f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000108b44	kernel.asm	/^ffff800000108b44:	c9                   	leaveq $/;"	l
ffff800000108b45	kernel.asm	/^ffff800000108b45:	c3                   	retq   $/;"	l
ffff800000108b46	kernel.asm	/^ffff800000108b46 <sys_mknod>:$/;"	l
ffff800000108b46	kernel.asm	/^ffff800000108b46:	55                   	push   %rbp$/;"	l
ffff800000108b47	kernel.asm	/^ffff800000108b47:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000108b4a	kernel.asm	/^ffff800000108b4a:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ffff800000108b4e	kernel.asm	/^ffff800000108b4e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000108b53	kernel.asm	/^ffff800000108b53:	48 ba 9e 4d 10 00 00 	movabs $0xffff800000104d9e,%rdx$/;"	l
ffff800000108b5a	kernel.asm	/^ffff800000108b5a:	80 ff ff $/;"	l
ffff800000108b5d	kernel.asm	/^ffff800000108b5d:	ff d2                	callq  *%rdx$/;"	l
ffff800000108b5f	kernel.asm	/^ffff800000108b5f:	48 8d 45 f0          	lea    -0x10(%rbp),%rax$/;"	l
ffff800000108b63	kernel.asm	/^ffff800000108b63:	48 89 c6             	mov    %rax,%rsi$/;"	l
ffff800000108b66	kernel.asm	/^ffff800000108b66:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
ffff800000108b6b	kernel.asm	/^ffff800000108b6b:	48 b8 f3 7b 10 00 00 	movabs $0xffff800000107bf3,%rax$/;"	l
ffff800000108b72	kernel.asm	/^ffff800000108b72:	80 ff ff $/;"	l
ffff800000108b75	kernel.asm	/^ffff800000108b75:	ff d0                	callq  *%rax$/;"	l
ffff800000108b77	kernel.asm	/^ffff800000108b77:	85 c0                	test   %eax,%eax$/;"	l
ffff800000108b79	kernel.asm	/^ffff800000108b79:	78 67                	js     ffff800000108be2 <sys_mknod+0x9c>$/;"	l
ffff800000108b7b	kernel.asm	/^ffff800000108b7b:	48 8d 45 ec          	lea    -0x14(%rbp),%rax$/;"	l
ffff800000108b7f	kernel.asm	/^ffff800000108b7f:	48 89 c6             	mov    %rax,%rsi$/;"	l
ffff800000108b82	kernel.asm	/^ffff800000108b82:	bf 01 00 00 00       	mov    $0x1,%edi$/;"	l
ffff800000108b87	kernel.asm	/^ffff800000108b87:	48 b8 03 7b 10 00 00 	movabs $0xffff800000107b03,%rax$/;"	l
ffff800000108b8e	kernel.asm	/^ffff800000108b8e:	80 ff ff $/;"	l
ffff800000108b91	kernel.asm	/^ffff800000108b91:	ff d0                	callq  *%rax$/;"	l
ffff800000108b93	kernel.asm	/^ffff800000108b93:	85 c0                	test   %eax,%eax$/;"	l
ffff800000108b95	kernel.asm	/^ffff800000108b95:	78 4b                	js     ffff800000108be2 <sys_mknod+0x9c>$/;"	l
ffff800000108b97	kernel.asm	/^ffff800000108b97:	48 8d 45 e8          	lea    -0x18(%rbp),%rax$/;"	l
ffff800000108b9b	kernel.asm	/^ffff800000108b9b:	48 89 c6             	mov    %rax,%rsi$/;"	l
ffff800000108b9e	kernel.asm	/^ffff800000108b9e:	bf 02 00 00 00       	mov    $0x2,%edi$/;"	l
ffff800000108ba3	kernel.asm	/^ffff800000108ba3:	48 b8 03 7b 10 00 00 	movabs $0xffff800000107b03,%rax$/;"	l
ffff800000108baa	kernel.asm	/^ffff800000108baa:	80 ff ff $/;"	l
ffff800000108bad	kernel.asm	/^ffff800000108bad:	ff d0                	callq  *%rax$/;"	l
ffff800000108baf	kernel.asm	/^ffff800000108baf:	85 c0                	test   %eax,%eax$/;"	l
ffff800000108bb1	kernel.asm	/^ffff800000108bb1:	78 2f                	js     ffff800000108be2 <sys_mknod+0x9c>$/;"	l
ffff800000108bb3	kernel.asm	/^ffff800000108bb3:	8b 45 e8             	mov    -0x18(%rbp),%eax$/;"	l
ffff800000108bb6	kernel.asm	/^ffff800000108bb6:	0f bf c8             	movswl %ax,%ecx$/;"	l
ffff800000108bb9	kernel.asm	/^ffff800000108bb9:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
ffff800000108bbc	kernel.asm	/^ffff800000108bbc:	0f bf d0             	movswl %ax,%edx$/;"	l
ffff800000108bbf	kernel.asm	/^ffff800000108bbf:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000108bc3	kernel.asm	/^ffff800000108bc3:	be 03 00 00 00       	mov    $0x3,%esi$/;"	l
ffff800000108bc8	kernel.asm	/^ffff800000108bc8:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000108bcb	kernel.asm	/^ffff800000108bcb:	48 b8 f2 85 10 00 00 	movabs $0xffff8000001085f2,%rax$/;"	l
ffff800000108bd2	kernel.asm	/^ffff800000108bd2:	80 ff ff $/;"	l
ffff800000108bd5	kernel.asm	/^ffff800000108bd5:	ff d0                	callq  *%rax$/;"	l
ffff800000108bd7	kernel.asm	/^ffff800000108bd7:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff800000108bdb	kernel.asm	/^ffff800000108bdb:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)$/;"	l
ffff800000108be0	kernel.asm	/^ffff800000108be0:	75 18                	jne    ffff800000108bfa <sys_mknod+0xb4>$/;"	l
ffff800000108be2	kernel.asm	/^ffff800000108be2:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000108be7	kernel.asm	/^ffff800000108be7:	48 ba 74 4e 10 00 00 	movabs $0xffff800000104e74,%rdx$/;"	l
ffff800000108bee	kernel.asm	/^ffff800000108bee:	80 ff ff $/;"	l
ffff800000108bf1	kernel.asm	/^ffff800000108bf1:	ff d2                	callq  *%rdx$/;"	l
ffff800000108bf3	kernel.asm	/^ffff800000108bf3:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff800000108bf8	kernel.asm	/^ffff800000108bf8:	eb 29                	jmp    ffff800000108c23 <sys_mknod+0xdd>$/;"	l
ffff800000108bfa	kernel.asm	/^ffff800000108bfa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000108bfe	kernel.asm	/^ffff800000108bfe:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000108c01	kernel.asm	/^ffff800000108c01:	48 b8 ae 2a 10 00 00 	movabs $0xffff800000102aae,%rax$/;"	l
ffff800000108c08	kernel.asm	/^ffff800000108c08:	80 ff ff $/;"	l
ffff800000108c0b	kernel.asm	/^ffff800000108c0b:	ff d0                	callq  *%rax$/;"	l
ffff800000108c0d	kernel.asm	/^ffff800000108c0d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000108c12	kernel.asm	/^ffff800000108c12:	48 ba 74 4e 10 00 00 	movabs $0xffff800000104e74,%rdx$/;"	l
ffff800000108c19	kernel.asm	/^ffff800000108c19:	80 ff ff $/;"	l
ffff800000108c1c	kernel.asm	/^ffff800000108c1c:	ff d2                	callq  *%rdx$/;"	l
ffff800000108c1e	kernel.asm	/^ffff800000108c1e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000108c23	kernel.asm	/^ffff800000108c23:	c9                   	leaveq $/;"	l
ffff800000108c24	kernel.asm	/^ffff800000108c24:	c3                   	retq   $/;"	l
ffff800000108c25	kernel.asm	/^ffff800000108c25 <sys_chdir>:$/;"	l
ffff800000108c25	kernel.asm	/^ffff800000108c25:	55                   	push   %rbp$/;"	l
ffff800000108c26	kernel.asm	/^ffff800000108c26:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000108c29	kernel.asm	/^ffff800000108c29:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff800000108c2d	kernel.asm	/^ffff800000108c2d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000108c32	kernel.asm	/^ffff800000108c32:	48 ba 9e 4d 10 00 00 	movabs $0xffff800000104d9e,%rdx$/;"	l
ffff800000108c39	kernel.asm	/^ffff800000108c39:	80 ff ff $/;"	l
ffff800000108c3c	kernel.asm	/^ffff800000108c3c:	ff d2                	callq  *%rdx$/;"	l
ffff800000108c3e	kernel.asm	/^ffff800000108c3e:	48 8d 45 f0          	lea    -0x10(%rbp),%rax$/;"	l
ffff800000108c42	kernel.asm	/^ffff800000108c42:	48 89 c6             	mov    %rax,%rsi$/;"	l
ffff800000108c45	kernel.asm	/^ffff800000108c45:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
ffff800000108c4a	kernel.asm	/^ffff800000108c4a:	48 b8 f3 7b 10 00 00 	movabs $0xffff800000107bf3,%rax$/;"	l
ffff800000108c51	kernel.asm	/^ffff800000108c51:	80 ff ff $/;"	l
ffff800000108c54	kernel.asm	/^ffff800000108c54:	ff d0                	callq  *%rax$/;"	l
ffff800000108c56	kernel.asm	/^ffff800000108c56:	85 c0                	test   %eax,%eax$/;"	l
ffff800000108c58	kernel.asm	/^ffff800000108c58:	78 1e                	js     ffff800000108c78 <sys_chdir+0x53>$/;"	l
ffff800000108c5a	kernel.asm	/^ffff800000108c5a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000108c5e	kernel.asm	/^ffff800000108c5e:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000108c61	kernel.asm	/^ffff800000108c61:	48 b8 ba 36 10 00 00 	movabs $0xffff8000001036ba,%rax$/;"	l
ffff800000108c68	kernel.asm	/^ffff800000108c68:	80 ff ff $/;"	l
ffff800000108c6b	kernel.asm	/^ffff800000108c6b:	ff d0                	callq  *%rax$/;"	l
ffff800000108c6d	kernel.asm	/^ffff800000108c6d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff800000108c71	kernel.asm	/^ffff800000108c71:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)$/;"	l
ffff800000108c76	kernel.asm	/^ffff800000108c76:	75 1b                	jne    ffff800000108c93 <sys_chdir+0x6e>$/;"	l
ffff800000108c78	kernel.asm	/^ffff800000108c78:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000108c7d	kernel.asm	/^ffff800000108c7d:	48 ba 74 4e 10 00 00 	movabs $0xffff800000104e74,%rdx$/;"	l
ffff800000108c84	kernel.asm	/^ffff800000108c84:	80 ff ff $/;"	l
ffff800000108c87	kernel.asm	/^ffff800000108c87:	ff d2                	callq  *%rdx$/;"	l
ffff800000108c89	kernel.asm	/^ffff800000108c89:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff800000108c8e	kernel.asm	/^ffff800000108c8e:	e9 af 00 00 00       	jmpq   ffff800000108d42 <sys_chdir+0x11d>$/;"	l
ffff800000108c93	kernel.asm	/^ffff800000108c93:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000108c97	kernel.asm	/^ffff800000108c97:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000108c9a	kernel.asm	/^ffff800000108c9a:	48 b8 ca 27 10 00 00 	movabs $0xffff8000001027ca,%rax$/;"	l
ffff800000108ca1	kernel.asm	/^ffff800000108ca1:	80 ff ff $/;"	l
ffff800000108ca4	kernel.asm	/^ffff800000108ca4:	ff d0                	callq  *%rax$/;"	l
ffff800000108ca6	kernel.asm	/^ffff800000108ca6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000108caa	kernel.asm	/^ffff800000108caa:	0f b7 80 94 00 00 00 	movzwl 0x94(%rax),%eax$/;"	l
ffff800000108cb1	kernel.asm	/^ffff800000108cb1:	66 83 f8 01          	cmp    $0x1,%ax$/;"	l
ffff800000108cb5	kernel.asm	/^ffff800000108cb5:	74 2b                	je     ffff800000108ce2 <sys_chdir+0xbd>$/;"	l
ffff800000108cb7	kernel.asm	/^ffff800000108cb7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000108cbb	kernel.asm	/^ffff800000108cbb:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000108cbe	kernel.asm	/^ffff800000108cbe:	48 b8 ae 2a 10 00 00 	movabs $0xffff800000102aae,%rax$/;"	l
ffff800000108cc5	kernel.asm	/^ffff800000108cc5:	80 ff ff $/;"	l
ffff800000108cc8	kernel.asm	/^ffff800000108cc8:	ff d0                	callq  *%rax$/;"	l
ffff800000108cca	kernel.asm	/^ffff800000108cca:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000108ccf	kernel.asm	/^ffff800000108ccf:	48 ba 74 4e 10 00 00 	movabs $0xffff800000104e74,%rdx$/;"	l
ffff800000108cd6	kernel.asm	/^ffff800000108cd6:	80 ff ff $/;"	l
ffff800000108cd9	kernel.asm	/^ffff800000108cd9:	ff d2                	callq  *%rdx$/;"	l
ffff800000108cdb	kernel.asm	/^ffff800000108cdb:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff800000108ce0	kernel.asm	/^ffff800000108ce0:	eb 60                	jmp    ffff800000108d42 <sys_chdir+0x11d>$/;"	l
ffff800000108ce2	kernel.asm	/^ffff800000108ce2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000108ce6	kernel.asm	/^ffff800000108ce6:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000108ce9	kernel.asm	/^ffff800000108ce9:	48 b8 5b 29 10 00 00 	movabs $0xffff80000010295b,%rax$/;"	l
ffff800000108cf0	kernel.asm	/^ffff800000108cf0:	80 ff ff $/;"	l
ffff800000108cf3	kernel.asm	/^ffff800000108cf3:	ff d0                	callq  *%rax$/;"	l
ffff800000108cf5	kernel.asm	/^ffff800000108cf5:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000108cfc	kernel.asm	/^ffff800000108cfc:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000108d00	kernel.asm	/^ffff800000108d00:	48 8b 80 c8 00 00 00 	mov    0xc8(%rax),%rax$/;"	l
ffff800000108d07	kernel.asm	/^ffff800000108d07:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000108d0a	kernel.asm	/^ffff800000108d0a:	48 b8 c4 29 10 00 00 	movabs $0xffff8000001029c4,%rax$/;"	l
ffff800000108d11	kernel.asm	/^ffff800000108d11:	80 ff ff $/;"	l
ffff800000108d14	kernel.asm	/^ffff800000108d14:	ff d0                	callq  *%rax$/;"	l
ffff800000108d16	kernel.asm	/^ffff800000108d16:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000108d1b	kernel.asm	/^ffff800000108d1b:	48 ba 74 4e 10 00 00 	movabs $0xffff800000104e74,%rdx$/;"	l
ffff800000108d22	kernel.asm	/^ffff800000108d22:	80 ff ff $/;"	l
ffff800000108d25	kernel.asm	/^ffff800000108d25:	ff d2                	callq  *%rdx$/;"	l
ffff800000108d27	kernel.asm	/^ffff800000108d27:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000108d2e	kernel.asm	/^ffff800000108d2e:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000108d32	kernel.asm	/^ffff800000108d32:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx$/;"	l
ffff800000108d36	kernel.asm	/^ffff800000108d36:	48 89 90 c8 00 00 00 	mov    %rdx,0xc8(%rax)$/;"	l
ffff800000108d3d	kernel.asm	/^ffff800000108d3d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000108d42	kernel.asm	/^ffff800000108d42:	c9                   	leaveq $/;"	l
ffff800000108d43	kernel.asm	/^ffff800000108d43:	c3                   	retq   $/;"	l
ffff800000108d44	kernel.asm	/^ffff800000108d44 <sys_exec>:$/;"	l
ffff800000108d44	kernel.asm	/^ffff800000108d44:	55                   	push   %rbp$/;"	l
ffff800000108d45	kernel.asm	/^ffff800000108d45:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000108d48	kernel.asm	/^ffff800000108d48:	48 81 ec 20 01 00 00 	sub    $0x120,%rsp$/;"	l
ffff800000108d4f	kernel.asm	/^ffff800000108d4f:	48 8d 45 f0          	lea    -0x10(%rbp),%rax$/;"	l
ffff800000108d53	kernel.asm	/^ffff800000108d53:	48 89 c6             	mov    %rax,%rsi$/;"	l
ffff800000108d56	kernel.asm	/^ffff800000108d56:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
ffff800000108d5b	kernel.asm	/^ffff800000108d5b:	48 b8 f3 7b 10 00 00 	movabs $0xffff800000107bf3,%rax$/;"	l
ffff800000108d62	kernel.asm	/^ffff800000108d62:	80 ff ff $/;"	l
ffff800000108d65	kernel.asm	/^ffff800000108d65:	ff d0                	callq  *%rax$/;"	l
ffff800000108d67	kernel.asm	/^ffff800000108d67:	85 c0                	test   %eax,%eax$/;"	l
ffff800000108d69	kernel.asm	/^ffff800000108d69:	78 1f                	js     ffff800000108d8a <sys_exec+0x46>$/;"	l
ffff800000108d6b	kernel.asm	/^ffff800000108d6b:	48 8d 85 e8 fe ff ff 	lea    -0x118(%rbp),%rax$/;"	l
ffff800000108d72	kernel.asm	/^ffff800000108d72:	48 89 c6             	mov    %rax,%rsi$/;"	l
ffff800000108d75	kernel.asm	/^ffff800000108d75:	bf 01 00 00 00       	mov    $0x1,%edi$/;"	l
ffff800000108d7a	kernel.asm	/^ffff800000108d7a:	48 b8 32 7b 10 00 00 	movabs $0xffff800000107b32,%rax$/;"	l
ffff800000108d81	kernel.asm	/^ffff800000108d81:	80 ff ff $/;"	l
ffff800000108d84	kernel.asm	/^ffff800000108d84:	ff d0                	callq  *%rax$/;"	l
ffff800000108d86	kernel.asm	/^ffff800000108d86:	85 c0                	test   %eax,%eax$/;"	l
ffff800000108d88	kernel.asm	/^ffff800000108d88:	79 0a                	jns    ffff800000108d94 <sys_exec+0x50>$/;"	l
ffff800000108d8a	kernel.asm	/^ffff800000108d8a:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff800000108d8f	kernel.asm	/^ffff800000108d8f:	e9 f2 00 00 00       	jmpq   ffff800000108e86 <sys_exec+0x142>$/;"	l
ffff800000108d94	kernel.asm	/^ffff800000108d94:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax$/;"	l
ffff800000108d9b	kernel.asm	/^ffff800000108d9b:	ba 00 01 00 00       	mov    $0x100,%edx$/;"	l
ffff800000108da0	kernel.asm	/^ffff800000108da0:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffff800000108da5	kernel.asm	/^ffff800000108da5:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000108da8	kernel.asm	/^ffff800000108da8:	48 b8 9b 75 10 00 00 	movabs $0xffff80000010759b,%rax$/;"	l
ffff800000108daf	kernel.asm	/^ffff800000108daf:	80 ff ff $/;"	l
ffff800000108db2	kernel.asm	/^ffff800000108db2:	ff d0                	callq  *%rax$/;"	l
ffff800000108db4	kernel.asm	/^ffff800000108db4:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)$/;"	l
ffff800000108dbb	kernel.asm	/^ffff800000108dbb:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff800000108dbe	kernel.asm	/^ffff800000108dbe:	83 f8 1f             	cmp    $0x1f,%eax$/;"	l
ffff800000108dc1	kernel.asm	/^ffff800000108dc1:	76 0a                	jbe    ffff800000108dcd <sys_exec+0x89>$/;"	l
ffff800000108dc3	kernel.asm	/^ffff800000108dc3:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff800000108dc8	kernel.asm	/^ffff800000108dc8:	e9 b9 00 00 00       	jmpq   ffff800000108e86 <sys_exec+0x142>$/;"	l
ffff800000108dcd	kernel.asm	/^ffff800000108dcd:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff800000108dd0	kernel.asm	/^ffff800000108dd0:	48 98                	cltq   $/;"	l
ffff800000108dd2	kernel.asm	/^ffff800000108dd2:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx$/;"	l
ffff800000108dd9	kernel.asm	/^ffff800000108dd9:	00 $/;"	l
ffff800000108dda	kernel.asm	/^ffff800000108dda:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax$/;"	l
ffff800000108de1	kernel.asm	/^ffff800000108de1:	48 01 c2             	add    %rax,%rdx$/;"	l
ffff800000108de4	kernel.asm	/^ffff800000108de4:	48 8d 85 e0 fe ff ff 	lea    -0x120(%rbp),%rax$/;"	l
ffff800000108deb	kernel.asm	/^ffff800000108deb:	48 89 c6             	mov    %rax,%rsi$/;"	l
ffff800000108dee	kernel.asm	/^ffff800000108dee:	48 89 d7             	mov    %rdx,%rdi$/;"	l
ffff800000108df1	kernel.asm	/^ffff800000108df1:	48 b8 57 79 10 00 00 	movabs $0xffff800000107957,%rax$/;"	l
ffff800000108df8	kernel.asm	/^ffff800000108df8:	80 ff ff $/;"	l
ffff800000108dfb	kernel.asm	/^ffff800000108dfb:	ff d0                	callq  *%rax$/;"	l
ffff800000108dfd	kernel.asm	/^ffff800000108dfd:	85 c0                	test   %eax,%eax$/;"	l
ffff800000108dff	kernel.asm	/^ffff800000108dff:	79 07                	jns    ffff800000108e08 <sys_exec+0xc4>$/;"	l
ffff800000108e01	kernel.asm	/^ffff800000108e01:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff800000108e06	kernel.asm	/^ffff800000108e06:	eb 7e                	jmp    ffff800000108e86 <sys_exec+0x142>$/;"	l
ffff800000108e08	kernel.asm	/^ffff800000108e08:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax$/;"	l
ffff800000108e0f	kernel.asm	/^ffff800000108e0f:	48 85 c0             	test   %rax,%rax$/;"	l
ffff800000108e12	kernel.asm	/^ffff800000108e12:	75 31                	jne    ffff800000108e45 <sys_exec+0x101>$/;"	l
ffff800000108e14	kernel.asm	/^ffff800000108e14:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff800000108e17	kernel.asm	/^ffff800000108e17:	48 98                	cltq   $/;"	l
ffff800000108e19	kernel.asm	/^ffff800000108e19:	48 c7 84 c5 f0 fe ff 	movq   $0x0,-0x110(%rbp,%rax,8)$/;"	l
ffff800000108e20	kernel.asm	/^ffff800000108e20:	ff 00 00 00 00 $/;"	l
ffff800000108e25	kernel.asm	/^ffff800000108e25:	90                   	nop$/;"	l
ffff800000108e26	kernel.asm	/^ffff800000108e26:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000108e2a	kernel.asm	/^ffff800000108e2a:	48 8d 95 f0 fe ff ff 	lea    -0x110(%rbp),%rdx$/;"	l
ffff800000108e31	kernel.asm	/^ffff800000108e31:	48 89 d6             	mov    %rdx,%rsi$/;"	l
ffff800000108e34	kernel.asm	/^ffff800000108e34:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000108e37	kernel.asm	/^ffff800000108e37:	48 b8 59 14 10 00 00 	movabs $0xffff800000101459,%rax$/;"	l
ffff800000108e3e	kernel.asm	/^ffff800000108e3e:	80 ff ff $/;"	l
ffff800000108e41	kernel.asm	/^ffff800000108e41:	ff d0                	callq  *%rax$/;"	l
ffff800000108e43	kernel.asm	/^ffff800000108e43:	eb 41                	jmp    ffff800000108e86 <sys_exec+0x142>$/;"	l
ffff800000108e45	kernel.asm	/^ffff800000108e45:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax$/;"	l
ffff800000108e4c	kernel.asm	/^ffff800000108e4c:	8b 55 fc             	mov    -0x4(%rbp),%edx$/;"	l
ffff800000108e4f	kernel.asm	/^ffff800000108e4f:	48 63 d2             	movslq %edx,%rdx$/;"	l
ffff800000108e52	kernel.asm	/^ffff800000108e52:	48 c1 e2 03          	shl    $0x3,%rdx$/;"	l
ffff800000108e56	kernel.asm	/^ffff800000108e56:	48 01 c2             	add    %rax,%rdx$/;"	l
ffff800000108e59	kernel.asm	/^ffff800000108e59:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax$/;"	l
ffff800000108e60	kernel.asm	/^ffff800000108e60:	48 89 d6             	mov    %rdx,%rsi$/;"	l
ffff800000108e63	kernel.asm	/^ffff800000108e63:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000108e66	kernel.asm	/^ffff800000108e66:	48 b8 b2 79 10 00 00 	movabs $0xffff8000001079b2,%rax$/;"	l
ffff800000108e6d	kernel.asm	/^ffff800000108e6d:	80 ff ff $/;"	l
ffff800000108e70	kernel.asm	/^ffff800000108e70:	ff d0                	callq  *%rax$/;"	l
ffff800000108e72	kernel.asm	/^ffff800000108e72:	85 c0                	test   %eax,%eax$/;"	l
ffff800000108e74	kernel.asm	/^ffff800000108e74:	79 07                	jns    ffff800000108e7d <sys_exec+0x139>$/;"	l
ffff800000108e76	kernel.asm	/^ffff800000108e76:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff800000108e7b	kernel.asm	/^ffff800000108e7b:	eb 09                	jmp    ffff800000108e86 <sys_exec+0x142>$/;"	l
ffff800000108e7d	kernel.asm	/^ffff800000108e7d:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)$/;"	l
ffff800000108e81	kernel.asm	/^ffff800000108e81:	e9 35 ff ff ff       	jmpq   ffff800000108dbb <sys_exec+0x77>$/;"	l
ffff800000108e86	kernel.asm	/^ffff800000108e86:	c9                   	leaveq $/;"	l
ffff800000108e87	kernel.asm	/^ffff800000108e87:	c3                   	retq   $/;"	l
ffff800000108e88	kernel.asm	/^ffff800000108e88 <sys_pipe>:$/;"	l
ffff800000108e88	kernel.asm	/^ffff800000108e88:	55                   	push   %rbp$/;"	l
ffff800000108e89	kernel.asm	/^ffff800000108e89:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000108e8c	kernel.asm	/^ffff800000108e8c:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ffff800000108e90	kernel.asm	/^ffff800000108e90:	48 8d 45 f0          	lea    -0x10(%rbp),%rax$/;"	l
ffff800000108e94	kernel.asm	/^ffff800000108e94:	ba 08 00 00 00       	mov    $0x8,%edx$/;"	l
ffff800000108e99	kernel.asm	/^ffff800000108e99:	48 89 c6             	mov    %rax,%rsi$/;"	l
ffff800000108e9c	kernel.asm	/^ffff800000108e9c:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
ffff800000108ea1	kernel.asm	/^ffff800000108ea1:	48 b8 63 7b 10 00 00 	movabs $0xffff800000107b63,%rax$/;"	l
ffff800000108ea8	kernel.asm	/^ffff800000108ea8:	80 ff ff $/;"	l
ffff800000108eab	kernel.asm	/^ffff800000108eab:	ff d0                	callq  *%rax$/;"	l
ffff800000108ead	kernel.asm	/^ffff800000108ead:	85 c0                	test   %eax,%eax$/;"	l
ffff800000108eaf	kernel.asm	/^ffff800000108eaf:	79 0a                	jns    ffff800000108ebb <sys_pipe+0x33>$/;"	l
ffff800000108eb1	kernel.asm	/^ffff800000108eb1:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff800000108eb6	kernel.asm	/^ffff800000108eb6:	e9 d3 00 00 00       	jmpq   ffff800000108f8e <sys_pipe+0x106>$/;"	l
ffff800000108ebb	kernel.asm	/^ffff800000108ebb:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx$/;"	l
ffff800000108ebf	kernel.asm	/^ffff800000108ebf:	48 8d 45 e8          	lea    -0x18(%rbp),%rax$/;"	l
ffff800000108ec3	kernel.asm	/^ffff800000108ec3:	48 89 d6             	mov    %rdx,%rsi$/;"	l
ffff800000108ec6	kernel.asm	/^ffff800000108ec6:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000108ec9	kernel.asm	/^ffff800000108ec9:	48 b8 9e 5a 10 00 00 	movabs $0xffff800000105a9e,%rax$/;"	l
ffff800000108ed0	kernel.asm	/^ffff800000108ed0:	80 ff ff $/;"	l
ffff800000108ed3	kernel.asm	/^ffff800000108ed3:	ff d0                	callq  *%rax$/;"	l
ffff800000108ed5	kernel.asm	/^ffff800000108ed5:	85 c0                	test   %eax,%eax$/;"	l
ffff800000108ed7	kernel.asm	/^ffff800000108ed7:	79 0a                	jns    ffff800000108ee3 <sys_pipe+0x5b>$/;"	l
ffff800000108ed9	kernel.asm	/^ffff800000108ed9:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff800000108ede	kernel.asm	/^ffff800000108ede:	e9 ab 00 00 00       	jmpq   ffff800000108f8e <sys_pipe+0x106>$/;"	l
ffff800000108ee3	kernel.asm	/^ffff800000108ee3:	c7 45 fc ff ff ff ff 	movl   $0xffffffff,-0x4(%rbp)$/;"	l
ffff800000108eea	kernel.asm	/^ffff800000108eea:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000108eee	kernel.asm	/^ffff800000108eee:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000108ef1	kernel.asm	/^ffff800000108ef1:	48 b8 af 7d 10 00 00 	movabs $0xffff800000107daf,%rax$/;"	l
ffff800000108ef8	kernel.asm	/^ffff800000108ef8:	80 ff ff $/;"	l
ffff800000108efb	kernel.asm	/^ffff800000108efb:	ff d0                	callq  *%rax$/;"	l
ffff800000108efd	kernel.asm	/^ffff800000108efd:	89 45 fc             	mov    %eax,-0x4(%rbp)$/;"	l
ffff800000108f00	kernel.asm	/^ffff800000108f00:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)$/;"	l
ffff800000108f04	kernel.asm	/^ffff800000108f04:	78 1c                	js     ffff800000108f22 <sys_pipe+0x9a>$/;"	l
ffff800000108f06	kernel.asm	/^ffff800000108f06:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff800000108f0a	kernel.asm	/^ffff800000108f0a:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000108f0d	kernel.asm	/^ffff800000108f0d:	48 b8 af 7d 10 00 00 	movabs $0xffff800000107daf,%rax$/;"	l
ffff800000108f14	kernel.asm	/^ffff800000108f14:	80 ff ff $/;"	l
ffff800000108f17	kernel.asm	/^ffff800000108f17:	ff d0                	callq  *%rax$/;"	l
ffff800000108f19	kernel.asm	/^ffff800000108f19:	89 45 f8             	mov    %eax,-0x8(%rbp)$/;"	l
ffff800000108f1c	kernel.asm	/^ffff800000108f1c:	83 7d f8 00          	cmpl   $0x0,-0x8(%rbp)$/;"	l
ffff800000108f20	kernel.asm	/^ffff800000108f20:	79 51                	jns    ffff800000108f73 <sys_pipe+0xeb>$/;"	l
ffff800000108f22	kernel.asm	/^ffff800000108f22:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)$/;"	l
ffff800000108f26	kernel.asm	/^ffff800000108f26:	78 1e                	js     ffff800000108f46 <sys_pipe+0xbe>$/;"	l
ffff800000108f28	kernel.asm	/^ffff800000108f28:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000108f2f	kernel.asm	/^ffff800000108f2f:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000108f33	kernel.asm	/^ffff800000108f33:	8b 55 fc             	mov    -0x4(%rbp),%edx$/;"	l
ffff800000108f36	kernel.asm	/^ffff800000108f36:	48 63 d2             	movslq %edx,%rdx$/;"	l
ffff800000108f39	kernel.asm	/^ffff800000108f39:	48 83 c2 08          	add    $0x8,%rdx$/;"	l
ffff800000108f3d	kernel.asm	/^ffff800000108f3d:	48 c7 44 d0 08 00 00 	movq   $0x0,0x8(%rax,%rdx,8)$/;"	l
ffff800000108f44	kernel.asm	/^ffff800000108f44:	00 00 $/;"	l
ffff800000108f46	kernel.asm	/^ffff800000108f46:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000108f4a	kernel.asm	/^ffff800000108f4a:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000108f4d	kernel.asm	/^ffff800000108f4d:	48 b8 a2 1b 10 00 00 	movabs $0xffff800000101ba2,%rax$/;"	l
ffff800000108f54	kernel.asm	/^ffff800000108f54:	80 ff ff $/;"	l
ffff800000108f57	kernel.asm	/^ffff800000108f57:	ff d0                	callq  *%rax$/;"	l
ffff800000108f59	kernel.asm	/^ffff800000108f59:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff800000108f5d	kernel.asm	/^ffff800000108f5d:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000108f60	kernel.asm	/^ffff800000108f60:	48 b8 a2 1b 10 00 00 	movabs $0xffff800000101ba2,%rax$/;"	l
ffff800000108f67	kernel.asm	/^ffff800000108f67:	80 ff ff $/;"	l
ffff800000108f6a	kernel.asm	/^ffff800000108f6a:	ff d0                	callq  *%rax$/;"	l
ffff800000108f6c	kernel.asm	/^ffff800000108f6c:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff800000108f71	kernel.asm	/^ffff800000108f71:	eb 1b                	jmp    ffff800000108f8e <sys_pipe+0x106>$/;"	l
ffff800000108f73	kernel.asm	/^ffff800000108f73:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000108f77	kernel.asm	/^ffff800000108f77:	8b 55 fc             	mov    -0x4(%rbp),%edx$/;"	l
ffff800000108f7a	kernel.asm	/^ffff800000108f7a:	89 10                	mov    %edx,(%rax)$/;"	l
ffff800000108f7c	kernel.asm	/^ffff800000108f7c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000108f80	kernel.asm	/^ffff800000108f80:	48 8d 50 04          	lea    0x4(%rax),%rdx$/;"	l
ffff800000108f84	kernel.asm	/^ffff800000108f84:	8b 45 f8             	mov    -0x8(%rbp),%eax$/;"	l
ffff800000108f87	kernel.asm	/^ffff800000108f87:	89 02                	mov    %eax,(%rdx)$/;"	l
ffff800000108f89	kernel.asm	/^ffff800000108f89:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000108f8e	kernel.asm	/^ffff800000108f8e:	c9                   	leaveq $/;"	l
ffff800000108f8f	kernel.asm	/^ffff800000108f8f:	c3                   	retq   $/;"	l
ffff800000108f90	kernel.asm	/^ffff800000108f90 <sys_fork>:$/;"	l
ffff800000108f90	kernel.asm	/^ffff800000108f90:	55                   	push   %rbp$/;"	l
ffff800000108f91	kernel.asm	/^ffff800000108f91:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000108f94	kernel.asm	/^ffff800000108f94:	48 b8 ce 63 10 00 00 	movabs $0xffff8000001063ce,%rax$/;"	l
ffff800000108f9b	kernel.asm	/^ffff800000108f9b:	80 ff ff $/;"	l
ffff800000108f9e	kernel.asm	/^ffff800000108f9e:	ff d0                	callq  *%rax$/;"	l
ffff800000108fa0	kernel.asm	/^ffff800000108fa0:	5d                   	pop    %rbp$/;"	l
ffff800000108fa1	kernel.asm	/^ffff800000108fa1:	c3                   	retq   $/;"	l
ffff800000108fa2	kernel.asm	/^ffff800000108fa2 <sys_exit>:$/;"	l
ffff800000108fa2	kernel.asm	/^ffff800000108fa2:	55                   	push   %rbp$/;"	l
ffff800000108fa3	kernel.asm	/^ffff800000108fa3:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000108fa6	kernel.asm	/^ffff800000108fa6:	48 b8 ef 65 10 00 00 	movabs $0xffff8000001065ef,%rax$/;"	l
ffff800000108fad	kernel.asm	/^ffff800000108fad:	80 ff ff $/;"	l
ffff800000108fb0	kernel.asm	/^ffff800000108fb0:	ff d0                	callq  *%rax$/;"	l
ffff800000108fb2	kernel.asm	/^ffff800000108fb2:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000108fb7	kernel.asm	/^ffff800000108fb7:	5d                   	pop    %rbp$/;"	l
ffff800000108fb8	kernel.asm	/^ffff800000108fb8:	c3                   	retq   $/;"	l
ffff800000108fb9	kernel.asm	/^ffff800000108fb9 <sys_wait>:$/;"	l
ffff800000108fb9	kernel.asm	/^ffff800000108fb9:	55                   	push   %rbp$/;"	l
ffff800000108fba	kernel.asm	/^ffff800000108fba:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000108fbd	kernel.asm	/^ffff800000108fbd:	48 b8 e1 67 10 00 00 	movabs $0xffff8000001067e1,%rax$/;"	l
ffff800000108fc4	kernel.asm	/^ffff800000108fc4:	80 ff ff $/;"	l
ffff800000108fc7	kernel.asm	/^ffff800000108fc7:	ff d0                	callq  *%rax$/;"	l
ffff800000108fc9	kernel.asm	/^ffff800000108fc9:	5d                   	pop    %rbp$/;"	l
ffff800000108fca	kernel.asm	/^ffff800000108fca:	c3                   	retq   $/;"	l
ffff800000108fcb	kernel.asm	/^ffff800000108fcb <sys_kill>:$/;"	l
ffff800000108fcb	kernel.asm	/^ffff800000108fcb:	55                   	push   %rbp$/;"	l
ffff800000108fcc	kernel.asm	/^ffff800000108fcc:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000108fcf	kernel.asm	/^ffff800000108fcf:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff800000108fd3	kernel.asm	/^ffff800000108fd3:	48 8d 45 fc          	lea    -0x4(%rbp),%rax$/;"	l
ffff800000108fd7	kernel.asm	/^ffff800000108fd7:	48 89 c6             	mov    %rax,%rsi$/;"	l
ffff800000108fda	kernel.asm	/^ffff800000108fda:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
ffff800000108fdf	kernel.asm	/^ffff800000108fdf:	48 b8 03 7b 10 00 00 	movabs $0xffff800000107b03,%rax$/;"	l
ffff800000108fe6	kernel.asm	/^ffff800000108fe6:	80 ff ff $/;"	l
ffff800000108fe9	kernel.asm	/^ffff800000108fe9:	ff d0                	callq  *%rax$/;"	l
ffff800000108feb	kernel.asm	/^ffff800000108feb:	85 c0                	test   %eax,%eax$/;"	l
ffff800000108fed	kernel.asm	/^ffff800000108fed:	79 07                	jns    ffff800000108ff6 <sys_kill+0x2b>$/;"	l
ffff800000108fef	kernel.asm	/^ffff800000108fef:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff800000108ff4	kernel.asm	/^ffff800000108ff4:	eb 11                	jmp    ffff800000109007 <sys_kill+0x3c>$/;"	l
ffff800000108ff6	kernel.asm	/^ffff800000108ff6:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff800000108ff9	kernel.asm	/^ffff800000108ff9:	89 c7                	mov    %eax,%edi$/;"	l
ffff800000108ffb	kernel.asm	/^ffff800000108ffb:	48 b8 d9 6d 10 00 00 	movabs $0xffff800000106dd9,%rax$/;"	l
ffff800000109002	kernel.asm	/^ffff800000109002:	80 ff ff $/;"	l
ffff800000109005	kernel.asm	/^ffff800000109005:	ff d0                	callq  *%rax$/;"	l
ffff800000109007	kernel.asm	/^ffff800000109007:	c9                   	leaveq $/;"	l
ffff800000109008	kernel.asm	/^ffff800000109008:	c3                   	retq   $/;"	l
ffff800000109009	kernel.asm	/^ffff800000109009 <sys_getpid>:$/;"	l
ffff800000109009	kernel.asm	/^ffff800000109009:	55                   	push   %rbp$/;"	l
ffff80000010900a	kernel.asm	/^ffff80000010900a:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010900d	kernel.asm	/^ffff80000010900d:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000109014	kernel.asm	/^ffff800000109014:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000109018	kernel.asm	/^ffff800000109018:	8b 40 1c             	mov    0x1c(%rax),%eax$/;"	l
ffff80000010901b	kernel.asm	/^ffff80000010901b:	5d                   	pop    %rbp$/;"	l
ffff80000010901c	kernel.asm	/^ffff80000010901c:	c3                   	retq   $/;"	l
ffff80000010901d	kernel.asm	/^ffff80000010901d <sys_sbrk>:$/;"	l
ffff80000010901d	kernel.asm	/^ffff80000010901d:	55                   	push   %rbp$/;"	l
ffff80000010901e	kernel.asm	/^ffff80000010901e:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000109021	kernel.asm	/^ffff800000109021:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff800000109025	kernel.asm	/^ffff800000109025:	48 8d 45 f8          	lea    -0x8(%rbp),%rax$/;"	l
ffff800000109029	kernel.asm	/^ffff800000109029:	48 89 c6             	mov    %rax,%rsi$/;"	l
ffff80000010902c	kernel.asm	/^ffff80000010902c:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
ffff800000109031	kernel.asm	/^ffff800000109031:	48 b8 03 7b 10 00 00 	movabs $0xffff800000107b03,%rax$/;"	l
ffff800000109038	kernel.asm	/^ffff800000109038:	80 ff ff $/;"	l
ffff80000010903b	kernel.asm	/^ffff80000010903b:	ff d0                	callq  *%rax$/;"	l
ffff80000010903d	kernel.asm	/^ffff80000010903d:	85 c0                	test   %eax,%eax$/;"	l
ffff80000010903f	kernel.asm	/^ffff80000010903f:	79 07                	jns    ffff800000109048 <sys_sbrk+0x2b>$/;"	l
ffff800000109041	kernel.asm	/^ffff800000109041:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff800000109046	kernel.asm	/^ffff800000109046:	eb 30                	jmp    ffff800000109078 <sys_sbrk+0x5b>$/;"	l
ffff800000109048	kernel.asm	/^ffff800000109048:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff80000010904f	kernel.asm	/^ffff80000010904f:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000109053	kernel.asm	/^ffff800000109053:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff800000109056	kernel.asm	/^ffff800000109056:	89 45 fc             	mov    %eax,-0x4(%rbp)$/;"	l
ffff800000109059	kernel.asm	/^ffff800000109059:	8b 45 f8             	mov    -0x8(%rbp),%eax$/;"	l
ffff80000010905c	kernel.asm	/^ffff80000010905c:	89 c7                	mov    %eax,%edi$/;"	l
ffff80000010905e	kernel.asm	/^ffff80000010905e:	48 b8 fb 62 10 00 00 	movabs $0xffff8000001062fb,%rax$/;"	l
ffff800000109065	kernel.asm	/^ffff800000109065:	80 ff ff $/;"	l
ffff800000109068	kernel.asm	/^ffff800000109068:	ff d0                	callq  *%rax$/;"	l
ffff80000010906a	kernel.asm	/^ffff80000010906a:	85 c0                	test   %eax,%eax$/;"	l
ffff80000010906c	kernel.asm	/^ffff80000010906c:	79 07                	jns    ffff800000109075 <sys_sbrk+0x58>$/;"	l
ffff80000010906e	kernel.asm	/^ffff80000010906e:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff800000109073	kernel.asm	/^ffff800000109073:	eb 03                	jmp    ffff800000109078 <sys_sbrk+0x5b>$/;"	l
ffff800000109075	kernel.asm	/^ffff800000109075:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff800000109078	kernel.asm	/^ffff800000109078:	c9                   	leaveq $/;"	l
ffff800000109079	kernel.asm	/^ffff800000109079:	c3                   	retq   $/;"	l
ffff80000010907a	kernel.asm	/^ffff80000010907a <sys_sleep>:$/;"	l
ffff80000010907a	kernel.asm	/^ffff80000010907a:	55                   	push   %rbp$/;"	l
ffff80000010907b	kernel.asm	/^ffff80000010907b:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010907e	kernel.asm	/^ffff80000010907e:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff800000109082	kernel.asm	/^ffff800000109082:	48 8d 45 f8          	lea    -0x8(%rbp),%rax$/;"	l
ffff800000109086	kernel.asm	/^ffff800000109086:	48 89 c6             	mov    %rax,%rsi$/;"	l
ffff800000109089	kernel.asm	/^ffff800000109089:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
ffff80000010908e	kernel.asm	/^ffff80000010908e:	48 b8 03 7b 10 00 00 	movabs $0xffff800000107b03,%rax$/;"	l
ffff800000109095	kernel.asm	/^ffff800000109095:	80 ff ff $/;"	l
ffff800000109098	kernel.asm	/^ffff800000109098:	ff d0                	callq  *%rax$/;"	l
ffff80000010909a	kernel.asm	/^ffff80000010909a:	85 c0                	test   %eax,%eax$/;"	l
ffff80000010909c	kernel.asm	/^ffff80000010909c:	79 0a                	jns    ffff8000001090a8 <sys_sleep+0x2e>$/;"	l
ffff80000010909e	kernel.asm	/^ffff80000010909e:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff8000001090a3	kernel.asm	/^ffff8000001090a3:	e9 a7 00 00 00       	jmpq   ffff80000010914f <sys_sleep+0xd5>$/;"	l
ffff8000001090a8	kernel.asm	/^ffff8000001090a8:	48 bf 60 b3 11 00 00 	movabs $0xffff80000011b360,%rdi$/;"	l
ffff8000001090af	kernel.asm	/^ffff8000001090af:	80 ff ff $/;"	l
ffff8000001090b2	kernel.asm	/^ffff8000001090b2:	48 b8 ff 71 10 00 00 	movabs $0xffff8000001071ff,%rax$/;"	l
ffff8000001090b9	kernel.asm	/^ffff8000001090b9:	80 ff ff $/;"	l
ffff8000001090bc	kernel.asm	/^ffff8000001090bc:	ff d0                	callq  *%rax$/;"	l
ffff8000001090be	kernel.asm	/^ffff8000001090be:	48 b8 c8 b3 11 00 00 	movabs $0xffff80000011b3c8,%rax$/;"	l
ffff8000001090c5	kernel.asm	/^ffff8000001090c5:	80 ff ff $/;"	l
ffff8000001090c8	kernel.asm	/^ffff8000001090c8:	8b 00                	mov    (%rax),%eax$/;"	l
ffff8000001090ca	kernel.asm	/^ffff8000001090ca:	89 45 fc             	mov    %eax,-0x4(%rbp)$/;"	l
ffff8000001090cd	kernel.asm	/^ffff8000001090cd:	eb 4f                	jmp    ffff80000010911e <sys_sleep+0xa4>$/;"	l
ffff8000001090cf	kernel.asm	/^ffff8000001090cf:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff8000001090d6	kernel.asm	/^ffff8000001090d6:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff8000001090da	kernel.asm	/^ffff8000001090da:	8b 40 40             	mov    0x40(%rax),%eax$/;"	l
ffff8000001090dd	kernel.asm	/^ffff8000001090dd:	85 c0                	test   %eax,%eax$/;"	l
ffff8000001090df	kernel.asm	/^ffff8000001090df:	74 1d                	je     ffff8000001090fe <sys_sleep+0x84>$/;"	l
ffff8000001090e1	kernel.asm	/^ffff8000001090e1:	48 bf 60 b3 11 00 00 	movabs $0xffff80000011b360,%rdi$/;"	l
ffff8000001090e8	kernel.asm	/^ffff8000001090e8:	80 ff ff $/;"	l
ffff8000001090eb	kernel.asm	/^ffff8000001090eb:	48 b8 98 72 10 00 00 	movabs $0xffff800000107298,%rax$/;"	l
ffff8000001090f2	kernel.asm	/^ffff8000001090f2:	80 ff ff $/;"	l
ffff8000001090f5	kernel.asm	/^ffff8000001090f5:	ff d0                	callq  *%rax$/;"	l
ffff8000001090f7	kernel.asm	/^ffff8000001090f7:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff8000001090fc	kernel.asm	/^ffff8000001090fc:	eb 51                	jmp    ffff80000010914f <sys_sleep+0xd5>$/;"	l
ffff8000001090fe	kernel.asm	/^ffff8000001090fe:	48 be 60 b3 11 00 00 	movabs $0xffff80000011b360,%rsi$/;"	l
ffff800000109105	kernel.asm	/^ffff800000109105:	80 ff ff $/;"	l
ffff800000109108	kernel.asm	/^ffff800000109108:	48 bf c8 b3 11 00 00 	movabs $0xffff80000011b3c8,%rdi$/;"	l
ffff80000010910f	kernel.asm	/^ffff80000010910f:	80 ff ff $/;"	l
ffff800000109112	kernel.asm	/^ffff800000109112:	48 b8 23 6c 10 00 00 	movabs $0xffff800000106c23,%rax$/;"	l
ffff800000109119	kernel.asm	/^ffff800000109119:	80 ff ff $/;"	l
ffff80000010911c	kernel.asm	/^ffff80000010911c:	ff d0                	callq  *%rax$/;"	l
ffff80000010911e	kernel.asm	/^ffff80000010911e:	48 b8 c8 b3 11 00 00 	movabs $0xffff80000011b3c8,%rax$/;"	l
ffff800000109125	kernel.asm	/^ffff800000109125:	80 ff ff $/;"	l
ffff800000109128	kernel.asm	/^ffff800000109128:	8b 00                	mov    (%rax),%eax$/;"	l
ffff80000010912a	kernel.asm	/^ffff80000010912a:	2b 45 fc             	sub    -0x4(%rbp),%eax$/;"	l
ffff80000010912d	kernel.asm	/^ffff80000010912d:	8b 55 f8             	mov    -0x8(%rbp),%edx$/;"	l
ffff800000109130	kernel.asm	/^ffff800000109130:	39 d0                	cmp    %edx,%eax$/;"	l
ffff800000109132	kernel.asm	/^ffff800000109132:	72 9b                	jb     ffff8000001090cf <sys_sleep+0x55>$/;"	l
ffff800000109134	kernel.asm	/^ffff800000109134:	48 bf 60 b3 11 00 00 	movabs $0xffff80000011b360,%rdi$/;"	l
ffff80000010913b	kernel.asm	/^ffff80000010913b:	80 ff ff $/;"	l
ffff80000010913e	kernel.asm	/^ffff80000010913e:	48 b8 98 72 10 00 00 	movabs $0xffff800000107298,%rax$/;"	l
ffff800000109145	kernel.asm	/^ffff800000109145:	80 ff ff $/;"	l
ffff800000109148	kernel.asm	/^ffff800000109148:	ff d0                	callq  *%rax$/;"	l
ffff80000010914a	kernel.asm	/^ffff80000010914a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff80000010914f	kernel.asm	/^ffff80000010914f:	c9                   	leaveq $/;"	l
ffff800000109150	kernel.asm	/^ffff800000109150:	c3                   	retq   $/;"	l
ffff800000109151	kernel.asm	/^ffff800000109151 <sys_uptime>:$/;"	l
ffff800000109151	kernel.asm	/^ffff800000109151:	55                   	push   %rbp$/;"	l
ffff800000109152	kernel.asm	/^ffff800000109152:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000109155	kernel.asm	/^ffff800000109155:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff800000109159	kernel.asm	/^ffff800000109159:	48 bf 60 b3 11 00 00 	movabs $0xffff80000011b360,%rdi$/;"	l
ffff800000109160	kernel.asm	/^ffff800000109160:	80 ff ff $/;"	l
ffff800000109163	kernel.asm	/^ffff800000109163:	48 b8 ff 71 10 00 00 	movabs $0xffff8000001071ff,%rax$/;"	l
ffff80000010916a	kernel.asm	/^ffff80000010916a:	80 ff ff $/;"	l
ffff80000010916d	kernel.asm	/^ffff80000010916d:	ff d0                	callq  *%rax$/;"	l
ffff80000010916f	kernel.asm	/^ffff80000010916f:	48 b8 c8 b3 11 00 00 	movabs $0xffff80000011b3c8,%rax$/;"	l
ffff800000109176	kernel.asm	/^ffff800000109176:	80 ff ff $/;"	l
ffff800000109179	kernel.asm	/^ffff800000109179:	8b 00                	mov    (%rax),%eax$/;"	l
ffff80000010917b	kernel.asm	/^ffff80000010917b:	89 45 fc             	mov    %eax,-0x4(%rbp)$/;"	l
ffff80000010917e	kernel.asm	/^ffff80000010917e:	48 bf 60 b3 11 00 00 	movabs $0xffff80000011b360,%rdi$/;"	l
ffff800000109185	kernel.asm	/^ffff800000109185:	80 ff ff $/;"	l
ffff800000109188	kernel.asm	/^ffff800000109188:	48 b8 98 72 10 00 00 	movabs $0xffff800000107298,%rax$/;"	l
ffff80000010918f	kernel.asm	/^ffff80000010918f:	80 ff ff $/;"	l
ffff800000109192	kernel.asm	/^ffff800000109192:	ff d0                	callq  *%rax$/;"	l
ffff800000109194	kernel.asm	/^ffff800000109194:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff800000109197	kernel.asm	/^ffff800000109197:	c9                   	leaveq $/;"	l
ffff800000109198	kernel.asm	/^ffff800000109198:	c3                   	retq   $/;"	l
ffff800000109199	kernel.asm	/^ffff800000109199 <alltraps>:$/;"	l
ffff800000109199	kernel.asm	/^ffff800000109199:	41 57                	push   %r15$/;"	l
ffff80000010919b	kernel.asm	/^ffff80000010919b:	41 56                	push   %r14$/;"	l
ffff80000010919d	kernel.asm	/^ffff80000010919d:	41 55                	push   %r13$/;"	l
ffff80000010919f	kernel.asm	/^ffff80000010919f:	41 54                	push   %r12$/;"	l
ffff8000001091a1	kernel.asm	/^ffff8000001091a1:	41 53                	push   %r11$/;"	l
ffff8000001091a3	kernel.asm	/^ffff8000001091a3:	41 52                	push   %r10$/;"	l
ffff8000001091a5	kernel.asm	/^ffff8000001091a5:	41 51                	push   %r9$/;"	l
ffff8000001091a7	kernel.asm	/^ffff8000001091a7:	41 50                	push   %r8$/;"	l
ffff8000001091a9	kernel.asm	/^ffff8000001091a9:	57                   	push   %rdi$/;"	l
ffff8000001091aa	kernel.asm	/^ffff8000001091aa:	56                   	push   %rsi$/;"	l
ffff8000001091ab	kernel.asm	/^ffff8000001091ab:	55                   	push   %rbp$/;"	l
ffff8000001091ac	kernel.asm	/^ffff8000001091ac:	52                   	push   %rdx$/;"	l
ffff8000001091ad	kernel.asm	/^ffff8000001091ad:	51                   	push   %rcx$/;"	l
ffff8000001091ae	kernel.asm	/^ffff8000001091ae:	53                   	push   %rbx$/;"	l
ffff8000001091af	kernel.asm	/^ffff8000001091af:	50                   	push   %rax$/;"	l
ffff8000001091b0	kernel.asm	/^ffff8000001091b0:	48 89 e7             	mov    %rsp,%rdi$/;"	l
ffff8000001091b3	kernel.asm	/^ffff8000001091b3:	e8 bd 02 00 00       	callq  ffff800000109475 <trap>$/;"	l
ffff8000001091b8	kernel.asm	/^ffff8000001091b8 <trapret>:$/;"	l
ffff8000001091b8	kernel.asm	/^ffff8000001091b8:	58                   	pop    %rax$/;"	l
ffff8000001091b9	kernel.asm	/^ffff8000001091b9:	5b                   	pop    %rbx$/;"	l
ffff8000001091ba	kernel.asm	/^ffff8000001091ba:	59                   	pop    %rcx$/;"	l
ffff8000001091bb	kernel.asm	/^ffff8000001091bb:	5a                   	pop    %rdx$/;"	l
ffff8000001091bc	kernel.asm	/^ffff8000001091bc:	5d                   	pop    %rbp$/;"	l
ffff8000001091bd	kernel.asm	/^ffff8000001091bd:	5e                   	pop    %rsi$/;"	l
ffff8000001091be	kernel.asm	/^ffff8000001091be:	5f                   	pop    %rdi$/;"	l
ffff8000001091bf	kernel.asm	/^ffff8000001091bf:	41 58                	pop    %r8$/;"	l
ffff8000001091c1	kernel.asm	/^ffff8000001091c1:	41 59                	pop    %r9$/;"	l
ffff8000001091c3	kernel.asm	/^ffff8000001091c3:	41 5a                	pop    %r10$/;"	l
ffff8000001091c5	kernel.asm	/^ffff8000001091c5:	41 5b                	pop    %r11$/;"	l
ffff8000001091c7	kernel.asm	/^ffff8000001091c7:	41 5c                	pop    %r12$/;"	l
ffff8000001091c9	kernel.asm	/^ffff8000001091c9:	41 5d                	pop    %r13$/;"	l
ffff8000001091cb	kernel.asm	/^ffff8000001091cb:	41 5e                	pop    %r14$/;"	l
ffff8000001091cd	kernel.asm	/^ffff8000001091cd:	41 5f                	pop    %r15$/;"	l
ffff8000001091cf	kernel.asm	/^ffff8000001091cf:	48 83 c4 10          	add    $0x10,%rsp$/;"	l
ffff8000001091d3	kernel.asm	/^ffff8000001091d3:	48 cf                	iretq  $/;"	l
ffff8000001091d5	kernel.asm	/^ffff8000001091d5 <syscall_trap>:$/;"	l
ffff8000001091d5	kernel.asm	/^ffff8000001091d5:	41 57                	push   %r15$/;"	l
ffff8000001091d7	kernel.asm	/^ffff8000001091d7:	41 56                	push   %r14$/;"	l
ffff8000001091d9	kernel.asm	/^ffff8000001091d9:	41 55                	push   %r13$/;"	l
ffff8000001091db	kernel.asm	/^ffff8000001091db:	41 54                	push   %r12$/;"	l
ffff8000001091dd	kernel.asm	/^ffff8000001091dd:	41 53                	push   %r11$/;"	l
ffff8000001091df	kernel.asm	/^ffff8000001091df:	41 52                	push   %r10$/;"	l
ffff8000001091e1	kernel.asm	/^ffff8000001091e1:	41 51                	push   %r9$/;"	l
ffff8000001091e3	kernel.asm	/^ffff8000001091e3:	41 50                	push   %r8$/;"	l
ffff8000001091e5	kernel.asm	/^ffff8000001091e5:	57                   	push   %rdi$/;"	l
ffff8000001091e6	kernel.asm	/^ffff8000001091e6:	56                   	push   %rsi$/;"	l
ffff8000001091e7	kernel.asm	/^ffff8000001091e7:	55                   	push   %rbp$/;"	l
ffff8000001091e8	kernel.asm	/^ffff8000001091e8:	52                   	push   %rdx$/;"	l
ffff8000001091e9	kernel.asm	/^ffff8000001091e9:	51                   	push   %rcx$/;"	l
ffff8000001091ea	kernel.asm	/^ffff8000001091ea:	53                   	push   %rbx$/;"	l
ffff8000001091eb	kernel.asm	/^ffff8000001091eb:	50                   	push   %rax$/;"	l
ffff8000001091ec	kernel.asm	/^ffff8000001091ec:	48 89 e7             	mov    %rsp,%rdi$/;"	l
ffff8000001091ef	kernel.asm	/^ffff8000001091ef:	e8 81 02 00 00       	callq  ffff800000109475 <trap>$/;"	l
ffff8000001091f4	kernel.asm	/^ffff8000001091f4 <syscall_trapret>:$/;"	l
ffff8000001091f4	kernel.asm	/^ffff8000001091f4:	58                   	pop    %rax$/;"	l
ffff8000001091f5	kernel.asm	/^ffff8000001091f5:	5b                   	pop    %rbx$/;"	l
ffff8000001091f6	kernel.asm	/^ffff8000001091f6:	59                   	pop    %rcx$/;"	l
ffff8000001091f7	kernel.asm	/^ffff8000001091f7:	5a                   	pop    %rdx$/;"	l
ffff8000001091f8	kernel.asm	/^ffff8000001091f8:	5d                   	pop    %rbp$/;"	l
ffff8000001091f9	kernel.asm	/^ffff8000001091f9:	5e                   	pop    %rsi$/;"	l
ffff8000001091fa	kernel.asm	/^ffff8000001091fa:	5f                   	pop    %rdi$/;"	l
ffff8000001091fb	kernel.asm	/^ffff8000001091fb:	41 58                	pop    %r8$/;"	l
ffff8000001091fd	kernel.asm	/^ffff8000001091fd:	41 59                	pop    %r9$/;"	l
ffff8000001091ff	kernel.asm	/^ffff8000001091ff:	41 5a                	pop    %r10$/;"	l
ffff800000109201	kernel.asm	/^ffff800000109201:	41 5b                	pop    %r11$/;"	l
ffff800000109203	kernel.asm	/^ffff800000109203:	41 5c                	pop    %r12$/;"	l
ffff800000109205	kernel.asm	/^ffff800000109205:	41 5d                	pop    %r13$/;"	l
ffff800000109207	kernel.asm	/^ffff800000109207:	41 5e                	pop    %r14$/;"	l
ffff800000109209	kernel.asm	/^ffff800000109209:	41 5f                	pop    %r15$/;"	l
ffff80000010920b	kernel.asm	/^ffff80000010920b:	48 83 c4 28          	add    $0x28,%rsp$/;"	l
ffff80000010920f	kernel.asm	/^ffff80000010920f:	fa                   	cli    $/;"	l
ffff800000109210	kernel.asm	/^ffff800000109210:	48 8b 24 24          	mov    (%rsp),%rsp$/;"	l
ffff800000109214	kernel.asm	/^ffff800000109214:	48 0f 07             	sysretq $/;"	l
ffff800000109217	kernel.asm	/^ffff800000109217 <lidt>:$/;"	l
ffff800000109217	kernel.asm	/^ffff800000109217:	55                   	push   %rbp$/;"	l
ffff800000109218	kernel.asm	/^ffff800000109218:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010921b	kernel.asm	/^ffff80000010921b:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ffff80000010921f	kernel.asm	/^ffff80000010921f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
ffff800000109223	kernel.asm	/^ffff800000109223:	89 75 e4             	mov    %esi,-0x1c(%rbp)$/;"	l
ffff800000109226	kernel.asm	/^ffff800000109226:	8b 45 e4             	mov    -0x1c(%rbp),%eax$/;"	l
ffff800000109229	kernel.asm	/^ffff800000109229:	83 e8 01             	sub    $0x1,%eax$/;"	l
ffff80000010922c	kernel.asm	/^ffff80000010922c:	66 89 45 f0          	mov    %ax,-0x10(%rbp)$/;"	l
ffff800000109230	kernel.asm	/^ffff800000109230:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000109234	kernel.asm	/^ffff800000109234:	66 89 45 f2          	mov    %ax,-0xe(%rbp)$/;"	l
ffff800000109238	kernel.asm	/^ffff800000109238:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010923c	kernel.asm	/^ffff80000010923c:	48 c1 e8 10          	shr    $0x10,%rax$/;"	l
ffff800000109240	kernel.asm	/^ffff800000109240:	66 89 45 f4          	mov    %ax,-0xc(%rbp)$/;"	l
ffff800000109244	kernel.asm	/^ffff800000109244:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000109248	kernel.asm	/^ffff800000109248:	48 c1 e8 20          	shr    $0x20,%rax$/;"	l
ffff80000010924c	kernel.asm	/^ffff80000010924c:	66 89 45 f6          	mov    %ax,-0xa(%rbp)$/;"	l
ffff800000109250	kernel.asm	/^ffff800000109250:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000109254	kernel.asm	/^ffff800000109254:	48 c1 e8 30          	shr    $0x30,%rax$/;"	l
ffff800000109258	kernel.asm	/^ffff800000109258:	66 89 45 f8          	mov    %ax,-0x8(%rbp)$/;"	l
ffff80000010925c	kernel.asm	/^ffff80000010925c:	48 8d 45 f0          	lea    -0x10(%rbp),%rax$/;"	l
ffff800000109260	kernel.asm	/^ffff800000109260:	0f 01 18             	lidt   (%rax)$/;"	l
ffff800000109263	kernel.asm	/^ffff800000109263:	90                   	nop$/;"	l
ffff800000109264	kernel.asm	/^ffff800000109264:	c9                   	leaveq $/;"	l
ffff800000109265	kernel.asm	/^ffff800000109265:	c3                   	retq   $/;"	l
ffff800000109266	kernel.asm	/^ffff800000109266 <rcr2>:$/;"	l
ffff800000109266	kernel.asm	/^ffff800000109266:	55                   	push   %rbp$/;"	l
ffff800000109267	kernel.asm	/^ffff800000109267:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010926a	kernel.asm	/^ffff80000010926a:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff80000010926e	kernel.asm	/^ffff80000010926e:	0f 20 d0             	mov    %cr2,%rax$/;"	l
ffff800000109271	kernel.asm	/^ffff800000109271:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff800000109275	kernel.asm	/^ffff800000109275:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000109279	kernel.asm	/^ffff800000109279:	c9                   	leaveq $/;"	l
ffff80000010927a	kernel.asm	/^ffff80000010927a:	c3                   	retq   $/;"	l
ffff80000010927b	kernel.asm	/^ffff80000010927b <mkgate>:$/;"	l
ffff80000010927b	kernel.asm	/^ffff80000010927b:	55                   	push   %rbp$/;"	l
ffff80000010927c	kernel.asm	/^ffff80000010927c:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010927f	kernel.asm	/^ffff80000010927f:	48 83 ec 30          	sub    $0x30,%rsp$/;"	l
ffff800000109283	kernel.asm	/^ffff800000109283:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
ffff800000109287	kernel.asm	/^ffff800000109287:	89 75 e4             	mov    %esi,-0x1c(%rbp)$/;"	l
ffff80000010928a	kernel.asm	/^ffff80000010928a:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)$/;"	l
ffff80000010928e	kernel.asm	/^ffff80000010928e:	89 4d e0             	mov    %ecx,-0x20(%rbp)$/;"	l
ffff800000109291	kernel.asm	/^ffff800000109291:	44 89 45 d4          	mov    %r8d,-0x2c(%rbp)$/;"	l
ffff800000109295	kernel.asm	/^ffff800000109295:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff800000109299	kernel.asm	/^ffff800000109299:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff80000010929d	kernel.asm	/^ffff80000010929d:	c1 65 e4 02          	shll   $0x2,-0x1c(%rbp)$/;"	l
ffff8000001092a1	kernel.asm	/^ffff8000001092a1:	8b 45 e4             	mov    -0x1c(%rbp),%eax$/;"	l
ffff8000001092a4	kernel.asm	/^ffff8000001092a4:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx$/;"	l
ffff8000001092ab	kernel.asm	/^ffff8000001092ab:	00 $/;"	l
ffff8000001092ac	kernel.asm	/^ffff8000001092ac:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff8000001092b0	kernel.asm	/^ffff8000001092b0:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff8000001092b3	kernel.asm	/^ffff8000001092b3:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx$/;"	l
ffff8000001092b7	kernel.asm	/^ffff8000001092b7:	0f b7 d2             	movzwl %dx,%edx$/;"	l
ffff8000001092ba	kernel.asm	/^ffff8000001092ba:	81 ca 00 00 08 00    	or     $0x80000,%edx$/;"	l
ffff8000001092c0	kernel.asm	/^ffff8000001092c0:	89 10                	mov    %edx,(%rax)$/;"	l
ffff8000001092c2	kernel.asm	/^ffff8000001092c2:	8b 45 e4             	mov    -0x1c(%rbp),%eax$/;"	l
ffff8000001092c5	kernel.asm	/^ffff8000001092c5:	83 c0 01             	add    $0x1,%eax$/;"	l
ffff8000001092c8	kernel.asm	/^ffff8000001092c8:	89 c0                	mov    %eax,%eax$/;"	l
ffff8000001092ca	kernel.asm	/^ffff8000001092ca:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx$/;"	l
ffff8000001092d1	kernel.asm	/^ffff8000001092d1:	00 $/;"	l
ffff8000001092d2	kernel.asm	/^ffff8000001092d2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff8000001092d6	kernel.asm	/^ffff8000001092d6:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff8000001092d9	kernel.asm	/^ffff8000001092d9:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx$/;"	l
ffff8000001092dd	kernel.asm	/^ffff8000001092dd:	89 d1                	mov    %edx,%ecx$/;"	l
ffff8000001092df	kernel.asm	/^ffff8000001092df:	66 b9 00 00          	mov    $0x0,%cx$/;"	l
ffff8000001092e3	kernel.asm	/^ffff8000001092e3:	8b 55 e0             	mov    -0x20(%rbp),%edx$/;"	l
ffff8000001092e6	kernel.asm	/^ffff8000001092e6:	83 e2 03             	and    $0x3,%edx$/;"	l
ffff8000001092e9	kernel.asm	/^ffff8000001092e9:	c1 e2 0d             	shl    $0xd,%edx$/;"	l
ffff8000001092ec	kernel.asm	/^ffff8000001092ec:	09 ca                	or     %ecx,%edx$/;"	l
ffff8000001092ee	kernel.asm	/^ffff8000001092ee:	80 ce 8e             	or     $0x8e,%dh$/;"	l
ffff8000001092f1	kernel.asm	/^ffff8000001092f1:	89 10                	mov    %edx,(%rax)$/;"	l
ffff8000001092f3	kernel.asm	/^ffff8000001092f3:	83 7d d4 00          	cmpl   $0x0,-0x2c(%rbp)$/;"	l
ffff8000001092f7	kernel.asm	/^ffff8000001092f7:	74 35                	je     ffff80000010932e <mkgate+0xb3>$/;"	l
ffff8000001092f9	kernel.asm	/^ffff8000001092f9:	8b 45 e4             	mov    -0x1c(%rbp),%eax$/;"	l
ffff8000001092fc	kernel.asm	/^ffff8000001092fc:	83 c0 01             	add    $0x1,%eax$/;"	l
ffff8000001092ff	kernel.asm	/^ffff8000001092ff:	89 c0                	mov    %eax,%eax$/;"	l
ffff800000109301	kernel.asm	/^ffff800000109301:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx$/;"	l
ffff800000109308	kernel.asm	/^ffff800000109308:	00 $/;"	l
ffff800000109309	kernel.asm	/^ffff800000109309:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010930d	kernel.asm	/^ffff80000010930d:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff800000109310	kernel.asm	/^ffff800000109310:	8b 55 e4             	mov    -0x1c(%rbp),%edx$/;"	l
ffff800000109313	kernel.asm	/^ffff800000109313:	83 c2 01             	add    $0x1,%edx$/;"	l
ffff800000109316	kernel.asm	/^ffff800000109316:	89 d2                	mov    %edx,%edx$/;"	l
ffff800000109318	kernel.asm	/^ffff800000109318:	48 8d 0c 95 00 00 00 	lea    0x0(,%rdx,4),%rcx$/;"	l
ffff80000010931f	kernel.asm	/^ffff80000010931f:	00 $/;"	l
ffff800000109320	kernel.asm	/^ffff800000109320:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx$/;"	l
ffff800000109324	kernel.asm	/^ffff800000109324:	48 01 ca             	add    %rcx,%rdx$/;"	l
ffff800000109327	kernel.asm	/^ffff800000109327:	8b 12                	mov    (%rdx),%edx$/;"	l
ffff800000109329	kernel.asm	/^ffff800000109329:	80 ce 01             	or     $0x1,%dh$/;"	l
ffff80000010932c	kernel.asm	/^ffff80000010932c:	89 10                	mov    %edx,(%rax)$/;"	l
ffff80000010932e	kernel.asm	/^ffff80000010932e:	8b 45 e4             	mov    -0x1c(%rbp),%eax$/;"	l
ffff800000109331	kernel.asm	/^ffff800000109331:	83 c0 02             	add    $0x2,%eax$/;"	l
ffff800000109334	kernel.asm	/^ffff800000109334:	89 c0                	mov    %eax,%eax$/;"	l
ffff800000109336	kernel.asm	/^ffff800000109336:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx$/;"	l
ffff80000010933d	kernel.asm	/^ffff80000010933d:	00 $/;"	l
ffff80000010933e	kernel.asm	/^ffff80000010933e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000109342	kernel.asm	/^ffff800000109342:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff800000109345	kernel.asm	/^ffff800000109345:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx$/;"	l
ffff800000109349	kernel.asm	/^ffff800000109349:	48 c1 ea 20          	shr    $0x20,%rdx$/;"	l
ffff80000010934d	kernel.asm	/^ffff80000010934d:	89 10                	mov    %edx,(%rax)$/;"	l
ffff80000010934f	kernel.asm	/^ffff80000010934f:	8b 45 e4             	mov    -0x1c(%rbp),%eax$/;"	l
ffff800000109352	kernel.asm	/^ffff800000109352:	83 c0 03             	add    $0x3,%eax$/;"	l
ffff800000109355	kernel.asm	/^ffff800000109355:	89 c0                	mov    %eax,%eax$/;"	l
ffff800000109357	kernel.asm	/^ffff800000109357:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx$/;"	l
ffff80000010935e	kernel.asm	/^ffff80000010935e:	00 $/;"	l
ffff80000010935f	kernel.asm	/^ffff80000010935f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000109363	kernel.asm	/^ffff800000109363:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff800000109366	kernel.asm	/^ffff800000109366:	c7 00 00 00 00 00    	movl   $0x0,(%rax)$/;"	l
ffff80000010936c	kernel.asm	/^ffff80000010936c:	90                   	nop$/;"	l
ffff80000010936d	kernel.asm	/^ffff80000010936d:	c9                   	leaveq $/;"	l
ffff80000010936e	kernel.asm	/^ffff80000010936e:	c3                   	retq   $/;"	l
ffff80000010936f	kernel.asm	/^ffff80000010936f <idtinit>:$/;"	l
ffff80000010936f	kernel.asm	/^ffff80000010936f:	55                   	push   %rbp$/;"	l
ffff800000109370	kernel.asm	/^ffff800000109370:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000109373	kernel.asm	/^ffff800000109373:	48 b8 40 b3 11 00 00 	movabs $0xffff80000011b340,%rax$/;"	l
ffff80000010937a	kernel.asm	/^ffff80000010937a:	80 ff ff $/;"	l
ffff80000010937d	kernel.asm	/^ffff80000010937d:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff800000109380	kernel.asm	/^ffff800000109380:	be 00 10 00 00       	mov    $0x1000,%esi$/;"	l
ffff800000109385	kernel.asm	/^ffff800000109385:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000109388	kernel.asm	/^ffff800000109388:	48 b8 17 92 10 00 00 	movabs $0xffff800000109217,%rax$/;"	l
ffff80000010938f	kernel.asm	/^ffff80000010938f:	80 ff ff $/;"	l
ffff800000109392	kernel.asm	/^ffff800000109392:	ff d0                	callq  *%rax$/;"	l
ffff800000109394	kernel.asm	/^ffff800000109394:	90                   	nop$/;"	l
ffff800000109395	kernel.asm	/^ffff800000109395:	5d                   	pop    %rbp$/;"	l
ffff800000109396	kernel.asm	/^ffff800000109396:	c3                   	retq   $/;"	l
ffff800000109397	kernel.asm	/^ffff800000109397 <tvinit>:$/;"	l
ffff800000109397	kernel.asm	/^ffff800000109397:	55                   	push   %rbp$/;"	l
ffff800000109398	kernel.asm	/^ffff800000109398:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010939b	kernel.asm	/^ffff80000010939b:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff80000010939f	kernel.asm	/^ffff80000010939f:	48 b8 9f 40 10 00 00 	movabs $0xffff80000010409f,%rax$/;"	l
ffff8000001093a6	kernel.asm	/^ffff8000001093a6:	80 ff ff $/;"	l
ffff8000001093a9	kernel.asm	/^ffff8000001093a9:	ff d0                	callq  *%rax$/;"	l
ffff8000001093ab	kernel.asm	/^ffff8000001093ab:	48 89 c2             	mov    %rax,%rdx$/;"	l
ffff8000001093ae	kernel.asm	/^ffff8000001093ae:	48 b8 40 b3 11 00 00 	movabs $0xffff80000011b340,%rax$/;"	l
ffff8000001093b5	kernel.asm	/^ffff8000001093b5:	80 ff ff $/;"	l
ffff8000001093b8	kernel.asm	/^ffff8000001093b8:	48 89 10             	mov    %rdx,(%rax)$/;"	l
ffff8000001093bb	kernel.asm	/^ffff8000001093bb:	48 b8 40 b3 11 00 00 	movabs $0xffff80000011b340,%rax$/;"	l
ffff8000001093c2	kernel.asm	/^ffff8000001093c2:	80 ff ff $/;"	l
ffff8000001093c5	kernel.asm	/^ffff8000001093c5:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff8000001093c8	kernel.asm	/^ffff8000001093c8:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
ffff8000001093cd	kernel.asm	/^ffff8000001093cd:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffff8000001093d2	kernel.asm	/^ffff8000001093d2:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001093d5	kernel.asm	/^ffff8000001093d5:	48 b8 9b 75 10 00 00 	movabs $0xffff80000010759b,%rax$/;"	l
ffff8000001093dc	kernel.asm	/^ffff8000001093dc:	80 ff ff $/;"	l
ffff8000001093df	kernel.asm	/^ffff8000001093df:	ff d0                	callq  *%rax$/;"	l
ffff8000001093e1	kernel.asm	/^ffff8000001093e1:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)$/;"	l
ffff8000001093e8	kernel.asm	/^ffff8000001093e8:	eb 42                	jmp    ffff80000010942c <tvinit+0x95>$/;"	l
ffff8000001093ea	kernel.asm	/^ffff8000001093ea:	48 b8 50 d6 10 00 00 	movabs $0xffff80000010d650,%rax$/;"	l
ffff8000001093f1	kernel.asm	/^ffff8000001093f1:	80 ff ff $/;"	l
ffff8000001093f4	kernel.asm	/^ffff8000001093f4:	8b 55 fc             	mov    -0x4(%rbp),%edx$/;"	l
ffff8000001093f7	kernel.asm	/^ffff8000001093f7:	48 63 d2             	movslq %edx,%rdx$/;"	l
ffff8000001093fa	kernel.asm	/^ffff8000001093fa:	48 8b 14 d0          	mov    (%rax,%rdx,8),%rdx$/;"	l
ffff8000001093fe	kernel.asm	/^ffff8000001093fe:	8b 75 fc             	mov    -0x4(%rbp),%esi$/;"	l
ffff800000109401	kernel.asm	/^ffff800000109401:	48 b8 40 b3 11 00 00 	movabs $0xffff80000011b340,%rax$/;"	l
ffff800000109408	kernel.asm	/^ffff800000109408:	80 ff ff $/;"	l
ffff80000010940b	kernel.asm	/^ffff80000010940b:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff80000010940e	kernel.asm	/^ffff80000010940e:	41 b8 00 00 00 00    	mov    $0x0,%r8d$/;"	l
ffff800000109414	kernel.asm	/^ffff800000109414:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
ffff800000109419	kernel.asm	/^ffff800000109419:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010941c	kernel.asm	/^ffff80000010941c:	48 b8 7b 92 10 00 00 	movabs $0xffff80000010927b,%rax$/;"	l
ffff800000109423	kernel.asm	/^ffff800000109423:	80 ff ff $/;"	l
ffff800000109426	kernel.asm	/^ffff800000109426:	ff d0                	callq  *%rax$/;"	l
ffff800000109428	kernel.asm	/^ffff800000109428:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)$/;"	l
ffff80000010942c	kernel.asm	/^ffff80000010942c:	81 7d fc ff 00 00 00 	cmpl   $0xff,-0x4(%rbp)$/;"	l
ffff800000109433	kernel.asm	/^ffff800000109433:	7e b5                	jle    ffff8000001093ea <tvinit+0x53>$/;"	l
ffff800000109435	kernel.asm	/^ffff800000109435:	48 b8 50 d6 10 00 00 	movabs $0xffff80000010d650,%rax$/;"	l
ffff80000010943c	kernel.asm	/^ffff80000010943c:	80 ff ff $/;"	l
ffff80000010943f	kernel.asm	/^ffff80000010943f:	48 8b 90 00 02 00 00 	mov    0x200(%rax),%rdx$/;"	l
ffff800000109446	kernel.asm	/^ffff800000109446:	48 b8 40 b3 11 00 00 	movabs $0xffff80000011b340,%rax$/;"	l
ffff80000010944d	kernel.asm	/^ffff80000010944d:	80 ff ff $/;"	l
ffff800000109450	kernel.asm	/^ffff800000109450:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff800000109453	kernel.asm	/^ffff800000109453:	41 b8 01 00 00 00    	mov    $0x1,%r8d$/;"	l
ffff800000109459	kernel.asm	/^ffff800000109459:	b9 03 00 00 00       	mov    $0x3,%ecx$/;"	l
ffff80000010945e	kernel.asm	/^ffff80000010945e:	be 40 00 00 00       	mov    $0x40,%esi$/;"	l
ffff800000109463	kernel.asm	/^ffff800000109463:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000109466	kernel.asm	/^ffff800000109466:	48 b8 7b 92 10 00 00 	movabs $0xffff80000010927b,%rax$/;"	l
ffff80000010946d	kernel.asm	/^ffff80000010946d:	80 ff ff $/;"	l
ffff800000109470	kernel.asm	/^ffff800000109470:	ff d0                	callq  *%rax$/;"	l
ffff800000109472	kernel.asm	/^ffff800000109472:	90                   	nop$/;"	l
ffff800000109473	kernel.asm	/^ffff800000109473:	c9                   	leaveq $/;"	l
ffff800000109474	kernel.asm	/^ffff800000109474:	c3                   	retq   $/;"	l
ffff800000109475	kernel.asm	/^ffff800000109475 <trap>:$/;"	l
ffff800000109475	kernel.asm	/^ffff800000109475:	55                   	push   %rbp$/;"	l
ffff800000109476	kernel.asm	/^ffff800000109476:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000109479	kernel.asm	/^ffff800000109479:	41 54                	push   %r12$/;"	l
ffff80000010947b	kernel.asm	/^ffff80000010947b:	53                   	push   %rbx$/;"	l
ffff80000010947c	kernel.asm	/^ffff80000010947c:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff800000109480	kernel.asm	/^ffff800000109480:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
ffff800000109484	kernel.asm	/^ffff800000109484:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000109488	kernel.asm	/^ffff800000109488:	48 8b 40 78          	mov    0x78(%rax),%rax$/;"	l
ffff80000010948c	kernel.asm	/^ffff80000010948c:	48 83 f8 40          	cmp    $0x40,%rax$/;"	l
ffff800000109490	kernel.asm	/^ffff800000109490:	75 64                	jne    ffff8000001094f6 <trap+0x81>$/;"	l
ffff800000109492	kernel.asm	/^ffff800000109492:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000109499	kernel.asm	/^ffff800000109499:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff80000010949d	kernel.asm	/^ffff80000010949d:	8b 40 40             	mov    0x40(%rax),%eax$/;"	l
ffff8000001094a0	kernel.asm	/^ffff8000001094a0:	85 c0                	test   %eax,%eax$/;"	l
ffff8000001094a2	kernel.asm	/^ffff8000001094a2:	74 0c                	je     ffff8000001094b0 <trap+0x3b>$/;"	l
ffff8000001094a4	kernel.asm	/^ffff8000001094a4:	48 b8 ef 65 10 00 00 	movabs $0xffff8000001065ef,%rax$/;"	l
ffff8000001094ab	kernel.asm	/^ffff8000001094ab:	80 ff ff $/;"	l
ffff8000001094ae	kernel.asm	/^ffff8000001094ae:	ff d0                	callq  *%rax$/;"	l
ffff8000001094b0	kernel.asm	/^ffff8000001094b0:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff8000001094b7	kernel.asm	/^ffff8000001094b7:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff8000001094bb	kernel.asm	/^ffff8000001094bb:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx$/;"	l
ffff8000001094bf	kernel.asm	/^ffff8000001094bf:	48 89 50 28          	mov    %rdx,0x28(%rax)$/;"	l
ffff8000001094c3	kernel.asm	/^ffff8000001094c3:	48 b8 42 7c 10 00 00 	movabs $0xffff800000107c42,%rax$/;"	l
ffff8000001094ca	kernel.asm	/^ffff8000001094ca:	80 ff ff $/;"	l
ffff8000001094cd	kernel.asm	/^ffff8000001094cd:	ff d0                	callq  *%rax$/;"	l
ffff8000001094cf	kernel.asm	/^ffff8000001094cf:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff8000001094d6	kernel.asm	/^ffff8000001094d6:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff8000001094da	kernel.asm	/^ffff8000001094da:	8b 40 40             	mov    0x40(%rax),%eax$/;"	l
ffff8000001094dd	kernel.asm	/^ffff8000001094dd:	85 c0                	test   %eax,%eax$/;"	l
ffff8000001094df	kernel.asm	/^ffff8000001094df:	0f 84 8e 03 00 00    	je     ffff800000109873 <trap+0x3fe>$/;"	l
ffff8000001094e5	kernel.asm	/^ffff8000001094e5:	48 b8 ef 65 10 00 00 	movabs $0xffff8000001065ef,%rax$/;"	l
ffff8000001094ec	kernel.asm	/^ffff8000001094ec:	80 ff ff $/;"	l
ffff8000001094ef	kernel.asm	/^ffff8000001094ef:	ff d0                	callq  *%rax$/;"	l
ffff8000001094f1	kernel.asm	/^ffff8000001094f1:	e9 7d 03 00 00       	jmpq   ffff800000109873 <trap+0x3fe>$/;"	l
ffff8000001094f6	kernel.asm	/^ffff8000001094f6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff8000001094fa	kernel.asm	/^ffff8000001094fa:	48 8b 40 78          	mov    0x78(%rax),%rax$/;"	l
ffff8000001094fe	kernel.asm	/^ffff8000001094fe:	48 83 e8 20          	sub    $0x20,%rax$/;"	l
ffff800000109502	kernel.asm	/^ffff800000109502:	48 83 f8 1f          	cmp    $0x1f,%rax$/;"	l
ffff800000109506	kernel.asm	/^ffff800000109506:	0f 87 46 01 00 00    	ja     ffff800000109652 <trap+0x1dd>$/;"	l
ffff80000010950c	kernel.asm	/^ffff80000010950c:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx$/;"	l
ffff800000109513	kernel.asm	/^ffff800000109513:	00 $/;"	l
ffff800000109514	kernel.asm	/^ffff800000109514:	48 b8 08 c0 10 00 00 	movabs $0xffff80000010c008,%rax$/;"	l
ffff80000010951b	kernel.asm	/^ffff80000010951b:	80 ff ff $/;"	l
ffff80000010951e	kernel.asm	/^ffff80000010951e:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff800000109521	kernel.asm	/^ffff800000109521:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff800000109524	kernel.asm	/^ffff800000109524:	ff e0                	jmpq   *%rax$/;"	l
ffff800000109526	kernel.asm	/^ffff800000109526:	48 b8 6b 45 10 00 00 	movabs $0xffff80000010456b,%rax$/;"	l
ffff80000010952d	kernel.asm	/^ffff80000010952d:	80 ff ff $/;"	l
ffff800000109530	kernel.asm	/^ffff800000109530:	ff d0                	callq  *%rax$/;"	l
ffff800000109532	kernel.asm	/^ffff800000109532:	85 c0                	test   %eax,%eax$/;"	l
ffff800000109534	kernel.asm	/^ffff800000109534:	75 5d                	jne    ffff800000109593 <trap+0x11e>$/;"	l
ffff800000109536	kernel.asm	/^ffff800000109536:	48 bf 60 b3 11 00 00 	movabs $0xffff80000011b360,%rdi$/;"	l
ffff80000010953d	kernel.asm	/^ffff80000010953d:	80 ff ff $/;"	l
ffff800000109540	kernel.asm	/^ffff800000109540:	48 b8 ff 71 10 00 00 	movabs $0xffff8000001071ff,%rax$/;"	l
ffff800000109547	kernel.asm	/^ffff800000109547:	80 ff ff $/;"	l
ffff80000010954a	kernel.asm	/^ffff80000010954a:	ff d0                	callq  *%rax$/;"	l
ffff80000010954c	kernel.asm	/^ffff80000010954c:	48 b8 c8 b3 11 00 00 	movabs $0xffff80000011b3c8,%rax$/;"	l
ffff800000109553	kernel.asm	/^ffff800000109553:	80 ff ff $/;"	l
ffff800000109556	kernel.asm	/^ffff800000109556:	8b 00                	mov    (%rax),%eax$/;"	l
ffff800000109558	kernel.asm	/^ffff800000109558:	8d 50 01             	lea    0x1(%rax),%edx$/;"	l
ffff80000010955b	kernel.asm	/^ffff80000010955b:	48 b8 c8 b3 11 00 00 	movabs $0xffff80000011b3c8,%rax$/;"	l
ffff800000109562	kernel.asm	/^ffff800000109562:	80 ff ff $/;"	l
ffff800000109565	kernel.asm	/^ffff800000109565:	89 10                	mov    %edx,(%rax)$/;"	l
ffff800000109567	kernel.asm	/^ffff800000109567:	48 bf c8 b3 11 00 00 	movabs $0xffff80000011b3c8,%rdi$/;"	l
ffff80000010956e	kernel.asm	/^ffff80000010956e:	80 ff ff $/;"	l
ffff800000109571	kernel.asm	/^ffff800000109571:	48 b8 8b 6d 10 00 00 	movabs $0xffff800000106d8b,%rax$/;"	l
ffff800000109578	kernel.asm	/^ffff800000109578:	80 ff ff $/;"	l
ffff80000010957b	kernel.asm	/^ffff80000010957b:	ff d0                	callq  *%rax$/;"	l
ffff80000010957d	kernel.asm	/^ffff80000010957d:	48 bf 60 b3 11 00 00 	movabs $0xffff80000011b360,%rdi$/;"	l
ffff800000109584	kernel.asm	/^ffff800000109584:	80 ff ff $/;"	l
ffff800000109587	kernel.asm	/^ffff800000109587:	48 b8 98 72 10 00 00 	movabs $0xffff800000107298,%rax$/;"	l
ffff80000010958e	kernel.asm	/^ffff80000010958e:	80 ff ff $/;"	l
ffff800000109591	kernel.asm	/^ffff800000109591:	ff d0                	callq  *%rax$/;"	l
ffff800000109593	kernel.asm	/^ffff800000109593:	48 b8 73 46 10 00 00 	movabs $0xffff800000104673,%rax$/;"	l
ffff80000010959a	kernel.asm	/^ffff80000010959a:	80 ff ff $/;"	l
ffff80000010959d	kernel.asm	/^ffff80000010959d:	ff d0                	callq  *%rax$/;"	l
ffff80000010959f	kernel.asm	/^ffff80000010959f:	e9 0c 02 00 00       	jmpq   ffff8000001097b0 <trap+0x33b>$/;"	l
ffff8000001095a4	kernel.asm	/^ffff8000001095a4:	48 b8 9f 3a 10 00 00 	movabs $0xffff800000103a9f,%rax$/;"	l
ffff8000001095ab	kernel.asm	/^ffff8000001095ab:	80 ff ff $/;"	l
ffff8000001095ae	kernel.asm	/^ffff8000001095ae:	ff d0                	callq  *%rax$/;"	l
ffff8000001095b0	kernel.asm	/^ffff8000001095b0:	48 b8 73 46 10 00 00 	movabs $0xffff800000104673,%rax$/;"	l
ffff8000001095b7	kernel.asm	/^ffff8000001095b7:	80 ff ff $/;"	l
ffff8000001095ba	kernel.asm	/^ffff8000001095ba:	ff d0                	callq  *%rax$/;"	l
ffff8000001095bc	kernel.asm	/^ffff8000001095bc:	e9 ef 01 00 00       	jmpq   ffff8000001097b0 <trap+0x33b>$/;"	l
ffff8000001095c1	kernel.asm	/^ffff8000001095c1:	48 b8 2a 43 10 00 00 	movabs $0xffff80000010432a,%rax$/;"	l
ffff8000001095c8	kernel.asm	/^ffff8000001095c8:	80 ff ff $/;"	l
ffff8000001095cb	kernel.asm	/^ffff8000001095cb:	ff d0                	callq  *%rax$/;"	l
ffff8000001095cd	kernel.asm	/^ffff8000001095cd:	48 b8 73 46 10 00 00 	movabs $0xffff800000104673,%rax$/;"	l
ffff8000001095d4	kernel.asm	/^ffff8000001095d4:	80 ff ff $/;"	l
ffff8000001095d7	kernel.asm	/^ffff8000001095d7:	ff d0                	callq  *%rax$/;"	l
ffff8000001095d9	kernel.asm	/^ffff8000001095d9:	e9 d2 01 00 00       	jmpq   ffff8000001097b0 <trap+0x33b>$/;"	l
ffff8000001095de	kernel.asm	/^ffff8000001095de:	48 b8 da 9a 10 00 00 	movabs $0xffff800000109ada,%rax$/;"	l
ffff8000001095e5	kernel.asm	/^ffff8000001095e5:	80 ff ff $/;"	l
ffff8000001095e8	kernel.asm	/^ffff8000001095e8:	ff d0                	callq  *%rax$/;"	l
ffff8000001095ea	kernel.asm	/^ffff8000001095ea:	48 b8 73 46 10 00 00 	movabs $0xffff800000104673,%rax$/;"	l
ffff8000001095f1	kernel.asm	/^ffff8000001095f1:	80 ff ff $/;"	l
ffff8000001095f4	kernel.asm	/^ffff8000001095f4:	ff d0                	callq  *%rax$/;"	l
ffff8000001095f6	kernel.asm	/^ffff8000001095f6:	e9 b5 01 00 00       	jmpq   ffff8000001097b0 <trap+0x33b>$/;"	l
ffff8000001095fb	kernel.asm	/^ffff8000001095fb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff8000001095ff	kernel.asm	/^ffff8000001095ff:	4c 8b a0 88 00 00 00 	mov    0x88(%rax),%r12$/;"	l
ffff800000109606	kernel.asm	/^ffff800000109606:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010960a	kernel.asm	/^ffff80000010960a:	48 8b 98 90 00 00 00 	mov    0x90(%rax),%rbx$/;"	l
ffff800000109611	kernel.asm	/^ffff800000109611:	48 b8 6b 45 10 00 00 	movabs $0xffff80000010456b,%rax$/;"	l
ffff800000109618	kernel.asm	/^ffff800000109618:	80 ff ff $/;"	l
ffff80000010961b	kernel.asm	/^ffff80000010961b:	ff d0                	callq  *%rax$/;"	l
ffff80000010961d	kernel.asm	/^ffff80000010961d:	4c 89 e1             	mov    %r12,%rcx$/;"	l
ffff800000109620	kernel.asm	/^ffff800000109620:	48 89 da             	mov    %rbx,%rdx$/;"	l
ffff800000109623	kernel.asm	/^ffff800000109623:	89 c6                	mov    %eax,%esi$/;"	l
ffff800000109625	kernel.asm	/^ffff800000109625:	48 bf 50 bf 10 00 00 	movabs $0xffff80000010bf50,%rdi$/;"	l
ffff80000010962c	kernel.asm	/^ffff80000010962c:	80 ff ff $/;"	l
ffff80000010962f	kernel.asm	/^ffff80000010962f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000109634	kernel.asm	/^ffff800000109634:	49 b8 ac 07 10 00 00 	movabs $0xffff8000001007ac,%r8$/;"	l
ffff80000010963b	kernel.asm	/^ffff80000010963b:	80 ff ff $/;"	l
ffff80000010963e	kernel.asm	/^ffff80000010963e:	41 ff d0             	callq  *%r8$/;"	l
ffff800000109641	kernel.asm	/^ffff800000109641:	48 b8 73 46 10 00 00 	movabs $0xffff800000104673,%rax$/;"	l
ffff800000109648	kernel.asm	/^ffff800000109648:	80 ff ff $/;"	l
ffff80000010964b	kernel.asm	/^ffff80000010964b:	ff d0                	callq  *%rax$/;"	l
ffff80000010964d	kernel.asm	/^ffff80000010964d:	e9 5e 01 00 00       	jmpq   ffff8000001097b0 <trap+0x33b>$/;"	l
ffff800000109652	kernel.asm	/^ffff800000109652:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000109659	kernel.asm	/^ffff800000109659:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff80000010965d	kernel.asm	/^ffff80000010965d:	48 85 c0             	test   %rax,%rax$/;"	l
ffff800000109660	kernel.asm	/^ffff800000109660:	74 17                	je     ffff800000109679 <trap+0x204>$/;"	l
ffff800000109662	kernel.asm	/^ffff800000109662:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000109666	kernel.asm	/^ffff800000109666:	48 8b 80 90 00 00 00 	mov    0x90(%rax),%rax$/;"	l
ffff80000010966d	kernel.asm	/^ffff80000010966d:	83 e0 03             	and    $0x3,%eax$/;"	l
ffff800000109670	kernel.asm	/^ffff800000109670:	48 85 c0             	test   %rax,%rax$/;"	l
ffff800000109673	kernel.asm	/^ffff800000109673:	0f 85 96 00 00 00    	jne    ffff80000010970f <trap+0x29a>$/;"	l
ffff800000109679	kernel.asm	/^ffff800000109679:	48 b8 66 92 10 00 00 	movabs $0xffff800000109266,%rax$/;"	l
ffff800000109680	kernel.asm	/^ffff800000109680:	80 ff ff $/;"	l
ffff800000109683	kernel.asm	/^ffff800000109683:	ff d0                	callq  *%rax$/;"	l
ffff800000109685	kernel.asm	/^ffff800000109685:	49 89 c4             	mov    %rax,%r12$/;"	l
ffff800000109688	kernel.asm	/^ffff800000109688:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010968c	kernel.asm	/^ffff80000010968c:	48 8b 98 88 00 00 00 	mov    0x88(%rax),%rbx$/;"	l
ffff800000109693	kernel.asm	/^ffff800000109693:	48 b8 6b 45 10 00 00 	movabs $0xffff80000010456b,%rax$/;"	l
ffff80000010969a	kernel.asm	/^ffff80000010969a:	80 ff ff $/;"	l
ffff80000010969d	kernel.asm	/^ffff80000010969d:	ff d0                	callq  *%rax$/;"	l
ffff80000010969f	kernel.asm	/^ffff80000010969f:	89 c2                	mov    %eax,%edx$/;"	l
ffff8000001096a1	kernel.asm	/^ffff8000001096a1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff8000001096a5	kernel.asm	/^ffff8000001096a5:	48 8b 40 78          	mov    0x78(%rax),%rax$/;"	l
ffff8000001096a9	kernel.asm	/^ffff8000001096a9:	4d 89 e0             	mov    %r12,%r8$/;"	l
ffff8000001096ac	kernel.asm	/^ffff8000001096ac:	48 89 d9             	mov    %rbx,%rcx$/;"	l
ffff8000001096af	kernel.asm	/^ffff8000001096af:	48 89 c6             	mov    %rax,%rsi$/;"	l
ffff8000001096b2	kernel.asm	/^ffff8000001096b2:	48 bf 78 bf 10 00 00 	movabs $0xffff80000010bf78,%rdi$/;"	l
ffff8000001096b9	kernel.asm	/^ffff8000001096b9:	80 ff ff $/;"	l
ffff8000001096bc	kernel.asm	/^ffff8000001096bc:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff8000001096c1	kernel.asm	/^ffff8000001096c1:	49 b9 ac 07 10 00 00 	movabs $0xffff8000001007ac,%r9$/;"	l
ffff8000001096c8	kernel.asm	/^ffff8000001096c8:	80 ff ff $/;"	l
ffff8000001096cb	kernel.asm	/^ffff8000001096cb:	41 ff d1             	callq  *%r9$/;"	l
ffff8000001096ce	kernel.asm	/^ffff8000001096ce:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff8000001096d5	kernel.asm	/^ffff8000001096d5:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff8000001096d9	kernel.asm	/^ffff8000001096d9:	8b 40 1c             	mov    0x1c(%rax),%eax$/;"	l
ffff8000001096dc	kernel.asm	/^ffff8000001096dc:	89 c6                	mov    %eax,%esi$/;"	l
ffff8000001096de	kernel.asm	/^ffff8000001096de:	48 bf aa bf 10 00 00 	movabs $0xffff80000010bfaa,%rdi$/;"	l
ffff8000001096e5	kernel.asm	/^ffff8000001096e5:	80 ff ff $/;"	l
ffff8000001096e8	kernel.asm	/^ffff8000001096e8:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff8000001096ed	kernel.asm	/^ffff8000001096ed:	48 ba ac 07 10 00 00 	movabs $0xffff8000001007ac,%rdx$/;"	l
ffff8000001096f4	kernel.asm	/^ffff8000001096f4:	80 ff ff $/;"	l
ffff8000001096f7	kernel.asm	/^ffff8000001096f7:	ff d2                	callq  *%rdx$/;"	l
ffff8000001096f9	kernel.asm	/^ffff8000001096f9:	48 bf b7 bf 10 00 00 	movabs $0xffff80000010bfb7,%rdi$/;"	l
ffff800000109700	kernel.asm	/^ffff800000109700:	80 ff ff $/;"	l
ffff800000109703	kernel.asm	/^ffff800000109703:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff80000010970a	kernel.asm	/^ffff80000010970a:	80 ff ff $/;"	l
ffff80000010970d	kernel.asm	/^ffff80000010970d:	ff d0                	callq  *%rax$/;"	l
ffff80000010970f	kernel.asm	/^ffff80000010970f:	48 b8 66 92 10 00 00 	movabs $0xffff800000109266,%rax$/;"	l
ffff800000109716	kernel.asm	/^ffff800000109716:	80 ff ff $/;"	l
ffff800000109719	kernel.asm	/^ffff800000109719:	ff d0                	callq  *%rax$/;"	l
ffff80000010971b	kernel.asm	/^ffff80000010971b:	49 89 c4             	mov    %rax,%r12$/;"	l
ffff80000010971e	kernel.asm	/^ffff80000010971e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000109722	kernel.asm	/^ffff800000109722:	48 8b 98 88 00 00 00 	mov    0x88(%rax),%rbx$/;"	l
ffff800000109729	kernel.asm	/^ffff800000109729:	48 b8 6b 45 10 00 00 	movabs $0xffff80000010456b,%rax$/;"	l
ffff800000109730	kernel.asm	/^ffff800000109730:	80 ff ff $/;"	l
ffff800000109733	kernel.asm	/^ffff800000109733:	ff d0                	callq  *%rax$/;"	l
ffff800000109735	kernel.asm	/^ffff800000109735:	89 c7                	mov    %eax,%edi$/;"	l
ffff800000109737	kernel.asm	/^ffff800000109737:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010973b	kernel.asm	/^ffff80000010973b:	48 8b 88 80 00 00 00 	mov    0x80(%rax),%rcx$/;"	l
ffff800000109742	kernel.asm	/^ffff800000109742:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000109746	kernel.asm	/^ffff800000109746:	48 8b 50 78          	mov    0x78(%rax),%rdx$/;"	l
ffff80000010974a	kernel.asm	/^ffff80000010974a:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000109751	kernel.asm	/^ffff800000109751:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000109755	kernel.asm	/^ffff800000109755:	48 8d b0 d0 00 00 00 	lea    0xd0(%rax),%rsi$/;"	l
ffff80000010975c	kernel.asm	/^ffff80000010975c:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000109763	kernel.asm	/^ffff800000109763:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000109767	kernel.asm	/^ffff800000109767:	8b 40 1c             	mov    0x1c(%rax),%eax$/;"	l
ffff80000010976a	kernel.asm	/^ffff80000010976a:	41 54                	push   %r12$/;"	l
ffff80000010976c	kernel.asm	/^ffff80000010976c:	53                   	push   %rbx$/;"	l
ffff80000010976d	kernel.asm	/^ffff80000010976d:	41 89 f9             	mov    %edi,%r9d$/;"	l
ffff800000109770	kernel.asm	/^ffff800000109770:	49 89 c8             	mov    %rcx,%r8$/;"	l
ffff800000109773	kernel.asm	/^ffff800000109773:	48 89 d1             	mov    %rdx,%rcx$/;"	l
ffff800000109776	kernel.asm	/^ffff800000109776:	48 89 f2             	mov    %rsi,%rdx$/;"	l
ffff800000109779	kernel.asm	/^ffff800000109779:	89 c6                	mov    %eax,%esi$/;"	l
ffff80000010977b	kernel.asm	/^ffff80000010977b:	48 bf c0 bf 10 00 00 	movabs $0xffff80000010bfc0,%rdi$/;"	l
ffff800000109782	kernel.asm	/^ffff800000109782:	80 ff ff $/;"	l
ffff800000109785	kernel.asm	/^ffff800000109785:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff80000010978a	kernel.asm	/^ffff80000010978a:	49 ba ac 07 10 00 00 	movabs $0xffff8000001007ac,%r10$/;"	l
ffff800000109791	kernel.asm	/^ffff800000109791:	80 ff ff $/;"	l
ffff800000109794	kernel.asm	/^ffff800000109794:	41 ff d2             	callq  *%r10$/;"	l
ffff800000109797	kernel.asm	/^ffff800000109797:	48 83 c4 10          	add    $0x10,%rsp$/;"	l
ffff80000010979b	kernel.asm	/^ffff80000010979b:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff8000001097a2	kernel.asm	/^ffff8000001097a2:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff8000001097a6	kernel.asm	/^ffff8000001097a6:	c7 40 40 01 00 00 00 	movl   $0x1,0x40(%rax)$/;"	l
ffff8000001097ad	kernel.asm	/^ffff8000001097ad:	eb 01                	jmp    ffff8000001097b0 <trap+0x33b>$/;"	l
ffff8000001097af	kernel.asm	/^ffff8000001097af:	90                   	nop$/;"	l
ffff8000001097b0	kernel.asm	/^ffff8000001097b0:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff8000001097b7	kernel.asm	/^ffff8000001097b7:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff8000001097bb	kernel.asm	/^ffff8000001097bb:	48 85 c0             	test   %rax,%rax$/;"	l
ffff8000001097be	kernel.asm	/^ffff8000001097be:	74 32                	je     ffff8000001097f2 <trap+0x37d>$/;"	l
ffff8000001097c0	kernel.asm	/^ffff8000001097c0:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff8000001097c7	kernel.asm	/^ffff8000001097c7:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff8000001097cb	kernel.asm	/^ffff8000001097cb:	8b 40 40             	mov    0x40(%rax),%eax$/;"	l
ffff8000001097ce	kernel.asm	/^ffff8000001097ce:	85 c0                	test   %eax,%eax$/;"	l
ffff8000001097d0	kernel.asm	/^ffff8000001097d0:	74 20                	je     ffff8000001097f2 <trap+0x37d>$/;"	l
ffff8000001097d2	kernel.asm	/^ffff8000001097d2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff8000001097d6	kernel.asm	/^ffff8000001097d6:	48 8b 80 90 00 00 00 	mov    0x90(%rax),%rax$/;"	l
ffff8000001097dd	kernel.asm	/^ffff8000001097dd:	83 e0 03             	and    $0x3,%eax$/;"	l
ffff8000001097e0	kernel.asm	/^ffff8000001097e0:	48 83 f8 03          	cmp    $0x3,%rax$/;"	l
ffff8000001097e4	kernel.asm	/^ffff8000001097e4:	75 0c                	jne    ffff8000001097f2 <trap+0x37d>$/;"	l
ffff8000001097e6	kernel.asm	/^ffff8000001097e6:	48 b8 ef 65 10 00 00 	movabs $0xffff8000001065ef,%rax$/;"	l
ffff8000001097ed	kernel.asm	/^ffff8000001097ed:	80 ff ff $/;"	l
ffff8000001097f0	kernel.asm	/^ffff8000001097f0:	ff d0                	callq  *%rax$/;"	l
ffff8000001097f2	kernel.asm	/^ffff8000001097f2:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff8000001097f9	kernel.asm	/^ffff8000001097f9:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff8000001097fd	kernel.asm	/^ffff8000001097fd:	48 85 c0             	test   %rax,%rax$/;"	l
ffff800000109800	kernel.asm	/^ffff800000109800:	74 2d                	je     ffff80000010982f <trap+0x3ba>$/;"	l
ffff800000109802	kernel.asm	/^ffff800000109802:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000109809	kernel.asm	/^ffff800000109809:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff80000010980d	kernel.asm	/^ffff80000010980d:	8b 40 18             	mov    0x18(%rax),%eax$/;"	l
ffff800000109810	kernel.asm	/^ffff800000109810:	83 f8 04             	cmp    $0x4,%eax$/;"	l
ffff800000109813	kernel.asm	/^ffff800000109813:	75 1a                	jne    ffff80000010982f <trap+0x3ba>$/;"	l
ffff800000109815	kernel.asm	/^ffff800000109815:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000109819	kernel.asm	/^ffff800000109819:	48 8b 40 78          	mov    0x78(%rax),%rax$/;"	l
ffff80000010981d	kernel.asm	/^ffff80000010981d:	48 83 f8 20          	cmp    $0x20,%rax$/;"	l
ffff800000109821	kernel.asm	/^ffff800000109821:	75 0c                	jne    ffff80000010982f <trap+0x3ba>$/;"	l
ffff800000109823	kernel.asm	/^ffff800000109823:	48 b8 73 6b 10 00 00 	movabs $0xffff800000106b73,%rax$/;"	l
ffff80000010982a	kernel.asm	/^ffff80000010982a:	80 ff ff $/;"	l
ffff80000010982d	kernel.asm	/^ffff80000010982d:	ff d0                	callq  *%rax$/;"	l
ffff80000010982f	kernel.asm	/^ffff80000010982f:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000109836	kernel.asm	/^ffff800000109836:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff80000010983a	kernel.asm	/^ffff80000010983a:	48 85 c0             	test   %rax,%rax$/;"	l
ffff80000010983d	kernel.asm	/^ffff80000010983d:	74 35                	je     ffff800000109874 <trap+0x3ff>$/;"	l
ffff80000010983f	kernel.asm	/^ffff80000010983f:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000109846	kernel.asm	/^ffff800000109846:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff80000010984a	kernel.asm	/^ffff80000010984a:	8b 40 40             	mov    0x40(%rax),%eax$/;"	l
ffff80000010984d	kernel.asm	/^ffff80000010984d:	85 c0                	test   %eax,%eax$/;"	l
ffff80000010984f	kernel.asm	/^ffff80000010984f:	74 23                	je     ffff800000109874 <trap+0x3ff>$/;"	l
ffff800000109851	kernel.asm	/^ffff800000109851:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000109855	kernel.asm	/^ffff800000109855:	48 8b 80 90 00 00 00 	mov    0x90(%rax),%rax$/;"	l
ffff80000010985c	kernel.asm	/^ffff80000010985c:	83 e0 03             	and    $0x3,%eax$/;"	l
ffff80000010985f	kernel.asm	/^ffff80000010985f:	48 83 f8 03          	cmp    $0x3,%rax$/;"	l
ffff800000109863	kernel.asm	/^ffff800000109863:	75 0f                	jne    ffff800000109874 <trap+0x3ff>$/;"	l
ffff800000109865	kernel.asm	/^ffff800000109865:	48 b8 ef 65 10 00 00 	movabs $0xffff8000001065ef,%rax$/;"	l
ffff80000010986c	kernel.asm	/^ffff80000010986c:	80 ff ff $/;"	l
ffff80000010986f	kernel.asm	/^ffff80000010986f:	ff d0                	callq  *%rax$/;"	l
ffff800000109871	kernel.asm	/^ffff800000109871:	eb 01                	jmp    ffff800000109874 <trap+0x3ff>$/;"	l
ffff800000109873	kernel.asm	/^ffff800000109873:	90                   	nop$/;"	l
ffff800000109874	kernel.asm	/^ffff800000109874:	48 8d 65 f0          	lea    -0x10(%rbp),%rsp$/;"	l
ffff800000109878	kernel.asm	/^ffff800000109878:	5b                   	pop    %rbx$/;"	l
ffff800000109879	kernel.asm	/^ffff800000109879:	41 5c                	pop    %r12$/;"	l
ffff80000010987b	kernel.asm	/^ffff80000010987b:	5d                   	pop    %rbp$/;"	l
ffff80000010987c	kernel.asm	/^ffff80000010987c:	c3                   	retq   $/;"	l
ffff80000010987d	kernel.asm	/^ffff80000010987d <inb>:$/;"	l
ffff80000010987d	kernel.asm	/^ffff80000010987d:	55                   	push   %rbp$/;"	l
ffff80000010987e	kernel.asm	/^ffff80000010987e:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000109881	kernel.asm	/^ffff800000109881:	48 83 ec 18          	sub    $0x18,%rsp$/;"	l
ffff800000109885	kernel.asm	/^ffff800000109885:	89 f8                	mov    %edi,%eax$/;"	l
ffff800000109887	kernel.asm	/^ffff800000109887:	66 89 45 ec          	mov    %ax,-0x14(%rbp)$/;"	l
ffff80000010988b	kernel.asm	/^ffff80000010988b:	0f b7 45 ec          	movzwl -0x14(%rbp),%eax$/;"	l
ffff80000010988f	kernel.asm	/^ffff80000010988f:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000109891	kernel.asm	/^ffff800000109891:	ec                   	in     (%dx),%al$/;"	l
ffff800000109892	kernel.asm	/^ffff800000109892:	88 45 ff             	mov    %al,-0x1(%rbp)$/;"	l
ffff800000109895	kernel.asm	/^ffff800000109895:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax$/;"	l
ffff800000109899	kernel.asm	/^ffff800000109899:	c9                   	leaveq $/;"	l
ffff80000010989a	kernel.asm	/^ffff80000010989a:	c3                   	retq   $/;"	l
ffff80000010989b	kernel.asm	/^ffff80000010989b <outb>:$/;"	l
ffff80000010989b	kernel.asm	/^ffff80000010989b:	55                   	push   %rbp$/;"	l
ffff80000010989c	kernel.asm	/^ffff80000010989c:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010989f	kernel.asm	/^ffff80000010989f:	48 83 ec 08          	sub    $0x8,%rsp$/;"	l
ffff8000001098a3	kernel.asm	/^ffff8000001098a3:	89 fa                	mov    %edi,%edx$/;"	l
ffff8000001098a5	kernel.asm	/^ffff8000001098a5:	89 f0                	mov    %esi,%eax$/;"	l
ffff8000001098a7	kernel.asm	/^ffff8000001098a7:	66 89 55 fc          	mov    %dx,-0x4(%rbp)$/;"	l
ffff8000001098ab	kernel.asm	/^ffff8000001098ab:	88 45 f8             	mov    %al,-0x8(%rbp)$/;"	l
ffff8000001098ae	kernel.asm	/^ffff8000001098ae:	0f b6 45 f8          	movzbl -0x8(%rbp),%eax$/;"	l
ffff8000001098b2	kernel.asm	/^ffff8000001098b2:	0f b7 55 fc          	movzwl -0x4(%rbp),%edx$/;"	l
ffff8000001098b6	kernel.asm	/^ffff8000001098b6:	ee                   	out    %al,(%dx)$/;"	l
ffff8000001098b7	kernel.asm	/^ffff8000001098b7:	90                   	nop$/;"	l
ffff8000001098b8	kernel.asm	/^ffff8000001098b8:	c9                   	leaveq $/;"	l
ffff8000001098b9	kernel.asm	/^ffff8000001098b9:	c3                   	retq   $/;"	l
ffff8000001098ba	kernel.asm	/^ffff8000001098ba <uartearlyinit>:$/;"	l
ffff8000001098ba	kernel.asm	/^ffff8000001098ba:	55                   	push   %rbp$/;"	l
ffff8000001098bb	kernel.asm	/^ffff8000001098bb:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff8000001098be	kernel.asm	/^ffff8000001098be:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff8000001098c2	kernel.asm	/^ffff8000001098c2:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffff8000001098c7	kernel.asm	/^ffff8000001098c7:	bf fa 03 00 00       	mov    $0x3fa,%edi$/;"	l
ffff8000001098cc	kernel.asm	/^ffff8000001098cc:	48 b8 9b 98 10 00 00 	movabs $0xffff80000010989b,%rax$/;"	l
ffff8000001098d3	kernel.asm	/^ffff8000001098d3:	80 ff ff $/;"	l
ffff8000001098d6	kernel.asm	/^ffff8000001098d6:	ff d0                	callq  *%rax$/;"	l
ffff8000001098d8	kernel.asm	/^ffff8000001098d8:	be 80 00 00 00       	mov    $0x80,%esi$/;"	l
ffff8000001098dd	kernel.asm	/^ffff8000001098dd:	bf fb 03 00 00       	mov    $0x3fb,%edi$/;"	l
ffff8000001098e2	kernel.asm	/^ffff8000001098e2:	48 b8 9b 98 10 00 00 	movabs $0xffff80000010989b,%rax$/;"	l
ffff8000001098e9	kernel.asm	/^ffff8000001098e9:	80 ff ff $/;"	l
ffff8000001098ec	kernel.asm	/^ffff8000001098ec:	ff d0                	callq  *%rax$/;"	l
ffff8000001098ee	kernel.asm	/^ffff8000001098ee:	be 0c 00 00 00       	mov    $0xc,%esi$/;"	l
ffff8000001098f3	kernel.asm	/^ffff8000001098f3:	bf f8 03 00 00       	mov    $0x3f8,%edi$/;"	l
ffff8000001098f8	kernel.asm	/^ffff8000001098f8:	48 b8 9b 98 10 00 00 	movabs $0xffff80000010989b,%rax$/;"	l
ffff8000001098ff	kernel.asm	/^ffff8000001098ff:	80 ff ff $/;"	l
ffff800000109902	kernel.asm	/^ffff800000109902:	ff d0                	callq  *%rax$/;"	l
ffff800000109904	kernel.asm	/^ffff800000109904:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffff800000109909	kernel.asm	/^ffff800000109909:	bf f9 03 00 00       	mov    $0x3f9,%edi$/;"	l
ffff80000010990e	kernel.asm	/^ffff80000010990e:	48 b8 9b 98 10 00 00 	movabs $0xffff80000010989b,%rax$/;"	l
ffff800000109915	kernel.asm	/^ffff800000109915:	80 ff ff $/;"	l
ffff800000109918	kernel.asm	/^ffff800000109918:	ff d0                	callq  *%rax$/;"	l
ffff80000010991a	kernel.asm	/^ffff80000010991a:	be 03 00 00 00       	mov    $0x3,%esi$/;"	l
ffff80000010991f	kernel.asm	/^ffff80000010991f:	bf fb 03 00 00       	mov    $0x3fb,%edi$/;"	l
ffff800000109924	kernel.asm	/^ffff800000109924:	48 b8 9b 98 10 00 00 	movabs $0xffff80000010989b,%rax$/;"	l
ffff80000010992b	kernel.asm	/^ffff80000010992b:	80 ff ff $/;"	l
ffff80000010992e	kernel.asm	/^ffff80000010992e:	ff d0                	callq  *%rax$/;"	l
ffff800000109930	kernel.asm	/^ffff800000109930:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffff800000109935	kernel.asm	/^ffff800000109935:	bf fc 03 00 00       	mov    $0x3fc,%edi$/;"	l
ffff80000010993a	kernel.asm	/^ffff80000010993a:	48 b8 9b 98 10 00 00 	movabs $0xffff80000010989b,%rax$/;"	l
ffff800000109941	kernel.asm	/^ffff800000109941:	80 ff ff $/;"	l
ffff800000109944	kernel.asm	/^ffff800000109944:	ff d0                	callq  *%rax$/;"	l
ffff800000109946	kernel.asm	/^ffff800000109946:	be 01 00 00 00       	mov    $0x1,%esi$/;"	l
ffff80000010994b	kernel.asm	/^ffff80000010994b:	bf f9 03 00 00       	mov    $0x3f9,%edi$/;"	l
ffff800000109950	kernel.asm	/^ffff800000109950:	48 b8 9b 98 10 00 00 	movabs $0xffff80000010989b,%rax$/;"	l
ffff800000109957	kernel.asm	/^ffff800000109957:	80 ff ff $/;"	l
ffff80000010995a	kernel.asm	/^ffff80000010995a:	ff d0                	callq  *%rax$/;"	l
ffff80000010995c	kernel.asm	/^ffff80000010995c:	bf fd 03 00 00       	mov    $0x3fd,%edi$/;"	l
ffff800000109961	kernel.asm	/^ffff800000109961:	48 b8 7d 98 10 00 00 	movabs $0xffff80000010987d,%rax$/;"	l
ffff800000109968	kernel.asm	/^ffff800000109968:	80 ff ff $/;"	l
ffff80000010996b	kernel.asm	/^ffff80000010996b:	ff d0                	callq  *%rax$/;"	l
ffff80000010996d	kernel.asm	/^ffff80000010996d:	3c ff                	cmp    $0xff,%al$/;"	l
ffff80000010996f	kernel.asm	/^ffff80000010996f:	74 4a                	je     ffff8000001099bb <uartearlyinit+0x101>$/;"	l
ffff800000109971	kernel.asm	/^ffff800000109971:	48 b8 cc b3 11 00 00 	movabs $0xffff80000011b3cc,%rax$/;"	l
ffff800000109978	kernel.asm	/^ffff800000109978:	80 ff ff $/;"	l
ffff80000010997b	kernel.asm	/^ffff80000010997b:	c7 00 01 00 00 00    	movl   $0x1,(%rax)$/;"	l
ffff800000109981	kernel.asm	/^ffff800000109981:	48 b8 08 c1 10 00 00 	movabs $0xffff80000010c108,%rax$/;"	l
ffff800000109988	kernel.asm	/^ffff800000109988:	80 ff ff $/;"	l
ffff80000010998b	kernel.asm	/^ffff80000010998b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff80000010998f	kernel.asm	/^ffff80000010998f:	eb 1d                	jmp    ffff8000001099ae <uartearlyinit+0xf4>$/;"	l
ffff800000109991	kernel.asm	/^ffff800000109991:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000109995	kernel.asm	/^ffff800000109995:	0f b6 00             	movzbl (%rax),%eax$/;"	l
ffff800000109998	kernel.asm	/^ffff800000109998:	0f be c0             	movsbl %al,%eax$/;"	l
ffff80000010999b	kernel.asm	/^ffff80000010999b:	89 c7                	mov    %eax,%edi$/;"	l
ffff80000010999d	kernel.asm	/^ffff80000010999d:	48 b8 0f 9a 10 00 00 	movabs $0xffff800000109a0f,%rax$/;"	l
ffff8000001099a4	kernel.asm	/^ffff8000001099a4:	80 ff ff $/;"	l
ffff8000001099a7	kernel.asm	/^ffff8000001099a7:	ff d0                	callq  *%rax$/;"	l
ffff8000001099a9	kernel.asm	/^ffff8000001099a9:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)$/;"	l
ffff8000001099ae	kernel.asm	/^ffff8000001099ae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001099b2	kernel.asm	/^ffff8000001099b2:	0f b6 00             	movzbl (%rax),%eax$/;"	l
ffff8000001099b5	kernel.asm	/^ffff8000001099b5:	84 c0                	test   %al,%al$/;"	l
ffff8000001099b7	kernel.asm	/^ffff8000001099b7:	75 d8                	jne    ffff800000109991 <uartearlyinit+0xd7>$/;"	l
ffff8000001099b9	kernel.asm	/^ffff8000001099b9:	eb 01                	jmp    ffff8000001099bc <uartearlyinit+0x102>$/;"	l
ffff8000001099bb	kernel.asm	/^ffff8000001099bb:	90                   	nop$/;"	l
ffff8000001099bc	kernel.asm	/^ffff8000001099bc:	c9                   	leaveq $/;"	l
ffff8000001099bd	kernel.asm	/^ffff8000001099bd:	c3                   	retq   $/;"	l
ffff8000001099be	kernel.asm	/^ffff8000001099be <uartinit>:$/;"	l
ffff8000001099be	kernel.asm	/^ffff8000001099be:	55                   	push   %rbp$/;"	l
ffff8000001099bf	kernel.asm	/^ffff8000001099bf:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff8000001099c2	kernel.asm	/^ffff8000001099c2:	48 b8 cc b3 11 00 00 	movabs $0xffff80000011b3cc,%rax$/;"	l
ffff8000001099c9	kernel.asm	/^ffff8000001099c9:	80 ff ff $/;"	l
ffff8000001099cc	kernel.asm	/^ffff8000001099cc:	8b 00                	mov    (%rax),%eax$/;"	l
ffff8000001099ce	kernel.asm	/^ffff8000001099ce:	85 c0                	test   %eax,%eax$/;"	l
ffff8000001099d0	kernel.asm	/^ffff8000001099d0:	74 3a                	je     ffff800000109a0c <uartinit+0x4e>$/;"	l
ffff8000001099d2	kernel.asm	/^ffff8000001099d2:	bf fa 03 00 00       	mov    $0x3fa,%edi$/;"	l
ffff8000001099d7	kernel.asm	/^ffff8000001099d7:	48 b8 7d 98 10 00 00 	movabs $0xffff80000010987d,%rax$/;"	l
ffff8000001099de	kernel.asm	/^ffff8000001099de:	80 ff ff $/;"	l
ffff8000001099e1	kernel.asm	/^ffff8000001099e1:	ff d0                	callq  *%rax$/;"	l
ffff8000001099e3	kernel.asm	/^ffff8000001099e3:	bf f8 03 00 00       	mov    $0x3f8,%edi$/;"	l
ffff8000001099e8	kernel.asm	/^ffff8000001099e8:	48 b8 7d 98 10 00 00 	movabs $0xffff80000010987d,%rax$/;"	l
ffff8000001099ef	kernel.asm	/^ffff8000001099ef:	80 ff ff $/;"	l
ffff8000001099f2	kernel.asm	/^ffff8000001099f2:	ff d0                	callq  *%rax$/;"	l
ffff8000001099f4	kernel.asm	/^ffff8000001099f4:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffff8000001099f9	kernel.asm	/^ffff8000001099f9:	bf 04 00 00 00       	mov    $0x4,%edi$/;"	l
ffff8000001099fe	kernel.asm	/^ffff8000001099fe:	48 b8 65 3e 10 00 00 	movabs $0xffff800000103e65,%rax$/;"	l
ffff800000109a05	kernel.asm	/^ffff800000109a05:	80 ff ff $/;"	l
ffff800000109a08	kernel.asm	/^ffff800000109a08:	ff d0                	callq  *%rax$/;"	l
ffff800000109a0a	kernel.asm	/^ffff800000109a0a:	eb 01                	jmp    ffff800000109a0d <uartinit+0x4f>$/;"	l
ffff800000109a0c	kernel.asm	/^ffff800000109a0c:	90                   	nop$/;"	l
ffff800000109a0d	kernel.asm	/^ffff800000109a0d:	5d                   	pop    %rbp$/;"	l
ffff800000109a0e	kernel.asm	/^ffff800000109a0e:	c3                   	retq   $/;"	l
ffff800000109a0f	kernel.asm	/^ffff800000109a0f <uartputc>:$/;"	l
ffff800000109a0f	kernel.asm	/^ffff800000109a0f:	55                   	push   %rbp$/;"	l
ffff800000109a10	kernel.asm	/^ffff800000109a10:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000109a13	kernel.asm	/^ffff800000109a13:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ffff800000109a17	kernel.asm	/^ffff800000109a17:	89 7d ec             	mov    %edi,-0x14(%rbp)$/;"	l
ffff800000109a1a	kernel.asm	/^ffff800000109a1a:	48 b8 cc b3 11 00 00 	movabs $0xffff80000011b3cc,%rax$/;"	l
ffff800000109a21	kernel.asm	/^ffff800000109a21:	80 ff ff $/;"	l
ffff800000109a24	kernel.asm	/^ffff800000109a24:	8b 00                	mov    (%rax),%eax$/;"	l
ffff800000109a26	kernel.asm	/^ffff800000109a26:	85 c0                	test   %eax,%eax$/;"	l
ffff800000109a28	kernel.asm	/^ffff800000109a28:	74 5a                	je     ffff800000109a84 <uartputc+0x75>$/;"	l
ffff800000109a2a	kernel.asm	/^ffff800000109a2a:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)$/;"	l
ffff800000109a31	kernel.asm	/^ffff800000109a31:	eb 15                	jmp    ffff800000109a48 <uartputc+0x39>$/;"	l
ffff800000109a33	kernel.asm	/^ffff800000109a33:	bf 0a 00 00 00       	mov    $0xa,%edi$/;"	l
ffff800000109a38	kernel.asm	/^ffff800000109a38:	48 b8 a2 46 10 00 00 	movabs $0xffff8000001046a2,%rax$/;"	l
ffff800000109a3f	kernel.asm	/^ffff800000109a3f:	80 ff ff $/;"	l
ffff800000109a42	kernel.asm	/^ffff800000109a42:	ff d0                	callq  *%rax$/;"	l
ffff800000109a44	kernel.asm	/^ffff800000109a44:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)$/;"	l
ffff800000109a48	kernel.asm	/^ffff800000109a48:	83 7d fc 7f          	cmpl   $0x7f,-0x4(%rbp)$/;"	l
ffff800000109a4c	kernel.asm	/^ffff800000109a4c:	7f 1b                	jg     ffff800000109a69 <uartputc+0x5a>$/;"	l
ffff800000109a4e	kernel.asm	/^ffff800000109a4e:	bf fd 03 00 00       	mov    $0x3fd,%edi$/;"	l
ffff800000109a53	kernel.asm	/^ffff800000109a53:	48 b8 7d 98 10 00 00 	movabs $0xffff80000010987d,%rax$/;"	l
ffff800000109a5a	kernel.asm	/^ffff800000109a5a:	80 ff ff $/;"	l
ffff800000109a5d	kernel.asm	/^ffff800000109a5d:	ff d0                	callq  *%rax$/;"	l
ffff800000109a5f	kernel.asm	/^ffff800000109a5f:	0f b6 c0             	movzbl %al,%eax$/;"	l
ffff800000109a62	kernel.asm	/^ffff800000109a62:	83 e0 20             	and    $0x20,%eax$/;"	l
ffff800000109a65	kernel.asm	/^ffff800000109a65:	85 c0                	test   %eax,%eax$/;"	l
ffff800000109a67	kernel.asm	/^ffff800000109a67:	74 ca                	je     ffff800000109a33 <uartputc+0x24>$/;"	l
ffff800000109a69	kernel.asm	/^ffff800000109a69:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
ffff800000109a6c	kernel.asm	/^ffff800000109a6c:	0f b6 c0             	movzbl %al,%eax$/;"	l
ffff800000109a6f	kernel.asm	/^ffff800000109a6f:	89 c6                	mov    %eax,%esi$/;"	l
ffff800000109a71	kernel.asm	/^ffff800000109a71:	bf f8 03 00 00       	mov    $0x3f8,%edi$/;"	l
ffff800000109a76	kernel.asm	/^ffff800000109a76:	48 b8 9b 98 10 00 00 	movabs $0xffff80000010989b,%rax$/;"	l
ffff800000109a7d	kernel.asm	/^ffff800000109a7d:	80 ff ff $/;"	l
ffff800000109a80	kernel.asm	/^ffff800000109a80:	ff d0                	callq  *%rax$/;"	l
ffff800000109a82	kernel.asm	/^ffff800000109a82:	eb 01                	jmp    ffff800000109a85 <uartputc+0x76>$/;"	l
ffff800000109a84	kernel.asm	/^ffff800000109a84:	90                   	nop$/;"	l
ffff800000109a85	kernel.asm	/^ffff800000109a85:	c9                   	leaveq $/;"	l
ffff800000109a86	kernel.asm	/^ffff800000109a86:	c3                   	retq   $/;"	l
ffff800000109a87	kernel.asm	/^ffff800000109a87 <uartgetc>:$/;"	l
ffff800000109a87	kernel.asm	/^ffff800000109a87:	55                   	push   %rbp$/;"	l
ffff800000109a88	kernel.asm	/^ffff800000109a88:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000109a8b	kernel.asm	/^ffff800000109a8b:	48 b8 cc b3 11 00 00 	movabs $0xffff80000011b3cc,%rax$/;"	l
ffff800000109a92	kernel.asm	/^ffff800000109a92:	80 ff ff $/;"	l
ffff800000109a95	kernel.asm	/^ffff800000109a95:	8b 00                	mov    (%rax),%eax$/;"	l
ffff800000109a97	kernel.asm	/^ffff800000109a97:	85 c0                	test   %eax,%eax$/;"	l
ffff800000109a99	kernel.asm	/^ffff800000109a99:	75 07                	jne    ffff800000109aa2 <uartgetc+0x1b>$/;"	l
ffff800000109a9b	kernel.asm	/^ffff800000109a9b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff800000109aa0	kernel.asm	/^ffff800000109aa0:	eb 36                	jmp    ffff800000109ad8 <uartgetc+0x51>$/;"	l
ffff800000109aa2	kernel.asm	/^ffff800000109aa2:	bf fd 03 00 00       	mov    $0x3fd,%edi$/;"	l
ffff800000109aa7	kernel.asm	/^ffff800000109aa7:	48 b8 7d 98 10 00 00 	movabs $0xffff80000010987d,%rax$/;"	l
ffff800000109aae	kernel.asm	/^ffff800000109aae:	80 ff ff $/;"	l
ffff800000109ab1	kernel.asm	/^ffff800000109ab1:	ff d0                	callq  *%rax$/;"	l
ffff800000109ab3	kernel.asm	/^ffff800000109ab3:	0f b6 c0             	movzbl %al,%eax$/;"	l
ffff800000109ab6	kernel.asm	/^ffff800000109ab6:	83 e0 01             	and    $0x1,%eax$/;"	l
ffff800000109ab9	kernel.asm	/^ffff800000109ab9:	85 c0                	test   %eax,%eax$/;"	l
ffff800000109abb	kernel.asm	/^ffff800000109abb:	75 07                	jne    ffff800000109ac4 <uartgetc+0x3d>$/;"	l
ffff800000109abd	kernel.asm	/^ffff800000109abd:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff800000109ac2	kernel.asm	/^ffff800000109ac2:	eb 14                	jmp    ffff800000109ad8 <uartgetc+0x51>$/;"	l
ffff800000109ac4	kernel.asm	/^ffff800000109ac4:	bf f8 03 00 00       	mov    $0x3f8,%edi$/;"	l
ffff800000109ac9	kernel.asm	/^ffff800000109ac9:	48 b8 7d 98 10 00 00 	movabs $0xffff80000010987d,%rax$/;"	l
ffff800000109ad0	kernel.asm	/^ffff800000109ad0:	80 ff ff $/;"	l
ffff800000109ad3	kernel.asm	/^ffff800000109ad3:	ff d0                	callq  *%rax$/;"	l
ffff800000109ad5	kernel.asm	/^ffff800000109ad5:	0f b6 c0             	movzbl %al,%eax$/;"	l
ffff800000109ad8	kernel.asm	/^ffff800000109ad8:	5d                   	pop    %rbp$/;"	l
ffff800000109ad9	kernel.asm	/^ffff800000109ad9:	c3                   	retq   $/;"	l
ffff800000109ada	kernel.asm	/^ffff800000109ada <uartintr>:$/;"	l
ffff800000109ada	kernel.asm	/^ffff800000109ada:	55                   	push   %rbp$/;"	l
ffff800000109adb	kernel.asm	/^ffff800000109adb:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000109ade	kernel.asm	/^ffff800000109ade:	48 bf 87 9a 10 00 00 	movabs $0xffff800000109a87,%rdi$/;"	l
ffff800000109ae5	kernel.asm	/^ffff800000109ae5:	80 ff ff $/;"	l
ffff800000109ae8	kernel.asm	/^ffff800000109ae8:	48 b8 c7 0e 10 00 00 	movabs $0xffff800000100ec7,%rax$/;"	l
ffff800000109aef	kernel.asm	/^ffff800000109aef:	80 ff ff $/;"	l
ffff800000109af2	kernel.asm	/^ffff800000109af2:	ff d0                	callq  *%rax$/;"	l
ffff800000109af4	kernel.asm	/^ffff800000109af4:	90                   	nop$/;"	l
ffff800000109af5	kernel.asm	/^ffff800000109af5:	5d                   	pop    %rbp$/;"	l
ffff800000109af6	kernel.asm	/^ffff800000109af6:	c3                   	retq   $/;"	l
ffff800000109af7	kernel.asm	/^ffff800000109af7 <vector0>:$/;"	l
ffff800000109af7	kernel.asm	/^ffff800000109af7:	6a 00                	pushq  $0x0$/;"	l
ffff800000109af9	kernel.asm	/^ffff800000109af9:	6a 00                	pushq  $0x0$/;"	l
ffff800000109afb	kernel.asm	/^ffff800000109afb:	e9 99 f6 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff800000109b00	kernel.asm	/^ffff800000109b00 <vector1>:$/;"	l
ffff800000109b00	kernel.asm	/^ffff800000109b00:	6a 00                	pushq  $0x0$/;"	l
ffff800000109b02	kernel.asm	/^ffff800000109b02:	6a 01                	pushq  $0x1$/;"	l
ffff800000109b04	kernel.asm	/^ffff800000109b04:	e9 90 f6 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff800000109b09	kernel.asm	/^ffff800000109b09 <vector2>:$/;"	l
ffff800000109b09	kernel.asm	/^ffff800000109b09:	6a 00                	pushq  $0x0$/;"	l
ffff800000109b0b	kernel.asm	/^ffff800000109b0b:	6a 02                	pushq  $0x2$/;"	l
ffff800000109b0d	kernel.asm	/^ffff800000109b0d:	e9 87 f6 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff800000109b12	kernel.asm	/^ffff800000109b12 <vector3>:$/;"	l
ffff800000109b12	kernel.asm	/^ffff800000109b12:	6a 00                	pushq  $0x0$/;"	l
ffff800000109b14	kernel.asm	/^ffff800000109b14:	6a 03                	pushq  $0x3$/;"	l
ffff800000109b16	kernel.asm	/^ffff800000109b16:	e9 7e f6 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff800000109b1b	kernel.asm	/^ffff800000109b1b <vector4>:$/;"	l
ffff800000109b1b	kernel.asm	/^ffff800000109b1b:	6a 00                	pushq  $0x0$/;"	l
ffff800000109b1d	kernel.asm	/^ffff800000109b1d:	6a 04                	pushq  $0x4$/;"	l
ffff800000109b1f	kernel.asm	/^ffff800000109b1f:	e9 75 f6 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff800000109b24	kernel.asm	/^ffff800000109b24 <vector5>:$/;"	l
ffff800000109b24	kernel.asm	/^ffff800000109b24:	6a 00                	pushq  $0x0$/;"	l
ffff800000109b26	kernel.asm	/^ffff800000109b26:	6a 05                	pushq  $0x5$/;"	l
ffff800000109b28	kernel.asm	/^ffff800000109b28:	e9 6c f6 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff800000109b2d	kernel.asm	/^ffff800000109b2d <vector6>:$/;"	l
ffff800000109b2d	kernel.asm	/^ffff800000109b2d:	6a 00                	pushq  $0x0$/;"	l
ffff800000109b2f	kernel.asm	/^ffff800000109b2f:	6a 06                	pushq  $0x6$/;"	l
ffff800000109b31	kernel.asm	/^ffff800000109b31:	e9 63 f6 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff800000109b36	kernel.asm	/^ffff800000109b36 <vector7>:$/;"	l
ffff800000109b36	kernel.asm	/^ffff800000109b36:	6a 00                	pushq  $0x0$/;"	l
ffff800000109b38	kernel.asm	/^ffff800000109b38:	6a 07                	pushq  $0x7$/;"	l
ffff800000109b3a	kernel.asm	/^ffff800000109b3a:	e9 5a f6 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff800000109b3f	kernel.asm	/^ffff800000109b3f <vector8>:$/;"	l
ffff800000109b3f	kernel.asm	/^ffff800000109b3f:	6a 08                	pushq  $0x8$/;"	l
ffff800000109b41	kernel.asm	/^ffff800000109b41:	e9 53 f6 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff800000109b46	kernel.asm	/^ffff800000109b46 <vector9>:$/;"	l
ffff800000109b46	kernel.asm	/^ffff800000109b46:	6a 00                	pushq  $0x0$/;"	l
ffff800000109b48	kernel.asm	/^ffff800000109b48:	6a 09                	pushq  $0x9$/;"	l
ffff800000109b4a	kernel.asm	/^ffff800000109b4a:	e9 4a f6 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff800000109b4f	kernel.asm	/^ffff800000109b4f <vector10>:$/;"	l
ffff800000109b4f	kernel.asm	/^ffff800000109b4f:	6a 0a                	pushq  $0xa$/;"	l
ffff800000109b51	kernel.asm	/^ffff800000109b51:	e9 43 f6 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff800000109b56	kernel.asm	/^ffff800000109b56 <vector11>:$/;"	l
ffff800000109b56	kernel.asm	/^ffff800000109b56:	6a 0b                	pushq  $0xb$/;"	l
ffff800000109b58	kernel.asm	/^ffff800000109b58:	e9 3c f6 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff800000109b5d	kernel.asm	/^ffff800000109b5d <vector12>:$/;"	l
ffff800000109b5d	kernel.asm	/^ffff800000109b5d:	6a 0c                	pushq  $0xc$/;"	l
ffff800000109b5f	kernel.asm	/^ffff800000109b5f:	e9 35 f6 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff800000109b64	kernel.asm	/^ffff800000109b64 <vector13>:$/;"	l
ffff800000109b64	kernel.asm	/^ffff800000109b64:	6a 0d                	pushq  $0xd$/;"	l
ffff800000109b66	kernel.asm	/^ffff800000109b66:	e9 2e f6 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff800000109b6b	kernel.asm	/^ffff800000109b6b <vector14>:$/;"	l
ffff800000109b6b	kernel.asm	/^ffff800000109b6b:	6a 0e                	pushq  $0xe$/;"	l
ffff800000109b6d	kernel.asm	/^ffff800000109b6d:	e9 27 f6 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff800000109b72	kernel.asm	/^ffff800000109b72 <vector15>:$/;"	l
ffff800000109b72	kernel.asm	/^ffff800000109b72:	6a 00                	pushq  $0x0$/;"	l
ffff800000109b74	kernel.asm	/^ffff800000109b74:	6a 0f                	pushq  $0xf$/;"	l
ffff800000109b76	kernel.asm	/^ffff800000109b76:	e9 1e f6 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff800000109b7b	kernel.asm	/^ffff800000109b7b <vector16>:$/;"	l
ffff800000109b7b	kernel.asm	/^ffff800000109b7b:	6a 00                	pushq  $0x0$/;"	l
ffff800000109b7d	kernel.asm	/^ffff800000109b7d:	6a 10                	pushq  $0x10$/;"	l
ffff800000109b7f	kernel.asm	/^ffff800000109b7f:	e9 15 f6 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff800000109b84	kernel.asm	/^ffff800000109b84 <vector17>:$/;"	l
ffff800000109b84	kernel.asm	/^ffff800000109b84:	6a 11                	pushq  $0x11$/;"	l
ffff800000109b86	kernel.asm	/^ffff800000109b86:	e9 0e f6 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff800000109b8b	kernel.asm	/^ffff800000109b8b <vector18>:$/;"	l
ffff800000109b8b	kernel.asm	/^ffff800000109b8b:	6a 00                	pushq  $0x0$/;"	l
ffff800000109b8d	kernel.asm	/^ffff800000109b8d:	6a 12                	pushq  $0x12$/;"	l
ffff800000109b8f	kernel.asm	/^ffff800000109b8f:	e9 05 f6 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff800000109b94	kernel.asm	/^ffff800000109b94 <vector19>:$/;"	l
ffff800000109b94	kernel.asm	/^ffff800000109b94:	6a 00                	pushq  $0x0$/;"	l
ffff800000109b96	kernel.asm	/^ffff800000109b96:	6a 13                	pushq  $0x13$/;"	l
ffff800000109b98	kernel.asm	/^ffff800000109b98:	e9 fc f5 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff800000109b9d	kernel.asm	/^ffff800000109b9d <vector20>:$/;"	l
ffff800000109b9d	kernel.asm	/^ffff800000109b9d:	6a 00                	pushq  $0x0$/;"	l
ffff800000109b9f	kernel.asm	/^ffff800000109b9f:	6a 14                	pushq  $0x14$/;"	l
ffff800000109ba1	kernel.asm	/^ffff800000109ba1:	e9 f3 f5 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff800000109ba6	kernel.asm	/^ffff800000109ba6 <vector21>:$/;"	l
ffff800000109ba6	kernel.asm	/^ffff800000109ba6:	6a 00                	pushq  $0x0$/;"	l
ffff800000109ba8	kernel.asm	/^ffff800000109ba8:	6a 15                	pushq  $0x15$/;"	l
ffff800000109baa	kernel.asm	/^ffff800000109baa:	e9 ea f5 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff800000109baf	kernel.asm	/^ffff800000109baf <vector22>:$/;"	l
ffff800000109baf	kernel.asm	/^ffff800000109baf:	6a 00                	pushq  $0x0$/;"	l
ffff800000109bb1	kernel.asm	/^ffff800000109bb1:	6a 16                	pushq  $0x16$/;"	l
ffff800000109bb3	kernel.asm	/^ffff800000109bb3:	e9 e1 f5 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff800000109bb8	kernel.asm	/^ffff800000109bb8 <vector23>:$/;"	l
ffff800000109bb8	kernel.asm	/^ffff800000109bb8:	6a 00                	pushq  $0x0$/;"	l
ffff800000109bba	kernel.asm	/^ffff800000109bba:	6a 17                	pushq  $0x17$/;"	l
ffff800000109bbc	kernel.asm	/^ffff800000109bbc:	e9 d8 f5 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff800000109bc1	kernel.asm	/^ffff800000109bc1 <vector24>:$/;"	l
ffff800000109bc1	kernel.asm	/^ffff800000109bc1:	6a 00                	pushq  $0x0$/;"	l
ffff800000109bc3	kernel.asm	/^ffff800000109bc3:	6a 18                	pushq  $0x18$/;"	l
ffff800000109bc5	kernel.asm	/^ffff800000109bc5:	e9 cf f5 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff800000109bca	kernel.asm	/^ffff800000109bca <vector25>:$/;"	l
ffff800000109bca	kernel.asm	/^ffff800000109bca:	6a 00                	pushq  $0x0$/;"	l
ffff800000109bcc	kernel.asm	/^ffff800000109bcc:	6a 19                	pushq  $0x19$/;"	l
ffff800000109bce	kernel.asm	/^ffff800000109bce:	e9 c6 f5 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff800000109bd3	kernel.asm	/^ffff800000109bd3 <vector26>:$/;"	l
ffff800000109bd3	kernel.asm	/^ffff800000109bd3:	6a 00                	pushq  $0x0$/;"	l
ffff800000109bd5	kernel.asm	/^ffff800000109bd5:	6a 1a                	pushq  $0x1a$/;"	l
ffff800000109bd7	kernel.asm	/^ffff800000109bd7:	e9 bd f5 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff800000109bdc	kernel.asm	/^ffff800000109bdc <vector27>:$/;"	l
ffff800000109bdc	kernel.asm	/^ffff800000109bdc:	6a 00                	pushq  $0x0$/;"	l
ffff800000109bde	kernel.asm	/^ffff800000109bde:	6a 1b                	pushq  $0x1b$/;"	l
ffff800000109be0	kernel.asm	/^ffff800000109be0:	e9 b4 f5 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff800000109be5	kernel.asm	/^ffff800000109be5 <vector28>:$/;"	l
ffff800000109be5	kernel.asm	/^ffff800000109be5:	6a 00                	pushq  $0x0$/;"	l
ffff800000109be7	kernel.asm	/^ffff800000109be7:	6a 1c                	pushq  $0x1c$/;"	l
ffff800000109be9	kernel.asm	/^ffff800000109be9:	e9 ab f5 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff800000109bee	kernel.asm	/^ffff800000109bee <vector29>:$/;"	l
ffff800000109bee	kernel.asm	/^ffff800000109bee:	6a 00                	pushq  $0x0$/;"	l
ffff800000109bf0	kernel.asm	/^ffff800000109bf0:	6a 1d                	pushq  $0x1d$/;"	l
ffff800000109bf2	kernel.asm	/^ffff800000109bf2:	e9 a2 f5 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff800000109bf7	kernel.asm	/^ffff800000109bf7 <vector30>:$/;"	l
ffff800000109bf7	kernel.asm	/^ffff800000109bf7:	6a 00                	pushq  $0x0$/;"	l
ffff800000109bf9	kernel.asm	/^ffff800000109bf9:	6a 1e                	pushq  $0x1e$/;"	l
ffff800000109bfb	kernel.asm	/^ffff800000109bfb:	e9 99 f5 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff800000109c00	kernel.asm	/^ffff800000109c00 <vector31>:$/;"	l
ffff800000109c00	kernel.asm	/^ffff800000109c00:	6a 00                	pushq  $0x0$/;"	l
ffff800000109c02	kernel.asm	/^ffff800000109c02:	6a 1f                	pushq  $0x1f$/;"	l
ffff800000109c04	kernel.asm	/^ffff800000109c04:	e9 90 f5 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff800000109c09	kernel.asm	/^ffff800000109c09 <vector32>:$/;"	l
ffff800000109c09	kernel.asm	/^ffff800000109c09:	6a 00                	pushq  $0x0$/;"	l
ffff800000109c0b	kernel.asm	/^ffff800000109c0b:	6a 20                	pushq  $0x20$/;"	l
ffff800000109c0d	kernel.asm	/^ffff800000109c0d:	e9 87 f5 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff800000109c12	kernel.asm	/^ffff800000109c12 <vector33>:$/;"	l
ffff800000109c12	kernel.asm	/^ffff800000109c12:	6a 00                	pushq  $0x0$/;"	l
ffff800000109c14	kernel.asm	/^ffff800000109c14:	6a 21                	pushq  $0x21$/;"	l
ffff800000109c16	kernel.asm	/^ffff800000109c16:	e9 7e f5 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff800000109c1b	kernel.asm	/^ffff800000109c1b <vector34>:$/;"	l
ffff800000109c1b	kernel.asm	/^ffff800000109c1b:	6a 00                	pushq  $0x0$/;"	l
ffff800000109c1d	kernel.asm	/^ffff800000109c1d:	6a 22                	pushq  $0x22$/;"	l
ffff800000109c1f	kernel.asm	/^ffff800000109c1f:	e9 75 f5 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff800000109c24	kernel.asm	/^ffff800000109c24 <vector35>:$/;"	l
ffff800000109c24	kernel.asm	/^ffff800000109c24:	6a 00                	pushq  $0x0$/;"	l
ffff800000109c26	kernel.asm	/^ffff800000109c26:	6a 23                	pushq  $0x23$/;"	l
ffff800000109c28	kernel.asm	/^ffff800000109c28:	e9 6c f5 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff800000109c2d	kernel.asm	/^ffff800000109c2d <vector36>:$/;"	l
ffff800000109c2d	kernel.asm	/^ffff800000109c2d:	6a 00                	pushq  $0x0$/;"	l
ffff800000109c2f	kernel.asm	/^ffff800000109c2f:	6a 24                	pushq  $0x24$/;"	l
ffff800000109c31	kernel.asm	/^ffff800000109c31:	e9 63 f5 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff800000109c36	kernel.asm	/^ffff800000109c36 <vector37>:$/;"	l
ffff800000109c36	kernel.asm	/^ffff800000109c36:	6a 00                	pushq  $0x0$/;"	l
ffff800000109c38	kernel.asm	/^ffff800000109c38:	6a 25                	pushq  $0x25$/;"	l
ffff800000109c3a	kernel.asm	/^ffff800000109c3a:	e9 5a f5 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff800000109c3f	kernel.asm	/^ffff800000109c3f <vector38>:$/;"	l
ffff800000109c3f	kernel.asm	/^ffff800000109c3f:	6a 00                	pushq  $0x0$/;"	l
ffff800000109c41	kernel.asm	/^ffff800000109c41:	6a 26                	pushq  $0x26$/;"	l
ffff800000109c43	kernel.asm	/^ffff800000109c43:	e9 51 f5 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff800000109c48	kernel.asm	/^ffff800000109c48 <vector39>:$/;"	l
ffff800000109c48	kernel.asm	/^ffff800000109c48:	6a 00                	pushq  $0x0$/;"	l
ffff800000109c4a	kernel.asm	/^ffff800000109c4a:	6a 27                	pushq  $0x27$/;"	l
ffff800000109c4c	kernel.asm	/^ffff800000109c4c:	e9 48 f5 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff800000109c51	kernel.asm	/^ffff800000109c51 <vector40>:$/;"	l
ffff800000109c51	kernel.asm	/^ffff800000109c51:	6a 00                	pushq  $0x0$/;"	l
ffff800000109c53	kernel.asm	/^ffff800000109c53:	6a 28                	pushq  $0x28$/;"	l
ffff800000109c55	kernel.asm	/^ffff800000109c55:	e9 3f f5 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff800000109c5a	kernel.asm	/^ffff800000109c5a <vector41>:$/;"	l
ffff800000109c5a	kernel.asm	/^ffff800000109c5a:	6a 00                	pushq  $0x0$/;"	l
ffff800000109c5c	kernel.asm	/^ffff800000109c5c:	6a 29                	pushq  $0x29$/;"	l
ffff800000109c5e	kernel.asm	/^ffff800000109c5e:	e9 36 f5 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff800000109c63	kernel.asm	/^ffff800000109c63 <vector42>:$/;"	l
ffff800000109c63	kernel.asm	/^ffff800000109c63:	6a 00                	pushq  $0x0$/;"	l
ffff800000109c65	kernel.asm	/^ffff800000109c65:	6a 2a                	pushq  $0x2a$/;"	l
ffff800000109c67	kernel.asm	/^ffff800000109c67:	e9 2d f5 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff800000109c6c	kernel.asm	/^ffff800000109c6c <vector43>:$/;"	l
ffff800000109c6c	kernel.asm	/^ffff800000109c6c:	6a 00                	pushq  $0x0$/;"	l
ffff800000109c6e	kernel.asm	/^ffff800000109c6e:	6a 2b                	pushq  $0x2b$/;"	l
ffff800000109c70	kernel.asm	/^ffff800000109c70:	e9 24 f5 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff800000109c75	kernel.asm	/^ffff800000109c75 <vector44>:$/;"	l
ffff800000109c75	kernel.asm	/^ffff800000109c75:	6a 00                	pushq  $0x0$/;"	l
ffff800000109c77	kernel.asm	/^ffff800000109c77:	6a 2c                	pushq  $0x2c$/;"	l
ffff800000109c79	kernel.asm	/^ffff800000109c79:	e9 1b f5 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff800000109c7e	kernel.asm	/^ffff800000109c7e <vector45>:$/;"	l
ffff800000109c7e	kernel.asm	/^ffff800000109c7e:	6a 00                	pushq  $0x0$/;"	l
ffff800000109c80	kernel.asm	/^ffff800000109c80:	6a 2d                	pushq  $0x2d$/;"	l
ffff800000109c82	kernel.asm	/^ffff800000109c82:	e9 12 f5 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff800000109c87	kernel.asm	/^ffff800000109c87 <vector46>:$/;"	l
ffff800000109c87	kernel.asm	/^ffff800000109c87:	6a 00                	pushq  $0x0$/;"	l
ffff800000109c89	kernel.asm	/^ffff800000109c89:	6a 2e                	pushq  $0x2e$/;"	l
ffff800000109c8b	kernel.asm	/^ffff800000109c8b:	e9 09 f5 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff800000109c90	kernel.asm	/^ffff800000109c90 <vector47>:$/;"	l
ffff800000109c90	kernel.asm	/^ffff800000109c90:	6a 00                	pushq  $0x0$/;"	l
ffff800000109c92	kernel.asm	/^ffff800000109c92:	6a 2f                	pushq  $0x2f$/;"	l
ffff800000109c94	kernel.asm	/^ffff800000109c94:	e9 00 f5 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff800000109c99	kernel.asm	/^ffff800000109c99 <vector48>:$/;"	l
ffff800000109c99	kernel.asm	/^ffff800000109c99:	6a 00                	pushq  $0x0$/;"	l
ffff800000109c9b	kernel.asm	/^ffff800000109c9b:	6a 30                	pushq  $0x30$/;"	l
ffff800000109c9d	kernel.asm	/^ffff800000109c9d:	e9 f7 f4 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff800000109ca2	kernel.asm	/^ffff800000109ca2 <vector49>:$/;"	l
ffff800000109ca2	kernel.asm	/^ffff800000109ca2:	6a 00                	pushq  $0x0$/;"	l
ffff800000109ca4	kernel.asm	/^ffff800000109ca4:	6a 31                	pushq  $0x31$/;"	l
ffff800000109ca6	kernel.asm	/^ffff800000109ca6:	e9 ee f4 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff800000109cab	kernel.asm	/^ffff800000109cab <vector50>:$/;"	l
ffff800000109cab	kernel.asm	/^ffff800000109cab:	6a 00                	pushq  $0x0$/;"	l
ffff800000109cad	kernel.asm	/^ffff800000109cad:	6a 32                	pushq  $0x32$/;"	l
ffff800000109caf	kernel.asm	/^ffff800000109caf:	e9 e5 f4 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff800000109cb4	kernel.asm	/^ffff800000109cb4 <vector51>:$/;"	l
ffff800000109cb4	kernel.asm	/^ffff800000109cb4:	6a 00                	pushq  $0x0$/;"	l
ffff800000109cb6	kernel.asm	/^ffff800000109cb6:	6a 33                	pushq  $0x33$/;"	l
ffff800000109cb8	kernel.asm	/^ffff800000109cb8:	e9 dc f4 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff800000109cbd	kernel.asm	/^ffff800000109cbd <vector52>:$/;"	l
ffff800000109cbd	kernel.asm	/^ffff800000109cbd:	6a 00                	pushq  $0x0$/;"	l
ffff800000109cbf	kernel.asm	/^ffff800000109cbf:	6a 34                	pushq  $0x34$/;"	l
ffff800000109cc1	kernel.asm	/^ffff800000109cc1:	e9 d3 f4 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff800000109cc6	kernel.asm	/^ffff800000109cc6 <vector53>:$/;"	l
ffff800000109cc6	kernel.asm	/^ffff800000109cc6:	6a 00                	pushq  $0x0$/;"	l
ffff800000109cc8	kernel.asm	/^ffff800000109cc8:	6a 35                	pushq  $0x35$/;"	l
ffff800000109cca	kernel.asm	/^ffff800000109cca:	e9 ca f4 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff800000109ccf	kernel.asm	/^ffff800000109ccf <vector54>:$/;"	l
ffff800000109ccf	kernel.asm	/^ffff800000109ccf:	6a 00                	pushq  $0x0$/;"	l
ffff800000109cd1	kernel.asm	/^ffff800000109cd1:	6a 36                	pushq  $0x36$/;"	l
ffff800000109cd3	kernel.asm	/^ffff800000109cd3:	e9 c1 f4 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff800000109cd8	kernel.asm	/^ffff800000109cd8 <vector55>:$/;"	l
ffff800000109cd8	kernel.asm	/^ffff800000109cd8:	6a 00                	pushq  $0x0$/;"	l
ffff800000109cda	kernel.asm	/^ffff800000109cda:	6a 37                	pushq  $0x37$/;"	l
ffff800000109cdc	kernel.asm	/^ffff800000109cdc:	e9 b8 f4 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff800000109ce1	kernel.asm	/^ffff800000109ce1 <vector56>:$/;"	l
ffff800000109ce1	kernel.asm	/^ffff800000109ce1:	6a 00                	pushq  $0x0$/;"	l
ffff800000109ce3	kernel.asm	/^ffff800000109ce3:	6a 38                	pushq  $0x38$/;"	l
ffff800000109ce5	kernel.asm	/^ffff800000109ce5:	e9 af f4 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff800000109cea	kernel.asm	/^ffff800000109cea <vector57>:$/;"	l
ffff800000109cea	kernel.asm	/^ffff800000109cea:	6a 00                	pushq  $0x0$/;"	l
ffff800000109cec	kernel.asm	/^ffff800000109cec:	6a 39                	pushq  $0x39$/;"	l
ffff800000109cee	kernel.asm	/^ffff800000109cee:	e9 a6 f4 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff800000109cf3	kernel.asm	/^ffff800000109cf3 <vector58>:$/;"	l
ffff800000109cf3	kernel.asm	/^ffff800000109cf3:	6a 00                	pushq  $0x0$/;"	l
ffff800000109cf5	kernel.asm	/^ffff800000109cf5:	6a 3a                	pushq  $0x3a$/;"	l
ffff800000109cf7	kernel.asm	/^ffff800000109cf7:	e9 9d f4 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff800000109cfc	kernel.asm	/^ffff800000109cfc <vector59>:$/;"	l
ffff800000109cfc	kernel.asm	/^ffff800000109cfc:	6a 00                	pushq  $0x0$/;"	l
ffff800000109cfe	kernel.asm	/^ffff800000109cfe:	6a 3b                	pushq  $0x3b$/;"	l
ffff800000109d00	kernel.asm	/^ffff800000109d00:	e9 94 f4 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff800000109d05	kernel.asm	/^ffff800000109d05 <vector60>:$/;"	l
ffff800000109d05	kernel.asm	/^ffff800000109d05:	6a 00                	pushq  $0x0$/;"	l
ffff800000109d07	kernel.asm	/^ffff800000109d07:	6a 3c                	pushq  $0x3c$/;"	l
ffff800000109d09	kernel.asm	/^ffff800000109d09:	e9 8b f4 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff800000109d0e	kernel.asm	/^ffff800000109d0e <vector61>:$/;"	l
ffff800000109d0e	kernel.asm	/^ffff800000109d0e:	6a 00                	pushq  $0x0$/;"	l
ffff800000109d10	kernel.asm	/^ffff800000109d10:	6a 3d                	pushq  $0x3d$/;"	l
ffff800000109d12	kernel.asm	/^ffff800000109d12:	e9 82 f4 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff800000109d17	kernel.asm	/^ffff800000109d17 <vector62>:$/;"	l
ffff800000109d17	kernel.asm	/^ffff800000109d17:	6a 00                	pushq  $0x0$/;"	l
ffff800000109d19	kernel.asm	/^ffff800000109d19:	6a 3e                	pushq  $0x3e$/;"	l
ffff800000109d1b	kernel.asm	/^ffff800000109d1b:	e9 79 f4 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff800000109d20	kernel.asm	/^ffff800000109d20 <vector63>:$/;"	l
ffff800000109d20	kernel.asm	/^ffff800000109d20:	6a 00                	pushq  $0x0$/;"	l
ffff800000109d22	kernel.asm	/^ffff800000109d22:	6a 3f                	pushq  $0x3f$/;"	l
ffff800000109d24	kernel.asm	/^ffff800000109d24:	e9 70 f4 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff800000109d29	kernel.asm	/^ffff800000109d29 <vector64>:$/;"	l
ffff800000109d29	kernel.asm	/^ffff800000109d29:	6a 00                	pushq  $0x0$/;"	l
ffff800000109d2b	kernel.asm	/^ffff800000109d2b:	6a 40                	pushq  $0x40$/;"	l
ffff800000109d2d	kernel.asm	/^ffff800000109d2d:	e9 67 f4 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff800000109d32	kernel.asm	/^ffff800000109d32 <vector65>:$/;"	l
ffff800000109d32	kernel.asm	/^ffff800000109d32:	6a 00                	pushq  $0x0$/;"	l
ffff800000109d34	kernel.asm	/^ffff800000109d34:	6a 41                	pushq  $0x41$/;"	l
ffff800000109d36	kernel.asm	/^ffff800000109d36:	e9 5e f4 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff800000109d3b	kernel.asm	/^ffff800000109d3b <vector66>:$/;"	l
ffff800000109d3b	kernel.asm	/^ffff800000109d3b:	6a 00                	pushq  $0x0$/;"	l
ffff800000109d3d	kernel.asm	/^ffff800000109d3d:	6a 42                	pushq  $0x42$/;"	l
ffff800000109d3f	kernel.asm	/^ffff800000109d3f:	e9 55 f4 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff800000109d44	kernel.asm	/^ffff800000109d44 <vector67>:$/;"	l
ffff800000109d44	kernel.asm	/^ffff800000109d44:	6a 00                	pushq  $0x0$/;"	l
ffff800000109d46	kernel.asm	/^ffff800000109d46:	6a 43                	pushq  $0x43$/;"	l
ffff800000109d48	kernel.asm	/^ffff800000109d48:	e9 4c f4 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff800000109d4d	kernel.asm	/^ffff800000109d4d <vector68>:$/;"	l
ffff800000109d4d	kernel.asm	/^ffff800000109d4d:	6a 00                	pushq  $0x0$/;"	l
ffff800000109d4f	kernel.asm	/^ffff800000109d4f:	6a 44                	pushq  $0x44$/;"	l
ffff800000109d51	kernel.asm	/^ffff800000109d51:	e9 43 f4 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff800000109d56	kernel.asm	/^ffff800000109d56 <vector69>:$/;"	l
ffff800000109d56	kernel.asm	/^ffff800000109d56:	6a 00                	pushq  $0x0$/;"	l
ffff800000109d58	kernel.asm	/^ffff800000109d58:	6a 45                	pushq  $0x45$/;"	l
ffff800000109d5a	kernel.asm	/^ffff800000109d5a:	e9 3a f4 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff800000109d5f	kernel.asm	/^ffff800000109d5f <vector70>:$/;"	l
ffff800000109d5f	kernel.asm	/^ffff800000109d5f:	6a 00                	pushq  $0x0$/;"	l
ffff800000109d61	kernel.asm	/^ffff800000109d61:	6a 46                	pushq  $0x46$/;"	l
ffff800000109d63	kernel.asm	/^ffff800000109d63:	e9 31 f4 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff800000109d68	kernel.asm	/^ffff800000109d68 <vector71>:$/;"	l
ffff800000109d68	kernel.asm	/^ffff800000109d68:	6a 00                	pushq  $0x0$/;"	l
ffff800000109d6a	kernel.asm	/^ffff800000109d6a:	6a 47                	pushq  $0x47$/;"	l
ffff800000109d6c	kernel.asm	/^ffff800000109d6c:	e9 28 f4 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff800000109d71	kernel.asm	/^ffff800000109d71 <vector72>:$/;"	l
ffff800000109d71	kernel.asm	/^ffff800000109d71:	6a 00                	pushq  $0x0$/;"	l
ffff800000109d73	kernel.asm	/^ffff800000109d73:	6a 48                	pushq  $0x48$/;"	l
ffff800000109d75	kernel.asm	/^ffff800000109d75:	e9 1f f4 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff800000109d7a	kernel.asm	/^ffff800000109d7a <vector73>:$/;"	l
ffff800000109d7a	kernel.asm	/^ffff800000109d7a:	6a 00                	pushq  $0x0$/;"	l
ffff800000109d7c	kernel.asm	/^ffff800000109d7c:	6a 49                	pushq  $0x49$/;"	l
ffff800000109d7e	kernel.asm	/^ffff800000109d7e:	e9 16 f4 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff800000109d83	kernel.asm	/^ffff800000109d83 <vector74>:$/;"	l
ffff800000109d83	kernel.asm	/^ffff800000109d83:	6a 00                	pushq  $0x0$/;"	l
ffff800000109d85	kernel.asm	/^ffff800000109d85:	6a 4a                	pushq  $0x4a$/;"	l
ffff800000109d87	kernel.asm	/^ffff800000109d87:	e9 0d f4 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff800000109d8c	kernel.asm	/^ffff800000109d8c <vector75>:$/;"	l
ffff800000109d8c	kernel.asm	/^ffff800000109d8c:	6a 00                	pushq  $0x0$/;"	l
ffff800000109d8e	kernel.asm	/^ffff800000109d8e:	6a 4b                	pushq  $0x4b$/;"	l
ffff800000109d90	kernel.asm	/^ffff800000109d90:	e9 04 f4 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff800000109d95	kernel.asm	/^ffff800000109d95 <vector76>:$/;"	l
ffff800000109d95	kernel.asm	/^ffff800000109d95:	6a 00                	pushq  $0x0$/;"	l
ffff800000109d97	kernel.asm	/^ffff800000109d97:	6a 4c                	pushq  $0x4c$/;"	l
ffff800000109d99	kernel.asm	/^ffff800000109d99:	e9 fb f3 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff800000109d9e	kernel.asm	/^ffff800000109d9e <vector77>:$/;"	l
ffff800000109d9e	kernel.asm	/^ffff800000109d9e:	6a 00                	pushq  $0x0$/;"	l
ffff800000109da0	kernel.asm	/^ffff800000109da0:	6a 4d                	pushq  $0x4d$/;"	l
ffff800000109da2	kernel.asm	/^ffff800000109da2:	e9 f2 f3 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff800000109da7	kernel.asm	/^ffff800000109da7 <vector78>:$/;"	l
ffff800000109da7	kernel.asm	/^ffff800000109da7:	6a 00                	pushq  $0x0$/;"	l
ffff800000109da9	kernel.asm	/^ffff800000109da9:	6a 4e                	pushq  $0x4e$/;"	l
ffff800000109dab	kernel.asm	/^ffff800000109dab:	e9 e9 f3 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff800000109db0	kernel.asm	/^ffff800000109db0 <vector79>:$/;"	l
ffff800000109db0	kernel.asm	/^ffff800000109db0:	6a 00                	pushq  $0x0$/;"	l
ffff800000109db2	kernel.asm	/^ffff800000109db2:	6a 4f                	pushq  $0x4f$/;"	l
ffff800000109db4	kernel.asm	/^ffff800000109db4:	e9 e0 f3 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff800000109db9	kernel.asm	/^ffff800000109db9 <vector80>:$/;"	l
ffff800000109db9	kernel.asm	/^ffff800000109db9:	6a 00                	pushq  $0x0$/;"	l
ffff800000109dbb	kernel.asm	/^ffff800000109dbb:	6a 50                	pushq  $0x50$/;"	l
ffff800000109dbd	kernel.asm	/^ffff800000109dbd:	e9 d7 f3 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff800000109dc2	kernel.asm	/^ffff800000109dc2 <vector81>:$/;"	l
ffff800000109dc2	kernel.asm	/^ffff800000109dc2:	6a 00                	pushq  $0x0$/;"	l
ffff800000109dc4	kernel.asm	/^ffff800000109dc4:	6a 51                	pushq  $0x51$/;"	l
ffff800000109dc6	kernel.asm	/^ffff800000109dc6:	e9 ce f3 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff800000109dcb	kernel.asm	/^ffff800000109dcb <vector82>:$/;"	l
ffff800000109dcb	kernel.asm	/^ffff800000109dcb:	6a 00                	pushq  $0x0$/;"	l
ffff800000109dcd	kernel.asm	/^ffff800000109dcd:	6a 52                	pushq  $0x52$/;"	l
ffff800000109dcf	kernel.asm	/^ffff800000109dcf:	e9 c5 f3 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff800000109dd4	kernel.asm	/^ffff800000109dd4 <vector83>:$/;"	l
ffff800000109dd4	kernel.asm	/^ffff800000109dd4:	6a 00                	pushq  $0x0$/;"	l
ffff800000109dd6	kernel.asm	/^ffff800000109dd6:	6a 53                	pushq  $0x53$/;"	l
ffff800000109dd8	kernel.asm	/^ffff800000109dd8:	e9 bc f3 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff800000109ddd	kernel.asm	/^ffff800000109ddd <vector84>:$/;"	l
ffff800000109ddd	kernel.asm	/^ffff800000109ddd:	6a 00                	pushq  $0x0$/;"	l
ffff800000109ddf	kernel.asm	/^ffff800000109ddf:	6a 54                	pushq  $0x54$/;"	l
ffff800000109de1	kernel.asm	/^ffff800000109de1:	e9 b3 f3 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff800000109de6	kernel.asm	/^ffff800000109de6 <vector85>:$/;"	l
ffff800000109de6	kernel.asm	/^ffff800000109de6:	6a 00                	pushq  $0x0$/;"	l
ffff800000109de8	kernel.asm	/^ffff800000109de8:	6a 55                	pushq  $0x55$/;"	l
ffff800000109dea	kernel.asm	/^ffff800000109dea:	e9 aa f3 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff800000109def	kernel.asm	/^ffff800000109def <vector86>:$/;"	l
ffff800000109def	kernel.asm	/^ffff800000109def:	6a 00                	pushq  $0x0$/;"	l
ffff800000109df1	kernel.asm	/^ffff800000109df1:	6a 56                	pushq  $0x56$/;"	l
ffff800000109df3	kernel.asm	/^ffff800000109df3:	e9 a1 f3 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff800000109df8	kernel.asm	/^ffff800000109df8 <vector87>:$/;"	l
ffff800000109df8	kernel.asm	/^ffff800000109df8:	6a 00                	pushq  $0x0$/;"	l
ffff800000109dfa	kernel.asm	/^ffff800000109dfa:	6a 57                	pushq  $0x57$/;"	l
ffff800000109dfc	kernel.asm	/^ffff800000109dfc:	e9 98 f3 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff800000109e01	kernel.asm	/^ffff800000109e01 <vector88>:$/;"	l
ffff800000109e01	kernel.asm	/^ffff800000109e01:	6a 00                	pushq  $0x0$/;"	l
ffff800000109e03	kernel.asm	/^ffff800000109e03:	6a 58                	pushq  $0x58$/;"	l
ffff800000109e05	kernel.asm	/^ffff800000109e05:	e9 8f f3 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff800000109e0a	kernel.asm	/^ffff800000109e0a <vector89>:$/;"	l
ffff800000109e0a	kernel.asm	/^ffff800000109e0a:	6a 00                	pushq  $0x0$/;"	l
ffff800000109e0c	kernel.asm	/^ffff800000109e0c:	6a 59                	pushq  $0x59$/;"	l
ffff800000109e0e	kernel.asm	/^ffff800000109e0e:	e9 86 f3 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff800000109e13	kernel.asm	/^ffff800000109e13 <vector90>:$/;"	l
ffff800000109e13	kernel.asm	/^ffff800000109e13:	6a 00                	pushq  $0x0$/;"	l
ffff800000109e15	kernel.asm	/^ffff800000109e15:	6a 5a                	pushq  $0x5a$/;"	l
ffff800000109e17	kernel.asm	/^ffff800000109e17:	e9 7d f3 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff800000109e1c	kernel.asm	/^ffff800000109e1c <vector91>:$/;"	l
ffff800000109e1c	kernel.asm	/^ffff800000109e1c:	6a 00                	pushq  $0x0$/;"	l
ffff800000109e1e	kernel.asm	/^ffff800000109e1e:	6a 5b                	pushq  $0x5b$/;"	l
ffff800000109e20	kernel.asm	/^ffff800000109e20:	e9 74 f3 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff800000109e25	kernel.asm	/^ffff800000109e25 <vector92>:$/;"	l
ffff800000109e25	kernel.asm	/^ffff800000109e25:	6a 00                	pushq  $0x0$/;"	l
ffff800000109e27	kernel.asm	/^ffff800000109e27:	6a 5c                	pushq  $0x5c$/;"	l
ffff800000109e29	kernel.asm	/^ffff800000109e29:	e9 6b f3 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff800000109e2e	kernel.asm	/^ffff800000109e2e <vector93>:$/;"	l
ffff800000109e2e	kernel.asm	/^ffff800000109e2e:	6a 00                	pushq  $0x0$/;"	l
ffff800000109e30	kernel.asm	/^ffff800000109e30:	6a 5d                	pushq  $0x5d$/;"	l
ffff800000109e32	kernel.asm	/^ffff800000109e32:	e9 62 f3 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff800000109e37	kernel.asm	/^ffff800000109e37 <vector94>:$/;"	l
ffff800000109e37	kernel.asm	/^ffff800000109e37:	6a 00                	pushq  $0x0$/;"	l
ffff800000109e39	kernel.asm	/^ffff800000109e39:	6a 5e                	pushq  $0x5e$/;"	l
ffff800000109e3b	kernel.asm	/^ffff800000109e3b:	e9 59 f3 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff800000109e40	kernel.asm	/^ffff800000109e40 <vector95>:$/;"	l
ffff800000109e40	kernel.asm	/^ffff800000109e40:	6a 00                	pushq  $0x0$/;"	l
ffff800000109e42	kernel.asm	/^ffff800000109e42:	6a 5f                	pushq  $0x5f$/;"	l
ffff800000109e44	kernel.asm	/^ffff800000109e44:	e9 50 f3 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff800000109e49	kernel.asm	/^ffff800000109e49 <vector96>:$/;"	l
ffff800000109e49	kernel.asm	/^ffff800000109e49:	6a 00                	pushq  $0x0$/;"	l
ffff800000109e4b	kernel.asm	/^ffff800000109e4b:	6a 60                	pushq  $0x60$/;"	l
ffff800000109e4d	kernel.asm	/^ffff800000109e4d:	e9 47 f3 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff800000109e52	kernel.asm	/^ffff800000109e52 <vector97>:$/;"	l
ffff800000109e52	kernel.asm	/^ffff800000109e52:	6a 00                	pushq  $0x0$/;"	l
ffff800000109e54	kernel.asm	/^ffff800000109e54:	6a 61                	pushq  $0x61$/;"	l
ffff800000109e56	kernel.asm	/^ffff800000109e56:	e9 3e f3 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff800000109e5b	kernel.asm	/^ffff800000109e5b <vector98>:$/;"	l
ffff800000109e5b	kernel.asm	/^ffff800000109e5b:	6a 00                	pushq  $0x0$/;"	l
ffff800000109e5d	kernel.asm	/^ffff800000109e5d:	6a 62                	pushq  $0x62$/;"	l
ffff800000109e5f	kernel.asm	/^ffff800000109e5f:	e9 35 f3 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff800000109e64	kernel.asm	/^ffff800000109e64 <vector99>:$/;"	l
ffff800000109e64	kernel.asm	/^ffff800000109e64:	6a 00                	pushq  $0x0$/;"	l
ffff800000109e66	kernel.asm	/^ffff800000109e66:	6a 63                	pushq  $0x63$/;"	l
ffff800000109e68	kernel.asm	/^ffff800000109e68:	e9 2c f3 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff800000109e6d	kernel.asm	/^ffff800000109e6d <vector100>:$/;"	l
ffff800000109e6d	kernel.asm	/^ffff800000109e6d:	6a 00                	pushq  $0x0$/;"	l
ffff800000109e6f	kernel.asm	/^ffff800000109e6f:	6a 64                	pushq  $0x64$/;"	l
ffff800000109e71	kernel.asm	/^ffff800000109e71:	e9 23 f3 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff800000109e76	kernel.asm	/^ffff800000109e76 <vector101>:$/;"	l
ffff800000109e76	kernel.asm	/^ffff800000109e76:	6a 00                	pushq  $0x0$/;"	l
ffff800000109e78	kernel.asm	/^ffff800000109e78:	6a 65                	pushq  $0x65$/;"	l
ffff800000109e7a	kernel.asm	/^ffff800000109e7a:	e9 1a f3 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff800000109e7f	kernel.asm	/^ffff800000109e7f <vector102>:$/;"	l
ffff800000109e7f	kernel.asm	/^ffff800000109e7f:	6a 00                	pushq  $0x0$/;"	l
ffff800000109e81	kernel.asm	/^ffff800000109e81:	6a 66                	pushq  $0x66$/;"	l
ffff800000109e83	kernel.asm	/^ffff800000109e83:	e9 11 f3 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff800000109e88	kernel.asm	/^ffff800000109e88 <vector103>:$/;"	l
ffff800000109e88	kernel.asm	/^ffff800000109e88:	6a 00                	pushq  $0x0$/;"	l
ffff800000109e8a	kernel.asm	/^ffff800000109e8a:	6a 67                	pushq  $0x67$/;"	l
ffff800000109e8c	kernel.asm	/^ffff800000109e8c:	e9 08 f3 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff800000109e91	kernel.asm	/^ffff800000109e91 <vector104>:$/;"	l
ffff800000109e91	kernel.asm	/^ffff800000109e91:	6a 00                	pushq  $0x0$/;"	l
ffff800000109e93	kernel.asm	/^ffff800000109e93:	6a 68                	pushq  $0x68$/;"	l
ffff800000109e95	kernel.asm	/^ffff800000109e95:	e9 ff f2 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff800000109e9a	kernel.asm	/^ffff800000109e9a <vector105>:$/;"	l
ffff800000109e9a	kernel.asm	/^ffff800000109e9a:	6a 00                	pushq  $0x0$/;"	l
ffff800000109e9c	kernel.asm	/^ffff800000109e9c:	6a 69                	pushq  $0x69$/;"	l
ffff800000109e9e	kernel.asm	/^ffff800000109e9e:	e9 f6 f2 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff800000109ea3	kernel.asm	/^ffff800000109ea3 <vector106>:$/;"	l
ffff800000109ea3	kernel.asm	/^ffff800000109ea3:	6a 00                	pushq  $0x0$/;"	l
ffff800000109ea5	kernel.asm	/^ffff800000109ea5:	6a 6a                	pushq  $0x6a$/;"	l
ffff800000109ea7	kernel.asm	/^ffff800000109ea7:	e9 ed f2 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff800000109eac	kernel.asm	/^ffff800000109eac <vector107>:$/;"	l
ffff800000109eac	kernel.asm	/^ffff800000109eac:	6a 00                	pushq  $0x0$/;"	l
ffff800000109eae	kernel.asm	/^ffff800000109eae:	6a 6b                	pushq  $0x6b$/;"	l
ffff800000109eb0	kernel.asm	/^ffff800000109eb0:	e9 e4 f2 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff800000109eb5	kernel.asm	/^ffff800000109eb5 <vector108>:$/;"	l
ffff800000109eb5	kernel.asm	/^ffff800000109eb5:	6a 00                	pushq  $0x0$/;"	l
ffff800000109eb7	kernel.asm	/^ffff800000109eb7:	6a 6c                	pushq  $0x6c$/;"	l
ffff800000109eb9	kernel.asm	/^ffff800000109eb9:	e9 db f2 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff800000109ebe	kernel.asm	/^ffff800000109ebe <vector109>:$/;"	l
ffff800000109ebe	kernel.asm	/^ffff800000109ebe:	6a 00                	pushq  $0x0$/;"	l
ffff800000109ec0	kernel.asm	/^ffff800000109ec0:	6a 6d                	pushq  $0x6d$/;"	l
ffff800000109ec2	kernel.asm	/^ffff800000109ec2:	e9 d2 f2 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff800000109ec7	kernel.asm	/^ffff800000109ec7 <vector110>:$/;"	l
ffff800000109ec7	kernel.asm	/^ffff800000109ec7:	6a 00                	pushq  $0x0$/;"	l
ffff800000109ec9	kernel.asm	/^ffff800000109ec9:	6a 6e                	pushq  $0x6e$/;"	l
ffff800000109ecb	kernel.asm	/^ffff800000109ecb:	e9 c9 f2 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff800000109ed0	kernel.asm	/^ffff800000109ed0 <vector111>:$/;"	l
ffff800000109ed0	kernel.asm	/^ffff800000109ed0:	6a 00                	pushq  $0x0$/;"	l
ffff800000109ed2	kernel.asm	/^ffff800000109ed2:	6a 6f                	pushq  $0x6f$/;"	l
ffff800000109ed4	kernel.asm	/^ffff800000109ed4:	e9 c0 f2 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff800000109ed9	kernel.asm	/^ffff800000109ed9 <vector112>:$/;"	l
ffff800000109ed9	kernel.asm	/^ffff800000109ed9:	6a 00                	pushq  $0x0$/;"	l
ffff800000109edb	kernel.asm	/^ffff800000109edb:	6a 70                	pushq  $0x70$/;"	l
ffff800000109edd	kernel.asm	/^ffff800000109edd:	e9 b7 f2 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff800000109ee2	kernel.asm	/^ffff800000109ee2 <vector113>:$/;"	l
ffff800000109ee2	kernel.asm	/^ffff800000109ee2:	6a 00                	pushq  $0x0$/;"	l
ffff800000109ee4	kernel.asm	/^ffff800000109ee4:	6a 71                	pushq  $0x71$/;"	l
ffff800000109ee6	kernel.asm	/^ffff800000109ee6:	e9 ae f2 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff800000109eeb	kernel.asm	/^ffff800000109eeb <vector114>:$/;"	l
ffff800000109eeb	kernel.asm	/^ffff800000109eeb:	6a 00                	pushq  $0x0$/;"	l
ffff800000109eed	kernel.asm	/^ffff800000109eed:	6a 72                	pushq  $0x72$/;"	l
ffff800000109eef	kernel.asm	/^ffff800000109eef:	e9 a5 f2 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff800000109ef4	kernel.asm	/^ffff800000109ef4 <vector115>:$/;"	l
ffff800000109ef4	kernel.asm	/^ffff800000109ef4:	6a 00                	pushq  $0x0$/;"	l
ffff800000109ef6	kernel.asm	/^ffff800000109ef6:	6a 73                	pushq  $0x73$/;"	l
ffff800000109ef8	kernel.asm	/^ffff800000109ef8:	e9 9c f2 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff800000109efd	kernel.asm	/^ffff800000109efd <vector116>:$/;"	l
ffff800000109efd	kernel.asm	/^ffff800000109efd:	6a 00                	pushq  $0x0$/;"	l
ffff800000109eff	kernel.asm	/^ffff800000109eff:	6a 74                	pushq  $0x74$/;"	l
ffff800000109f01	kernel.asm	/^ffff800000109f01:	e9 93 f2 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff800000109f06	kernel.asm	/^ffff800000109f06 <vector117>:$/;"	l
ffff800000109f06	kernel.asm	/^ffff800000109f06:	6a 00                	pushq  $0x0$/;"	l
ffff800000109f08	kernel.asm	/^ffff800000109f08:	6a 75                	pushq  $0x75$/;"	l
ffff800000109f0a	kernel.asm	/^ffff800000109f0a:	e9 8a f2 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff800000109f0f	kernel.asm	/^ffff800000109f0f <vector118>:$/;"	l
ffff800000109f0f	kernel.asm	/^ffff800000109f0f:	6a 00                	pushq  $0x0$/;"	l
ffff800000109f11	kernel.asm	/^ffff800000109f11:	6a 76                	pushq  $0x76$/;"	l
ffff800000109f13	kernel.asm	/^ffff800000109f13:	e9 81 f2 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff800000109f18	kernel.asm	/^ffff800000109f18 <vector119>:$/;"	l
ffff800000109f18	kernel.asm	/^ffff800000109f18:	6a 00                	pushq  $0x0$/;"	l
ffff800000109f1a	kernel.asm	/^ffff800000109f1a:	6a 77                	pushq  $0x77$/;"	l
ffff800000109f1c	kernel.asm	/^ffff800000109f1c:	e9 78 f2 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff800000109f21	kernel.asm	/^ffff800000109f21 <vector120>:$/;"	l
ffff800000109f21	kernel.asm	/^ffff800000109f21:	6a 00                	pushq  $0x0$/;"	l
ffff800000109f23	kernel.asm	/^ffff800000109f23:	6a 78                	pushq  $0x78$/;"	l
ffff800000109f25	kernel.asm	/^ffff800000109f25:	e9 6f f2 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff800000109f2a	kernel.asm	/^ffff800000109f2a <vector121>:$/;"	l
ffff800000109f2a	kernel.asm	/^ffff800000109f2a:	6a 00                	pushq  $0x0$/;"	l
ffff800000109f2c	kernel.asm	/^ffff800000109f2c:	6a 79                	pushq  $0x79$/;"	l
ffff800000109f2e	kernel.asm	/^ffff800000109f2e:	e9 66 f2 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff800000109f33	kernel.asm	/^ffff800000109f33 <vector122>:$/;"	l
ffff800000109f33	kernel.asm	/^ffff800000109f33:	6a 00                	pushq  $0x0$/;"	l
ffff800000109f35	kernel.asm	/^ffff800000109f35:	6a 7a                	pushq  $0x7a$/;"	l
ffff800000109f37	kernel.asm	/^ffff800000109f37:	e9 5d f2 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff800000109f3c	kernel.asm	/^ffff800000109f3c <vector123>:$/;"	l
ffff800000109f3c	kernel.asm	/^ffff800000109f3c:	6a 00                	pushq  $0x0$/;"	l
ffff800000109f3e	kernel.asm	/^ffff800000109f3e:	6a 7b                	pushq  $0x7b$/;"	l
ffff800000109f40	kernel.asm	/^ffff800000109f40:	e9 54 f2 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff800000109f45	kernel.asm	/^ffff800000109f45 <vector124>:$/;"	l
ffff800000109f45	kernel.asm	/^ffff800000109f45:	6a 00                	pushq  $0x0$/;"	l
ffff800000109f47	kernel.asm	/^ffff800000109f47:	6a 7c                	pushq  $0x7c$/;"	l
ffff800000109f49	kernel.asm	/^ffff800000109f49:	e9 4b f2 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff800000109f4e	kernel.asm	/^ffff800000109f4e <vector125>:$/;"	l
ffff800000109f4e	kernel.asm	/^ffff800000109f4e:	6a 00                	pushq  $0x0$/;"	l
ffff800000109f50	kernel.asm	/^ffff800000109f50:	6a 7d                	pushq  $0x7d$/;"	l
ffff800000109f52	kernel.asm	/^ffff800000109f52:	e9 42 f2 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff800000109f57	kernel.asm	/^ffff800000109f57 <vector126>:$/;"	l
ffff800000109f57	kernel.asm	/^ffff800000109f57:	6a 00                	pushq  $0x0$/;"	l
ffff800000109f59	kernel.asm	/^ffff800000109f59:	6a 7e                	pushq  $0x7e$/;"	l
ffff800000109f5b	kernel.asm	/^ffff800000109f5b:	e9 39 f2 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff800000109f60	kernel.asm	/^ffff800000109f60 <vector127>:$/;"	l
ffff800000109f60	kernel.asm	/^ffff800000109f60:	6a 00                	pushq  $0x0$/;"	l
ffff800000109f62	kernel.asm	/^ffff800000109f62:	6a 7f                	pushq  $0x7f$/;"	l
ffff800000109f64	kernel.asm	/^ffff800000109f64:	e9 30 f2 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff800000109f69	kernel.asm	/^ffff800000109f69 <vector128>:$/;"	l
ffff800000109f69	kernel.asm	/^ffff800000109f69:	6a 00                	pushq  $0x0$/;"	l
ffff800000109f6b	kernel.asm	/^ffff800000109f6b:	68 80 00 00 00       	pushq  $0x80$/;"	l
ffff800000109f70	kernel.asm	/^ffff800000109f70:	e9 24 f2 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff800000109f75	kernel.asm	/^ffff800000109f75 <vector129>:$/;"	l
ffff800000109f75	kernel.asm	/^ffff800000109f75:	6a 00                	pushq  $0x0$/;"	l
ffff800000109f77	kernel.asm	/^ffff800000109f77:	68 81 00 00 00       	pushq  $0x81$/;"	l
ffff800000109f7c	kernel.asm	/^ffff800000109f7c:	e9 18 f2 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff800000109f81	kernel.asm	/^ffff800000109f81 <vector130>:$/;"	l
ffff800000109f81	kernel.asm	/^ffff800000109f81:	6a 00                	pushq  $0x0$/;"	l
ffff800000109f83	kernel.asm	/^ffff800000109f83:	68 82 00 00 00       	pushq  $0x82$/;"	l
ffff800000109f88	kernel.asm	/^ffff800000109f88:	e9 0c f2 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff800000109f8d	kernel.asm	/^ffff800000109f8d <vector131>:$/;"	l
ffff800000109f8d	kernel.asm	/^ffff800000109f8d:	6a 00                	pushq  $0x0$/;"	l
ffff800000109f8f	kernel.asm	/^ffff800000109f8f:	68 83 00 00 00       	pushq  $0x83$/;"	l
ffff800000109f94	kernel.asm	/^ffff800000109f94:	e9 00 f2 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff800000109f99	kernel.asm	/^ffff800000109f99 <vector132>:$/;"	l
ffff800000109f99	kernel.asm	/^ffff800000109f99:	6a 00                	pushq  $0x0$/;"	l
ffff800000109f9b	kernel.asm	/^ffff800000109f9b:	68 84 00 00 00       	pushq  $0x84$/;"	l
ffff800000109fa0	kernel.asm	/^ffff800000109fa0:	e9 f4 f1 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff800000109fa5	kernel.asm	/^ffff800000109fa5 <vector133>:$/;"	l
ffff800000109fa5	kernel.asm	/^ffff800000109fa5:	6a 00                	pushq  $0x0$/;"	l
ffff800000109fa7	kernel.asm	/^ffff800000109fa7:	68 85 00 00 00       	pushq  $0x85$/;"	l
ffff800000109fac	kernel.asm	/^ffff800000109fac:	e9 e8 f1 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff800000109fb1	kernel.asm	/^ffff800000109fb1 <vector134>:$/;"	l
ffff800000109fb1	kernel.asm	/^ffff800000109fb1:	6a 00                	pushq  $0x0$/;"	l
ffff800000109fb3	kernel.asm	/^ffff800000109fb3:	68 86 00 00 00       	pushq  $0x86$/;"	l
ffff800000109fb8	kernel.asm	/^ffff800000109fb8:	e9 dc f1 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff800000109fbd	kernel.asm	/^ffff800000109fbd <vector135>:$/;"	l
ffff800000109fbd	kernel.asm	/^ffff800000109fbd:	6a 00                	pushq  $0x0$/;"	l
ffff800000109fbf	kernel.asm	/^ffff800000109fbf:	68 87 00 00 00       	pushq  $0x87$/;"	l
ffff800000109fc4	kernel.asm	/^ffff800000109fc4:	e9 d0 f1 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff800000109fc9	kernel.asm	/^ffff800000109fc9 <vector136>:$/;"	l
ffff800000109fc9	kernel.asm	/^ffff800000109fc9:	6a 00                	pushq  $0x0$/;"	l
ffff800000109fcb	kernel.asm	/^ffff800000109fcb:	68 88 00 00 00       	pushq  $0x88$/;"	l
ffff800000109fd0	kernel.asm	/^ffff800000109fd0:	e9 c4 f1 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff800000109fd5	kernel.asm	/^ffff800000109fd5 <vector137>:$/;"	l
ffff800000109fd5	kernel.asm	/^ffff800000109fd5:	6a 00                	pushq  $0x0$/;"	l
ffff800000109fd7	kernel.asm	/^ffff800000109fd7:	68 89 00 00 00       	pushq  $0x89$/;"	l
ffff800000109fdc	kernel.asm	/^ffff800000109fdc:	e9 b8 f1 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff800000109fe1	kernel.asm	/^ffff800000109fe1 <vector138>:$/;"	l
ffff800000109fe1	kernel.asm	/^ffff800000109fe1:	6a 00                	pushq  $0x0$/;"	l
ffff800000109fe3	kernel.asm	/^ffff800000109fe3:	68 8a 00 00 00       	pushq  $0x8a$/;"	l
ffff800000109fe8	kernel.asm	/^ffff800000109fe8:	e9 ac f1 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff800000109fed	kernel.asm	/^ffff800000109fed <vector139>:$/;"	l
ffff800000109fed	kernel.asm	/^ffff800000109fed:	6a 00                	pushq  $0x0$/;"	l
ffff800000109fef	kernel.asm	/^ffff800000109fef:	68 8b 00 00 00       	pushq  $0x8b$/;"	l
ffff800000109ff4	kernel.asm	/^ffff800000109ff4:	e9 a0 f1 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff800000109ff9	kernel.asm	/^ffff800000109ff9 <vector140>:$/;"	l
ffff800000109ff9	kernel.asm	/^ffff800000109ff9:	6a 00                	pushq  $0x0$/;"	l
ffff800000109ffb	kernel.asm	/^ffff800000109ffb:	68 8c 00 00 00       	pushq  $0x8c$/;"	l
ffff80000010a000	kernel.asm	/^ffff80000010a000:	e9 94 f1 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff80000010a005	kernel.asm	/^ffff80000010a005 <vector141>:$/;"	l
ffff80000010a005	kernel.asm	/^ffff80000010a005:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a007	kernel.asm	/^ffff80000010a007:	68 8d 00 00 00       	pushq  $0x8d$/;"	l
ffff80000010a00c	kernel.asm	/^ffff80000010a00c:	e9 88 f1 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff80000010a011	kernel.asm	/^ffff80000010a011 <vector142>:$/;"	l
ffff80000010a011	kernel.asm	/^ffff80000010a011:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a013	kernel.asm	/^ffff80000010a013:	68 8e 00 00 00       	pushq  $0x8e$/;"	l
ffff80000010a018	kernel.asm	/^ffff80000010a018:	e9 7c f1 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff80000010a01d	kernel.asm	/^ffff80000010a01d <vector143>:$/;"	l
ffff80000010a01d	kernel.asm	/^ffff80000010a01d:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a01f	kernel.asm	/^ffff80000010a01f:	68 8f 00 00 00       	pushq  $0x8f$/;"	l
ffff80000010a024	kernel.asm	/^ffff80000010a024:	e9 70 f1 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff80000010a029	kernel.asm	/^ffff80000010a029 <vector144>:$/;"	l
ffff80000010a029	kernel.asm	/^ffff80000010a029:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a02b	kernel.asm	/^ffff80000010a02b:	68 90 00 00 00       	pushq  $0x90$/;"	l
ffff80000010a030	kernel.asm	/^ffff80000010a030:	e9 64 f1 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff80000010a035	kernel.asm	/^ffff80000010a035 <vector145>:$/;"	l
ffff80000010a035	kernel.asm	/^ffff80000010a035:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a037	kernel.asm	/^ffff80000010a037:	68 91 00 00 00       	pushq  $0x91$/;"	l
ffff80000010a03c	kernel.asm	/^ffff80000010a03c:	e9 58 f1 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff80000010a041	kernel.asm	/^ffff80000010a041 <vector146>:$/;"	l
ffff80000010a041	kernel.asm	/^ffff80000010a041:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a043	kernel.asm	/^ffff80000010a043:	68 92 00 00 00       	pushq  $0x92$/;"	l
ffff80000010a048	kernel.asm	/^ffff80000010a048:	e9 4c f1 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff80000010a04d	kernel.asm	/^ffff80000010a04d <vector147>:$/;"	l
ffff80000010a04d	kernel.asm	/^ffff80000010a04d:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a04f	kernel.asm	/^ffff80000010a04f:	68 93 00 00 00       	pushq  $0x93$/;"	l
ffff80000010a054	kernel.asm	/^ffff80000010a054:	e9 40 f1 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff80000010a059	kernel.asm	/^ffff80000010a059 <vector148>:$/;"	l
ffff80000010a059	kernel.asm	/^ffff80000010a059:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a05b	kernel.asm	/^ffff80000010a05b:	68 94 00 00 00       	pushq  $0x94$/;"	l
ffff80000010a060	kernel.asm	/^ffff80000010a060:	e9 34 f1 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff80000010a065	kernel.asm	/^ffff80000010a065 <vector149>:$/;"	l
ffff80000010a065	kernel.asm	/^ffff80000010a065:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a067	kernel.asm	/^ffff80000010a067:	68 95 00 00 00       	pushq  $0x95$/;"	l
ffff80000010a06c	kernel.asm	/^ffff80000010a06c:	e9 28 f1 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff80000010a071	kernel.asm	/^ffff80000010a071 <vector150>:$/;"	l
ffff80000010a071	kernel.asm	/^ffff80000010a071:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a073	kernel.asm	/^ffff80000010a073:	68 96 00 00 00       	pushq  $0x96$/;"	l
ffff80000010a078	kernel.asm	/^ffff80000010a078:	e9 1c f1 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff80000010a07d	kernel.asm	/^ffff80000010a07d <vector151>:$/;"	l
ffff80000010a07d	kernel.asm	/^ffff80000010a07d:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a07f	kernel.asm	/^ffff80000010a07f:	68 97 00 00 00       	pushq  $0x97$/;"	l
ffff80000010a084	kernel.asm	/^ffff80000010a084:	e9 10 f1 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff80000010a089	kernel.asm	/^ffff80000010a089 <vector152>:$/;"	l
ffff80000010a089	kernel.asm	/^ffff80000010a089:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a08b	kernel.asm	/^ffff80000010a08b:	68 98 00 00 00       	pushq  $0x98$/;"	l
ffff80000010a090	kernel.asm	/^ffff80000010a090:	e9 04 f1 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff80000010a095	kernel.asm	/^ffff80000010a095 <vector153>:$/;"	l
ffff80000010a095	kernel.asm	/^ffff80000010a095:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a097	kernel.asm	/^ffff80000010a097:	68 99 00 00 00       	pushq  $0x99$/;"	l
ffff80000010a09c	kernel.asm	/^ffff80000010a09c:	e9 f8 f0 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff80000010a0a1	kernel.asm	/^ffff80000010a0a1 <vector154>:$/;"	l
ffff80000010a0a1	kernel.asm	/^ffff80000010a0a1:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a0a3	kernel.asm	/^ffff80000010a0a3:	68 9a 00 00 00       	pushq  $0x9a$/;"	l
ffff80000010a0a8	kernel.asm	/^ffff80000010a0a8:	e9 ec f0 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff80000010a0ad	kernel.asm	/^ffff80000010a0ad <vector155>:$/;"	l
ffff80000010a0ad	kernel.asm	/^ffff80000010a0ad:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a0af	kernel.asm	/^ffff80000010a0af:	68 9b 00 00 00       	pushq  $0x9b$/;"	l
ffff80000010a0b4	kernel.asm	/^ffff80000010a0b4:	e9 e0 f0 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff80000010a0b9	kernel.asm	/^ffff80000010a0b9 <vector156>:$/;"	l
ffff80000010a0b9	kernel.asm	/^ffff80000010a0b9:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a0bb	kernel.asm	/^ffff80000010a0bb:	68 9c 00 00 00       	pushq  $0x9c$/;"	l
ffff80000010a0c0	kernel.asm	/^ffff80000010a0c0:	e9 d4 f0 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff80000010a0c5	kernel.asm	/^ffff80000010a0c5 <vector157>:$/;"	l
ffff80000010a0c5	kernel.asm	/^ffff80000010a0c5:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a0c7	kernel.asm	/^ffff80000010a0c7:	68 9d 00 00 00       	pushq  $0x9d$/;"	l
ffff80000010a0cc	kernel.asm	/^ffff80000010a0cc:	e9 c8 f0 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff80000010a0d1	kernel.asm	/^ffff80000010a0d1 <vector158>:$/;"	l
ffff80000010a0d1	kernel.asm	/^ffff80000010a0d1:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a0d3	kernel.asm	/^ffff80000010a0d3:	68 9e 00 00 00       	pushq  $0x9e$/;"	l
ffff80000010a0d8	kernel.asm	/^ffff80000010a0d8:	e9 bc f0 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff80000010a0dd	kernel.asm	/^ffff80000010a0dd <vector159>:$/;"	l
ffff80000010a0dd	kernel.asm	/^ffff80000010a0dd:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a0df	kernel.asm	/^ffff80000010a0df:	68 9f 00 00 00       	pushq  $0x9f$/;"	l
ffff80000010a0e4	kernel.asm	/^ffff80000010a0e4:	e9 b0 f0 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff80000010a0e9	kernel.asm	/^ffff80000010a0e9 <vector160>:$/;"	l
ffff80000010a0e9	kernel.asm	/^ffff80000010a0e9:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a0eb	kernel.asm	/^ffff80000010a0eb:	68 a0 00 00 00       	pushq  $0xa0$/;"	l
ffff80000010a0f0	kernel.asm	/^ffff80000010a0f0:	e9 a4 f0 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff80000010a0f5	kernel.asm	/^ffff80000010a0f5 <vector161>:$/;"	l
ffff80000010a0f5	kernel.asm	/^ffff80000010a0f5:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a0f7	kernel.asm	/^ffff80000010a0f7:	68 a1 00 00 00       	pushq  $0xa1$/;"	l
ffff80000010a0fc	kernel.asm	/^ffff80000010a0fc:	e9 98 f0 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff80000010a101	kernel.asm	/^ffff80000010a101 <vector162>:$/;"	l
ffff80000010a101	kernel.asm	/^ffff80000010a101:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a103	kernel.asm	/^ffff80000010a103:	68 a2 00 00 00       	pushq  $0xa2$/;"	l
ffff80000010a108	kernel.asm	/^ffff80000010a108:	e9 8c f0 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff80000010a10d	kernel.asm	/^ffff80000010a10d <vector163>:$/;"	l
ffff80000010a10d	kernel.asm	/^ffff80000010a10d:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a10f	kernel.asm	/^ffff80000010a10f:	68 a3 00 00 00       	pushq  $0xa3$/;"	l
ffff80000010a114	kernel.asm	/^ffff80000010a114:	e9 80 f0 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff80000010a119	kernel.asm	/^ffff80000010a119 <vector164>:$/;"	l
ffff80000010a119	kernel.asm	/^ffff80000010a119:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a11b	kernel.asm	/^ffff80000010a11b:	68 a4 00 00 00       	pushq  $0xa4$/;"	l
ffff80000010a120	kernel.asm	/^ffff80000010a120:	e9 74 f0 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff80000010a125	kernel.asm	/^ffff80000010a125 <vector165>:$/;"	l
ffff80000010a125	kernel.asm	/^ffff80000010a125:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a127	kernel.asm	/^ffff80000010a127:	68 a5 00 00 00       	pushq  $0xa5$/;"	l
ffff80000010a12c	kernel.asm	/^ffff80000010a12c:	e9 68 f0 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff80000010a131	kernel.asm	/^ffff80000010a131 <vector166>:$/;"	l
ffff80000010a131	kernel.asm	/^ffff80000010a131:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a133	kernel.asm	/^ffff80000010a133:	68 a6 00 00 00       	pushq  $0xa6$/;"	l
ffff80000010a138	kernel.asm	/^ffff80000010a138:	e9 5c f0 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff80000010a13d	kernel.asm	/^ffff80000010a13d <vector167>:$/;"	l
ffff80000010a13d	kernel.asm	/^ffff80000010a13d:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a13f	kernel.asm	/^ffff80000010a13f:	68 a7 00 00 00       	pushq  $0xa7$/;"	l
ffff80000010a144	kernel.asm	/^ffff80000010a144:	e9 50 f0 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff80000010a149	kernel.asm	/^ffff80000010a149 <vector168>:$/;"	l
ffff80000010a149	kernel.asm	/^ffff80000010a149:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a14b	kernel.asm	/^ffff80000010a14b:	68 a8 00 00 00       	pushq  $0xa8$/;"	l
ffff80000010a150	kernel.asm	/^ffff80000010a150:	e9 44 f0 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff80000010a155	kernel.asm	/^ffff80000010a155 <vector169>:$/;"	l
ffff80000010a155	kernel.asm	/^ffff80000010a155:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a157	kernel.asm	/^ffff80000010a157:	68 a9 00 00 00       	pushq  $0xa9$/;"	l
ffff80000010a15c	kernel.asm	/^ffff80000010a15c:	e9 38 f0 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff80000010a161	kernel.asm	/^ffff80000010a161 <vector170>:$/;"	l
ffff80000010a161	kernel.asm	/^ffff80000010a161:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a163	kernel.asm	/^ffff80000010a163:	68 aa 00 00 00       	pushq  $0xaa$/;"	l
ffff80000010a168	kernel.asm	/^ffff80000010a168:	e9 2c f0 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff80000010a16d	kernel.asm	/^ffff80000010a16d <vector171>:$/;"	l
ffff80000010a16d	kernel.asm	/^ffff80000010a16d:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a16f	kernel.asm	/^ffff80000010a16f:	68 ab 00 00 00       	pushq  $0xab$/;"	l
ffff80000010a174	kernel.asm	/^ffff80000010a174:	e9 20 f0 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff80000010a179	kernel.asm	/^ffff80000010a179 <vector172>:$/;"	l
ffff80000010a179	kernel.asm	/^ffff80000010a179:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a17b	kernel.asm	/^ffff80000010a17b:	68 ac 00 00 00       	pushq  $0xac$/;"	l
ffff80000010a180	kernel.asm	/^ffff80000010a180:	e9 14 f0 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff80000010a185	kernel.asm	/^ffff80000010a185 <vector173>:$/;"	l
ffff80000010a185	kernel.asm	/^ffff80000010a185:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a187	kernel.asm	/^ffff80000010a187:	68 ad 00 00 00       	pushq  $0xad$/;"	l
ffff80000010a18c	kernel.asm	/^ffff80000010a18c:	e9 08 f0 ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff80000010a191	kernel.asm	/^ffff80000010a191 <vector174>:$/;"	l
ffff80000010a191	kernel.asm	/^ffff80000010a191:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a193	kernel.asm	/^ffff80000010a193:	68 ae 00 00 00       	pushq  $0xae$/;"	l
ffff80000010a198	kernel.asm	/^ffff80000010a198:	e9 fc ef ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff80000010a19d	kernel.asm	/^ffff80000010a19d <vector175>:$/;"	l
ffff80000010a19d	kernel.asm	/^ffff80000010a19d:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a19f	kernel.asm	/^ffff80000010a19f:	68 af 00 00 00       	pushq  $0xaf$/;"	l
ffff80000010a1a4	kernel.asm	/^ffff80000010a1a4:	e9 f0 ef ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff80000010a1a9	kernel.asm	/^ffff80000010a1a9 <vector176>:$/;"	l
ffff80000010a1a9	kernel.asm	/^ffff80000010a1a9:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a1ab	kernel.asm	/^ffff80000010a1ab:	68 b0 00 00 00       	pushq  $0xb0$/;"	l
ffff80000010a1b0	kernel.asm	/^ffff80000010a1b0:	e9 e4 ef ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff80000010a1b5	kernel.asm	/^ffff80000010a1b5 <vector177>:$/;"	l
ffff80000010a1b5	kernel.asm	/^ffff80000010a1b5:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a1b7	kernel.asm	/^ffff80000010a1b7:	68 b1 00 00 00       	pushq  $0xb1$/;"	l
ffff80000010a1bc	kernel.asm	/^ffff80000010a1bc:	e9 d8 ef ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff80000010a1c1	kernel.asm	/^ffff80000010a1c1 <vector178>:$/;"	l
ffff80000010a1c1	kernel.asm	/^ffff80000010a1c1:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a1c3	kernel.asm	/^ffff80000010a1c3:	68 b2 00 00 00       	pushq  $0xb2$/;"	l
ffff80000010a1c8	kernel.asm	/^ffff80000010a1c8:	e9 cc ef ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff80000010a1cd	kernel.asm	/^ffff80000010a1cd <vector179>:$/;"	l
ffff80000010a1cd	kernel.asm	/^ffff80000010a1cd:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a1cf	kernel.asm	/^ffff80000010a1cf:	68 b3 00 00 00       	pushq  $0xb3$/;"	l
ffff80000010a1d4	kernel.asm	/^ffff80000010a1d4:	e9 c0 ef ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff80000010a1d9	kernel.asm	/^ffff80000010a1d9 <vector180>:$/;"	l
ffff80000010a1d9	kernel.asm	/^ffff80000010a1d9:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a1db	kernel.asm	/^ffff80000010a1db:	68 b4 00 00 00       	pushq  $0xb4$/;"	l
ffff80000010a1e0	kernel.asm	/^ffff80000010a1e0:	e9 b4 ef ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff80000010a1e5	kernel.asm	/^ffff80000010a1e5 <vector181>:$/;"	l
ffff80000010a1e5	kernel.asm	/^ffff80000010a1e5:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a1e7	kernel.asm	/^ffff80000010a1e7:	68 b5 00 00 00       	pushq  $0xb5$/;"	l
ffff80000010a1ec	kernel.asm	/^ffff80000010a1ec:	e9 a8 ef ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff80000010a1f1	kernel.asm	/^ffff80000010a1f1 <vector182>:$/;"	l
ffff80000010a1f1	kernel.asm	/^ffff80000010a1f1:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a1f3	kernel.asm	/^ffff80000010a1f3:	68 b6 00 00 00       	pushq  $0xb6$/;"	l
ffff80000010a1f8	kernel.asm	/^ffff80000010a1f8:	e9 9c ef ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff80000010a1fd	kernel.asm	/^ffff80000010a1fd <vector183>:$/;"	l
ffff80000010a1fd	kernel.asm	/^ffff80000010a1fd:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a1ff	kernel.asm	/^ffff80000010a1ff:	68 b7 00 00 00       	pushq  $0xb7$/;"	l
ffff80000010a204	kernel.asm	/^ffff80000010a204:	e9 90 ef ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff80000010a209	kernel.asm	/^ffff80000010a209 <vector184>:$/;"	l
ffff80000010a209	kernel.asm	/^ffff80000010a209:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a20b	kernel.asm	/^ffff80000010a20b:	68 b8 00 00 00       	pushq  $0xb8$/;"	l
ffff80000010a210	kernel.asm	/^ffff80000010a210:	e9 84 ef ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff80000010a215	kernel.asm	/^ffff80000010a215 <vector185>:$/;"	l
ffff80000010a215	kernel.asm	/^ffff80000010a215:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a217	kernel.asm	/^ffff80000010a217:	68 b9 00 00 00       	pushq  $0xb9$/;"	l
ffff80000010a21c	kernel.asm	/^ffff80000010a21c:	e9 78 ef ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff80000010a221	kernel.asm	/^ffff80000010a221 <vector186>:$/;"	l
ffff80000010a221	kernel.asm	/^ffff80000010a221:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a223	kernel.asm	/^ffff80000010a223:	68 ba 00 00 00       	pushq  $0xba$/;"	l
ffff80000010a228	kernel.asm	/^ffff80000010a228:	e9 6c ef ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff80000010a22d	kernel.asm	/^ffff80000010a22d <vector187>:$/;"	l
ffff80000010a22d	kernel.asm	/^ffff80000010a22d:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a22f	kernel.asm	/^ffff80000010a22f:	68 bb 00 00 00       	pushq  $0xbb$/;"	l
ffff80000010a234	kernel.asm	/^ffff80000010a234:	e9 60 ef ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff80000010a239	kernel.asm	/^ffff80000010a239 <vector188>:$/;"	l
ffff80000010a239	kernel.asm	/^ffff80000010a239:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a23b	kernel.asm	/^ffff80000010a23b:	68 bc 00 00 00       	pushq  $0xbc$/;"	l
ffff80000010a240	kernel.asm	/^ffff80000010a240:	e9 54 ef ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff80000010a245	kernel.asm	/^ffff80000010a245 <vector189>:$/;"	l
ffff80000010a245	kernel.asm	/^ffff80000010a245:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a247	kernel.asm	/^ffff80000010a247:	68 bd 00 00 00       	pushq  $0xbd$/;"	l
ffff80000010a24c	kernel.asm	/^ffff80000010a24c:	e9 48 ef ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff80000010a251	kernel.asm	/^ffff80000010a251 <vector190>:$/;"	l
ffff80000010a251	kernel.asm	/^ffff80000010a251:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a253	kernel.asm	/^ffff80000010a253:	68 be 00 00 00       	pushq  $0xbe$/;"	l
ffff80000010a258	kernel.asm	/^ffff80000010a258:	e9 3c ef ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff80000010a25d	kernel.asm	/^ffff80000010a25d <vector191>:$/;"	l
ffff80000010a25d	kernel.asm	/^ffff80000010a25d:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a25f	kernel.asm	/^ffff80000010a25f:	68 bf 00 00 00       	pushq  $0xbf$/;"	l
ffff80000010a264	kernel.asm	/^ffff80000010a264:	e9 30 ef ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff80000010a269	kernel.asm	/^ffff80000010a269 <vector192>:$/;"	l
ffff80000010a269	kernel.asm	/^ffff80000010a269:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a26b	kernel.asm	/^ffff80000010a26b:	68 c0 00 00 00       	pushq  $0xc0$/;"	l
ffff80000010a270	kernel.asm	/^ffff80000010a270:	e9 24 ef ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff80000010a275	kernel.asm	/^ffff80000010a275 <vector193>:$/;"	l
ffff80000010a275	kernel.asm	/^ffff80000010a275:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a277	kernel.asm	/^ffff80000010a277:	68 c1 00 00 00       	pushq  $0xc1$/;"	l
ffff80000010a27c	kernel.asm	/^ffff80000010a27c:	e9 18 ef ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff80000010a281	kernel.asm	/^ffff80000010a281 <vector194>:$/;"	l
ffff80000010a281	kernel.asm	/^ffff80000010a281:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a283	kernel.asm	/^ffff80000010a283:	68 c2 00 00 00       	pushq  $0xc2$/;"	l
ffff80000010a288	kernel.asm	/^ffff80000010a288:	e9 0c ef ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff80000010a28d	kernel.asm	/^ffff80000010a28d <vector195>:$/;"	l
ffff80000010a28d	kernel.asm	/^ffff80000010a28d:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a28f	kernel.asm	/^ffff80000010a28f:	68 c3 00 00 00       	pushq  $0xc3$/;"	l
ffff80000010a294	kernel.asm	/^ffff80000010a294:	e9 00 ef ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff80000010a299	kernel.asm	/^ffff80000010a299 <vector196>:$/;"	l
ffff80000010a299	kernel.asm	/^ffff80000010a299:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a29b	kernel.asm	/^ffff80000010a29b:	68 c4 00 00 00       	pushq  $0xc4$/;"	l
ffff80000010a2a0	kernel.asm	/^ffff80000010a2a0:	e9 f4 ee ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff80000010a2a5	kernel.asm	/^ffff80000010a2a5 <vector197>:$/;"	l
ffff80000010a2a5	kernel.asm	/^ffff80000010a2a5:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a2a7	kernel.asm	/^ffff80000010a2a7:	68 c5 00 00 00       	pushq  $0xc5$/;"	l
ffff80000010a2ac	kernel.asm	/^ffff80000010a2ac:	e9 e8 ee ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff80000010a2b1	kernel.asm	/^ffff80000010a2b1 <vector198>:$/;"	l
ffff80000010a2b1	kernel.asm	/^ffff80000010a2b1:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a2b3	kernel.asm	/^ffff80000010a2b3:	68 c6 00 00 00       	pushq  $0xc6$/;"	l
ffff80000010a2b8	kernel.asm	/^ffff80000010a2b8:	e9 dc ee ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff80000010a2bd	kernel.asm	/^ffff80000010a2bd <vector199>:$/;"	l
ffff80000010a2bd	kernel.asm	/^ffff80000010a2bd:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a2bf	kernel.asm	/^ffff80000010a2bf:	68 c7 00 00 00       	pushq  $0xc7$/;"	l
ffff80000010a2c4	kernel.asm	/^ffff80000010a2c4:	e9 d0 ee ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff80000010a2c9	kernel.asm	/^ffff80000010a2c9 <vector200>:$/;"	l
ffff80000010a2c9	kernel.asm	/^ffff80000010a2c9:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a2cb	kernel.asm	/^ffff80000010a2cb:	68 c8 00 00 00       	pushq  $0xc8$/;"	l
ffff80000010a2d0	kernel.asm	/^ffff80000010a2d0:	e9 c4 ee ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff80000010a2d5	kernel.asm	/^ffff80000010a2d5 <vector201>:$/;"	l
ffff80000010a2d5	kernel.asm	/^ffff80000010a2d5:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a2d7	kernel.asm	/^ffff80000010a2d7:	68 c9 00 00 00       	pushq  $0xc9$/;"	l
ffff80000010a2dc	kernel.asm	/^ffff80000010a2dc:	e9 b8 ee ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff80000010a2e1	kernel.asm	/^ffff80000010a2e1 <vector202>:$/;"	l
ffff80000010a2e1	kernel.asm	/^ffff80000010a2e1:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a2e3	kernel.asm	/^ffff80000010a2e3:	68 ca 00 00 00       	pushq  $0xca$/;"	l
ffff80000010a2e8	kernel.asm	/^ffff80000010a2e8:	e9 ac ee ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff80000010a2ed	kernel.asm	/^ffff80000010a2ed <vector203>:$/;"	l
ffff80000010a2ed	kernel.asm	/^ffff80000010a2ed:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a2ef	kernel.asm	/^ffff80000010a2ef:	68 cb 00 00 00       	pushq  $0xcb$/;"	l
ffff80000010a2f4	kernel.asm	/^ffff80000010a2f4:	e9 a0 ee ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff80000010a2f9	kernel.asm	/^ffff80000010a2f9 <vector204>:$/;"	l
ffff80000010a2f9	kernel.asm	/^ffff80000010a2f9:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a2fb	kernel.asm	/^ffff80000010a2fb:	68 cc 00 00 00       	pushq  $0xcc$/;"	l
ffff80000010a300	kernel.asm	/^ffff80000010a300:	e9 94 ee ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff80000010a305	kernel.asm	/^ffff80000010a305 <vector205>:$/;"	l
ffff80000010a305	kernel.asm	/^ffff80000010a305:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a307	kernel.asm	/^ffff80000010a307:	68 cd 00 00 00       	pushq  $0xcd$/;"	l
ffff80000010a30c	kernel.asm	/^ffff80000010a30c:	e9 88 ee ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff80000010a311	kernel.asm	/^ffff80000010a311 <vector206>:$/;"	l
ffff80000010a311	kernel.asm	/^ffff80000010a311:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a313	kernel.asm	/^ffff80000010a313:	68 ce 00 00 00       	pushq  $0xce$/;"	l
ffff80000010a318	kernel.asm	/^ffff80000010a318:	e9 7c ee ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff80000010a31d	kernel.asm	/^ffff80000010a31d <vector207>:$/;"	l
ffff80000010a31d	kernel.asm	/^ffff80000010a31d:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a31f	kernel.asm	/^ffff80000010a31f:	68 cf 00 00 00       	pushq  $0xcf$/;"	l
ffff80000010a324	kernel.asm	/^ffff80000010a324:	e9 70 ee ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff80000010a329	kernel.asm	/^ffff80000010a329 <vector208>:$/;"	l
ffff80000010a329	kernel.asm	/^ffff80000010a329:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a32b	kernel.asm	/^ffff80000010a32b:	68 d0 00 00 00       	pushq  $0xd0$/;"	l
ffff80000010a330	kernel.asm	/^ffff80000010a330:	e9 64 ee ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff80000010a335	kernel.asm	/^ffff80000010a335 <vector209>:$/;"	l
ffff80000010a335	kernel.asm	/^ffff80000010a335:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a337	kernel.asm	/^ffff80000010a337:	68 d1 00 00 00       	pushq  $0xd1$/;"	l
ffff80000010a33c	kernel.asm	/^ffff80000010a33c:	e9 58 ee ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff80000010a341	kernel.asm	/^ffff80000010a341 <vector210>:$/;"	l
ffff80000010a341	kernel.asm	/^ffff80000010a341:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a343	kernel.asm	/^ffff80000010a343:	68 d2 00 00 00       	pushq  $0xd2$/;"	l
ffff80000010a348	kernel.asm	/^ffff80000010a348:	e9 4c ee ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff80000010a34d	kernel.asm	/^ffff80000010a34d <vector211>:$/;"	l
ffff80000010a34d	kernel.asm	/^ffff80000010a34d:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a34f	kernel.asm	/^ffff80000010a34f:	68 d3 00 00 00       	pushq  $0xd3$/;"	l
ffff80000010a354	kernel.asm	/^ffff80000010a354:	e9 40 ee ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff80000010a359	kernel.asm	/^ffff80000010a359 <vector212>:$/;"	l
ffff80000010a359	kernel.asm	/^ffff80000010a359:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a35b	kernel.asm	/^ffff80000010a35b:	68 d4 00 00 00       	pushq  $0xd4$/;"	l
ffff80000010a360	kernel.asm	/^ffff80000010a360:	e9 34 ee ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff80000010a365	kernel.asm	/^ffff80000010a365 <vector213>:$/;"	l
ffff80000010a365	kernel.asm	/^ffff80000010a365:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a367	kernel.asm	/^ffff80000010a367:	68 d5 00 00 00       	pushq  $0xd5$/;"	l
ffff80000010a36c	kernel.asm	/^ffff80000010a36c:	e9 28 ee ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff80000010a371	kernel.asm	/^ffff80000010a371 <vector214>:$/;"	l
ffff80000010a371	kernel.asm	/^ffff80000010a371:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a373	kernel.asm	/^ffff80000010a373:	68 d6 00 00 00       	pushq  $0xd6$/;"	l
ffff80000010a378	kernel.asm	/^ffff80000010a378:	e9 1c ee ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff80000010a37d	kernel.asm	/^ffff80000010a37d <vector215>:$/;"	l
ffff80000010a37d	kernel.asm	/^ffff80000010a37d:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a37f	kernel.asm	/^ffff80000010a37f:	68 d7 00 00 00       	pushq  $0xd7$/;"	l
ffff80000010a384	kernel.asm	/^ffff80000010a384:	e9 10 ee ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff80000010a389	kernel.asm	/^ffff80000010a389 <vector216>:$/;"	l
ffff80000010a389	kernel.asm	/^ffff80000010a389:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a38b	kernel.asm	/^ffff80000010a38b:	68 d8 00 00 00       	pushq  $0xd8$/;"	l
ffff80000010a390	kernel.asm	/^ffff80000010a390:	e9 04 ee ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff80000010a395	kernel.asm	/^ffff80000010a395 <vector217>:$/;"	l
ffff80000010a395	kernel.asm	/^ffff80000010a395:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a397	kernel.asm	/^ffff80000010a397:	68 d9 00 00 00       	pushq  $0xd9$/;"	l
ffff80000010a39c	kernel.asm	/^ffff80000010a39c:	e9 f8 ed ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff80000010a3a1	kernel.asm	/^ffff80000010a3a1 <vector218>:$/;"	l
ffff80000010a3a1	kernel.asm	/^ffff80000010a3a1:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a3a3	kernel.asm	/^ffff80000010a3a3:	68 da 00 00 00       	pushq  $0xda$/;"	l
ffff80000010a3a8	kernel.asm	/^ffff80000010a3a8:	e9 ec ed ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff80000010a3ad	kernel.asm	/^ffff80000010a3ad <vector219>:$/;"	l
ffff80000010a3ad	kernel.asm	/^ffff80000010a3ad:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a3af	kernel.asm	/^ffff80000010a3af:	68 db 00 00 00       	pushq  $0xdb$/;"	l
ffff80000010a3b4	kernel.asm	/^ffff80000010a3b4:	e9 e0 ed ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff80000010a3b9	kernel.asm	/^ffff80000010a3b9 <vector220>:$/;"	l
ffff80000010a3b9	kernel.asm	/^ffff80000010a3b9:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a3bb	kernel.asm	/^ffff80000010a3bb:	68 dc 00 00 00       	pushq  $0xdc$/;"	l
ffff80000010a3c0	kernel.asm	/^ffff80000010a3c0:	e9 d4 ed ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff80000010a3c5	kernel.asm	/^ffff80000010a3c5 <vector221>:$/;"	l
ffff80000010a3c5	kernel.asm	/^ffff80000010a3c5:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a3c7	kernel.asm	/^ffff80000010a3c7:	68 dd 00 00 00       	pushq  $0xdd$/;"	l
ffff80000010a3cc	kernel.asm	/^ffff80000010a3cc:	e9 c8 ed ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff80000010a3d1	kernel.asm	/^ffff80000010a3d1 <vector222>:$/;"	l
ffff80000010a3d1	kernel.asm	/^ffff80000010a3d1:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a3d3	kernel.asm	/^ffff80000010a3d3:	68 de 00 00 00       	pushq  $0xde$/;"	l
ffff80000010a3d8	kernel.asm	/^ffff80000010a3d8:	e9 bc ed ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff80000010a3dd	kernel.asm	/^ffff80000010a3dd <vector223>:$/;"	l
ffff80000010a3dd	kernel.asm	/^ffff80000010a3dd:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a3df	kernel.asm	/^ffff80000010a3df:	68 df 00 00 00       	pushq  $0xdf$/;"	l
ffff80000010a3e4	kernel.asm	/^ffff80000010a3e4:	e9 b0 ed ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff80000010a3e9	kernel.asm	/^ffff80000010a3e9 <vector224>:$/;"	l
ffff80000010a3e9	kernel.asm	/^ffff80000010a3e9:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a3eb	kernel.asm	/^ffff80000010a3eb:	68 e0 00 00 00       	pushq  $0xe0$/;"	l
ffff80000010a3f0	kernel.asm	/^ffff80000010a3f0:	e9 a4 ed ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff80000010a3f5	kernel.asm	/^ffff80000010a3f5 <vector225>:$/;"	l
ffff80000010a3f5	kernel.asm	/^ffff80000010a3f5:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a3f7	kernel.asm	/^ffff80000010a3f7:	68 e1 00 00 00       	pushq  $0xe1$/;"	l
ffff80000010a3fc	kernel.asm	/^ffff80000010a3fc:	e9 98 ed ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff80000010a401	kernel.asm	/^ffff80000010a401 <vector226>:$/;"	l
ffff80000010a401	kernel.asm	/^ffff80000010a401:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a403	kernel.asm	/^ffff80000010a403:	68 e2 00 00 00       	pushq  $0xe2$/;"	l
ffff80000010a408	kernel.asm	/^ffff80000010a408:	e9 8c ed ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff80000010a40d	kernel.asm	/^ffff80000010a40d <vector227>:$/;"	l
ffff80000010a40d	kernel.asm	/^ffff80000010a40d:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a40f	kernel.asm	/^ffff80000010a40f:	68 e3 00 00 00       	pushq  $0xe3$/;"	l
ffff80000010a414	kernel.asm	/^ffff80000010a414:	e9 80 ed ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff80000010a419	kernel.asm	/^ffff80000010a419 <vector228>:$/;"	l
ffff80000010a419	kernel.asm	/^ffff80000010a419:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a41b	kernel.asm	/^ffff80000010a41b:	68 e4 00 00 00       	pushq  $0xe4$/;"	l
ffff80000010a420	kernel.asm	/^ffff80000010a420:	e9 74 ed ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff80000010a425	kernel.asm	/^ffff80000010a425 <vector229>:$/;"	l
ffff80000010a425	kernel.asm	/^ffff80000010a425:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a427	kernel.asm	/^ffff80000010a427:	68 e5 00 00 00       	pushq  $0xe5$/;"	l
ffff80000010a42c	kernel.asm	/^ffff80000010a42c:	e9 68 ed ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff80000010a431	kernel.asm	/^ffff80000010a431 <vector230>:$/;"	l
ffff80000010a431	kernel.asm	/^ffff80000010a431:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a433	kernel.asm	/^ffff80000010a433:	68 e6 00 00 00       	pushq  $0xe6$/;"	l
ffff80000010a438	kernel.asm	/^ffff80000010a438:	e9 5c ed ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff80000010a43d	kernel.asm	/^ffff80000010a43d <vector231>:$/;"	l
ffff80000010a43d	kernel.asm	/^ffff80000010a43d:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a43f	kernel.asm	/^ffff80000010a43f:	68 e7 00 00 00       	pushq  $0xe7$/;"	l
ffff80000010a444	kernel.asm	/^ffff80000010a444:	e9 50 ed ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff80000010a449	kernel.asm	/^ffff80000010a449 <vector232>:$/;"	l
ffff80000010a449	kernel.asm	/^ffff80000010a449:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a44b	kernel.asm	/^ffff80000010a44b:	68 e8 00 00 00       	pushq  $0xe8$/;"	l
ffff80000010a450	kernel.asm	/^ffff80000010a450:	e9 44 ed ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff80000010a455	kernel.asm	/^ffff80000010a455 <vector233>:$/;"	l
ffff80000010a455	kernel.asm	/^ffff80000010a455:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a457	kernel.asm	/^ffff80000010a457:	68 e9 00 00 00       	pushq  $0xe9$/;"	l
ffff80000010a45c	kernel.asm	/^ffff80000010a45c:	e9 38 ed ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff80000010a461	kernel.asm	/^ffff80000010a461 <vector234>:$/;"	l
ffff80000010a461	kernel.asm	/^ffff80000010a461:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a463	kernel.asm	/^ffff80000010a463:	68 ea 00 00 00       	pushq  $0xea$/;"	l
ffff80000010a468	kernel.asm	/^ffff80000010a468:	e9 2c ed ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff80000010a46d	kernel.asm	/^ffff80000010a46d <vector235>:$/;"	l
ffff80000010a46d	kernel.asm	/^ffff80000010a46d:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a46f	kernel.asm	/^ffff80000010a46f:	68 eb 00 00 00       	pushq  $0xeb$/;"	l
ffff80000010a474	kernel.asm	/^ffff80000010a474:	e9 20 ed ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff80000010a479	kernel.asm	/^ffff80000010a479 <vector236>:$/;"	l
ffff80000010a479	kernel.asm	/^ffff80000010a479:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a47b	kernel.asm	/^ffff80000010a47b:	68 ec 00 00 00       	pushq  $0xec$/;"	l
ffff80000010a480	kernel.asm	/^ffff80000010a480:	e9 14 ed ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff80000010a485	kernel.asm	/^ffff80000010a485 <vector237>:$/;"	l
ffff80000010a485	kernel.asm	/^ffff80000010a485:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a487	kernel.asm	/^ffff80000010a487:	68 ed 00 00 00       	pushq  $0xed$/;"	l
ffff80000010a48c	kernel.asm	/^ffff80000010a48c:	e9 08 ed ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff80000010a491	kernel.asm	/^ffff80000010a491 <vector238>:$/;"	l
ffff80000010a491	kernel.asm	/^ffff80000010a491:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a493	kernel.asm	/^ffff80000010a493:	68 ee 00 00 00       	pushq  $0xee$/;"	l
ffff80000010a498	kernel.asm	/^ffff80000010a498:	e9 fc ec ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff80000010a49d	kernel.asm	/^ffff80000010a49d <vector239>:$/;"	l
ffff80000010a49d	kernel.asm	/^ffff80000010a49d:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a49f	kernel.asm	/^ffff80000010a49f:	68 ef 00 00 00       	pushq  $0xef$/;"	l
ffff80000010a4a4	kernel.asm	/^ffff80000010a4a4:	e9 f0 ec ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff80000010a4a9	kernel.asm	/^ffff80000010a4a9 <vector240>:$/;"	l
ffff80000010a4a9	kernel.asm	/^ffff80000010a4a9:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a4ab	kernel.asm	/^ffff80000010a4ab:	68 f0 00 00 00       	pushq  $0xf0$/;"	l
ffff80000010a4b0	kernel.asm	/^ffff80000010a4b0:	e9 e4 ec ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff80000010a4b5	kernel.asm	/^ffff80000010a4b5 <vector241>:$/;"	l
ffff80000010a4b5	kernel.asm	/^ffff80000010a4b5:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a4b7	kernel.asm	/^ffff80000010a4b7:	68 f1 00 00 00       	pushq  $0xf1$/;"	l
ffff80000010a4bc	kernel.asm	/^ffff80000010a4bc:	e9 d8 ec ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff80000010a4c1	kernel.asm	/^ffff80000010a4c1 <vector242>:$/;"	l
ffff80000010a4c1	kernel.asm	/^ffff80000010a4c1:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a4c3	kernel.asm	/^ffff80000010a4c3:	68 f2 00 00 00       	pushq  $0xf2$/;"	l
ffff80000010a4c8	kernel.asm	/^ffff80000010a4c8:	e9 cc ec ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff80000010a4cd	kernel.asm	/^ffff80000010a4cd <vector243>:$/;"	l
ffff80000010a4cd	kernel.asm	/^ffff80000010a4cd:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a4cf	kernel.asm	/^ffff80000010a4cf:	68 f3 00 00 00       	pushq  $0xf3$/;"	l
ffff80000010a4d4	kernel.asm	/^ffff80000010a4d4:	e9 c0 ec ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff80000010a4d9	kernel.asm	/^ffff80000010a4d9 <vector244>:$/;"	l
ffff80000010a4d9	kernel.asm	/^ffff80000010a4d9:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a4db	kernel.asm	/^ffff80000010a4db:	68 f4 00 00 00       	pushq  $0xf4$/;"	l
ffff80000010a4e0	kernel.asm	/^ffff80000010a4e0:	e9 b4 ec ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff80000010a4e5	kernel.asm	/^ffff80000010a4e5 <vector245>:$/;"	l
ffff80000010a4e5	kernel.asm	/^ffff80000010a4e5:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a4e7	kernel.asm	/^ffff80000010a4e7:	68 f5 00 00 00       	pushq  $0xf5$/;"	l
ffff80000010a4ec	kernel.asm	/^ffff80000010a4ec:	e9 a8 ec ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff80000010a4f1	kernel.asm	/^ffff80000010a4f1 <vector246>:$/;"	l
ffff80000010a4f1	kernel.asm	/^ffff80000010a4f1:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a4f3	kernel.asm	/^ffff80000010a4f3:	68 f6 00 00 00       	pushq  $0xf6$/;"	l
ffff80000010a4f8	kernel.asm	/^ffff80000010a4f8:	e9 9c ec ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff80000010a4fd	kernel.asm	/^ffff80000010a4fd <vector247>:$/;"	l
ffff80000010a4fd	kernel.asm	/^ffff80000010a4fd:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a4ff	kernel.asm	/^ffff80000010a4ff:	68 f7 00 00 00       	pushq  $0xf7$/;"	l
ffff80000010a504	kernel.asm	/^ffff80000010a504:	e9 90 ec ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff80000010a509	kernel.asm	/^ffff80000010a509 <vector248>:$/;"	l
ffff80000010a509	kernel.asm	/^ffff80000010a509:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a50b	kernel.asm	/^ffff80000010a50b:	68 f8 00 00 00       	pushq  $0xf8$/;"	l
ffff80000010a510	kernel.asm	/^ffff80000010a510:	e9 84 ec ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff80000010a515	kernel.asm	/^ffff80000010a515 <vector249>:$/;"	l
ffff80000010a515	kernel.asm	/^ffff80000010a515:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a517	kernel.asm	/^ffff80000010a517:	68 f9 00 00 00       	pushq  $0xf9$/;"	l
ffff80000010a51c	kernel.asm	/^ffff80000010a51c:	e9 78 ec ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff80000010a521	kernel.asm	/^ffff80000010a521 <vector250>:$/;"	l
ffff80000010a521	kernel.asm	/^ffff80000010a521:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a523	kernel.asm	/^ffff80000010a523:	68 fa 00 00 00       	pushq  $0xfa$/;"	l
ffff80000010a528	kernel.asm	/^ffff80000010a528:	e9 6c ec ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff80000010a52d	kernel.asm	/^ffff80000010a52d <vector251>:$/;"	l
ffff80000010a52d	kernel.asm	/^ffff80000010a52d:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a52f	kernel.asm	/^ffff80000010a52f:	68 fb 00 00 00       	pushq  $0xfb$/;"	l
ffff80000010a534	kernel.asm	/^ffff80000010a534:	e9 60 ec ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff80000010a539	kernel.asm	/^ffff80000010a539 <vector252>:$/;"	l
ffff80000010a539	kernel.asm	/^ffff80000010a539:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a53b	kernel.asm	/^ffff80000010a53b:	68 fc 00 00 00       	pushq  $0xfc$/;"	l
ffff80000010a540	kernel.asm	/^ffff80000010a540:	e9 54 ec ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff80000010a545	kernel.asm	/^ffff80000010a545 <vector253>:$/;"	l
ffff80000010a545	kernel.asm	/^ffff80000010a545:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a547	kernel.asm	/^ffff80000010a547:	68 fd 00 00 00       	pushq  $0xfd$/;"	l
ffff80000010a54c	kernel.asm	/^ffff80000010a54c:	e9 48 ec ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff80000010a551	kernel.asm	/^ffff80000010a551 <vector254>:$/;"	l
ffff80000010a551	kernel.asm	/^ffff80000010a551:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a553	kernel.asm	/^ffff80000010a553:	68 fe 00 00 00       	pushq  $0xfe$/;"	l
ffff80000010a558	kernel.asm	/^ffff80000010a558:	e9 3c ec ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff80000010a55d	kernel.asm	/^ffff80000010a55d <vector255>:$/;"	l
ffff80000010a55d	kernel.asm	/^ffff80000010a55d:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a55f	kernel.asm	/^ffff80000010a55f:	68 ff 00 00 00       	pushq  $0xff$/;"	l
ffff80000010a564	kernel.asm	/^ffff80000010a564:	e9 30 ec ff ff       	jmpq   ffff800000109199 <alltraps>$/;"	l
ffff80000010a569	kernel.asm	/^ffff80000010a569 <lgdt>:$/;"	l
ffff80000010a569	kernel.asm	/^ffff80000010a569:	55                   	push   %rbp$/;"	l
ffff80000010a56a	kernel.asm	/^ffff80000010a56a:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010a56d	kernel.asm	/^ffff80000010a56d:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ffff80000010a571	kernel.asm	/^ffff80000010a571:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
ffff80000010a575	kernel.asm	/^ffff80000010a575:	89 75 e4             	mov    %esi,-0x1c(%rbp)$/;"	l
ffff80000010a578	kernel.asm	/^ffff80000010a578:	8b 45 e4             	mov    -0x1c(%rbp),%eax$/;"	l
ffff80000010a57b	kernel.asm	/^ffff80000010a57b:	83 e8 01             	sub    $0x1,%eax$/;"	l
ffff80000010a57e	kernel.asm	/^ffff80000010a57e:	66 89 45 f0          	mov    %ax,-0x10(%rbp)$/;"	l
ffff80000010a582	kernel.asm	/^ffff80000010a582:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010a586	kernel.asm	/^ffff80000010a586:	66 89 45 f2          	mov    %ax,-0xe(%rbp)$/;"	l
ffff80000010a58a	kernel.asm	/^ffff80000010a58a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010a58e	kernel.asm	/^ffff80000010a58e:	48 c1 e8 10          	shr    $0x10,%rax$/;"	l
ffff80000010a592	kernel.asm	/^ffff80000010a592:	66 89 45 f4          	mov    %ax,-0xc(%rbp)$/;"	l
ffff80000010a596	kernel.asm	/^ffff80000010a596:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010a59a	kernel.asm	/^ffff80000010a59a:	48 c1 e8 20          	shr    $0x20,%rax$/;"	l
ffff80000010a59e	kernel.asm	/^ffff80000010a59e:	66 89 45 f6          	mov    %ax,-0xa(%rbp)$/;"	l
ffff80000010a5a2	kernel.asm	/^ffff80000010a5a2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010a5a6	kernel.asm	/^ffff80000010a5a6:	48 c1 e8 30          	shr    $0x30,%rax$/;"	l
ffff80000010a5aa	kernel.asm	/^ffff80000010a5aa:	66 89 45 f8          	mov    %ax,-0x8(%rbp)$/;"	l
ffff80000010a5ae	kernel.asm	/^ffff80000010a5ae:	48 8d 45 f0          	lea    -0x10(%rbp),%rax$/;"	l
ffff80000010a5b2	kernel.asm	/^ffff80000010a5b2:	0f 01 10             	lgdt   (%rax)$/;"	l
ffff80000010a5b5	kernel.asm	/^ffff80000010a5b5:	90                   	nop$/;"	l
ffff80000010a5b6	kernel.asm	/^ffff80000010a5b6:	c9                   	leaveq $/;"	l
ffff80000010a5b7	kernel.asm	/^ffff80000010a5b7:	c3                   	retq   $/;"	l
ffff80000010a5b8	kernel.asm	/^ffff80000010a5b8 <ltr>:$/;"	l
ffff80000010a5b8	kernel.asm	/^ffff80000010a5b8:	55                   	push   %rbp$/;"	l
ffff80000010a5b9	kernel.asm	/^ffff80000010a5b9:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010a5bc	kernel.asm	/^ffff80000010a5bc:	48 83 ec 08          	sub    $0x8,%rsp$/;"	l
ffff80000010a5c0	kernel.asm	/^ffff80000010a5c0:	89 f8                	mov    %edi,%eax$/;"	l
ffff80000010a5c2	kernel.asm	/^ffff80000010a5c2:	66 89 45 fc          	mov    %ax,-0x4(%rbp)$/;"	l
ffff80000010a5c6	kernel.asm	/^ffff80000010a5c6:	0f b7 45 fc          	movzwl -0x4(%rbp),%eax$/;"	l
ffff80000010a5ca	kernel.asm	/^ffff80000010a5ca:	0f 00 d8             	ltr    %ax$/;"	l
ffff80000010a5cd	kernel.asm	/^ffff80000010a5cd:	90                   	nop$/;"	l
ffff80000010a5ce	kernel.asm	/^ffff80000010a5ce:	c9                   	leaveq $/;"	l
ffff80000010a5cf	kernel.asm	/^ffff80000010a5cf:	c3                   	retq   $/;"	l
ffff80000010a5d0	kernel.asm	/^ffff80000010a5d0 <lcr3>:$/;"	l
ffff80000010a5d0	kernel.asm	/^ffff80000010a5d0:	55                   	push   %rbp$/;"	l
ffff80000010a5d1	kernel.asm	/^ffff80000010a5d1:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010a5d4	kernel.asm	/^ffff80000010a5d4:	48 83 ec 08          	sub    $0x8,%rsp$/;"	l
ffff80000010a5d8	kernel.asm	/^ffff80000010a5d8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)$/;"	l
ffff80000010a5dc	kernel.asm	/^ffff80000010a5dc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010a5e0	kernel.asm	/^ffff80000010a5e0:	0f 22 d8             	mov    %rax,%cr3$/;"	l
ffff80000010a5e3	kernel.asm	/^ffff80000010a5e3:	90                   	nop$/;"	l
ffff80000010a5e4	kernel.asm	/^ffff80000010a5e4:	c9                   	leaveq $/;"	l
ffff80000010a5e5	kernel.asm	/^ffff80000010a5e5:	c3                   	retq   $/;"	l
ffff80000010a5e6	kernel.asm	/^ffff80000010a5e6 <v2p>:$/;"	l
ffff80000010a5e6	kernel.asm	/^ffff80000010a5e6:	55                   	push   %rbp$/;"	l
ffff80000010a5e7	kernel.asm	/^ffff80000010a5e7:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010a5ea	kernel.asm	/^ffff80000010a5ea:	48 83 ec 08          	sub    $0x8,%rsp$/;"	l
ffff80000010a5ee	kernel.asm	/^ffff80000010a5ee:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)$/;"	l
ffff80000010a5f2	kernel.asm	/^ffff80000010a5f2:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx$/;"	l
ffff80000010a5f6	kernel.asm	/^ffff80000010a5f6:	48 b8 00 00 00 00 00 	movabs $0x800000000000,%rax$/;"	l
ffff80000010a5fd	kernel.asm	/^ffff80000010a5fd:	80 00 00 $/;"	l
ffff80000010a600	kernel.asm	/^ffff80000010a600:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff80000010a603	kernel.asm	/^ffff80000010a603:	c9                   	leaveq $/;"	l
ffff80000010a604	kernel.asm	/^ffff80000010a604:	c3                   	retq   $/;"	l
ffff80000010a605	kernel.asm	/^ffff80000010a605 <tss_set_rsp>:$/;"	l
ffff80000010a605	kernel.asm	/^ffff80000010a605:	55                   	push   %rbp$/;"	l
ffff80000010a606	kernel.asm	/^ffff80000010a606:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010a609	kernel.asm	/^ffff80000010a609:	48 83 ec 18          	sub    $0x18,%rsp$/;"	l
ffff80000010a60d	kernel.asm	/^ffff80000010a60d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)$/;"	l
ffff80000010a611	kernel.asm	/^ffff80000010a611:	89 75 f4             	mov    %esi,-0xc(%rbp)$/;"	l
ffff80000010a614	kernel.asm	/^ffff80000010a614:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)$/;"	l
ffff80000010a618	kernel.asm	/^ffff80000010a618:	8b 45 f4             	mov    -0xc(%rbp),%eax$/;"	l
ffff80000010a61b	kernel.asm	/^ffff80000010a61b:	01 c0                	add    %eax,%eax$/;"	l
ffff80000010a61d	kernel.asm	/^ffff80000010a61d:	83 c0 01             	add    $0x1,%eax$/;"	l
ffff80000010a620	kernel.asm	/^ffff80000010a620:	89 c0                	mov    %eax,%eax$/;"	l
ffff80000010a622	kernel.asm	/^ffff80000010a622:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx$/;"	l
ffff80000010a629	kernel.asm	/^ffff80000010a629:	00 $/;"	l
ffff80000010a62a	kernel.asm	/^ffff80000010a62a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010a62e	kernel.asm	/^ffff80000010a62e:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff80000010a631	kernel.asm	/^ffff80000010a631:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx$/;"	l
ffff80000010a635	kernel.asm	/^ffff80000010a635:	89 10                	mov    %edx,(%rax)$/;"	l
ffff80000010a637	kernel.asm	/^ffff80000010a637:	8b 45 f4             	mov    -0xc(%rbp),%eax$/;"	l
ffff80000010a63a	kernel.asm	/^ffff80000010a63a:	83 c0 01             	add    $0x1,%eax$/;"	l
ffff80000010a63d	kernel.asm	/^ffff80000010a63d:	01 c0                	add    %eax,%eax$/;"	l
ffff80000010a63f	kernel.asm	/^ffff80000010a63f:	89 c0                	mov    %eax,%eax$/;"	l
ffff80000010a641	kernel.asm	/^ffff80000010a641:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx$/;"	l
ffff80000010a648	kernel.asm	/^ffff80000010a648:	00 $/;"	l
ffff80000010a649	kernel.asm	/^ffff80000010a649:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010a64d	kernel.asm	/^ffff80000010a64d:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff80000010a650	kernel.asm	/^ffff80000010a650:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx$/;"	l
ffff80000010a654	kernel.asm	/^ffff80000010a654:	48 c1 ea 20          	shr    $0x20,%rdx$/;"	l
ffff80000010a658	kernel.asm	/^ffff80000010a658:	89 10                	mov    %edx,(%rax)$/;"	l
ffff80000010a65a	kernel.asm	/^ffff80000010a65a:	90                   	nop$/;"	l
ffff80000010a65b	kernel.asm	/^ffff80000010a65b:	c9                   	leaveq $/;"	l
ffff80000010a65c	kernel.asm	/^ffff80000010a65c:	c3                   	retq   $/;"	l
ffff80000010a65d	kernel.asm	/^ffff80000010a65d <syscallinit>:$/;"	l
ffff80000010a65d	kernel.asm	/^ffff80000010a65d:	55                   	push   %rbp$/;"	l
ffff80000010a65e	kernel.asm	/^ffff80000010a65e:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010a661	kernel.asm	/^ffff80000010a661:	48 be 00 00 00 00 08 	movabs $0x18000800000000,%rsi$/;"	l
ffff80000010a668	kernel.asm	/^ffff80000010a668:	00 18 00 $/;"	l
ffff80000010a66b	kernel.asm	/^ffff80000010a66b:	bf 81 00 00 c0       	mov    $0xc0000081,%edi$/;"	l
ffff80000010a670	kernel.asm	/^ffff80000010a670:	48 b8 01 01 10 00 00 	movabs $0xffff800000100101,%rax$/;"	l
ffff80000010a677	kernel.asm	/^ffff80000010a677:	80 ff ff $/;"	l
ffff80000010a67a	kernel.asm	/^ffff80000010a67a:	ff d0                	callq  *%rax$/;"	l
ffff80000010a67c	kernel.asm	/^ffff80000010a67c:	48 b8 1a 01 10 00 00 	movabs $0xffff80000010011a,%rax$/;"	l
ffff80000010a683	kernel.asm	/^ffff80000010a683:	80 ff ff $/;"	l
ffff80000010a686	kernel.asm	/^ffff80000010a686:	48 89 c6             	mov    %rax,%rsi$/;"	l
ffff80000010a689	kernel.asm	/^ffff80000010a689:	bf 82 00 00 c0       	mov    $0xc0000082,%edi$/;"	l
ffff80000010a68e	kernel.asm	/^ffff80000010a68e:	48 b8 01 01 10 00 00 	movabs $0xffff800000100101,%rax$/;"	l
ffff80000010a695	kernel.asm	/^ffff80000010a695:	80 ff ff $/;"	l
ffff80000010a698	kernel.asm	/^ffff80000010a698:	ff d0                	callq  *%rax$/;"	l
ffff80000010a69a	kernel.asm	/^ffff80000010a69a:	48 b8 11 01 10 00 00 	movabs $0xffff800000100111,%rax$/;"	l
ffff80000010a6a1	kernel.asm	/^ffff80000010a6a1:	80 ff ff $/;"	l
ffff80000010a6a4	kernel.asm	/^ffff80000010a6a4:	48 89 c6             	mov    %rax,%rsi$/;"	l
ffff80000010a6a7	kernel.asm	/^ffff80000010a6a7:	bf 83 00 00 c0       	mov    $0xc0000083,%edi$/;"	l
ffff80000010a6ac	kernel.asm	/^ffff80000010a6ac:	48 b8 01 01 10 00 00 	movabs $0xffff800000100101,%rax$/;"	l
ffff80000010a6b3	kernel.asm	/^ffff80000010a6b3:	80 ff ff $/;"	l
ffff80000010a6b6	kernel.asm	/^ffff80000010a6b6:	ff d0                	callq  *%rax$/;"	l
ffff80000010a6b8	kernel.asm	/^ffff80000010a6b8:	be 00 77 04 00       	mov    $0x47700,%esi$/;"	l
ffff80000010a6bd	kernel.asm	/^ffff80000010a6bd:	bf 84 00 00 c0       	mov    $0xc0000084,%edi$/;"	l
ffff80000010a6c2	kernel.asm	/^ffff80000010a6c2:	48 b8 01 01 10 00 00 	movabs $0xffff800000100101,%rax$/;"	l
ffff80000010a6c9	kernel.asm	/^ffff80000010a6c9:	80 ff ff $/;"	l
ffff80000010a6cc	kernel.asm	/^ffff80000010a6cc:	ff d0                	callq  *%rax$/;"	l
ffff80000010a6ce	kernel.asm	/^ffff80000010a6ce:	90                   	nop$/;"	l
ffff80000010a6cf	kernel.asm	/^ffff80000010a6cf:	5d                   	pop    %rbp$/;"	l
ffff80000010a6d0	kernel.asm	/^ffff80000010a6d0:	c3                   	retq   $/;"	l
ffff80000010a6d1	kernel.asm	/^ffff80000010a6d1 <seginit>:$/;"	l
ffff80000010a6d1	kernel.asm	/^ffff80000010a6d1:	55                   	push   %rbp$/;"	l
ffff80000010a6d2	kernel.asm	/^ffff80000010a6d2:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010a6d5	kernel.asm	/^ffff80000010a6d5:	48 83 ec 30          	sub    $0x30,%rsp$/;"	l
ffff80000010a6d9	kernel.asm	/^ffff80000010a6d9:	48 b8 9f 40 10 00 00 	movabs $0xffff80000010409f,%rax$/;"	l
ffff80000010a6e0	kernel.asm	/^ffff80000010a6e0:	80 ff ff $/;"	l
ffff80000010a6e3	kernel.asm	/^ffff80000010a6e3:	ff d0                	callq  *%rax$/;"	l
ffff80000010a6e5	kernel.asm	/^ffff80000010a6e5:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff80000010a6e9	kernel.asm	/^ffff80000010a6e9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010a6ed	kernel.asm	/^ffff80000010a6ed:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
ffff80000010a6f2	kernel.asm	/^ffff80000010a6f2:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffff80000010a6f7	kernel.asm	/^ffff80000010a6f7:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010a6fa	kernel.asm	/^ffff80000010a6fa:	48 b8 9b 75 10 00 00 	movabs $0xffff80000010759b,%rax$/;"	l
ffff80000010a701	kernel.asm	/^ffff80000010a701:	80 ff ff $/;"	l
ffff80000010a704	kernel.asm	/^ffff80000010a704:	ff d0                	callq  *%rax$/;"	l
ffff80000010a706	kernel.asm	/^ffff80000010a706:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010a70a	kernel.asm	/^ffff80000010a70a:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ffff80000010a70e	kernel.asm	/^ffff80000010a70e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010a712	kernel.asm	/^ffff80000010a712:	48 05 00 04 00 00    	add    $0x400,%rax$/;"	l
ffff80000010a718	kernel.asm	/^ffff80000010a718:	48 89 45 e8          	mov    %rax,-0x18(%rbp)$/;"	l
ffff80000010a71c	kernel.asm	/^ffff80000010a71c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010a720	kernel.asm	/^ffff80000010a720:	48 83 c0 40          	add    $0x40,%rax$/;"	l
ffff80000010a724	kernel.asm	/^ffff80000010a724:	c7 00 00 00 68 00    	movl   $0x680000,(%rax)$/;"	l
ffff80000010a72a	kernel.asm	/^ffff80000010a72a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010a72e	kernel.asm	/^ffff80000010a72e:	48 05 00 08 00 00    	add    $0x800,%rax$/;"	l
ffff80000010a734	kernel.asm	/^ffff80000010a734:	48 89 c6             	mov    %rax,%rsi$/;"	l
ffff80000010a737	kernel.asm	/^ffff80000010a737:	bf 00 01 00 c0       	mov    $0xc0000100,%edi$/;"	l
ffff80000010a73c	kernel.asm	/^ffff80000010a73c:	48 b8 01 01 10 00 00 	movabs $0xffff800000100101,%rax$/;"	l
ffff80000010a743	kernel.asm	/^ffff80000010a743:	80 ff ff $/;"	l
ffff80000010a746	kernel.asm	/^ffff80000010a746:	ff d0                	callq  *%rax$/;"	l
ffff80000010a748	kernel.asm	/^ffff80000010a748:	48 b8 6b 45 10 00 00 	movabs $0xffff80000010456b,%rax$/;"	l
ffff80000010a74f	kernel.asm	/^ffff80000010a74f:	80 ff ff $/;"	l
ffff80000010a752	kernel.asm	/^ffff80000010a752:	ff d0                	callq  *%rax$/;"	l
ffff80000010a754	kernel.asm	/^ffff80000010a754:	48 98                	cltq   $/;"	l
ffff80000010a756	kernel.asm	/^ffff80000010a756:	48 89 c2             	mov    %rax,%rdx$/;"	l
ffff80000010a759	kernel.asm	/^ffff80000010a759:	48 8d 04 d5 00 00 00 	lea    0x0(,%rdx,8),%rax$/;"	l
ffff80000010a760	kernel.asm	/^ffff80000010a760:	00 $/;"	l
ffff80000010a761	kernel.asm	/^ffff80000010a761:	48 89 c2             	mov    %rax,%rdx$/;"	l
ffff80000010a764	kernel.asm	/^ffff80000010a764:	48 89 d0             	mov    %rdx,%rax$/;"	l
ffff80000010a767	kernel.asm	/^ffff80000010a767:	48 c1 e0 05          	shl    $0x5,%rax$/;"	l
ffff80000010a76b	kernel.asm	/^ffff80000010a76b:	48 29 d0             	sub    %rdx,%rax$/;"	l
ffff80000010a76e	kernel.asm	/^ffff80000010a76e:	48 ba e0 72 11 00 00 	movabs $0xffff8000001172e0,%rdx$/;"	l
ffff80000010a775	kernel.asm	/^ffff80000010a775:	80 ff ff $/;"	l
ffff80000010a778	kernel.asm	/^ffff80000010a778:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff80000010a77b	kernel.asm	/^ffff80000010a77b:	48 89 45 e0          	mov    %rax,-0x20(%rbp)$/;"	l
ffff80000010a77f	kernel.asm	/^ffff80000010a77f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff80000010a783	kernel.asm	/^ffff80000010a783:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx$/;"	l
ffff80000010a787	kernel.asm	/^ffff80000010a787:	48 89 90 f0 00 00 00 	mov    %rdx,0xf0(%rax)$/;"	l
ffff80000010a78e	kernel.asm	/^ffff80000010a78e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff80000010a792	kernel.asm	/^ffff80000010a792:	64 48 89 04 25 f0 ff 	mov    %rax,%fs:0xfffffffffffffff0$/;"	l
ffff80000010a799	kernel.asm	/^ffff80000010a799:	ff ff $/;"	l
ffff80000010a79b	kernel.asm	/^ffff80000010a79b:	64 48 c7 04 25 f8 ff 	movq   $0x0,%fs:0xfffffffffffffff8$/;"	l
ffff80000010a7a2	kernel.asm	/^ffff80000010a7a2:	ff ff 00 00 00 00 $/;"	l
ffff80000010a7a8	kernel.asm	/^ffff80000010a7a8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010a7ac	kernel.asm	/^ffff80000010a7ac:	48 89 45 d8          	mov    %rax,-0x28(%rbp)$/;"	l
ffff80000010a7b0	kernel.asm	/^ffff80000010a7b0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff80000010a7b4	kernel.asm	/^ffff80000010a7b4:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)$/;"	l
ffff80000010a7bb	kernel.asm	/^ffff80000010a7bb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff80000010a7bf	kernel.asm	/^ffff80000010a7bf:	48 83 c0 08          	add    $0x8,%rax$/;"	l
ffff80000010a7c3	kernel.asm	/^ffff80000010a7c3:	66 c7 00 00 00       	movw   $0x0,(%rax)$/;"	l
ffff80000010a7c8	kernel.asm	/^ffff80000010a7c8:	66 c7 40 02 00 00    	movw   $0x0,0x2(%rax)$/;"	l
ffff80000010a7ce	kernel.asm	/^ffff80000010a7ce:	c6 40 04 00          	movb   $0x0,0x4(%rax)$/;"	l
ffff80000010a7d2	kernel.asm	/^ffff80000010a7d2:	0f b6 50 05          	movzbl 0x5(%rax),%edx$/;"	l
ffff80000010a7d6	kernel.asm	/^ffff80000010a7d6:	83 e2 f0             	and    $0xfffffff0,%edx$/;"	l
ffff80000010a7d9	kernel.asm	/^ffff80000010a7d9:	83 ca 0a             	or     $0xa,%edx$/;"	l
ffff80000010a7dc	kernel.asm	/^ffff80000010a7dc:	88 50 05             	mov    %dl,0x5(%rax)$/;"	l
ffff80000010a7df	kernel.asm	/^ffff80000010a7df:	0f b6 50 05          	movzbl 0x5(%rax),%edx$/;"	l
ffff80000010a7e3	kernel.asm	/^ffff80000010a7e3:	83 ca 10             	or     $0x10,%edx$/;"	l
ffff80000010a7e6	kernel.asm	/^ffff80000010a7e6:	88 50 05             	mov    %dl,0x5(%rax)$/;"	l
ffff80000010a7e9	kernel.asm	/^ffff80000010a7e9:	0f b6 50 05          	movzbl 0x5(%rax),%edx$/;"	l
ffff80000010a7ed	kernel.asm	/^ffff80000010a7ed:	83 e2 9f             	and    $0xffffff9f,%edx$/;"	l
ffff80000010a7f0	kernel.asm	/^ffff80000010a7f0:	88 50 05             	mov    %dl,0x5(%rax)$/;"	l
ffff80000010a7f3	kernel.asm	/^ffff80000010a7f3:	0f b6 50 05          	movzbl 0x5(%rax),%edx$/;"	l
ffff80000010a7f7	kernel.asm	/^ffff80000010a7f7:	83 ca 80             	or     $0xffffff80,%edx$/;"	l
ffff80000010a7fa	kernel.asm	/^ffff80000010a7fa:	88 50 05             	mov    %dl,0x5(%rax)$/;"	l
ffff80000010a7fd	kernel.asm	/^ffff80000010a7fd:	0f b6 50 06          	movzbl 0x6(%rax),%edx$/;"	l
ffff80000010a801	kernel.asm	/^ffff80000010a801:	83 e2 f0             	and    $0xfffffff0,%edx$/;"	l
ffff80000010a804	kernel.asm	/^ffff80000010a804:	88 50 06             	mov    %dl,0x6(%rax)$/;"	l
ffff80000010a807	kernel.asm	/^ffff80000010a807:	0f b6 50 06          	movzbl 0x6(%rax),%edx$/;"	l
ffff80000010a80b	kernel.asm	/^ffff80000010a80b:	83 e2 ef             	and    $0xffffffef,%edx$/;"	l
ffff80000010a80e	kernel.asm	/^ffff80000010a80e:	88 50 06             	mov    %dl,0x6(%rax)$/;"	l
ffff80000010a811	kernel.asm	/^ffff80000010a811:	0f b6 50 06          	movzbl 0x6(%rax),%edx$/;"	l
ffff80000010a815	kernel.asm	/^ffff80000010a815:	83 ca 20             	or     $0x20,%edx$/;"	l
ffff80000010a818	kernel.asm	/^ffff80000010a818:	88 50 06             	mov    %dl,0x6(%rax)$/;"	l
ffff80000010a81b	kernel.asm	/^ffff80000010a81b:	0f b6 50 06          	movzbl 0x6(%rax),%edx$/;"	l
ffff80000010a81f	kernel.asm	/^ffff80000010a81f:	83 e2 bf             	and    $0xffffffbf,%edx$/;"	l
ffff80000010a822	kernel.asm	/^ffff80000010a822:	88 50 06             	mov    %dl,0x6(%rax)$/;"	l
ffff80000010a825	kernel.asm	/^ffff80000010a825:	0f b6 50 06          	movzbl 0x6(%rax),%edx$/;"	l
ffff80000010a829	kernel.asm	/^ffff80000010a829:	83 ca 80             	or     $0xffffff80,%edx$/;"	l
ffff80000010a82c	kernel.asm	/^ffff80000010a82c:	88 50 06             	mov    %dl,0x6(%rax)$/;"	l
ffff80000010a82f	kernel.asm	/^ffff80000010a82f:	c6 40 07 00          	movb   $0x0,0x7(%rax)$/;"	l
ffff80000010a833	kernel.asm	/^ffff80000010a833:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff80000010a837	kernel.asm	/^ffff80000010a837:	48 83 c0 28          	add    $0x28,%rax$/;"	l
ffff80000010a83b	kernel.asm	/^ffff80000010a83b:	66 c7 00 00 00       	movw   $0x0,(%rax)$/;"	l
ffff80000010a840	kernel.asm	/^ffff80000010a840:	66 c7 40 02 00 00    	movw   $0x0,0x2(%rax)$/;"	l
ffff80000010a846	kernel.asm	/^ffff80000010a846:	c6 40 04 00          	movb   $0x0,0x4(%rax)$/;"	l
ffff80000010a84a	kernel.asm	/^ffff80000010a84a:	0f b6 50 05          	movzbl 0x5(%rax),%edx$/;"	l
ffff80000010a84e	kernel.asm	/^ffff80000010a84e:	83 e2 f0             	and    $0xfffffff0,%edx$/;"	l
ffff80000010a851	kernel.asm	/^ffff80000010a851:	83 ca 0a             	or     $0xa,%edx$/;"	l
ffff80000010a854	kernel.asm	/^ffff80000010a854:	88 50 05             	mov    %dl,0x5(%rax)$/;"	l
ffff80000010a857	kernel.asm	/^ffff80000010a857:	0f b6 50 05          	movzbl 0x5(%rax),%edx$/;"	l
ffff80000010a85b	kernel.asm	/^ffff80000010a85b:	83 ca 10             	or     $0x10,%edx$/;"	l
ffff80000010a85e	kernel.asm	/^ffff80000010a85e:	88 50 05             	mov    %dl,0x5(%rax)$/;"	l
ffff80000010a861	kernel.asm	/^ffff80000010a861:	0f b6 50 05          	movzbl 0x5(%rax),%edx$/;"	l
ffff80000010a865	kernel.asm	/^ffff80000010a865:	83 ca 60             	or     $0x60,%edx$/;"	l
ffff80000010a868	kernel.asm	/^ffff80000010a868:	88 50 05             	mov    %dl,0x5(%rax)$/;"	l
ffff80000010a86b	kernel.asm	/^ffff80000010a86b:	0f b6 50 05          	movzbl 0x5(%rax),%edx$/;"	l
ffff80000010a86f	kernel.asm	/^ffff80000010a86f:	83 ca 80             	or     $0xffffff80,%edx$/;"	l
ffff80000010a872	kernel.asm	/^ffff80000010a872:	88 50 05             	mov    %dl,0x5(%rax)$/;"	l
ffff80000010a875	kernel.asm	/^ffff80000010a875:	0f b6 50 06          	movzbl 0x6(%rax),%edx$/;"	l
ffff80000010a879	kernel.asm	/^ffff80000010a879:	83 e2 f0             	and    $0xfffffff0,%edx$/;"	l
ffff80000010a87c	kernel.asm	/^ffff80000010a87c:	88 50 06             	mov    %dl,0x6(%rax)$/;"	l
ffff80000010a87f	kernel.asm	/^ffff80000010a87f:	0f b6 50 06          	movzbl 0x6(%rax),%edx$/;"	l
ffff80000010a883	kernel.asm	/^ffff80000010a883:	83 e2 ef             	and    $0xffffffef,%edx$/;"	l
ffff80000010a886	kernel.asm	/^ffff80000010a886:	88 50 06             	mov    %dl,0x6(%rax)$/;"	l
ffff80000010a889	kernel.asm	/^ffff80000010a889:	0f b6 50 06          	movzbl 0x6(%rax),%edx$/;"	l
ffff80000010a88d	kernel.asm	/^ffff80000010a88d:	83 ca 20             	or     $0x20,%edx$/;"	l
ffff80000010a890	kernel.asm	/^ffff80000010a890:	88 50 06             	mov    %dl,0x6(%rax)$/;"	l
ffff80000010a893	kernel.asm	/^ffff80000010a893:	0f b6 50 06          	movzbl 0x6(%rax),%edx$/;"	l
ffff80000010a897	kernel.asm	/^ffff80000010a897:	83 e2 bf             	and    $0xffffffbf,%edx$/;"	l
ffff80000010a89a	kernel.asm	/^ffff80000010a89a:	88 50 06             	mov    %dl,0x6(%rax)$/;"	l
ffff80000010a89d	kernel.asm	/^ffff80000010a89d:	0f b6 50 06          	movzbl 0x6(%rax),%edx$/;"	l
ffff80000010a8a1	kernel.asm	/^ffff80000010a8a1:	83 ca 80             	or     $0xffffff80,%edx$/;"	l
ffff80000010a8a4	kernel.asm	/^ffff80000010a8a4:	88 50 06             	mov    %dl,0x6(%rax)$/;"	l
ffff80000010a8a7	kernel.asm	/^ffff80000010a8a7:	c6 40 07 00          	movb   $0x0,0x7(%rax)$/;"	l
ffff80000010a8ab	kernel.asm	/^ffff80000010a8ab:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff80000010a8af	kernel.asm	/^ffff80000010a8af:	48 83 c0 10          	add    $0x10,%rax$/;"	l
ffff80000010a8b3	kernel.asm	/^ffff80000010a8b3:	66 c7 00 00 00       	movw   $0x0,(%rax)$/;"	l
ffff80000010a8b8	kernel.asm	/^ffff80000010a8b8:	66 c7 40 02 00 00    	movw   $0x0,0x2(%rax)$/;"	l
ffff80000010a8be	kernel.asm	/^ffff80000010a8be:	c6 40 04 00          	movb   $0x0,0x4(%rax)$/;"	l
ffff80000010a8c2	kernel.asm	/^ffff80000010a8c2:	0f b6 50 05          	movzbl 0x5(%rax),%edx$/;"	l
ffff80000010a8c6	kernel.asm	/^ffff80000010a8c6:	83 e2 f0             	and    $0xfffffff0,%edx$/;"	l
ffff80000010a8c9	kernel.asm	/^ffff80000010a8c9:	83 ca 02             	or     $0x2,%edx$/;"	l
ffff80000010a8cc	kernel.asm	/^ffff80000010a8cc:	88 50 05             	mov    %dl,0x5(%rax)$/;"	l
ffff80000010a8cf	kernel.asm	/^ffff80000010a8cf:	0f b6 50 05          	movzbl 0x5(%rax),%edx$/;"	l
ffff80000010a8d3	kernel.asm	/^ffff80000010a8d3:	83 ca 10             	or     $0x10,%edx$/;"	l
ffff80000010a8d6	kernel.asm	/^ffff80000010a8d6:	88 50 05             	mov    %dl,0x5(%rax)$/;"	l
ffff80000010a8d9	kernel.asm	/^ffff80000010a8d9:	0f b6 50 05          	movzbl 0x5(%rax),%edx$/;"	l
ffff80000010a8dd	kernel.asm	/^ffff80000010a8dd:	83 e2 9f             	and    $0xffffff9f,%edx$/;"	l
ffff80000010a8e0	kernel.asm	/^ffff80000010a8e0:	88 50 05             	mov    %dl,0x5(%rax)$/;"	l
ffff80000010a8e3	kernel.asm	/^ffff80000010a8e3:	0f b6 50 05          	movzbl 0x5(%rax),%edx$/;"	l
ffff80000010a8e7	kernel.asm	/^ffff80000010a8e7:	83 ca 80             	or     $0xffffff80,%edx$/;"	l
ffff80000010a8ea	kernel.asm	/^ffff80000010a8ea:	88 50 05             	mov    %dl,0x5(%rax)$/;"	l
ffff80000010a8ed	kernel.asm	/^ffff80000010a8ed:	0f b6 50 06          	movzbl 0x6(%rax),%edx$/;"	l
ffff80000010a8f1	kernel.asm	/^ffff80000010a8f1:	83 e2 f0             	and    $0xfffffff0,%edx$/;"	l
ffff80000010a8f4	kernel.asm	/^ffff80000010a8f4:	88 50 06             	mov    %dl,0x6(%rax)$/;"	l
ffff80000010a8f7	kernel.asm	/^ffff80000010a8f7:	0f b6 50 06          	movzbl 0x6(%rax),%edx$/;"	l
ffff80000010a8fb	kernel.asm	/^ffff80000010a8fb:	83 e2 ef             	and    $0xffffffef,%edx$/;"	l
ffff80000010a8fe	kernel.asm	/^ffff80000010a8fe:	88 50 06             	mov    %dl,0x6(%rax)$/;"	l
ffff80000010a901	kernel.asm	/^ffff80000010a901:	0f b6 50 06          	movzbl 0x6(%rax),%edx$/;"	l
ffff80000010a905	kernel.asm	/^ffff80000010a905:	83 e2 df             	and    $0xffffffdf,%edx$/;"	l
ffff80000010a908	kernel.asm	/^ffff80000010a908:	88 50 06             	mov    %dl,0x6(%rax)$/;"	l
ffff80000010a90b	kernel.asm	/^ffff80000010a90b:	0f b6 50 06          	movzbl 0x6(%rax),%edx$/;"	l
ffff80000010a90f	kernel.asm	/^ffff80000010a90f:	83 e2 bf             	and    $0xffffffbf,%edx$/;"	l
ffff80000010a912	kernel.asm	/^ffff80000010a912:	88 50 06             	mov    %dl,0x6(%rax)$/;"	l
ffff80000010a915	kernel.asm	/^ffff80000010a915:	0f b6 50 06          	movzbl 0x6(%rax),%edx$/;"	l
ffff80000010a919	kernel.asm	/^ffff80000010a919:	83 ca 80             	or     $0xffffff80,%edx$/;"	l
ffff80000010a91c	kernel.asm	/^ffff80000010a91c:	88 50 06             	mov    %dl,0x6(%rax)$/;"	l
ffff80000010a91f	kernel.asm	/^ffff80000010a91f:	c6 40 07 00          	movb   $0x0,0x7(%rax)$/;"	l
ffff80000010a923	kernel.asm	/^ffff80000010a923:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff80000010a927	kernel.asm	/^ffff80000010a927:	48 83 c0 30          	add    $0x30,%rax$/;"	l
ffff80000010a92b	kernel.asm	/^ffff80000010a92b:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)$/;"	l
ffff80000010a932	kernel.asm	/^ffff80000010a932:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff80000010a936	kernel.asm	/^ffff80000010a936:	48 83 c0 20          	add    $0x20,%rax$/;"	l
ffff80000010a93a	kernel.asm	/^ffff80000010a93a:	66 c7 00 00 00       	movw   $0x0,(%rax)$/;"	l
ffff80000010a93f	kernel.asm	/^ffff80000010a93f:	66 c7 40 02 00 00    	movw   $0x0,0x2(%rax)$/;"	l
ffff80000010a945	kernel.asm	/^ffff80000010a945:	c6 40 04 00          	movb   $0x0,0x4(%rax)$/;"	l
ffff80000010a949	kernel.asm	/^ffff80000010a949:	0f b6 50 05          	movzbl 0x5(%rax),%edx$/;"	l
ffff80000010a94d	kernel.asm	/^ffff80000010a94d:	83 e2 f0             	and    $0xfffffff0,%edx$/;"	l
ffff80000010a950	kernel.asm	/^ffff80000010a950:	83 ca 02             	or     $0x2,%edx$/;"	l
ffff80000010a953	kernel.asm	/^ffff80000010a953:	88 50 05             	mov    %dl,0x5(%rax)$/;"	l
ffff80000010a956	kernel.asm	/^ffff80000010a956:	0f b6 50 05          	movzbl 0x5(%rax),%edx$/;"	l
ffff80000010a95a	kernel.asm	/^ffff80000010a95a:	83 ca 10             	or     $0x10,%edx$/;"	l
ffff80000010a95d	kernel.asm	/^ffff80000010a95d:	88 50 05             	mov    %dl,0x5(%rax)$/;"	l
ffff80000010a960	kernel.asm	/^ffff80000010a960:	0f b6 50 05          	movzbl 0x5(%rax),%edx$/;"	l
ffff80000010a964	kernel.asm	/^ffff80000010a964:	83 ca 60             	or     $0x60,%edx$/;"	l
ffff80000010a967	kernel.asm	/^ffff80000010a967:	88 50 05             	mov    %dl,0x5(%rax)$/;"	l
ffff80000010a96a	kernel.asm	/^ffff80000010a96a:	0f b6 50 05          	movzbl 0x5(%rax),%edx$/;"	l
ffff80000010a96e	kernel.asm	/^ffff80000010a96e:	83 ca 80             	or     $0xffffff80,%edx$/;"	l
ffff80000010a971	kernel.asm	/^ffff80000010a971:	88 50 05             	mov    %dl,0x5(%rax)$/;"	l
ffff80000010a974	kernel.asm	/^ffff80000010a974:	0f b6 50 06          	movzbl 0x6(%rax),%edx$/;"	l
ffff80000010a978	kernel.asm	/^ffff80000010a978:	83 e2 f0             	and    $0xfffffff0,%edx$/;"	l
ffff80000010a97b	kernel.asm	/^ffff80000010a97b:	88 50 06             	mov    %dl,0x6(%rax)$/;"	l
ffff80000010a97e	kernel.asm	/^ffff80000010a97e:	0f b6 50 06          	movzbl 0x6(%rax),%edx$/;"	l
ffff80000010a982	kernel.asm	/^ffff80000010a982:	83 e2 ef             	and    $0xffffffef,%edx$/;"	l
ffff80000010a985	kernel.asm	/^ffff80000010a985:	88 50 06             	mov    %dl,0x6(%rax)$/;"	l
ffff80000010a988	kernel.asm	/^ffff80000010a988:	0f b6 50 06          	movzbl 0x6(%rax),%edx$/;"	l
ffff80000010a98c	kernel.asm	/^ffff80000010a98c:	83 e2 df             	and    $0xffffffdf,%edx$/;"	l
ffff80000010a98f	kernel.asm	/^ffff80000010a98f:	88 50 06             	mov    %dl,0x6(%rax)$/;"	l
ffff80000010a992	kernel.asm	/^ffff80000010a992:	0f b6 50 06          	movzbl 0x6(%rax),%edx$/;"	l
ffff80000010a996	kernel.asm	/^ffff80000010a996:	83 e2 bf             	and    $0xffffffbf,%edx$/;"	l
ffff80000010a999	kernel.asm	/^ffff80000010a999:	88 50 06             	mov    %dl,0x6(%rax)$/;"	l
ffff80000010a99c	kernel.asm	/^ffff80000010a99c:	0f b6 50 06          	movzbl 0x6(%rax),%edx$/;"	l
ffff80000010a9a0	kernel.asm	/^ffff80000010a9a0:	83 ca 80             	or     $0xffffff80,%edx$/;"	l
ffff80000010a9a3	kernel.asm	/^ffff80000010a9a3:	88 50 06             	mov    %dl,0x6(%rax)$/;"	l
ffff80000010a9a6	kernel.asm	/^ffff80000010a9a6:	c6 40 07 00          	movb   $0x0,0x7(%rax)$/;"	l
ffff80000010a9aa	kernel.asm	/^ffff80000010a9aa:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff80000010a9ae	kernel.asm	/^ffff80000010a9ae:	48 83 c0 38          	add    $0x38,%rax$/;"	l
ffff80000010a9b2	kernel.asm	/^ffff80000010a9b2:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx$/;"	l
ffff80000010a9b6	kernel.asm	/^ffff80000010a9b6:	89 d7                	mov    %edx,%edi$/;"	l
ffff80000010a9b8	kernel.asm	/^ffff80000010a9b8:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx$/;"	l
ffff80000010a9bc	kernel.asm	/^ffff80000010a9bc:	48 c1 ea 10          	shr    $0x10,%rdx$/;"	l
ffff80000010a9c0	kernel.asm	/^ffff80000010a9c0:	89 d6                	mov    %edx,%esi$/;"	l
ffff80000010a9c2	kernel.asm	/^ffff80000010a9c2:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx$/;"	l
ffff80000010a9c6	kernel.asm	/^ffff80000010a9c6:	48 c1 ea 18          	shr    $0x18,%rdx$/;"	l
ffff80000010a9ca	kernel.asm	/^ffff80000010a9ca:	89 d1                	mov    %edx,%ecx$/;"	l
ffff80000010a9cc	kernel.asm	/^ffff80000010a9cc:	66 c7 00 0b 00       	movw   $0xb,(%rax)$/;"	l
ffff80000010a9d1	kernel.asm	/^ffff80000010a9d1:	66 89 78 02          	mov    %di,0x2(%rax)$/;"	l
ffff80000010a9d5	kernel.asm	/^ffff80000010a9d5:	40 88 70 04          	mov    %sil,0x4(%rax)$/;"	l
ffff80000010a9d9	kernel.asm	/^ffff80000010a9d9:	0f b6 50 05          	movzbl 0x5(%rax),%edx$/;"	l
ffff80000010a9dd	kernel.asm	/^ffff80000010a9dd:	83 e2 f0             	and    $0xfffffff0,%edx$/;"	l
ffff80000010a9e0	kernel.asm	/^ffff80000010a9e0:	83 ca 09             	or     $0x9,%edx$/;"	l
ffff80000010a9e3	kernel.asm	/^ffff80000010a9e3:	88 50 05             	mov    %dl,0x5(%rax)$/;"	l
ffff80000010a9e6	kernel.asm	/^ffff80000010a9e6:	0f b6 50 05          	movzbl 0x5(%rax),%edx$/;"	l
ffff80000010a9ea	kernel.asm	/^ffff80000010a9ea:	83 e2 ef             	and    $0xffffffef,%edx$/;"	l
ffff80000010a9ed	kernel.asm	/^ffff80000010a9ed:	88 50 05             	mov    %dl,0x5(%rax)$/;"	l
ffff80000010a9f0	kernel.asm	/^ffff80000010a9f0:	0f b6 50 05          	movzbl 0x5(%rax),%edx$/;"	l
ffff80000010a9f4	kernel.asm	/^ffff80000010a9f4:	83 ca 60             	or     $0x60,%edx$/;"	l
ffff80000010a9f7	kernel.asm	/^ffff80000010a9f7:	88 50 05             	mov    %dl,0x5(%rax)$/;"	l
ffff80000010a9fa	kernel.asm	/^ffff80000010a9fa:	0f b6 50 05          	movzbl 0x5(%rax),%edx$/;"	l
ffff80000010a9fe	kernel.asm	/^ffff80000010a9fe:	83 ca 80             	or     $0xffffff80,%edx$/;"	l
ffff80000010aa01	kernel.asm	/^ffff80000010aa01:	88 50 05             	mov    %dl,0x5(%rax)$/;"	l
ffff80000010aa04	kernel.asm	/^ffff80000010aa04:	0f b6 50 06          	movzbl 0x6(%rax),%edx$/;"	l
ffff80000010aa08	kernel.asm	/^ffff80000010aa08:	83 e2 f0             	and    $0xfffffff0,%edx$/;"	l
ffff80000010aa0b	kernel.asm	/^ffff80000010aa0b:	88 50 06             	mov    %dl,0x6(%rax)$/;"	l
ffff80000010aa0e	kernel.asm	/^ffff80000010aa0e:	0f b6 50 06          	movzbl 0x6(%rax),%edx$/;"	l
ffff80000010aa12	kernel.asm	/^ffff80000010aa12:	83 e2 ef             	and    $0xffffffef,%edx$/;"	l
ffff80000010aa15	kernel.asm	/^ffff80000010aa15:	88 50 06             	mov    %dl,0x6(%rax)$/;"	l
ffff80000010aa18	kernel.asm	/^ffff80000010aa18:	0f b6 50 06          	movzbl 0x6(%rax),%edx$/;"	l
ffff80000010aa1c	kernel.asm	/^ffff80000010aa1c:	83 e2 df             	and    $0xffffffdf,%edx$/;"	l
ffff80000010aa1f	kernel.asm	/^ffff80000010aa1f:	88 50 06             	mov    %dl,0x6(%rax)$/;"	l
ffff80000010aa22	kernel.asm	/^ffff80000010aa22:	0f b6 50 06          	movzbl 0x6(%rax),%edx$/;"	l
ffff80000010aa26	kernel.asm	/^ffff80000010aa26:	83 e2 bf             	and    $0xffffffbf,%edx$/;"	l
ffff80000010aa29	kernel.asm	/^ffff80000010aa29:	88 50 06             	mov    %dl,0x6(%rax)$/;"	l
ffff80000010aa2c	kernel.asm	/^ffff80000010aa2c:	0f b6 50 06          	movzbl 0x6(%rax),%edx$/;"	l
ffff80000010aa30	kernel.asm	/^ffff80000010aa30:	83 ca 80             	or     $0xffffff80,%edx$/;"	l
ffff80000010aa33	kernel.asm	/^ffff80000010aa33:	88 50 06             	mov    %dl,0x6(%rax)$/;"	l
ffff80000010aa36	kernel.asm	/^ffff80000010aa36:	88 48 07             	mov    %cl,0x7(%rax)$/;"	l
ffff80000010aa39	kernel.asm	/^ffff80000010aa39:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff80000010aa3d	kernel.asm	/^ffff80000010aa3d:	48 83 c0 40          	add    $0x40,%rax$/;"	l
ffff80000010aa41	kernel.asm	/^ffff80000010aa41:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx$/;"	l
ffff80000010aa45	kernel.asm	/^ffff80000010aa45:	48 c1 ea 20          	shr    $0x20,%rdx$/;"	l
ffff80000010aa49	kernel.asm	/^ffff80000010aa49:	41 89 d1             	mov    %edx,%r9d$/;"	l
ffff80000010aa4c	kernel.asm	/^ffff80000010aa4c:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx$/;"	l
ffff80000010aa50	kernel.asm	/^ffff80000010aa50:	48 c1 ea 30          	shr    $0x30,%rdx$/;"	l
ffff80000010aa54	kernel.asm	/^ffff80000010aa54:	41 89 d0             	mov    %edx,%r8d$/;"	l
ffff80000010aa57	kernel.asm	/^ffff80000010aa57:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx$/;"	l
ffff80000010aa5b	kernel.asm	/^ffff80000010aa5b:	48 c1 ea 30          	shr    $0x30,%rdx$/;"	l
ffff80000010aa5f	kernel.asm	/^ffff80000010aa5f:	48 c1 ea 10          	shr    $0x10,%rdx$/;"	l
ffff80000010aa63	kernel.asm	/^ffff80000010aa63:	89 d7                	mov    %edx,%edi$/;"	l
ffff80000010aa65	kernel.asm	/^ffff80000010aa65:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx$/;"	l
ffff80000010aa69	kernel.asm	/^ffff80000010aa69:	48 c1 ea 20          	shr    $0x20,%rdx$/;"	l
ffff80000010aa6d	kernel.asm	/^ffff80000010aa6d:	48 c1 ea 3c          	shr    $0x3c,%rdx$/;"	l
ffff80000010aa71	kernel.asm	/^ffff80000010aa71:	89 d1                	mov    %edx,%ecx$/;"	l
ffff80000010aa73	kernel.asm	/^ffff80000010aa73:	83 e1 0f             	and    $0xf,%ecx$/;"	l
ffff80000010aa76	kernel.asm	/^ffff80000010aa76:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx$/;"	l
ffff80000010aa7a	kernel.asm	/^ffff80000010aa7a:	48 c1 ea 30          	shr    $0x30,%rdx$/;"	l
ffff80000010aa7e	kernel.asm	/^ffff80000010aa7e:	48 c1 ea 18          	shr    $0x18,%rdx$/;"	l
ffff80000010aa82	kernel.asm	/^ffff80000010aa82:	89 d6                	mov    %edx,%esi$/;"	l
ffff80000010aa84	kernel.asm	/^ffff80000010aa84:	66 44 89 08          	mov    %r9w,(%rax)$/;"	l
ffff80000010aa88	kernel.asm	/^ffff80000010aa88:	66 44 89 40 02       	mov    %r8w,0x2(%rax)$/;"	l
ffff80000010aa8d	kernel.asm	/^ffff80000010aa8d:	40 88 78 04          	mov    %dil,0x4(%rax)$/;"	l
ffff80000010aa91	kernel.asm	/^ffff80000010aa91:	0f b6 50 05          	movzbl 0x5(%rax),%edx$/;"	l
ffff80000010aa95	kernel.asm	/^ffff80000010aa95:	83 e2 f0             	and    $0xfffffff0,%edx$/;"	l
ffff80000010aa98	kernel.asm	/^ffff80000010aa98:	88 50 05             	mov    %dl,0x5(%rax)$/;"	l
ffff80000010aa9b	kernel.asm	/^ffff80000010aa9b:	0f b6 50 05          	movzbl 0x5(%rax),%edx$/;"	l
ffff80000010aa9f	kernel.asm	/^ffff80000010aa9f:	83 e2 ef             	and    $0xffffffef,%edx$/;"	l
ffff80000010aaa2	kernel.asm	/^ffff80000010aaa2:	88 50 05             	mov    %dl,0x5(%rax)$/;"	l
ffff80000010aaa5	kernel.asm	/^ffff80000010aaa5:	0f b6 50 05          	movzbl 0x5(%rax),%edx$/;"	l
ffff80000010aaa9	kernel.asm	/^ffff80000010aaa9:	83 e2 9f             	and    $0xffffff9f,%edx$/;"	l
ffff80000010aaac	kernel.asm	/^ffff80000010aaac:	88 50 05             	mov    %dl,0x5(%rax)$/;"	l
ffff80000010aaaf	kernel.asm	/^ffff80000010aaaf:	0f b6 50 05          	movzbl 0x5(%rax),%edx$/;"	l
ffff80000010aab3	kernel.asm	/^ffff80000010aab3:	83 ca 80             	or     $0xffffff80,%edx$/;"	l
ffff80000010aab6	kernel.asm	/^ffff80000010aab6:	88 50 05             	mov    %dl,0x5(%rax)$/;"	l
ffff80000010aab9	kernel.asm	/^ffff80000010aab9:	83 e1 0f             	and    $0xf,%ecx$/;"	l
ffff80000010aabc	kernel.asm	/^ffff80000010aabc:	0f b6 50 06          	movzbl 0x6(%rax),%edx$/;"	l
ffff80000010aac0	kernel.asm	/^ffff80000010aac0:	83 e2 f0             	and    $0xfffffff0,%edx$/;"	l
ffff80000010aac3	kernel.asm	/^ffff80000010aac3:	09 ca                	or     %ecx,%edx$/;"	l
ffff80000010aac5	kernel.asm	/^ffff80000010aac5:	88 50 06             	mov    %dl,0x6(%rax)$/;"	l
ffff80000010aac8	kernel.asm	/^ffff80000010aac8:	0f b6 50 06          	movzbl 0x6(%rax),%edx$/;"	l
ffff80000010aacc	kernel.asm	/^ffff80000010aacc:	83 e2 ef             	and    $0xffffffef,%edx$/;"	l
ffff80000010aacf	kernel.asm	/^ffff80000010aacf:	88 50 06             	mov    %dl,0x6(%rax)$/;"	l
ffff80000010aad2	kernel.asm	/^ffff80000010aad2:	0f b6 50 06          	movzbl 0x6(%rax),%edx$/;"	l
ffff80000010aad6	kernel.asm	/^ffff80000010aad6:	83 e2 df             	and    $0xffffffdf,%edx$/;"	l
ffff80000010aad9	kernel.asm	/^ffff80000010aad9:	88 50 06             	mov    %dl,0x6(%rax)$/;"	l
ffff80000010aadc	kernel.asm	/^ffff80000010aadc:	0f b6 50 06          	movzbl 0x6(%rax),%edx$/;"	l
ffff80000010aae0	kernel.asm	/^ffff80000010aae0:	83 e2 bf             	and    $0xffffffbf,%edx$/;"	l
ffff80000010aae3	kernel.asm	/^ffff80000010aae3:	88 50 06             	mov    %dl,0x6(%rax)$/;"	l
ffff80000010aae6	kernel.asm	/^ffff80000010aae6:	0f b6 50 06          	movzbl 0x6(%rax),%edx$/;"	l
ffff80000010aaea	kernel.asm	/^ffff80000010aaea:	83 ca 80             	or     $0xffffff80,%edx$/;"	l
ffff80000010aaed	kernel.asm	/^ffff80000010aaed:	88 50 06             	mov    %dl,0x6(%rax)$/;"	l
ffff80000010aaf0	kernel.asm	/^ffff80000010aaf0:	40 88 70 07          	mov    %sil,0x7(%rax)$/;"	l
ffff80000010aaf4	kernel.asm	/^ffff80000010aaf4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff80000010aaf8	kernel.asm	/^ffff80000010aaf8:	be 48 00 00 00       	mov    $0x48,%esi$/;"	l
ffff80000010aafd	kernel.asm	/^ffff80000010aafd:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010ab00	kernel.asm	/^ffff80000010ab00:	48 b8 69 a5 10 00 00 	movabs $0xffff80000010a569,%rax$/;"	l
ffff80000010ab07	kernel.asm	/^ffff80000010ab07:	80 ff ff $/;"	l
ffff80000010ab0a	kernel.asm	/^ffff80000010ab0a:	ff d0                	callq  *%rax$/;"	l
ffff80000010ab0c	kernel.asm	/^ffff80000010ab0c:	bf 38 00 00 00       	mov    $0x38,%edi$/;"	l
ffff80000010ab11	kernel.asm	/^ffff80000010ab11:	48 b8 b8 a5 10 00 00 	movabs $0xffff80000010a5b8,%rax$/;"	l
ffff80000010ab18	kernel.asm	/^ffff80000010ab18:	80 ff ff $/;"	l
ffff80000010ab1b	kernel.asm	/^ffff80000010ab1b:	ff d0                	callq  *%rax$/;"	l
ffff80000010ab1d	kernel.asm	/^ffff80000010ab1d:	90                   	nop$/;"	l
ffff80000010ab1e	kernel.asm	/^ffff80000010ab1e:	c9                   	leaveq $/;"	l
ffff80000010ab1f	kernel.asm	/^ffff80000010ab1f:	c3                   	retq   $/;"	l
ffff80000010ab20	kernel.asm	/^ffff80000010ab20 <setupkvm>:$/;"	l
ffff80000010ab20	kernel.asm	/^ffff80000010ab20:	55                   	push   %rbp$/;"	l
ffff80000010ab21	kernel.asm	/^ffff80000010ab21:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010ab24	kernel.asm	/^ffff80000010ab24:	53                   	push   %rbx$/;"	l
ffff80000010ab25	kernel.asm	/^ffff80000010ab25:	48 83 ec 18          	sub    $0x18,%rsp$/;"	l
ffff80000010ab29	kernel.asm	/^ffff80000010ab29:	48 b8 9f 40 10 00 00 	movabs $0xffff80000010409f,%rax$/;"	l
ffff80000010ab30	kernel.asm	/^ffff80000010ab30:	80 ff ff $/;"	l
ffff80000010ab33	kernel.asm	/^ffff80000010ab33:	ff d0                	callq  *%rax$/;"	l
ffff80000010ab35	kernel.asm	/^ffff80000010ab35:	48 89 45 e8          	mov    %rax,-0x18(%rbp)$/;"	l
ffff80000010ab39	kernel.asm	/^ffff80000010ab39:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010ab3d	kernel.asm	/^ffff80000010ab3d:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
ffff80000010ab42	kernel.asm	/^ffff80000010ab42:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffff80000010ab47	kernel.asm	/^ffff80000010ab47:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010ab4a	kernel.asm	/^ffff80000010ab4a:	48 b8 9b 75 10 00 00 	movabs $0xffff80000010759b,%rax$/;"	l
ffff80000010ab51	kernel.asm	/^ffff80000010ab51:	80 ff ff $/;"	l
ffff80000010ab54	kernel.asm	/^ffff80000010ab54:	ff d0                	callq  *%rax$/;"	l
ffff80000010ab56	kernel.asm	/^ffff80000010ab56:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010ab5a	kernel.asm	/^ffff80000010ab5a:	48 8d 98 00 08 00 00 	lea    0x800(%rax),%rbx$/;"	l
ffff80000010ab61	kernel.asm	/^ffff80000010ab61:	48 b8 e0 b3 11 00 00 	movabs $0xffff80000011b3e0,%rax$/;"	l
ffff80000010ab68	kernel.asm	/^ffff80000010ab68:	80 ff ff $/;"	l
ffff80000010ab6b	kernel.asm	/^ffff80000010ab6b:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff80000010ab6e	kernel.asm	/^ffff80000010ab6e:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010ab71	kernel.asm	/^ffff80000010ab71:	48 b8 e6 a5 10 00 00 	movabs $0xffff80000010a5e6,%rax$/;"	l
ffff80000010ab78	kernel.asm	/^ffff80000010ab78:	80 ff ff $/;"	l
ffff80000010ab7b	kernel.asm	/^ffff80000010ab7b:	ff d0                	callq  *%rax$/;"	l
ffff80000010ab7d	kernel.asm	/^ffff80000010ab7d:	48 83 c8 03          	or     $0x3,%rax$/;"	l
ffff80000010ab81	kernel.asm	/^ffff80000010ab81:	48 89 03             	mov    %rax,(%rbx)$/;"	l
ffff80000010ab84	kernel.asm	/^ffff80000010ab84:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010ab88	kernel.asm	/^ffff80000010ab88:	48 83 c4 18          	add    $0x18,%rsp$/;"	l
ffff80000010ab8c	kernel.asm	/^ffff80000010ab8c:	5b                   	pop    %rbx$/;"	l
ffff80000010ab8d	kernel.asm	/^ffff80000010ab8d:	5d                   	pop    %rbp$/;"	l
ffff80000010ab8e	kernel.asm	/^ffff80000010ab8e:	c3                   	retq   $/;"	l
ffff80000010ab8f	kernel.asm	/^ffff80000010ab8f <kvmalloc>:$/;"	l
ffff80000010ab8f	kernel.asm	/^ffff80000010ab8f:	55                   	push   %rbp$/;"	l
ffff80000010ab90	kernel.asm	/^ffff80000010ab90:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010ab93	kernel.asm	/^ffff80000010ab93:	53                   	push   %rbx$/;"	l
ffff80000010ab94	kernel.asm	/^ffff80000010ab94:	48 83 ec 08          	sub    $0x8,%rsp$/;"	l
ffff80000010ab98	kernel.asm	/^ffff80000010ab98:	48 b8 9f 40 10 00 00 	movabs $0xffff80000010409f,%rax$/;"	l
ffff80000010ab9f	kernel.asm	/^ffff80000010ab9f:	80 ff ff $/;"	l
ffff80000010aba2	kernel.asm	/^ffff80000010aba2:	ff d0                	callq  *%rax$/;"	l
ffff80000010aba4	kernel.asm	/^ffff80000010aba4:	48 89 c2             	mov    %rax,%rdx$/;"	l
ffff80000010aba7	kernel.asm	/^ffff80000010aba7:	48 b8 d8 b3 11 00 00 	movabs $0xffff80000011b3d8,%rax$/;"	l
ffff80000010abae	kernel.asm	/^ffff80000010abae:	80 ff ff $/;"	l
ffff80000010abb1	kernel.asm	/^ffff80000010abb1:	48 89 10             	mov    %rdx,(%rax)$/;"	l
ffff80000010abb4	kernel.asm	/^ffff80000010abb4:	48 b8 d8 b3 11 00 00 	movabs $0xffff80000011b3d8,%rax$/;"	l
ffff80000010abbb	kernel.asm	/^ffff80000010abbb:	80 ff ff $/;"	l
ffff80000010abbe	kernel.asm	/^ffff80000010abbe:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff80000010abc1	kernel.asm	/^ffff80000010abc1:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
ffff80000010abc6	kernel.asm	/^ffff80000010abc6:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffff80000010abcb	kernel.asm	/^ffff80000010abcb:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010abce	kernel.asm	/^ffff80000010abce:	48 b8 9b 75 10 00 00 	movabs $0xffff80000010759b,%rax$/;"	l
ffff80000010abd5	kernel.asm	/^ffff80000010abd5:	80 ff ff $/;"	l
ffff80000010abd8	kernel.asm	/^ffff80000010abd8:	ff d0                	callq  *%rax$/;"	l
ffff80000010abda	kernel.asm	/^ffff80000010abda:	48 b8 9f 40 10 00 00 	movabs $0xffff80000010409f,%rax$/;"	l
ffff80000010abe1	kernel.asm	/^ffff80000010abe1:	80 ff ff $/;"	l
ffff80000010abe4	kernel.asm	/^ffff80000010abe4:	ff d0                	callq  *%rax$/;"	l
ffff80000010abe6	kernel.asm	/^ffff80000010abe6:	48 89 c2             	mov    %rax,%rdx$/;"	l
ffff80000010abe9	kernel.asm	/^ffff80000010abe9:	48 b8 e0 b3 11 00 00 	movabs $0xffff80000011b3e0,%rax$/;"	l
ffff80000010abf0	kernel.asm	/^ffff80000010abf0:	80 ff ff $/;"	l
ffff80000010abf3	kernel.asm	/^ffff80000010abf3:	48 89 10             	mov    %rdx,(%rax)$/;"	l
ffff80000010abf6	kernel.asm	/^ffff80000010abf6:	48 b8 e0 b3 11 00 00 	movabs $0xffff80000011b3e0,%rax$/;"	l
ffff80000010abfd	kernel.asm	/^ffff80000010abfd:	80 ff ff $/;"	l
ffff80000010ac00	kernel.asm	/^ffff80000010ac00:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff80000010ac03	kernel.asm	/^ffff80000010ac03:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
ffff80000010ac08	kernel.asm	/^ffff80000010ac08:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffff80000010ac0d	kernel.asm	/^ffff80000010ac0d:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010ac10	kernel.asm	/^ffff80000010ac10:	48 b8 9b 75 10 00 00 	movabs $0xffff80000010759b,%rax$/;"	l
ffff80000010ac17	kernel.asm	/^ffff80000010ac17:	80 ff ff $/;"	l
ffff80000010ac1a	kernel.asm	/^ffff80000010ac1a:	ff d0                	callq  *%rax$/;"	l
ffff80000010ac1c	kernel.asm	/^ffff80000010ac1c:	48 b8 d8 b3 11 00 00 	movabs $0xffff80000011b3d8,%rax$/;"	l
ffff80000010ac23	kernel.asm	/^ffff80000010ac23:	80 ff ff $/;"	l
ffff80000010ac26	kernel.asm	/^ffff80000010ac26:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff80000010ac29	kernel.asm	/^ffff80000010ac29:	48 8d 98 00 08 00 00 	lea    0x800(%rax),%rbx$/;"	l
ffff80000010ac30	kernel.asm	/^ffff80000010ac30:	48 b8 e0 b3 11 00 00 	movabs $0xffff80000011b3e0,%rax$/;"	l
ffff80000010ac37	kernel.asm	/^ffff80000010ac37:	80 ff ff $/;"	l
ffff80000010ac3a	kernel.asm	/^ffff80000010ac3a:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff80000010ac3d	kernel.asm	/^ffff80000010ac3d:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010ac40	kernel.asm	/^ffff80000010ac40:	48 b8 e6 a5 10 00 00 	movabs $0xffff80000010a5e6,%rax$/;"	l
ffff80000010ac47	kernel.asm	/^ffff80000010ac47:	80 ff ff $/;"	l
ffff80000010ac4a	kernel.asm	/^ffff80000010ac4a:	ff d0                	callq  *%rax$/;"	l
ffff80000010ac4c	kernel.asm	/^ffff80000010ac4c:	48 83 c8 03          	or     $0x3,%rax$/;"	l
ffff80000010ac50	kernel.asm	/^ffff80000010ac50:	48 89 03             	mov    %rax,(%rbx)$/;"	l
ffff80000010ac53	kernel.asm	/^ffff80000010ac53:	48 b8 e0 b3 11 00 00 	movabs $0xffff80000011b3e0,%rax$/;"	l
ffff80000010ac5a	kernel.asm	/^ffff80000010ac5a:	80 ff ff $/;"	l
ffff80000010ac5d	kernel.asm	/^ffff80000010ac5d:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff80000010ac60	kernel.asm	/^ffff80000010ac60:	48 c7 00 83 00 00 00 	movq   $0x83,(%rax)$/;"	l
ffff80000010ac67	kernel.asm	/^ffff80000010ac67:	48 b8 e0 b3 11 00 00 	movabs $0xffff80000011b3e0,%rax$/;"	l
ffff80000010ac6e	kernel.asm	/^ffff80000010ac6e:	80 ff ff $/;"	l
ffff80000010ac71	kernel.asm	/^ffff80000010ac71:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff80000010ac74	kernel.asm	/^ffff80000010ac74:	48 83 c0 18          	add    $0x18,%rax$/;"	l
ffff80000010ac78	kernel.asm	/^ffff80000010ac78:	b9 9b 00 00 c0       	mov    $0xc000009b,%ecx$/;"	l
ffff80000010ac7d	kernel.asm	/^ffff80000010ac7d:	48 89 08             	mov    %rcx,(%rax)$/;"	l
ffff80000010ac80	kernel.asm	/^ffff80000010ac80:	48 b8 94 ac 10 00 00 	movabs $0xffff80000010ac94,%rax$/;"	l
ffff80000010ac87	kernel.asm	/^ffff80000010ac87:	80 ff ff $/;"	l
ffff80000010ac8a	kernel.asm	/^ffff80000010ac8a:	ff d0                	callq  *%rax$/;"	l
ffff80000010ac8c	kernel.asm	/^ffff80000010ac8c:	90                   	nop$/;"	l
ffff80000010ac8d	kernel.asm	/^ffff80000010ac8d:	48 83 c4 08          	add    $0x8,%rsp$/;"	l
ffff80000010ac91	kernel.asm	/^ffff80000010ac91:	5b                   	pop    %rbx$/;"	l
ffff80000010ac92	kernel.asm	/^ffff80000010ac92:	5d                   	pop    %rbp$/;"	l
ffff80000010ac93	kernel.asm	/^ffff80000010ac93:	c3                   	retq   $/;"	l
ffff80000010ac94	kernel.asm	/^ffff80000010ac94 <switchkvm>:$/;"	l
ffff80000010ac94	kernel.asm	/^ffff80000010ac94:	55                   	push   %rbp$/;"	l
ffff80000010ac95	kernel.asm	/^ffff80000010ac95:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010ac98	kernel.asm	/^ffff80000010ac98:	48 b8 d8 b3 11 00 00 	movabs $0xffff80000011b3d8,%rax$/;"	l
ffff80000010ac9f	kernel.asm	/^ffff80000010ac9f:	80 ff ff $/;"	l
ffff80000010aca2	kernel.asm	/^ffff80000010aca2:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff80000010aca5	kernel.asm	/^ffff80000010aca5:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010aca8	kernel.asm	/^ffff80000010aca8:	48 b8 e6 a5 10 00 00 	movabs $0xffff80000010a5e6,%rax$/;"	l
ffff80000010acaf	kernel.asm	/^ffff80000010acaf:	80 ff ff $/;"	l
ffff80000010acb2	kernel.asm	/^ffff80000010acb2:	ff d0                	callq  *%rax$/;"	l
ffff80000010acb4	kernel.asm	/^ffff80000010acb4:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010acb7	kernel.asm	/^ffff80000010acb7:	48 b8 d0 a5 10 00 00 	movabs $0xffff80000010a5d0,%rax$/;"	l
ffff80000010acbe	kernel.asm	/^ffff80000010acbe:	80 ff ff $/;"	l
ffff80000010acc1	kernel.asm	/^ffff80000010acc1:	ff d0                	callq  *%rax$/;"	l
ffff80000010acc3	kernel.asm	/^ffff80000010acc3:	90                   	nop$/;"	l
ffff80000010acc4	kernel.asm	/^ffff80000010acc4:	5d                   	pop    %rbp$/;"	l
ffff80000010acc5	kernel.asm	/^ffff80000010acc5:	c3                   	retq   $/;"	l
ffff80000010acc6	kernel.asm	/^ffff80000010acc6 <switchuvm>:$/;"	l
ffff80000010acc6	kernel.asm	/^ffff80000010acc6:	55                   	push   %rbp$/;"	l
ffff80000010acc7	kernel.asm	/^ffff80000010acc7:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010acca	kernel.asm	/^ffff80000010acca:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ffff80000010acce	kernel.asm	/^ffff80000010acce:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
ffff80000010acd2	kernel.asm	/^ffff80000010acd2:	48 b8 12 74 10 00 00 	movabs $0xffff800000107412,%rax$/;"	l
ffff80000010acd9	kernel.asm	/^ffff80000010acd9:	80 ff ff $/;"	l
ffff80000010acdc	kernel.asm	/^ffff80000010acdc:	ff d0                	callq  *%rax$/;"	l
ffff80000010acde	kernel.asm	/^ffff80000010acde:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010ace2	kernel.asm	/^ffff80000010ace2:	48 8b 40 08          	mov    0x8(%rax),%rax$/;"	l
ffff80000010ace6	kernel.asm	/^ffff80000010ace6:	48 85 c0             	test   %rax,%rax$/;"	l
ffff80000010ace9	kernel.asm	/^ffff80000010ace9:	75 16                	jne    ffff80000010ad01 <switchuvm+0x3b>$/;"	l
ffff80000010aceb	kernel.asm	/^ffff80000010aceb:	48 bf 10 c1 10 00 00 	movabs $0xffff80000010c110,%rdi$/;"	l
ffff80000010acf2	kernel.asm	/^ffff80000010acf2:	80 ff ff $/;"	l
ffff80000010acf5	kernel.asm	/^ffff80000010acf5:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff80000010acfc	kernel.asm	/^ffff80000010acfc:	80 ff ff $/;"	l
ffff80000010acff	kernel.asm	/^ffff80000010acff:	ff d0                	callq  *%rax$/;"	l
ffff80000010ad01	kernel.asm	/^ffff80000010ad01:	64 48 8b 04 25 f0 ff 	mov    %fs:0xfffffffffffffff0,%rax$/;"	l
ffff80000010ad08	kernel.asm	/^ffff80000010ad08:	ff ff $/;"	l
ffff80000010ad0a	kernel.asm	/^ffff80000010ad0a:	48 8b 80 f0 00 00 00 	mov    0xf0(%rax),%rax$/;"	l
ffff80000010ad11	kernel.asm	/^ffff80000010ad11:	48 05 00 04 00 00    	add    $0x400,%rax$/;"	l
ffff80000010ad17	kernel.asm	/^ffff80000010ad17:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff80000010ad1b	kernel.asm	/^ffff80000010ad1b:	64 48 8b 04 25 f8 ff 	mov    %fs:0xfffffffffffffff8,%rax$/;"	l
ffff80000010ad22	kernel.asm	/^ffff80000010ad22:	ff ff $/;"	l
ffff80000010ad24	kernel.asm	/^ffff80000010ad24:	48 8b 40 10          	mov    0x10(%rax),%rax$/;"	l
ffff80000010ad28	kernel.asm	/^ffff80000010ad28:	48 8d 90 00 10 00 00 	lea    0x1000(%rax),%rdx$/;"	l
ffff80000010ad2f	kernel.asm	/^ffff80000010ad2f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010ad33	kernel.asm	/^ffff80000010ad33:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffff80000010ad38	kernel.asm	/^ffff80000010ad38:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010ad3b	kernel.asm	/^ffff80000010ad3b:	48 b8 05 a6 10 00 00 	movabs $0xffff80000010a605,%rax$/;"	l
ffff80000010ad42	kernel.asm	/^ffff80000010ad42:	80 ff ff $/;"	l
ffff80000010ad45	kernel.asm	/^ffff80000010ad45:	ff d0                	callq  *%rax$/;"	l
ffff80000010ad47	kernel.asm	/^ffff80000010ad47:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010ad4b	kernel.asm	/^ffff80000010ad4b:	48 8b 40 08          	mov    0x8(%rax),%rax$/;"	l
ffff80000010ad4f	kernel.asm	/^ffff80000010ad4f:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010ad52	kernel.asm	/^ffff80000010ad52:	48 b8 e6 a5 10 00 00 	movabs $0xffff80000010a5e6,%rax$/;"	l
ffff80000010ad59	kernel.asm	/^ffff80000010ad59:	80 ff ff $/;"	l
ffff80000010ad5c	kernel.asm	/^ffff80000010ad5c:	ff d0                	callq  *%rax$/;"	l
ffff80000010ad5e	kernel.asm	/^ffff80000010ad5e:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010ad61	kernel.asm	/^ffff80000010ad61:	48 b8 d0 a5 10 00 00 	movabs $0xffff80000010a5d0,%rax$/;"	l
ffff80000010ad68	kernel.asm	/^ffff80000010ad68:	80 ff ff $/;"	l
ffff80000010ad6b	kernel.asm	/^ffff80000010ad6b:	ff d0                	callq  *%rax$/;"	l
ffff80000010ad6d	kernel.asm	/^ffff80000010ad6d:	48 b8 8c 74 10 00 00 	movabs $0xffff80000010748c,%rax$/;"	l
ffff80000010ad74	kernel.asm	/^ffff80000010ad74:	80 ff ff $/;"	l
ffff80000010ad77	kernel.asm	/^ffff80000010ad77:	ff d0                	callq  *%rax$/;"	l
ffff80000010ad79	kernel.asm	/^ffff80000010ad79:	90                   	nop$/;"	l
ffff80000010ad7a	kernel.asm	/^ffff80000010ad7a:	c9                   	leaveq $/;"	l
ffff80000010ad7b	kernel.asm	/^ffff80000010ad7b:	c3                   	retq   $/;"	l
ffff80000010ad7c	kernel.asm	/^ffff80000010ad7c <walkpgdir>:$/;"	l
ffff80000010ad7c	kernel.asm	/^ffff80000010ad7c:	55                   	push   %rbp$/;"	l
ffff80000010ad7d	kernel.asm	/^ffff80000010ad7d:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010ad80	kernel.asm	/^ffff80000010ad80:	48 83 ec 50          	sub    $0x50,%rsp$/;"	l
ffff80000010ad84	kernel.asm	/^ffff80000010ad84:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)$/;"	l
ffff80000010ad88	kernel.asm	/^ffff80000010ad88:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)$/;"	l
ffff80000010ad8c	kernel.asm	/^ffff80000010ad8c:	89 55 bc             	mov    %edx,-0x44(%rbp)$/;"	l
ffff80000010ad8f	kernel.asm	/^ffff80000010ad8f:	48 8b 45 c0          	mov    -0x40(%rbp),%rax$/;"	l
ffff80000010ad93	kernel.asm	/^ffff80000010ad93:	48 c1 e8 27          	shr    $0x27,%rax$/;"	l
ffff80000010ad97	kernel.asm	/^ffff80000010ad97:	25 ff 01 00 00       	and    $0x1ff,%eax$/;"	l
ffff80000010ad9c	kernel.asm	/^ffff80000010ad9c:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx$/;"	l
ffff80000010ada3	kernel.asm	/^ffff80000010ada3:	00 $/;"	l
ffff80000010ada4	kernel.asm	/^ffff80000010ada4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
ffff80000010ada8	kernel.asm	/^ffff80000010ada8:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff80000010adab	kernel.asm	/^ffff80000010adab:	48 89 45 e0          	mov    %rax,-0x20(%rbp)$/;"	l
ffff80000010adaf	kernel.asm	/^ffff80000010adaf:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff80000010adb3	kernel.asm	/^ffff80000010adb3:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff80000010adb6	kernel.asm	/^ffff80000010adb6:	83 e0 01             	and    $0x1,%eax$/;"	l
ffff80000010adb9	kernel.asm	/^ffff80000010adb9:	48 85 c0             	test   %rax,%rax$/;"	l
ffff80000010adbc	kernel.asm	/^ffff80000010adbc:	74 23                	je     ffff80000010ade1 <walkpgdir+0x65>$/;"	l
ffff80000010adbe	kernel.asm	/^ffff80000010adbe:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff80000010adc2	kernel.asm	/^ffff80000010adc2:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff80000010adc5	kernel.asm	/^ffff80000010adc5:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax$/;"	l
ffff80000010adcb	kernel.asm	/^ffff80000010adcb:	48 89 c2             	mov    %rax,%rdx$/;"	l
ffff80000010adce	kernel.asm	/^ffff80000010adce:	48 b8 00 00 00 00 00 	movabs $0xffff800000000000,%rax$/;"	l
ffff80000010add5	kernel.asm	/^ffff80000010add5:	80 ff ff $/;"	l
ffff80000010add8	kernel.asm	/^ffff80000010add8:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff80000010addb	kernel.asm	/^ffff80000010addb:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff80000010addf	kernel.asm	/^ffff80000010addf:	eb 63                	jmp    ffff80000010ae44 <walkpgdir+0xc8>$/;"	l
ffff80000010ade1	kernel.asm	/^ffff80000010ade1:	83 7d bc 00          	cmpl   $0x0,-0x44(%rbp)$/;"	l
ffff80000010ade5	kernel.asm	/^ffff80000010ade5:	74 17                	je     ffff80000010adfe <walkpgdir+0x82>$/;"	l
ffff80000010ade7	kernel.asm	/^ffff80000010ade7:	48 b8 9f 40 10 00 00 	movabs $0xffff80000010409f,%rax$/;"	l
ffff80000010adee	kernel.asm	/^ffff80000010adee:	80 ff ff $/;"	l
ffff80000010adf1	kernel.asm	/^ffff80000010adf1:	ff d0                	callq  *%rax$/;"	l
ffff80000010adf3	kernel.asm	/^ffff80000010adf3:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff80000010adf7	kernel.asm	/^ffff80000010adf7:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)$/;"	l
ffff80000010adfc	kernel.asm	/^ffff80000010adfc:	75 0a                	jne    ffff80000010ae08 <walkpgdir+0x8c>$/;"	l
ffff80000010adfe	kernel.asm	/^ffff80000010adfe:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff80000010ae03	kernel.asm	/^ffff80000010ae03:	e9 bf 01 00 00       	jmpq   ffff80000010afc7 <walkpgdir+0x24b>$/;"	l
ffff80000010ae08	kernel.asm	/^ffff80000010ae08:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010ae0c	kernel.asm	/^ffff80000010ae0c:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
ffff80000010ae11	kernel.asm	/^ffff80000010ae11:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffff80000010ae16	kernel.asm	/^ffff80000010ae16:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010ae19	kernel.asm	/^ffff80000010ae19:	48 b8 9b 75 10 00 00 	movabs $0xffff80000010759b,%rax$/;"	l
ffff80000010ae20	kernel.asm	/^ffff80000010ae20:	80 ff ff $/;"	l
ffff80000010ae23	kernel.asm	/^ffff80000010ae23:	ff d0                	callq  *%rax$/;"	l
ffff80000010ae25	kernel.asm	/^ffff80000010ae25:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx$/;"	l
ffff80000010ae29	kernel.asm	/^ffff80000010ae29:	48 b8 00 00 00 00 00 	movabs $0x800000000000,%rax$/;"	l
ffff80000010ae30	kernel.asm	/^ffff80000010ae30:	80 00 00 $/;"	l
ffff80000010ae33	kernel.asm	/^ffff80000010ae33:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff80000010ae36	kernel.asm	/^ffff80000010ae36:	48 83 c8 07          	or     $0x7,%rax$/;"	l
ffff80000010ae3a	kernel.asm	/^ffff80000010ae3a:	48 89 c2             	mov    %rax,%rdx$/;"	l
ffff80000010ae3d	kernel.asm	/^ffff80000010ae3d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff80000010ae41	kernel.asm	/^ffff80000010ae41:	48 89 10             	mov    %rdx,(%rax)$/;"	l
ffff80000010ae44	kernel.asm	/^ffff80000010ae44:	48 8b 45 c0          	mov    -0x40(%rbp),%rax$/;"	l
ffff80000010ae48	kernel.asm	/^ffff80000010ae48:	48 c1 e8 1e          	shr    $0x1e,%rax$/;"	l
ffff80000010ae4c	kernel.asm	/^ffff80000010ae4c:	25 ff 01 00 00       	and    $0x1ff,%eax$/;"	l
ffff80000010ae51	kernel.asm	/^ffff80000010ae51:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx$/;"	l
ffff80000010ae58	kernel.asm	/^ffff80000010ae58:	00 $/;"	l
ffff80000010ae59	kernel.asm	/^ffff80000010ae59:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010ae5d	kernel.asm	/^ffff80000010ae5d:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff80000010ae60	kernel.asm	/^ffff80000010ae60:	48 89 45 d8          	mov    %rax,-0x28(%rbp)$/;"	l
ffff80000010ae64	kernel.asm	/^ffff80000010ae64:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff80000010ae68	kernel.asm	/^ffff80000010ae68:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff80000010ae6b	kernel.asm	/^ffff80000010ae6b:	83 e0 01             	and    $0x1,%eax$/;"	l
ffff80000010ae6e	kernel.asm	/^ffff80000010ae6e:	48 85 c0             	test   %rax,%rax$/;"	l
ffff80000010ae71	kernel.asm	/^ffff80000010ae71:	74 23                	je     ffff80000010ae96 <walkpgdir+0x11a>$/;"	l
ffff80000010ae73	kernel.asm	/^ffff80000010ae73:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff80000010ae77	kernel.asm	/^ffff80000010ae77:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff80000010ae7a	kernel.asm	/^ffff80000010ae7a:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax$/;"	l
ffff80000010ae80	kernel.asm	/^ffff80000010ae80:	48 89 c2             	mov    %rax,%rdx$/;"	l
ffff80000010ae83	kernel.asm	/^ffff80000010ae83:	48 b8 00 00 00 00 00 	movabs $0xffff800000000000,%rax$/;"	l
ffff80000010ae8a	kernel.asm	/^ffff80000010ae8a:	80 ff ff $/;"	l
ffff80000010ae8d	kernel.asm	/^ffff80000010ae8d:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff80000010ae90	kernel.asm	/^ffff80000010ae90:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ffff80000010ae94	kernel.asm	/^ffff80000010ae94:	eb 63                	jmp    ffff80000010aef9 <walkpgdir+0x17d>$/;"	l
ffff80000010ae96	kernel.asm	/^ffff80000010ae96:	83 7d bc 00          	cmpl   $0x0,-0x44(%rbp)$/;"	l
ffff80000010ae9a	kernel.asm	/^ffff80000010ae9a:	74 17                	je     ffff80000010aeb3 <walkpgdir+0x137>$/;"	l
ffff80000010ae9c	kernel.asm	/^ffff80000010ae9c:	48 b8 9f 40 10 00 00 	movabs $0xffff80000010409f,%rax$/;"	l
ffff80000010aea3	kernel.asm	/^ffff80000010aea3:	80 ff ff $/;"	l
ffff80000010aea6	kernel.asm	/^ffff80000010aea6:	ff d0                	callq  *%rax$/;"	l
ffff80000010aea8	kernel.asm	/^ffff80000010aea8:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ffff80000010aeac	kernel.asm	/^ffff80000010aeac:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)$/;"	l
ffff80000010aeb1	kernel.asm	/^ffff80000010aeb1:	75 0a                	jne    ffff80000010aebd <walkpgdir+0x141>$/;"	l
ffff80000010aeb3	kernel.asm	/^ffff80000010aeb3:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff80000010aeb8	kernel.asm	/^ffff80000010aeb8:	e9 0a 01 00 00       	jmpq   ffff80000010afc7 <walkpgdir+0x24b>$/;"	l
ffff80000010aebd	kernel.asm	/^ffff80000010aebd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff80000010aec1	kernel.asm	/^ffff80000010aec1:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
ffff80000010aec6	kernel.asm	/^ffff80000010aec6:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffff80000010aecb	kernel.asm	/^ffff80000010aecb:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010aece	kernel.asm	/^ffff80000010aece:	48 b8 9b 75 10 00 00 	movabs $0xffff80000010759b,%rax$/;"	l
ffff80000010aed5	kernel.asm	/^ffff80000010aed5:	80 ff ff $/;"	l
ffff80000010aed8	kernel.asm	/^ffff80000010aed8:	ff d0                	callq  *%rax$/;"	l
ffff80000010aeda	kernel.asm	/^ffff80000010aeda:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
ffff80000010aede	kernel.asm	/^ffff80000010aede:	48 b8 00 00 00 00 00 	movabs $0x800000000000,%rax$/;"	l
ffff80000010aee5	kernel.asm	/^ffff80000010aee5:	80 00 00 $/;"	l
ffff80000010aee8	kernel.asm	/^ffff80000010aee8:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff80000010aeeb	kernel.asm	/^ffff80000010aeeb:	48 83 c8 07          	or     $0x7,%rax$/;"	l
ffff80000010aeef	kernel.asm	/^ffff80000010aeef:	48 89 c2             	mov    %rax,%rdx$/;"	l
ffff80000010aef2	kernel.asm	/^ffff80000010aef2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff80000010aef6	kernel.asm	/^ffff80000010aef6:	48 89 10             	mov    %rdx,(%rax)$/;"	l
ffff80000010aef9	kernel.asm	/^ffff80000010aef9:	48 8b 45 c0          	mov    -0x40(%rbp),%rax$/;"	l
ffff80000010aefd	kernel.asm	/^ffff80000010aefd:	48 c1 e8 15          	shr    $0x15,%rax$/;"	l
ffff80000010af01	kernel.asm	/^ffff80000010af01:	25 ff 01 00 00       	and    $0x1ff,%eax$/;"	l
ffff80000010af06	kernel.asm	/^ffff80000010af06:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx$/;"	l
ffff80000010af0d	kernel.asm	/^ffff80000010af0d:	00 $/;"	l
ffff80000010af0e	kernel.asm	/^ffff80000010af0e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff80000010af12	kernel.asm	/^ffff80000010af12:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff80000010af15	kernel.asm	/^ffff80000010af15:	48 89 45 d0          	mov    %rax,-0x30(%rbp)$/;"	l
ffff80000010af19	kernel.asm	/^ffff80000010af19:	48 8b 45 d0          	mov    -0x30(%rbp),%rax$/;"	l
ffff80000010af1d	kernel.asm	/^ffff80000010af1d:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff80000010af20	kernel.asm	/^ffff80000010af20:	83 e0 01             	and    $0x1,%eax$/;"	l
ffff80000010af23	kernel.asm	/^ffff80000010af23:	48 85 c0             	test   %rax,%rax$/;"	l
ffff80000010af26	kernel.asm	/^ffff80000010af26:	74 23                	je     ffff80000010af4b <walkpgdir+0x1cf>$/;"	l
ffff80000010af28	kernel.asm	/^ffff80000010af28:	48 8b 45 d0          	mov    -0x30(%rbp),%rax$/;"	l
ffff80000010af2c	kernel.asm	/^ffff80000010af2c:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff80000010af2f	kernel.asm	/^ffff80000010af2f:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax$/;"	l
ffff80000010af35	kernel.asm	/^ffff80000010af35:	48 89 c2             	mov    %rax,%rdx$/;"	l
ffff80000010af38	kernel.asm	/^ffff80000010af38:	48 b8 00 00 00 00 00 	movabs $0xffff800000000000,%rax$/;"	l
ffff80000010af3f	kernel.asm	/^ffff80000010af3f:	80 ff ff $/;"	l
ffff80000010af42	kernel.asm	/^ffff80000010af42:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff80000010af45	kernel.asm	/^ffff80000010af45:	48 89 45 e8          	mov    %rax,-0x18(%rbp)$/;"	l
ffff80000010af49	kernel.asm	/^ffff80000010af49:	eb 60                	jmp    ffff80000010afab <walkpgdir+0x22f>$/;"	l
ffff80000010af4b	kernel.asm	/^ffff80000010af4b:	83 7d bc 00          	cmpl   $0x0,-0x44(%rbp)$/;"	l
ffff80000010af4f	kernel.asm	/^ffff80000010af4f:	74 17                	je     ffff80000010af68 <walkpgdir+0x1ec>$/;"	l
ffff80000010af51	kernel.asm	/^ffff80000010af51:	48 b8 9f 40 10 00 00 	movabs $0xffff80000010409f,%rax$/;"	l
ffff80000010af58	kernel.asm	/^ffff80000010af58:	80 ff ff $/;"	l
ffff80000010af5b	kernel.asm	/^ffff80000010af5b:	ff d0                	callq  *%rax$/;"	l
ffff80000010af5d	kernel.asm	/^ffff80000010af5d:	48 89 45 e8          	mov    %rax,-0x18(%rbp)$/;"	l
ffff80000010af61	kernel.asm	/^ffff80000010af61:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)$/;"	l
ffff80000010af66	kernel.asm	/^ffff80000010af66:	75 07                	jne    ffff80000010af6f <walkpgdir+0x1f3>$/;"	l
ffff80000010af68	kernel.asm	/^ffff80000010af68:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff80000010af6d	kernel.asm	/^ffff80000010af6d:	eb 58                	jmp    ffff80000010afc7 <walkpgdir+0x24b>$/;"	l
ffff80000010af6f	kernel.asm	/^ffff80000010af6f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010af73	kernel.asm	/^ffff80000010af73:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
ffff80000010af78	kernel.asm	/^ffff80000010af78:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffff80000010af7d	kernel.asm	/^ffff80000010af7d:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010af80	kernel.asm	/^ffff80000010af80:	48 b8 9b 75 10 00 00 	movabs $0xffff80000010759b,%rax$/;"	l
ffff80000010af87	kernel.asm	/^ffff80000010af87:	80 ff ff $/;"	l
ffff80000010af8a	kernel.asm	/^ffff80000010af8a:	ff d0                	callq  *%rax$/;"	l
ffff80000010af8c	kernel.asm	/^ffff80000010af8c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx$/;"	l
ffff80000010af90	kernel.asm	/^ffff80000010af90:	48 b8 00 00 00 00 00 	movabs $0x800000000000,%rax$/;"	l
ffff80000010af97	kernel.asm	/^ffff80000010af97:	80 00 00 $/;"	l
ffff80000010af9a	kernel.asm	/^ffff80000010af9a:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff80000010af9d	kernel.asm	/^ffff80000010af9d:	48 83 c8 07          	or     $0x7,%rax$/;"	l
ffff80000010afa1	kernel.asm	/^ffff80000010afa1:	48 89 c2             	mov    %rax,%rdx$/;"	l
ffff80000010afa4	kernel.asm	/^ffff80000010afa4:	48 8b 45 d0          	mov    -0x30(%rbp),%rax$/;"	l
ffff80000010afa8	kernel.asm	/^ffff80000010afa8:	48 89 10             	mov    %rdx,(%rax)$/;"	l
ffff80000010afab	kernel.asm	/^ffff80000010afab:	48 8b 45 c0          	mov    -0x40(%rbp),%rax$/;"	l
ffff80000010afaf	kernel.asm	/^ffff80000010afaf:	48 c1 e8 0c          	shr    $0xc,%rax$/;"	l
ffff80000010afb3	kernel.asm	/^ffff80000010afb3:	25 ff 01 00 00       	and    $0x1ff,%eax$/;"	l
ffff80000010afb8	kernel.asm	/^ffff80000010afb8:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx$/;"	l
ffff80000010afbf	kernel.asm	/^ffff80000010afbf:	00 $/;"	l
ffff80000010afc0	kernel.asm	/^ffff80000010afc0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010afc4	kernel.asm	/^ffff80000010afc4:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff80000010afc7	kernel.asm	/^ffff80000010afc7:	c9                   	leaveq $/;"	l
ffff80000010afc8	kernel.asm	/^ffff80000010afc8:	c3                   	retq   $/;"	l
ffff80000010afc9	kernel.asm	/^ffff80000010afc9 <mappages>:$/;"	l
ffff80000010afc9	kernel.asm	/^ffff80000010afc9:	55                   	push   %rbp$/;"	l
ffff80000010afca	kernel.asm	/^ffff80000010afca:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010afcd	kernel.asm	/^ffff80000010afcd:	48 83 ec 50          	sub    $0x50,%rsp$/;"	l
ffff80000010afd1	kernel.asm	/^ffff80000010afd1:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)$/;"	l
ffff80000010afd5	kernel.asm	/^ffff80000010afd5:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)$/;"	l
ffff80000010afd9	kernel.asm	/^ffff80000010afd9:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)$/;"	l
ffff80000010afdd	kernel.asm	/^ffff80000010afdd:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)$/;"	l
ffff80000010afe1	kernel.asm	/^ffff80000010afe1:	44 89 45 bc          	mov    %r8d,-0x44(%rbp)$/;"	l
ffff80000010afe5	kernel.asm	/^ffff80000010afe5:	48 8b 45 d0          	mov    -0x30(%rbp),%rax$/;"	l
ffff80000010afe9	kernel.asm	/^ffff80000010afe9:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax$/;"	l
ffff80000010afef	kernel.asm	/^ffff80000010afef:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff80000010aff3	kernel.asm	/^ffff80000010aff3:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx$/;"	l
ffff80000010aff7	kernel.asm	/^ffff80000010aff7:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
ffff80000010affb	kernel.asm	/^ffff80000010affb:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff80000010affe	kernel.asm	/^ffff80000010affe:	48 83 e8 01          	sub    $0x1,%rax$/;"	l
ffff80000010b002	kernel.asm	/^ffff80000010b002:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax$/;"	l
ffff80000010b008	kernel.asm	/^ffff80000010b008:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ffff80000010b00c	kernel.asm	/^ffff80000010b00c:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx$/;"	l
ffff80000010b010	kernel.asm	/^ffff80000010b010:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff80000010b014	kernel.asm	/^ffff80000010b014:	ba 01 00 00 00       	mov    $0x1,%edx$/;"	l
ffff80000010b019	kernel.asm	/^ffff80000010b019:	48 89 ce             	mov    %rcx,%rsi$/;"	l
ffff80000010b01c	kernel.asm	/^ffff80000010b01c:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010b01f	kernel.asm	/^ffff80000010b01f:	48 b8 7c ad 10 00 00 	movabs $0xffff80000010ad7c,%rax$/;"	l
ffff80000010b026	kernel.asm	/^ffff80000010b026:	80 ff ff $/;"	l
ffff80000010b029	kernel.asm	/^ffff80000010b029:	ff d0                	callq  *%rax$/;"	l
ffff80000010b02b	kernel.asm	/^ffff80000010b02b:	48 89 45 e8          	mov    %rax,-0x18(%rbp)$/;"	l
ffff80000010b02f	kernel.asm	/^ffff80000010b02f:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)$/;"	l
ffff80000010b034	kernel.asm	/^ffff80000010b034:	75 07                	jne    ffff80000010b03d <mappages+0x74>$/;"	l
ffff80000010b036	kernel.asm	/^ffff80000010b036:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff80000010b03b	kernel.asm	/^ffff80000010b03b:	eb 61                	jmp    ffff80000010b09e <mappages+0xd5>$/;"	l
ffff80000010b03d	kernel.asm	/^ffff80000010b03d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010b041	kernel.asm	/^ffff80000010b041:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff80000010b044	kernel.asm	/^ffff80000010b044:	83 e0 01             	and    $0x1,%eax$/;"	l
ffff80000010b047	kernel.asm	/^ffff80000010b047:	48 85 c0             	test   %rax,%rax$/;"	l
ffff80000010b04a	kernel.asm	/^ffff80000010b04a:	74 16                	je     ffff80000010b062 <mappages+0x99>$/;"	l
ffff80000010b04c	kernel.asm	/^ffff80000010b04c:	48 bf 24 c1 10 00 00 	movabs $0xffff80000010c124,%rdi$/;"	l
ffff80000010b053	kernel.asm	/^ffff80000010b053:	80 ff ff $/;"	l
ffff80000010b056	kernel.asm	/^ffff80000010b056:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff80000010b05d	kernel.asm	/^ffff80000010b05d:	80 ff ff $/;"	l
ffff80000010b060	kernel.asm	/^ffff80000010b060:	ff d0                	callq  *%rax$/;"	l
ffff80000010b062	kernel.asm	/^ffff80000010b062:	8b 45 bc             	mov    -0x44(%rbp),%eax$/;"	l
ffff80000010b065	kernel.asm	/^ffff80000010b065:	48 98                	cltq   $/;"	l
ffff80000010b067	kernel.asm	/^ffff80000010b067:	48 0b 45 c0          	or     -0x40(%rbp),%rax$/;"	l
ffff80000010b06b	kernel.asm	/^ffff80000010b06b:	48 83 c8 01          	or     $0x1,%rax$/;"	l
ffff80000010b06f	kernel.asm	/^ffff80000010b06f:	48 89 c2             	mov    %rax,%rdx$/;"	l
ffff80000010b072	kernel.asm	/^ffff80000010b072:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010b076	kernel.asm	/^ffff80000010b076:	48 89 10             	mov    %rdx,(%rax)$/;"	l
ffff80000010b079	kernel.asm	/^ffff80000010b079:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010b07d	kernel.asm	/^ffff80000010b07d:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax$/;"	l
ffff80000010b081	kernel.asm	/^ffff80000010b081:	74 15                	je     ffff80000010b098 <mappages+0xcf>$/;"	l
ffff80000010b083	kernel.asm	/^ffff80000010b083:	48 81 45 f8 00 10 00 	addq   $0x1000,-0x8(%rbp)$/;"	l
ffff80000010b08a	kernel.asm	/^ffff80000010b08a:	00 $/;"	l
ffff80000010b08b	kernel.asm	/^ffff80000010b08b:	48 81 45 c0 00 10 00 	addq   $0x1000,-0x40(%rbp)$/;"	l
ffff80000010b092	kernel.asm	/^ffff80000010b092:	00 $/;"	l
ffff80000010b093	kernel.asm	/^ffff80000010b093:	e9 74 ff ff ff       	jmpq   ffff80000010b00c <mappages+0x43>$/;"	l
ffff80000010b098	kernel.asm	/^ffff80000010b098:	90                   	nop$/;"	l
ffff80000010b099	kernel.asm	/^ffff80000010b099:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff80000010b09e	kernel.asm	/^ffff80000010b09e:	c9                   	leaveq $/;"	l
ffff80000010b09f	kernel.asm	/^ffff80000010b09f:	c3                   	retq   $/;"	l
ffff80000010b0a0	kernel.asm	/^ffff80000010b0a0 <inituvm>:$/;"	l
ffff80000010b0a0	kernel.asm	/^ffff80000010b0a0:	55                   	push   %rbp$/;"	l
ffff80000010b0a1	kernel.asm	/^ffff80000010b0a1:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010b0a4	kernel.asm	/^ffff80000010b0a4:	48 83 ec 30          	sub    $0x30,%rsp$/;"	l
ffff80000010b0a8	kernel.asm	/^ffff80000010b0a8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
ffff80000010b0ac	kernel.asm	/^ffff80000010b0ac:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)$/;"	l
ffff80000010b0b0	kernel.asm	/^ffff80000010b0b0:	89 55 dc             	mov    %edx,-0x24(%rbp)$/;"	l
ffff80000010b0b3	kernel.asm	/^ffff80000010b0b3:	81 7d dc ff 0f 00 00 	cmpl   $0xfff,-0x24(%rbp)$/;"	l
ffff80000010b0ba	kernel.asm	/^ffff80000010b0ba:	76 16                	jbe    ffff80000010b0d2 <inituvm+0x32>$/;"	l
ffff80000010b0bc	kernel.asm	/^ffff80000010b0bc:	48 bf 2a c1 10 00 00 	movabs $0xffff80000010c12a,%rdi$/;"	l
ffff80000010b0c3	kernel.asm	/^ffff80000010b0c3:	80 ff ff $/;"	l
ffff80000010b0c6	kernel.asm	/^ffff80000010b0c6:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff80000010b0cd	kernel.asm	/^ffff80000010b0cd:	80 ff ff $/;"	l
ffff80000010b0d0	kernel.asm	/^ffff80000010b0d0:	ff d0                	callq  *%rax$/;"	l
ffff80000010b0d2	kernel.asm	/^ffff80000010b0d2:	48 b8 9f 40 10 00 00 	movabs $0xffff80000010409f,%rax$/;"	l
ffff80000010b0d9	kernel.asm	/^ffff80000010b0d9:	80 ff ff $/;"	l
ffff80000010b0dc	kernel.asm	/^ffff80000010b0dc:	ff d0                	callq  *%rax$/;"	l
ffff80000010b0de	kernel.asm	/^ffff80000010b0de:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff80000010b0e2	kernel.asm	/^ffff80000010b0e2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010b0e6	kernel.asm	/^ffff80000010b0e6:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
ffff80000010b0eb	kernel.asm	/^ffff80000010b0eb:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffff80000010b0f0	kernel.asm	/^ffff80000010b0f0:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010b0f3	kernel.asm	/^ffff80000010b0f3:	48 b8 9b 75 10 00 00 	movabs $0xffff80000010759b,%rax$/;"	l
ffff80000010b0fa	kernel.asm	/^ffff80000010b0fa:	80 ff ff $/;"	l
ffff80000010b0fd	kernel.asm	/^ffff80000010b0fd:	ff d0                	callq  *%rax$/;"	l
ffff80000010b0ff	kernel.asm	/^ffff80000010b0ff:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx$/;"	l
ffff80000010b103	kernel.asm	/^ffff80000010b103:	48 b8 00 00 00 00 00 	movabs $0x800000000000,%rax$/;"	l
ffff80000010b10a	kernel.asm	/^ffff80000010b10a:	80 00 00 $/;"	l
ffff80000010b10d	kernel.asm	/^ffff80000010b10d:	48 01 c2             	add    %rax,%rdx$/;"	l
ffff80000010b110	kernel.asm	/^ffff80000010b110:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010b114	kernel.asm	/^ffff80000010b114:	41 b8 06 00 00 00    	mov    $0x6,%r8d$/;"	l
ffff80000010b11a	kernel.asm	/^ffff80000010b11a:	48 89 d1             	mov    %rdx,%rcx$/;"	l
ffff80000010b11d	kernel.asm	/^ffff80000010b11d:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
ffff80000010b122	kernel.asm	/^ffff80000010b122:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffff80000010b127	kernel.asm	/^ffff80000010b127:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010b12a	kernel.asm	/^ffff80000010b12a:	48 b8 c9 af 10 00 00 	movabs $0xffff80000010afc9,%rax$/;"	l
ffff80000010b131	kernel.asm	/^ffff80000010b131:	80 ff ff $/;"	l
ffff80000010b134	kernel.asm	/^ffff80000010b134:	ff d0                	callq  *%rax$/;"	l
ffff80000010b136	kernel.asm	/^ffff80000010b136:	8b 55 dc             	mov    -0x24(%rbp),%edx$/;"	l
ffff80000010b139	kernel.asm	/^ffff80000010b139:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx$/;"	l
ffff80000010b13d	kernel.asm	/^ffff80000010b13d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010b141	kernel.asm	/^ffff80000010b141:	48 89 ce             	mov    %rcx,%rsi$/;"	l
ffff80000010b144	kernel.asm	/^ffff80000010b144:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010b147	kernel.asm	/^ffff80000010b147:	48 b8 98 76 10 00 00 	movabs $0xffff800000107698,%rax$/;"	l
ffff80000010b14e	kernel.asm	/^ffff80000010b14e:	80 ff ff $/;"	l
ffff80000010b151	kernel.asm	/^ffff80000010b151:	ff d0                	callq  *%rax$/;"	l
ffff80000010b153	kernel.asm	/^ffff80000010b153:	90                   	nop$/;"	l
ffff80000010b154	kernel.asm	/^ffff80000010b154:	c9                   	leaveq $/;"	l
ffff80000010b155	kernel.asm	/^ffff80000010b155:	c3                   	retq   $/;"	l
ffff80000010b156	kernel.asm	/^ffff80000010b156 <loaduvm>:$/;"	l
ffff80000010b156	kernel.asm	/^ffff80000010b156:	55                   	push   %rbp$/;"	l
ffff80000010b157	kernel.asm	/^ffff80000010b157:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010b15a	kernel.asm	/^ffff80000010b15a:	48 83 ec 40          	sub    $0x40,%rsp$/;"	l
ffff80000010b15e	kernel.asm	/^ffff80000010b15e:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)$/;"	l
ffff80000010b162	kernel.asm	/^ffff80000010b162:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)$/;"	l
ffff80000010b166	kernel.asm	/^ffff80000010b166:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)$/;"	l
ffff80000010b16a	kernel.asm	/^ffff80000010b16a:	89 4d c4             	mov    %ecx,-0x3c(%rbp)$/;"	l
ffff80000010b16d	kernel.asm	/^ffff80000010b16d:	44 89 45 c0          	mov    %r8d,-0x40(%rbp)$/;"	l
ffff80000010b171	kernel.asm	/^ffff80000010b171:	48 8b 45 d0          	mov    -0x30(%rbp),%rax$/;"	l
ffff80000010b175	kernel.asm	/^ffff80000010b175:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
ffff80000010b17a	kernel.asm	/^ffff80000010b17a:	48 85 c0             	test   %rax,%rax$/;"	l
ffff80000010b17d	kernel.asm	/^ffff80000010b17d:	74 16                	je     ffff80000010b195 <loaduvm+0x3f>$/;"	l
ffff80000010b17f	kernel.asm	/^ffff80000010b17f:	48 bf 48 c1 10 00 00 	movabs $0xffff80000010c148,%rdi$/;"	l
ffff80000010b186	kernel.asm	/^ffff80000010b186:	80 ff ff $/;"	l
ffff80000010b189	kernel.asm	/^ffff80000010b189:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff80000010b190	kernel.asm	/^ffff80000010b190:	80 ff ff $/;"	l
ffff80000010b193	kernel.asm	/^ffff80000010b193:	ff d0                	callq  *%rax$/;"	l
ffff80000010b195	kernel.asm	/^ffff80000010b195:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)$/;"	l
ffff80000010b19c	kernel.asm	/^ffff80000010b19c:	e9 c4 00 00 00       	jmpq   ffff80000010b265 <loaduvm+0x10f>$/;"	l
ffff80000010b1a1	kernel.asm	/^ffff80000010b1a1:	8b 55 fc             	mov    -0x4(%rbp),%edx$/;"	l
ffff80000010b1a4	kernel.asm	/^ffff80000010b1a4:	48 8b 45 d0          	mov    -0x30(%rbp),%rax$/;"	l
ffff80000010b1a8	kernel.asm	/^ffff80000010b1a8:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx$/;"	l
ffff80000010b1ac	kernel.asm	/^ffff80000010b1ac:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff80000010b1b0	kernel.asm	/^ffff80000010b1b0:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
ffff80000010b1b5	kernel.asm	/^ffff80000010b1b5:	48 89 ce             	mov    %rcx,%rsi$/;"	l
ffff80000010b1b8	kernel.asm	/^ffff80000010b1b8:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010b1bb	kernel.asm	/^ffff80000010b1bb:	48 b8 7c ad 10 00 00 	movabs $0xffff80000010ad7c,%rax$/;"	l
ffff80000010b1c2	kernel.asm	/^ffff80000010b1c2:	80 ff ff $/;"	l
ffff80000010b1c5	kernel.asm	/^ffff80000010b1c5:	ff d0                	callq  *%rax$/;"	l
ffff80000010b1c7	kernel.asm	/^ffff80000010b1c7:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ffff80000010b1cb	kernel.asm	/^ffff80000010b1cb:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)$/;"	l
ffff80000010b1d0	kernel.asm	/^ffff80000010b1d0:	75 16                	jne    ffff80000010b1e8 <loaduvm+0x92>$/;"	l
ffff80000010b1d2	kernel.asm	/^ffff80000010b1d2:	48 bf 6b c1 10 00 00 	movabs $0xffff80000010c16b,%rdi$/;"	l
ffff80000010b1d9	kernel.asm	/^ffff80000010b1d9:	80 ff ff $/;"	l
ffff80000010b1dc	kernel.asm	/^ffff80000010b1dc:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff80000010b1e3	kernel.asm	/^ffff80000010b1e3:	80 ff ff $/;"	l
ffff80000010b1e6	kernel.asm	/^ffff80000010b1e6:	ff d0                	callq  *%rax$/;"	l
ffff80000010b1e8	kernel.asm	/^ffff80000010b1e8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff80000010b1ec	kernel.asm	/^ffff80000010b1ec:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff80000010b1ef	kernel.asm	/^ffff80000010b1ef:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax$/;"	l
ffff80000010b1f5	kernel.asm	/^ffff80000010b1f5:	48 89 45 e8          	mov    %rax,-0x18(%rbp)$/;"	l
ffff80000010b1f9	kernel.asm	/^ffff80000010b1f9:	8b 45 c0             	mov    -0x40(%rbp),%eax$/;"	l
ffff80000010b1fc	kernel.asm	/^ffff80000010b1fc:	2b 45 fc             	sub    -0x4(%rbp),%eax$/;"	l
ffff80000010b1ff	kernel.asm	/^ffff80000010b1ff:	3d ff 0f 00 00       	cmp    $0xfff,%eax$/;"	l
ffff80000010b204	kernel.asm	/^ffff80000010b204:	77 0b                	ja     ffff80000010b211 <loaduvm+0xbb>$/;"	l
ffff80000010b206	kernel.asm	/^ffff80000010b206:	8b 45 c0             	mov    -0x40(%rbp),%eax$/;"	l
ffff80000010b209	kernel.asm	/^ffff80000010b209:	2b 45 fc             	sub    -0x4(%rbp),%eax$/;"	l
ffff80000010b20c	kernel.asm	/^ffff80000010b20c:	89 45 f8             	mov    %eax,-0x8(%rbp)$/;"	l
ffff80000010b20f	kernel.asm	/^ffff80000010b20f:	eb 07                	jmp    ffff80000010b218 <loaduvm+0xc2>$/;"	l
ffff80000010b211	kernel.asm	/^ffff80000010b211:	c7 45 f8 00 10 00 00 	movl   $0x1000,-0x8(%rbp)$/;"	l
ffff80000010b218	kernel.asm	/^ffff80000010b218:	8b 55 c4             	mov    -0x3c(%rbp),%edx$/;"	l
ffff80000010b21b	kernel.asm	/^ffff80000010b21b:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff80000010b21e	kernel.asm	/^ffff80000010b21e:	8d 34 02             	lea    (%rdx,%rax,1),%esi$/;"	l
ffff80000010b221	kernel.asm	/^ffff80000010b221:	48 ba 00 00 00 00 00 	movabs $0xffff800000000000,%rdx$/;"	l
ffff80000010b228	kernel.asm	/^ffff80000010b228:	80 ff ff $/;"	l
ffff80000010b22b	kernel.asm	/^ffff80000010b22b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010b22f	kernel.asm	/^ffff80000010b22f:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff80000010b232	kernel.asm	/^ffff80000010b232:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010b235	kernel.asm	/^ffff80000010b235:	8b 55 f8             	mov    -0x8(%rbp),%edx$/;"	l
ffff80000010b238	kernel.asm	/^ffff80000010b238:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
ffff80000010b23c	kernel.asm	/^ffff80000010b23c:	89 d1                	mov    %edx,%ecx$/;"	l
ffff80000010b23e	kernel.asm	/^ffff80000010b23e:	89 f2                	mov    %esi,%edx$/;"	l
ffff80000010b240	kernel.asm	/^ffff80000010b240:	48 89 fe             	mov    %rdi,%rsi$/;"	l
ffff80000010b243	kernel.asm	/^ffff80000010b243:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010b246	kernel.asm	/^ffff80000010b246:	48 b8 1e 2e 10 00 00 	movabs $0xffff800000102e1e,%rax$/;"	l
ffff80000010b24d	kernel.asm	/^ffff80000010b24d:	80 ff ff $/;"	l
ffff80000010b250	kernel.asm	/^ffff80000010b250:	ff d0                	callq  *%rax$/;"	l
ffff80000010b252	kernel.asm	/^ffff80000010b252:	3b 45 f8             	cmp    -0x8(%rbp),%eax$/;"	l
ffff80000010b255	kernel.asm	/^ffff80000010b255:	74 07                	je     ffff80000010b25e <loaduvm+0x108>$/;"	l
ffff80000010b257	kernel.asm	/^ffff80000010b257:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff80000010b25c	kernel.asm	/^ffff80000010b25c:	eb 18                	jmp    ffff80000010b276 <loaduvm+0x120>$/;"	l
ffff80000010b25e	kernel.asm	/^ffff80000010b25e:	81 45 fc 00 10 00 00 	addl   $0x1000,-0x4(%rbp)$/;"	l
ffff80000010b265	kernel.asm	/^ffff80000010b265:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff80000010b268	kernel.asm	/^ffff80000010b268:	3b 45 c0             	cmp    -0x40(%rbp),%eax$/;"	l
ffff80000010b26b	kernel.asm	/^ffff80000010b26b:	0f 82 30 ff ff ff    	jb     ffff80000010b1a1 <loaduvm+0x4b>$/;"	l
ffff80000010b271	kernel.asm	/^ffff80000010b271:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff80000010b276	kernel.asm	/^ffff80000010b276:	c9                   	leaveq $/;"	l
ffff80000010b277	kernel.asm	/^ffff80000010b277:	c3                   	retq   $/;"	l
ffff80000010b278	kernel.asm	/^ffff80000010b278 <allocuvm>:$/;"	l
ffff80000010b278	kernel.asm	/^ffff80000010b278:	55                   	push   %rbp$/;"	l
ffff80000010b279	kernel.asm	/^ffff80000010b279:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010b27c	kernel.asm	/^ffff80000010b27c:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ffff80000010b280	kernel.asm	/^ffff80000010b280:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
ffff80000010b284	kernel.asm	/^ffff80000010b284:	89 75 e4             	mov    %esi,-0x1c(%rbp)$/;"	l
ffff80000010b287	kernel.asm	/^ffff80000010b287:	89 55 e0             	mov    %edx,-0x20(%rbp)$/;"	l
ffff80000010b28a	kernel.asm	/^ffff80000010b28a:	8b 45 e0             	mov    -0x20(%rbp),%eax$/;"	l
ffff80000010b28d	kernel.asm	/^ffff80000010b28d:	3b 45 e4             	cmp    -0x1c(%rbp),%eax$/;"	l
ffff80000010b290	kernel.asm	/^ffff80000010b290:	73 08                	jae    ffff80000010b29a <allocuvm+0x22>$/;"	l
ffff80000010b292	kernel.asm	/^ffff80000010b292:	8b 45 e4             	mov    -0x1c(%rbp),%eax$/;"	l
ffff80000010b295	kernel.asm	/^ffff80000010b295:	e9 30 01 00 00       	jmpq   ffff80000010b3ca <allocuvm+0x152>$/;"	l
ffff80000010b29a	kernel.asm	/^ffff80000010b29a:	8b 45 e4             	mov    -0x1c(%rbp),%eax$/;"	l
ffff80000010b29d	kernel.asm	/^ffff80000010b29d:	48 05 ff 0f 00 00    	add    $0xfff,%rax$/;"	l
ffff80000010b2a3	kernel.asm	/^ffff80000010b2a3:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax$/;"	l
ffff80000010b2a9	kernel.asm	/^ffff80000010b2a9:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff80000010b2ad	kernel.asm	/^ffff80000010b2ad:	e9 08 01 00 00       	jmpq   ffff80000010b3ba <allocuvm+0x142>$/;"	l
ffff80000010b2b2	kernel.asm	/^ffff80000010b2b2:	48 b8 9f 40 10 00 00 	movabs $0xffff80000010409f,%rax$/;"	l
ffff80000010b2b9	kernel.asm	/^ffff80000010b2b9:	80 ff ff $/;"	l
ffff80000010b2bc	kernel.asm	/^ffff80000010b2bc:	ff d0                	callq  *%rax$/;"	l
ffff80000010b2be	kernel.asm	/^ffff80000010b2be:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ffff80000010b2c2	kernel.asm	/^ffff80000010b2c2:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)$/;"	l
ffff80000010b2c7	kernel.asm	/^ffff80000010b2c7:	75 41                	jne    ffff80000010b30a <allocuvm+0x92>$/;"	l
ffff80000010b2c9	kernel.asm	/^ffff80000010b2c9:	48 bf 89 c1 10 00 00 	movabs $0xffff80000010c189,%rdi$/;"	l
ffff80000010b2d0	kernel.asm	/^ffff80000010b2d0:	80 ff ff $/;"	l
ffff80000010b2d3	kernel.asm	/^ffff80000010b2d3:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff80000010b2d8	kernel.asm	/^ffff80000010b2d8:	48 ba ac 07 10 00 00 	movabs $0xffff8000001007ac,%rdx$/;"	l
ffff80000010b2df	kernel.asm	/^ffff80000010b2df:	80 ff ff $/;"	l
ffff80000010b2e2	kernel.asm	/^ffff80000010b2e2:	ff d2                	callq  *%rdx$/;"	l
ffff80000010b2e4	kernel.asm	/^ffff80000010b2e4:	8b 55 e4             	mov    -0x1c(%rbp),%edx$/;"	l
ffff80000010b2e7	kernel.asm	/^ffff80000010b2e7:	8b 4d e0             	mov    -0x20(%rbp),%ecx$/;"	l
ffff80000010b2ea	kernel.asm	/^ffff80000010b2ea:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010b2ee	kernel.asm	/^ffff80000010b2ee:	48 89 ce             	mov    %rcx,%rsi$/;"	l
ffff80000010b2f1	kernel.asm	/^ffff80000010b2f1:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010b2f4	kernel.asm	/^ffff80000010b2f4:	48 b8 cc b3 10 00 00 	movabs $0xffff80000010b3cc,%rax$/;"	l
ffff80000010b2fb	kernel.asm	/^ffff80000010b2fb:	80 ff ff $/;"	l
ffff80000010b2fe	kernel.asm	/^ffff80000010b2fe:	ff d0                	callq  *%rax$/;"	l
ffff80000010b300	kernel.asm	/^ffff80000010b300:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff80000010b305	kernel.asm	/^ffff80000010b305:	e9 c0 00 00 00       	jmpq   ffff80000010b3ca <allocuvm+0x152>$/;"	l
ffff80000010b30a	kernel.asm	/^ffff80000010b30a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff80000010b30e	kernel.asm	/^ffff80000010b30e:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
ffff80000010b313	kernel.asm	/^ffff80000010b313:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffff80000010b318	kernel.asm	/^ffff80000010b318:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010b31b	kernel.asm	/^ffff80000010b31b:	48 b8 9b 75 10 00 00 	movabs $0xffff80000010759b,%rax$/;"	l
ffff80000010b322	kernel.asm	/^ffff80000010b322:	80 ff ff $/;"	l
ffff80000010b325	kernel.asm	/^ffff80000010b325:	ff d0                	callq  *%rax$/;"	l
ffff80000010b327	kernel.asm	/^ffff80000010b327:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
ffff80000010b32b	kernel.asm	/^ffff80000010b32b:	48 b8 00 00 00 00 00 	movabs $0x800000000000,%rax$/;"	l
ffff80000010b332	kernel.asm	/^ffff80000010b332:	80 00 00 $/;"	l
ffff80000010b335	kernel.asm	/^ffff80000010b335:	48 01 c2             	add    %rax,%rdx$/;"	l
ffff80000010b338	kernel.asm	/^ffff80000010b338:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi$/;"	l
ffff80000010b33c	kernel.asm	/^ffff80000010b33c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010b340	kernel.asm	/^ffff80000010b340:	41 b8 06 00 00 00    	mov    $0x6,%r8d$/;"	l
ffff80000010b346	kernel.asm	/^ffff80000010b346:	48 89 d1             	mov    %rdx,%rcx$/;"	l
ffff80000010b349	kernel.asm	/^ffff80000010b349:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
ffff80000010b34e	kernel.asm	/^ffff80000010b34e:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010b351	kernel.asm	/^ffff80000010b351:	48 b8 c9 af 10 00 00 	movabs $0xffff80000010afc9,%rax$/;"	l
ffff80000010b358	kernel.asm	/^ffff80000010b358:	80 ff ff $/;"	l
ffff80000010b35b	kernel.asm	/^ffff80000010b35b:	ff d0                	callq  *%rax$/;"	l
ffff80000010b35d	kernel.asm	/^ffff80000010b35d:	85 c0                	test   %eax,%eax$/;"	l
ffff80000010b35f	kernel.asm	/^ffff80000010b35f:	79 51                	jns    ffff80000010b3b2 <allocuvm+0x13a>$/;"	l
ffff80000010b361	kernel.asm	/^ffff80000010b361:	48 bf a1 c1 10 00 00 	movabs $0xffff80000010c1a1,%rdi$/;"	l
ffff80000010b368	kernel.asm	/^ffff80000010b368:	80 ff ff $/;"	l
ffff80000010b36b	kernel.asm	/^ffff80000010b36b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff80000010b370	kernel.asm	/^ffff80000010b370:	48 ba ac 07 10 00 00 	movabs $0xffff8000001007ac,%rdx$/;"	l
ffff80000010b377	kernel.asm	/^ffff80000010b377:	80 ff ff $/;"	l
ffff80000010b37a	kernel.asm	/^ffff80000010b37a:	ff d2                	callq  *%rdx$/;"	l
ffff80000010b37c	kernel.asm	/^ffff80000010b37c:	8b 55 e4             	mov    -0x1c(%rbp),%edx$/;"	l
ffff80000010b37f	kernel.asm	/^ffff80000010b37f:	8b 4d e0             	mov    -0x20(%rbp),%ecx$/;"	l
ffff80000010b382	kernel.asm	/^ffff80000010b382:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010b386	kernel.asm	/^ffff80000010b386:	48 89 ce             	mov    %rcx,%rsi$/;"	l
ffff80000010b389	kernel.asm	/^ffff80000010b389:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010b38c	kernel.asm	/^ffff80000010b38c:	48 b8 cc b3 10 00 00 	movabs $0xffff80000010b3cc,%rax$/;"	l
ffff80000010b393	kernel.asm	/^ffff80000010b393:	80 ff ff $/;"	l
ffff80000010b396	kernel.asm	/^ffff80000010b396:	ff d0                	callq  *%rax$/;"	l
ffff80000010b398	kernel.asm	/^ffff80000010b398:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff80000010b39c	kernel.asm	/^ffff80000010b39c:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010b39f	kernel.asm	/^ffff80000010b39f:	48 b8 a9 3f 10 00 00 	movabs $0xffff800000103fa9,%rax$/;"	l
ffff80000010b3a6	kernel.asm	/^ffff80000010b3a6:	80 ff ff $/;"	l
ffff80000010b3a9	kernel.asm	/^ffff80000010b3a9:	ff d0                	callq  *%rax$/;"	l
ffff80000010b3ab	kernel.asm	/^ffff80000010b3ab:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff80000010b3b0	kernel.asm	/^ffff80000010b3b0:	eb 18                	jmp    ffff80000010b3ca <allocuvm+0x152>$/;"	l
ffff80000010b3b2	kernel.asm	/^ffff80000010b3b2:	48 81 45 f8 00 10 00 	addq   $0x1000,-0x8(%rbp)$/;"	l
ffff80000010b3b9	kernel.asm	/^ffff80000010b3b9:	00 $/;"	l
ffff80000010b3ba	kernel.asm	/^ffff80000010b3ba:	8b 45 e0             	mov    -0x20(%rbp),%eax$/;"	l
ffff80000010b3bd	kernel.asm	/^ffff80000010b3bd:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax$/;"	l
ffff80000010b3c1	kernel.asm	/^ffff80000010b3c1:	0f 87 eb fe ff ff    	ja     ffff80000010b2b2 <allocuvm+0x3a>$/;"	l
ffff80000010b3c7	kernel.asm	/^ffff80000010b3c7:	8b 45 e0             	mov    -0x20(%rbp),%eax$/;"	l
ffff80000010b3ca	kernel.asm	/^ffff80000010b3ca:	c9                   	leaveq $/;"	l
ffff80000010b3cb	kernel.asm	/^ffff80000010b3cb:	c3                   	retq   $/;"	l
ffff80000010b3cc	kernel.asm	/^ffff80000010b3cc <deallocuvm>:$/;"	l
ffff80000010b3cc	kernel.asm	/^ffff80000010b3cc:	55                   	push   %rbp$/;"	l
ffff80000010b3cd	kernel.asm	/^ffff80000010b3cd:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010b3d0	kernel.asm	/^ffff80000010b3d0:	48 83 ec 40          	sub    $0x40,%rsp$/;"	l
ffff80000010b3d4	kernel.asm	/^ffff80000010b3d4:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)$/;"	l
ffff80000010b3d8	kernel.asm	/^ffff80000010b3d8:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)$/;"	l
ffff80000010b3dc	kernel.asm	/^ffff80000010b3dc:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)$/;"	l
ffff80000010b3e0	kernel.asm	/^ffff80000010b3e0:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
ffff80000010b3e4	kernel.asm	/^ffff80000010b3e4:	48 3b 45 d0          	cmp    -0x30(%rbp),%rax$/;"	l
ffff80000010b3e8	kernel.asm	/^ffff80000010b3e8:	72 09                	jb     ffff80000010b3f3 <deallocuvm+0x27>$/;"	l
ffff80000010b3ea	kernel.asm	/^ffff80000010b3ea:	48 8b 45 d0          	mov    -0x30(%rbp),%rax$/;"	l
ffff80000010b3ee	kernel.asm	/^ffff80000010b3ee:	e9 cd 00 00 00       	jmpq   ffff80000010b4c0 <deallocuvm+0xf4>$/;"	l
ffff80000010b3f3	kernel.asm	/^ffff80000010b3f3:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
ffff80000010b3f7	kernel.asm	/^ffff80000010b3f7:	48 05 ff 0f 00 00    	add    $0xfff,%rax$/;"	l
ffff80000010b3fd	kernel.asm	/^ffff80000010b3fd:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax$/;"	l
ffff80000010b403	kernel.asm	/^ffff80000010b403:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff80000010b407	kernel.asm	/^ffff80000010b407:	e9 a2 00 00 00       	jmpq   ffff80000010b4ae <deallocuvm+0xe2>$/;"	l
ffff80000010b40c	kernel.asm	/^ffff80000010b40c:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx$/;"	l
ffff80000010b410	kernel.asm	/^ffff80000010b410:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff80000010b414	kernel.asm	/^ffff80000010b414:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
ffff80000010b419	kernel.asm	/^ffff80000010b419:	48 89 ce             	mov    %rcx,%rsi$/;"	l
ffff80000010b41c	kernel.asm	/^ffff80000010b41c:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010b41f	kernel.asm	/^ffff80000010b41f:	48 b8 7c ad 10 00 00 	movabs $0xffff80000010ad7c,%rax$/;"	l
ffff80000010b426	kernel.asm	/^ffff80000010b426:	80 ff ff $/;"	l
ffff80000010b429	kernel.asm	/^ffff80000010b429:	ff d0                	callq  *%rax$/;"	l
ffff80000010b42b	kernel.asm	/^ffff80000010b42b:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ffff80000010b42f	kernel.asm	/^ffff80000010b42f:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)$/;"	l
ffff80000010b434	kernel.asm	/^ffff80000010b434:	74 70                	je     ffff80000010b4a6 <deallocuvm+0xda>$/;"	l
ffff80000010b436	kernel.asm	/^ffff80000010b436:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff80000010b43a	kernel.asm	/^ffff80000010b43a:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff80000010b43d	kernel.asm	/^ffff80000010b43d:	83 e0 01             	and    $0x1,%eax$/;"	l
ffff80000010b440	kernel.asm	/^ffff80000010b440:	48 85 c0             	test   %rax,%rax$/;"	l
ffff80000010b443	kernel.asm	/^ffff80000010b443:	74 61                	je     ffff80000010b4a6 <deallocuvm+0xda>$/;"	l
ffff80000010b445	kernel.asm	/^ffff80000010b445:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff80000010b449	kernel.asm	/^ffff80000010b449:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff80000010b44c	kernel.asm	/^ffff80000010b44c:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax$/;"	l
ffff80000010b452	kernel.asm	/^ffff80000010b452:	48 89 45 e8          	mov    %rax,-0x18(%rbp)$/;"	l
ffff80000010b456	kernel.asm	/^ffff80000010b456:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)$/;"	l
ffff80000010b45b	kernel.asm	/^ffff80000010b45b:	75 16                	jne    ffff80000010b473 <deallocuvm+0xa7>$/;"	l
ffff80000010b45d	kernel.asm	/^ffff80000010b45d:	48 bf bd c1 10 00 00 	movabs $0xffff80000010c1bd,%rdi$/;"	l
ffff80000010b464	kernel.asm	/^ffff80000010b464:	80 ff ff $/;"	l
ffff80000010b467	kernel.asm	/^ffff80000010b467:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff80000010b46e	kernel.asm	/^ffff80000010b46e:	80 ff ff $/;"	l
ffff80000010b471	kernel.asm	/^ffff80000010b471:	ff d0                	callq  *%rax$/;"	l
ffff80000010b473	kernel.asm	/^ffff80000010b473:	48 ba 00 00 00 00 00 	movabs $0xffff800000000000,%rdx$/;"	l
ffff80000010b47a	kernel.asm	/^ffff80000010b47a:	80 ff ff $/;"	l
ffff80000010b47d	kernel.asm	/^ffff80000010b47d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010b481	kernel.asm	/^ffff80000010b481:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff80000010b484	kernel.asm	/^ffff80000010b484:	48 89 45 e0          	mov    %rax,-0x20(%rbp)$/;"	l
ffff80000010b488	kernel.asm	/^ffff80000010b488:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff80000010b48c	kernel.asm	/^ffff80000010b48c:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010b48f	kernel.asm	/^ffff80000010b48f:	48 b8 a9 3f 10 00 00 	movabs $0xffff800000103fa9,%rax$/;"	l
ffff80000010b496	kernel.asm	/^ffff80000010b496:	80 ff ff $/;"	l
ffff80000010b499	kernel.asm	/^ffff80000010b499:	ff d0                	callq  *%rax$/;"	l
ffff80000010b49b	kernel.asm	/^ffff80000010b49b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff80000010b49f	kernel.asm	/^ffff80000010b49f:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)$/;"	l
ffff80000010b4a6	kernel.asm	/^ffff80000010b4a6:	48 81 45 f8 00 10 00 	addq   $0x1000,-0x8(%rbp)$/;"	l
ffff80000010b4ad	kernel.asm	/^ffff80000010b4ad:	00 $/;"	l
ffff80000010b4ae	kernel.asm	/^ffff80000010b4ae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010b4b2	kernel.asm	/^ffff80000010b4b2:	48 3b 45 d0          	cmp    -0x30(%rbp),%rax$/;"	l
ffff80000010b4b6	kernel.asm	/^ffff80000010b4b6:	0f 82 50 ff ff ff    	jb     ffff80000010b40c <deallocuvm+0x40>$/;"	l
ffff80000010b4bc	kernel.asm	/^ffff80000010b4bc:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
ffff80000010b4c0	kernel.asm	/^ffff80000010b4c0:	c9                   	leaveq $/;"	l
ffff80000010b4c1	kernel.asm	/^ffff80000010b4c1:	c3                   	retq   $/;"	l
ffff80000010b4c2	kernel.asm	/^ffff80000010b4c2 <freevm>:$/;"	l
ffff80000010b4c2	kernel.asm	/^ffff80000010b4c2:	55                   	push   %rbp$/;"	l
ffff80000010b4c3	kernel.asm	/^ffff80000010b4c3:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010b4c6	kernel.asm	/^ffff80000010b4c6:	48 83 ec 40          	sub    $0x40,%rsp$/;"	l
ffff80000010b4ca	kernel.asm	/^ffff80000010b4ca:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)$/;"	l
ffff80000010b4ce	kernel.asm	/^ffff80000010b4ce:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)$/;"	l
ffff80000010b4d3	kernel.asm	/^ffff80000010b4d3:	75 16                	jne    ffff80000010b4eb <freevm+0x29>$/;"	l
ffff80000010b4d5	kernel.asm	/^ffff80000010b4d5:	48 bf c3 c1 10 00 00 	movabs $0xffff80000010c1c3,%rdi$/;"	l
ffff80000010b4dc	kernel.asm	/^ffff80000010b4dc:	80 ff ff $/;"	l
ffff80000010b4df	kernel.asm	/^ffff80000010b4df:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff80000010b4e6	kernel.asm	/^ffff80000010b4e6:	80 ff ff $/;"	l
ffff80000010b4e9	kernel.asm	/^ffff80000010b4e9:	ff d0                	callq  *%rax$/;"	l
ffff80000010b4eb	kernel.asm	/^ffff80000010b4eb:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)$/;"	l
ffff80000010b4f2	kernel.asm	/^ffff80000010b4f2:	e9 dc 01 00 00       	jmpq   ffff80000010b6d3 <freevm+0x211>$/;"	l
ffff80000010b4f7	kernel.asm	/^ffff80000010b4f7:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff80000010b4fa	kernel.asm	/^ffff80000010b4fa:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx$/;"	l
ffff80000010b501	kernel.asm	/^ffff80000010b501:	00 $/;"	l
ffff80000010b502	kernel.asm	/^ffff80000010b502:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
ffff80000010b506	kernel.asm	/^ffff80000010b506:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff80000010b509	kernel.asm	/^ffff80000010b509:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff80000010b50c	kernel.asm	/^ffff80000010b50c:	83 e0 01             	and    $0x1,%eax$/;"	l
ffff80000010b50f	kernel.asm	/^ffff80000010b50f:	48 85 c0             	test   %rax,%rax$/;"	l
ffff80000010b512	kernel.asm	/^ffff80000010b512:	0f 84 b7 01 00 00    	je     ffff80000010b6cf <freevm+0x20d>$/;"	l
ffff80000010b518	kernel.asm	/^ffff80000010b518:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff80000010b51b	kernel.asm	/^ffff80000010b51b:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx$/;"	l
ffff80000010b522	kernel.asm	/^ffff80000010b522:	00 $/;"	l
ffff80000010b523	kernel.asm	/^ffff80000010b523:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
ffff80000010b527	kernel.asm	/^ffff80000010b527:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff80000010b52a	kernel.asm	/^ffff80000010b52a:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff80000010b52d	kernel.asm	/^ffff80000010b52d:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax$/;"	l
ffff80000010b533	kernel.asm	/^ffff80000010b533:	48 89 c2             	mov    %rax,%rdx$/;"	l
ffff80000010b536	kernel.asm	/^ffff80000010b536:	48 b8 00 00 00 00 00 	movabs $0xffff800000000000,%rax$/;"	l
ffff80000010b53d	kernel.asm	/^ffff80000010b53d:	80 ff ff $/;"	l
ffff80000010b540	kernel.asm	/^ffff80000010b540:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff80000010b543	kernel.asm	/^ffff80000010b543:	48 89 45 e8          	mov    %rax,-0x18(%rbp)$/;"	l
ffff80000010b547	kernel.asm	/^ffff80000010b547:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)$/;"	l
ffff80000010b54e	kernel.asm	/^ffff80000010b54e:	e9 5c 01 00 00       	jmpq   ffff80000010b6af <freevm+0x1ed>$/;"	l
ffff80000010b553	kernel.asm	/^ffff80000010b553:	8b 45 f8             	mov    -0x8(%rbp),%eax$/;"	l
ffff80000010b556	kernel.asm	/^ffff80000010b556:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx$/;"	l
ffff80000010b55d	kernel.asm	/^ffff80000010b55d:	00 $/;"	l
ffff80000010b55e	kernel.asm	/^ffff80000010b55e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010b562	kernel.asm	/^ffff80000010b562:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff80000010b565	kernel.asm	/^ffff80000010b565:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff80000010b568	kernel.asm	/^ffff80000010b568:	83 e0 01             	and    $0x1,%eax$/;"	l
ffff80000010b56b	kernel.asm	/^ffff80000010b56b:	48 85 c0             	test   %rax,%rax$/;"	l
ffff80000010b56e	kernel.asm	/^ffff80000010b56e:	0f 84 37 01 00 00    	je     ffff80000010b6ab <freevm+0x1e9>$/;"	l
ffff80000010b574	kernel.asm	/^ffff80000010b574:	8b 45 f8             	mov    -0x8(%rbp),%eax$/;"	l
ffff80000010b577	kernel.asm	/^ffff80000010b577:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx$/;"	l
ffff80000010b57e	kernel.asm	/^ffff80000010b57e:	00 $/;"	l
ffff80000010b57f	kernel.asm	/^ffff80000010b57f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010b583	kernel.asm	/^ffff80000010b583:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff80000010b586	kernel.asm	/^ffff80000010b586:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff80000010b589	kernel.asm	/^ffff80000010b589:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax$/;"	l
ffff80000010b58f	kernel.asm	/^ffff80000010b58f:	48 89 c2             	mov    %rax,%rdx$/;"	l
ffff80000010b592	kernel.asm	/^ffff80000010b592:	48 b8 00 00 00 00 00 	movabs $0xffff800000000000,%rax$/;"	l
ffff80000010b599	kernel.asm	/^ffff80000010b599:	80 ff ff $/;"	l
ffff80000010b59c	kernel.asm	/^ffff80000010b59c:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff80000010b59f	kernel.asm	/^ffff80000010b59f:	48 89 45 e0          	mov    %rax,-0x20(%rbp)$/;"	l
ffff80000010b5a3	kernel.asm	/^ffff80000010b5a3:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)$/;"	l
ffff80000010b5aa	kernel.asm	/^ffff80000010b5aa:	e9 dc 00 00 00       	jmpq   ffff80000010b68b <freevm+0x1c9>$/;"	l
ffff80000010b5af	kernel.asm	/^ffff80000010b5af:	8b 45 f4             	mov    -0xc(%rbp),%eax$/;"	l
ffff80000010b5b2	kernel.asm	/^ffff80000010b5b2:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx$/;"	l
ffff80000010b5b9	kernel.asm	/^ffff80000010b5b9:	00 $/;"	l
ffff80000010b5ba	kernel.asm	/^ffff80000010b5ba:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff80000010b5be	kernel.asm	/^ffff80000010b5be:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff80000010b5c1	kernel.asm	/^ffff80000010b5c1:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff80000010b5c4	kernel.asm	/^ffff80000010b5c4:	83 e0 01             	and    $0x1,%eax$/;"	l
ffff80000010b5c7	kernel.asm	/^ffff80000010b5c7:	48 85 c0             	test   %rax,%rax$/;"	l
ffff80000010b5ca	kernel.asm	/^ffff80000010b5ca:	0f 84 b7 00 00 00    	je     ffff80000010b687 <freevm+0x1c5>$/;"	l
ffff80000010b5d0	kernel.asm	/^ffff80000010b5d0:	8b 45 f4             	mov    -0xc(%rbp),%eax$/;"	l
ffff80000010b5d3	kernel.asm	/^ffff80000010b5d3:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx$/;"	l
ffff80000010b5da	kernel.asm	/^ffff80000010b5da:	00 $/;"	l
ffff80000010b5db	kernel.asm	/^ffff80000010b5db:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff80000010b5df	kernel.asm	/^ffff80000010b5df:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff80000010b5e2	kernel.asm	/^ffff80000010b5e2:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff80000010b5e5	kernel.asm	/^ffff80000010b5e5:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax$/;"	l
ffff80000010b5eb	kernel.asm	/^ffff80000010b5eb:	48 89 c2             	mov    %rax,%rdx$/;"	l
ffff80000010b5ee	kernel.asm	/^ffff80000010b5ee:	48 b8 00 00 00 00 00 	movabs $0xffff800000000000,%rax$/;"	l
ffff80000010b5f5	kernel.asm	/^ffff80000010b5f5:	80 ff ff $/;"	l
ffff80000010b5f8	kernel.asm	/^ffff80000010b5f8:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff80000010b5fb	kernel.asm	/^ffff80000010b5fb:	48 89 45 d8          	mov    %rax,-0x28(%rbp)$/;"	l
ffff80000010b5ff	kernel.asm	/^ffff80000010b5ff:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)$/;"	l
ffff80000010b606	kernel.asm	/^ffff80000010b606:	eb 63                	jmp    ffff80000010b66b <freevm+0x1a9>$/;"	l
ffff80000010b608	kernel.asm	/^ffff80000010b608:	8b 45 f0             	mov    -0x10(%rbp),%eax$/;"	l
ffff80000010b60b	kernel.asm	/^ffff80000010b60b:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx$/;"	l
ffff80000010b612	kernel.asm	/^ffff80000010b612:	00 $/;"	l
ffff80000010b613	kernel.asm	/^ffff80000010b613:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff80000010b617	kernel.asm	/^ffff80000010b617:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff80000010b61a	kernel.asm	/^ffff80000010b61a:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff80000010b61d	kernel.asm	/^ffff80000010b61d:	83 e0 01             	and    $0x1,%eax$/;"	l
ffff80000010b620	kernel.asm	/^ffff80000010b620:	48 85 c0             	test   %rax,%rax$/;"	l
ffff80000010b623	kernel.asm	/^ffff80000010b623:	74 42                	je     ffff80000010b667 <freevm+0x1a5>$/;"	l
ffff80000010b625	kernel.asm	/^ffff80000010b625:	8b 45 f0             	mov    -0x10(%rbp),%eax$/;"	l
ffff80000010b628	kernel.asm	/^ffff80000010b628:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx$/;"	l
ffff80000010b62f	kernel.asm	/^ffff80000010b62f:	00 $/;"	l
ffff80000010b630	kernel.asm	/^ffff80000010b630:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff80000010b634	kernel.asm	/^ffff80000010b634:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff80000010b637	kernel.asm	/^ffff80000010b637:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff80000010b63a	kernel.asm	/^ffff80000010b63a:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax$/;"	l
ffff80000010b640	kernel.asm	/^ffff80000010b640:	48 89 c2             	mov    %rax,%rdx$/;"	l
ffff80000010b643	kernel.asm	/^ffff80000010b643:	48 b8 00 00 00 00 00 	movabs $0xffff800000000000,%rax$/;"	l
ffff80000010b64a	kernel.asm	/^ffff80000010b64a:	80 ff ff $/;"	l
ffff80000010b64d	kernel.asm	/^ffff80000010b64d:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff80000010b650	kernel.asm	/^ffff80000010b650:	48 89 45 d0          	mov    %rax,-0x30(%rbp)$/;"	l
ffff80000010b654	kernel.asm	/^ffff80000010b654:	48 8b 45 d0          	mov    -0x30(%rbp),%rax$/;"	l
ffff80000010b658	kernel.asm	/^ffff80000010b658:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010b65b	kernel.asm	/^ffff80000010b65b:	48 b8 a9 3f 10 00 00 	movabs $0xffff800000103fa9,%rax$/;"	l
ffff80000010b662	kernel.asm	/^ffff80000010b662:	80 ff ff $/;"	l
ffff80000010b665	kernel.asm	/^ffff80000010b665:	ff d0                	callq  *%rax$/;"	l
ffff80000010b667	kernel.asm	/^ffff80000010b667:	83 45 f0 01          	addl   $0x1,-0x10(%rbp)$/;"	l
ffff80000010b66b	kernel.asm	/^ffff80000010b66b:	81 7d f0 ff 01 00 00 	cmpl   $0x1ff,-0x10(%rbp)$/;"	l
ffff80000010b672	kernel.asm	/^ffff80000010b672:	76 94                	jbe    ffff80000010b608 <freevm+0x146>$/;"	l
ffff80000010b674	kernel.asm	/^ffff80000010b674:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff80000010b678	kernel.asm	/^ffff80000010b678:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010b67b	kernel.asm	/^ffff80000010b67b:	48 b8 a9 3f 10 00 00 	movabs $0xffff800000103fa9,%rax$/;"	l
ffff80000010b682	kernel.asm	/^ffff80000010b682:	80 ff ff $/;"	l
ffff80000010b685	kernel.asm	/^ffff80000010b685:	ff d0                	callq  *%rax$/;"	l
ffff80000010b687	kernel.asm	/^ffff80000010b687:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)$/;"	l
ffff80000010b68b	kernel.asm	/^ffff80000010b68b:	81 7d f4 ff 01 00 00 	cmpl   $0x1ff,-0xc(%rbp)$/;"	l
ffff80000010b692	kernel.asm	/^ffff80000010b692:	0f 86 17 ff ff ff    	jbe    ffff80000010b5af <freevm+0xed>$/;"	l
ffff80000010b698	kernel.asm	/^ffff80000010b698:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff80000010b69c	kernel.asm	/^ffff80000010b69c:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010b69f	kernel.asm	/^ffff80000010b69f:	48 b8 a9 3f 10 00 00 	movabs $0xffff800000103fa9,%rax$/;"	l
ffff80000010b6a6	kernel.asm	/^ffff80000010b6a6:	80 ff ff $/;"	l
ffff80000010b6a9	kernel.asm	/^ffff80000010b6a9:	ff d0                	callq  *%rax$/;"	l
ffff80000010b6ab	kernel.asm	/^ffff80000010b6ab:	83 45 f8 01          	addl   $0x1,-0x8(%rbp)$/;"	l
ffff80000010b6af	kernel.asm	/^ffff80000010b6af:	81 7d f8 ff 01 00 00 	cmpl   $0x1ff,-0x8(%rbp)$/;"	l
ffff80000010b6b6	kernel.asm	/^ffff80000010b6b6:	0f 86 97 fe ff ff    	jbe    ffff80000010b553 <freevm+0x91>$/;"	l
ffff80000010b6bc	kernel.asm	/^ffff80000010b6bc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010b6c0	kernel.asm	/^ffff80000010b6c0:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010b6c3	kernel.asm	/^ffff80000010b6c3:	48 b8 a9 3f 10 00 00 	movabs $0xffff800000103fa9,%rax$/;"	l
ffff80000010b6ca	kernel.asm	/^ffff80000010b6ca:	80 ff ff $/;"	l
ffff80000010b6cd	kernel.asm	/^ffff80000010b6cd:	ff d0                	callq  *%rax$/;"	l
ffff80000010b6cf	kernel.asm	/^ffff80000010b6cf:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)$/;"	l
ffff80000010b6d3	kernel.asm	/^ffff80000010b6d3:	81 7d fc ff 00 00 00 	cmpl   $0xff,-0x4(%rbp)$/;"	l
ffff80000010b6da	kernel.asm	/^ffff80000010b6da:	0f 86 17 fe ff ff    	jbe    ffff80000010b4f7 <freevm+0x35>$/;"	l
ffff80000010b6e0	kernel.asm	/^ffff80000010b6e0:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
ffff80000010b6e4	kernel.asm	/^ffff80000010b6e4:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010b6e7	kernel.asm	/^ffff80000010b6e7:	48 b8 a9 3f 10 00 00 	movabs $0xffff800000103fa9,%rax$/;"	l
ffff80000010b6ee	kernel.asm	/^ffff80000010b6ee:	80 ff ff $/;"	l
ffff80000010b6f1	kernel.asm	/^ffff80000010b6f1:	ff d0                	callq  *%rax$/;"	l
ffff80000010b6f3	kernel.asm	/^ffff80000010b6f3:	90                   	nop$/;"	l
ffff80000010b6f4	kernel.asm	/^ffff80000010b6f4:	c9                   	leaveq $/;"	l
ffff80000010b6f5	kernel.asm	/^ffff80000010b6f5:	c3                   	retq   $/;"	l
ffff80000010b6f6	kernel.asm	/^ffff80000010b6f6 <clearpteu>:$/;"	l
ffff80000010b6f6	kernel.asm	/^ffff80000010b6f6:	55                   	push   %rbp$/;"	l
ffff80000010b6f7	kernel.asm	/^ffff80000010b6f7:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010b6fa	kernel.asm	/^ffff80000010b6fa:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ffff80000010b6fe	kernel.asm	/^ffff80000010b6fe:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
ffff80000010b702	kernel.asm	/^ffff80000010b702:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)$/;"	l
ffff80000010b706	kernel.asm	/^ffff80000010b706:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx$/;"	l
ffff80000010b70a	kernel.asm	/^ffff80000010b70a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010b70e	kernel.asm	/^ffff80000010b70e:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
ffff80000010b713	kernel.asm	/^ffff80000010b713:	48 89 ce             	mov    %rcx,%rsi$/;"	l
ffff80000010b716	kernel.asm	/^ffff80000010b716:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010b719	kernel.asm	/^ffff80000010b719:	48 b8 7c ad 10 00 00 	movabs $0xffff80000010ad7c,%rax$/;"	l
ffff80000010b720	kernel.asm	/^ffff80000010b720:	80 ff ff $/;"	l
ffff80000010b723	kernel.asm	/^ffff80000010b723:	ff d0                	callq  *%rax$/;"	l
ffff80000010b725	kernel.asm	/^ffff80000010b725:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff80000010b729	kernel.asm	/^ffff80000010b729:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)$/;"	l
ffff80000010b72e	kernel.asm	/^ffff80000010b72e:	75 16                	jne    ffff80000010b746 <clearpteu+0x50>$/;"	l
ffff80000010b730	kernel.asm	/^ffff80000010b730:	48 bf d4 c1 10 00 00 	movabs $0xffff80000010c1d4,%rdi$/;"	l
ffff80000010b737	kernel.asm	/^ffff80000010b737:	80 ff ff $/;"	l
ffff80000010b73a	kernel.asm	/^ffff80000010b73a:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff80000010b741	kernel.asm	/^ffff80000010b741:	80 ff ff $/;"	l
ffff80000010b744	kernel.asm	/^ffff80000010b744:	ff d0                	callq  *%rax$/;"	l
ffff80000010b746	kernel.asm	/^ffff80000010b746:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010b74a	kernel.asm	/^ffff80000010b74a:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff80000010b74d	kernel.asm	/^ffff80000010b74d:	48 83 e0 fb          	and    $0xfffffffffffffffb,%rax$/;"	l
ffff80000010b751	kernel.asm	/^ffff80000010b751:	48 89 c2             	mov    %rax,%rdx$/;"	l
ffff80000010b754	kernel.asm	/^ffff80000010b754:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010b758	kernel.asm	/^ffff80000010b758:	48 89 10             	mov    %rdx,(%rax)$/;"	l
ffff80000010b75b	kernel.asm	/^ffff80000010b75b:	90                   	nop$/;"	l
ffff80000010b75c	kernel.asm	/^ffff80000010b75c:	c9                   	leaveq $/;"	l
ffff80000010b75d	kernel.asm	/^ffff80000010b75d:	c3                   	retq   $/;"	l
ffff80000010b75e	kernel.asm	/^ffff80000010b75e <copyuvm>:$/;"	l
ffff80000010b75e	kernel.asm	/^ffff80000010b75e:	55                   	push   %rbp$/;"	l
ffff80000010b75f	kernel.asm	/^ffff80000010b75f:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010b762	kernel.asm	/^ffff80000010b762:	48 83 ec 40          	sub    $0x40,%rsp$/;"	l
ffff80000010b766	kernel.asm	/^ffff80000010b766:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)$/;"	l
ffff80000010b76a	kernel.asm	/^ffff80000010b76a:	89 75 c4             	mov    %esi,-0x3c(%rbp)$/;"	l
ffff80000010b76d	kernel.asm	/^ffff80000010b76d:	48 b8 20 ab 10 00 00 	movabs $0xffff80000010ab20,%rax$/;"	l
ffff80000010b774	kernel.asm	/^ffff80000010b774:	80 ff ff $/;"	l
ffff80000010b777	kernel.asm	/^ffff80000010b777:	ff d0                	callq  *%rax$/;"	l
ffff80000010b779	kernel.asm	/^ffff80000010b779:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ffff80000010b77d	kernel.asm	/^ffff80000010b77d:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)$/;"	l
ffff80000010b782	kernel.asm	/^ffff80000010b782:	75 0a                	jne    ffff80000010b78e <copyuvm+0x30>$/;"	l
ffff80000010b784	kernel.asm	/^ffff80000010b784:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff80000010b789	kernel.asm	/^ffff80000010b789:	e9 51 01 00 00       	jmpq   ffff80000010b8df <copyuvm+0x181>$/;"	l
ffff80000010b78e	kernel.asm	/^ffff80000010b78e:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)$/;"	l
ffff80000010b795	kernel.asm	/^ffff80000010b795:	00 $/;"	l
ffff80000010b796	kernel.asm	/^ffff80000010b796:	e9 15 01 00 00       	jmpq   ffff80000010b8b0 <copyuvm+0x152>$/;"	l
ffff80000010b79b	kernel.asm	/^ffff80000010b79b:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx$/;"	l
ffff80000010b79f	kernel.asm	/^ffff80000010b79f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
ffff80000010b7a3	kernel.asm	/^ffff80000010b7a3:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
ffff80000010b7a8	kernel.asm	/^ffff80000010b7a8:	48 89 ce             	mov    %rcx,%rsi$/;"	l
ffff80000010b7ab	kernel.asm	/^ffff80000010b7ab:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010b7ae	kernel.asm	/^ffff80000010b7ae:	48 b8 7c ad 10 00 00 	movabs $0xffff80000010ad7c,%rax$/;"	l
ffff80000010b7b5	kernel.asm	/^ffff80000010b7b5:	80 ff ff $/;"	l
ffff80000010b7b8	kernel.asm	/^ffff80000010b7b8:	ff d0                	callq  *%rax$/;"	l
ffff80000010b7ba	kernel.asm	/^ffff80000010b7ba:	48 89 45 e8          	mov    %rax,-0x18(%rbp)$/;"	l
ffff80000010b7be	kernel.asm	/^ffff80000010b7be:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)$/;"	l
ffff80000010b7c3	kernel.asm	/^ffff80000010b7c3:	75 16                	jne    ffff80000010b7db <copyuvm+0x7d>$/;"	l
ffff80000010b7c5	kernel.asm	/^ffff80000010b7c5:	48 bf de c1 10 00 00 	movabs $0xffff80000010c1de,%rdi$/;"	l
ffff80000010b7cc	kernel.asm	/^ffff80000010b7cc:	80 ff ff $/;"	l
ffff80000010b7cf	kernel.asm	/^ffff80000010b7cf:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff80000010b7d6	kernel.asm	/^ffff80000010b7d6:	80 ff ff $/;"	l
ffff80000010b7d9	kernel.asm	/^ffff80000010b7d9:	ff d0                	callq  *%rax$/;"	l
ffff80000010b7db	kernel.asm	/^ffff80000010b7db:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010b7df	kernel.asm	/^ffff80000010b7df:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff80000010b7e2	kernel.asm	/^ffff80000010b7e2:	83 e0 01             	and    $0x1,%eax$/;"	l
ffff80000010b7e5	kernel.asm	/^ffff80000010b7e5:	48 85 c0             	test   %rax,%rax$/;"	l
ffff80000010b7e8	kernel.asm	/^ffff80000010b7e8:	75 16                	jne    ffff80000010b800 <copyuvm+0xa2>$/;"	l
ffff80000010b7ea	kernel.asm	/^ffff80000010b7ea:	48 bf f8 c1 10 00 00 	movabs $0xffff80000010c1f8,%rdi$/;"	l
ffff80000010b7f1	kernel.asm	/^ffff80000010b7f1:	80 ff ff $/;"	l
ffff80000010b7f4	kernel.asm	/^ffff80000010b7f4:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff80000010b7fb	kernel.asm	/^ffff80000010b7fb:	80 ff ff $/;"	l
ffff80000010b7fe	kernel.asm	/^ffff80000010b7fe:	ff d0                	callq  *%rax$/;"	l
ffff80000010b800	kernel.asm	/^ffff80000010b800:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010b804	kernel.asm	/^ffff80000010b804:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff80000010b807	kernel.asm	/^ffff80000010b807:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax$/;"	l
ffff80000010b80d	kernel.asm	/^ffff80000010b80d:	48 89 45 e0          	mov    %rax,-0x20(%rbp)$/;"	l
ffff80000010b811	kernel.asm	/^ffff80000010b811:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010b815	kernel.asm	/^ffff80000010b815:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff80000010b818	kernel.asm	/^ffff80000010b818:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
ffff80000010b81d	kernel.asm	/^ffff80000010b81d:	48 89 45 d8          	mov    %rax,-0x28(%rbp)$/;"	l
ffff80000010b821	kernel.asm	/^ffff80000010b821:	48 b8 9f 40 10 00 00 	movabs $0xffff80000010409f,%rax$/;"	l
ffff80000010b828	kernel.asm	/^ffff80000010b828:	80 ff ff $/;"	l
ffff80000010b82b	kernel.asm	/^ffff80000010b82b:	ff d0                	callq  *%rax$/;"	l
ffff80000010b82d	kernel.asm	/^ffff80000010b82d:	48 89 45 d0          	mov    %rax,-0x30(%rbp)$/;"	l
ffff80000010b831	kernel.asm	/^ffff80000010b831:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)$/;"	l
ffff80000010b836	kernel.asm	/^ffff80000010b836:	0f 84 87 00 00 00    	je     ffff80000010b8c3 <copyuvm+0x165>$/;"	l
ffff80000010b83c	kernel.asm	/^ffff80000010b83c:	48 ba 00 00 00 00 00 	movabs $0xffff800000000000,%rdx$/;"	l
ffff80000010b843	kernel.asm	/^ffff80000010b843:	80 ff ff $/;"	l
ffff80000010b846	kernel.asm	/^ffff80000010b846:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff80000010b84a	kernel.asm	/^ffff80000010b84a:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff80000010b84d	kernel.asm	/^ffff80000010b84d:	48 89 c1             	mov    %rax,%rcx$/;"	l
ffff80000010b850	kernel.asm	/^ffff80000010b850:	48 8b 45 d0          	mov    -0x30(%rbp),%rax$/;"	l
ffff80000010b854	kernel.asm	/^ffff80000010b854:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
ffff80000010b859	kernel.asm	/^ffff80000010b859:	48 89 ce             	mov    %rcx,%rsi$/;"	l
ffff80000010b85c	kernel.asm	/^ffff80000010b85c:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010b85f	kernel.asm	/^ffff80000010b85f:	48 b8 98 76 10 00 00 	movabs $0xffff800000107698,%rax$/;"	l
ffff80000010b866	kernel.asm	/^ffff80000010b866:	80 ff ff $/;"	l
ffff80000010b869	kernel.asm	/^ffff80000010b869:	ff d0                	callq  *%rax$/;"	l
ffff80000010b86b	kernel.asm	/^ffff80000010b86b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff80000010b86f	kernel.asm	/^ffff80000010b86f:	89 c1                	mov    %eax,%ecx$/;"	l
ffff80000010b871	kernel.asm	/^ffff80000010b871:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx$/;"	l
ffff80000010b875	kernel.asm	/^ffff80000010b875:	48 b8 00 00 00 00 00 	movabs $0x800000000000,%rax$/;"	l
ffff80000010b87c	kernel.asm	/^ffff80000010b87c:	80 00 00 $/;"	l
ffff80000010b87f	kernel.asm	/^ffff80000010b87f:	48 01 c2             	add    %rax,%rdx$/;"	l
ffff80000010b882	kernel.asm	/^ffff80000010b882:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi$/;"	l
ffff80000010b886	kernel.asm	/^ffff80000010b886:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff80000010b88a	kernel.asm	/^ffff80000010b88a:	41 89 c8             	mov    %ecx,%r8d$/;"	l
ffff80000010b88d	kernel.asm	/^ffff80000010b88d:	48 89 d1             	mov    %rdx,%rcx$/;"	l
ffff80000010b890	kernel.asm	/^ffff80000010b890:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
ffff80000010b895	kernel.asm	/^ffff80000010b895:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010b898	kernel.asm	/^ffff80000010b898:	48 b8 c9 af 10 00 00 	movabs $0xffff80000010afc9,%rax$/;"	l
ffff80000010b89f	kernel.asm	/^ffff80000010b89f:	80 ff ff $/;"	l
ffff80000010b8a2	kernel.asm	/^ffff80000010b8a2:	ff d0                	callq  *%rax$/;"	l
ffff80000010b8a4	kernel.asm	/^ffff80000010b8a4:	85 c0                	test   %eax,%eax$/;"	l
ffff80000010b8a6	kernel.asm	/^ffff80000010b8a6:	78 1e                	js     ffff80000010b8c6 <copyuvm+0x168>$/;"	l
ffff80000010b8a8	kernel.asm	/^ffff80000010b8a8:	48 81 45 f8 00 10 00 	addq   $0x1000,-0x8(%rbp)$/;"	l
ffff80000010b8af	kernel.asm	/^ffff80000010b8af:	00 $/;"	l
ffff80000010b8b0	kernel.asm	/^ffff80000010b8b0:	8b 45 c4             	mov    -0x3c(%rbp),%eax$/;"	l
ffff80000010b8b3	kernel.asm	/^ffff80000010b8b3:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax$/;"	l
ffff80000010b8b7	kernel.asm	/^ffff80000010b8b7:	0f 87 de fe ff ff    	ja     ffff80000010b79b <copyuvm+0x3d>$/;"	l
ffff80000010b8bd	kernel.asm	/^ffff80000010b8bd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff80000010b8c1	kernel.asm	/^ffff80000010b8c1:	eb 1c                	jmp    ffff80000010b8df <copyuvm+0x181>$/;"	l
ffff80000010b8c3	kernel.asm	/^ffff80000010b8c3:	90                   	nop$/;"	l
ffff80000010b8c4	kernel.asm	/^ffff80000010b8c4:	eb 01                	jmp    ffff80000010b8c7 <copyuvm+0x169>$/;"	l
ffff80000010b8c6	kernel.asm	/^ffff80000010b8c6:	90                   	nop$/;"	l
ffff80000010b8c7	kernel.asm	/^ffff80000010b8c7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff80000010b8cb	kernel.asm	/^ffff80000010b8cb:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010b8ce	kernel.asm	/^ffff80000010b8ce:	48 b8 c2 b4 10 00 00 	movabs $0xffff80000010b4c2,%rax$/;"	l
ffff80000010b8d5	kernel.asm	/^ffff80000010b8d5:	80 ff ff $/;"	l
ffff80000010b8d8	kernel.asm	/^ffff80000010b8d8:	ff d0                	callq  *%rax$/;"	l
ffff80000010b8da	kernel.asm	/^ffff80000010b8da:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff80000010b8df	kernel.asm	/^ffff80000010b8df:	c9                   	leaveq $/;"	l
ffff80000010b8e0	kernel.asm	/^ffff80000010b8e0:	c3                   	retq   $/;"	l
ffff80000010b8e1	kernel.asm	/^ffff80000010b8e1 <uva2ka>:$/;"	l
ffff80000010b8e1	kernel.asm	/^ffff80000010b8e1:	55                   	push   %rbp$/;"	l
ffff80000010b8e2	kernel.asm	/^ffff80000010b8e2:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010b8e5	kernel.asm	/^ffff80000010b8e5:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ffff80000010b8e9	kernel.asm	/^ffff80000010b8e9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
ffff80000010b8ed	kernel.asm	/^ffff80000010b8ed:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)$/;"	l
ffff80000010b8f1	kernel.asm	/^ffff80000010b8f1:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx$/;"	l
ffff80000010b8f5	kernel.asm	/^ffff80000010b8f5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010b8f9	kernel.asm	/^ffff80000010b8f9:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
ffff80000010b8fe	kernel.asm	/^ffff80000010b8fe:	48 89 ce             	mov    %rcx,%rsi$/;"	l
ffff80000010b901	kernel.asm	/^ffff80000010b901:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010b904	kernel.asm	/^ffff80000010b904:	48 b8 7c ad 10 00 00 	movabs $0xffff80000010ad7c,%rax$/;"	l
ffff80000010b90b	kernel.asm	/^ffff80000010b90b:	80 ff ff $/;"	l
ffff80000010b90e	kernel.asm	/^ffff80000010b90e:	ff d0                	callq  *%rax$/;"	l
ffff80000010b910	kernel.asm	/^ffff80000010b910:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff80000010b914	kernel.asm	/^ffff80000010b914:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010b918	kernel.asm	/^ffff80000010b918:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff80000010b91b	kernel.asm	/^ffff80000010b91b:	83 e0 01             	and    $0x1,%eax$/;"	l
ffff80000010b91e	kernel.asm	/^ffff80000010b91e:	48 85 c0             	test   %rax,%rax$/;"	l
ffff80000010b921	kernel.asm	/^ffff80000010b921:	75 07                	jne    ffff80000010b92a <uva2ka+0x49>$/;"	l
ffff80000010b923	kernel.asm	/^ffff80000010b923:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff80000010b928	kernel.asm	/^ffff80000010b928:	eb 33                	jmp    ffff80000010b95d <uva2ka+0x7c>$/;"	l
ffff80000010b92a	kernel.asm	/^ffff80000010b92a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010b92e	kernel.asm	/^ffff80000010b92e:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff80000010b931	kernel.asm	/^ffff80000010b931:	83 e0 04             	and    $0x4,%eax$/;"	l
ffff80000010b934	kernel.asm	/^ffff80000010b934:	48 85 c0             	test   %rax,%rax$/;"	l
ffff80000010b937	kernel.asm	/^ffff80000010b937:	75 07                	jne    ffff80000010b940 <uva2ka+0x5f>$/;"	l
ffff80000010b939	kernel.asm	/^ffff80000010b939:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff80000010b93e	kernel.asm	/^ffff80000010b93e:	eb 1d                	jmp    ffff80000010b95d <uva2ka+0x7c>$/;"	l
ffff80000010b940	kernel.asm	/^ffff80000010b940:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010b944	kernel.asm	/^ffff80000010b944:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff80000010b947	kernel.asm	/^ffff80000010b947:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax$/;"	l
ffff80000010b94d	kernel.asm	/^ffff80000010b94d:	48 89 c2             	mov    %rax,%rdx$/;"	l
ffff80000010b950	kernel.asm	/^ffff80000010b950:	48 b8 00 00 00 00 00 	movabs $0xffff800000000000,%rax$/;"	l
ffff80000010b957	kernel.asm	/^ffff80000010b957:	80 ff ff $/;"	l
ffff80000010b95a	kernel.asm	/^ffff80000010b95a:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff80000010b95d	kernel.asm	/^ffff80000010b95d:	c9                   	leaveq $/;"	l
ffff80000010b95e	kernel.asm	/^ffff80000010b95e:	c3                   	retq   $/;"	l
ffff80000010b95f	kernel.asm	/^ffff80000010b95f <copyout>:$/;"	l
ffff80000010b95f	kernel.asm	/^ffff80000010b95f:	55                   	push   %rbp$/;"	l
ffff80000010b960	kernel.asm	/^ffff80000010b960:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010b963	kernel.asm	/^ffff80000010b963:	48 83 ec 40          	sub    $0x40,%rsp$/;"	l
ffff80000010b967	kernel.asm	/^ffff80000010b967:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)$/;"	l
ffff80000010b96b	kernel.asm	/^ffff80000010b96b:	89 75 d4             	mov    %esi,-0x2c(%rbp)$/;"	l
ffff80000010b96e	kernel.asm	/^ffff80000010b96e:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)$/;"	l
ffff80000010b972	kernel.asm	/^ffff80000010b972:	89 4d d0             	mov    %ecx,-0x30(%rbp)$/;"	l
ffff80000010b975	kernel.asm	/^ffff80000010b975:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
ffff80000010b979	kernel.asm	/^ffff80000010b979:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff80000010b97d	kernel.asm	/^ffff80000010b97d:	e9 ad 00 00 00       	jmpq   ffff80000010ba2f <copyout+0xd0>$/;"	l
ffff80000010b982	kernel.asm	/^ffff80000010b982:	8b 45 d4             	mov    -0x2c(%rbp),%eax$/;"	l
ffff80000010b985	kernel.asm	/^ffff80000010b985:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
ffff80000010b98a	kernel.asm	/^ffff80000010b98a:	48 89 45 e8          	mov    %rax,-0x18(%rbp)$/;"	l
ffff80000010b98e	kernel.asm	/^ffff80000010b98e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx$/;"	l
ffff80000010b992	kernel.asm	/^ffff80000010b992:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff80000010b996	kernel.asm	/^ffff80000010b996:	48 89 d6             	mov    %rdx,%rsi$/;"	l
ffff80000010b999	kernel.asm	/^ffff80000010b999:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010b99c	kernel.asm	/^ffff80000010b99c:	48 b8 e1 b8 10 00 00 	movabs $0xffff80000010b8e1,%rax$/;"	l
ffff80000010b9a3	kernel.asm	/^ffff80000010b9a3:	80 ff ff $/;"	l
ffff80000010b9a6	kernel.asm	/^ffff80000010b9a6:	ff d0                	callq  *%rax$/;"	l
ffff80000010b9a8	kernel.asm	/^ffff80000010b9a8:	48 89 45 e0          	mov    %rax,-0x20(%rbp)$/;"	l
ffff80000010b9ac	kernel.asm	/^ffff80000010b9ac:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)$/;"	l
ffff80000010b9b1	kernel.asm	/^ffff80000010b9b1:	75 0a                	jne    ffff80000010b9bd <copyout+0x5e>$/;"	l
ffff80000010b9b3	kernel.asm	/^ffff80000010b9b3:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff80000010b9b8	kernel.asm	/^ffff80000010b9b8:	e9 81 00 00 00       	jmpq   ffff80000010ba3e <copyout+0xdf>$/;"	l
ffff80000010b9bd	kernel.asm	/^ffff80000010b9bd:	8b 45 d4             	mov    -0x2c(%rbp),%eax$/;"	l
ffff80000010b9c0	kernel.asm	/^ffff80000010b9c0:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx$/;"	l
ffff80000010b9c4	kernel.asm	/^ffff80000010b9c4:	48 29 c2             	sub    %rax,%rdx$/;"	l
ffff80000010b9c7	kernel.asm	/^ffff80000010b9c7:	48 89 d0             	mov    %rdx,%rax$/;"	l
ffff80000010b9ca	kernel.asm	/^ffff80000010b9ca:	48 05 00 10 00 00    	add    $0x1000,%rax$/;"	l
ffff80000010b9d0	kernel.asm	/^ffff80000010b9d0:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ffff80000010b9d4	kernel.asm	/^ffff80000010b9d4:	8b 45 d0             	mov    -0x30(%rbp),%eax$/;"	l
ffff80000010b9d7	kernel.asm	/^ffff80000010b9d7:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax$/;"	l
ffff80000010b9db	kernel.asm	/^ffff80000010b9db:	73 07                	jae    ffff80000010b9e4 <copyout+0x85>$/;"	l
ffff80000010b9dd	kernel.asm	/^ffff80000010b9dd:	8b 45 d0             	mov    -0x30(%rbp),%eax$/;"	l
ffff80000010b9e0	kernel.asm	/^ffff80000010b9e0:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ffff80000010b9e4	kernel.asm	/^ffff80000010b9e4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff80000010b9e8	kernel.asm	/^ffff80000010b9e8:	89 c6                	mov    %eax,%esi$/;"	l
ffff80000010b9ea	kernel.asm	/^ffff80000010b9ea:	8b 45 d4             	mov    -0x2c(%rbp),%eax$/;"	l
ffff80000010b9ed	kernel.asm	/^ffff80000010b9ed:	48 2b 45 e8          	sub    -0x18(%rbp),%rax$/;"	l
ffff80000010b9f1	kernel.asm	/^ffff80000010b9f1:	48 89 c2             	mov    %rax,%rdx$/;"	l
ffff80000010b9f4	kernel.asm	/^ffff80000010b9f4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff80000010b9f8	kernel.asm	/^ffff80000010b9f8:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx$/;"	l
ffff80000010b9fc	kernel.asm	/^ffff80000010b9fc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010ba00	kernel.asm	/^ffff80000010ba00:	89 f2                	mov    %esi,%edx$/;"	l
ffff80000010ba02	kernel.asm	/^ffff80000010ba02:	48 89 c6             	mov    %rax,%rsi$/;"	l
ffff80000010ba05	kernel.asm	/^ffff80000010ba05:	48 89 cf             	mov    %rcx,%rdi$/;"	l
ffff80000010ba08	kernel.asm	/^ffff80000010ba08:	48 b8 98 76 10 00 00 	movabs $0xffff800000107698,%rax$/;"	l
ffff80000010ba0f	kernel.asm	/^ffff80000010ba0f:	80 ff ff $/;"	l
ffff80000010ba12	kernel.asm	/^ffff80000010ba12:	ff d0                	callq  *%rax$/;"	l
ffff80000010ba14	kernel.asm	/^ffff80000010ba14:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff80000010ba18	kernel.asm	/^ffff80000010ba18:	29 45 d0             	sub    %eax,-0x30(%rbp)$/;"	l
ffff80000010ba1b	kernel.asm	/^ffff80000010ba1b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff80000010ba1f	kernel.asm	/^ffff80000010ba1f:	48 01 45 f8          	add    %rax,-0x8(%rbp)$/;"	l
ffff80000010ba23	kernel.asm	/^ffff80000010ba23:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010ba27	kernel.asm	/^ffff80000010ba27:	05 00 10 00 00       	add    $0x1000,%eax$/;"	l
ffff80000010ba2c	kernel.asm	/^ffff80000010ba2c:	89 45 d4             	mov    %eax,-0x2c(%rbp)$/;"	l
ffff80000010ba2f	kernel.asm	/^ffff80000010ba2f:	83 7d d0 00          	cmpl   $0x0,-0x30(%rbp)$/;"	l
ffff80000010ba33	kernel.asm	/^ffff80000010ba33:	0f 85 49 ff ff ff    	jne    ffff80000010b982 <copyout+0x23>$/;"	l
ffff80000010ba39	kernel.asm	/^ffff80000010ba39:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff80000010ba3e	kernel.asm	/^ffff80000010ba3e:	c9                   	leaveq $/;"	l
ffff80000010ba3f	kernel.asm	/^ffff80000010ba3f:	c3                   	retq   $/;"	l
file	file.c	/^  struct file file[NFILE];$/;"	m	struct:__anon5	typeref:struct:__anon5::file	file:
file	file.h	/^struct file {$/;"	s
file	sh.c	/^  char *file;$/;"	m	struct:redircmd	file:
filealloc	file.c	/^filealloc(void)$/;"	f
fileclose	file.c	/^fileclose(struct file *f)$/;"	f
filedup	file.c	/^filedup(struct file *f)$/;"	f
fileinit	file.c	/^fileinit(void)$/;"	f
fileread	file.c	/^fileread(struct file *f, char *addr, int n)$/;"	f
filestat	file.c	/^filestat(struct file *f, struct stat *st)$/;"	f
filesz	elf.h	/^  uint64 filesz;$/;"	m	struct:proghdr
filewrite	file.c	/^filewrite(struct file *f, char *addr, int n)$/;"	f
fill_rtcdate	lapic.c	/^static void fill_rtcdate(struct rtcdate *r)$/;"	f	file:
first	kernel.asm	/^    first = 0;$/;"	d
flags	bootmain.c	/^  uint64 flags;$/;"	m	struct:mbheader	file:
flags	buf.h	/^  int flags;$/;"	m	struct:buf
flags	elf.h	/^  uint flags;$/;"	m	struct:elfhdr
flags	elf.h	/^  uint32 flags;$/;"	m	struct:proghdr
flags	file.h	/^  int flags;          \/\/ I_VALID$/;"	m	struct:inode
flags	kernel.asm	/^    flags = PTE_FLAGS(*pte);$/;"	d
flags	mp.h	/^  uchar flags;                  \/\/ CPU flags$/;"	m	struct:mpproc
flags	mp.h	/^  uchar flags;                  \/\/ I\/O APIC flags$/;"	m	struct:mpioapic
fmtname	ls.c	/^fmtname(char *path)$/;"	f
fname	usertests.asm	/^    fname = names[i];$/;"	d
fname	usertests.asm	/^    fname = names[pi];$/;"	d
fork	proc.c	/^fork(void)$/;"	f
fork1	sh.c	/^fork1(void)$/;"	f
forkret	proc.c	/^forkret(void)$/;"	f
forktest	forktest.c	/^forktest(void)$/;"	f
forktest	usertests.c	/^forktest(void)$/;"	f
found	kernel.asm	/^found:$/;"	l
fourfiles	usertests.c	/^fourfiles(void)$/;"	f
fourteen	usertests.c	/^fourteen(void)$/;"	f
free	umalloc.c	/^free(void *ap)$/;"	f
freeblock	mkfs.c	/^uint freeblock;$/;"	v
freeinode	mkfs.c	/^uint freeinode = 1;$/;"	v
freelist	kalloc.c	/^  struct run *freelist;$/;"	m	struct:__anon6	typeref:struct:__anon6::run	file:
freep	cat.asm	/^      freep = prevp;$/;"	d
freep	cat.asm	/^  freep = p;$/;"	d
freep	divide.asm	/^      freep = prevp;$/;"	d
freep	divide.asm	/^  freep = p;$/;"	d
freep	echo.asm	/^      freep = prevp;$/;"	d
freep	echo.asm	/^  freep = p;$/;"	d
freep	grep.asm	/^      freep = prevp;$/;"	d
freep	grep.asm	/^  freep = p;$/;"	d
freep	init.asm	/^      freep = prevp;$/;"	d
freep	init.asm	/^  freep = p;$/;"	d
freep	kill.asm	/^      freep = prevp;$/;"	d
freep	kill.asm	/^  freep = p;$/;"	d
freep	ln.asm	/^      freep = prevp;$/;"	d
freep	ln.asm	/^  freep = p;$/;"	d
freep	ls.asm	/^      freep = prevp;$/;"	d
freep	ls.asm	/^  freep = p;$/;"	d
freep	mkdir.asm	/^      freep = prevp;$/;"	d
freep	mkdir.asm	/^  freep = p;$/;"	d
freep	rm.asm	/^      freep = prevp;$/;"	d
freep	rm.asm	/^  freep = p;$/;"	d
freep	sh.asm	/^      freep = prevp;$/;"	d
freep	sh.asm	/^  freep = p;$/;"	d
freep	stressfs.asm	/^      freep = prevp;$/;"	d
freep	stressfs.asm	/^  freep = p;$/;"	d
freep	umalloc.c	/^static Header *freep;$/;"	v	file:
freep	usertests.asm	/^      freep = prevp;$/;"	d
freep	usertests.asm	/^  freep = p;$/;"	d
freep	wc.asm	/^      freep = prevp;$/;"	d
freep	wc.asm	/^  freep = p;$/;"	d
freep	zombie.asm	/^      freep = prevp;$/;"	d
freep	zombie.asm	/^  freep = p;$/;"	d
freerange	kalloc.c	/^freerange(void *vstart, void *vend)$/;"	f
freevm	vm.c	/^freevm(pde_t *pml4)$/;"	f
fs	mmu.h	/^  ushort fs;$/;"	m	struct:taskstate
fsfd	mkfs.c	/^int fsfd;$/;"	v
fsfull	usertests.c	/^fsfull()$/;"	f
ftable	file.c	/^} ftable;$/;"	v	typeref:struct:__anon5
g	mmu.h	/^  uint g : 1;          \/\/ Granularity: limit scaled by 4K when set$/;"	m	struct:segdesc
gatedesc	mmu.h	/^struct gatedesc {$/;"	s
gdt	bootasm.S	/^gdt:$/;"	l
gdt	entryother.S	/^gdt:$/;"	l
gdt	kernel.asm	/^  gdt = (struct segdesc*) local;$/;"	d
gdt	proc.h	/^  struct segdesc gdt[NSEGS];   \/\/ x86 global descriptor table$/;"	m	struct:cpu	typeref:struct:cpu::segdesc
gdt64_begin	entry.S	/^gdt64_begin:$/;"	l
gdt64_end	entry.S	/^gdt64_end:$/;"	l
gdt64_end	kernel.asm	/^gdt64_end:$/;"	l
gdtdesc	bootasm.S	/^gdtdesc:$/;"	l
gdtdesc	entryother.S	/^gdtdesc:$/;"	l
gdtr64	entry.S	/^gdtr64:$/;"	l
getcallerpcs	spinlock.c	/^getcallerpcs(void *v, addr_t pcs[])$/;"	f
getcmd	sh.c	/^getcmd(char *buf, int nbuf)$/;"	f
gets	ulib.c	/^gets(char *buf, int max)$/;"	f
getstackpcs	spinlock.c	/^getstackpcs(addr_t *ebp, addr_t pcs[])$/;"	f
gettoken	sh.c	/^gettoken(char **ps, char *es, char **q, char **eq)$/;"	f
grep	grep.c	/^grep(char *pattern, int fd)$/;"	f
growproc	proc.c	/^growproc(int n)$/;"	f
gs	mmu.h	/^  ushort gs;$/;"	m	struct:taskstate
havedisk1	ide.c	/^static int havedisk1;$/;"	v	file:
havedisk1	kernel.asm	/^      havedisk1 = 1;$/;"	d
havekids	kernel.asm	/^      havekids = 1;$/;"	d
havekids	kernel.asm	/^    havekids = 0;$/;"	d
head	bio.c	/^  struct buf head;$/;"	m	struct:__anon4	typeref:struct:__anon4::buf	file:
header	umalloc.c	/^union header {$/;"	u	file:
header_addr	bootmain.c	/^  uint64 header_addr;$/;"	m	struct:mbheader	file:
hi	usertests.asm	/^  hi = 1100*1024;$/;"	d
hlt	x86.h	/^hlt(void)$/;"	f
holding	spinlock.c	/^holding(struct spinlock *lock)$/;"	f
holdingsleep	sleeplock.c	/^holdingsleep(struct sleeplock *lk)$/;"	f
hour	date.h	/^  uint hour;$/;"	m	struct:rtcdate
hp	cat.asm	/^  hp = (Header*)p;$/;"	d
hp	divide.asm	/^  hp = (Header*)p;$/;"	d
hp	echo.asm	/^  hp = (Header*)p;$/;"	d
hp	grep.asm	/^  hp = (Header*)p;$/;"	d
hp	init.asm	/^  hp = (Header*)p;$/;"	d
hp	kill.asm	/^  hp = (Header*)p;$/;"	d
hp	ln.asm	/^  hp = (Header*)p;$/;"	d
hp	ls.asm	/^  hp = (Header*)p;$/;"	d
hp	mkdir.asm	/^  hp = (Header*)p;$/;"	d
hp	rm.asm	/^  hp = (Header*)p;$/;"	d
hp	sh.asm	/^  hp = (Header*)p;$/;"	d
hp	stressfs.asm	/^  hp = (Header*)p;$/;"	d
hp	usertests.asm	/^  hp = (Header*)p;$/;"	d
hp	wc.asm	/^  hp = (Header*)p;$/;"	d
hp	zombie.asm	/^  hp = (Header*)p;$/;"	d
i	cat.asm	/^  i = 0;$/;"	d
i	divide.asm	/^  i = 0;$/;"	d
i	echo.asm	/^  i = 0;$/;"	d
i	grep.asm	/^  i = 0;$/;"	d
i	init.asm	/^  i = 0;$/;"	d
i	kernel.asm	/^  i = 0;$/;"	d
i	kill.asm	/^  i = 0;$/;"	d
i	ln.asm	/^  i = 0;$/;"	d
i	ls.asm	/^  i = 0;$/;"	d
i	mkdir.asm	/^  i = 0;$/;"	d
i	rm.asm	/^  i = 0;$/;"	d
i	sh.asm	/^  i = 0;$/;"	d
i	stressfs.asm	/^  i = 0;$/;"	d
i	usertests.asm	/^      i = de.name[1] - '0';$/;"	d
i	usertests.asm	/^    i = read(fd, buf, 512);$/;"	d
i	usertests.asm	/^  i = 0;$/;"	d
i	usertests.asm	/^  i = read(fd, buf, 2000);$/;"	d
i	wc.asm	/^  i = 0;$/;"	d
i	zombie.asm	/^  i = 0;$/;"	d
ialloc	fs.c	/^ialloc(uint dev, short type)$/;"	f
ialloc	mkfs.c	/^ialloc(ushort type)$/;"	f
iappend	mkfs.c	/^iappend(uint inum, void *xp, int n)$/;"	f
icache	fs.c	/^} icache;$/;"	v	typeref:struct:__anon2
id	kernel.asm	/^  id = ioapicread(REG_ID) >> 24;$/;"	d
id	proc.h	/^  uchar id;$/;"	m	struct:cpu
ideinit	ide.c	/^ideinit(void)$/;"	f
ideinit	memide.c	/^ideinit(void)$/;"	f
ideintr	ide.c	/^ideintr(void)$/;"	f
ideintr	memide.c	/^ideintr(void)$/;"	f
idelock	ide.c	/^static struct spinlock idelock;$/;"	v	typeref:struct:spinlock	file:
idequeue	ide.c	/^static struct buf *idequeue;$/;"	v	typeref:struct:buf	file:
idequeue	kernel.asm	/^  idequeue = b->qnext;$/;"	d
iderw	ide.c	/^iderw(struct buf *b)$/;"	f
iderw	memide.c	/^iderw(struct buf *b)$/;"	f
idestart	ide.c	/^idestart(struct buf *b)$/;"	f	file:
idewait	ide.c	/^idewait(int checkerr)$/;"	f	file:
idt	kernel.asm	/^  idt = (uint*) kalloc();$/;"	d
idt	trap.c	/^uint *idt;$/;"	v
idtinit	trap.c	/^void idtinit(void) {$/;"	f
idup	fs.c	/^idup(struct inode *ip)$/;"	f
iget	fs.c	/^iget(uint dev, uint inum)$/;"	f	file:
ignore_sysret	entry.S	/^ignore_sysret:$/;"	l
ignore_sysret	kernel.asm	/^ignore_sysret:$/;"	l
iinit	fs.c	/^iinit(int dev)$/;"	f
ilock	fs.c	/^ilock(struct inode *ip)$/;"	f
imcrp	mp.h	/^  uchar imcrp;$/;"	m	struct:mp
inb	x86.h	/^inb(ushort port)$/;"	f
init	initcode.S	/^init:$/;"	l
initlock	spinlock.c	/^initlock(struct spinlock *lk, char *name)$/;"	f
initlog	log.c	/^initlog(int dev)$/;"	f
initproc	kernel.asm	/^  initproc = p;$/;"	d
initproc	proc.c	/^static struct proc *initproc;$/;"	v	typeref:struct:proc	file:
initsleeplock	sleeplock.c	/^initsleeplock(struct sleeplock *lk, char *name)$/;"	f
inituvm	vm.c	/^inituvm(pde_t *pgdir, char *init, uint sz)$/;"	f
ino	stat.h	/^  uint ino;    \/\/ Inode number$/;"	m	struct:stat
inode	file.h	/^struct inode {$/;"	s
inode	fs.c	/^  struct inode inode[NINODE];$/;"	m	struct:__anon2	typeref:struct:__anon2::inode	file:
inodestart	fs.h	/^  uint inodestart;   \/\/ Block number of first inode block$/;"	m	struct:superblock
input	console.c	/^} input;$/;"	v	typeref:struct:__anon8
insl	x86.h	/^insl(int port, void *addr, int cnt)$/;"	f
install_trans	log.c	/^install_trans(void)$/;"	f	file:
int	cat.asm	/^int$/;"	l
int	divide.asm	/^int main(int argc, char *argv[]){$/;"	l
int	divide.asm	/^int$/;"	l
int	echo.asm	/^int$/;"	l
int	forktest.asm	/^int$/;"	l
int	grep.asm	/^int match(char*, char*);$/;"	l
int	grep.asm	/^int matchhere(char *re, char *text)$/;"	l
int	grep.asm	/^int matchhere(char*, char*);$/;"	l
int	grep.asm	/^int matchstar(int c, char *re, char *text)$/;"	l
int	grep.asm	/^int matchstar(int, char*, char*);$/;"	l
int	grep.asm	/^int$/;"	l
int	init.asm	/^int$/;"	l
int	kernel.asm	/^int ncpu;$/;"	l
int	kernel.asm	/^int$/;"	l
int	kill.asm	/^int$/;"	l
int	ln.asm	/^int$/;"	l
int	ls.asm	/^int$/;"	l
int	mkdir.asm	/^int$/;"	l
int	rm.asm	/^int$/;"	l
int	sh.asm	/^int$/;"	l
int	stressfs.asm	/^int$/;"	l
int	usertests.asm	/^int stdout = 1;$/;"	l
int	usertests.asm	/^int$/;"	l
int	wc.asm	/^int$/;"	l
int	zombie.asm	/^int$/;"	l
intena	kernel.asm	/^  intena = cpu->intena;$/;"	d
intena	proc.h	/^  int intena;                  \/\/ Were interrupts enabled before pushcli?$/;"	m	struct:cpu
inum	file.h	/^  uint inum;          \/\/ Inode number$/;"	m	struct:inode
inum	fs.h	/^  ushort inum;$/;"	m	struct:dirent
inum	kernel.asm	/^      inum = de.inum;$/;"	d
inword	wc.asm	/^        inword = 0;$/;"	d
inword	wc.asm	/^        inword = 1;$/;"	d
inword	wc.asm	/^  inword = 0;$/;"	d
ioapic	ioapic.c	/^struct ioapic {$/;"	s	file:
ioapic	ioapic.c	/^volatile struct ioapic *ioapic;$/;"	v	typeref:struct:ioapic
ioapic	kernel.asm	/^      ioapic = (struct mpioapic*)p;$/;"	d
ioapic	kernel.asm	/^  ioapic = P2V((volatile struct ioapic*)IOAPIC);$/;"	d
ioapicenable	ioapic.c	/^ioapicenable(int irq, int cpunum)$/;"	f
ioapicid	kernel.asm	/^      ioapicid = ioapic->apicno;$/;"	d
ioapicid	mp.c	/^uchar ioapicid;$/;"	v
ioapicinit	ioapic.c	/^ioapicinit(void)$/;"	f
ioapicread	ioapic.c	/^ioapicread(int reg)$/;"	f	file:
ioapicwrite	ioapic.c	/^ioapicwrite(int reg, uint data)$/;"	f	file:
iomb	mmu.h	/^  ushort iomb;       \/\/ I\/O map base address$/;"	m	struct:taskstate
ip	file.h	/^  struct inode *ip;$/;"	m	struct:file	typeref:struct:file::inode
ip	kernel.asm	/^    ip = create(path, T_FILE, 0, 0);$/;"	d
ip	kernel.asm	/^    ip = idup(proc->cwd);$/;"	d
ip	kernel.asm	/^    ip = iget(ROOTDEV, ROOTINO);$/;"	d
ip	kernel.asm	/^    ip = next;$/;"	d
ip	kernel.asm	/^  ip = 0;$/;"	d
ip	kernel.asm	/^  ip = empty;$/;"	d
iput	fs.c	/^iput(struct inode *ip)$/;"	f
iputtest	usertests.c	/^iputtest(void)$/;"	f
iref	usertests.c	/^iref(void)$/;"	f
isdirempty	sysfile.c	/^isdirempty(struct inode *dp)$/;"	f	file:
itrunc	fs.c	/^itrunc(struct inode *ip)$/;"	f	file:
iunlock	fs.c	/^iunlock(struct inode *ip)$/;"	f
iunlockput	fs.c	/^iunlockput(struct inode *ip)$/;"	f
iupdate	fs.c	/^iupdate(struct inode *ip)$/;"	f
kalloc	kalloc.c	/^kalloc(void)$/;"	f
kbdgetc	kbd.c	/^kbdgetc(void)$/;"	f
kbdintr	kbd.c	/^kbdintr(void)$/;"	f
kernel	kernel.asm	/^kernel:     file format elf64-x86-64$/;"	l
kfree	kalloc.c	/^kfree(char *v)$/;"	f
kill	proc.c	/^kill(int pid)$/;"	f
killed	proc.h	/^  int killed;                  \/\/ If non-zero, have been killed$/;"	m	struct:proc
kinit1	kalloc.c	/^kinit1(void *vstart, void *vend)$/;"	f
kinit2	kalloc.c	/^kinit2(void *vstart, void *vend)$/;"	f
kmem	kalloc.c	/^} kmem;$/;"	v	typeref:struct:__anon6
kpdpt	kernel.asm	/^  kpdpt = (pde_t*) kalloc();$/;"	d
kpdpt	vm.c	/^static pde_t *kpdpt;$/;"	v	file:
kpgdir	vm.c	/^pde_t *kpgdir;  \/\/ for use in scheduler()$/;"	v
kpml4	kernel.asm	/^  kpml4 = (pde_t*) kalloc();$/;"	d
kpml4	vm.c	/^static pde_t *kpml4;$/;"	v	file:
kstack	proc.h	/^  char *kstack;                \/\/ Bottom of kernel stack for this process$/;"	m	struct:proc
kvmalloc	vm.c	/^kvmalloc(void)$/;"	f
l	wc.asm	/^  l = w = c = 0;$/;"	d
lapic	kernel.asm	/^  lapic = P2V((addr_t)conf->lapicaddr_p);$/;"	d
lapic	lapic.c	/^volatile uint *lapic;  \/\/ Initialized in mp.c$/;"	v
lapicaddr_p	mp.h	/^  uint32 lapicaddr_p;              \/\/ address of local APIC$/;"	m	struct:mpconf
lapiceoi	lapic.c	/^lapiceoi(void)$/;"	f
lapicinit	lapic.c	/^lapicinit(void)$/;"	f
lapicstartap	lapic.c	/^lapicstartap(uchar apicid, uint addr)$/;"	f
lapicw	lapic.c	/^lapicw(int index, int value)$/;"	f	file:
last	kernel.asm	/^      last = s+1;$/;"	d
last	kernel.asm	/^  last = (char*)PGROUNDDOWN(((addr_t)va) + size - 1);$/;"	d
lastaddr	usertests.asm	/^  lastaddr = (char*) (BIG-1);$/;"	d
lcmd	sh.asm	/^    lcmd = (struct listcmd*)cmd;$/;"	d
lcr3	x86.h	/^lcr3(addr_t val)$/;"	f
ldt	mmu.h	/^  ushort ldt;$/;"	m	struct:taskstate
left	sh.c	/^  struct cmd *left;$/;"	m	struct:listcmd	typeref:struct:listcmd::cmd	file:
left	sh.c	/^  struct cmd *left;$/;"	m	struct:pipecmd	typeref:struct:pipecmd::cmd	file:
len	kernel.asm	/^  len = path - s;$/;"	d
length	mp.h	/^  uchar length;                 \/\/ 1$/;"	m	struct:mp
length	mp.h	/^  ushort length;                \/\/ total table length$/;"	m	struct:mpconf
lgdt	x86.h	/^lgdt(struct segdesc *p, int size)$/;"	f
lh	log.c	/^  struct logheader lh;$/;"	m	struct:log	typeref:struct:log::logheader	file:
lidt	x86.h	/^lidt(struct gatedesc *p, int size)$/;"	f
lim_15_0	mmu.h	/^  uint lim_15_0 : 16;  \/\/ Low bits of segment limit$/;"	m	struct:segdesc
lim_19_16	mmu.h	/^  uint lim_19_16 : 4;  \/\/ High bits of segment limit$/;"	m	struct:segdesc
link	mmu.h	/^  uint link;         \/\/ Old ts selector$/;"	m	struct:taskstate
linktest	usertests.c	/^linktest(void)$/;"	f
linkunlink	usertests.c	/^linkunlink()$/;"	f
listcmd	sh.c	/^listcmd(struct cmd *left, struct cmd *right)$/;"	f
listcmd	sh.c	/^struct listcmd {$/;"	s	file:
lk	sleeplock.h	/^  struct spinlock lk; \/\/ spinlock protecting this sleep lock$/;"	m	struct:sleeplock	typeref:struct:sleeplock::spinlock
load_addr	bootmain.c	/^  uint64 load_addr;$/;"	m	struct:mbheader	file:
load_end_addr	bootmain.c	/^  uint64 load_end_addr;$/;"	m	struct:mbheader	file:
loadgs	x86.h	/^loadgs(ushort v)$/;"	f
loaduvm	vm.c	/^loaduvm(pde_t *pgdir, char *addr, struct inode *ip, uint offset, uint sz)$/;"	f
local	kernel.asm	/^  local = kalloc();$/;"	d
local	proc.h	/^  void *local;$/;"	m	struct:cpu
lock	bio.c	/^  struct spinlock lock;$/;"	m	struct:__anon4	typeref:struct:__anon4::spinlock	file:
lock	buf.h	/^  struct sleeplock lock;$/;"	m	struct:buf	typeref:struct:buf::sleeplock
lock	console.c	/^  struct spinlock lock;$/;"	m	struct:__anon7	typeref:struct:__anon7::spinlock	file:
lock	console.c	/^  struct spinlock lock;$/;"	m	struct:__anon8	typeref:struct:__anon8::spinlock	file:
lock	file.c	/^  struct spinlock lock;$/;"	m	struct:__anon5	typeref:struct:__anon5::spinlock	file:
lock	file.h	/^  struct sleeplock lock;$/;"	m	struct:inode	typeref:struct:inode::sleeplock
lock	fs.c	/^  struct spinlock lock;$/;"	m	struct:__anon2	typeref:struct:__anon2::spinlock	file:
lock	kalloc.c	/^  struct spinlock lock;$/;"	m	struct:__anon6	typeref:struct:__anon6::spinlock	file:
lock	log.c	/^  struct spinlock lock;$/;"	m	struct:log	typeref:struct:log::spinlock	file:
lock	pipe.c	/^  struct spinlock lock;$/;"	m	struct:pipe	typeref:struct:pipe::spinlock	file:
lock	proc.c	/^  struct spinlock lock;$/;"	m	struct:__anon1	typeref:struct:__anon1::spinlock	file:
locked	sleeplock.h	/^  uint locked;       \/\/ Is the lock held?$/;"	m	struct:sleeplock
locked	spinlock.h	/^  uint locked;       \/\/ Is the lock held?$/;"	m	struct:spinlock
locking	console.c	/^  int locking;$/;"	m	struct:__anon7	file:
locking	kernel.asm	/^  locking = cons.locking;$/;"	d
log	log.c	/^struct log log;$/;"	v	typeref:struct:log
log	log.c	/^struct log {$/;"	s	file:
log_write	log.c	/^log_write(struct buf *b)$/;"	f
logheader	log.c	/^struct logheader {$/;"	s	file:
logstart	fs.h	/^  uint logstart;     \/\/ Block number of first log block$/;"	m	struct:superblock
ls	ls.c	/^ls(char *path)$/;"	f
ltr	x86.h	/^ltr(ushort sel)$/;"	f
m	grep.asm	/^      m = 0;$/;"	d
m	grep.asm	/^  m = 0;$/;"	d
m	kernel.asm	/^      m = 1 << (bi % 8);$/;"	d
m	kernel.asm	/^    m = min(n - tot, BSIZE - off%BSIZE);$/;"	d
m	kernel.asm	/^  m = 1 << (bi % 8);$/;"	d
m1	usertests.asm	/^      m1 = m2;$/;"	d
m1	usertests.asm	/^    m1 = 0;$/;"	d
m1	usertests.asm	/^    m1 = malloc(1024*20);$/;"	d
m2	usertests.asm	/^      m2 = *(char**)m1;$/;"	d
machine	elf.h	/^  ushort machine;$/;"	m	struct:elfhdr
magic	bootmain.c	/^  uint64 magic;$/;"	m	struct:mbheader	file:
magic	elf.h	/^  uint magic;  \/\/ must equal ELF_MAGIC$/;"	m	struct:elfhdr
main	cat.c	/^main(int argc, char *argv[])$/;"	f
main	divide.c	/^int main(int argc, char *argv[]){$/;"	f
main	echo.c	/^main(int argc, char *argv[])$/;"	f
main	forktest.c	/^main(void)$/;"	f
main	grep.c	/^main(int argc, char *argv[])$/;"	f
main	init.c	/^main(void)$/;"	f
main	kill.c	/^main(int argc, char **argv)$/;"	f
main	ln.c	/^main(int argc, char *argv[])$/;"	f
main	ls.c	/^main(int argc, char *argv[])$/;"	f
main	main.c	/^main(void)$/;"	f
main	mkdir.c	/^main(int argc, char *argv[])$/;"	f
main	mkfs.c	/^main(int argc, char *argv[])$/;"	f
main	rm.c	/^main(int argc, char *argv[])$/;"	f
main	sh.c	/^main(void)$/;"	f
main	stressfs.c	/^main(int argc, char *argv[])$/;"	f
main	usertests.c	/^main(int argc, char *argv[])$/;"	f
main	wc.c	/^main(int argc, char *argv[])$/;"	f
main	zombie.c	/^main(void)$/;"	f
major	file.h	/^  short major;$/;"	m	struct:inode
major	fs.h	/^  short major;          \/\/ Major device number (T_DEV only)$/;"	m	struct:dinode
malloc	umalloc.c	/^malloc(uint nbytes)$/;"	f
mappages	vm.c	/^mappages(pde_t *pgdir, void *va, addr_t size, addr_t pa, int perm)$/;"	f
match	grep.c	/^match(char *re, char *text)$/;"	f
matchhere	grep.c	/^int matchhere(char *re, char *text)$/;"	f
matchstar	grep.c	/^int matchstar(int c, char *re, char *text)$/;"	f
maxintr	kernel.asm	/^  maxintr = (ioapicread(REG_VER) >> 16) & 0xFF;$/;"	d
mbheader	bootmain.c	/^struct mbheader {$/;"	s	file:
mboot_entry	entry.S	/^mboot_entry:$/;"	l
mboot_entry	kernel.asm	/^mboot_entry:$/;"	l
mboot_flags	entry.S	/^#define mboot_flags 0x00010000$/;"	d
mboot_header	entry.S	/^mboot_header:$/;"	l
mboot_magic	entry.S	/^#define mboot_magic 0x1badb002$/;"	d
mem	kernel.asm	/^    mem = kalloc();$/;"	d
mem	kernel.asm	/^  mem = kalloc();$/;"	d
mem	usertests.c	/^mem(void)$/;"	f
memcmp	string.c	/^memcmp(const void *v1, const void *v2, uint n)$/;"	f
memcpy	string.c	/^memcpy(void *dst, const void *src, uint n)$/;"	f
memdisk	memide.c	/^static uchar *memdisk;$/;"	v	file:
memmove	string.c	/^memmove(void *dst, const void *src, uint n)$/;"	f
memmove	ulib.c	/^memmove(void *vdst, void *vsrc, int n)$/;"	f
memset	string.c	/^memset(void *dst, int c, uint n)$/;"	f
memset	ulib.c	/^memset(void *dst, int c, uint n)$/;"	f
memsz	elf.h	/^  uint64 memsz;$/;"	m	struct:proghdr
microdelay	lapic.c	/^microdelay(int us)$/;"	f
min	fs.c	24;"	d	file:
min	mkfs.c	253;"	d	file:
minor	file.h	/^  short minor;$/;"	m	struct:inode
minor	fs.h	/^  short minor;          \/\/ Minor device number (T_DEV only)$/;"	m	struct:dinode
minute	date.h	/^  uint minute;$/;"	m	struct:rtcdate
mkgate	trap.c	/^mkgate(uint *idt, uint n, addr_t kva, uint pl, uint trap) {$/;"	f	file:
mode	sh.c	/^  int mode;$/;"	m	struct:redircmd	file:
month	date.h	/^  uint month;$/;"	m	struct:rtcdate
morecore	umalloc.c	/^morecore(uint nu)$/;"	f	file:
mp	mp.h	/^struct mp {             \/\/ floating pointer$/;"	s
mpconf	mp.h	/^struct mpconf {         \/\/ configuration table header$/;"	s
mpconfig	mp.c	/^mpconfig(struct mp **pmp)$/;"	f	file:
mpenter	main.c	/^mpenter(void)$/;"	f
mpinit	mp.c	/^mpinit(void)$/;"	f
mpioapic	mp.h	/^struct mpioapic {       \/\/ I\/O APIC table entry$/;"	s
mpmain	main.c	/^mpmain(void)$/;"	f	file:
mpproc	mp.h	/^struct mpproc {         \/\/ processor table entry$/;"	s
mpsearch	mp.c	/^mpsearch(void)$/;"	f	file:
mpsearch1	mp.c	/^mpsearch1(addr_t a, int len)$/;"	f	file:
n	cat.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	cat.asm	/^  n = 0;$/;"	d
n	divide.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	divide.asm	/^  n = 0;$/;"	d
n	echo.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	echo.asm	/^  n = 0;$/;"	d
n	forktest.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	forktest.asm	/^  n = 0;$/;"	d
n	grep.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	grep.asm	/^  n = 0;$/;"	d
n	init.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	init.asm	/^  n = 0;$/;"	d
n	kernel.asm	/^      n = PGSIZE;$/;"	d
n	kernel.asm	/^      n = len;$/;"	d
n	kernel.asm	/^      n = sz - i;$/;"	d
n	kernel.asm	/^    n = PGSIZE - (va - va0);$/;"	d
n	kernel.asm	/^    n = ip->size - off;$/;"	d
n	kill.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	kill.asm	/^  n = 0;$/;"	d
n	ln.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	ln.asm	/^  n = 0;$/;"	d
n	log.c	/^  int n;$/;"	m	struct:logheader	file:
n	ls.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	ls.asm	/^  n = 0;$/;"	d
n	mkdir.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	mkdir.asm	/^  n = 0;$/;"	d
n	rm.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	rm.asm	/^  n = 0;$/;"	d
n	sh.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	sh.asm	/^  n = 0;$/;"	d
n	stressfs.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	stressfs.asm	/^  n = 0;$/;"	d
n	usertests.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	usertests.asm	/^  n = 0;$/;"	d
n	wc.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	wc.asm	/^  n = 0;$/;"	d
n	zombie.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	zombie.asm	/^  n = 0;$/;"	d
n1	kernel.asm	/^        n1 = max;$/;"	d
name	cat.asm	/^  name: \\$/;"	l
name	divide.asm	/^  name: \\$/;"	l
name	echo.asm	/^  name: \\$/;"	l
name	forktest.asm	/^  name: \\$/;"	l
name	fs.h	/^  char name[DIRSIZ];$/;"	m	struct:dirent
name	grep.asm	/^  name: \\$/;"	l
name	init.asm	/^  name: \\$/;"	l
name	kill.asm	/^  name: \\$/;"	l
name	ln.asm	/^  name: \\$/;"	l
name	ls.asm	/^  name: \\$/;"	l
name	mkdir.asm	/^  name: \\$/;"	l
name	proc.h	/^  char name[16];               \/\/ Process name (debugging)$/;"	m	struct:proc
name	rm.asm	/^  name: \\$/;"	l
name	sh.asm	/^  name: \\$/;"	l
name	sleeplock.h	/^  char *name;        \/\/ Name of lock.$/;"	m	struct:sleeplock
name	spinlock.h	/^  char *name;        \/\/ Name of lock.$/;"	m	struct:spinlock
name	stressfs.asm	/^  name: \\$/;"	l
name	usertests.asm	/^  name: \\$/;"	l
name	usertests.c	/^char name[3];$/;"	v
name	usys.S	/^  name: \\$/;"	l
name	wc.asm	/^  name: \\$/;"	l
name	zombie.asm	/^  name: \\$/;"	l
namecmp	fs.c	/^namecmp(const char *s, const char *t)$/;"	f
namei	fs.c	/^namei(char *path)$/;"	f
nameiparent	fs.c	/^nameiparent(char *path, char *name)$/;"	f
namex	fs.c	/^namex(char *path, int nameiparent, char *name)$/;"	f	file:
nbitmap	mkfs.c	/^int nbitmap = FSSIZE\/(BSIZE*8) + 1;$/;"	v
nblocks	fs.h	/^  uint nblocks;      \/\/ Number of data blocks$/;"	m	struct:superblock
nblocks	mkfs.c	/^int nblocks;  \/\/ Number of data blocks$/;"	v
nc	usertests.asm	/^  nc = np = 0;$/;"	d
ncli	proc.h	/^  int ncli;                    \/\/ Depth of pushcli nesting.$/;"	m	struct:cpu
ncpu	mp.c	/^int ncpu;$/;"	v
neg	cat.asm	/^    neg = 1;$/;"	d
neg	cat.asm	/^  neg = 0;$/;"	d
neg	divide.asm	/^    neg = 1;$/;"	d
neg	divide.asm	/^  neg = 0;$/;"	d
neg	echo.asm	/^    neg = 1;$/;"	d
neg	echo.asm	/^  neg = 0;$/;"	d
neg	grep.asm	/^    neg = 1;$/;"	d
neg	grep.asm	/^  neg = 0;$/;"	d
neg	init.asm	/^    neg = 1;$/;"	d
neg	init.asm	/^  neg = 0;$/;"	d
neg	kill.asm	/^    neg = 1;$/;"	d
neg	kill.asm	/^  neg = 0;$/;"	d
neg	ln.asm	/^    neg = 1;$/;"	d
neg	ln.asm	/^  neg = 0;$/;"	d
neg	ls.asm	/^    neg = 1;$/;"	d
neg	ls.asm	/^  neg = 0;$/;"	d
neg	mkdir.asm	/^    neg = 1;$/;"	d
neg	mkdir.asm	/^  neg = 0;$/;"	d
neg	rm.asm	/^    neg = 1;$/;"	d
neg	rm.asm	/^  neg = 0;$/;"	d
neg	sh.asm	/^    neg = 1;$/;"	d
neg	sh.asm	/^  neg = 0;$/;"	d
neg	stressfs.asm	/^    neg = 1;$/;"	d
neg	stressfs.asm	/^  neg = 0;$/;"	d
neg	usertests.asm	/^    neg = 1;$/;"	d
neg	usertests.asm	/^  neg = 0;$/;"	d
neg	wc.asm	/^    neg = 1;$/;"	d
neg	wc.asm	/^  neg = 0;$/;"	d
neg	zombie.asm	/^    neg = 1;$/;"	d
neg	zombie.asm	/^  neg = 0;$/;"	d
next	buf.h	/^  struct buf *next;$/;"	m	struct:buf	typeref:struct:buf::buf
next	kalloc.c	/^  struct run *next;$/;"	m	struct:run	typeref:struct:run::run	file:
nextpid	proc.c	/^int nextpid = 1;$/;"	v
ninodeblocks	mkfs.c	/^int ninodeblocks = NINODES \/ IPB + 1;$/;"	v
ninodes	fs.h	/^  uint ninodes;      \/\/ Number of inodes.$/;"	m	struct:superblock
nlink	file.h	/^  short nlink;$/;"	m	struct:inode
nlink	fs.h	/^  short nlink;          \/\/ Number of links to inode in file system$/;"	m	struct:dinode
nlink	stat.h	/^  short nlink; \/\/ Number of links to file$/;"	m	struct:stat
nlog	fs.h	/^  uint nlog;         \/\/ Number of log blocks$/;"	m	struct:superblock
nlog	mkfs.c	/^int nlog = LOGSIZE;$/;"	v
nmeta	mkfs.c	/^int nmeta;    \/\/ Number of meta blocks (boot, sb, nlog, inode, bitmap)$/;"	v
normalmap	kbd.h	/^static uchar normalmap[256] =$/;"	v
nread	pipe.c	/^  uint nread;     \/\/ number of bytes read$/;"	m	struct:pipe	file:
nu	cat.asm	/^    nu = 4096;$/;"	d
nu	divide.asm	/^    nu = 4096;$/;"	d
nu	echo.asm	/^    nu = 4096;$/;"	d
nu	grep.asm	/^    nu = 4096;$/;"	d
nu	init.asm	/^    nu = 4096;$/;"	d
nu	kill.asm	/^    nu = 4096;$/;"	d
nu	ln.asm	/^    nu = 4096;$/;"	d
nu	ls.asm	/^    nu = 4096;$/;"	d
nu	mkdir.asm	/^    nu = 4096;$/;"	d
nu	rm.asm	/^    nu = 4096;$/;"	d
nu	sh.asm	/^    nu = 4096;$/;"	d
nu	stressfs.asm	/^    nu = 4096;$/;"	d
nu	usertests.asm	/^    nu = 4096;$/;"	d
nu	wc.asm	/^    nu = 4096;$/;"	d
nu	zombie.asm	/^    nu = 4096;$/;"	d
nulterminate	sh.c	/^nulterminate(struct cmd *cmd)$/;"	f
num	kernel.asm	/^  num = proc->tf->rax;$/;"	d
nunits	cat.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	divide.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	echo.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	grep.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	init.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	kill.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	ln.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	ls.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	mkdir.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	rm.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	sh.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	stressfs.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	usertests.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	wc.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	zombie.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nwrite	pipe.c	/^  uint nwrite;    \/\/ number of bytes written$/;"	m	struct:pipe	file:
oemlength	mp.h	/^  ushort oemlength;             \/\/ OEM table length$/;"	m	struct:mpconf
oemtable_p	mp.h	/^  uint32 oemtable_p;               \/\/ OEM table pointer$/;"	m	struct:mpconf
off	elf.h	/^  uint64 off;$/;"	m	struct:proghdr
off	file.h	/^  uint off;$/;"	m	struct:file
off_15_0	mmu.h	/^  uint off_15_0 : 16;   \/\/ low 16 bits of offset in segment$/;"	m	struct:gatedesc
off_31_16	mmu.h	/^  uint off_31_16 : 16;  \/\/ high bits of offset in segment$/;"	m	struct:gatedesc
off_63_32	mmu.h	/^  uint32 off_63_32;$/;"	m	struct:gatedesc
ofile	proc.h	/^  struct file *ofile[NOFILE];  \/\/ Open files$/;"	m	struct:proc	typeref:struct:proc::file
oldbrk	usertests.asm	/^  oldbrk = sbrk(0);$/;"	d
oldpgdir	kernel.asm	/^  oldpgdir = proc->pgdir;$/;"	d
openiputtest	usertests.c	/^openiputtest(void)$/;"	f
opentest	usertests.c	/^opentest(void)$/;"	f
os	cat.asm	/^  os = s;$/;"	d
os	divide.asm	/^  os = s;$/;"	d
os	echo.asm	/^  os = s;$/;"	d
os	forktest.asm	/^  os = s;$/;"	d
os	grep.asm	/^  os = s;$/;"	d
os	init.asm	/^  os = s;$/;"	d
os	kill.asm	/^  os = s;$/;"	d
os	ln.asm	/^  os = s;$/;"	d
os	ls.asm	/^  os = s;$/;"	d
os	mkdir.asm	/^  os = s;$/;"	d
os	rm.asm	/^  os = s;$/;"	d
os	sh.asm	/^  os = s;$/;"	d
os	stressfs.asm	/^  os = s;$/;"	d
os	usertests.asm	/^  os = s;$/;"	d
os	wc.asm	/^  os = s;$/;"	d
os	zombie.asm	/^  os = s;$/;"	d
outb	x86.h	/^outb(ushort port, uchar data)$/;"	f
outsl	x86.h	/^outsl(int port, const void *addr, int cnt)$/;"	f
outstanding	log.c	/^  int outstanding; \/\/ how many FS sys calls are executing.$/;"	m	struct:log	file:
outw	x86.h	/^outw(ushort port, ushort data)$/;"	f
p	cat.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	divide.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	echo.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	grep.asm	/^      p = q+1;$/;"	d
p	grep.asm	/^    p = buf;$/;"	d
p	grep.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	init.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	kernel.asm	/^    p = ((bda[0x14]<<8)|bda[0x13])*1024;$/;"	d
p	kernel.asm	/^  p = (char*)PGROUNDUP((addr_t)vstart);$/;"	d
p	kernel.asm	/^  p = 0;$/;"	d
p	kernel.asm	/^  p = allocproc();$/;"	d
p	kill.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	ln.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	ls.asm	/^    p = buf+strlen(buf);$/;"	d
p	ls.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	mkdir.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	mmu.h	/^  uint p : 1;           \/\/ Present$/;"	m	struct:gatedesc
p	mmu.h	/^  uint p : 1;          \/\/ Present$/;"	m	struct:segdesc
p	rm.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	sh.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	stressfs.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	usertests.asm	/^  p = sbrk(amt);$/;"	d
p	usertests.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	wc.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	zombie.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p2v	memlayout.h	/^static inline void *p2v(addr_t a) {$/;"	f
pa	kernel.asm	/^      pa = PTE_ADDR(*pte);$/;"	d
pa	kernel.asm	/^    pa = PTE_ADDR(*pte);$/;"	d
pa0	kernel.asm	/^    pa0 = uva2ka(pgdir, (char*)va0);$/;"	d
pad	ioapic.c	/^  uint pad[3];$/;"	m	struct:ioapic	file:
pad	runoff	/^pad()$/;"	f
padding1	mmu.h	/^  ushort padding1;$/;"	m	struct:taskstate
padding10	mmu.h	/^  ushort padding10;$/;"	m	struct:taskstate
padding2	mmu.h	/^  ushort padding2;$/;"	m	struct:taskstate
padding3	mmu.h	/^  ushort padding3;$/;"	m	struct:taskstate
padding4	mmu.h	/^  ushort padding4;$/;"	m	struct:taskstate
padding5	mmu.h	/^  ushort padding5;$/;"	m	struct:taskstate
padding6	mmu.h	/^  ushort padding6;$/;"	m	struct:taskstate
padding7	mmu.h	/^  ushort padding7;$/;"	m	struct:taskstate
padding8	mmu.h	/^  ushort padding8;$/;"	m	struct:taskstate
padding9	mmu.h	/^  ushort padding9;$/;"	m	struct:taskstate
paddr	elf.h	/^  uint64 paddr;$/;"	m	struct:proghdr
panic	console.c	/^panic(char *s)$/;"	f
panic	sh.c	/^panic(char *s)$/;"	f
panicked	console.c	/^static int panicked = 0;$/;"	v	file:
panicked	kernel.asm	/^  panicked = 1; \/\/ freeze other CPU$/;"	d
parent	proc.h	/^  struct proc *parent;         \/\/ Parent process$/;"	m	struct:proc	typeref:struct:proc::proc
parseblock	sh.c	/^parseblock(char **ps, char *es)$/;"	f
parsecmd	sh.c	/^parsecmd(char *s)$/;"	f
parseexec	sh.c	/^parseexec(char **ps, char *es)$/;"	f
parseline	sh.c	/^parseline(char **ps, char *es)$/;"	f
parsepipe	sh.c	/^parsepipe(char **ps, char *es)$/;"	f
parseredirs	sh.c	/^parseredirs(struct cmd *cmd, char **ps, char *es)$/;"	f
pattern	grep.asm	/^  pattern = argv[1];$/;"	d
pcmd	sh.asm	/^    pcmd = (struct pipecmd*)cmd;$/;"	d
pcs	spinlock.h	/^  addr_t pcs[10];      \/\/ The call stack (an array of program counters)$/;"	m	struct:spinlock
pd	kernel.asm	/^          pd = (pde_t*)P2V(PTE_ADDR(pdp[j]));$/;"	d
pd	kernel.asm	/^    pd = (pde_t*)P2V(PTE_ADDR(*pdpe));$/;"	d
pde	kernel.asm	/^  pde = &pd[PDX(va)]; $/;"	d
pde_t	types.h	/^typedef addr_t pde_t;$/;"	t
pdp	kernel.asm	/^      pdp = (pdpe_t*)P2V(PTE_ADDR(pml4[i]));$/;"	d
pdp	kernel.asm	/^    pdp = (pdpe_t*)P2V(PTE_ADDR(*pml4e));  $/;"	d
pdpe	kernel.asm	/^  pdpe = &pdp[PDPX(va)];  $/;"	d
pdpe_t	types.h	/^typedef addr_t pdpe_t;$/;"	t
peek	sh.c	/^peek(char **ps, char *es, char *toks)$/;"	f
pgdir	kernel.asm	/^  pgdir = 0;$/;"	d
pgdir	proc.h	/^  pde_t* pgdir;                \/\/ Page table$/;"	m	struct:proc
pgtab	kernel.asm	/^    pgtab = (pte_t*)P2V(PTE_ADDR(*pde));$/;"	d
phentsize	elf.h	/^  ushort phentsize;$/;"	m	struct:elfhdr
phnum	elf.h	/^  ushort phnum;$/;"	m	struct:elfhdr
phoff	elf.h	/^  addr_t phoff;$/;"	m	struct:elfhdr
physaddr	mp.h	/^  uint32 physaddr;               \/\/ 32-bit phys addr of MP config table$/;"	m	struct:mp
pid	forktest.asm	/^    pid = fork();$/;"	d
pid	init.asm	/^    pid = fork();$/;"	d
pid	kernel.asm	/^        pid = p->pid;$/;"	d
pid	kernel.asm	/^  pid = np->pid;$/;"	d
pid	proc.h	/^  int pid;                     \/\/ Process ID$/;"	m	struct:proc
pid	sh.asm	/^  pid = fork();$/;"	d
pid	sleeplock.h	/^  int pid;           \/\/ Process holding lock$/;"	m	struct:sleeplock
pid	usertests.asm	/^    pid = fork();$/;"	d
pid	usertests.asm	/^  pid = fork();$/;"	d
pid1	usertests.asm	/^  pid1 = fork();$/;"	d
pid2	usertests.asm	/^  pid2 = fork();$/;"	d
pid3	usertests.asm	/^  pid3 = fork();$/;"	d
pinit	proc.c	/^pinit(void)$/;"	f
pipe	file.h	/^  struct pipe *pipe;$/;"	m	struct:file	typeref:struct:file::pipe
pipe	pipe.c	/^struct pipe {$/;"	s	file:
pipe1	usertests.c	/^pipe1(void)$/;"	f
pipealloc	pipe.c	/^pipealloc(struct file **f0, struct file **f1)$/;"	f
pipeclose	pipe.c	/^pipeclose(struct pipe *p, int writable)$/;"	f
pipecmd	sh.c	/^pipecmd(struct cmd *left, struct cmd *right)$/;"	f
pipecmd	sh.c	/^struct pipecmd {$/;"	s	file:
piperead	pipe.c	/^piperead(struct pipe *p, char *addr, int n)$/;"	f
pipewrite	pipe.c	/^pipewrite(struct pipe *p, char *addr, int n)$/;"	f
pml4e	kernel.asm	/^  pml4e = &pml4[PMX(va)];$/;"	d
pml4e_t	types.h	/^typedef addr_t pml4e_t;$/;"	t
popcli	spinlock.c	/^popcli(void)$/;"	f
port	usertests.asm	/^    port = RTC_ADDR;$/;"	d
port	usertests.asm	/^    port = RTC_DATA;$/;"	d
pos	kernel.asm	/^  pos = inb(CRTPORT+1) << 8;$/;"	d
ppid	usertests.asm	/^    ppid = getpid();$/;"	d
ppid	usertests.asm	/^  ppid = getpid();$/;"	d
preempt	usertests.c	/^preempt(void)$/;"	f
prev	buf.h	/^  struct buf *prev; \/\/ LRU cache list$/;"	m	struct:buf	typeref:struct:buf::buf
printf	forktest.c	/^printf(int fd, char *s, ...)$/;"	f
printf	printf.c	/^printf(int fd, char *fmt, ...)$/;"	f
printint	console.c	/^printint(int xx, int base, int sign)$/;"	f	file:
printint	printf.c	/^printint(int fd, int xx, int base, int sgn)$/;"	f	file:
printptr	console.c	/^printptr(addr_t x) {$/;"	f	file:
proc	kernel.asm	/^      proc = (struct mpproc*)p;$/;"	d
proc	kernel.asm	/^      proc = 0;$/;"	d
proc	kernel.asm	/^      proc = p;$/;"	d
proc	kernel.asm	/^  proc = 0;$/;"	d
proc	proc.c	/^  struct proc proc[NPROC];$/;"	m	struct:__anon1	typeref:struct:__anon1::proc	file:
proc	proc.h	/^struct proc {$/;"	s
proc	vm.c	/^__thread struct proc *proc;$/;"	v	typeref:struct:proc
procdump	proc.c	/^procdump(void)$/;"	f
procstate	proc.h	/^enum procstate { UNUSED, EMBRYO, SLEEPING, RUNNABLE, RUNNING, ZOMBIE };$/;"	g
product	mp.h	/^  uchar product[20];            \/\/ product id$/;"	m	struct:mpconf
proghdr	elf.h	/^struct proghdr {$/;"	s
pt	kernel.asm	/^              pt = (pde_t*)P2V(PTE_ADDR(pd[k]));$/;"	d
ptable	proc.c	/^} ptable;$/;"	v	typeref:struct:__anon1
pte	kernel.asm	/^    pte = walkpgdir(pgdir, (char*)a, 0);$/;"	d
pte	kernel.asm	/^  pte = walkpgdir(pgdir, uva, 0);$/;"	d
pte_t	mmu.h	/^typedef addr_t pte_t;$/;"	t
ptr	umalloc.c	/^    union header *ptr;$/;"	m	struct:header::__anon9	typeref:union:header::__anon9::header	file:
pushcli	spinlock.c	/^pushcli(void)$/;"	f
putc	printf.c	/^putc(int fd, char c)$/;"	f	file:
qnext	buf.h	/^  struct buf *qnext; \/\/ disk queue$/;"	m	struct:buf	typeref:struct:buf::buf
r	cat.asm	/^  r = fstat(fd, st);$/;"	d
r	console.c	/^  uint r;  \/\/ Read index$/;"	m	struct:__anon8	file:
r	divide.asm	/^  r = fstat(fd, st);$/;"	d
r	echo.asm	/^  r = fstat(fd, st);$/;"	d
r	forktest.asm	/^  r = fstat(fd, st);$/;"	d
r	grep.asm	/^  r = fstat(fd, st);$/;"	d
r	init.asm	/^  r = fstat(fd, st);$/;"	d
r	kernel.asm	/^  r = (struct run*)v;$/;"	d
r	kernel.asm	/^  r = kmem.freelist;$/;"	d
r	kernel.asm	/^  r = lk->locked;$/;"	d
r	kill.asm	/^  r = fstat(fd, st);$/;"	d
r	ln.asm	/^  r = fstat(fd, st);$/;"	d
r	ls.asm	/^  r = fstat(fd, st);$/;"	d
r	mkdir.asm	/^  r = fstat(fd, st);$/;"	d
r	rm.asm	/^  r = fstat(fd, st);$/;"	d
r	sh.asm	/^  r = fstat(fd, st);$/;"	d
r	stressfs.asm	/^  r = fstat(fd, st);$/;"	d
r	usertests.asm	/^  r = fstat(fd, st);$/;"	d
r	wc.asm	/^  r = fstat(fd, st);$/;"	d
r	zombie.asm	/^  r = fstat(fd, st);$/;"	d
r10	x86.h	/^   uint64 r10;$/;"	m	struct:trapframe
r11	proc.h	/^  addr_t r11;$/;"	m	struct:context
r11	x86.h	/^   uint64 r11;$/;"	m	struct:trapframe
r12	proc.h	/^  addr_t r12;$/;"	m	struct:context
r12	x86.h	/^   uint64 r12;$/;"	m	struct:trapframe
r13	proc.h	/^  addr_t r13;$/;"	m	struct:context
r13	x86.h	/^   uint64 r13;$/;"	m	struct:trapframe
r14	proc.h	/^  addr_t r14;$/;"	m	struct:context
r14	x86.h	/^   uint64 r14;$/;"	m	struct:trapframe
r15	proc.h	/^  addr_t r15;$/;"	m	struct:context
r15	x86.h	/^   uint64 r15;$/;"	m	struct:trapframe
r8	x86.h	/^   uint64 r8;$/;"	m	struct:trapframe
r9	x86.h	/^   uint64 r9;$/;"	m	struct:trapframe
rand	usertests.c	/^rand()$/;"	f
randstate	usertests.asm	/^  randstate = randstate * 1664525 + 1013904223;$/;"	d
randstate	usertests.c	/^unsigned long randstate = 1;$/;"	v
rax	x86.h	/^   uint64 rax;      $/;"	m	struct:trapframe
rbp	x86.h	/^   uint64 rbp;$/;"	m	struct:trapframe
rbx	proc.h	/^  addr_t rbx;$/;"	m	struct:context
rbx	x86.h	/^   uint64 rbx;$/;"	m	struct:trapframe
rcmd	sh.asm	/^    rcmd = (struct redircmd*)cmd;$/;"	d
rcr2	x86.h	/^rcr2(void)$/;"	f
rcx	x86.h	/^   uint64 rcx;$/;"	m	struct:trapframe
rdi	x86.h	/^   uint64 rdi;$/;"	m	struct:trapframe
rdx	x86.h	/^   uint64 rdx;$/;"	m	struct:trapframe
re1	divide.asm	/^    re1 = x\/y;$/;"	d
re2	divide.asm	/^    re2 = (10*x\/y)%10;$/;"	d
re3	divide.asm	/^    re3 = (100*x\/y)%10;$/;"	d
read	file.h	/^  int (*read)(struct inode*, char*, int);$/;"	m	struct:devsw
read_head	log.c	/^read_head(void)$/;"	f	file:
readable	file.h	/^  char readable;$/;"	m	struct:file
readeflags	x86.h	/^readeflags(void)$/;"	f
readi	fs.c	/^readi(struct inode *ip, char *dst, uint off, uint n)$/;"	f
readopen	pipe.c	/^  int readopen;   \/\/ read fd is still open$/;"	m	struct:pipe	file:
readsb	fs.c	/^readsb(int dev, struct superblock *sb)$/;"	f
readsect	bootmain.c	/^readsect(void *dst, uint offset)$/;"	f
readseg	bootmain.c	/^readseg(uchar* pa, uint count, uint offset)$/;"	f
recover_from_log	log.c	/^recover_from_log(void)$/;"	f	file:
redircmd	sh.c	/^redircmd(struct cmd *subcmd, char *file, char *efile, int mode, int fd)$/;"	f
redircmd	sh.c	/^struct redircmd {$/;"	s	file:
ref	file.h	/^  int ref;            \/\/ Reference count$/;"	m	struct:inode
ref	file.h	/^  int ref; \/\/ reference count$/;"	m	struct:file
refcnt	buf.h	/^  uint refcnt;$/;"	m	struct:buf
reg	ioapic.c	/^  uint reg;$/;"	m	struct:ioapic	file:
release	spinlock.c	/^release(struct spinlock *lk)$/;"	f
releasesleep	sleeplock.c	/^releasesleep(struct sleeplock *lk)$/;"	f
reserved	mp.h	/^  uchar reserved;$/;"	m	struct:mpconf
reserved	mp.h	/^  uchar reserved[3];$/;"	m	struct:mp
reserved	mp.h	/^  uchar reserved[8];$/;"	m	struct:mpproc
ret	sh.asm	/^      ret = '+';$/;"	d
ret	sh.asm	/^    ret = 'a';$/;"	d
ret	sh.asm	/^    ret = parseredirs(ret, ps, es);$/;"	d
ret	sh.asm	/^  ret = *s;$/;"	d
ret	sh.asm	/^  ret = execcmd();$/;"	d
ret	sh.asm	/^  ret = parseredirs(ret, ps, es);$/;"	d
return	kernel.asm	/^  return d;$/;"	d
rflags	x86.h	/^   uint64 rflags;  $/;"	m	struct:trapframe
right	sh.c	/^  struct cmd *right;$/;"	m	struct:listcmd	typeref:struct:listcmd::cmd	file:
right	sh.c	/^  struct cmd *right;$/;"	m	struct:pipecmd	typeref:struct:pipecmd::cmd	file:
rinode	mkfs.c	/^rinode(uint inum, struct dinode *ip)$/;"	f
rip	x86.h	/^   uint64 rip;     $/;"	m	struct:trapframe
rmdot	usertests.c	/^rmdot(void)$/;"	f
rsect	mkfs.c	/^rsect(uint sec, void *buf)$/;"	f
rsi	x86.h	/^   uint64 rsi;$/;"	m	struct:trapframe
rsp	x86.h	/^   uint64 rsp;     $/;"	m	struct:trapframe
rsv1	mmu.h	/^  uint rsv1 : 1;       \/\/ 64-bit segment$/;"	m	struct:segdesc
rsv1	mmu.h	/^  uint rsv1 : 3;        \/\/ reserved(should be zero I guess)$/;"	m	struct:gatedesc
rsv2	mmu.h	/^  uint32 rsv2;$/;"	m	struct:gatedesc
rtcdate	date.h	/^struct rtcdate {$/;"	s
run	kalloc.c	/^struct run {$/;"	s	file:
runcmd	sh.c	/^runcmd(struct cmd *cmd)$/;"	f
s	cat.asm	/^          s = "(null)";$/;"	d
s	cat.asm	/^        s = va_arg(ap, char*);$/;"	d
s	divide.asm	/^          s = "(null)";$/;"	d
s	divide.asm	/^        s = va_arg(ap, char*);$/;"	d
s	echo.asm	/^          s = "(null)";$/;"	d
s	echo.asm	/^        s = va_arg(ap, char*);$/;"	d
s	grep.asm	/^          s = "(null)";$/;"	d
s	grep.asm	/^        s = va_arg(ap, char*);$/;"	d
s	init.asm	/^          s = "(null)";$/;"	d
s	init.asm	/^        s = va_arg(ap, char*);$/;"	d
s	kernel.asm	/^        s = "(null)";$/;"	d
s	kernel.asm	/^  s = path;$/;"	d
s	kernel.asm	/^  s = src;$/;"	d
s	kill.asm	/^          s = "(null)";$/;"	d
s	kill.asm	/^        s = va_arg(ap, char*);$/;"	d
s	ln.asm	/^          s = "(null)";$/;"	d
s	ln.asm	/^        s = va_arg(ap, char*);$/;"	d
s	ls.asm	/^          s = "(null)";$/;"	d
s	ls.asm	/^        s = va_arg(ap, char*);$/;"	d
s	mkdir.asm	/^          s = "(null)";$/;"	d
s	mkdir.asm	/^        s = va_arg(ap, char*);$/;"	d
s	mmu.h	/^  uint s : 1;           \/\/ must be 0 (system)$/;"	m	struct:gatedesc
s	mmu.h	/^  uint s : 1;          \/\/ 0 = system, 1 = application$/;"	m	struct:segdesc
s	rm.asm	/^          s = "(null)";$/;"	d
s	rm.asm	/^        s = va_arg(ap, char*);$/;"	d
s	sh.asm	/^          s = "(null)";$/;"	d
s	sh.asm	/^        s = va_arg(ap, char*);$/;"	d
s	sh.asm	/^  s = *ps;$/;"	d
s	stressfs.asm	/^          s = "(null)";$/;"	d
s	stressfs.asm	/^        s = va_arg(ap, char*);$/;"	d
s	umalloc.c	/^  } s;$/;"	m	union:header	typeref:struct:header::__anon9	file:
s	usertests.asm	/^          s = "(null)";$/;"	d
s	usertests.asm	/^        s = va_arg(ap, char*);$/;"	d
s	wc.asm	/^          s = "(null)";$/;"	d
s	wc.asm	/^        s = va_arg(ap, char*);$/;"	d
s	zombie.asm	/^          s = "(null)";$/;"	d
s	zombie.asm	/^        s = va_arg(ap, char*);$/;"	d
s1	kernel.asm	/^  s1 = v1;$/;"	d
s2	kernel.asm	/^  s2 = v2;$/;"	d
safestrcpy	string.c	/^safestrcpy(char *s, const char *t, int n)$/;"	f
sb	fs.c	/^struct superblock sb; $/;"	v	typeref:struct:superblock
sb	kernel.asm	/^  sb = cmos_read(CMOS_STATB);$/;"	d
sb	mkfs.c	/^struct superblock sb;$/;"	v	typeref:struct:superblock
sbrktest	usertests.c	/^sbrktest(void)$/;"	f
sched	proc.c	/^sched(void)$/;"	f
scheduler	proc.c	/^scheduler(void)$/;"	f
scheduler	proc.h	/^  struct context *scheduler;   \/\/ swtch() here to enter scheduler$/;"	m	struct:cpu	typeref:struct:cpu::context
second	date.h	/^  uint second;$/;"	m	struct:rtcdate
segdesc	mmu.h	/^struct segdesc {$/;"	s
seginit	vm.c	/^seginit(void)$/;"	f
seq	usertests.asm	/^  seq = 0;$/;"	d
setupkvm	vm.c	/^setupkvm(void)$/;"	f
sharedfd	usertests.c	/^sharedfd(void)$/;"	f
shentsize	elf.h	/^  ushort shentsize;$/;"	m	struct:elfhdr
shiftcode	kbd.h	/^static uchar shiftcode[256] =$/;"	v
shiftmap	kbd.h	/^static uchar shiftmap[256] =$/;"	v
shnum	elf.h	/^  ushort shnum;$/;"	m	struct:elfhdr
shoff	elf.h	/^  addr_t shoff;$/;"	m	struct:elfhdr
shstrndx	elf.h	/^  ushort shstrndx;$/;"	m	struct:elfhdr
signature	mp.h	/^  uchar signature[4];           \/\/ "PCMP"$/;"	m	struct:mpconf
signature	mp.h	/^  uchar signature[4];           \/\/ "_MP_"$/;"	m	struct:mp
signature	mp.h	/^  uchar signature[4];           \/\/ CPU signature$/;"	m	struct:mpproc
size	file.h	/^  uint size;$/;"	m	struct:inode
size	fs.h	/^  uint size;            \/\/ Size of file (bytes)$/;"	m	struct:dinode
size	fs.h	/^  uint size;         \/\/ Size of file system image (blocks)$/;"	m	struct:superblock
size	log.c	/^  int size;$/;"	m	struct:log	file:
size	stat.h	/^  uint size;   \/\/ Size of file in bytes$/;"	m	struct:stat
size	umalloc.c	/^    uint size;$/;"	m	struct:header::__anon9	file:
skipelem	fs.c	/^skipelem(char *path, char *name)$/;"	f	file:
sleep	proc.c	/^sleep(void *chan, struct spinlock *lk)$/;"	f
sleeplock	sleeplock.h	/^struct sleeplock {$/;"	s
sp	kernel.asm	/^    sp = (sp - (strlen(argv[argc]) + 1)) & ~(sizeof(addr_t)-1);$/;"	d
sp	kernel.asm	/^  sp = p->kstack + KSTACKSIZE;$/;"	d
sp	kernel.asm	/^  sp = sz;$/;"	d
specrev	mp.h	/^  uchar specrev;                \/\/ [14]$/;"	m	struct:mp
spin	bootasm.S	/^spin:$/;"	l
spin	entryother.S	/^spin:$/;"	l
spin	entryother.asm	/^spin:$/;"	l
spinlock	spinlock.h	/^struct spinlock {$/;"	s
src	cat.asm	/^  src = vsrc;$/;"	d
src	divide.asm	/^  src = vsrc;$/;"	d
src	echo.asm	/^  src = vsrc;$/;"	d
src	forktest.asm	/^  src = vsrc;$/;"	d
src	grep.asm	/^  src = vsrc;$/;"	d
src	init.asm	/^  src = vsrc;$/;"	d
src	kill.asm	/^  src = vsrc;$/;"	d
src	ln.asm	/^  src = vsrc;$/;"	d
src	ls.asm	/^  src = vsrc;$/;"	d
src	mkdir.asm	/^  src = vsrc;$/;"	d
src	rm.asm	/^  src = vsrc;$/;"	d
src	sh.asm	/^  src = vsrc;$/;"	d
src	stressfs.asm	/^  src = vsrc;$/;"	d
src	usertests.asm	/^  src = vsrc;$/;"	d
src	wc.asm	/^  src = vsrc;$/;"	d
src	zombie.asm	/^  src = vsrc;$/;"	d
ss	mmu.h	/^  ushort ss;$/;"	m	struct:taskstate
ss	x86.h	/^   uint64 ss;      $/;"	m	struct:trapframe
ss0	mmu.h	/^  ushort ss0;        \/\/   after an increase in privilege level$/;"	m	struct:taskstate
ss1	mmu.h	/^  ushort ss1;$/;"	m	struct:taskstate
ss2	mmu.h	/^  ushort ss2;$/;"	m	struct:taskstate
st	kernel.asm	/^  st = inb(KBSTATP);$/;"	d
stack	kernel.asm	/^    stack = kalloc();$/;"	d
start	bootasm.S	/^start:$/;"	l
start	entryother.S	/^start:$/;"	l
start	entryother.asm	/^start:$/;"	l
start	initcode.S	/^start:$/;"	l
start	initcode.asm	/^start:$/;"	l
start	log.c	/^  int start;$/;"	m	struct:log	file:
start32	bootasm.S	/^start32:$/;"	l
start32	entryother.S	/^start32:$/;"	l
start32	entryother.asm	/^start32:$/;"	l
started	proc.h	/^  volatile uint started;       \/\/ Has the CPU started?$/;"	m	struct:cpu
startothers	main.c	/^startothers(void)$/;"	f	file:
stat	mkfs.c	8;"	d	file:
stat	stat.h	/^struct stat {$/;"	s
stat	ulib.c	/^stat(char *n, struct stat *st)$/;"	f
state	cat.asm	/^        state = '%';$/;"	d
state	cat.asm	/^      state = 0;$/;"	d
state	cat.asm	/^  state = 0;$/;"	d
state	divide.asm	/^        state = '%';$/;"	d
state	divide.asm	/^      state = 0;$/;"	d
state	divide.asm	/^  state = 0;$/;"	d
state	echo.asm	/^        state = '%';$/;"	d
state	echo.asm	/^      state = 0;$/;"	d
state	echo.asm	/^  state = 0;$/;"	d
state	grep.asm	/^        state = '%';$/;"	d
state	grep.asm	/^      state = 0;$/;"	d
state	grep.asm	/^  state = 0;$/;"	d
state	init.asm	/^        state = '%';$/;"	d
state	init.asm	/^      state = 0;$/;"	d
state	init.asm	/^  state = 0;$/;"	d
state	kernel.asm	/^      state = "???";$/;"	d
state	kernel.asm	/^      state = states[p->state];$/;"	d
state	kill.asm	/^        state = '%';$/;"	d
state	kill.asm	/^      state = 0;$/;"	d
state	kill.asm	/^  state = 0;$/;"	d
state	ln.asm	/^        state = '%';$/;"	d
state	ln.asm	/^      state = 0;$/;"	d
state	ln.asm	/^  state = 0;$/;"	d
state	ls.asm	/^        state = '%';$/;"	d
state	ls.asm	/^      state = 0;$/;"	d
state	ls.asm	/^  state = 0;$/;"	d
state	mkdir.asm	/^        state = '%';$/;"	d
state	mkdir.asm	/^      state = 0;$/;"	d
state	mkdir.asm	/^  state = 0;$/;"	d
state	proc.h	/^  enum procstate state;        \/\/ Process state$/;"	m	struct:proc	typeref:enum:proc::procstate
state	rm.asm	/^        state = '%';$/;"	d
state	rm.asm	/^      state = 0;$/;"	d
state	rm.asm	/^  state = 0;$/;"	d
state	sh.asm	/^        state = '%';$/;"	d
state	sh.asm	/^      state = 0;$/;"	d
state	sh.asm	/^  state = 0;$/;"	d
state	stressfs.asm	/^        state = '%';$/;"	d
state	stressfs.asm	/^      state = 0;$/;"	d
state	stressfs.asm	/^  state = 0;$/;"	d
state	usertests.asm	/^        state = '%';$/;"	d
state	usertests.asm	/^      state = 0;$/;"	d
state	usertests.asm	/^  state = 0;$/;"	d
state	wc.asm	/^        state = '%';$/;"	d
state	wc.asm	/^      state = 0;$/;"	d
state	wc.asm	/^  state = 0;$/;"	d
state	zombie.asm	/^        state = '%';$/;"	d
state	zombie.asm	/^      state = 0;$/;"	d
state	zombie.asm	/^  state = 0;$/;"	d
stati	fs.c	/^stati(struct inode *ip, struct stat *st)$/;"	f
static	cat.asm	/^static Header *freep;$/;"	l
static	cat.asm	/^static Header base;$/;"	l
static	cat.asm	/^static Header*$/;"	l
static	cat.asm	/^static inline void$/;"	l
static	cat.asm	/^static void$/;"	l
static	divide.asm	/^static Header *freep;$/;"	l
static	divide.asm	/^static Header base;$/;"	l
static	divide.asm	/^static Header*$/;"	l
static	divide.asm	/^static inline void$/;"	l
static	divide.asm	/^static void$/;"	l
static	echo.asm	/^static Header *freep;$/;"	l
static	echo.asm	/^static Header base;$/;"	l
static	echo.asm	/^static Header*$/;"	l
static	echo.asm	/^static inline void$/;"	l
static	echo.asm	/^static void$/;"	l
static	forktest.asm	/^static inline void$/;"	l
static	grep.asm	/^static Header *freep;$/;"	l
static	grep.asm	/^static Header base;$/;"	l
static	grep.asm	/^static Header*$/;"	l
static	grep.asm	/^static inline void$/;"	l
static	grep.asm	/^static void$/;"	l
static	init.asm	/^static Header *freep;$/;"	l
static	init.asm	/^static Header base;$/;"	l
static	init.asm	/^static Header*$/;"	l
static	init.asm	/^static inline void$/;"	l
static	init.asm	/^static void$/;"	l
static	kernel.asm	/^static addr_t$/;"	l
static	kernel.asm	/^static char digits[] = "0123456789abcdef";$/;"	l
static	kernel.asm	/^static char*$/;"	l
static	kernel.asm	/^static inline addr_t v2p(void *a) {$/;"	l
static	kernel.asm	/^static inline addr_t$/;"	l
static	kernel.asm	/^static inline uchar$/;"	l
static	kernel.asm	/^static inline uint$/;"	l
static	kernel.asm	/^static inline void$/;"	l
static	kernel.asm	/^static int uart;    \/\/ is there a uart?$/;"	l
static	kernel.asm	/^static int$/;"	l
static	kernel.asm	/^static pde_t *kpdpt;$/;"	l
static	kernel.asm	/^static pde_t *kpml4;$/;"	l
static	kernel.asm	/^static pte_t *$/;"	l
static	kernel.asm	/^static struct buf*$/;"	t
static	kernel.asm	/^static struct inode*$/;"	t
static	kernel.asm	/^static struct mp*$/;"	t
static	kernel.asm	/^static struct mpconf*$/;"	t
static	kernel.asm	/^static struct proc*$/;"	t
static	kernel.asm	/^static uchar$/;"	l
static	kernel.asm	/^static uint cmos_read(uint reg)$/;"	l
static	kernel.asm	/^static uint$/;"	l
static	kernel.asm	/^static ushort *crt = (ushort*)P2V(0xb8000);  \/\/ CGA memory$/;"	l
static	kernel.asm	/^static void $/;"	l
static	kernel.asm	/^static void commit();$/;"	l
static	kernel.asm	/^static void fill_rtcdate(struct rtcdate *r)$/;"	l
static	kernel.asm	/^static void idestart(struct buf*);$/;"	l
static	kernel.asm	/^static void recover_from_log(void);$/;"	l
static	kernel.asm	/^static void$/;"	l
static	kill.asm	/^static Header *freep;$/;"	l
static	kill.asm	/^static Header base;$/;"	l
static	kill.asm	/^static Header*$/;"	l
static	kill.asm	/^static inline void$/;"	l
static	kill.asm	/^static void$/;"	l
static	ln.asm	/^static Header *freep;$/;"	l
static	ln.asm	/^static Header base;$/;"	l
static	ln.asm	/^static Header*$/;"	l
static	ln.asm	/^static inline void$/;"	l
static	ln.asm	/^static void$/;"	l
static	ls.asm	/^static Header *freep;$/;"	l
static	ls.asm	/^static Header base;$/;"	l
static	ls.asm	/^static Header*$/;"	l
static	ls.asm	/^static inline void$/;"	l
static	ls.asm	/^static void$/;"	l
static	mkdir.asm	/^static Header *freep;$/;"	l
static	mkdir.asm	/^static Header base;$/;"	l
static	mkdir.asm	/^static Header*$/;"	l
static	mkdir.asm	/^static inline void$/;"	l
static	mkdir.asm	/^static void$/;"	l
static	rm.asm	/^static Header *freep;$/;"	l
static	rm.asm	/^static Header base;$/;"	l
static	rm.asm	/^static Header*$/;"	l
static	rm.asm	/^static inline void$/;"	l
static	rm.asm	/^static void$/;"	l
static	sh.asm	/^static Header *freep;$/;"	l
static	sh.asm	/^static Header base;$/;"	l
static	sh.asm	/^static Header*$/;"	l
static	sh.asm	/^static inline void$/;"	l
static	sh.asm	/^static void$/;"	l
static	stressfs.asm	/^static Header *freep;$/;"	l
static	stressfs.asm	/^static Header base;$/;"	l
static	stressfs.asm	/^static Header*$/;"	l
static	stressfs.asm	/^static inline void$/;"	l
static	stressfs.asm	/^static void$/;"	l
static	usertests.asm	/^static Header *freep;$/;"	l
static	usertests.asm	/^static Header base;$/;"	l
static	usertests.asm	/^static Header*$/;"	l
static	usertests.asm	/^static inline void$/;"	l
static	usertests.asm	/^static void$/;"	l
static	wc.asm	/^static Header *freep;$/;"	l
static	wc.asm	/^static Header base;$/;"	l
static	wc.asm	/^static Header*$/;"	l
static	wc.asm	/^static inline void$/;"	l
static	wc.asm	/^static void$/;"	l
static	zombie.asm	/^static Header *freep;$/;"	l
static	zombie.asm	/^static Header base;$/;"	l
static	zombie.asm	/^static Header*$/;"	l
static	zombie.asm	/^static inline void$/;"	l
static	zombie.asm	/^static void$/;"	l
static_assert	mkfs.c	15;"	d	file:
stdout	usertests.c	/^int stdout = 1;$/;"	v
sti	x86.h	/^sti(void)$/;"	f
stosb	x86.h	/^stosb(void *addr, int data, int cnt)$/;"	f
stosl	x86.h	/^stosl(void *addr, int data, int cnt)$/;"	f
strchr	ulib.c	/^strchr(const char *s, char c)$/;"	f
strcmp	ulib.c	/^strcmp(const char *p, const char *q)$/;"	f
strcpy	ulib.c	/^strcpy(char *s, char *t)$/;"	f
strlen	string.c	/^strlen(const char *s)$/;"	f
strlen	ulib.c	/^strlen(char *s)$/;"	f
strncmp	string.c	/^strncmp(const char *p, const char *q, uint n)$/;"	f
strncpy	string.c	/^strncpy(char *s, const char *t, int n)$/;"	f
struct	kernel.asm	/^  struct proc *np;$/;"	l
struct	kernel.asm	/^  struct proc *p;$/;"	l
subdir	usertests.c	/^subdir(void)$/;"	f
sum	kernel.asm	/^  sum = 0;$/;"	d
sum	mp.c	/^sum(uchar *addr, int len)$/;"	f	file:
superblock	fs.h	/^struct superblock {$/;"	s
switchkvm	vm.c	/^switchkvm(void)$/;"	f
switchuvm	vm.c	/^switchuvm(struct proc *p)$/;"	f
swtch	kernel.asm	/^swtch:$/;"	l
swtch	swtch.S	/^swtch:$/;"	l
symbols	sh.c	/^char symbols[] = "<|>&;()";$/;"	v
sys_chdir	sysfile.c	/^sys_chdir(void)$/;"	f
sys_close	sysfile.c	/^sys_close(void)$/;"	f
sys_dup	sysfile.c	/^sys_dup(void)$/;"	f
sys_exec	sysfile.c	/^sys_exec(void)$/;"	f
sys_exit	sysproc.c	/^sys_exit(void)$/;"	f
sys_fork	sysproc.c	/^sys_fork(void)$/;"	f
sys_fstat	sysfile.c	/^sys_fstat(void)$/;"	f
sys_getpid	sysproc.c	/^sys_getpid(void)$/;"	f
sys_kill	sysproc.c	/^sys_kill(void)$/;"	f
sys_link	sysfile.c	/^sys_link(void)$/;"	f
sys_mkdir	sysfile.c	/^sys_mkdir(void)$/;"	f
sys_mknod	sysfile.c	/^sys_mknod(void)$/;"	f
sys_open	sysfile.c	/^sys_open(void)$/;"	f
sys_pipe	sysfile.c	/^sys_pipe(void)$/;"	f
sys_read	sysfile.c	/^sys_read(void)$/;"	f
sys_sbrk	sysproc.c	/^sys_sbrk(void)$/;"	f
sys_sleep	sysproc.c	/^sys_sleep(void)$/;"	f
sys_unlink	sysfile.c	/^sys_unlink(void)$/;"	f
sys_uptime	sysproc.c	/^sys_uptime(void)$/;"	f
sys_wait	sysproc.c	/^sys_wait(void)$/;"	f
sys_write	sysfile.c	/^sys_write(void)$/;"	f
syscall	syscall.c	/^syscall(void)$/;"	f
syscall_entry	entry.S	/^syscall_entry:$/;"	l
syscall_trap	kernel.asm	/^syscall_trap:  # Build trap frame.$/;"	l
syscall_trap	trapasm.S	/^syscall_trap:  # Build trap frame.$/;"	l
syscall_trapret	kernel.asm	/^syscall_trapret:$/;"	l
syscall_trapret	trapasm.S	/^syscall_trapret:$/;"	l
syscallinit	vm.c	/^syscallinit(void)$/;"	f
syscalls	syscall.c	/^static addr_t (*syscalls[])(void) = {$/;"	v	file:
sz	kernel.asm	/^  sz = 0;$/;"	d
sz	kernel.asm	/^  sz = PGROUNDUP(sz);$/;"	d
sz	kernel.asm	/^  sz = proc->sz;$/;"	d
sz	proc.h	/^  addr_t sz;                     \/\/ Size of process memory (bytes)$/;"	m	struct:proc
t	mmu.h	/^  ushort t;          \/\/ Trap on task switch$/;"	m	struct:taskstate
target	kernel.asm	/^  target = n;$/;"	d
taskstate	mmu.h	/^struct taskstate {$/;"	s
tf	proc.h	/^  struct trapframe *tf;        \/\/ Trap frame for current syscall$/;"	m	struct:proc	typeref:struct:proc::trapframe
ticks	trap.c	/^uint ticks;$/;"	v
ticks0	kernel.asm	/^  ticks0 = ticks;$/;"	d
tickslock	trap.c	/^struct spinlock tickslock;$/;"	v	typeref:struct:spinlock
togglecode	kbd.h	/^static uchar togglecode[256] =$/;"	v
tok	sh.asm	/^    tok = gettoken(ps, es, 0, 0);$/;"	d
total	usertests.asm	/^    total = 0;$/;"	d
total	usertests.asm	/^  total = 0;$/;"	d
trap	trap.c	/^trap(struct trapframe *tf)$/;"	f
trapframe	x86.h	/^struct trapframe {$/;"	s
trapno	x86.h	/^   uint64 trapno;$/;"	m	struct:trapframe
trapret	kernel.asm	/^trapret:$/;"	l
trapret	trapasm.S	/^trapret:$/;"	l
ts	proc.h	/^  struct taskstate ts;         \/\/ Used by x86 to find stack for interrupt$/;"	m	struct:cpu	typeref:struct:cpu::taskstate
tss	kernel.asm	/^  tss = (uint*) (((char*) cpu->local) + 1024);$/;"	d
tss	kernel.asm	/^  tss = (uint*) (((char*) local) + 1024);$/;"	d
tss_set_rsp	vm.c	/^tss_set_rsp(uint *tss, uint n, uint64 rsp) {$/;"	f	file:
tvinit	trap.c	/^void tvinit(void) {$/;"	f
type	elf.h	/^  uint32 type;$/;"	m	struct:proghdr
type	elf.h	/^  ushort type;$/;"	m	struct:elfhdr
type	file.h	/^  enum { FD_NONE, FD_PIPE, FD_INODE } type;$/;"	m	struct:file	typeref:enum:file::__anon3
type	file.h	/^  short type;         \/\/ copy of disk inode$/;"	m	struct:inode
type	fs.h	/^  short type;           \/\/ File type$/;"	m	struct:dinode
type	mmu.h	/^  uint type : 4;        \/\/ type(STS_{TG,IG32,TG32})$/;"	m	struct:gatedesc
type	mmu.h	/^  uint type : 4;       \/\/ Segment type (see STS_ constants)$/;"	m	struct:segdesc
type	mp.h	/^  uchar type;                   \/\/ MP system config type$/;"	m	struct:mp
type	mp.h	/^  uchar type;                   \/\/ entry type (0)$/;"	m	struct:mpproc
type	mp.h	/^  uchar type;                   \/\/ entry type (2)$/;"	m	struct:mpioapic
type	sh.c	/^  int type;$/;"	m	struct:backcmd	file:
type	sh.c	/^  int type;$/;"	m	struct:cmd	file:
type	sh.c	/^  int type;$/;"	m	struct:execcmd	file:
type	sh.c	/^  int type;$/;"	m	struct:listcmd	file:
type	sh.c	/^  int type;$/;"	m	struct:pipecmd	file:
type	sh.c	/^  int type;$/;"	m	struct:redircmd	file:
type	stat.h	/^  short type;  \/\/ Type of file$/;"	m	struct:stat
uart	kernel.asm	/^  uart = 1;$/;"	d
uart	uart.c	/^static int uart;    \/\/ is there a uart?$/;"	v	file:
uartearlyinit	uart.c	/^uartearlyinit(void)$/;"	f
uartgetc	uart.c	/^uartgetc(void)$/;"	f	file:
uartinit	uart.c	/^uartinit(void)$/;"	f
uartintr	uart.c	/^uartintr(void)$/;"	f
uartputc	uart.c	/^uartputc(int c)$/;"	f
uchar	kernel.asm	/^uchar ioapicid;$/;"	l
uchar	types.h	/^typedef unsigned char  uchar;$/;"	t
uint	cat.asm	/^uint$/;"	l
uint	divide.asm	/^uint$/;"	l
uint	echo.asm	/^uint$/;"	l
uint	forktest.asm	/^uint$/;"	l
uint	grep.asm	/^uint$/;"	l
uint	init.asm	/^uint$/;"	l
uint	kernel.asm	/^uint ticks;$/;"	l
uint	kill.asm	/^uint$/;"	l
uint	ln.asm	/^uint$/;"	l
uint	ls.asm	/^uint$/;"	l
uint	mkdir.asm	/^uint$/;"	l
uint	rm.asm	/^uint$/;"	l
uint	sh.asm	/^uint$/;"	l
uint	stressfs.asm	/^uint$/;"	l
uint	types.h	/^typedef unsigned int   uint;$/;"	t
uint	usertests.asm	/^uint$/;"	l
uint	wc.asm	/^uint$/;"	l
uint	zombie.asm	/^uint$/;"	l
uint32	types.h	/^typedef unsigned int  uint32;$/;"	t
uint64	types.h	/^typedef unsigned long uint64;$/;"	t
uio	usertests.c	/^uio()$/;"	f
uninit	usertests.c	/^char uninit[10000];$/;"	v
unlinkread	usertests.c	/^unlinkread(void)$/;"	f
unsigned	usertests.asm	/^unsigned int$/;"	l
unsigned	usertests.asm	/^unsigned long randstate = 1;$/;"	l
use_lock	kalloc.c	/^  int use_lock;$/;"	m	struct:__anon6	file:
userinit	proc.c	/^userinit(void)$/;"	f
ushort	types.h	/^typedef unsigned short ushort;$/;"	t
uva2ka	vm.c	/^uva2ka(pde_t *pgdir, char *uva)$/;"	f
v2p	memlayout.h	/^static inline addr_t v2p(void *a) {$/;"	f
va	kernel.asm	/^    va = va0 + PGSIZE;$/;"	d
va0	kernel.asm	/^    va0 = (uint)PGROUNDDOWN(va);$/;"	d
vaddr	elf.h	/^  uint64 vaddr;$/;"	m	struct:proghdr
val	usertests.asm	/^    val = 0x09;  \/* year *\/$/;"	d
validateint	usertests.c	/^validateint(int *p)$/;"	f
validatetest	usertests.c	/^validatetest(void)$/;"	f
vector0	kernel.asm	/^vector0:$/;"	l
vector0	vectors.S	/^vector0:$/;"	l
vector1	kernel.asm	/^vector1:$/;"	l
vector1	vectors.S	/^vector1:$/;"	l
vector10	kernel.asm	/^vector10:$/;"	l
vector10	vectors.S	/^vector10:$/;"	l
vector100	kernel.asm	/^vector100:$/;"	l
vector100	vectors.S	/^vector100:$/;"	l
vector101	kernel.asm	/^vector101:$/;"	l
vector101	vectors.S	/^vector101:$/;"	l
vector102	kernel.asm	/^vector102:$/;"	l
vector102	vectors.S	/^vector102:$/;"	l
vector103	kernel.asm	/^vector103:$/;"	l
vector103	vectors.S	/^vector103:$/;"	l
vector104	kernel.asm	/^vector104:$/;"	l
vector104	vectors.S	/^vector104:$/;"	l
vector105	kernel.asm	/^vector105:$/;"	l
vector105	vectors.S	/^vector105:$/;"	l
vector106	kernel.asm	/^vector106:$/;"	l
vector106	vectors.S	/^vector106:$/;"	l
vector107	kernel.asm	/^vector107:$/;"	l
vector107	vectors.S	/^vector107:$/;"	l
vector108	kernel.asm	/^vector108:$/;"	l
vector108	vectors.S	/^vector108:$/;"	l
vector109	kernel.asm	/^vector109:$/;"	l
vector109	vectors.S	/^vector109:$/;"	l
vector11	kernel.asm	/^vector11:$/;"	l
vector11	vectors.S	/^vector11:$/;"	l
vector110	kernel.asm	/^vector110:$/;"	l
vector110	vectors.S	/^vector110:$/;"	l
vector111	kernel.asm	/^vector111:$/;"	l
vector111	vectors.S	/^vector111:$/;"	l
vector112	kernel.asm	/^vector112:$/;"	l
vector112	vectors.S	/^vector112:$/;"	l
vector113	kernel.asm	/^vector113:$/;"	l
vector113	vectors.S	/^vector113:$/;"	l
vector114	kernel.asm	/^vector114:$/;"	l
vector114	vectors.S	/^vector114:$/;"	l
vector115	kernel.asm	/^vector115:$/;"	l
vector115	vectors.S	/^vector115:$/;"	l
vector116	kernel.asm	/^vector116:$/;"	l
vector116	vectors.S	/^vector116:$/;"	l
vector117	kernel.asm	/^vector117:$/;"	l
vector117	vectors.S	/^vector117:$/;"	l
vector118	kernel.asm	/^vector118:$/;"	l
vector118	vectors.S	/^vector118:$/;"	l
vector119	kernel.asm	/^vector119:$/;"	l
vector119	vectors.S	/^vector119:$/;"	l
vector12	kernel.asm	/^vector12:$/;"	l
vector12	vectors.S	/^vector12:$/;"	l
vector120	kernel.asm	/^vector120:$/;"	l
vector120	vectors.S	/^vector120:$/;"	l
vector121	kernel.asm	/^vector121:$/;"	l
vector121	vectors.S	/^vector121:$/;"	l
vector122	kernel.asm	/^vector122:$/;"	l
vector122	vectors.S	/^vector122:$/;"	l
vector123	kernel.asm	/^vector123:$/;"	l
vector123	vectors.S	/^vector123:$/;"	l
vector124	kernel.asm	/^vector124:$/;"	l
vector124	vectors.S	/^vector124:$/;"	l
vector125	kernel.asm	/^vector125:$/;"	l
vector125	vectors.S	/^vector125:$/;"	l
vector126	kernel.asm	/^vector126:$/;"	l
vector126	vectors.S	/^vector126:$/;"	l
vector127	kernel.asm	/^vector127:$/;"	l
vector127	vectors.S	/^vector127:$/;"	l
vector128	kernel.asm	/^vector128:$/;"	l
vector128	vectors.S	/^vector128:$/;"	l
vector129	kernel.asm	/^vector129:$/;"	l
vector129	vectors.S	/^vector129:$/;"	l
vector13	kernel.asm	/^vector13:$/;"	l
vector13	vectors.S	/^vector13:$/;"	l
vector130	kernel.asm	/^vector130:$/;"	l
vector130	vectors.S	/^vector130:$/;"	l
vector131	kernel.asm	/^vector131:$/;"	l
vector131	vectors.S	/^vector131:$/;"	l
vector132	kernel.asm	/^vector132:$/;"	l
vector132	vectors.S	/^vector132:$/;"	l
vector133	kernel.asm	/^vector133:$/;"	l
vector133	vectors.S	/^vector133:$/;"	l
vector134	kernel.asm	/^vector134:$/;"	l
vector134	vectors.S	/^vector134:$/;"	l
vector135	kernel.asm	/^vector135:$/;"	l
vector135	vectors.S	/^vector135:$/;"	l
vector136	kernel.asm	/^vector136:$/;"	l
vector136	vectors.S	/^vector136:$/;"	l
vector137	kernel.asm	/^vector137:$/;"	l
vector137	vectors.S	/^vector137:$/;"	l
vector138	kernel.asm	/^vector138:$/;"	l
vector138	vectors.S	/^vector138:$/;"	l
vector139	kernel.asm	/^vector139:$/;"	l
vector139	vectors.S	/^vector139:$/;"	l
vector14	kernel.asm	/^vector14:$/;"	l
vector14	vectors.S	/^vector14:$/;"	l
vector140	kernel.asm	/^vector140:$/;"	l
vector140	vectors.S	/^vector140:$/;"	l
vector141	kernel.asm	/^vector141:$/;"	l
vector141	vectors.S	/^vector141:$/;"	l
vector142	kernel.asm	/^vector142:$/;"	l
vector142	vectors.S	/^vector142:$/;"	l
vector143	kernel.asm	/^vector143:$/;"	l
vector143	vectors.S	/^vector143:$/;"	l
vector144	kernel.asm	/^vector144:$/;"	l
vector144	vectors.S	/^vector144:$/;"	l
vector145	kernel.asm	/^vector145:$/;"	l
vector145	vectors.S	/^vector145:$/;"	l
vector146	kernel.asm	/^vector146:$/;"	l
vector146	vectors.S	/^vector146:$/;"	l
vector147	kernel.asm	/^vector147:$/;"	l
vector147	vectors.S	/^vector147:$/;"	l
vector148	kernel.asm	/^vector148:$/;"	l
vector148	vectors.S	/^vector148:$/;"	l
vector149	kernel.asm	/^vector149:$/;"	l
vector149	vectors.S	/^vector149:$/;"	l
vector15	kernel.asm	/^vector15:$/;"	l
vector15	vectors.S	/^vector15:$/;"	l
vector150	kernel.asm	/^vector150:$/;"	l
vector150	vectors.S	/^vector150:$/;"	l
vector151	kernel.asm	/^vector151:$/;"	l
vector151	vectors.S	/^vector151:$/;"	l
vector152	kernel.asm	/^vector152:$/;"	l
vector152	vectors.S	/^vector152:$/;"	l
vector153	kernel.asm	/^vector153:$/;"	l
vector153	vectors.S	/^vector153:$/;"	l
vector154	kernel.asm	/^vector154:$/;"	l
vector154	vectors.S	/^vector154:$/;"	l
vector155	kernel.asm	/^vector155:$/;"	l
vector155	vectors.S	/^vector155:$/;"	l
vector156	kernel.asm	/^vector156:$/;"	l
vector156	vectors.S	/^vector156:$/;"	l
vector157	kernel.asm	/^vector157:$/;"	l
vector157	vectors.S	/^vector157:$/;"	l
vector158	kernel.asm	/^vector158:$/;"	l
vector158	vectors.S	/^vector158:$/;"	l
vector159	kernel.asm	/^vector159:$/;"	l
vector159	vectors.S	/^vector159:$/;"	l
vector16	kernel.asm	/^vector16:$/;"	l
vector16	vectors.S	/^vector16:$/;"	l
vector160	kernel.asm	/^vector160:$/;"	l
vector160	vectors.S	/^vector160:$/;"	l
vector161	kernel.asm	/^vector161:$/;"	l
vector161	vectors.S	/^vector161:$/;"	l
vector162	kernel.asm	/^vector162:$/;"	l
vector162	vectors.S	/^vector162:$/;"	l
vector163	kernel.asm	/^vector163:$/;"	l
vector163	vectors.S	/^vector163:$/;"	l
vector164	kernel.asm	/^vector164:$/;"	l
vector164	vectors.S	/^vector164:$/;"	l
vector165	kernel.asm	/^vector165:$/;"	l
vector165	vectors.S	/^vector165:$/;"	l
vector166	kernel.asm	/^vector166:$/;"	l
vector166	vectors.S	/^vector166:$/;"	l
vector167	kernel.asm	/^vector167:$/;"	l
vector167	vectors.S	/^vector167:$/;"	l
vector168	kernel.asm	/^vector168:$/;"	l
vector168	vectors.S	/^vector168:$/;"	l
vector169	kernel.asm	/^vector169:$/;"	l
vector169	vectors.S	/^vector169:$/;"	l
vector17	kernel.asm	/^vector17:$/;"	l
vector17	vectors.S	/^vector17:$/;"	l
vector170	kernel.asm	/^vector170:$/;"	l
vector170	vectors.S	/^vector170:$/;"	l
vector171	kernel.asm	/^vector171:$/;"	l
vector171	vectors.S	/^vector171:$/;"	l
vector172	kernel.asm	/^vector172:$/;"	l
vector172	vectors.S	/^vector172:$/;"	l
vector173	kernel.asm	/^vector173:$/;"	l
vector173	vectors.S	/^vector173:$/;"	l
vector174	kernel.asm	/^vector174:$/;"	l
vector174	vectors.S	/^vector174:$/;"	l
vector175	kernel.asm	/^vector175:$/;"	l
vector175	vectors.S	/^vector175:$/;"	l
vector176	kernel.asm	/^vector176:$/;"	l
vector176	vectors.S	/^vector176:$/;"	l
vector177	kernel.asm	/^vector177:$/;"	l
vector177	vectors.S	/^vector177:$/;"	l
vector178	kernel.asm	/^vector178:$/;"	l
vector178	vectors.S	/^vector178:$/;"	l
vector179	kernel.asm	/^vector179:$/;"	l
vector179	vectors.S	/^vector179:$/;"	l
vector18	kernel.asm	/^vector18:$/;"	l
vector18	vectors.S	/^vector18:$/;"	l
vector180	kernel.asm	/^vector180:$/;"	l
vector180	vectors.S	/^vector180:$/;"	l
vector181	kernel.asm	/^vector181:$/;"	l
vector181	vectors.S	/^vector181:$/;"	l
vector182	kernel.asm	/^vector182:$/;"	l
vector182	vectors.S	/^vector182:$/;"	l
vector183	kernel.asm	/^vector183:$/;"	l
vector183	vectors.S	/^vector183:$/;"	l
vector184	kernel.asm	/^vector184:$/;"	l
vector184	vectors.S	/^vector184:$/;"	l
vector185	kernel.asm	/^vector185:$/;"	l
vector185	vectors.S	/^vector185:$/;"	l
vector186	kernel.asm	/^vector186:$/;"	l
vector186	vectors.S	/^vector186:$/;"	l
vector187	kernel.asm	/^vector187:$/;"	l
vector187	vectors.S	/^vector187:$/;"	l
vector188	kernel.asm	/^vector188:$/;"	l
vector188	vectors.S	/^vector188:$/;"	l
vector189	kernel.asm	/^vector189:$/;"	l
vector189	vectors.S	/^vector189:$/;"	l
vector19	kernel.asm	/^vector19:$/;"	l
vector19	vectors.S	/^vector19:$/;"	l
vector190	kernel.asm	/^vector190:$/;"	l
vector190	vectors.S	/^vector190:$/;"	l
vector191	kernel.asm	/^vector191:$/;"	l
vector191	vectors.S	/^vector191:$/;"	l
vector192	kernel.asm	/^vector192:$/;"	l
vector192	vectors.S	/^vector192:$/;"	l
vector193	kernel.asm	/^vector193:$/;"	l
vector193	vectors.S	/^vector193:$/;"	l
vector194	kernel.asm	/^vector194:$/;"	l
vector194	vectors.S	/^vector194:$/;"	l
vector195	kernel.asm	/^vector195:$/;"	l
vector195	vectors.S	/^vector195:$/;"	l
vector196	kernel.asm	/^vector196:$/;"	l
vector196	vectors.S	/^vector196:$/;"	l
vector197	kernel.asm	/^vector197:$/;"	l
vector197	vectors.S	/^vector197:$/;"	l
vector198	kernel.asm	/^vector198:$/;"	l
vector198	vectors.S	/^vector198:$/;"	l
vector199	kernel.asm	/^vector199:$/;"	l
vector199	vectors.S	/^vector199:$/;"	l
vector2	kernel.asm	/^vector2:$/;"	l
vector2	vectors.S	/^vector2:$/;"	l
vector20	kernel.asm	/^vector20:$/;"	l
vector20	vectors.S	/^vector20:$/;"	l
vector200	kernel.asm	/^vector200:$/;"	l
vector200	vectors.S	/^vector200:$/;"	l
vector201	kernel.asm	/^vector201:$/;"	l
vector201	vectors.S	/^vector201:$/;"	l
vector202	kernel.asm	/^vector202:$/;"	l
vector202	vectors.S	/^vector202:$/;"	l
vector203	kernel.asm	/^vector203:$/;"	l
vector203	vectors.S	/^vector203:$/;"	l
vector204	kernel.asm	/^vector204:$/;"	l
vector204	vectors.S	/^vector204:$/;"	l
vector205	kernel.asm	/^vector205:$/;"	l
vector205	vectors.S	/^vector205:$/;"	l
vector206	kernel.asm	/^vector206:$/;"	l
vector206	vectors.S	/^vector206:$/;"	l
vector207	kernel.asm	/^vector207:$/;"	l
vector207	vectors.S	/^vector207:$/;"	l
vector208	kernel.asm	/^vector208:$/;"	l
vector208	vectors.S	/^vector208:$/;"	l
vector209	kernel.asm	/^vector209:$/;"	l
vector209	vectors.S	/^vector209:$/;"	l
vector21	kernel.asm	/^vector21:$/;"	l
vector21	vectors.S	/^vector21:$/;"	l
vector210	kernel.asm	/^vector210:$/;"	l
vector210	vectors.S	/^vector210:$/;"	l
vector211	kernel.asm	/^vector211:$/;"	l
vector211	vectors.S	/^vector211:$/;"	l
vector212	kernel.asm	/^vector212:$/;"	l
vector212	vectors.S	/^vector212:$/;"	l
vector213	kernel.asm	/^vector213:$/;"	l
vector213	vectors.S	/^vector213:$/;"	l
vector214	kernel.asm	/^vector214:$/;"	l
vector214	vectors.S	/^vector214:$/;"	l
vector215	kernel.asm	/^vector215:$/;"	l
vector215	vectors.S	/^vector215:$/;"	l
vector216	kernel.asm	/^vector216:$/;"	l
vector216	vectors.S	/^vector216:$/;"	l
vector217	kernel.asm	/^vector217:$/;"	l
vector217	vectors.S	/^vector217:$/;"	l
vector218	kernel.asm	/^vector218:$/;"	l
vector218	vectors.S	/^vector218:$/;"	l
vector219	kernel.asm	/^vector219:$/;"	l
vector219	vectors.S	/^vector219:$/;"	l
vector22	kernel.asm	/^vector22:$/;"	l
vector22	vectors.S	/^vector22:$/;"	l
vector220	kernel.asm	/^vector220:$/;"	l
vector220	vectors.S	/^vector220:$/;"	l
vector221	kernel.asm	/^vector221:$/;"	l
vector221	vectors.S	/^vector221:$/;"	l
vector222	kernel.asm	/^vector222:$/;"	l
vector222	vectors.S	/^vector222:$/;"	l
vector223	kernel.asm	/^vector223:$/;"	l
vector223	vectors.S	/^vector223:$/;"	l
vector224	kernel.asm	/^vector224:$/;"	l
vector224	vectors.S	/^vector224:$/;"	l
vector225	kernel.asm	/^vector225:$/;"	l
vector225	vectors.S	/^vector225:$/;"	l
vector226	kernel.asm	/^vector226:$/;"	l
vector226	vectors.S	/^vector226:$/;"	l
vector227	kernel.asm	/^vector227:$/;"	l
vector227	vectors.S	/^vector227:$/;"	l
vector228	kernel.asm	/^vector228:$/;"	l
vector228	vectors.S	/^vector228:$/;"	l
vector229	kernel.asm	/^vector229:$/;"	l
vector229	vectors.S	/^vector229:$/;"	l
vector23	kernel.asm	/^vector23:$/;"	l
vector23	vectors.S	/^vector23:$/;"	l
vector230	kernel.asm	/^vector230:$/;"	l
vector230	vectors.S	/^vector230:$/;"	l
vector231	kernel.asm	/^vector231:$/;"	l
vector231	vectors.S	/^vector231:$/;"	l
vector232	kernel.asm	/^vector232:$/;"	l
vector232	vectors.S	/^vector232:$/;"	l
vector233	kernel.asm	/^vector233:$/;"	l
vector233	vectors.S	/^vector233:$/;"	l
vector234	kernel.asm	/^vector234:$/;"	l
vector234	vectors.S	/^vector234:$/;"	l
vector235	kernel.asm	/^vector235:$/;"	l
vector235	vectors.S	/^vector235:$/;"	l
vector236	kernel.asm	/^vector236:$/;"	l
vector236	vectors.S	/^vector236:$/;"	l
vector237	kernel.asm	/^vector237:$/;"	l
vector237	vectors.S	/^vector237:$/;"	l
vector238	kernel.asm	/^vector238:$/;"	l
vector238	vectors.S	/^vector238:$/;"	l
vector239	kernel.asm	/^vector239:$/;"	l
vector239	vectors.S	/^vector239:$/;"	l
vector24	kernel.asm	/^vector24:$/;"	l
vector24	vectors.S	/^vector24:$/;"	l
vector240	kernel.asm	/^vector240:$/;"	l
vector240	vectors.S	/^vector240:$/;"	l
vector241	kernel.asm	/^vector241:$/;"	l
vector241	vectors.S	/^vector241:$/;"	l
vector242	kernel.asm	/^vector242:$/;"	l
vector242	vectors.S	/^vector242:$/;"	l
vector243	kernel.asm	/^vector243:$/;"	l
vector243	vectors.S	/^vector243:$/;"	l
vector244	kernel.asm	/^vector244:$/;"	l
vector244	vectors.S	/^vector244:$/;"	l
vector245	kernel.asm	/^vector245:$/;"	l
vector245	vectors.S	/^vector245:$/;"	l
vector246	kernel.asm	/^vector246:$/;"	l
vector246	vectors.S	/^vector246:$/;"	l
vector247	kernel.asm	/^vector247:$/;"	l
vector247	vectors.S	/^vector247:$/;"	l
vector248	kernel.asm	/^vector248:$/;"	l
vector248	vectors.S	/^vector248:$/;"	l
vector249	kernel.asm	/^vector249:$/;"	l
vector249	vectors.S	/^vector249:$/;"	l
vector25	kernel.asm	/^vector25:$/;"	l
vector25	vectors.S	/^vector25:$/;"	l
vector250	kernel.asm	/^vector250:$/;"	l
vector250	vectors.S	/^vector250:$/;"	l
vector251	kernel.asm	/^vector251:$/;"	l
vector251	vectors.S	/^vector251:$/;"	l
vector252	kernel.asm	/^vector252:$/;"	l
vector252	vectors.S	/^vector252:$/;"	l
vector253	kernel.asm	/^vector253:$/;"	l
vector253	vectors.S	/^vector253:$/;"	l
vector254	kernel.asm	/^vector254:$/;"	l
vector254	vectors.S	/^vector254:$/;"	l
vector255	kernel.asm	/^vector255:$/;"	l
vector255	vectors.S	/^vector255:$/;"	l
vector26	kernel.asm	/^vector26:$/;"	l
vector26	vectors.S	/^vector26:$/;"	l
vector27	kernel.asm	/^vector27:$/;"	l
vector27	vectors.S	/^vector27:$/;"	l
vector28	kernel.asm	/^vector28:$/;"	l
vector28	vectors.S	/^vector28:$/;"	l
vector29	kernel.asm	/^vector29:$/;"	l
vector29	vectors.S	/^vector29:$/;"	l
vector3	kernel.asm	/^vector3:$/;"	l
vector3	vectors.S	/^vector3:$/;"	l
vector30	kernel.asm	/^vector30:$/;"	l
vector30	vectors.S	/^vector30:$/;"	l
vector31	kernel.asm	/^vector31:$/;"	l
vector31	vectors.S	/^vector31:$/;"	l
vector32	kernel.asm	/^vector32:$/;"	l
vector32	vectors.S	/^vector32:$/;"	l
vector33	kernel.asm	/^vector33:$/;"	l
vector33	vectors.S	/^vector33:$/;"	l
vector34	kernel.asm	/^vector34:$/;"	l
vector34	vectors.S	/^vector34:$/;"	l
vector35	kernel.asm	/^vector35:$/;"	l
vector35	vectors.S	/^vector35:$/;"	l
vector36	kernel.asm	/^vector36:$/;"	l
vector36	vectors.S	/^vector36:$/;"	l
vector37	kernel.asm	/^vector37:$/;"	l
vector37	vectors.S	/^vector37:$/;"	l
vector38	kernel.asm	/^vector38:$/;"	l
vector38	vectors.S	/^vector38:$/;"	l
vector39	kernel.asm	/^vector39:$/;"	l
vector39	vectors.S	/^vector39:$/;"	l
vector4	kernel.asm	/^vector4:$/;"	l
vector4	vectors.S	/^vector4:$/;"	l
vector40	kernel.asm	/^vector40:$/;"	l
vector40	vectors.S	/^vector40:$/;"	l
vector41	kernel.asm	/^vector41:$/;"	l
vector41	vectors.S	/^vector41:$/;"	l
vector42	kernel.asm	/^vector42:$/;"	l
vector42	vectors.S	/^vector42:$/;"	l
vector43	kernel.asm	/^vector43:$/;"	l
vector43	vectors.S	/^vector43:$/;"	l
vector44	kernel.asm	/^vector44:$/;"	l
vector44	vectors.S	/^vector44:$/;"	l
vector45	kernel.asm	/^vector45:$/;"	l
vector45	vectors.S	/^vector45:$/;"	l
vector46	kernel.asm	/^vector46:$/;"	l
vector46	vectors.S	/^vector46:$/;"	l
vector47	kernel.asm	/^vector47:$/;"	l
vector47	vectors.S	/^vector47:$/;"	l
vector48	kernel.asm	/^vector48:$/;"	l
vector48	vectors.S	/^vector48:$/;"	l
vector49	kernel.asm	/^vector49:$/;"	l
vector49	vectors.S	/^vector49:$/;"	l
vector5	kernel.asm	/^vector5:$/;"	l
vector5	vectors.S	/^vector5:$/;"	l
vector50	kernel.asm	/^vector50:$/;"	l
vector50	vectors.S	/^vector50:$/;"	l
vector51	kernel.asm	/^vector51:$/;"	l
vector51	vectors.S	/^vector51:$/;"	l
vector52	kernel.asm	/^vector52:$/;"	l
vector52	vectors.S	/^vector52:$/;"	l
vector53	kernel.asm	/^vector53:$/;"	l
vector53	vectors.S	/^vector53:$/;"	l
vector54	kernel.asm	/^vector54:$/;"	l
vector54	vectors.S	/^vector54:$/;"	l
vector55	kernel.asm	/^vector55:$/;"	l
vector55	vectors.S	/^vector55:$/;"	l
vector56	kernel.asm	/^vector56:$/;"	l
vector56	vectors.S	/^vector56:$/;"	l
vector57	kernel.asm	/^vector57:$/;"	l
vector57	vectors.S	/^vector57:$/;"	l
vector58	kernel.asm	/^vector58:$/;"	l
vector58	vectors.S	/^vector58:$/;"	l
vector59	kernel.asm	/^vector59:$/;"	l
vector59	vectors.S	/^vector59:$/;"	l
vector6	kernel.asm	/^vector6:$/;"	l
vector6	vectors.S	/^vector6:$/;"	l
vector60	kernel.asm	/^vector60:$/;"	l
vector60	vectors.S	/^vector60:$/;"	l
vector61	kernel.asm	/^vector61:$/;"	l
vector61	vectors.S	/^vector61:$/;"	l
vector62	kernel.asm	/^vector62:$/;"	l
vector62	vectors.S	/^vector62:$/;"	l
vector63	kernel.asm	/^vector63:$/;"	l
vector63	vectors.S	/^vector63:$/;"	l
vector64	kernel.asm	/^vector64:$/;"	l
vector64	vectors.S	/^vector64:$/;"	l
vector65	kernel.asm	/^vector65:$/;"	l
vector65	vectors.S	/^vector65:$/;"	l
vector66	kernel.asm	/^vector66:$/;"	l
vector66	vectors.S	/^vector66:$/;"	l
vector67	kernel.asm	/^vector67:$/;"	l
vector67	vectors.S	/^vector67:$/;"	l
vector68	kernel.asm	/^vector68:$/;"	l
vector68	vectors.S	/^vector68:$/;"	l
vector69	kernel.asm	/^vector69:$/;"	l
vector69	vectors.S	/^vector69:$/;"	l
vector7	kernel.asm	/^vector7:$/;"	l
vector7	vectors.S	/^vector7:$/;"	l
vector70	kernel.asm	/^vector70:$/;"	l
vector70	vectors.S	/^vector70:$/;"	l
vector71	kernel.asm	/^vector71:$/;"	l
vector71	vectors.S	/^vector71:$/;"	l
vector72	kernel.asm	/^vector72:$/;"	l
vector72	vectors.S	/^vector72:$/;"	l
vector73	kernel.asm	/^vector73:$/;"	l
vector73	vectors.S	/^vector73:$/;"	l
vector74	kernel.asm	/^vector74:$/;"	l
vector74	vectors.S	/^vector74:$/;"	l
vector75	kernel.asm	/^vector75:$/;"	l
vector75	vectors.S	/^vector75:$/;"	l
vector76	kernel.asm	/^vector76:$/;"	l
vector76	vectors.S	/^vector76:$/;"	l
vector77	kernel.asm	/^vector77:$/;"	l
vector77	vectors.S	/^vector77:$/;"	l
vector78	kernel.asm	/^vector78:$/;"	l
vector78	vectors.S	/^vector78:$/;"	l
vector79	kernel.asm	/^vector79:$/;"	l
vector79	vectors.S	/^vector79:$/;"	l
vector8	kernel.asm	/^vector8:$/;"	l
vector8	vectors.S	/^vector8:$/;"	l
vector80	kernel.asm	/^vector80:$/;"	l
vector80	vectors.S	/^vector80:$/;"	l
vector81	kernel.asm	/^vector81:$/;"	l
vector81	vectors.S	/^vector81:$/;"	l
vector82	kernel.asm	/^vector82:$/;"	l
vector82	vectors.S	/^vector82:$/;"	l
vector83	kernel.asm	/^vector83:$/;"	l
vector83	vectors.S	/^vector83:$/;"	l
vector84	kernel.asm	/^vector84:$/;"	l
vector84	vectors.S	/^vector84:$/;"	l
vector85	kernel.asm	/^vector85:$/;"	l
vector85	vectors.S	/^vector85:$/;"	l
vector86	kernel.asm	/^vector86:$/;"	l
vector86	vectors.S	/^vector86:$/;"	l
vector87	kernel.asm	/^vector87:$/;"	l
vector87	vectors.S	/^vector87:$/;"	l
vector88	kernel.asm	/^vector88:$/;"	l
vector88	vectors.S	/^vector88:$/;"	l
vector89	kernel.asm	/^vector89:$/;"	l
vector89	vectors.S	/^vector89:$/;"	l
vector9	kernel.asm	/^vector9:$/;"	l
vector9	vectors.S	/^vector9:$/;"	l
vector90	kernel.asm	/^vector90:$/;"	l
vector90	vectors.S	/^vector90:$/;"	l
vector91	kernel.asm	/^vector91:$/;"	l
vector91	vectors.S	/^vector91:$/;"	l
vector92	kernel.asm	/^vector92:$/;"	l
vector92	vectors.S	/^vector92:$/;"	l
vector93	kernel.asm	/^vector93:$/;"	l
vector93	vectors.S	/^vector93:$/;"	l
vector94	kernel.asm	/^vector94:$/;"	l
vector94	vectors.S	/^vector94:$/;"	l
vector95	kernel.asm	/^vector95:$/;"	l
vector95	vectors.S	/^vector95:$/;"	l
vector96	kernel.asm	/^vector96:$/;"	l
vector96	vectors.S	/^vector96:$/;"	l
vector97	kernel.asm	/^vector97:$/;"	l
vector97	vectors.S	/^vector97:$/;"	l
vector98	kernel.asm	/^vector98:$/;"	l
vector98	vectors.S	/^vector98:$/;"	l
vector99	kernel.asm	/^vector99:$/;"	l
vector99	vectors.S	/^vector99:$/;"	l
vectors	vectors.S	/^vectors:$/;"	l
version	elf.h	/^  uint version;$/;"	m	struct:elfhdr
version	mp.h	/^  uchar version;                \/\/ I\/O APIC version$/;"	m	struct:mpioapic
version	mp.h	/^  uchar version;                \/\/ [14]$/;"	m	struct:mpconf
version	mp.h	/^  uchar version;                \/\/ local APIC verison$/;"	m	struct:mpproc
void	cat.asm	/^void$/;"	l
void	divide.asm	/^void$/;"	l
void	echo.asm	/^void$/;"	l
void	forktest.asm	/^void$/;"	l
void	grep.asm	/^void$/;"	l
void	init.asm	/^void$/;"	l
void	kernel.asm	/^void cmostime(struct rtcdate *r)$/;"	l
void	kernel.asm	/^void entry32mp(void);$/;"	l
void	kernel.asm	/^void idtinit(void) {$/;"	l
void	kernel.asm	/^void tvinit(void) {$/;"	l
void	kernel.asm	/^void$/;"	l
void	kill.asm	/^void$/;"	l
void	ln.asm	/^void$/;"	l
void	ls.asm	/^void$/;"	l
void	mkdir.asm	/^void$/;"	l
void	rm.asm	/^void$/;"	l
void	sh.asm	/^void$/;"	l
void	stressfs.asm	/^void$/;"	l
void	usertests.asm	/^void argptest()$/;"	l
void	usertests.asm	/^void dirtest(void)$/;"	l
void	usertests.asm	/^void$/;"	l
void	wc.asm	/^void$/;"	l
void	zombie.asm	/^void$/;"	l
volatile	kernel.asm	/^volatile uint *lapic;  \/\/ Initialized in mp.c$/;"	l
w	console.c	/^  uint w;  \/\/ Write index$/;"	m	struct:__anon8	file:
wait	proc.c	/^wait(void)$/;"	f
waitdisk	bootmain.c	/^waitdisk(void)$/;"	f
wakeup	proc.c	/^wakeup(void *chan)$/;"	f
wakeup1	proc.c	/^wakeup1(void *chan)$/;"	f	file:
walkpgdir	vm.c	/^walkpgdir(pde_t *pml4, const void *va, int alloc)$/;"	f	file:
wc	wc.c	/^wc(int fd, char *name)$/;"	f
whitespace	sh.c	/^char whitespace[] = " \\t\\r\\n\\v";$/;"	v
winode	mkfs.c	/^winode(uint inum, struct dinode *ip)$/;"	f
writable	file.h	/^  char writable;$/;"	m	struct:file
write	file.h	/^  int (*write)(struct inode*, char*, int);$/;"	m	struct:devsw
write_head	log.c	/^write_head(void)$/;"	f	file:
write_log	log.c	/^write_log(void)$/;"	f	file:
writefile	cuth	/^sub writefile($@){$/;"	s
writei	fs.c	/^writei(struct inode *ip, char *src, uint off, uint n)$/;"	f
writeopen	pipe.c	/^  int writeopen;  \/\/ write fd is still open$/;"	m	struct:pipe	file:
writetest	usertests.c	/^writetest(void)$/;"	f
writetest1	usertests.c	/^writetest1(void)$/;"	f
wrmsr	entry.S	/^wrmsr:$/;"	l
wrmsr	kernel.asm	/^wrmsr:$/;"	l
wrv	kernel.asm	/^  wrv = (ushort*)P2V((0x40<<4 | 0x67));  \/\/ Warm reset vector$/;"	d
wsect	mkfs.c	/^wsect(uint sec, void *buf)$/;"	f
x	cat.asm	/^    x = -xx;$/;"	d
x	cat.asm	/^    x = xx;$/;"	d
x	divide.asm	/^    x = -xx;$/;"	d
x	divide.asm	/^    x = xx;$/;"	d
x	echo.asm	/^    x = -xx;$/;"	d
x	echo.asm	/^    x = xx;$/;"	d
x	grep.asm	/^    x = -xx;$/;"	d
x	grep.asm	/^    x = xx;$/;"	d
x	init.asm	/^    x = -xx;$/;"	d
x	init.asm	/^    x = xx;$/;"	d
x	kernel.asm	/^    x = -xx;$/;"	d
x	kernel.asm	/^    x = xx;$/;"	d
x	kill.asm	/^    x = -xx;$/;"	d
x	kill.asm	/^    x = xx;$/;"	d
x	ln.asm	/^    x = -xx;$/;"	d
x	ln.asm	/^    x = xx;$/;"	d
x	ls.asm	/^    x = -xx;$/;"	d
x	ls.asm	/^    x = xx;$/;"	d
x	mkdir.asm	/^    x = -xx;$/;"	d
x	mkdir.asm	/^    x = xx;$/;"	d
x	rm.asm	/^    x = -xx;$/;"	d
x	rm.asm	/^    x = xx;$/;"	d
x	sh.asm	/^    x = -xx;$/;"	d
x	sh.asm	/^    x = xx;$/;"	d
x	stressfs.asm	/^    x = -xx;$/;"	d
x	stressfs.asm	/^    x = xx;$/;"	d
x	umalloc.c	/^  Align x;$/;"	m	union:header	file:
x	usertests.asm	/^    x = -xx;$/;"	d
x	usertests.asm	/^    x = x * 1103515245 + 12345;$/;"	d
x	usertests.asm	/^    x = xx;$/;"	d
x	wc.asm	/^    x = -xx;$/;"	d
x	wc.asm	/^    x = xx;$/;"	d
x	zombie.asm	/^    x = -xx;$/;"	d
x	zombie.asm	/^    x = xx;$/;"	d
xchecksum	mp.h	/^  uchar xchecksum;              \/\/ extended table checksum$/;"	m	struct:mpconf
xchg	x86.h	/^xchg(volatile uint *addr, addr_t newval)$/;"	f
xint	mkfs.c	/^xint(uint x)$/;"	f
xlength	mp.h	/^  ushort xlength;               \/\/ extended table length$/;"	m	struct:mpconf
xshort	mkfs.c	/^xshort(ushort x)$/;"	f
xticks	kernel.asm	/^  xticks = ticks;$/;"	d
year	date.h	/^  uint year;$/;"	m	struct:rtcdate
yield	proc.c	/^yield(void)$/;"	f
zeroes	mkfs.c	/^char zeroes[BSIZE];$/;"	v
