!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ALT	kbd.h	11;"	d
APP_SEG	mmu.h	101;"	d
AS	Makefile	/^AS = $(TOOLPREFIX)gas$/;"	m
ASFLAGS	Makefile	/^ASFLAGS = -gdwarf-2 -Wa,-divide -Iinclude $(XFLAGS)$/;"	m
ASSERT	lapic.c	26;"	d	file:
Align	umalloc.c	/^typedef long Align;$/;"	t	file:
BACK	sh.c	12;"	d	file:
BACKSPACE	console.c	139;"	d	file:
BBLOCK	fs.h	48;"	d
BCAST	lapic.c	29;"	d	file:
BIG	usertests.asm	/^#define BIG (100*1024*1024)$/;"	d
BIG	usertests.c	1452;"	d	file:
BPB	fs.h	45;"	d
BSIZE	fs.h	7;"	d
BUSY	lapic.c	30;"	d	file:
B_DIRTY	buf.h	13;"	d
B_VALID	buf.h	12;"	d
C	console.c	199;"	d	file:
C	kbd.h	32;"	d
C	kernel.asm	/^#define C(x)  ((x)-'@')  \/\/ Control-x$/;"	d
CALL_GATE	mmu.h	62;"	d
CAPSLOCK	kbd.h	13;"	d
CC	Makefile	/^CC = $(TOOLPREFIX)gcc$/;"	m
CFLAGS	Makefile	/^CFLAGS = -fno-pic -static -fno-builtin -fno-strict-aliasing -Wall -MD -ggdb -fno-omit-frame-pointer$/;"	m
CMOS_PORT	lapic.c	144;"	d	file:
CMOS_RETURN	lapic.c	145;"	d	file:
CMOS_STATA	lapic.c	184;"	d	file:
CMOS_STATB	lapic.c	185;"	d	file:
CMOS_UIP	lapic.c	186;"	d	file:
COM1	uart.c	15;"	d	file:
CONSOLE	file.h	60;"	d
CONV	kernel.asm	/^#define    CONV(x)     (t1.x = ((t1.x >> 4) * 10) + (t1.x & 0xf))$/;"	d
CONV	lapic.c	235;"	d	file:
CONV	lapic.c	242;"	d	file:
CPUS	Makefile	/^CPUS := 2$/;"	m
CR0_AM	mmu.h	35;"	d
CR0_CD	mmu.h	37;"	d
CR0_EM	mmu.h	30;"	d
CR0_ET	mmu.h	32;"	d
CR0_MP	mmu.h	29;"	d
CR0_NE	mmu.h	33;"	d
CR0_NW	mmu.h	36;"	d
CR0_PE	mmu.h	28;"	d
CR0_PG	mmu.h	38;"	d
CR0_TS	mmu.h	31;"	d
CR0_WP	mmu.h	34;"	d
CR4_OSXFSR	mmu.h	42;"	d
CR4_OSXMMEXCPT	mmu.h	43;"	d
CR4_PAE	mmu.h	41;"	d
CR4_PSE	mmu.h	40;"	d
CRTPORT	console.c	140;"	d	file:
CRTPORT	kernel.asm	/^#define CRTPORT 0x3d4$/;"	d
CTL	kbd.h	10;"	d
DAY	kernel.asm	/^#define DAY     0x07$/;"	d
DAY	lapic.c	191;"	d	file:
DEASSERT	lapic.c	27;"	d	file:
DEBUG	Makefile	/^DEBUG=TRUE$/;"	m
DELIVS	lapic.c	25;"	d	file:
DIRSIZ	fs.h	51;"	d
DPL_USER	mmu.h	100;"	d
Disassembly	bootblock.asm	/^Disassembly of section .text:$/;"	l
Disassembly	cat.asm	/^Disassembly of section .text:$/;"	l
Disassembly	echo.asm	/^Disassembly of section .text:$/;"	l
Disassembly	entryother.asm	/^Disassembly of section .text:$/;"	l
Disassembly	forktest.asm	/^Disassembly of section .text:$/;"	l
Disassembly	grep.asm	/^Disassembly of section .text:$/;"	l
Disassembly	init.asm	/^Disassembly of section .text:$/;"	l
Disassembly	initcode.asm	/^Disassembly of section .text:$/;"	l
Disassembly	kernel.asm	/^Disassembly of section .text:$/;"	l
Disassembly	kill.asm	/^Disassembly of section .text:$/;"	l
Disassembly	ln.asm	/^Disassembly of section .text:$/;"	l
Disassembly	ls.asm	/^Disassembly of section .text:$/;"	l
Disassembly	mkdir.asm	/^Disassembly of section .text:$/;"	l
Disassembly	mount.asm	/^Disassembly of section .text:$/;"	l
Disassembly	rm.asm	/^Disassembly of section .text:$/;"	l
Disassembly	sh.asm	/^Disassembly of section .text:$/;"	l
Disassembly	stressfs.asm	/^Disassembly of section .text:$/;"	l
Disassembly	usertests.asm	/^Disassembly of section .text:$/;"	l
Disassembly	wc.asm	/^Disassembly of section .text:$/;"	l
Disassembly	zombie.asm	/^Disassembly of section .text:$/;"	l
E0ESC	kbd.h	17;"	d
ELF_MAGIC	elf.h	3;"	d
ELF_PROG_FLAG_EXEC	elf.h	40;"	d
ELF_PROG_FLAG_READ	elf.h	42;"	d
ELF_PROG_FLAG_WRITE	elf.h	41;"	d
ELF_PROG_LOAD	elf.h	37;"	d
EMBRYO	types.h	/^enum procstate { UNUSED, EMBRYO, SLEEPING, RUNNABLE, RUNNING, ZOMBIE };$/;"	e	enum:procstate
ENABLE	lapic.c	20;"	d	file:
EOI	lapic.c	18;"	d	file:
ERROR	lapic.c	39;"	d	file:
ESR	lapic.c	21;"	d	file:
EXEC	sh.c	8;"	d	file:
EXTMEM	memlayout.h	3;"	d
EXTRA	Makefile	/^EXTRA=\\$/;"	m
FD_INODE	file.h	/^  enum { FD_NONE, FD_PIPE, FD_INODE } type;$/;"	e	enum:file::__anon3
FD_NONE	file.h	/^  enum { FD_NONE, FD_PIPE, FD_INODE } type;$/;"	e	enum:file::__anon3
FD_PIPE	file.h	/^  enum { FD_NONE, FD_PIPE, FD_INODE } type;$/;"	e	enum:file::__anon3
FILES	Makefile	/^FILES = $(shell grep -v '^\\#' runoff.list)$/;"	m
FIXED	lapic.c	31;"	d	file:
FL_AC	mmu.h	22;"	d
FL_AF	mmu.h	7;"	d
FL_CF	mmu.h	5;"	d
FL_DF	mmu.h	12;"	d
FL_ID	mmu.h	25;"	d
FL_IF	mmu.h	11;"	d
FL_IOPL_0	mmu.h	15;"	d
FL_IOPL_1	mmu.h	16;"	d
FL_IOPL_2	mmu.h	17;"	d
FL_IOPL_3	mmu.h	18;"	d
FL_IOPL_MASK	mmu.h	14;"	d
FL_NT	mmu.h	19;"	d
FL_OF	mmu.h	13;"	d
FL_PF	mmu.h	6;"	d
FL_RF	mmu.h	20;"	d
FL_SF	mmu.h	9;"	d
FL_TF	mmu.h	10;"	d
FL_VIF	mmu.h	23;"	d
FL_VIP	mmu.h	24;"	d
FL_VM	mmu.h	21;"	d
FL_ZF	mmu.h	8;"	d
FSSIZE	param.h	13;"	d
GDBPORT	Makefile	/^GDBPORT = $(shell expr `id -u` % 5000 + 25000)$/;"	m
HOURS	lapic.c	190;"	d	file:
Header	umalloc.c	/^typedef union header Header;$/;"	t	typeref:union:header	file:
IBLOCK	fs.h	42;"	d
ICRHI	lapic.c	32;"	d	file:
ICRLO	lapic.c	22;"	d	file:
ID	lapic.c	15;"	d	file:
IDE_BSY	ide.c	17;"	d	file:
IDE_CMD_RDMUL	ide.c	24;"	d	file:
IDE_CMD_READ	ide.c	22;"	d	file:
IDE_CMD_WRITE	ide.c	23;"	d	file:
IDE_CMD_WRMUL	ide.c	25;"	d	file:
IDE_DF	ide.c	19;"	d	file:
IDE_DRDY	ide.c	18;"	d	file:
IDE_ERR	ide.c	20;"	d	file:
INIT	lapic.c	23;"	d	file:
INPUT_BUF	console.c	190;"	d	file:
INT_ACTIVELOW	ioapic.c	23;"	d	file:
INT_DISABLED	ioapic.c	21;"	d	file:
INT_LEVEL	ioapic.c	22;"	d	file:
INT_LOGICAL	ioapic.c	24;"	d	file:
IOAPIC	ioapic.c	10;"	d	file:
IPB	fs.h	39;"	d
IRQ_COM1	traps.h	34;"	d
IRQ_ERROR	traps.h	36;"	d
IRQ_IDE	traps.h	35;"	d
IRQ_KBD	traps.h	33;"	d
IRQ_SPURIOUS	traps.h	37;"	d
IRQ_TIMER	traps.h	32;"	d
I_VALID	file.h	49;"	d
KBDATAP	kbd.h	5;"	d
KBSTATP	kbd.h	3;"	d
KBS_DIB	kbd.h	4;"	d
KERNBASE	kernel.asm	/^#define KERNBASE 0xFFFF800000000000 \/\/ First kernel virtual address$/;"	d
KERNBASE	memlayout.h	7;"	d
KERNEL_CS	mmu.h	67;"	d
KERNLINK	kernel.asm	/^#define KERNLINK (KERNBASE+EXTMEM)  \/\/ Address where kernel is linked$/;"	d
KERNLINK	memlayout.h	9;"	d
KEY_DEL	kbd.h	29;"	d
KEY_DN	kbd.h	23;"	d
KEY_END	kbd.h	21;"	d
KEY_HOME	kbd.h	20;"	d
KEY_INS	kbd.h	28;"	d
KEY_LF	kbd.h	24;"	d
KEY_PGDN	kbd.h	27;"	d
KEY_PGUP	kbd.h	26;"	d
KEY_RT	kbd.h	25;"	d
KEY_UP	kbd.h	22;"	d
KSTACKSIZE	param.h	2;"	d
LD	Makefile	/^LD = $(TOOLPREFIX)ld$/;"	m
LDFLAGS	Makefile	/^LDFLAGS = -m elf_x86_64 -nodefaultlibs$/;"	m
LEVEL	lapic.c	28;"	d	file:
LINT0	lapic.c	37;"	d	file:
LINT1	lapic.c	38;"	d	file:
LIST	sh.c	11;"	d	file:
LOGSIZE	param.h	11;"	d
MASKED	lapic.c	40;"	d	file:
MAXARG	param.h	9;"	d
MAXARGS	sh.c	14;"	d	file:
MAXFILE	fs.h	26;"	d
MAXOPBLOCKS	param.h	10;"	d
MEMFSOBJS	Makefile	/^MEMFSOBJS = $(filter-out ide.o,$(OBJS)) memide.o$/;"	m
MINS	lapic.c	189;"	d	file:
MONTH	kernel.asm	/^#define MONTH   0x08$/;"	d
MONTH	lapic.c	192;"	d	file:
MPBOOT	mp.h	34;"	d
MPBUS	mp.h	50;"	d
MPIOAPIC	mp.h	51;"	d
MPIOINTR	mp.h	52;"	d
MPLINTR	mp.h	53;"	d
MPPROC	mp.h	49;"	d
MSR_CSTAR	mmu.h	49;"	d
MSR_EFER	mmu.h	46;"	d
MSR_LSTAR	mmu.h	48;"	d
MSR_SFMASK	mmu.h	50;"	d
MSR_STAR	mmu.h	47;"	d
N	forktest.asm	/^#define N  1000$/;"	d
N	forktest.c	8;"	d	file:
NBUF	param.h	12;"	d
NCPU	param.h	3;"	d
NDEV	param.h	7;"	d
NDIRECT	file.h	29;"	d
NDIRECT	fs.h	5;"	d
NELEM	defs.h	201;"	d
NFILE	param.h	5;"	d
NINDIRECT	fs.h	25;"	d
NINODE	param.h	6;"	d
NINODES	mkfs.c	18;"	d	file:
NO	kbd.h	7;"	d
NOFILE	param.h	4;"	d
NPDENTRIES	mmu.h	143;"	d
NPROC	param.h	1;"	d
NPTENTRIES	mmu.h	144;"	d
NSEGS	mmu.h	61;"	d
NUMLOCK	kbd.h	14;"	d
OBJCOPY	Makefile	/^OBJCOPY = $(TOOLPREFIX)objcopy$/;"	m
OBJDUMP	Makefile	/^OBJDUMP = $(TOOLPREFIX)objdump$/;"	m
OBJS	Makefile	/^OBJS = \\$/;"	m
OPT	Makefile	/^OPT ?= -O0$/;"	m
O_CREATE	fcntl.h	4;"	d
O_RDONLY	fcntl.h	1;"	d
O_RDWR	fcntl.h	3;"	d
O_WRONLY	fcntl.h	2;"	d
P2V	memlayout.h	21;"	d
P2V_WO	memlayout.h	24;"	d
PCINT	lapic.c	36;"	d	file:
PDPX	mmu.h	136;"	d
PDPXSHIFT	mmu.h	149;"	d
PDX	mmu.h	138;"	d
PDXSHIFT	mmu.h	148;"	d
PERIODIC	lapic.c	35;"	d	file:
PGROUNDDOWN	mmu.h	154;"	d
PGROUNDUP	mmu.h	153;"	d
PGSHIFT	mmu.h	146;"	d
PGSIZE	mmu.h	145;"	d
PHYSTOP	memlayout.h	4;"	d
PIPE	sh.c	10;"	d	file:
PIPESIZE	pipe.c	11;"	d	file:
PML4XSHIFT	mmu.h	150;"	d
PMX	mmu.h	134;"	d
PRINT	Makefile	/^PRINT = runoff.list runoff.spec README toc.hdr toc.ftr $(FILES)$/;"	m
PROCFILES	procfs.c	74;"	d	file:
PTE_A	mmu.h	162;"	d
PTE_ADDR	mmu.h	168;"	d
PTE_D	mmu.h	163;"	d
PTE_FLAGS	mmu.h	169;"	d
PTE_MBZ	mmu.h	165;"	d
PTE_P	mmu.h	157;"	d
PTE_PCD	mmu.h	161;"	d
PTE_PS	mmu.h	164;"	d
PTE_PWT	mmu.h	160;"	d
PTE_U	mmu.h	159;"	d
PTE_W	mmu.h	158;"	d
PTX	mmu.h	140;"	d
PTXSHIFT	mmu.h	147;"	d
PXMASK	mmu.h	151;"	d
QEMU	Makefile	/^ QEMU = qemu-system-x86_64$/;"	m
QEMU	Makefile	/^QEMU = $(shell if which qemu > \/dev\/null; \\$/;"	m
QEMUGDB	Makefile	/^QEMUGDB = $(shell if $(QEMU) -help | grep -q '^-gdb'; \\$/;"	m
QEMUOPTS	Makefile	/^QEMUOPTS = -net none -hdb fs.img xv6.img -smp $(CPUS) -m 512 $(QEMUEXTRA)$/;"	m
REDIR	sh.c	9;"	d	file:
REG_ID	ioapic.c	12;"	d	file:
REG_TABLE	ioapic.c	14;"	d	file:
REG_VER	ioapic.c	13;"	d	file:
ROOTDEV	param.h	8;"	d
ROOTINO	fs.h	6;"	d
RTC_ADDR	usertests.c	1701;"	d	file:
RTC_DATA	usertests.c	1702;"	d	file:
RUNNABLE	types.h	/^enum procstate { UNUSED, EMBRYO, SLEEPING, RUNNABLE, RUNNING, ZOMBIE };$/;"	e	enum:procstate
RUNNING	types.h	/^enum procstate { UNUSED, EMBRYO, SLEEPING, RUNNABLE, RUNNING, ZOMBIE };$/;"	e	enum:procstate
SCROLLLOCK	kbd.h	15;"	d
SECS	lapic.c	188;"	d	file:
SECTOR_SIZE	ide.c	16;"	d	file:
SECTSIZE	bootmain.c	12;"	d	file:
SEG	mmu.h	89;"	d
SEG16	mmu.h	94;"	d
SEG_ASM	asm.h	11;"	d
SEG_KCODE	mmu.h	53;"	d
SEG_KCPU	mmu.h	58;"	d
SEG_KDATA	mmu.h	54;"	d
SEG_NULLASM	asm.h	5;"	d
SEG_TSS	mmu.h	59;"	d
SEG_UCODE	mmu.h	57;"	d
SEG_UCODE32	mmu.h	55;"	d
SEG_UDATA	mmu.h	56;"	d
SETCALLGATE	mmu.h	243;"	d
SHIFT	kbd.h	9;"	d
SLEEPING	types.h	/^enum procstate { UNUSED, EMBRYO, SLEEPING, RUNNABLE, RUNNING, ZOMBIE };$/;"	e	enum:procstate
STARTUP	lapic.c	24;"	d	file:
STA_A	asm.h	21;"	d
STA_A	mmu.h	109;"	d
STA_C	asm.h	18;"	d
STA_C	mmu.h	106;"	d
STA_E	asm.h	17;"	d
STA_E	mmu.h	105;"	d
STA_R	asm.h	20;"	d
STA_R	mmu.h	108;"	d
STA_W	asm.h	19;"	d
STA_W	mmu.h	107;"	d
STA_X	asm.h	16;"	d
STA_X	mmu.h	104;"	d
STS_CG16	mmu.h	115;"	d
STS_CG64	mmu.h	121;"	d
STS_IG16	mmu.h	117;"	d
STS_IG64	mmu.h	122;"	d
STS_LDT	mmu.h	113;"	d
STS_T16A	mmu.h	112;"	d
STS_T16B	mmu.h	114;"	d
STS_T64A	mmu.h	119;"	d
STS_T64B	mmu.h	120;"	d
STS_TG	mmu.h	116;"	d
STS_TG16	mmu.h	118;"	d
STS_TG64	mmu.h	123;"	d
SVR	lapic.c	19;"	d	file:
SYSCALL	usys.S	/^#define SYSCALL(name) \\$/;"	d
SYS_chdir	syscall.h	10;"	d
SYS_close	syscall.h	22;"	d
SYS_dup	syscall.h	11;"	d
SYS_exec	syscall.h	8;"	d
SYS_exit	syscall.h	3;"	d
SYS_fork	syscall.h	2;"	d
SYS_fstat	syscall.h	9;"	d
SYS_getpid	syscall.h	12;"	d
SYS_kill	syscall.h	7;"	d
SYS_link	syscall.h	20;"	d
SYS_mkdir	syscall.h	21;"	d
SYS_mknod	syscall.h	18;"	d
SYS_mount	syscall.h	23;"	d
SYS_open	syscall.h	16;"	d
SYS_pipe	syscall.h	5;"	d
SYS_read	syscall.h	6;"	d
SYS_sbrk	syscall.h	13;"	d
SYS_sleep	syscall.h	14;"	d
SYS_unlink	syscall.h	19;"	d
SYS_uptime	syscall.h	15;"	d
SYS_wait	syscall.h	4;"	d
SYS_write	syscall.h	17;"	d
TCCR	lapic.c	42;"	d	file:
TDCR	lapic.c	43;"	d	file:
TICR	lapic.c	41;"	d	file:
TIMER	lapic.c	33;"	d	file:
TOOLPREFIX	Makefile	/^TOOLPREFIX := $(shell if i386-jos-elf-objdump -i 2>&1 | grep '^elf32-i386$$' >\/dev\/null 2>&1; \\$/;"	m
TPR	lapic.c	17;"	d	file:
TRAP_GATE	mmu.h	171;"	d
T_ALIGN	traps.h	21;"	d
T_BOUND	traps.h	9;"	d
T_BRKPT	traps.h	7;"	d
T_DBLFLT	traps.h	12;"	d
T_DEBUG	traps.h	5;"	d
T_DEFAULT	traps.h	28;"	d
T_DEV	stat.h	3;"	d
T_DEVICE	traps.h	11;"	d
T_DIR	kernel.asm	/^#define T_DIR ((1))$/;"	d
T_DIR	procfs.c	13;"	d	file:
T_DIR	stat.h	1;"	d
T_DIVIDE	traps.h	4;"	d
T_FILE	stat.h	2;"	d
T_FPERR	traps.h	20;"	d
T_GPFLT	traps.h	17;"	d
T_ILLOP	traps.h	10;"	d
T_IRQ0	traps.h	30;"	d
T_MCHK	traps.h	22;"	d
T_NMI	traps.h	6;"	d
T_OFLOW	traps.h	8;"	d
T_PGFLT	traps.h	18;"	d
T_SEGNP	traps.h	15;"	d
T_SIMDERR	traps.h	23;"	d
T_STACK	traps.h	16;"	d
T_SYSCALL	traps.h	27;"	d
T_TSS	traps.h	14;"	d
ULIB	Makefile	/^ULIB = ulib.o usys.o printf.o umalloc.o$/;"	m
UNUSED	types.h	/^enum procstate { UNUSED, EMBRYO, SLEEPING, RUNNABLE, RUNNING, ZOMBIE };$/;"	e	enum:procstate
UPROGS	Makefile	/^UPROGS=\\$/;"	m
USER_CS	mmu.h	65;"	d
USER_DS	mmu.h	66;"	d
V2P	memlayout.h	20;"	d
V2P_WO	memlayout.h	23;"	d
VER	lapic.c	16;"	d	file:
X1	lapic.c	34;"	d	file:
XFLAGS	Makefile	/^XFLAGS = -m64 -DX64 -mcmodel=large -mtls-direct-seg-refs -mno-red-zone$/;"	m
YEAR	kernel.asm	/^#define YEAR    0x09$/;"	d
YEAR	lapic.c	193;"	d	file:
ZOMBIE	types.h	/^enum procstate { UNUSED, EMBRYO, SLEEPING, RUNNABLE, RUNNING, ZOMBIE };$/;"	e	enum:procstate
__deadloop	entry.S	/^__deadloop:$/;"	l
__deadloop	kernel.asm	/^__deadloop:$/;"	l
_cat	cat.asm	/^_cat:     file format elf64-x86-64$/;"	l
_echo	echo.asm	/^_echo:     file format elf64-x86-64$/;"	l
_forktest	forktest.asm	/^_forktest:     file format elf64-x86-64$/;"	l
_grep	grep.asm	/^_grep:     file format elf64-x86-64$/;"	l
_init	init.asm	/^_init:     file format elf64-x86-64$/;"	l
_kill	kill.asm	/^_kill:     file format elf64-x86-64$/;"	l
_ln	ln.asm	/^_ln:     file format elf64-x86-64$/;"	l
_ls	ls.asm	/^_ls:     file format elf64-x86-64$/;"	l
_mkdir	mkdir.asm	/^_mkdir:     file format elf64-x86-64$/;"	l
_mount	mount.asm	/^_mount:     file format elf64-x86-64$/;"	l
_rm	rm.asm	/^_rm:     file format elf64-x86-64$/;"	l
_sh	sh.asm	/^_sh:     file format elf64-x86-64$/;"	l
_start	entry.S	/^_start:$/;"	l
_start	kernel.asm	/^_start:$/;"	l
_stressfs	stressfs.asm	/^_stressfs:     file format elf64-x86-64$/;"	l
_usertests	usertests.asm	/^_usertests:     file format elf64-x86-64$/;"	l
_wc	wc.asm	/^_wc:     file format elf64-x86-64$/;"	l
_zombie	zombie.asm	/^_zombie:     file format elf64-x86-64$/;"	l
a	kernel.asm	/^    a = (uint*)bp->data;$/;"	d
a	kernel.asm	/^  a = (char*)PGROUNDDOWN((addr_t)va);$/;"	d
a	kernel.asm	/^  a = PGROUNDUP(newsz);$/;"	d
a	kernel.asm	/^  a = PGROUNDUP(oldsz);$/;"	d
a	usertests.asm	/^    a = b + 1;$/;"	d
a	usertests.asm	/^  a = sbrk(0);$/;"	d
a0	forktest.asm	/^  a0:	00 00 00 $/;"	l
a0	mount.asm	/^  a0:	55                   	push   %rbp$/;"	l
a0	usertests.asm	/^      a0:	8b 00                	mov    (%rax),%eax$/;"	l
a0	zombie.asm	/^  a0:	84 c0                	test   %al,%al$/;"	l
a00	cat.asm	/^ a00:	48 b8 9c 05 00 00 00 	movabs $0x59c,%rax$/;"	l
a00	mount.asm	/^ a00:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
a01	kill.asm	/^ a01:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
a01	ln.asm	/^ a01:	eb 0e                	jmp    a11 <free+0xcf>$/;"	l
a01	sh.asm	/^     a01:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
a01	usertests.asm	/^     a01:	00 00 00 $/;"	l
a01	zombie.asm	/^ a01:	77 07                	ja     a0a <morecore+0x1b>$/;"	l
a02	ls.asm	/^     a02:	c7 85 40 ff ff ff 00 	movl   $0x0,-0xc0(%rbp)$/;"	l
a02	mkdir.asm	/^ a02:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
a02	rm.asm	/^ a02:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
a03	echo.asm	/^ a03:	75 27                	jne    a2c <free+0x113>$/;"	l
a03	ln.asm	/^ a03:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
a03	mount.asm	/^ a03:	c1 e0 04             	shl    $0x4,%eax$/;"	l
a03	zombie.asm	/^ a03:	c7 45 ec 00 10 00 00 	movl   $0x1000,-0x14(%rbp)$/;"	l
a04	init.asm	/^ a04:	89 c7                	mov    %eax,%edi$/;"	l
a04	usertests.asm	/^     a04:	89 c7                	mov    %eax,%edi$/;"	l
a04	wc.asm	/^ a04:	83 f8 30             	cmp    $0x30,%eax$/;"	l
a05	echo.asm	/^ a05:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
a05	kill.asm	/^ a05:	48 01 d0             	add    %rdx,%rax$/;"	l
a05	sh.asm	/^     a05:	48 89 c7             	mov    %rax,%rdi$/;"	l
a05	stressfs.asm	/^ a05:	89 d6                	mov    %edx,%esi$/;"	l
a06	grep.asm	/^ a06:	48 01 d0             	add    %rdx,%rax$/;"	l
a06	init.asm	/^ a06:	48 b8 c1 05 00 00 00 	movabs $0x5c1,%rax$/;"	l
a06	mkdir.asm	/^ a06:	48 8b 00             	mov    (%rax),%rax$/;"	l
a06	mount.asm	/^ a06:	89 c7                	mov    %eax,%edi$/;"	l
a06	rm.asm	/^ a06:	48 8b 00             	mov    (%rax),%rax$/;"	l
a06	usertests.asm	/^     a06:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
a07	cat.asm	/^ a07:	00 00 00 $/;"	l
a07	ln.asm	/^ a07:	48 8b 10             	mov    (%rax),%rdx$/;"	l
a07	stressfs.asm	/^ a07:	89 c7                	mov    %eax,%edi$/;"	l
a07	wc.asm	/^ a07:	73 23                	jae    a2c <printf+0x2e2>$/;"	l
a08	kill.asm	/^ a08:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax$/;"	l
a08	mount.asm	/^ a08:	48 b8 e9 03 00 00 00 	movabs $0x3e9,%rax$/;"	l
a08	sh.asm	/^     a08:	48 b8 b2 12 00 00 00 	movabs $0x12b2,%rax$/;"	l
a09	echo.asm	/^ a09:	8b 50 08             	mov    0x8(%rax),%edx$/;"	l
a09	grep.asm	/^ a09:	0f b6 00             	movzbl (%rax),%eax$/;"	l
a09	ls.asm	/^     a09:	00 00 00 $/;"	l
a09	mkdir.asm	/^ a09:	48 8b 10             	mov    (%rax),%rdx$/;"	l
a09	rm.asm	/^ a09:	48 8b 10             	mov    (%rax),%rdx$/;"	l
a09	stressfs.asm	/^ a09:	48 b8 a5 05 00 00 00 	movabs $0x5a5,%rax$/;"	l
a09	wc.asm	/^ a09:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax$/;"	l
a0a	cat.asm	/^ a0a:	ff d0                	callq  *%rax$/;"	l
a0a	ln.asm	/^ a0a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
a0a	zombie.asm	/^ a0a:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
a0b	usertests.asm	/^     a0b:	48 ba d1 61 00 00 00 	movabs $0x61d1,%rdx$/;"	l
a0c	cat.asm	/^ a0c:	c7 85 40 ff ff ff 00 	movl   $0x0,-0xc0(%rbp)$/;"	l
a0c	echo.asm	/^ a0c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
a0c	grep.asm	/^ a0c:	0f be c0             	movsbl %al,%eax$/;"	l
a0c	kill.asm	/^ a0c:	75 27                	jne    a35 <free+0x113>$/;"	l
a0c	ls.asm	/^     a0c:	c7 85 44 ff ff ff 00 	movl   $0x0,-0xbc(%rbp)$/;"	l
a0c	mkdir.asm	/^ a0c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
a0c	rm.asm	/^ a0c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
a0d	init.asm	/^ a0d:	00 00 00 $/;"	l
a0d	zombie.asm	/^ a0d:	c1 e0 04             	shl    $0x4,%eax$/;"	l
a0e	kill.asm	/^ a0e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
a0e	ln.asm	/^ a0e:	48 89 10             	mov    %rdx,(%rax)$/;"	l
a0f	grep.asm	/^ a0f:	25 ff 00 00 00       	and    $0xff,%eax$/;"	l
a0f	mount.asm	/^ a0f:	00 00 00 $/;"	l
a0f	sh.asm	/^     a0f:	00 00 00 $/;"	l
a1	cat.asm	/^  a1:	48 ba 99 06 00 00 00 	movabs $0x699,%rdx$/;"	l
a1	init.asm	/^  a1:	00 00 00 $/;"	l
a1	ls.asm	/^      a1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
a1	mount.asm	/^  a1:	48 89 e5             	mov    %rsp,%rbp$/;"	l
a1	stressfs.asm	/^  a1:	bf 01 00 00 00       	mov    $0x1,%edi$/;"	l
a10	echo.asm	/^ a10:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
a10	init.asm	/^ a10:	ff d0                	callq  *%rax$/;"	l
a10	mkdir.asm	/^ a10:	48 89 10             	mov    %rdx,(%rax)$/;"	l
a10	rm.asm	/^ a10:	48 89 10             	mov    %rdx,(%rax)$/;"	l
a10	stressfs.asm	/^ a10:	00 00 00 $/;"	l
a10	wc.asm	/^ a10:	8b 95 20 ff ff ff    	mov    -0xe0(%rbp),%edx$/;"	l
a10	zombie.asm	/^ a10:	89 c7                	mov    %eax,%edi$/;"	l
a11	ln.asm	/^ a11:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
a12	init.asm	/^ a12:	8b 85 3c ff ff ff    	mov    -0xc4(%rbp),%eax$/;"	l
a12	kill.asm	/^ a12:	8b 50 08             	mov    0x8(%rax),%edx$/;"	l
a12	mount.asm	/^ a12:	ff d0                	callq  *%rax$/;"	l
a12	sh.asm	/^     a12:	ff d0                	callq  *%rax$/;"	l
a12	usertests.asm	/^     a12:	00 00 00 $/;"	l
a12	zombie.asm	/^ a12:	48 b8 f3 03 00 00 00 	movabs $0x3f3,%rax$/;"	l
a13	cat.asm	/^ a13:	00 00 00 $/;"	l
a13	echo.asm	/^ a13:	01 c2                	add    %eax,%edx$/;"	l
a13	ls.asm	/^     a13:	00 00 00 $/;"	l
a13	mkdir.asm	/^ a13:	eb 0e                	jmp    a23 <free+0xcf>$/;"	l
a13	rm.asm	/^ a13:	eb 0e                	jmp    a23 <free+0xcf>$/;"	l
a13	stressfs.asm	/^ a13:	ff d0                	callq  *%rax$/;"	l
a14	grep.asm	/^ a14:	89 85 3c ff ff ff    	mov    %eax,-0xc4(%rbp)$/;"	l
a14	mount.asm	/^ a14:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
a14	sh.asm	/^     a14:	89 c0                	mov    %eax,%eax$/;"	l
a15	echo.asm	/^ a15:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
a15	kill.asm	/^ a15:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
a15	ln.asm	/^ a15:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
a15	mkdir.asm	/^ a15:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
a15	rm.asm	/^ a15:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
a15	stressfs.asm	/^ a15:	c7 85 40 ff ff ff 00 	movl   $0x0,-0xc0(%rbp)$/;"	l
a15	usertests.asm	/^     a15:	ff d2                	callq  *%rdx$/;"	l
a16	cat.asm	/^ a16:	83 85 44 ff ff ff 01 	addl   $0x1,-0xbc(%rbp)$/;"	l
a16	ls.asm	/^     a16:	e9 e6 02 00 00       	jmpq   d01 <printf+0x384>$/;"	l
a16	sh.asm	/^     a16:	48 01 d8             	add    %rbx,%rax$/;"	l
a16	wc.asm	/^ a16:	89 d2                	mov    %edx,%edx$/;"	l
a17	usertests.asm	/^     a17:	48 b8 02 60 00 00 00 	movabs $0x6002,%rax$/;"	l
a18	init.asm	/^ a18:	0f be d0             	movsbl %al,%edx$/;"	l
a18	ln.asm	/^ a18:	89 c0                	mov    %eax,%eax$/;"	l
a18	mount.asm	/^ a18:	48 83 7d f8 ff       	cmpq   $0xffffffffffffffff,-0x8(%rbp)$/;"	l
a18	wc.asm	/^ a18:	48 01 d0             	add    %rdx,%rax$/;"	l
a19	echo.asm	/^ a19:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
a19	kill.asm	/^ a19:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
a19	mkdir.asm	/^ a19:	48 8b 10             	mov    (%rax),%rdx$/;"	l
a19	rm.asm	/^ a19:	48 8b 10             	mov    (%rax),%rdx$/;"	l
a19	sh.asm	/^     a19:	48 89 45 e8          	mov    %rax,-0x18(%rbp)$/;"	l
a19	zombie.asm	/^ a19:	00 00 00 $/;"	l
a1a	grep.asm	/^ a1a:	83 bd 40 ff ff ff 00 	cmpl   $0x0,-0xc0(%rbp)$/;"	l
a1a	ln.asm	/^ a1a:	48 c1 e0 04          	shl    $0x4,%rax$/;"	l
a1b	init.asm	/^ a1b:	8b 85 1c ff ff ff    	mov    -0xe4(%rbp),%eax$/;"	l
a1b	ls.asm	/^     a1b:	8b 85 44 ff ff ff    	mov    -0xbc(%rbp),%eax$/;"	l
a1b	wc.asm	/^ a1b:	8b 95 20 ff ff ff    	mov    -0xe0(%rbp),%edx$/;"	l
a1c	echo.asm	/^ a1c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
a1c	kill.asm	/^ a1c:	01 c2                	add    %eax,%edx$/;"	l
a1c	mkdir.asm	/^ a1c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
a1c	rm.asm	/^ a1c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
a1c	stressfs.asm	/^ a1c:	00 00 00 $/;"	l
a1c	zombie.asm	/^ a1c:	ff d0                	callq  *%rax$/;"	l
a1d	cat.asm	/^ a1d:	8b 85 44 ff ff ff    	mov    -0xbc(%rbp),%eax$/;"	l
a1d	mount.asm	/^ a1d:	75 07                	jne    a26 <morecore+0x41>$/;"	l
a1d	sh.asm	/^     a1d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx$/;"	l
a1e	kill.asm	/^ a1e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
a1e	ln.asm	/^ a1e:	48 89 c2             	mov    %rax,%rdx$/;"	l
a1e	usertests.asm	/^     a1e:	00 00 00 $/;"	l
a1e	zombie.asm	/^ a1e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
a1f	mount.asm	/^ a1f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
a1f	stressfs.asm	/^ a1f:	83 85 44 ff ff ff 01 	addl   $0x1,-0xbc(%rbp)$/;"	l
a2	kill.asm	/^  a2:	89 75 f4             	mov    %esi,-0xc(%rbp)$/;"	l
a2	mkdir.asm	/^  a2:	48 b9 af 05 00 00 00 	movabs $0x5af,%rcx$/;"	l
a2	rm.asm	/^  a2:	48 b9 af 05 00 00 00 	movabs $0x5af,%rcx$/;"	l
a2	usertests.asm	/^      a2:	48 be a7 68 00 00 00 	movabs $0x68a7,%rsi$/;"	l
a2	zombie.asm	/^  a2:	75 dc                	jne    80 <strcpy+0x19>$/;"	l
a20	echo.asm	/^ a20:	48 8b 10             	mov    (%rax),%rdx$/;"	l
a20	mkdir.asm	/^ a20:	48 89 10             	mov    %rdx,(%rax)$/;"	l
a20	rm.asm	/^ a20:	48 89 10             	mov    %rdx,(%rax)$/;"	l
a21	grep.asm	/^ a21:	75 3c                	jne    a5f <printf+0x107>$/;"	l
a21	init.asm	/^ a21:	89 d6                	mov    %edx,%esi$/;"	l
a21	ln.asm	/^ a21:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
a21	ls.asm	/^     a21:	48 63 d0             	movslq %eax,%rdx$/;"	l
a21	sh.asm	/^     a21:	48 8d 45 d8          	lea    -0x28(%rbp),%rax$/;"	l
a21	usertests.asm	/^     a21:	ff d0                	callq  *%rax$/;"	l
a21	wc.asm	/^ a21:	83 c2 08             	add    $0x8,%edx$/;"	l
a22	kill.asm	/^ a22:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
a22	zombie.asm	/^ a22:	48 83 7d f8 ff       	cmpq   $0xffffffffffffffff,-0x8(%rbp)$/;"	l
a23	cat.asm	/^ a23:	48 63 d0             	movslq %eax,%rdx$/;"	l
a23	echo.asm	/^ a23:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
a23	grep.asm	/^ a23:	83 bd 3c ff ff ff 25 	cmpl   $0x25,-0xc4(%rbp)$/;"	l
a23	init.asm	/^ a23:	89 c7                	mov    %eax,%edi$/;"	l
a23	mkdir.asm	/^ a23:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
a23	rm.asm	/^ a23:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
a23	usertests.asm	/^     a23:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)$/;"	l
a24	ls.asm	/^     a24:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax$/;"	l
a24	mount.asm	/^ a24:	eb 36                	jmp    a5c <morecore+0x77>$/;"	l
a24	wc.asm	/^ a24:	89 95 20 ff ff ff    	mov    %edx,-0xe0(%rbp)$/;"	l
a25	init.asm	/^ a25:	48 b8 c1 05 00 00 00 	movabs $0x5c1,%rax$/;"	l
a25	kill.asm	/^ a25:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
a25	ln.asm	/^ a25:	48 01 d0             	add    %rdx,%rax$/;"	l
a25	sh.asm	/^     a25:	48 89 d6             	mov    %rdx,%rsi$/;"	l
a26	cat.asm	/^ a26:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax$/;"	l
a26	mount.asm	/^ a26:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
a26	stressfs.asm	/^ a26:	8b 85 44 ff ff ff    	mov    -0xbc(%rbp),%eax$/;"	l
a27	echo.asm	/^ a27:	48 89 10             	mov    %rdx,(%rax)$/;"	l
a27	mkdir.asm	/^ a27:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
a27	rm.asm	/^ a27:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
a27	zombie.asm	/^ a27:	75 07                	jne    a30 <morecore+0x41>$/;"	l
a28	ln.asm	/^ a28:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax$/;"	l
a28	sh.asm	/^     a28:	48 89 c7             	mov    %rax,%rdi$/;"	l
a29	kill.asm	/^ a29:	48 8b 10             	mov    (%rax),%rdx$/;"	l
a29	zombie.asm	/^ a29:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
a2a	echo.asm	/^ a2a:	eb 0b                	jmp    a37 <free+0x11e>$/;"	l
a2a	grep.asm	/^ a2a:	75 0f                	jne    a3b <printf+0xe3>$/;"	l
a2a	mkdir.asm	/^ a2a:	89 c0                	mov    %eax,%eax$/;"	l
a2a	mount.asm	/^ a2a:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
a2a	rm.asm	/^ a2a:	89 c0                	mov    %eax,%eax$/;"	l
a2a	usertests.asm	/^     a2a:	eb 72                	jmp    a9e <writetest1+0x105>$/;"	l
a2a	wc.asm	/^ a2a:	eb 12                	jmp    a3e <printf+0x2f4>$/;"	l
a2b	ls.asm	/^     a2b:	48 01 d0             	add    %rdx,%rax$/;"	l
a2b	sh.asm	/^     a2b:	48 b8 c4 0a 00 00 00 	movabs $0xac4,%rax$/;"	l
a2c	echo.asm	/^ a2c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
a2c	grep.asm	/^ a2c:	c7 85 40 ff ff ff 25 	movl   $0x25,-0xc0(%rbp)$/;"	l
a2c	init.asm	/^ a2c:	00 00 00 $/;"	l
a2c	kill.asm	/^ a2c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
a2c	ln.asm	/^ a2c:	75 27                	jne    a55 <free+0x113>$/;"	l
a2c	mkdir.asm	/^ a2c:	48 c1 e0 04          	shl    $0x4,%rax$/;"	l
a2c	rm.asm	/^ a2c:	48 c1 e0 04          	shl    $0x4,%rax$/;"	l
a2c	stressfs.asm	/^ a2c:	48 63 d0             	movslq %eax,%rdx$/;"	l
a2c	usertests.asm	/^     a2c:	48 b8 40 88 00 00 00 	movabs $0x8840,%rax$/;"	l
a2c	wc.asm	/^ a2c:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax$/;"	l
a2d	cat.asm	/^ a2d:	48 01 d0             	add    %rdx,%rax$/;"	l
a2e	ln.asm	/^ a2e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
a2e	ls.asm	/^     a2e:	0f b6 00             	movzbl (%rax),%eax$/;"	l
a2e	mount.asm	/^ a2e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
a2e	zombie.asm	/^ a2e:	eb 36                	jmp    a66 <morecore+0x77>$/;"	l
a2f	init.asm	/^ a2f:	ff d0                	callq  *%rax$/;"	l
a2f	stressfs.asm	/^ a2f:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax$/;"	l
a3	echo.asm	/^  a3:	8b 55 f0             	mov    -0x10(%rbp),%edx$/;"	l
a3	forktest.asm	/^  a3:	bf 01 00 00 00       	mov    $0x1,%edi$/;"	l
a3	grep.asm	/^  a3:	48 83 c0 01          	add    $0x1,%rax$/;"	l
a3	sh.asm	/^      a3:	48 8b 40 08          	mov    0x8(%rax),%rax$/;"	l
a3	wc.asm	/^  a3:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)$/;"	l
a30	cat.asm	/^ a30:	0f b6 00             	movzbl (%rax),%eax$/;"	l
a30	echo.asm	/^ a30:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
a30	kill.asm	/^ a30:	48 89 10             	mov    %rdx,(%rax)$/;"	l
a30	mkdir.asm	/^ a30:	48 89 c2             	mov    %rax,%rdx$/;"	l
a30	rm.asm	/^ a30:	48 89 c2             	mov    %rax,%rdx$/;"	l
a30	zombie.asm	/^ a30:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
a31	init.asm	/^ a31:	c7 85 40 ff ff ff 00 	movl   $0x0,-0xc0(%rbp)$/;"	l
a31	ls.asm	/^     a31:	0f be c0             	movsbl %al,%eax$/;"	l
a32	ln.asm	/^ a32:	8b 50 08             	mov    0x8(%rax),%edx$/;"	l
a32	mount.asm	/^ a32:	8b 55 ec             	mov    -0x14(%rbp),%edx$/;"	l
a32	sh.asm	/^     a32:	00 00 00 $/;"	l
a33	cat.asm	/^ a33:	84 c0                	test   %al,%al$/;"	l
a33	grep.asm	/^ a33:	00 00 00 $/;"	l
a33	kill.asm	/^ a33:	eb 0b                	jmp    a40 <free+0x11e>$/;"	l
a33	mkdir.asm	/^ a33:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
a33	rm.asm	/^ a33:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
a33	usertests.asm	/^     a33:	00 00 00 $/;"	l
a33	wc.asm	/^ a33:	48 8d 50 08          	lea    0x8(%rax),%rdx$/;"	l
a34	echo.asm	/^ a34:	48 89 10             	mov    %rdx,(%rax)$/;"	l
a34	ls.asm	/^     a34:	25 ff 00 00 00       	and    $0xff,%eax$/;"	l
a34	zombie.asm	/^ a34:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
a35	cat.asm	/^ a35:	0f 85 fc fc ff ff    	jne    737 <printf+0x9e>$/;"	l
a35	kill.asm	/^ a35:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
a35	ln.asm	/^ a35:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
a35	mount.asm	/^ a35:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
a35	sh.asm	/^     a35:	ff d0                	callq  *%rax$/;"	l
a36	grep.asm	/^ a36:	e9 9a 02 00 00       	jmpq   cd5 <printf+0x37d>$/;"	l
a36	stressfs.asm	/^ a36:	48 01 d0             	add    %rdx,%rax$/;"	l
a36	usertests.asm	/^     a36:	8b 55 fc             	mov    -0x4(%rbp),%edx$/;"	l
a37	echo.asm	/^ a37:	48 b8 90 0e 00 00 00 	movabs $0xe90,%rax$/;"	l
a37	mkdir.asm	/^ a37:	48 01 d0             	add    %rdx,%rax$/;"	l
a37	rm.asm	/^ a37:	48 01 d0             	add    %rdx,%rax$/;"	l
a37	sh.asm	/^     a37:	48 89 45 e0          	mov    %rax,-0x20(%rbp)$/;"	l
a37	wc.asm	/^ a37:	48 89 95 28 ff ff ff 	mov    %rdx,-0xd8(%rbp)$/;"	l
a38	init.asm	/^ a38:	00 00 00 $/;"	l
a38	mount.asm	/^ a38:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
a38	zombie.asm	/^ a38:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
a39	kill.asm	/^ a39:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
a39	ln.asm	/^ a39:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
a39	ls.asm	/^     a39:	89 85 3c ff ff ff    	mov    %eax,-0xc4(%rbp)$/;"	l
a39	stressfs.asm	/^ a39:	0f b6 00             	movzbl (%rax),%eax$/;"	l
a39	usertests.asm	/^     a39:	89 10                	mov    %edx,(%rax)$/;"	l
a3a	mkdir.asm	/^ a3a:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax$/;"	l
a3a	rm.asm	/^ a3a:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax$/;"	l
a3b	cat.asm	/^ a3b:	90                   	nop$/;"	l
a3b	grep.asm	/^ a3b:	8b 85 3c ff ff ff    	mov    -0xc4(%rbp),%eax$/;"	l
a3b	init.asm	/^ a3b:	83 85 44 ff ff ff 01 	addl   $0x1,-0xbc(%rbp)$/;"	l
a3b	sh.asm	/^     a3b:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx$/;"	l
a3b	usertests.asm	/^     a3b:	8b 45 f4             	mov    -0xc(%rbp),%eax$/;"	l
a3c	cat.asm	/^ a3c:	c9                   	leaveq $/;"	l
a3c	ln.asm	/^ a3c:	01 c2                	add    %eax,%edx$/;"	l
a3c	mount.asm	/^ a3c:	48 83 c0 10          	add    $0x10,%rax$/;"	l
a3c	stressfs.asm	/^ a3c:	84 c0                	test   %al,%al$/;"	l
a3c	zombie.asm	/^ a3c:	8b 55 ec             	mov    -0x14(%rbp),%edx$/;"	l
a3d	cat.asm	/^ a3d:	c3                   	retq   $/;"	l
a3d	kill.asm	/^ a3d:	48 89 10             	mov    %rdx,(%rax)$/;"	l
a3e	cat.asm	/^ a3e:	55                   	push   %rbp$/;"	l
a3e	echo.asm	/^ a3e:	00 00 00 $/;"	l
a3e	ln.asm	/^ a3e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
a3e	mkdir.asm	/^ a3e:	75 27                	jne    a67 <free+0x113>$/;"	l
a3e	rm.asm	/^ a3e:	75 27                	jne    a67 <free+0x113>$/;"	l
a3e	stressfs.asm	/^ a3e:	0f 85 fc fc ff ff    	jne    740 <printf+0x9e>$/;"	l
a3e	usertests.asm	/^     a3e:	ba 00 02 00 00       	mov    $0x200,%edx$/;"	l
a3e	wc.asm	/^ a3e:	8b 00                	mov    (%rax),%eax$/;"	l
a3f	cat.asm	/^ a3f:	48 89 e5             	mov    %rsp,%rbp$/;"	l
a3f	ls.asm	/^     a3f:	83 bd 40 ff ff ff 00 	cmpl   $0x0,-0xc0(%rbp)$/;"	l
a3f	sh.asm	/^     a3f:	48 8d 45 d8          	lea    -0x28(%rbp),%rax$/;"	l
a3f	zombie.asm	/^ a3f:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
a4	init.asm	/^  a4:	48 bf 63 0d 00 00 00 	movabs $0xd63,%rdi$/;"	l
a4	ln.asm	/^  a4:	00 00 00 $/;"	l
a4	mount.asm	/^  a4:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
a4	zombie.asm	/^  a4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
a40	kill.asm	/^ a40:	48 b8 a0 0e 00 00 00 	movabs $0xea0,%rax$/;"	l
a40	mkdir.asm	/^ a40:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
a40	mount.asm	/^ a40:	48 89 c7             	mov    %rax,%rdi$/;"	l
a40	rm.asm	/^ a40:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
a40	wc.asm	/^ a40:	0f be d0             	movsbl %al,%edx$/;"	l
a41	echo.asm	/^ a41:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx$/;"	l
a41	grep.asm	/^ a41:	0f be d0             	movsbl %al,%edx$/;"	l
a42	cat.asm	/^ a42:	48 83 ec 18          	sub    $0x18,%rsp$/;"	l
a42	init.asm	/^ a42:	8b 85 44 ff ff ff    	mov    -0xbc(%rbp),%eax$/;"	l
a42	ln.asm	/^ a42:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
a42	zombie.asm	/^ a42:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
a43	mount.asm	/^ a43:	48 b8 b3 08 00 00 00 	movabs $0x8b3,%rax$/;"	l
a43	sh.asm	/^     a43:	48 ba ea 1d 00 00 00 	movabs $0x1dea,%rdx$/;"	l
a43	usertests.asm	/^     a43:	48 be 40 88 00 00 00 	movabs $0x8840,%rsi$/;"	l
a43	wc.asm	/^ a43:	8b 85 1c ff ff ff    	mov    -0xe4(%rbp),%eax$/;"	l
a44	grep.asm	/^ a44:	8b 85 1c ff ff ff    	mov    -0xe4(%rbp),%eax$/;"	l
a44	mkdir.asm	/^ a44:	8b 50 08             	mov    0x8(%rax),%edx$/;"	l
a44	rm.asm	/^ a44:	8b 50 08             	mov    0x8(%rax),%edx$/;"	l
a44	stressfs.asm	/^ a44:	90                   	nop$/;"	l
a45	echo.asm	/^ a45:	48 89 10             	mov    %rdx,(%rax)$/;"	l
a45	ln.asm	/^ a45:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
a45	stressfs.asm	/^ a45:	c9                   	leaveq $/;"	l
a46	cat.asm	/^ a46:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
a46	ls.asm	/^     a46:	75 3c                	jne    a84 <printf+0x107>$/;"	l
a46	stressfs.asm	/^ a46:	c3                   	retq   $/;"	l
a46	zombie.asm	/^ a46:	48 83 c0 10          	add    $0x10,%rax$/;"	l
a47	kill.asm	/^ a47:	00 00 00 $/;"	l
a47	mkdir.asm	/^ a47:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
a47	rm.asm	/^ a47:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
a47	stressfs.asm	/^ a47:	55                   	push   %rbp$/;"	l
a48	echo.asm	/^ a48:	90                   	nop$/;"	l
a48	init.asm	/^ a48:	48 63 d0             	movslq %eax,%rdx$/;"	l
a48	ls.asm	/^     a48:	83 bd 3c ff ff ff 25 	cmpl   $0x25,-0xc4(%rbp)$/;"	l
a48	stressfs.asm	/^ a48:	48 89 e5             	mov    %rsp,%rbp$/;"	l
a49	echo.asm	/^ a49:	c9                   	leaveq $/;"	l
a49	ln.asm	/^ a49:	48 8b 10             	mov    (%rax),%rdx$/;"	l
a49	wc.asm	/^ a49:	89 d6                	mov    %edx,%esi$/;"	l
a4a	cat.asm	/^ a4a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
a4a	echo.asm	/^ a4a:	c3                   	retq   $/;"	l
a4a	grep.asm	/^ a4a:	89 d6                	mov    %edx,%esi$/;"	l
a4a	kill.asm	/^ a4a:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx$/;"	l
a4a	mount.asm	/^ a4a:	00 00 00 $/;"	l
a4a	sh.asm	/^     a4a:	00 00 00 $/;"	l
a4a	usertests.asm	/^     a4a:	00 00 00 $/;"	l
a4a	zombie.asm	/^ a4a:	48 89 c7             	mov    %rax,%rdi$/;"	l
a4b	echo.asm	/^ a4b:	55                   	push   %rbp$/;"	l
a4b	init.asm	/^ a4b:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax$/;"	l
a4b	mkdir.asm	/^ a4b:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
a4b	rm.asm	/^ a4b:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
a4b	stressfs.asm	/^ a4b:	48 83 ec 18          	sub    $0x18,%rsp$/;"	l
a4b	wc.asm	/^ a4b:	89 c7                	mov    %eax,%edi$/;"	l
a4c	echo.asm	/^ a4c:	48 89 e5             	mov    %rsp,%rbp$/;"	l
a4c	grep.asm	/^ a4c:	89 c7                	mov    %eax,%edi$/;"	l
a4c	ln.asm	/^ a4c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
a4d	mount.asm	/^ a4d:	ff d0                	callq  *%rax$/;"	l
a4d	sh.asm	/^     a4d:	48 89 ce             	mov    %rcx,%rsi$/;"	l
a4d	usertests.asm	/^     a4d:	89 c7                	mov    %eax,%edi$/;"	l
a4d	wc.asm	/^ a4d:	48 b8 4d 06 00 00 00 	movabs $0x64d,%rax$/;"	l
a4d	zombie.asm	/^ a4d:	48 b8 bd 08 00 00 00 	movabs $0x8bd,%rax$/;"	l
a4e	cat.asm	/^ a4e:	48 83 e8 10          	sub    $0x10,%rax$/;"	l
a4e	grep.asm	/^ a4e:	48 b8 5b 08 00 00 00 	movabs $0x85b,%rax$/;"	l
a4e	kill.asm	/^ a4e:	48 89 10             	mov    %rdx,(%rax)$/;"	l
a4e	mkdir.asm	/^ a4e:	01 c2                	add    %eax,%edx$/;"	l
a4e	rm.asm	/^ a4e:	01 c2                	add    %eax,%edx$/;"	l
a4f	echo.asm	/^ a4f:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
a4f	ls.asm	/^     a4f:	75 0f                	jne    a60 <printf+0xe3>$/;"	l
a4f	mount.asm	/^ a4f:	48 b8 20 0e 00 00 00 	movabs $0xe20,%rax$/;"	l
a4f	stressfs.asm	/^ a4f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
a4f	usertests.asm	/^     a4f:	48 b8 2a 60 00 00 00 	movabs $0x602a,%rax$/;"	l
a5	kill.asm	/^  a5:	89 55 f0             	mov    %edx,-0x10(%rbp)$/;"	l
a5	ls.asm	/^      a5:	48 89 c7             	mov    %rax,%rdi$/;"	l
a50	ln.asm	/^ a50:	48 89 10             	mov    %rdx,(%rax)$/;"	l
a50	mkdir.asm	/^ a50:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
a50	rm.asm	/^ a50:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
a50	sh.asm	/^     a50:	48 89 c7             	mov    %rax,%rdi$/;"	l
a51	kill.asm	/^ a51:	90                   	nop$/;"	l
a51	ls.asm	/^     a51:	c7 85 40 ff ff ff 25 	movl   $0x25,-0xc0(%rbp)$/;"	l
a52	cat.asm	/^ a52:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
a52	init.asm	/^ a52:	48 01 d0             	add    %rdx,%rax$/;"	l
a52	kill.asm	/^ a52:	c9                   	leaveq $/;"	l
a53	echo.asm	/^ a53:	89 7d ec             	mov    %edi,-0x14(%rbp)$/;"	l
a53	kill.asm	/^ a53:	c3                   	retq   $/;"	l
a53	ln.asm	/^ a53:	eb 0b                	jmp    a60 <free+0x11e>$/;"	l
a53	sh.asm	/^     a53:	48 b8 51 09 00 00 00 	movabs $0x951,%rax$/;"	l
a53	stressfs.asm	/^ a53:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
a54	kill.asm	/^ a54:	55                   	push   %rbp$/;"	l
a54	mkdir.asm	/^ a54:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
a54	rm.asm	/^ a54:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
a54	wc.asm	/^ a54:	00 00 00 $/;"	l
a54	zombie.asm	/^ a54:	00 00 00 $/;"	l
a55	grep.asm	/^ a55:	00 00 00 $/;"	l
a55	init.asm	/^ a55:	0f b6 00             	movzbl (%rax),%eax$/;"	l
a55	kill.asm	/^ a55:	48 89 e5             	mov    %rsp,%rbp$/;"	l
a55	ln.asm	/^ a55:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
a56	cat.asm	/^ a56:	48 b8 10 12 00 00 00 	movabs $0x1210,%rax$/;"	l
a56	echo.asm	/^ a56:	81 7d ec ff 0f 00 00 	cmpl   $0xfff,-0x14(%rbp)$/;"	l
a56	mount.asm	/^ a56:	00 00 00 $/;"	l
a56	usertests.asm	/^     a56:	00 00 00 $/;"	l
a57	mkdir.asm	/^ a57:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
a57	rm.asm	/^ a57:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
a57	stressfs.asm	/^ a57:	48 83 e8 10          	sub    $0x10,%rax$/;"	l
a57	wc.asm	/^ a57:	ff d0                	callq  *%rax$/;"	l
a57	zombie.asm	/^ a57:	ff d0                	callq  *%rax$/;"	l
a58	grep.asm	/^ a58:	ff d0                	callq  *%rax$/;"	l
a58	init.asm	/^ a58:	84 c0                	test   %al,%al$/;"	l
a58	kill.asm	/^ a58:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
a58	ls.asm	/^     a58:	00 00 00 $/;"	l
a59	ln.asm	/^ a59:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
a59	mount.asm	/^ a59:	48 8b 00             	mov    (%rax),%rax$/;"	l
a59	usertests.asm	/^     a59:	ff d0                	callq  *%rax$/;"	l
a59	wc.asm	/^ a59:	eb 62                	jmp    abd <printf+0x373>$/;"	l
a59	zombie.asm	/^ a59:	48 b8 30 0e 00 00 00 	movabs $0xe30,%rax$/;"	l
a5a	grep.asm	/^ a5a:	e9 76 02 00 00       	jmpq   cd5 <printf+0x37d>$/;"	l
a5a	init.asm	/^ a5a:	0f 85 fc fc ff ff    	jne    75c <printf+0x9e>$/;"	l
a5a	sh.asm	/^     a5a:	00 00 00 $/;"	l
a5b	ls.asm	/^     a5b:	e9 9a 02 00 00       	jmpq   cfa <printf+0x37d>$/;"	l
a5b	mkdir.asm	/^ a5b:	48 8b 10             	mov    (%rax),%rdx$/;"	l
a5b	rm.asm	/^ a5b:	48 8b 10             	mov    (%rax),%rdx$/;"	l
a5b	stressfs.asm	/^ a5b:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
a5b	usertests.asm	/^     a5b:	3d 00 02 00 00       	cmp    $0x200,%eax$/;"	l
a5b	wc.asm	/^ a5b:	83 bd 3c ff ff ff 25 	cmpl   $0x25,-0xc4(%rbp)$/;"	l
a5c	kill.asm	/^ a5c:	89 7d ec             	mov    %edi,-0x14(%rbp)$/;"	l
a5c	mount.asm	/^ a5c:	c9                   	leaveq $/;"	l
a5d	cat.asm	/^ a5d:	00 00 00 $/;"	l
a5d	echo.asm	/^ a5d:	77 07                	ja     a66 <morecore+0x1b>$/;"	l
a5d	ln.asm	/^ a5d:	48 89 10             	mov    %rdx,(%rax)$/;"	l
a5d	mount.asm	/^ a5d:	c3                   	retq   $/;"	l
a5d	sh.asm	/^     a5d:	ff d0                	callq  *%rax$/;"	l
a5e	mkdir.asm	/^ a5e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
a5e	mount.asm	/^ a5e:	55                   	push   %rbp$/;"	l
a5e	rm.asm	/^ a5e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
a5f	echo.asm	/^ a5f:	c7 45 ec 00 10 00 00 	movl   $0x1000,-0x14(%rbp)$/;"	l
a5f	grep.asm	/^ a5f:	83 bd 40 ff ff ff 25 	cmpl   $0x25,-0xc0(%rbp)$/;"	l
a5f	kill.asm	/^ a5f:	81 7d ec ff 0f 00 00 	cmpl   $0xfff,-0x14(%rbp)$/;"	l
a5f	mount.asm	/^ a5f:	48 89 e5             	mov    %rsp,%rbp$/;"	l
a5f	sh.asm	/^     a5f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
a5f	stressfs.asm	/^ a5f:	48 b8 d0 0f 00 00 00 	movabs $0xfd0,%rax$/;"	l
a6	echo.asm	/^  a6:	8b 45 f4             	mov    -0xc(%rbp),%eax$/;"	l
a6	stressfs.asm	/^  a6:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
a60	cat.asm	/^ a60:	48 8b 00             	mov    (%rax),%rax$/;"	l
a60	init.asm	/^ a60:	90                   	nop$/;"	l
a60	ln.asm	/^ a60:	48 b8 d0 0e 00 00 00 	movabs $0xed0,%rax$/;"	l
a60	ls.asm	/^     a60:	8b 85 3c ff ff ff    	mov    -0xc4(%rbp),%eax$/;"	l
a60	usertests.asm	/^     a60:	74 38                	je     a9a <writetest1+0x101>$/;"	l
a60	zombie.asm	/^ a60:	00 00 00 $/;"	l
a61	init.asm	/^ a61:	c9                   	leaveq $/;"	l
a62	init.asm	/^ a62:	c3                   	retq   $/;"	l
a62	mkdir.asm	/^ a62:	48 89 10             	mov    %rdx,(%rax)$/;"	l
a62	mount.asm	/^ a62:	48 83 ec 30          	sub    $0x30,%rsp$/;"	l
a62	rm.asm	/^ a62:	48 89 10             	mov    %rdx,(%rax)$/;"	l
a62	usertests.asm	/^     a62:	48 b8 08 88 00 00 00 	movabs $0x8808,%rax$/;"	l
a62	wc.asm	/^ a62:	75 21                	jne    a85 <printf+0x33b>$/;"	l
a63	cat.asm	/^ a63:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
a63	init.asm	/^ a63:	55                   	push   %rbp$/;"	l
a63	sh.asm	/^     a63:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax$/;"	l
a63	zombie.asm	/^ a63:	48 8b 00             	mov    (%rax),%rax$/;"	l
a64	init.asm	/^ a64:	48 89 e5             	mov    %rsp,%rbp$/;"	l
a64	wc.asm	/^ a64:	8b 85 3c ff ff ff    	mov    -0xc4(%rbp),%eax$/;"	l
a65	mkdir.asm	/^ a65:	eb 0b                	jmp    a72 <free+0x11e>$/;"	l
a65	rm.asm	/^ a65:	eb 0b                	jmp    a72 <free+0x11e>$/;"	l
a66	echo.asm	/^ a66:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
a66	grep.asm	/^ a66:	0f 85 69 02 00 00    	jne    cd5 <printf+0x37d>$/;"	l
a66	kill.asm	/^ a66:	77 07                	ja     a6f <morecore+0x1b>$/;"	l
a66	ls.asm	/^     a66:	0f be d0             	movsbl %al,%edx$/;"	l
a66	mount.asm	/^ a66:	89 7d dc             	mov    %edi,-0x24(%rbp)$/;"	l
a66	stressfs.asm	/^ a66:	00 00 00 $/;"	l
a66	zombie.asm	/^ a66:	c9                   	leaveq $/;"	l
a67	cat.asm	/^ a67:	eb 2f                	jmp    a98 <free+0x5a>$/;"	l
a67	init.asm	/^ a67:	48 83 ec 18          	sub    $0x18,%rsp$/;"	l
a67	ln.asm	/^ a67:	00 00 00 $/;"	l
a67	mkdir.asm	/^ a67:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
a67	rm.asm	/^ a67:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
a67	sh.asm	/^     a67:	74 3d                	je     aa6 <parsecmd+0xb6>$/;"	l
a67	zombie.asm	/^ a67:	c3                   	retq   $/;"	l
a68	kill.asm	/^ a68:	c7 45 ec 00 10 00 00 	movl   $0x1000,-0x14(%rbp)$/;"	l
a68	zombie.asm	/^ a68:	55                   	push   %rbp$/;"	l
a69	cat.asm	/^ a69:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
a69	echo.asm	/^ a69:	c1 e0 04             	shl    $0x4,%eax$/;"	l
a69	ls.asm	/^     a69:	8b 85 1c ff ff ff    	mov    -0xe4(%rbp),%eax$/;"	l
a69	mount.asm	/^ a69:	8b 45 dc             	mov    -0x24(%rbp),%eax$/;"	l
a69	sh.asm	/^     a69:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
a69	stressfs.asm	/^ a69:	48 8b 00             	mov    (%rax),%rax$/;"	l
a69	usertests.asm	/^     a69:	00 00 00 $/;"	l
a69	zombie.asm	/^ a69:	48 89 e5             	mov    %rsp,%rbp$/;"	l
a6a	ln.asm	/^ a6a:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx$/;"	l
a6a	wc.asm	/^ a6a:	0f be d0             	movsbl %al,%edx$/;"	l
a6b	init.asm	/^ a6b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
a6b	mkdir.asm	/^ a6b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
a6b	rm.asm	/^ a6b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
a6c	echo.asm	/^ a6c:	89 c7                	mov    %eax,%edi$/;"	l
a6c	grep.asm	/^ a6c:	83 bd 3c ff ff ff 64 	cmpl   $0x64,-0xc4(%rbp)$/;"	l
a6c	mount.asm	/^ a6c:	48 83 c0 0f          	add    $0xf,%rax$/;"	l
a6c	stressfs.asm	/^ a6c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
a6c	usertests.asm	/^     a6c:	8b 00                	mov    (%rax),%eax$/;"	l
a6c	zombie.asm	/^ a6c:	48 83 ec 30          	sub    $0x30,%rsp$/;"	l
a6d	cat.asm	/^ a6d:	48 8b 00             	mov    (%rax),%rax$/;"	l
a6d	sh.asm	/^     a6d:	48 89 c2             	mov    %rax,%rdx$/;"	l
a6d	wc.asm	/^ a6d:	8b 85 1c ff ff ff    	mov    -0xe4(%rbp),%eax$/;"	l
a6e	echo.asm	/^ a6e:	48 b8 4f 04 00 00 00 	movabs $0x44f,%rax$/;"	l
a6e	ln.asm	/^ a6e:	48 89 10             	mov    %rdx,(%rax)$/;"	l
a6e	usertests.asm	/^     a6e:	8b 55 fc             	mov    -0x4(%rbp),%edx$/;"	l
a6f	init.asm	/^ a6f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
a6f	kill.asm	/^ a6f:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
a6f	ls.asm	/^     a6f:	89 d6                	mov    %edx,%esi$/;"	l
a6f	mkdir.asm	/^ a6f:	48 89 10             	mov    %rdx,(%rax)$/;"	l
a6f	rm.asm	/^ a6f:	48 89 10             	mov    %rdx,(%rax)$/;"	l
a7	grep.asm	/^  a7:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
a7	ln.asm	/^  a7:	41 ff d0             	callq  *%r8$/;"	l
a7	sh.asm	/^      a7:	48 89 c2             	mov    %rax,%rdx$/;"	l
a7	wc.asm	/^  a7:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
a70	cat.asm	/^ a70:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax$/;"	l
a70	mount.asm	/^ a70:	48 c1 e8 04          	shr    $0x4,%rax$/;"	l
a70	sh.asm	/^     a70:	48 be eb 1d 00 00 00 	movabs $0x1deb,%rsi$/;"	l
a70	stressfs.asm	/^ a70:	eb 2f                	jmp    aa1 <free+0x5a>$/;"	l
a70	zombie.asm	/^ a70:	89 7d dc             	mov    %edi,-0x24(%rbp)$/;"	l
a71	ln.asm	/^ a71:	90                   	nop$/;"	l
a71	ls.asm	/^     a71:	89 c7                	mov    %eax,%edi$/;"	l
a71	usertests.asm	/^     a71:	48 be 72 6b 00 00 00 	movabs $0x6b72,%rsi$/;"	l
a72	kill.asm	/^ a72:	c1 e0 04             	shl    $0x4,%eax$/;"	l
a72	ln.asm	/^ a72:	c9                   	leaveq $/;"	l
a72	mkdir.asm	/^ a72:	48 b8 f0 0e 00 00 00 	movabs $0xef0,%rax$/;"	l
a72	rm.asm	/^ a72:	48 b8 f0 0e 00 00 00 	movabs $0xef0,%rax$/;"	l
a72	stressfs.asm	/^ a72:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
a73	grep.asm	/^ a73:	75 65                	jne    ada <printf+0x182>$/;"	l
a73	init.asm	/^ a73:	48 83 e8 10          	sub    $0x10,%rax$/;"	l
a73	ln.asm	/^ a73:	c3                   	retq   $/;"	l
a73	ls.asm	/^     a73:	48 b8 80 08 00 00 00 	movabs $0x880,%rax$/;"	l
a73	wc.asm	/^ a73:	89 d6                	mov    %edx,%esi$/;"	l
a73	zombie.asm	/^ a73:	8b 45 dc             	mov    -0x24(%rbp),%eax$/;"	l
a74	cat.asm	/^ a74:	77 17                	ja     a8d <free+0x4f>$/;"	l
a74	ln.asm	/^ a74:	55                   	push   %rbp$/;"	l
a74	mount.asm	/^ a74:	83 c0 01             	add    $0x1,%eax$/;"	l
a75	echo.asm	/^ a75:	00 00 00 $/;"	l
a75	grep.asm	/^ a75:	8b 85 20 ff ff ff    	mov    -0xe0(%rbp),%eax$/;"	l
a75	kill.asm	/^ a75:	89 c7                	mov    %eax,%edi$/;"	l
a75	ln.asm	/^ a75:	48 89 e5             	mov    %rsp,%rbp$/;"	l
a75	wc.asm	/^ a75:	89 c7                	mov    %eax,%edi$/;"	l
a76	cat.asm	/^ a76:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
a76	stressfs.asm	/^ a76:	48 8b 00             	mov    (%rax),%rax$/;"	l
a76	zombie.asm	/^ a76:	48 83 c0 0f          	add    $0xf,%rax$/;"	l
a77	init.asm	/^ a77:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
a77	kill.asm	/^ a77:	48 b8 58 04 00 00 00 	movabs $0x458,%rax$/;"	l
a77	mount.asm	/^ a77:	89 45 ec             	mov    %eax,-0x14(%rbp)$/;"	l
a77	sh.asm	/^     a77:	00 00 00 $/;"	l
a77	wc.asm	/^ a77:	48 b8 4d 06 00 00 00 	movabs $0x64d,%rax$/;"	l
a78	echo.asm	/^ a78:	ff d0                	callq  *%rax$/;"	l
a78	ln.asm	/^ a78:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
a78	usertests.asm	/^     a78:	00 00 00 $/;"	l
a79	mkdir.asm	/^ a79:	00 00 00 $/;"	l
a79	rm.asm	/^ a79:	00 00 00 $/;"	l
a79	stressfs.asm	/^ a79:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax$/;"	l
a7a	cat.asm	/^ a7a:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax$/;"	l
a7a	echo.asm	/^ a7a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
a7a	ls.asm	/^     a7a:	00 00 00 $/;"	l
a7a	mount.asm	/^ a7a:	48 b8 20 0e 00 00 00 	movabs $0xe20,%rax$/;"	l
a7a	sh.asm	/^     a7a:	bf 02 00 00 00       	mov    $0x2,%edi$/;"	l
a7a	zombie.asm	/^ a7a:	48 c1 e8 04          	shr    $0x4,%rax$/;"	l
a7b	grep.asm	/^ a7b:	83 f8 30             	cmp    $0x30,%eax$/;"	l
a7b	init.asm	/^ a7b:	48 b8 50 10 00 00 00 	movabs $0x1050,%rax$/;"	l
a7b	usertests.asm	/^     a7b:	89 c7                	mov    %eax,%edi$/;"	l
a7c	ln.asm	/^ a7c:	89 7d ec             	mov    %edi,-0x14(%rbp)$/;"	l
a7c	mkdir.asm	/^ a7c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx$/;"	l
a7c	rm.asm	/^ a7c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx$/;"	l
a7d	ls.asm	/^     a7d:	ff d0                	callq  *%rax$/;"	l
a7d	stressfs.asm	/^ a7d:	77 17                	ja     a96 <free+0x4f>$/;"	l
a7d	usertests.asm	/^     a7d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
a7e	cat.asm	/^ a7e:	77 2f                	ja     aaf <free+0x71>$/;"	l
a7e	echo.asm	/^ a7e:	48 83 7d f8 ff       	cmpq   $0xffffffffffffffff,-0x8(%rbp)$/;"	l
a7e	grep.asm	/^ a7e:	73 23                	jae    aa3 <printf+0x14b>$/;"	l
a7e	kill.asm	/^ a7e:	00 00 00 $/;"	l
a7e	wc.asm	/^ a7e:	00 00 00 $/;"	l
a7e	zombie.asm	/^ a7e:	83 c0 01             	add    $0x1,%eax$/;"	l
a7f	ln.asm	/^ a7f:	81 7d ec ff 0f 00 00 	cmpl   $0xfff,-0x14(%rbp)$/;"	l
a7f	ls.asm	/^     a7f:	e9 76 02 00 00       	jmpq   cfa <printf+0x37d>$/;"	l
a7f	sh.asm	/^     a7f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
a7f	stressfs.asm	/^ a7f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
a8	cat.asm	/^  a8:	00 00 00 $/;"	l
a8	forktest.asm	/^  a8:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
a8	kill.asm	/^  a8:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx$/;"	l
a8	ls.asm	/^      a8:	48 b8 62 05 00 00 00 	movabs $0x562,%rax$/;"	l
a8	mount.asm	/^  a8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)$/;"	l
a8	zombie.asm	/^  a8:	c9                   	leaveq $/;"	l
a80	cat.asm	/^ a80:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
a80	grep.asm	/^ a80:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax$/;"	l
a80	mkdir.asm	/^ a80:	48 89 10             	mov    %rdx,(%rax)$/;"	l
a80	rm.asm	/^ a80:	48 89 10             	mov    %rdx,(%rax)$/;"	l
a81	kill.asm	/^ a81:	ff d0                	callq  *%rax$/;"	l
a81	mount.asm	/^ a81:	00 00 00 $/;"	l
a81	wc.asm	/^ a81:	ff d0                	callq  *%rax$/;"	l
a81	zombie.asm	/^ a81:	89 45 ec             	mov    %eax,-0x14(%rbp)$/;"	l
a82	init.asm	/^ a82:	00 00 00 $/;"	l
a82	usertests.asm	/^     a82:	48 b9 d1 61 00 00 00 	movabs $0x61d1,%rcx$/;"	l
a83	echo.asm	/^ a83:	75 07                	jne    a8c <morecore+0x41>$/;"	l
a83	kill.asm	/^ a83:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
a83	mkdir.asm	/^ a83:	90                   	nop$/;"	l
a83	rm.asm	/^ a83:	90                   	nop$/;"	l
a83	stressfs.asm	/^ a83:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax$/;"	l
a83	wc.asm	/^ a83:	eb 38                	jmp    abd <printf+0x373>$/;"	l
a84	cat.asm	/^ a84:	48 8b 00             	mov    (%rax),%rax$/;"	l
a84	ls.asm	/^     a84:	83 bd 40 ff ff ff 25 	cmpl   $0x25,-0xc0(%rbp)$/;"	l
a84	mkdir.asm	/^ a84:	c9                   	leaveq $/;"	l
a84	mount.asm	/^ a84:	48 8b 00             	mov    (%rax),%rax$/;"	l
a84	rm.asm	/^ a84:	c9                   	leaveq $/;"	l
a84	sh.asm	/^     a84:	48 b9 cd 16 00 00 00 	movabs $0x16cd,%rcx$/;"	l
a84	zombie.asm	/^ a84:	48 b8 30 0e 00 00 00 	movabs $0xe30,%rax$/;"	l
a85	echo.asm	/^ a85:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
a85	init.asm	/^ a85:	48 8b 00             	mov    (%rax),%rax$/;"	l
a85	mkdir.asm	/^ a85:	c3                   	retq   $/;"	l
a85	rm.asm	/^ a85:	c3                   	retq   $/;"	l
a85	wc.asm	/^ a85:	8b 85 1c ff ff ff    	mov    -0xe4(%rbp),%eax$/;"	l
a86	ln.asm	/^ a86:	77 07                	ja     a8f <morecore+0x1b>$/;"	l
a86	mkdir.asm	/^ a86:	55                   	push   %rbp$/;"	l
a86	rm.asm	/^ a86:	55                   	push   %rbp$/;"	l
a87	cat.asm	/^ a87:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax$/;"	l
a87	grep.asm	/^ a87:	8b 95 20 ff ff ff    	mov    -0xe0(%rbp),%edx$/;"	l
a87	kill.asm	/^ a87:	48 83 7d f8 ff       	cmpq   $0xffffffffffffffff,-0x8(%rbp)$/;"	l
a87	mkdir.asm	/^ a87:	48 89 e5             	mov    %rsp,%rbp$/;"	l
a87	mount.asm	/^ a87:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
a87	rm.asm	/^ a87:	48 89 e5             	mov    %rsp,%rbp$/;"	l
a87	stressfs.asm	/^ a87:	77 2f                	ja     ab8 <free+0x71>$/;"	l
a88	init.asm	/^ a88:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
a88	ln.asm	/^ a88:	c7 45 ec 00 10 00 00 	movl   $0x1000,-0x14(%rbp)$/;"	l
a89	stressfs.asm	/^ a89:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
a89	usertests.asm	/^     a89:	00 00 00 $/;"	l
a8a	echo.asm	/^ a8a:	eb 36                	jmp    ac2 <morecore+0x77>$/;"	l
a8a	mkdir.asm	/^ a8a:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
a8a	rm.asm	/^ a8a:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
a8b	cat.asm	/^ a8b:	77 22                	ja     aaf <free+0x71>$/;"	l
a8b	ls.asm	/^     a8b:	0f 85 69 02 00 00    	jne    cfa <printf+0x37d>$/;"	l
a8b	mount.asm	/^ a8b:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)$/;"	l
a8b	sh.asm	/^     a8b:	00 00 00 $/;"	l
a8b	wc.asm	/^ a8b:	be 25 00 00 00       	mov    $0x25,%esi$/;"	l
a8b	zombie.asm	/^ a8b:	00 00 00 $/;"	l
a8c	echo.asm	/^ a8c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
a8c	init.asm	/^ a8c:	eb 2f                	jmp    abd <free+0x5a>$/;"	l
a8c	kill.asm	/^ a8c:	75 07                	jne    a95 <morecore+0x41>$/;"	l
a8c	usertests.asm	/^     a8c:	ff d1                	callq  *%rcx$/;"	l
a8d	cat.asm	/^ a8d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
a8d	grep.asm	/^ a8d:	89 d2                	mov    %edx,%edx$/;"	l
a8d	stressfs.asm	/^ a8d:	48 8b 00             	mov    (%rax),%rax$/;"	l
a8e	init.asm	/^ a8e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
a8e	kill.asm	/^ a8e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
a8e	mkdir.asm	/^ a8e:	89 7d ec             	mov    %edi,-0x14(%rbp)$/;"	l
a8e	rm.asm	/^ a8e:	89 7d ec             	mov    %edi,-0x14(%rbp)$/;"	l
a8e	sh.asm	/^     a8e:	ff d1                	callq  *%rcx$/;"	l
a8e	usertests.asm	/^     a8e:	48 b8 02 60 00 00 00 	movabs $0x6002,%rax$/;"	l
a8e	zombie.asm	/^ a8e:	48 8b 00             	mov    (%rax),%rax$/;"	l
a8f	grep.asm	/^ a8f:	48 01 d0             	add    %rdx,%rax$/;"	l
a8f	ln.asm	/^ a8f:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
a9	echo.asm	/^  a9:	48 89 ce             	mov    %rcx,%rsi$/;"	l
a9	mkdir.asm	/^  a9:	00 00 00 $/;"	l
a9	rm.asm	/^  a9:	00 00 00 $/;"	l
a9	usertests.asm	/^      a9:	00 00 00 $/;"	l
a9	zombie.asm	/^  a9:	c3                   	retq   $/;"	l
a90	echo.asm	/^ a90:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
a90	mount.asm	/^ a90:	75 4a                	jne    adc <malloc+0x7e>$/;"	l
a90	sh.asm	/^     a90:	48 bf fa 1d 00 00 00 	movabs $0x1dfa,%rdi$/;"	l
a90	stressfs.asm	/^ a90:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax$/;"	l
a90	wc.asm	/^ a90:	89 c7                	mov    %eax,%edi$/;"	l
a91	cat.asm	/^ a91:	48 8b 00             	mov    (%rax),%rax$/;"	l
a91	ls.asm	/^     a91:	83 bd 3c ff ff ff 64 	cmpl   $0x64,-0xc4(%rbp)$/;"	l
a91	mkdir.asm	/^ a91:	81 7d ec ff 0f 00 00 	cmpl   $0xfff,-0x14(%rbp)$/;"	l
a91	rm.asm	/^ a91:	81 7d ec ff 0f 00 00 	cmpl   $0xfff,-0x14(%rbp)$/;"	l
a91	zombie.asm	/^ a91:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
a92	grep.asm	/^ a92:	8b 95 20 ff ff ff    	mov    -0xe0(%rbp),%edx$/;"	l
a92	init.asm	/^ a92:	48 8b 00             	mov    (%rax),%rax$/;"	l
a92	ln.asm	/^ a92:	c1 e0 04             	shl    $0x4,%eax$/;"	l
a92	mount.asm	/^ a92:	48 b8 10 0e 00 00 00 	movabs $0xe10,%rax$/;"	l
a92	wc.asm	/^ a92:	48 b8 4d 06 00 00 00 	movabs $0x64d,%rax$/;"	l
a93	kill.asm	/^ a93:	eb 36                	jmp    acb <morecore+0x77>$/;"	l
a94	cat.asm	/^ a94:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
a94	echo.asm	/^ a94:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
a94	stressfs.asm	/^ a94:	77 22                	ja     ab8 <free+0x71>$/;"	l
a95	init.asm	/^ a95:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax$/;"	l
a95	kill.asm	/^ a95:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
a95	ln.asm	/^ a95:	89 c7                	mov    %eax,%edi$/;"	l
a95	usertests.asm	/^     a95:	00 00 00 $/;"	l
a95	zombie.asm	/^ a95:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)$/;"	l
a96	stressfs.asm	/^ a96:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
a97	ln.asm	/^ a97:	48 b8 78 04 00 00 00 	movabs $0x478,%rax$/;"	l
a97	sh.asm	/^     a97:	00 00 00 $/;"	l
a98	cat.asm	/^ a98:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
a98	echo.asm	/^ a98:	8b 55 ec             	mov    -0x14(%rbp),%edx$/;"	l
a98	grep.asm	/^ a98:	83 c2 08             	add    $0x8,%edx$/;"	l
a98	ls.asm	/^     a98:	75 65                	jne    aff <printf+0x182>$/;"	l
a98	mkdir.asm	/^ a98:	77 07                	ja     aa1 <morecore+0x1b>$/;"	l
a98	rm.asm	/^ a98:	77 07                	ja     aa1 <morecore+0x1b>$/;"	l
a98	usertests.asm	/^     a98:	ff d0                	callq  *%rax$/;"	l
a99	init.asm	/^ a99:	77 17                	ja     ab2 <free+0x4f>$/;"	l
a99	kill.asm	/^ a99:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
a99	mount.asm	/^ a99:	00 00 00 $/;"	l
a99	wc.asm	/^ a99:	00 00 00 $/;"	l
a9a	ls.asm	/^     a9a:	8b 85 20 ff ff ff    	mov    -0xe0(%rbp),%eax$/;"	l
a9a	mkdir.asm	/^ a9a:	c7 45 ec 00 10 00 00 	movl   $0x1000,-0x14(%rbp)$/;"	l
a9a	rm.asm	/^ a9a:	c7 45 ec 00 10 00 00 	movl   $0x1000,-0x14(%rbp)$/;"	l
a9a	sh.asm	/^     a9a:	48 b8 26 05 00 00 00 	movabs $0x526,%rax$/;"	l
a9a	stressfs.asm	/^ a9a:	48 8b 00             	mov    (%rax),%rax$/;"	l
a9a	usertests.asm	/^     a9a:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)$/;"	l
a9a	zombie.asm	/^ a9a:	75 4a                	jne    ae6 <malloc+0x7e>$/;"	l
a9b	echo.asm	/^ a9b:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
a9b	grep.asm	/^ a9b:	89 95 20 ff ff ff    	mov    %edx,-0xe0(%rbp)$/;"	l
a9b	init.asm	/^ a9b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
a9c	cat.asm	/^ a9c:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax$/;"	l
a9c	mount.asm	/^ a9c:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
a9c	wc.asm	/^ a9c:	ff d0                	callq  *%rax$/;"	l
a9c	zombie.asm	/^ a9c:	48 b8 20 0e 00 00 00 	movabs $0xe20,%rax$/;"	l
a9d	kill.asm	/^ a9d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
a9d	stressfs.asm	/^ a9d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
a9e	echo.asm	/^ a9e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
a9e	ln.asm	/^ a9e:	00 00 00 $/;"	l
a9e	usertests.asm	/^     a9e:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
a9e	wc.asm	/^ a9e:	8b 85 3c ff ff ff    	mov    -0xc4(%rbp),%eax$/;"	l
a9f	init.asm	/^ a9f:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax$/;"	l
aa	ln.asm	/^  aa:	48 b8 ce 03 00 00 00 	movabs $0x3ce,%rax$/;"	l
aa	sh.asm	/^      aa:	48 be 6f 1d 00 00 00 	movabs $0x1d6f,%rsi$/;"	l
aa	wc.asm	/^  aa:	3b 45 e8             	cmp    -0x18(%rbp),%eax$/;"	l
aa	zombie.asm	/^  aa:	55                   	push   %rbp$/;"	l
aa0	cat.asm	/^ aa0:	76 c7                	jbe    a69 <free+0x2b>$/;"	l
aa0	ls.asm	/^     aa0:	83 f8 30             	cmp    $0x30,%eax$/;"	l
aa0	mount.asm	/^ aa0:	48 b8 20 0e 00 00 00 	movabs $0xe20,%rax$/;"	l
aa1	grep.asm	/^ aa1:	eb 12                	jmp    ab5 <printf+0x15d>$/;"	l
aa1	kill.asm	/^ aa1:	8b 55 ec             	mov    -0x14(%rbp),%edx$/;"	l
aa1	ln.asm	/^ aa1:	ff d0                	callq  *%rax$/;"	l
aa1	mkdir.asm	/^ aa1:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
aa1	rm.asm	/^ aa1:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
aa1	sh.asm	/^     aa1:	00 00 00 $/;"	l
aa1	stressfs.asm	/^ aa1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
aa1	usertests.asm	/^     aa1:	3d 8b 00 00 00       	cmp    $0x8b,%eax$/;"	l
aa2	cat.asm	/^ aa2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
aa2	echo.asm	/^ aa2:	48 83 c0 10          	add    $0x10,%rax$/;"	l
aa3	grep.asm	/^ aa3:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax$/;"	l
aa3	init.asm	/^ aa3:	77 2f                	ja     ad4 <free+0x71>$/;"	l
aa3	ln.asm	/^ aa3:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
aa3	ls.asm	/^     aa3:	73 23                	jae    ac8 <printf+0x14b>$/;"	l
aa3	zombie.asm	/^ aa3:	00 00 00 $/;"	l
aa4	kill.asm	/^ aa4:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
aa4	mkdir.asm	/^ aa4:	c1 e0 04             	shl    $0x4,%eax$/;"	l
aa4	rm.asm	/^ aa4:	c1 e0 04             	shl    $0x4,%eax$/;"	l
aa4	sh.asm	/^     aa4:	ff d0                	callq  *%rax$/;"	l
aa4	wc.asm	/^ aa4:	0f be d0             	movsbl %al,%edx$/;"	l
aa5	init.asm	/^ aa5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
aa5	ls.asm	/^     aa5:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax$/;"	l
aa5	stressfs.asm	/^ aa5:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax$/;"	l
aa6	cat.asm	/^ aa6:	48 8b 00             	mov    (%rax),%rax$/;"	l
aa6	echo.asm	/^ aa6:	48 89 c7             	mov    %rax,%rdi$/;"	l
aa6	sh.asm	/^     aa6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
aa6	usertests.asm	/^     aa6:	76 84                	jbe    a2c <writetest1+0x93>$/;"	l
aa6	zombie.asm	/^ aa6:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
aa7	kill.asm	/^ aa7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
aa7	ln.asm	/^ aa7:	48 83 7d f8 ff       	cmpq   $0xffffffffffffffff,-0x8(%rbp)$/;"	l
aa7	mkdir.asm	/^ aa7:	89 c7                	mov    %eax,%edi$/;"	l
aa7	mount.asm	/^ aa7:	00 00 00 $/;"	l
aa7	rm.asm	/^ aa7:	89 c7                	mov    %eax,%edi$/;"	l
aa7	wc.asm	/^ aa7:	8b 85 1c ff ff ff    	mov    -0xe4(%rbp),%eax$/;"	l
aa8	usertests.asm	/^     aa8:	8b 45 f4             	mov    -0xc(%rbp),%eax$/;"	l
aa9	cat.asm	/^ aa9:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax$/;"	l
aa9	echo.asm	/^ aa9:	48 b8 19 09 00 00 00 	movabs $0x919,%rax$/;"	l
aa9	init.asm	/^ aa9:	48 8b 00             	mov    (%rax),%rax$/;"	l
aa9	mkdir.asm	/^ aa9:	48 b8 8a 04 00 00 00 	movabs $0x48a,%rax$/;"	l
aa9	rm.asm	/^ aa9:	48 b8 8a 04 00 00 00 	movabs $0x48a,%rax$/;"	l
aa9	stressfs.asm	/^ aa9:	76 c7                	jbe    a72 <free+0x2b>$/;"	l
aaa	grep.asm	/^ aaa:	48 8d 50 08          	lea    0x8(%rax),%rdx$/;"	l
aaa	mount.asm	/^ aaa:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
aaa	sh.asm	/^     aaa:	48 89 c7             	mov    %rax,%rdi$/;"	l
aaa	zombie.asm	/^ aaa:	48 b8 30 0e 00 00 00 	movabs $0xe30,%rax$/;"	l
aab	kill.asm	/^ aab:	48 83 c0 10          	add    $0x10,%rax$/;"	l
aab	stressfs.asm	/^ aab:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
aab	usertests.asm	/^     aab:	89 c7                	mov    %eax,%edi$/;"	l
aac	init.asm	/^ aac:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax$/;"	l
aac	ln.asm	/^ aac:	75 07                	jne    ab5 <morecore+0x41>$/;"	l
aac	ls.asm	/^     aac:	8b 95 20 ff ff ff    	mov    -0xe0(%rbp),%edx$/;"	l
aad	cat.asm	/^ aad:	76 ba                	jbe    a69 <free+0x2b>$/;"	l
aad	sh.asm	/^     aad:	48 b8 95 10 00 00 00 	movabs $0x1095,%rax$/;"	l
aad	usertests.asm	/^     aad:	48 b8 34 60 00 00 00 	movabs $0x6034,%rax$/;"	l
aad	wc.asm	/^ aad:	89 d6                	mov    %edx,%esi$/;"	l
aae	grep.asm	/^ aae:	48 89 95 28 ff ff ff 	mov    %rdx,-0xd8(%rbp)$/;"	l
aae	ln.asm	/^ aae:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
aae	mount.asm	/^ aae:	48 89 10             	mov    %rdx,(%rax)$/;"	l
aaf	cat.asm	/^ aaf:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
aaf	kill.asm	/^ aaf:	48 89 c7             	mov    %rax,%rdi$/;"	l
aaf	stressfs.asm	/^ aaf:	48 8b 00             	mov    (%rax),%rax$/;"	l
aaf	wc.asm	/^ aaf:	89 c7                	mov    %eax,%edi$/;"	l
ab	cat.asm	/^  ab:	ff d2                	callq  *%rdx$/;"	l
ab	grep.asm	/^  ab:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ab	init.asm	/^  ab:	00 00 00 $/;"	l
ab	stressfs.asm	/^  ab:	48 b9 a2 06 00 00 00 	movabs $0x6a2,%rcx$/;"	l
ab	zombie.asm	/^  ab:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ab0	echo.asm	/^ ab0:	00 00 00 $/;"	l
ab0	init.asm	/^ ab0:	77 22                	ja     ad4 <free+0x71>$/;"	l
ab0	mkdir.asm	/^ ab0:	00 00 00 $/;"	l
ab0	rm.asm	/^ ab0:	00 00 00 $/;"	l
ab1	mount.asm	/^ ab1:	48 b8 20 0e 00 00 00 	movabs $0xe20,%rax$/;"	l
ab1	wc.asm	/^ ab1:	48 b8 4d 06 00 00 00 	movabs $0x64d,%rax$/;"	l
ab1	zombie.asm	/^ ab1:	00 00 00 $/;"	l
ab2	init.asm	/^ ab2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ab2	kill.asm	/^ ab2:	48 b8 22 09 00 00 00 	movabs $0x922,%rax$/;"	l
ab2	ls.asm	/^     ab2:	89 d2                	mov    %edx,%edx$/;"	l
ab2	stressfs.asm	/^ ab2:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax$/;"	l
ab3	cat.asm	/^ ab3:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
ab3	echo.asm	/^ ab3:	ff d0                	callq  *%rax$/;"	l
ab3	ln.asm	/^ ab3:	eb 36                	jmp    aeb <morecore+0x77>$/;"	l
ab3	mkdir.asm	/^ ab3:	ff d0                	callq  *%rax$/;"	l
ab3	rm.asm	/^ ab3:	ff d0                	callq  *%rax$/;"	l
ab4	ls.asm	/^     ab4:	48 01 d0             	add    %rdx,%rax$/;"	l
ab4	sh.asm	/^     ab4:	00 00 00 $/;"	l
ab4	usertests.asm	/^     ab4:	00 00 00 $/;"	l
ab4	zombie.asm	/^ ab4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
ab5	echo.asm	/^ ab5:	48 b8 90 0e 00 00 00 	movabs $0xe90,%rax$/;"	l
ab5	grep.asm	/^ ab5:	8b 30                	mov    (%rax),%esi$/;"	l
ab5	ln.asm	/^ ab5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ab5	mkdir.asm	/^ ab5:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ab5	rm.asm	/^ ab5:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ab6	cat.asm	/^ ab6:	89 c0                	mov    %eax,%eax$/;"	l
ab6	init.asm	/^ ab6:	48 8b 00             	mov    (%rax),%rax$/;"	l
ab6	stressfs.asm	/^ ab6:	76 ba                	jbe    a72 <free+0x2b>$/;"	l
ab7	grep.asm	/^ ab7:	8b 85 1c ff ff ff    	mov    -0xe4(%rbp),%eax$/;"	l
ab7	ls.asm	/^     ab7:	8b 95 20 ff ff ff    	mov    -0xe0(%rbp),%edx$/;"	l
ab7	sh.asm	/^     ab7:	ff d0                	callq  *%rax$/;"	l
ab7	usertests.asm	/^     ab7:	ff d0                	callq  *%rax$/;"	l
ab8	cat.asm	/^ ab8:	48 c1 e0 04          	shl    $0x4,%rax$/;"	l
ab8	mount.asm	/^ ab8:	00 00 00 $/;"	l
ab8	stressfs.asm	/^ ab8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ab8	wc.asm	/^ ab8:	00 00 00 $/;"	l
ab8	zombie.asm	/^ ab8:	48 89 10             	mov    %rdx,(%rax)$/;"	l
ab9	init.asm	/^ ab9:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ab9	kill.asm	/^ ab9:	00 00 00 $/;"	l
ab9	ln.asm	/^ ab9:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ab9	mkdir.asm	/^ ab9:	48 83 7d f8 ff       	cmpq   $0xffffffffffffffff,-0x8(%rbp)$/;"	l
ab9	rm.asm	/^ ab9:	48 83 7d f8 ff       	cmpq   $0xffffffffffffffff,-0x8(%rbp)$/;"	l
ab9	sh.asm	/^     ab9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ab9	usertests.asm	/^     ab9:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
abb	mount.asm	/^ abb:	48 8b 10             	mov    (%rax),%rdx$/;"	l
abb	wc.asm	/^ abb:	ff d0                	callq  *%rax$/;"	l
abb	zombie.asm	/^ abb:	48 b8 30 0e 00 00 00 	movabs $0xe30,%rax$/;"	l
abc	cat.asm	/^ abc:	48 89 c2             	mov    %rax,%rdx$/;"	l
abc	echo.asm	/^ abc:	00 00 00 $/;"	l
abc	kill.asm	/^ abc:	ff d0                	callq  *%rax$/;"	l
abc	stressfs.asm	/^ abc:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
abd	grep.asm	/^ abd:	b9 01 00 00 00       	mov    $0x1,%ecx$/;"	l
abd	init.asm	/^ abd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
abd	ln.asm	/^ abd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
abd	ls.asm	/^     abd:	83 c2 08             	add    $0x8,%edx$/;"	l
abd	sh.asm	/^     abd:	48 83 c4 28          	add    $0x28,%rsp$/;"	l
abd	wc.asm	/^ abd:	c7 85 40 ff ff ff 00 	movl   $0x0,-0xc0(%rbp)$/;"	l
abe	kill.asm	/^ abe:	48 b8 a0 0e 00 00 00 	movabs $0xea0,%rax$/;"	l
abe	mkdir.asm	/^ abe:	75 07                	jne    ac7 <morecore+0x41>$/;"	l
abe	mount.asm	/^ abe:	48 b8 10 0e 00 00 00 	movabs $0xe10,%rax$/;"	l
abe	rm.asm	/^ abe:	75 07                	jne    ac7 <morecore+0x41>$/;"	l
abe	usertests.asm	/^     abe:	48 bf 54 6b 00 00 00 	movabs $0x6b54,%rdi$/;"	l
abf	cat.asm	/^ abf:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
abf	echo.asm	/^ abf:	48 8b 00             	mov    (%rax),%rax$/;"	l
abf	stressfs.asm	/^ abf:	89 c0                	mov    %eax,%eax$/;"	l
ac	echo.asm	/^  ac:	48 89 f7             	mov    %rsi,%rdi$/;"	l
ac	kill.asm	/^  ac:	8b 55 f0             	mov    -0x10(%rbp),%edx$/;"	l
ac	mkdir.asm	/^  ac:	ff d1                	callq  *%rcx$/;"	l
ac	mount.asm	/^  ac:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)$/;"	l
ac	rm.asm	/^  ac:	ff d1                	callq  *%rcx$/;"	l
ac	usertests.asm	/^      ac:	89 c7                	mov    %eax,%edi$/;"	l
ac0	ls.asm	/^     ac0:	89 95 20 ff ff ff    	mov    %edx,-0xe0(%rbp)$/;"	l
ac0	mkdir.asm	/^ ac0:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ac0	rm.asm	/^ ac0:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ac1	init.asm	/^ ac1:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax$/;"	l
ac1	ln.asm	/^ ac1:	8b 55 ec             	mov    -0x14(%rbp),%edx$/;"	l
ac1	sh.asm	/^     ac1:	5b                   	pop    %rbx$/;"	l
ac1	stressfs.asm	/^ ac1:	48 c1 e0 04          	shl    $0x4,%rax$/;"	l
ac2	echo.asm	/^ ac2:	c9                   	leaveq $/;"	l
ac2	grep.asm	/^ ac2:	ba 0a 00 00 00       	mov    $0xa,%edx$/;"	l
ac2	sh.asm	/^     ac2:	5d                   	pop    %rbp$/;"	l
ac2	zombie.asm	/^ ac2:	00 00 00 $/;"	l
ac3	cat.asm	/^ ac3:	48 01 c2             	add    %rax,%rdx$/;"	l
ac3	echo.asm	/^ ac3:	c3                   	retq   $/;"	l
ac3	sh.asm	/^     ac3:	c3                   	retq   $/;"	l
ac4	echo.asm	/^ ac4:	55                   	push   %rbp$/;"	l
ac4	ln.asm	/^ ac4:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
ac4	sh.asm	/^     ac4:	55                   	push   %rbp$/;"	l
ac4	wc.asm	/^ ac4:	00 00 00 $/;"	l
ac5	echo.asm	/^ ac5:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ac5	init.asm	/^ ac5:	76 c7                	jbe    a8e <free+0x2b>$/;"	l
ac5	kill.asm	/^ ac5:	00 00 00 $/;"	l
ac5	mkdir.asm	/^ ac5:	eb 36                	jmp    afd <morecore+0x77>$/;"	l
ac5	mount.asm	/^ ac5:	00 00 00 $/;"	l
ac5	rm.asm	/^ ac5:	eb 36                	jmp    afd <morecore+0x77>$/;"	l
ac5	sh.asm	/^     ac5:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ac5	stressfs.asm	/^ ac5:	48 89 c2             	mov    %rax,%rdx$/;"	l
ac5	usertests.asm	/^     ac5:	00 00 00 $/;"	l
ac5	zombie.asm	/^ ac5:	48 8b 10             	mov    (%rax),%rdx$/;"	l
ac6	cat.asm	/^ ac6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ac6	ls.asm	/^     ac6:	eb 12                	jmp    ada <printf+0x15d>$/;"	l
ac7	grep.asm	/^ ac7:	89 c7                	mov    %eax,%edi$/;"	l
ac7	init.asm	/^ ac7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ac7	ln.asm	/^ ac7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ac7	mkdir.asm	/^ ac7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ac7	rm.asm	/^ ac7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ac7	wc.asm	/^ ac7:	83 85 44 ff ff ff 01 	addl   $0x1,-0xbc(%rbp)$/;"	l
ac8	echo.asm	/^ ac8:	48 83 ec 30          	sub    $0x30,%rsp$/;"	l
ac8	kill.asm	/^ ac8:	48 8b 00             	mov    (%rax),%rax$/;"	l
ac8	ls.asm	/^     ac8:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax$/;"	l
ac8	mount.asm	/^ ac8:	48 89 10             	mov    %rdx,(%rax)$/;"	l
ac8	sh.asm	/^     ac8:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ac8	stressfs.asm	/^ ac8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ac8	usertests.asm	/^     ac8:	48 b8 52 60 00 00 00 	movabs $0x6052,%rax$/;"	l
ac8	zombie.asm	/^ ac8:	48 b8 20 0e 00 00 00 	movabs $0xe20,%rax$/;"	l
ac9	grep.asm	/^ ac9:	48 b8 8b 08 00 00 00 	movabs $0x88b,%rax$/;"	l
aca	cat.asm	/^ aca:	48 8b 00             	mov    (%rax),%rax$/;"	l
acb	init.asm	/^ acb:	48 8b 00             	mov    (%rax),%rax$/;"	l
acb	kill.asm	/^ acb:	c9                   	leaveq $/;"	l
acb	ln.asm	/^ acb:	48 83 c0 10          	add    $0x10,%rax$/;"	l
acb	mkdir.asm	/^ acb:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
acb	mount.asm	/^ acb:	48 b8 10 0e 00 00 00 	movabs $0xe10,%rax$/;"	l
acb	rm.asm	/^ acb:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
acc	echo.asm	/^ acc:	89 7d dc             	mov    %edi,-0x24(%rbp)$/;"	l
acc	kill.asm	/^ acc:	c3                   	retq   $/;"	l
acc	sh.asm	/^     acc:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
acc	stressfs.asm	/^ acc:	48 01 c2             	add    %rax,%rdx$/;"	l
acd	cat.asm	/^ acd:	48 39 c2             	cmp    %rax,%rdx$/;"	l
acd	kill.asm	/^ acd:	55                   	push   %rbp$/;"	l
ace	init.asm	/^ ace:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax$/;"	l
ace	kill.asm	/^ ace:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ace	wc.asm	/^ ace:	8b 85 44 ff ff ff    	mov    -0xbc(%rbp),%eax$/;"	l
acf	echo.asm	/^ acf:	8b 45 dc             	mov    -0x24(%rbp),%eax$/;"	l
acf	ln.asm	/^ acf:	48 89 c7             	mov    %rax,%rdi$/;"	l
acf	ls.asm	/^     acf:	48 8d 50 08          	lea    0x8(%rax),%rdx$/;"	l
acf	mkdir.asm	/^ acf:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
acf	rm.asm	/^ acf:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
acf	stressfs.asm	/^ acf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
acf	usertests.asm	/^     acf:	00 00 00 $/;"	l
acf	zombie.asm	/^ acf:	00 00 00 $/;"	l
acquire	spinlock.c	/^acquire(struct spinlock *lk)$/;"	f
acquiresleep	sleeplock.c	/^acquiresleep(struct sleeplock *lk)$/;"	f
ad	cat.asm	/^  ad:	48 b8 ca 04 00 00 00 	movabs $0x4ca,%rax$/;"	l
ad	forktest.asm	/^  ad:	48 ba 00 00 00 00 00 	movabs $0x0,%rdx$/;"	l
ad	wc.asm	/^  ad:	7c 88                	jl     37 <wc+0x37>$/;"	l
ad0	cat.asm	/^ ad0:	75 2d                	jne    aff <free+0xc1>$/;"	l
ad0	grep.asm	/^ ad0:	00 00 00 $/;"	l
ad0	sh.asm	/^     ad0:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)$/;"	l
ad1	kill.asm	/^ ad1:	48 83 ec 30          	sub    $0x30,%rsp$/;"	l
ad2	cat.asm	/^ ad2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ad2	echo.asm	/^ ad2:	48 83 c0 0f          	add    $0xf,%rax$/;"	l
ad2	init.asm	/^ ad2:	76 ba                	jbe    a8e <free+0x2b>$/;"	l
ad2	ln.asm	/^ ad2:	48 b8 42 09 00 00 00 	movabs $0x942,%rax$/;"	l
ad2	mount.asm	/^ ad2:	00 00 00 $/;"	l
ad2	usertests.asm	/^     ad2:	ff d0                	callq  *%rax$/;"	l
ad2	zombie.asm	/^ ad2:	48 89 10             	mov    %rdx,(%rax)$/;"	l
ad3	grep.asm	/^ ad3:	ff d0                	callq  *%rax$/;"	l
ad3	ls.asm	/^     ad3:	48 89 95 28 ff ff ff 	mov    %rdx,-0xd8(%rbp)$/;"	l
ad3	mkdir.asm	/^ ad3:	8b 55 ec             	mov    -0x14(%rbp),%edx$/;"	l
ad3	rm.asm	/^ ad3:	8b 55 ec             	mov    -0x14(%rbp),%edx$/;"	l
ad3	stressfs.asm	/^ ad3:	48 8b 00             	mov    (%rax),%rax$/;"	l
ad4	init.asm	/^ ad4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ad4	sh.asm	/^     ad4:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx$/;"	l
ad4	usertests.asm	/^     ad4:	89 45 f4             	mov    %eax,-0xc(%rbp)$/;"	l
ad4	wc.asm	/^ ad4:	48 63 d0             	movslq %eax,%rdx$/;"	l
ad5	grep.asm	/^ ad5:	e9 f1 01 00 00       	jmpq   ccb <printf+0x373>$/;"	l
ad5	kill.asm	/^ ad5:	89 7d dc             	mov    %edi,-0x24(%rbp)$/;"	l
ad5	mount.asm	/^ ad5:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%rax)$/;"	l
ad5	zombie.asm	/^ ad5:	48 b8 20 0e 00 00 00 	movabs $0xe20,%rax$/;"	l
ad6	cat.asm	/^ ad6:	8b 50 08             	mov    0x8(%rax),%edx$/;"	l
ad6	echo.asm	/^ ad6:	48 c1 e8 04          	shr    $0x4,%rax$/;"	l
ad6	mkdir.asm	/^ ad6:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
ad6	rm.asm	/^ ad6:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
ad6	stressfs.asm	/^ ad6:	48 39 c2             	cmp    %rax,%rdx$/;"	l
ad7	usertests.asm	/^     ad7:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)$/;"	l
ad7	wc.asm	/^ ad7:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax$/;"	l
ad8	init.asm	/^ ad8:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
ad8	kill.asm	/^ ad8:	8b 45 dc             	mov    -0x24(%rbp),%eax$/;"	l
ad8	sh.asm	/^     ad8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ad9	cat.asm	/^ ad9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ad9	ln.asm	/^ ad9:	00 00 00 $/;"	l
ad9	mkdir.asm	/^ ad9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ad9	rm.asm	/^ ad9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ad9	stressfs.asm	/^ ad9:	75 2d                	jne    b08 <free+0xc1>$/;"	l
ada	echo.asm	/^ ada:	83 c0 01             	add    $0x1,%eax$/;"	l
ada	grep.asm	/^ ada:	83 bd 3c ff ff ff 78 	cmpl   $0x78,-0xc4(%rbp)$/;"	l
ada	ls.asm	/^     ada:	8b 30                	mov    (%rax),%esi$/;"	l
adb	init.asm	/^ adb:	89 c0                	mov    %eax,%eax$/;"	l
adb	kill.asm	/^ adb:	48 83 c0 0f          	add    $0xf,%rax$/;"	l
adb	stressfs.asm	/^ adb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
adb	usertests.asm	/^     adb:	79 35                	jns    b12 <writetest1+0x179>$/;"	l
adc	ln.asm	/^ adc:	ff d0                	callq  *%rax$/;"	l
adc	ls.asm	/^     adc:	8b 85 1c ff ff ff    	mov    -0xe4(%rbp),%eax$/;"	l
adc	mount.asm	/^ adc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
adc	sh.asm	/^     adc:	48 89 d6             	mov    %rdx,%rsi$/;"	l
adc	zombie.asm	/^ adc:	00 00 00 $/;"	l
add	cat.asm	/^ add:	48 8b 00             	mov    (%rax),%rax$/;"	l
add	echo.asm	/^ add:	89 45 ec             	mov    %eax,-0x14(%rbp)$/;"	l
add	init.asm	/^ add:	48 c1 e0 04          	shl    $0x4,%rax$/;"	l
add	mkdir.asm	/^ add:	48 83 c0 10          	add    $0x10,%rax$/;"	l
add	rm.asm	/^ add:	48 83 c0 10          	add    $0x10,%rax$/;"	l
add	usertests.asm	/^     add:	48 b8 08 88 00 00 00 	movabs $0x8808,%rax$/;"	l
addr	kernel.asm	/^  addr = (uint64) tss;$/;"	d
addr	kernel.asm	/^  addr = P2V(a);$/;"	d
addr	kernel.asm	/^  addr = proc->sz;$/;"	d
addr_p	mp.h	/^  uint32 addr_p;                  \/\/ I\/O APIC address$/;"	m	struct:mpioapic
addr_t	types.h	/^typedef unsigned long addr_t;$/;"	t
addrs	file.h	/^  uint addrs[NDIRECT+1];$/;"	m	struct:inode
addrs	fs.h	/^  uint addrs[NDIRECT+1];   \/\/ Data block addresses$/;"	m	struct:dinode
ade	ln.asm	/^ ade:	48 b8 d0 0e 00 00 00 	movabs $0xed0,%rax$/;"	l
ade	wc.asm	/^ ade:	48 01 d0             	add    %rdx,%rax$/;"	l
adf	kill.asm	/^ adf:	48 c1 e8 04          	shr    $0x4,%rax$/;"	l
adf	sh.asm	/^     adf:	48 89 c7             	mov    %rax,%rdi$/;"	l
adf	stressfs.asm	/^ adf:	8b 50 08             	mov    0x8(%rax),%edx$/;"	l
adf	zombie.asm	/^ adf:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%rax)$/;"	l
ae	init.asm	/^  ae:	48 b8 b7 05 00 00 00 	movabs $0x5b7,%rax$/;"	l
ae	mkdir.asm	/^  ae:	eb 0c                	jmp    bc <main+0xbc>$/;"	l
ae	rm.asm	/^  ae:	eb 0c                	jmp    bc <main+0xbc>$/;"	l
ae	usertests.asm	/^      ae:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ae	zombie.asm	/^  ae:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ae0	cat.asm	/^ ae0:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
ae0	echo.asm	/^ ae0:	48 b8 90 0e 00 00 00 	movabs $0xe90,%rax$/;"	l
ae0	mount.asm	/^ ae0:	48 8b 00             	mov    (%rax),%rax$/;"	l
ae1	grep.asm	/^ ae1:	74 09                	je     aec <printf+0x194>$/;"	l
ae1	init.asm	/^ ae1:	48 89 c2             	mov    %rax,%rdx$/;"	l
ae1	mkdir.asm	/^ ae1:	48 89 c7             	mov    %rax,%rdi$/;"	l
ae1	rm.asm	/^ ae1:	48 89 c7             	mov    %rax,%rdi$/;"	l
ae1	wc.asm	/^ ae1:	0f b6 00             	movzbl (%rax),%eax$/;"	l
ae2	ls.asm	/^     ae2:	b9 01 00 00 00       	mov    $0x1,%ecx$/;"	l
ae2	sh.asm	/^     ae2:	48 b8 da 0b 00 00 00 	movabs $0xbda,%rax$/;"	l
ae2	stressfs.asm	/^ ae2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ae3	cat.asm	/^ ae3:	01 c2                	add    %eax,%edx$/;"	l
ae3	grep.asm	/^ ae3:	83 bd 3c ff ff ff 70 	cmpl   $0x70,-0xc4(%rbp)$/;"	l
ae3	kill.asm	/^ ae3:	83 c0 01             	add    $0x1,%eax$/;"	l
ae3	mount.asm	/^ ae3:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ae4	init.asm	/^ ae4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ae4	mkdir.asm	/^ ae4:	48 b8 54 09 00 00 00 	movabs $0x954,%rax$/;"	l
ae4	rm.asm	/^ ae4:	48 b8 54 09 00 00 00 	movabs $0x954,%rax$/;"	l
ae4	usertests.asm	/^     ae4:	00 00 00 $/;"	l
ae4	wc.asm	/^ ae4:	84 c0                	test   %al,%al$/;"	l
ae5	cat.asm	/^ ae5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ae5	ln.asm	/^ ae5:	00 00 00 $/;"	l
ae6	kill.asm	/^ ae6:	89 45 ec             	mov    %eax,-0x14(%rbp)$/;"	l
ae6	stressfs.asm	/^ ae6:	48 8b 00             	mov    (%rax),%rax$/;"	l
ae6	wc.asm	/^ ae6:	0f 85 fc fc ff ff    	jne    7e8 <printf+0x9e>$/;"	l
ae6	zombie.asm	/^ ae6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ae7	echo.asm	/^ ae7:	00 00 00 $/;"	l
ae7	ls.asm	/^     ae7:	ba 0a 00 00 00       	mov    $0xa,%edx$/;"	l
ae7	mount.asm	/^ ae7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ae7	usertests.asm	/^     ae7:	8b 00                	mov    (%rax),%eax$/;"	l
ae8	init.asm	/^ ae8:	48 01 c2             	add    %rax,%rdx$/;"	l
ae8	ln.asm	/^ ae8:	48 8b 00             	mov    (%rax),%rax$/;"	l
ae9	cat.asm	/^ ae9:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
ae9	kill.asm	/^ ae9:	48 b8 a0 0e 00 00 00 	movabs $0xea0,%rax$/;"	l
ae9	sh.asm	/^     ae9:	00 00 00 $/;"	l
ae9	stressfs.asm	/^ ae9:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
ae9	usertests.asm	/^     ae9:	48 be 90 6b 00 00 00 	movabs $0x6b90,%rsi$/;"	l
aea	echo.asm	/^ aea:	48 8b 00             	mov    (%rax),%rax$/;"	l
aea	grep.asm	/^ aea:	75 65                	jne    b51 <printf+0x1f9>$/;"	l
aea	zombie.asm	/^ aea:	48 8b 00             	mov    (%rax),%rax$/;"	l
aeb	init.asm	/^ aeb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
aeb	ln.asm	/^ aeb:	c9                   	leaveq $/;"	l
aeb	mkdir.asm	/^ aeb:	00 00 00 $/;"	l
aeb	mount.asm	/^ aeb:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
aeb	rm.asm	/^ aeb:	00 00 00 $/;"	l
aec	cat.asm	/^ aec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
aec	grep.asm	/^ aec:	8b 85 20 ff ff ff    	mov    -0xe0(%rbp),%eax$/;"	l
aec	ln.asm	/^ aec:	c3                   	retq   $/;"	l
aec	ls.asm	/^     aec:	89 c7                	mov    %eax,%edi$/;"	l
aec	sh.asm	/^     aec:	ff d0                	callq  *%rax$/;"	l
aec	stressfs.asm	/^ aec:	01 c2                	add    %eax,%edx$/;"	l
aec	wc.asm	/^ aec:	90                   	nop$/;"	l
aed	echo.asm	/^ aed:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
aed	ln.asm	/^ aed:	55                   	push   %rbp$/;"	l
aed	wc.asm	/^ aed:	c9                   	leaveq $/;"	l
aed	zombie.asm	/^ aed:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
aee	ln.asm	/^ aee:	48 89 e5             	mov    %rsp,%rbp$/;"	l
aee	ls.asm	/^     aee:	48 b8 b0 08 00 00 00 	movabs $0x8b0,%rax$/;"	l
aee	mkdir.asm	/^ aee:	ff d0                	callq  *%rax$/;"	l
aee	mount.asm	/^ aee:	3b 45 ec             	cmp    -0x14(%rbp),%eax$/;"	l
aee	rm.asm	/^ aee:	ff d0                	callq  *%rax$/;"	l
aee	sh.asm	/^     aee:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
aee	stressfs.asm	/^ aee:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
aee	wc.asm	/^ aee:	c3                   	retq   $/;"	l
aef	init.asm	/^ aef:	48 8b 00             	mov    (%rax),%rax$/;"	l
aef	wc.asm	/^ aef:	55                   	push   %rbp$/;"	l
af	echo.asm	/^  af:	89 d1                	mov    %edx,%ecx$/;"	l
af	grep.asm	/^  af:	be 0a 00 00 00       	mov    $0xa,%esi$/;"	l
af	kill.asm	/^  af:	8b 45 f4             	mov    -0xc(%rbp),%eax$/;"	l
af	ls.asm	/^      af:	00 00 00 $/;"	l
af	wc.asm	/^  af:	8b 45 dc             	mov    -0x24(%rbp),%eax$/;"	l
af0	cat.asm	/^ af0:	48 8b 00             	mov    (%rax),%rax$/;"	l
af0	kill.asm	/^ af0:	00 00 00 $/;"	l
af0	mkdir.asm	/^ af0:	48 b8 f0 0e 00 00 00 	movabs $0xef0,%rax$/;"	l
af0	rm.asm	/^ af0:	48 b8 f0 0e 00 00 00 	movabs $0xef0,%rax$/;"	l
af0	usertests.asm	/^     af0:	00 00 00 $/;"	l
af0	wc.asm	/^ af0:	48 89 e5             	mov    %rsp,%rbp$/;"	l
af1	echo.asm	/^ af1:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)$/;"	l
af1	ln.asm	/^ af1:	48 83 ec 30          	sub    $0x30,%rsp$/;"	l
af1	mount.asm	/^ af1:	72 65                	jb     b58 <malloc+0xfa>$/;"	l
af1	zombie.asm	/^ af1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
af2	grep.asm	/^ af2:	83 f8 30             	cmp    $0x30,%eax$/;"	l
af2	init.asm	/^ af2:	48 39 c2             	cmp    %rax,%rdx$/;"	l
af2	sh.asm	/^     af2:	eb 38                	jmp    b2c <parseline+0x68>$/;"	l
af2	stressfs.asm	/^ af2:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
af3	cat.asm	/^ af3:	48 8b 10             	mov    (%rax),%rdx$/;"	l
af3	kill.asm	/^ af3:	48 8b 00             	mov    (%rax),%rax$/;"	l
af3	mount.asm	/^ af3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
af3	usertests.asm	/^     af3:	89 c7                	mov    %eax,%edi$/;"	l
af3	wc.asm	/^ af3:	48 83 ec 18          	sub    $0x18,%rsp$/;"	l
af4	sh.asm	/^     af4:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi$/;"	l
af5	grep.asm	/^ af5:	73 23                	jae    b1a <printf+0x1c2>$/;"	l
af5	init.asm	/^ af5:	75 2d                	jne    b24 <free+0xc1>$/;"	l
af5	ln.asm	/^ af5:	89 7d dc             	mov    %edi,-0x24(%rbp)$/;"	l
af5	ls.asm	/^     af5:	00 00 00 $/;"	l
af5	stressfs.asm	/^ af5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
af5	usertests.asm	/^     af5:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
af5	zombie.asm	/^ af5:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
af6	cat.asm	/^ af6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
af6	echo.asm	/^ af6:	75 4a                	jne    b42 <malloc+0x7e>$/;"	l
af6	kill.asm	/^ af6:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
af7	grep.asm	/^ af7:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax$/;"	l
af7	init.asm	/^ af7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
af7	mkdir.asm	/^ af7:	00 00 00 $/;"	l
af7	mount.asm	/^ af7:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
af7	rm.asm	/^ af7:	00 00 00 $/;"	l
af7	wc.asm	/^ af7:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
af8	echo.asm	/^ af8:	48 b8 80 0e 00 00 00 	movabs $0xe80,%rax$/;"	l
af8	ln.asm	/^ af8:	8b 45 dc             	mov    -0x24(%rbp),%eax$/;"	l
af8	ls.asm	/^     af8:	ff d0                	callq  *%rax$/;"	l
af8	sh.asm	/^     af8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
af8	zombie.asm	/^ af8:	3b 45 ec             	cmp    -0x14(%rbp),%eax$/;"	l
af9	stressfs.asm	/^ af9:	48 8b 00             	mov    (%rax),%rax$/;"	l
afa	cat.asm	/^ afa:	48 89 10             	mov    %rdx,(%rax)$/;"	l
afa	kill.asm	/^ afa:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)$/;"	l
afa	ls.asm	/^     afa:	e9 f1 01 00 00       	jmpq   cf0 <printf+0x373>$/;"	l
afa	mkdir.asm	/^ afa:	48 8b 00             	mov    (%rax),%rax$/;"	l
afa	mount.asm	/^ afa:	3b 45 ec             	cmp    -0x14(%rbp),%eax$/;"	l
afa	rm.asm	/^ afa:	48 8b 00             	mov    (%rax),%rax$/;"	l
afa	usertests.asm	/^     afa:	48 ba d1 61 00 00 00 	movabs $0x61d1,%rdx$/;"	l
afb	init.asm	/^ afb:	8b 50 08             	mov    0x8(%rax),%edx$/;"	l
afb	ln.asm	/^ afb:	48 83 c0 0f          	add    $0xf,%rax$/;"	l
afb	wc.asm	/^ afb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
afb	zombie.asm	/^ afb:	72 65                	jb     b62 <malloc+0xfa>$/;"	l
afc	sh.asm	/^     afc:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
afc	stressfs.asm	/^ afc:	48 8b 10             	mov    (%rax),%rdx$/;"	l
afd	cat.asm	/^ afd:	eb 0e                	jmp    b0d <free+0xcf>$/;"	l
afd	mkdir.asm	/^ afd:	c9                   	leaveq $/;"	l
afd	mount.asm	/^ afd:	75 10                	jne    b0f <malloc+0xb1>$/;"	l
afd	rm.asm	/^ afd:	c9                   	leaveq $/;"	l
afd	zombie.asm	/^ afd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
afe	grep.asm	/^ afe:	8b 95 20 ff ff ff    	mov    -0xe0(%rbp),%edx$/;"	l
afe	init.asm	/^ afe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
afe	mkdir.asm	/^ afe:	c3                   	retq   $/;"	l
afe	rm.asm	/^ afe:	c3                   	retq   $/;"	l
aff	cat.asm	/^ aff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
aff	echo.asm	/^ aff:	00 00 00 $/;"	l
aff	kill.asm	/^ aff:	75 4a                	jne    b4b <malloc+0x7e>$/;"	l
aff	ln.asm	/^ aff:	48 c1 e8 04          	shr    $0x4,%rax$/;"	l
aff	ls.asm	/^     aff:	83 bd 3c ff ff ff 78 	cmpl   $0x78,-0xc4(%rbp)$/;"	l
aff	mkdir.asm	/^ aff:	55                   	push   %rbp$/;"	l
aff	mount.asm	/^ aff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
aff	rm.asm	/^ aff:	55                   	push   %rbp$/;"	l
aff	stressfs.asm	/^ aff:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
aff	wc.asm	/^ aff:	48 83 e8 10          	sub    $0x10,%rax$/;"	l
align	elf.h	/^  uint64 align;$/;"	m	struct:proghdr
allocproc	proc.c	/^allocproc(void)$/;"	f	file:
allocuvm	vm.c	/^allocuvm(pde_t *pgdir, uint oldsz, uint newsz)$/;"	f
alltraps	kernel.asm	/^alltraps:$/;"	l
alltraps	trapasm.S	/^alltraps:$/;"	l
amt	usertests.asm	/^  amt = (BIG) - (addr_t)a;$/;"	d
apicid	kernel.asm	/^  apicid = lapic[ID] >> 24;$/;"	d
apicid	mp.h	/^  uchar apicid;                 \/\/ local APIC id$/;"	m	struct:mpproc
apicid	proc.h	/^  uchar apicid;                \/\/ Local APIC ID$/;"	m	struct:cpu
apicno	mp.h	/^  uchar apicno;                 \/\/ I\/O APIC id$/;"	m	struct:mpioapic
argaddr	syscall.c	/^argaddr(int n, addr_t *ip)$/;"	f
argc	sh.asm	/^  argc = 0;$/;"	d
argfd	sysfile.c	/^argfd(int n, int *pfd, struct file **pf)$/;"	f	file:
argint	syscall.c	/^argint(int n, int *ip)$/;"	f
argptest	usertests.c	/^void argptest()$/;"	f
argptr	syscall.c	/^argptr(int n, char **pp, int size)$/;"	f
args	mmu.h	/^  uint args : 5;        \/\/ # args, 0 for interrupt\/trap gates$/;"	m	struct:gatedesc
argstr	syscall.c	/^argstr(int n, char **pp)$/;"	f
argv	init.c	/^char *argv[] = { "sh", 0 };$/;"	v
argv	initcode.S	/^argv:$/;"	l
argv	sh.c	/^  char *argv[MAXARGS];$/;"	m	struct:execcmd	file:
atoi	ulib.c	/^atoi(const char *s)$/;"	f
avl	mmu.h	/^  uint avl : 1;        \/\/ Unused (available for software use)$/;"	m	struct:segdesc
b	cat.asm	/^   b:	eb 51                	jmp    5e <cat+0x5e>$/;"	l
b	echo.asm	/^   b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)$/;"	l
b	forktest.asm	/^   b:	89 bd 4c ff ff ff    	mov    %edi,-0xb4(%rbp)$/;"	l
b	kernel.asm	/^  b = bget(dev, blockno);$/;"	d
b	kill.asm	/^   b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)$/;"	l
b	ln.asm	/^   b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)$/;"	l
b	mkdir.asm	/^   b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)$/;"	l
b	mount.asm	/^   b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)$/;"	l
b	rm.asm	/^   b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)$/;"	l
b	stressfs.asm	/^   b:	89 bd dc fd ff ff    	mov    %edi,-0x224(%rbp)$/;"	l
b	usertests.asm	/^       b:	00 00 00 $/;"	l
b	usertests.asm	/^    b = sbrk(1);$/;"	d
b	wc.asm	/^   b:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)$/;"	l
b	zombie.asm	/^   b:	00 00 00 $/;"	l
b0	mkdir.asm	/^  b0:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)$/;"	l
b0	mount.asm	/^  b0:	eb 0a                	jmp    bc <strcmp+0x1c>$/;"	l
b0	rm.asm	/^  b0:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)$/;"	l
b00	mkdir.asm	/^ b00:	48 89 e5             	mov    %rsp,%rbp$/;"	l
b00	rm.asm	/^ b00:	48 89 e5             	mov    %rsp,%rbp$/;"	l
b01	kill.asm	/^ b01:	48 b8 90 0e 00 00 00 	movabs $0xe90,%rax$/;"	l
b01	sh.asm	/^     b01:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
b01	usertests.asm	/^     b01:	00 00 00 $/;"	l
b01	zombie.asm	/^ b01:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
b02	echo.asm	/^ b02:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
b02	init.asm	/^ b02:	48 8b 00             	mov    (%rax),%rax$/;"	l
b03	cat.asm	/^ b03:	48 8b 10             	mov    (%rax),%rdx$/;"	l
b03	ln.asm	/^ b03:	83 c0 01             	add    $0x1,%eax$/;"	l
b03	mkdir.asm	/^ b03:	48 83 ec 30          	sub    $0x30,%rsp$/;"	l
b03	mount.asm	/^ b03:	48 8b 10             	mov    (%rax),%rdx$/;"	l
b03	rm.asm	/^ b03:	48 83 ec 30          	sub    $0x30,%rsp$/;"	l
b03	stressfs.asm	/^ b03:	48 89 10             	mov    %rdx,(%rax)$/;"	l
b03	wc.asm	/^ b03:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
b04	grep.asm	/^ b04:	89 d2                	mov    %edx,%edx$/;"	l
b04	usertests.asm	/^     b04:	ff d2                	callq  *%rdx$/;"	l
b04	zombie.asm	/^ b04:	3b 45 ec             	cmp    -0x14(%rbp),%eax$/;"	l
b05	init.asm	/^ b05:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
b06	cat.asm	/^ b06:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
b06	echo.asm	/^ b06:	48 b8 90 0e 00 00 00 	movabs $0xe90,%rax$/;"	l
b06	grep.asm	/^ b06:	48 01 d0             	add    %rdx,%rax$/;"	l
b06	ln.asm	/^ b06:	89 45 ec             	mov    %eax,-0x14(%rbp)$/;"	l
b06	ls.asm	/^     b06:	74 09                	je     b11 <printf+0x194>$/;"	l
b06	mount.asm	/^ b06:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
b06	sh.asm	/^     b06:	48 89 c7             	mov    %rax,%rdi$/;"	l
b06	stressfs.asm	/^ b06:	eb 0e                	jmp    b16 <free+0xcf>$/;"	l
b06	usertests.asm	/^     b06:	48 b8 02 60 00 00 00 	movabs $0x6002,%rax$/;"	l
b07	mkdir.asm	/^ b07:	89 7d dc             	mov    %edi,-0x24(%rbp)$/;"	l
b07	rm.asm	/^ b07:	89 7d dc             	mov    %edi,-0x24(%rbp)$/;"	l
b07	wc.asm	/^ b07:	48 b8 b0 12 00 00 00 	movabs $0x12b0,%rax$/;"	l
b07	zombie.asm	/^ b07:	75 10                	jne    b19 <malloc+0xb1>$/;"	l
b08	init.asm	/^ b08:	01 c2                	add    %eax,%edx$/;"	l
b08	kill.asm	/^ b08:	00 00 00 $/;"	l
b08	ls.asm	/^     b08:	83 bd 3c ff ff ff 70 	cmpl   $0x70,-0xc4(%rbp)$/;"	l
b08	stressfs.asm	/^ b08:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b09	grep.asm	/^ b09:	8b 95 20 ff ff ff    	mov    -0xe0(%rbp),%edx$/;"	l
b09	ln.asm	/^ b09:	48 b8 d0 0e 00 00 00 	movabs $0xed0,%rax$/;"	l
b09	sh.asm	/^     b09:	48 b8 aa 07 00 00 00 	movabs $0x7aa,%rax$/;"	l
b09	zombie.asm	/^ b09:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b0a	cat.asm	/^ b0a:	48 89 10             	mov    %rdx,(%rax)$/;"	l
b0a	init.asm	/^ b0a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
b0a	mkdir.asm	/^ b0a:	8b 45 dc             	mov    -0x24(%rbp),%eax$/;"	l
b0a	mount.asm	/^ b0a:	48 89 10             	mov    %rdx,(%rax)$/;"	l
b0a	rm.asm	/^ b0a:	8b 45 dc             	mov    -0x24(%rbp),%eax$/;"	l
b0b	kill.asm	/^ b0b:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
b0c	stressfs.asm	/^ b0c:	48 8b 10             	mov    (%rax),%rdx$/;"	l
b0d	cat.asm	/^ b0d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b0d	echo.asm	/^ b0d:	00 00 00 $/;"	l
b0d	mkdir.asm	/^ b0d:	48 83 c0 0f          	add    $0xf,%rax$/;"	l
b0d	mount.asm	/^ b0d:	eb 2e                	jmp    b3d <malloc+0xdf>$/;"	l
b0d	rm.asm	/^ b0d:	48 83 c0 0f          	add    $0xf,%rax$/;"	l
b0d	usertests.asm	/^     b0d:	00 00 00 $/;"	l
b0d	zombie.asm	/^ b0d:	48 8b 10             	mov    (%rax),%rdx$/;"	l
b0e	init.asm	/^ b0e:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
b0e	wc.asm	/^ b0e:	00 00 00 $/;"	l
b0f	grep.asm	/^ b0f:	83 c2 08             	add    $0x8,%edx$/;"	l
b0f	kill.asm	/^ b0f:	48 b8 a0 0e 00 00 00 	movabs $0xea0,%rax$/;"	l
b0f	ls.asm	/^     b0f:	75 65                	jne    b76 <printf+0x1f9>$/;"	l
b0f	mount.asm	/^ b0f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b0f	stressfs.asm	/^ b0f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
b1	echo.asm	/^  b1:	fc                   	cld    $/;"	l
b1	ln.asm	/^  b1:	00 00 00 $/;"	l
b1	sh.asm	/^      b1:	00 00 00 $/;"	l
b10	echo.asm	/^ b10:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
b10	ln.asm	/^ b10:	00 00 00 $/;"	l
b10	sh.asm	/^     b10:	00 00 00 $/;"	l
b10	usertests.asm	/^     b10:	ff d0                	callq  *%rax$/;"	l
b10	zombie.asm	/^ b10:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
b11	cat.asm	/^ b11:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
b11	init.asm	/^ b11:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b11	ls.asm	/^     b11:	8b 85 20 ff ff ff    	mov    -0xe0(%rbp),%eax$/;"	l
b11	mkdir.asm	/^ b11:	48 c1 e8 04          	shr    $0x4,%rax$/;"	l
b11	rm.asm	/^ b11:	48 c1 e8 04          	shr    $0x4,%rax$/;"	l
b11	wc.asm	/^ b11:	48 8b 00             	mov    (%rax),%rax$/;"	l
b12	grep.asm	/^ b12:	89 95 20 ff ff ff    	mov    %edx,-0xe0(%rbp)$/;"	l
b12	usertests.asm	/^     b12:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)$/;"	l
b13	ln.asm	/^ b13:	48 8b 00             	mov    (%rax),%rax$/;"	l
b13	mount.asm	/^ b13:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
b13	sh.asm	/^     b13:	ff d0                	callq  *%rax$/;"	l
b13	stressfs.asm	/^ b13:	48 89 10             	mov    %rdx,(%rax)$/;"	l
b14	cat.asm	/^ b14:	89 c0                	mov    %eax,%eax$/;"	l
b14	echo.asm	/^ b14:	48 89 10             	mov    %rdx,(%rax)$/;"	l
b14	wc.asm	/^ b14:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
b14	zombie.asm	/^ b14:	48 89 10             	mov    %rdx,(%rax)$/;"	l
b15	init.asm	/^ b15:	48 8b 00             	mov    (%rax),%rax$/;"	l
b15	mkdir.asm	/^ b15:	83 c0 01             	add    $0x1,%eax$/;"	l
b15	rm.asm	/^ b15:	83 c0 01             	add    $0x1,%eax$/;"	l
b15	sh.asm	/^     b15:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b16	cat.asm	/^ b16:	48 c1 e0 04          	shl    $0x4,%rax$/;"	l
b16	kill.asm	/^ b16:	00 00 00 $/;"	l
b16	ln.asm	/^ b16:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
b16	mount.asm	/^ b16:	2b 45 ec             	sub    -0x14(%rbp),%eax$/;"	l
b16	stressfs.asm	/^ b16:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b17	echo.asm	/^ b17:	48 b8 90 0e 00 00 00 	movabs $0xe90,%rax$/;"	l
b17	ls.asm	/^     b17:	83 f8 30             	cmp    $0x30,%eax$/;"	l
b17	zombie.asm	/^ b17:	eb 2e                	jmp    b47 <malloc+0xdf>$/;"	l
b18	grep.asm	/^ b18:	eb 12                	jmp    b2c <printf+0x1d4>$/;"	l
b18	init.asm	/^ b18:	48 8b 10             	mov    (%rax),%rdx$/;"	l
b18	mkdir.asm	/^ b18:	89 45 ec             	mov    %eax,-0x14(%rbp)$/;"	l
b18	rm.asm	/^ b18:	89 45 ec             	mov    %eax,-0x14(%rbp)$/;"	l
b18	wc.asm	/^ b18:	eb 2f                	jmp    b49 <free+0x5a>$/;"	l
b19	kill.asm	/^ b19:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
b19	mount.asm	/^ b19:	89 c2                	mov    %eax,%edx$/;"	l
b19	sh.asm	/^     b19:	48 89 c7             	mov    %rax,%rdi$/;"	l
b19	usertests.asm	/^     b19:	8b 45 f4             	mov    -0xc(%rbp),%eax$/;"	l
b19	zombie.asm	/^ b19:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b1a	cat.asm	/^ b1a:	48 89 c2             	mov    %rax,%rdx$/;"	l
b1a	grep.asm	/^ b1a:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax$/;"	l
b1a	ln.asm	/^ b1a:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)$/;"	l
b1a	ls.asm	/^     b1a:	73 23                	jae    b3f <printf+0x1c2>$/;"	l
b1a	stressfs.asm	/^ b1a:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
b1a	wc.asm	/^ b1a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b1b	init.asm	/^ b1b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
b1b	mkdir.asm	/^ b1b:	48 b8 f0 0e 00 00 00 	movabs $0xef0,%rax$/;"	l
b1b	mount.asm	/^ b1b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b1b	rm.asm	/^ b1b:	48 b8 f0 0e 00 00 00 	movabs $0xef0,%rax$/;"	l
b1c	ls.asm	/^     b1c:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax$/;"	l
b1c	sh.asm	/^     b1c:	48 b8 50 07 00 00 00 	movabs $0x750,%rax$/;"	l
b1c	usertests.asm	/^     b1c:	ba 00 02 00 00       	mov    $0x200,%edx$/;"	l
b1d	cat.asm	/^ b1d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b1d	kill.asm	/^ b1d:	48 89 10             	mov    %rdx,(%rax)$/;"	l
b1d	stressfs.asm	/^ b1d:	89 c0                	mov    %eax,%eax$/;"	l
b1d	zombie.asm	/^ b1d:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
b1e	echo.asm	/^ b1e:	00 00 00 $/;"	l
b1e	wc.asm	/^ b1e:	48 8b 00             	mov    (%rax),%rax$/;"	l
b1f	init.asm	/^ b1f:	48 89 10             	mov    %rdx,(%rax)$/;"	l
b1f	ln.asm	/^ b1f:	75 4a                	jne    b6b <malloc+0x7e>$/;"	l
b1f	mount.asm	/^ b1f:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
b1f	stressfs.asm	/^ b1f:	48 c1 e0 04          	shl    $0x4,%rax$/;"	l
b2	echo.asm	/^  b2:	f3 aa                	rep stos %al,%es:(%rdi)$/;"	l
b2	kill.asm	/^  b2:	48 89 ce             	mov    %rcx,%rsi$/;"	l
b2	ls.asm	/^      b2:	ff d0                	callq  *%rax$/;"	l
b2	mount.asm	/^  b2:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)$/;"	l
b2	stressfs.asm	/^  b2:	00 00 00 $/;"	l
b2	wc.asm	/^  b2:	ba 00 02 00 00       	mov    $0x200,%edx$/;"	l
b2	zombie.asm	/^  b2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)$/;"	l
b20	kill.asm	/^ b20:	48 b8 a0 0e 00 00 00 	movabs $0xea0,%rax$/;"	l
b20	zombie.asm	/^ b20:	2b 45 ec             	sub    -0x14(%rbp),%eax$/;"	l
b21	cat.asm	/^ b21:	48 01 d0             	add    %rdx,%rax$/;"	l
b21	echo.asm	/^ b21:	48 8b 10             	mov    (%rax),%rdx$/;"	l
b21	grep.asm	/^ b21:	48 8d 50 08          	lea    0x8(%rax),%rdx$/;"	l
b21	ln.asm	/^ b21:	48 b8 c0 0e 00 00 00 	movabs $0xec0,%rax$/;"	l
b21	usertests.asm	/^     b21:	48 be 40 88 00 00 00 	movabs $0x8840,%rsi$/;"	l
b21	wc.asm	/^ b21:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax$/;"	l
b22	init.asm	/^ b22:	eb 0e                	jmp    b32 <free+0xcf>$/;"	l
b22	mkdir.asm	/^ b22:	00 00 00 $/;"	l
b22	mount.asm	/^ b22:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b22	rm.asm	/^ b22:	00 00 00 $/;"	l
b23	ls.asm	/^     b23:	8b 95 20 ff ff ff    	mov    -0xe0(%rbp),%edx$/;"	l
b23	sh.asm	/^     b23:	00 00 00 $/;"	l
b23	stressfs.asm	/^ b23:	48 89 c2             	mov    %rax,%rdx$/;"	l
b23	zombie.asm	/^ b23:	89 c2                	mov    %eax,%edx$/;"	l
b24	cat.asm	/^ b24:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax$/;"	l
b24	echo.asm	/^ b24:	48 b8 80 0e 00 00 00 	movabs $0xe80,%rax$/;"	l
b24	init.asm	/^ b24:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b25	grep.asm	/^ b25:	48 89 95 28 ff ff ff 	mov    %rdx,-0xd8(%rbp)$/;"	l
b25	mkdir.asm	/^ b25:	48 8b 00             	mov    (%rax),%rax$/;"	l
b25	rm.asm	/^ b25:	48 8b 00             	mov    (%rax),%rax$/;"	l
b25	wc.asm	/^ b25:	77 17                	ja     b3e <free+0x4f>$/;"	l
b25	zombie.asm	/^ b25:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b26	mount.asm	/^ b26:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
b26	sh.asm	/^     b26:	ff d0                	callq  *%rax$/;"	l
b26	stressfs.asm	/^ b26:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b27	kill.asm	/^ b27:	00 00 00 $/;"	l
b27	wc.asm	/^ b27:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
b28	cat.asm	/^ b28:	75 27                	jne    b51 <free+0x113>$/;"	l
b28	init.asm	/^ b28:	48 8b 10             	mov    (%rax),%rdx$/;"	l
b28	ln.asm	/^ b28:	00 00 00 $/;"	l
b28	mkdir.asm	/^ b28:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
b28	rm.asm	/^ b28:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
b28	sh.asm	/^     b28:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
b28	usertests.asm	/^     b28:	00 00 00 $/;"	l
b29	ls.asm	/^     b29:	89 d2                	mov    %edx,%edx$/;"	l
b29	mount.asm	/^ b29:	89 c0                	mov    %eax,%eax$/;"	l
b29	zombie.asm	/^ b29:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
b2a	cat.asm	/^ b2a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b2a	kill.asm	/^ b2a:	48 8b 10             	mov    (%rax),%rdx$/;"	l
b2a	stressfs.asm	/^ b2a:	48 01 d0             	add    %rdx,%rax$/;"	l
b2b	echo.asm	/^ b2b:	00 00 00 $/;"	l
b2b	init.asm	/^ b2b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
b2b	ln.asm	/^ b2b:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
b2b	ls.asm	/^     b2b:	48 01 d0             	add    %rdx,%rax$/;"	l
b2b	mount.asm	/^ b2b:	48 c1 e0 04          	shl    $0x4,%rax$/;"	l
b2b	usertests.asm	/^     b2b:	89 c7                	mov    %eax,%edi$/;"	l
b2b	wc.asm	/^ b2b:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax$/;"	l
b2c	grep.asm	/^ b2c:	8b 30                	mov    (%rax),%esi$/;"	l
b2c	mkdir.asm	/^ b2c:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)$/;"	l
b2c	rm.asm	/^ b2c:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)$/;"	l
b2c	sh.asm	/^     b2c:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx$/;"	l
b2c	zombie.asm	/^ b2c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b2d	kill.asm	/^ b2d:	48 b8 90 0e 00 00 00 	movabs $0xe90,%rax$/;"	l
b2d	stressfs.asm	/^ b2d:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax$/;"	l
b2d	usertests.asm	/^     b2d:	48 b8 20 60 00 00 00 	movabs $0x6020,%rax$/;"	l
b2e	cat.asm	/^ b2e:	8b 50 08             	mov    0x8(%rax),%edx$/;"	l
b2e	echo.asm	/^ b2e:	48 89 10             	mov    %rdx,(%rax)$/;"	l
b2e	grep.asm	/^ b2e:	8b 85 1c ff ff ff    	mov    -0xe4(%rbp),%eax$/;"	l
b2e	ls.asm	/^     b2e:	8b 95 20 ff ff ff    	mov    -0xe0(%rbp),%edx$/;"	l
b2f	init.asm	/^ b2f:	48 89 10             	mov    %rdx,(%rax)$/;"	l
b2f	ln.asm	/^ b2f:	48 b8 d0 0e 00 00 00 	movabs $0xed0,%rax$/;"	l
b2f	mount.asm	/^ b2f:	48 01 45 f8          	add    %rax,-0x8(%rbp)$/;"	l
b2f	wc.asm	/^ b2f:	77 2f                	ja     b60 <free+0x71>$/;"	l
b3	usertests.asm	/^      b3:	48 ba d1 61 00 00 00 	movabs $0x61d1,%rdx$/;"	l
b30	sh.asm	/^     b30:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
b30	zombie.asm	/^ b30:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
b31	cat.asm	/^ b31:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
b31	echo.asm	/^ b31:	48 b8 80 0e 00 00 00 	movabs $0xe80,%rax$/;"	l
b31	mkdir.asm	/^ b31:	75 4a                	jne    b7d <malloc+0x7e>$/;"	l
b31	rm.asm	/^ b31:	75 4a                	jne    b7d <malloc+0x7e>$/;"	l
b31	stressfs.asm	/^ b31:	75 27                	jne    b5a <free+0x113>$/;"	l
b31	wc.asm	/^ b31:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b32	init.asm	/^ b32:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b33	mkdir.asm	/^ b33:	48 b8 e0 0e 00 00 00 	movabs $0xee0,%rax$/;"	l
b33	mount.asm	/^ b33:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b33	rm.asm	/^ b33:	48 b8 e0 0e 00 00 00 	movabs $0xee0,%rax$/;"	l
b33	stressfs.asm	/^ b33:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b33	zombie.asm	/^ b33:	89 c0                	mov    %eax,%eax$/;"	l
b34	grep.asm	/^ b34:	b9 01 00 00 00       	mov    $0x1,%ecx$/;"	l
b34	kill.asm	/^ b34:	00 00 00 $/;"	l
b34	ls.asm	/^     b34:	83 c2 08             	add    $0x8,%edx$/;"	l
b34	sh.asm	/^     b34:	48 ba 01 1e 00 00 00 	movabs $0x1e01,%rdx$/;"	l
b34	usertests.asm	/^     b34:	00 00 00 $/;"	l
b35	cat.asm	/^ b35:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
b35	wc.asm	/^ b35:	48 8b 00             	mov    (%rax),%rax$/;"	l
b35	zombie.asm	/^ b35:	48 c1 e0 04          	shl    $0x4,%rax$/;"	l
b36	init.asm	/^ b36:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
b36	ln.asm	/^ b36:	00 00 00 $/;"	l
b37	kill.asm	/^ b37:	48 89 10             	mov    %rdx,(%rax)$/;"	l
b37	ls.asm	/^     b37:	89 95 20 ff ff ff    	mov    %edx,-0xe0(%rbp)$/;"	l
b37	mount.asm	/^ b37:	8b 55 ec             	mov    -0x14(%rbp),%edx$/;"	l
b37	stressfs.asm	/^ b37:	8b 50 08             	mov    0x8(%rax),%edx$/;"	l
b37	usertests.asm	/^     b37:	ff d0                	callq  *%rax$/;"	l
b38	cat.asm	/^ b38:	01 c2                	add    %eax,%edx$/;"	l
b38	echo.asm	/^ b38:	00 00 00 $/;"	l
b38	wc.asm	/^ b38:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax$/;"	l
b39	grep.asm	/^ b39:	ba 0a 00 00 00       	mov    $0xa,%edx$/;"	l
b39	init.asm	/^ b39:	89 c0                	mov    %eax,%eax$/;"	l
b39	ln.asm	/^ b39:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
b39	usertests.asm	/^     b39:	89 45 fc             	mov    %eax,-0x4(%rbp)$/;"	l
b39	zombie.asm	/^ b39:	48 01 45 f8          	add    %rax,-0x8(%rbp)$/;"	l
b3a	cat.asm	/^ b3a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b3a	kill.asm	/^ b3a:	48 b8 90 0e 00 00 00 	movabs $0xe90,%rax$/;"	l
b3a	mkdir.asm	/^ b3a:	00 00 00 $/;"	l
b3a	mount.asm	/^ b3a:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
b3a	rm.asm	/^ b3a:	00 00 00 $/;"	l
b3a	stressfs.asm	/^ b3a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
b3b	echo.asm	/^ b3b:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%rax)$/;"	l
b3b	init.asm	/^ b3b:	48 c1 e0 04          	shl    $0x4,%rax$/;"	l
b3b	sh.asm	/^     b3b:	00 00 00 $/;"	l
b3c	usertests.asm	/^     b3c:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)$/;"	l
b3c	wc.asm	/^ b3c:	77 22                	ja     b60 <free+0x71>$/;"	l
b3d	ln.asm	/^ b3d:	48 89 10             	mov    %rdx,(%rax)$/;"	l
b3d	ls.asm	/^     b3d:	eb 12                	jmp    b51 <printf+0x1d4>$/;"	l
b3d	mkdir.asm	/^ b3d:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
b3d	mount.asm	/^ b3d:	48 b8 20 0e 00 00 00 	movabs $0xe20,%rax$/;"	l
b3d	rm.asm	/^ b3d:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
b3d	zombie.asm	/^ b3d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b3e	cat.asm	/^ b3e:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
b3e	grep.asm	/^ b3e:	89 c7                	mov    %eax,%edi$/;"	l
b3e	sh.asm	/^     b3e:	48 89 ce             	mov    %rcx,%rsi$/;"	l
b3e	stressfs.asm	/^ b3e:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
b3e	wc.asm	/^ b3e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b3f	init.asm	/^ b3f:	48 89 c2             	mov    %rax,%rdx$/;"	l
b3f	ls.asm	/^     b3f:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax$/;"	l
b4	cat.asm	/^  b4:	00 00 00 $/;"	l
b4	echo.asm	/^  b4:	89 ca                	mov    %ecx,%edx$/;"	l
b4	forktest.asm	/^  b4:	00 00 00 $/;"	l
b4	grep.asm	/^  b4:	48 89 c7             	mov    %rax,%rdi$/;"	l
b4	ln.asm	/^  b4:	ff d0                	callq  *%rax$/;"	l
b4	ls.asm	/^      b4:	ba 0e 00 00 00       	mov    $0xe,%edx$/;"	l
b4	mkdir.asm	/^  b4:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
b4	rm.asm	/^  b4:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
b4	sh.asm	/^      b4:	bf 02 00 00 00       	mov    $0x2,%edi$/;"	l
b40	grep.asm	/^ b40:	48 b8 8b 08 00 00 00 	movabs $0x88b,%rax$/;"	l
b40	ln.asm	/^ b40:	48 b8 d0 0e 00 00 00 	movabs $0xed0,%rax$/;"	l
b40	usertests.asm	/^     b40:	75 45                	jne    b87 <writetest1+0x1ee>$/;"	l
b41	cat.asm	/^ b41:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
b41	kill.asm	/^ b41:	00 00 00 $/;"	l
b41	mkdir.asm	/^ b41:	48 b8 f0 0e 00 00 00 	movabs $0xef0,%rax$/;"	l
b41	rm.asm	/^ b41:	48 b8 f0 0e 00 00 00 	movabs $0xef0,%rax$/;"	l
b41	sh.asm	/^     b41:	48 89 c7             	mov    %rax,%rdi$/;"	l
b41	stressfs.asm	/^ b41:	01 c2                	add    %eax,%edx$/;"	l
b41	zombie.asm	/^ b41:	8b 55 ec             	mov    -0x14(%rbp),%edx$/;"	l
b42	echo.asm	/^ b42:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
b42	init.asm	/^ b42:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b42	usertests.asm	/^     b42:	81 7d f8 8b 00 00 00 	cmpl   $0x8b,-0x8(%rbp)$/;"	l
b42	wc.asm	/^ b42:	48 8b 00             	mov    (%rax),%rax$/;"	l
b43	stressfs.asm	/^ b43:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b44	kill.asm	/^ b44:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%rax)$/;"	l
b44	mount.asm	/^ b44:	00 00 00 $/;"	l
b44	sh.asm	/^     b44:	48 b8 51 09 00 00 00 	movabs $0x951,%rax$/;"	l
b44	zombie.asm	/^ b44:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
b45	cat.asm	/^ b45:	48 8b 10             	mov    (%rax),%rdx$/;"	l
b45	wc.asm	/^ b45:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
b46	echo.asm	/^ b46:	48 8b 00             	mov    (%rax),%rax$/;"	l
b46	init.asm	/^ b46:	48 01 d0             	add    %rdx,%rax$/;"	l
b46	ls.asm	/^     b46:	48 8d 50 08          	lea    0x8(%rax),%rdx$/;"	l
b47	grep.asm	/^ b47:	00 00 00 $/;"	l
b47	ln.asm	/^ b47:	00 00 00 $/;"	l
b47	mount.asm	/^ b47:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
b47	stressfs.asm	/^ b47:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
b47	zombie.asm	/^ b47:	48 b8 30 0e 00 00 00 	movabs $0xe30,%rax$/;"	l
b48	cat.asm	/^ b48:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b48	mkdir.asm	/^ b48:	00 00 00 $/;"	l
b48	rm.asm	/^ b48:	00 00 00 $/;"	l
b49	echo.asm	/^ b49:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
b49	init.asm	/^ b49:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax$/;"	l
b49	usertests.asm	/^     b49:	0f 85 d8 00 00 00    	jne    c27 <writetest1+0x28e>$/;"	l
b49	wc.asm	/^ b49:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
b4a	grep.asm	/^ b4a:	ff d0                	callq  *%rax$/;"	l
b4a	ln.asm	/^ b4a:	48 8b 10             	mov    (%rax),%rdx$/;"	l
b4a	ls.asm	/^     b4a:	48 89 95 28 ff ff ff 	mov    %rdx,-0xd8(%rbp)$/;"	l
b4a	stressfs.asm	/^ b4a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
b4b	kill.asm	/^ b4b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
b4b	mkdir.asm	/^ b4b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
b4b	mount.asm	/^ b4b:	48 89 10             	mov    %rdx,(%rax)$/;"	l
b4b	rm.asm	/^ b4b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
b4b	sh.asm	/^     b4b:	00 00 00 $/;"	l
b4c	cat.asm	/^ b4c:	48 89 10             	mov    %rdx,(%rax)$/;"	l
b4c	grep.asm	/^ b4c:	e9 7a 01 00 00       	jmpq   ccb <printf+0x373>$/;"	l
b4d	echo.asm	/^ b4d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b4d	init.asm	/^ b4d:	75 27                	jne    b76 <free+0x113>$/;"	l
b4d	ln.asm	/^ b4d:	48 b8 c0 0e 00 00 00 	movabs $0xec0,%rax$/;"	l
b4d	wc.asm	/^ b4d:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax$/;"	l
b4e	mount.asm	/^ b4e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b4e	sh.asm	/^     b4e:	ff d0                	callq  *%rax$/;"	l
b4e	stressfs.asm	/^ b4e:	48 8b 10             	mov    (%rax),%rdx$/;"	l
b4e	zombie.asm	/^ b4e:	00 00 00 $/;"	l
b4f	cat.asm	/^ b4f:	eb 0b                	jmp    b5c <free+0x11e>$/;"	l
b4f	init.asm	/^ b4f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b4f	kill.asm	/^ b4f:	48 8b 00             	mov    (%rax),%rax$/;"	l
b4f	mkdir.asm	/^ b4f:	48 89 10             	mov    %rdx,(%rax)$/;"	l
b4f	rm.asm	/^ b4f:	48 89 10             	mov    %rdx,(%rax)$/;"	l
b4f	usertests.asm	/^     b4f:	48 b8 08 88 00 00 00 	movabs $0x8808,%rax$/;"	l
b5	init.asm	/^  b5:	00 00 00 $/;"	l
b5	kill.asm	/^  b5:	48 89 f7             	mov    %rsi,%rdi$/;"	l
b5	stressfs.asm	/^  b5:	ff d1                	callq  *%rcx$/;"	l
b50	sh.asm	/^     b50:	85 c0                	test   %eax,%eax$/;"	l
b51	cat.asm	/^ b51:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b51	echo.asm	/^ b51:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
b51	grep.asm	/^ b51:	83 bd 3c ff ff ff 73 	cmpl   $0x73,-0xc4(%rbp)$/;"	l
b51	ls.asm	/^     b51:	8b 30                	mov    (%rax),%esi$/;"	l
b51	stressfs.asm	/^ b51:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b51	wc.asm	/^ b51:	76 c7                	jbe    b1a <free+0x2b>$/;"	l
b51	zombie.asm	/^ b51:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
b52	kill.asm	/^ b52:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
b52	mkdir.asm	/^ b52:	48 b8 f0 0e 00 00 00 	movabs $0xef0,%rax$/;"	l
b52	mount.asm	/^ b52:	48 83 c0 10          	add    $0x10,%rax$/;"	l
b52	rm.asm	/^ b52:	48 b8 f0 0e 00 00 00 	movabs $0xef0,%rax$/;"	l
b52	sh.asm	/^     b52:	75 a0                	jne    af4 <parseline+0x30>$/;"	l
b53	init.asm	/^ b53:	8b 50 08             	mov    0x8(%rax),%edx$/;"	l
b53	ls.asm	/^     b53:	8b 85 1c ff ff ff    	mov    -0xe4(%rbp),%eax$/;"	l
b53	wc.asm	/^ b53:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b54	echo.asm	/^ b54:	3b 45 ec             	cmp    -0x14(%rbp),%eax$/;"	l
b54	ln.asm	/^ b54:	00 00 00 $/;"	l
b54	sh.asm	/^     b54:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx$/;"	l
b55	cat.asm	/^ b55:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
b55	stressfs.asm	/^ b55:	48 89 10             	mov    %rdx,(%rax)$/;"	l
b55	zombie.asm	/^ b55:	48 89 10             	mov    %rdx,(%rax)$/;"	l
b56	init.asm	/^ b56:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
b56	kill.asm	/^ b56:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b56	mount.asm	/^ b56:	eb 4e                	jmp    ba6 <malloc+0x148>$/;"	l
b56	usertests.asm	/^     b56:	00 00 00 $/;"	l
b57	echo.asm	/^ b57:	72 65                	jb     bbe <malloc+0xfa>$/;"	l
b57	ln.asm	/^ b57:	48 89 10             	mov    %rdx,(%rax)$/;"	l
b57	wc.asm	/^ b57:	48 8b 00             	mov    (%rax),%rax$/;"	l
b58	grep.asm	/^ b58:	0f 85 a5 00 00 00    	jne    c03 <printf+0x2ab>$/;"	l
b58	mount.asm	/^ b58:	48 b8 20 0e 00 00 00 	movabs $0xe20,%rax$/;"	l
b58	sh.asm	/^     b58:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
b58	stressfs.asm	/^ b58:	eb 0b                	jmp    b65 <free+0x11e>$/;"	l
b58	zombie.asm	/^ b58:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b59	cat.asm	/^ b59:	48 89 10             	mov    %rdx,(%rax)$/;"	l
b59	echo.asm	/^ b59:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b59	ls.asm	/^     b59:	b9 01 00 00 00       	mov    $0x1,%ecx$/;"	l
b59	mkdir.asm	/^ b59:	00 00 00 $/;"	l
b59	rm.asm	/^ b59:	00 00 00 $/;"	l
b59	usertests.asm	/^     b59:	8b 00                	mov    (%rax),%eax$/;"	l
b5a	init.asm	/^ b5a:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
b5a	kill.asm	/^ b5a:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
b5a	ln.asm	/^ b5a:	48 b8 c0 0e 00 00 00 	movabs $0xec0,%rax$/;"	l
b5a	stressfs.asm	/^ b5a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b5a	wc.asm	/^ b5a:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax$/;"	l
b5b	usertests.asm	/^     b5b:	8b 55 f8             	mov    -0x8(%rbp),%edx$/;"	l
b5c	cat.asm	/^ b5c:	48 b8 10 12 00 00 00 	movabs $0x1210,%rax$/;"	l
b5c	mkdir.asm	/^ b5c:	48 8b 10             	mov    (%rax),%rdx$/;"	l
b5c	rm.asm	/^ b5c:	48 8b 10             	mov    (%rax),%rdx$/;"	l
b5c	sh.asm	/^     b5c:	48 ba 03 1e 00 00 00 	movabs $0x1e03,%rdx$/;"	l
b5c	zombie.asm	/^ b5c:	48 83 c0 10          	add    $0x10,%rax$/;"	l
b5d	echo.asm	/^ b5d:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
b5d	init.asm	/^ b5d:	01 c2                	add    %eax,%edx$/;"	l
b5d	kill.asm	/^ b5d:	3b 45 ec             	cmp    -0x14(%rbp),%eax$/;"	l
b5e	grep.asm	/^ b5e:	8b 85 20 ff ff ff    	mov    -0xe0(%rbp),%eax$/;"	l
b5e	ls.asm	/^     b5e:	ba 0a 00 00 00       	mov    $0xa,%edx$/;"	l
b5e	stressfs.asm	/^ b5e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
b5e	usertests.asm	/^     b5e:	48 be a9 6b 00 00 00 	movabs $0x6ba9,%rsi$/;"	l
b5e	wc.asm	/^ b5e:	76 ba                	jbe    b1a <free+0x2b>$/;"	l
b5f	init.asm	/^ b5f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b5f	mkdir.asm	/^ b5f:	48 b8 e0 0e 00 00 00 	movabs $0xee0,%rax$/;"	l
b5f	mount.asm	/^ b5f:	00 00 00 $/;"	l
b5f	rm.asm	/^ b5f:	48 b8 e0 0e 00 00 00 	movabs $0xee0,%rax$/;"	l
b6	echo.asm	/^  b6:	48 89 fe             	mov    %rdi,%rsi$/;"	l
b6	ln.asm	/^  b6:	55                   	push   %rbp$/;"	l
b6	zombie.asm	/^  b6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)$/;"	l
b60	echo.asm	/^ b60:	3b 45 ec             	cmp    -0x14(%rbp),%eax$/;"	l
b60	kill.asm	/^ b60:	72 65                	jb     bc7 <malloc+0xfa>$/;"	l
b60	wc.asm	/^ b60:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
b60	zombie.asm	/^ b60:	eb 4e                	jmp    bb0 <malloc+0x148>$/;"	l
b61	ln.asm	/^ b61:	00 00 00 $/;"	l
b62	kill.asm	/^ b62:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b62	mount.asm	/^ b62:	48 8b 00             	mov    (%rax),%rax$/;"	l
b62	stressfs.asm	/^ b62:	48 89 10             	mov    %rdx,(%rax)$/;"	l
b62	zombie.asm	/^ b62:	48 b8 30 0e 00 00 00 	movabs $0xe30,%rax$/;"	l
b63	cat.asm	/^ b63:	00 00 00 $/;"	l
b63	echo.asm	/^ b63:	75 10                	jne    b75 <malloc+0xb1>$/;"	l
b63	init.asm	/^ b63:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
b63	ls.asm	/^     b63:	89 c7                	mov    %eax,%edi$/;"	l
b63	sh.asm	/^     b63:	00 00 00 $/;"	l
b64	grep.asm	/^ b64:	83 f8 30             	cmp    $0x30,%eax$/;"	l
b64	ln.asm	/^ b64:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%rax)$/;"	l
b64	wc.asm	/^ b64:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
b65	echo.asm	/^ b65:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b65	ls.asm	/^     b65:	48 b8 b0 08 00 00 00 	movabs $0x8b0,%rax$/;"	l
b65	mount.asm	/^ b65:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)$/;"	l
b65	stressfs.asm	/^ b65:	48 b8 d0 0f 00 00 00 	movabs $0xfd0,%rax$/;"	l
b65	usertests.asm	/^     b65:	00 00 00 $/;"	l
b66	cat.asm	/^ b66:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx$/;"	l
b66	init.asm	/^ b66:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
b66	kill.asm	/^ b66:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
b66	mkdir.asm	/^ b66:	00 00 00 $/;"	l
b66	rm.asm	/^ b66:	00 00 00 $/;"	l
b66	sh.asm	/^     b66:	48 89 ce             	mov    %rcx,%rsi$/;"	l
b67	grep.asm	/^ b67:	73 23                	jae    b8c <printf+0x234>$/;"	l
b67	wc.asm	/^ b67:	89 c0                	mov    %eax,%eax$/;"	l
b68	usertests.asm	/^     b68:	89 c7                	mov    %eax,%edi$/;"	l
b69	echo.asm	/^ b69:	48 8b 10             	mov    (%rax),%rdx$/;"	l
b69	grep.asm	/^ b69:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax$/;"	l
b69	kill.asm	/^ b69:	3b 45 ec             	cmp    -0x14(%rbp),%eax$/;"	l
b69	mkdir.asm	/^ b69:	48 89 10             	mov    %rdx,(%rax)$/;"	l
b69	mount.asm	/^ b69:	75 23                	jne    b8e <malloc+0x130>$/;"	l
b69	rm.asm	/^ b69:	48 89 10             	mov    %rdx,(%rax)$/;"	l
b69	sh.asm	/^     b69:	48 89 c7             	mov    %rax,%rdi$/;"	l
b69	wc.asm	/^ b69:	48 c1 e0 04          	shl    $0x4,%rax$/;"	l
b69	zombie.asm	/^ b69:	00 00 00 $/;"	l
b6a	cat.asm	/^ b6a:	48 89 10             	mov    %rdx,(%rax)$/;"	l
b6a	init.asm	/^ b6a:	48 8b 10             	mov    (%rax),%rdx$/;"	l
b6a	usertests.asm	/^     b6a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
b6b	ln.asm	/^ b6b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
b6b	mount.asm	/^ b6b:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
b6c	echo.asm	/^ b6c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
b6c	kill.asm	/^ b6c:	75 10                	jne    b7e <malloc+0xb1>$/;"	l
b6c	ls.asm	/^     b6c:	00 00 00 $/;"	l
b6c	mkdir.asm	/^ b6c:	48 b8 e0 0e 00 00 00 	movabs $0xee0,%rax$/;"	l
b6c	rm.asm	/^ b6c:	48 b8 e0 0e 00 00 00 	movabs $0xee0,%rax$/;"	l
b6c	sh.asm	/^     b6c:	48 b8 51 09 00 00 00 	movabs $0x951,%rax$/;"	l
b6c	stressfs.asm	/^ b6c:	00 00 00 $/;"	l
b6c	zombie.asm	/^ b6c:	48 8b 00             	mov    (%rax),%rax$/;"	l
b6d	cat.asm	/^ b6d:	90                   	nop$/;"	l
b6d	init.asm	/^ b6d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b6d	wc.asm	/^ b6d:	48 89 c2             	mov    %rax,%rdx$/;"	l
b6e	cat.asm	/^ b6e:	c9                   	leaveq $/;"	l
b6e	kill.asm	/^ b6e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b6e	mount.asm	/^ b6e:	89 c7                	mov    %eax,%edi$/;"	l
b6f	cat.asm	/^ b6f:	c3                   	retq   $/;"	l
b6f	ln.asm	/^ b6f:	48 8b 00             	mov    (%rax),%rax$/;"	l
b6f	ls.asm	/^     b6f:	ff d0                	callq  *%rax$/;"	l
b6f	stressfs.asm	/^ b6f:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx$/;"	l
b6f	usertests.asm	/^     b6f:	48 b9 d1 61 00 00 00 	movabs $0x61d1,%rcx$/;"	l
b6f	zombie.asm	/^ b6f:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)$/;"	l
b7	cat.asm	/^  b7:	ff d0                	callq  *%rax$/;"	l
b7	forktest.asm	/^  b7:	ff d2                	callq  *%rdx$/;"	l
b7	grep.asm	/^  b7:	48 b8 a2 05 00 00 00 	movabs $0x5a2,%rax$/;"	l
b7	ln.asm	/^  b7:	48 89 e5             	mov    %rsp,%rbp$/;"	l
b7	mkdir.asm	/^  b7:	3b 45 ec             	cmp    -0x14(%rbp),%eax$/;"	l
b7	mount.asm	/^  b7:	48 83 45 f0 01       	addq   $0x1,-0x10(%rbp)$/;"	l
b7	rm.asm	/^  b7:	3b 45 ec             	cmp    -0x14(%rbp),%eax$/;"	l
b7	stressfs.asm	/^  b7:	0f b6 45 e8          	movzbl -0x18(%rbp),%eax$/;"	l
b7	wc.asm	/^  b7:	48 be a0 10 00 00 00 	movabs $0x10a0,%rsi$/;"	l
b70	cat.asm	/^ b70:	55                   	push   %rbp$/;"	l
b70	echo.asm	/^ b70:	48 89 10             	mov    %rdx,(%rax)$/;"	l
b70	grep.asm	/^ b70:	8b 95 20 ff ff ff    	mov    -0xe0(%rbp),%edx$/;"	l
b70	mount.asm	/^ b70:	48 b8 e5 09 00 00 00 	movabs $0x9e5,%rax$/;"	l
b70	wc.asm	/^ b70:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
b71	cat.asm	/^ b71:	48 89 e5             	mov    %rsp,%rbp$/;"	l
b71	init.asm	/^ b71:	48 89 10             	mov    %rdx,(%rax)$/;"	l
b71	ls.asm	/^     b71:	e9 7a 01 00 00       	jmpq   cf0 <printf+0x373>$/;"	l
b72	kill.asm	/^ b72:	48 8b 10             	mov    (%rax),%rdx$/;"	l
b72	ln.asm	/^ b72:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
b73	echo.asm	/^ b73:	eb 2e                	jmp    ba3 <malloc+0xdf>$/;"	l
b73	mkdir.asm	/^ b73:	00 00 00 $/;"	l
b73	rm.asm	/^ b73:	00 00 00 $/;"	l
b73	sh.asm	/^     b73:	00 00 00 $/;"	l
b73	stressfs.asm	/^ b73:	48 89 10             	mov    %rdx,(%rax)$/;"	l
b73	zombie.asm	/^ b73:	75 23                	jne    b98 <malloc+0x130>$/;"	l
b74	cat.asm	/^ b74:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
b74	init.asm	/^ b74:	eb 0b                	jmp    b81 <free+0x11e>$/;"	l
b74	wc.asm	/^ b74:	48 01 c2             	add    %rax,%rdx$/;"	l
b75	echo.asm	/^ b75:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b75	kill.asm	/^ b75:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
b75	zombie.asm	/^ b75:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
b76	grep.asm	/^ b76:	89 d2                	mov    %edx,%edx$/;"	l
b76	init.asm	/^ b76:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b76	ln.asm	/^ b76:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b76	ls.asm	/^     b76:	83 bd 3c ff ff ff 73 	cmpl   $0x73,-0xc4(%rbp)$/;"	l
b76	mkdir.asm	/^ b76:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%rax)$/;"	l
b76	rm.asm	/^ b76:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%rax)$/;"	l
b76	sh.asm	/^     b76:	ff d0                	callq  *%rax$/;"	l
b76	stressfs.asm	/^ b76:	90                   	nop$/;"	l
b76	usertests.asm	/^     b76:	00 00 00 $/;"	l
b77	mount.asm	/^ b77:	00 00 00 $/;"	l
b77	stressfs.asm	/^ b77:	c9                   	leaveq $/;"	l
b77	wc.asm	/^ b77:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b78	cat.asm	/^ b78:	89 7d ec             	mov    %edi,-0x14(%rbp)$/;"	l
b78	grep.asm	/^ b78:	48 01 d0             	add    %rdx,%rax$/;"	l
b78	sh.asm	/^     b78:	85 c0                	test   %eax,%eax$/;"	l
b78	stressfs.asm	/^ b78:	c3                   	retq   $/;"	l
b78	zombie.asm	/^ b78:	89 c7                	mov    %eax,%edi$/;"	l
b79	echo.asm	/^ b79:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
b79	kill.asm	/^ b79:	48 89 10             	mov    %rdx,(%rax)$/;"	l
b79	stressfs.asm	/^ b79:	55                   	push   %rbp$/;"	l
b79	usertests.asm	/^     b79:	ff d1                	callq  *%rcx$/;"	l
b7a	init.asm	/^ b7a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
b7a	ln.asm	/^ b7a:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
b7a	mount.asm	/^ b7a:	ff d0                	callq  *%rax$/;"	l
b7a	sh.asm	/^     b7a:	74 58                	je     bd4 <parseline+0x110>$/;"	l
b7a	stressfs.asm	/^ b7a:	48 89 e5             	mov    %rsp,%rbp$/;"	l
b7a	zombie.asm	/^ b7a:	48 b8 ef 09 00 00 00 	movabs $0x9ef,%rax$/;"	l
b7b	cat.asm	/^ b7b:	81 7d ec ff 0f 00 00 	cmpl   $0xfff,-0x14(%rbp)$/;"	l
b7b	grep.asm	/^ b7b:	8b 95 20 ff ff ff    	mov    -0xe0(%rbp),%edx$/;"	l
b7b	usertests.asm	/^     b7b:	48 b8 02 60 00 00 00 	movabs $0x6002,%rax$/;"	l
b7b	wc.asm	/^ b7b:	48 8b 00             	mov    (%rax),%rax$/;"	l
b7c	echo.asm	/^ b7c:	2b 45 ec             	sub    -0x14(%rbp),%eax$/;"	l
b7c	kill.asm	/^ b7c:	eb 2e                	jmp    bac <malloc+0xdf>$/;"	l
b7c	mount.asm	/^ b7c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
b7c	sh.asm	/^     b7c:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi$/;"	l
b7d	ln.asm	/^ b7d:	3b 45 ec             	cmp    -0x14(%rbp),%eax$/;"	l
b7d	ls.asm	/^     b7d:	0f 85 a5 00 00 00    	jne    c28 <printf+0x2ab>$/;"	l
b7d	mkdir.asm	/^ b7d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
b7d	rm.asm	/^ b7d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
b7d	stressfs.asm	/^ b7d:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
b7e	init.asm	/^ b7e:	48 89 10             	mov    %rdx,(%rax)$/;"	l
b7e	kill.asm	/^ b7e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b7e	wc.asm	/^ b7e:	48 39 c2             	cmp    %rax,%rdx$/;"	l
b7f	echo.asm	/^ b7f:	89 c2                	mov    %eax,%edx$/;"	l
b8	init.asm	/^  b8:	ff d0                	callq  *%rax$/;"	l
b8	kill.asm	/^  b8:	89 d1                	mov    %edx,%ecx$/;"	l
b80	ln.asm	/^ b80:	72 65                	jb     be7 <malloc+0xfa>$/;"	l
b80	mount.asm	/^ b80:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)$/;"	l
b80	sh.asm	/^     b80:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
b81	echo.asm	/^ b81:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b81	grep.asm	/^ b81:	83 c2 08             	add    $0x8,%edx$/;"	l
b81	init.asm	/^ b81:	48 b8 50 10 00 00 00 	movabs $0x1050,%rax$/;"	l
b81	mkdir.asm	/^ b81:	48 8b 00             	mov    (%rax),%rax$/;"	l
b81	rm.asm	/^ b81:	48 8b 00             	mov    (%rax),%rax$/;"	l
b81	stressfs.asm	/^ b81:	89 7d ec             	mov    %edi,-0x14(%rbp)$/;"	l
b81	wc.asm	/^ b81:	75 2d                	jne    bb0 <free+0xc1>$/;"	l
b81	zombie.asm	/^ b81:	00 00 00 $/;"	l
b82	cat.asm	/^ b82:	77 07                	ja     b8b <morecore+0x1b>$/;"	l
b82	kill.asm	/^ b82:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
b82	ln.asm	/^ b82:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b82	usertests.asm	/^     b82:	00 00 00 $/;"	l
b83	ls.asm	/^     b83:	8b 85 20 ff ff ff    	mov    -0xe0(%rbp),%eax$/;"	l
b83	wc.asm	/^ b83:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
b84	cat.asm	/^ b84:	c7 45 ec 00 10 00 00 	movl   $0x1000,-0x14(%rbp)$/;"	l
b84	grep.asm	/^ b84:	89 95 20 ff ff ff    	mov    %edx,-0xe0(%rbp)$/;"	l
b84	mkdir.asm	/^ b84:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
b84	rm.asm	/^ b84:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
b84	sh.asm	/^     b84:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
b84	stressfs.asm	/^ b84:	81 7d ec ff 0f 00 00 	cmpl   $0xfff,-0x14(%rbp)$/;"	l
b84	zombie.asm	/^ b84:	ff d0                	callq  *%rax$/;"	l
b85	echo.asm	/^ b85:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
b85	kill.asm	/^ b85:	2b 45 ec             	sub    -0x14(%rbp),%eax$/;"	l
b85	mount.asm	/^ b85:	75 07                	jne    b8e <malloc+0x130>$/;"	l
b85	usertests.asm	/^     b85:	ff d0                	callq  *%rax$/;"	l
b86	ln.asm	/^ b86:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
b86	zombie.asm	/^ b86:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
b87	mount.asm	/^ b87:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
b87	usertests.asm	/^     b87:	81 7d fc 00 02 00 00 	cmpl   $0x200,-0x4(%rbp)$/;"	l
b87	wc.asm	/^ b87:	8b 50 08             	mov    0x8(%rax),%edx$/;"	l
b88	echo.asm	/^ b88:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b88	init.asm	/^ b88:	00 00 00 $/;"	l
b88	kill.asm	/^ b88:	89 c2                	mov    %eax,%edx$/;"	l
b88	mkdir.asm	/^ b88:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b88	rm.asm	/^ b88:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b89	ln.asm	/^ b89:	3b 45 ec             	cmp    -0x14(%rbp),%eax$/;"	l
b89	ls.asm	/^     b89:	83 f8 30             	cmp    $0x30,%eax$/;"	l
b89	sh.asm	/^     b89:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
b8a	grep.asm	/^ b8a:	eb 12                	jmp    b9e <printf+0x246>$/;"	l
b8a	kill.asm	/^ b8a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b8a	wc.asm	/^ b8a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b8a	zombie.asm	/^ b8a:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)$/;"	l
b8b	cat.asm	/^ b8b:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
b8b	init.asm	/^ b8b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx$/;"	l
b8b	stressfs.asm	/^ b8b:	77 07                	ja     b94 <morecore+0x1b>$/;"	l
b8c	echo.asm	/^ b8c:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
b8c	grep.asm	/^ b8c:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax$/;"	l
b8c	ln.asm	/^ b8c:	75 10                	jne    b9e <malloc+0xb1>$/;"	l
b8c	ls.asm	/^     b8c:	73 23                	jae    bb1 <printf+0x234>$/;"	l
b8c	mkdir.asm	/^ b8c:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
b8c	mount.asm	/^ b8c:	eb 18                	jmp    ba6 <malloc+0x148>$/;"	l
b8c	rm.asm	/^ b8c:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
b8d	stressfs.asm	/^ b8d:	c7 45 ec 00 10 00 00 	movl   $0x1000,-0x14(%rbp)$/;"	l
b8e	cat.asm	/^ b8e:	c1 e0 04             	shl    $0x4,%eax$/;"	l
b8e	kill.asm	/^ b8e:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
b8e	ln.asm	/^ b8e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b8e	ls.asm	/^     b8e:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax$/;"	l
b8e	mount.asm	/^ b8e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b8e	sh.asm	/^     b8e:	48 89 c7             	mov    %rax,%rdi$/;"	l
b8e	usertests.asm	/^     b8e:	74 38                	je     bc8 <writetest1+0x22f>$/;"	l
b8e	wc.asm	/^ b8e:	48 8b 00             	mov    (%rax),%rax$/;"	l
b8f	echo.asm	/^ b8f:	89 c0                	mov    %eax,%eax$/;"	l
b8f	init.asm	/^ b8f:	48 89 10             	mov    %rdx,(%rax)$/;"	l
b8f	mkdir.asm	/^ b8f:	3b 45 ec             	cmp    -0x14(%rbp),%eax$/;"	l
b8f	rm.asm	/^ b8f:	3b 45 ec             	cmp    -0x14(%rbp),%eax$/;"	l
b8f	zombie.asm	/^ b8f:	75 07                	jne    b98 <malloc+0x130>$/;"	l
b9	cat.asm	/^  b9:	90                   	nop$/;"	l
b9	echo.asm	/^  b9:	48 89 75 f8          	mov    %rsi,-0x8(%rbp)$/;"	l
b9	forktest.asm	/^  b9:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)$/;"	l
b9	ls.asm	/^      b9:	89 d3                	mov    %edx,%ebx$/;"	l
b9	sh.asm	/^      b9:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
b90	usertests.asm	/^     b90:	48 b8 08 88 00 00 00 	movabs $0x8808,%rax$/;"	l
b91	cat.asm	/^ b91:	89 c7                	mov    %eax,%edi$/;"	l
b91	echo.asm	/^ b91:	48 c1 e0 04          	shl    $0x4,%rax$/;"	l
b91	kill.asm	/^ b91:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b91	sh.asm	/^     b91:	48 b8 aa 07 00 00 00 	movabs $0x7aa,%rax$/;"	l
b91	wc.asm	/^ b91:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
b91	zombie.asm	/^ b91:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
b92	init.asm	/^ b92:	90                   	nop$/;"	l
b92	ln.asm	/^ b92:	48 8b 10             	mov    (%rax),%rdx$/;"	l
b92	mkdir.asm	/^ b92:	72 65                	jb     bf9 <malloc+0xfa>$/;"	l
b92	mount.asm	/^ b92:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
b92	rm.asm	/^ b92:	72 65                	jb     bf9 <malloc+0xfa>$/;"	l
b93	cat.asm	/^ b93:	48 b8 74 05 00 00 00 	movabs $0x574,%rax$/;"	l
b93	grep.asm	/^ b93:	48 8d 50 08          	lea    0x8(%rax),%rdx$/;"	l
b93	init.asm	/^ b93:	c9                   	leaveq $/;"	l
b94	init.asm	/^ b94:	c3                   	retq   $/;"	l
b94	mkdir.asm	/^ b94:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b94	rm.asm	/^ b94:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b94	stressfs.asm	/^ b94:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
b94	wc.asm	/^ b94:	01 c2                	add    %eax,%edx$/;"	l
b95	echo.asm	/^ b95:	48 01 45 f8          	add    %rax,-0x8(%rbp)$/;"	l
b95	init.asm	/^ b95:	55                   	push   %rbp$/;"	l
b95	kill.asm	/^ b95:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
b95	ln.asm	/^ b95:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
b95	ls.asm	/^     b95:	8b 95 20 ff ff ff    	mov    -0xe0(%rbp),%edx$/;"	l
b96	init.asm	/^ b96:	48 89 e5             	mov    %rsp,%rbp$/;"	l
b96	mount.asm	/^ b96:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b96	wc.asm	/^ b96:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
b96	zombie.asm	/^ b96:	eb 18                	jmp    bb0 <malloc+0x148>$/;"	l
b97	grep.asm	/^ b97:	48 89 95 28 ff ff ff 	mov    %rdx,-0xd8(%rbp)$/;"	l
b97	stressfs.asm	/^ b97:	c1 e0 04             	shl    $0x4,%eax$/;"	l
b97	usertests.asm	/^     b97:	00 00 00 $/;"	l
b98	kill.asm	/^ b98:	89 c0                	mov    %eax,%eax$/;"	l
b98	mkdir.asm	/^ b98:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
b98	rm.asm	/^ b98:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
b98	sh.asm	/^     b98:	00 00 00 $/;"	l
b98	zombie.asm	/^ b98:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b99	echo.asm	/^ b99:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b99	init.asm	/^ b99:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
b99	ln.asm	/^ b99:	48 89 10             	mov    %rdx,(%rax)$/;"	l
b9a	cat.asm	/^ b9a:	00 00 00 $/;"	l
b9a	kill.asm	/^ b9a:	48 c1 e0 04          	shl    $0x4,%rax$/;"	l
b9a	mount.asm	/^ b9a:	48 8b 00             	mov    (%rax),%rax$/;"	l
b9a	stressfs.asm	/^ b9a:	89 c7                	mov    %eax,%edi$/;"	l
b9a	usertests.asm	/^     b9a:	8b 00                	mov    (%rax),%eax$/;"	l
b9a	wc.asm	/^ b9a:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
b9b	ls.asm	/^     b9b:	89 d2                	mov    %edx,%edx$/;"	l
b9b	mkdir.asm	/^ b9b:	3b 45 ec             	cmp    -0x14(%rbp),%eax$/;"	l
b9b	rm.asm	/^ b9b:	3b 45 ec             	cmp    -0x14(%rbp),%eax$/;"	l
b9b	sh.asm	/^     b9b:	ff d0                	callq  *%rax$/;"	l
b9c	ln.asm	/^ b9c:	eb 2e                	jmp    bcc <malloc+0xdf>$/;"	l
b9c	stressfs.asm	/^ b9c:	48 b8 7d 05 00 00 00 	movabs $0x57d,%rax$/;"	l
b9c	usertests.asm	/^     b9c:	8b 55 fc             	mov    -0x4(%rbp),%edx$/;"	l
b9c	zombie.asm	/^ b9c:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
b9d	cat.asm	/^ b9d:	ff d0                	callq  *%rax$/;"	l
b9d	echo.asm	/^ b9d:	8b 55 ec             	mov    -0x14(%rbp),%edx$/;"	l
b9d	init.asm	/^ b9d:	89 7d ec             	mov    %edi,-0x14(%rbp)$/;"	l
b9d	ls.asm	/^     b9d:	48 01 d0             	add    %rdx,%rax$/;"	l
b9d	mount.asm	/^ b9d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
b9d	sh.asm	/^     b9d:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx$/;"	l
b9d	wc.asm	/^ b9d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b9e	grep.asm	/^ b9e:	48 8b 00             	mov    (%rax),%rax$/;"	l
b9e	kill.asm	/^ b9e:	48 01 45 f8          	add    %rax,-0x8(%rbp)$/;"	l
b9e	ln.asm	/^ b9e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b9e	mkdir.asm	/^ b9e:	75 10                	jne    bb0 <malloc+0xb1>$/;"	l
b9e	rm.asm	/^ b9e:	75 10                	jne    bb0 <malloc+0xb1>$/;"	l
b9f	cat.asm	/^ b9f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
b9f	usertests.asm	/^     b9f:	48 be c6 6b 00 00 00 	movabs $0x6bc6,%rsi$/;"	l
ba	cat.asm	/^  ba:	c9                   	leaveq $/;"	l
ba	init.asm	/^  ba:	85 c0                	test   %eax,%eax$/;"	l
ba	kill.asm	/^  ba:	fc                   	cld    $/;"	l
ba	ln.asm	/^  ba:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ba	mkdir.asm	/^  ba:	7c 8e                	jl     4a <main+0x4a>$/;"	l
ba	rm.asm	/^  ba:	7c 8e                	jl     4a <main+0x4a>$/;"	l
ba	usertests.asm	/^      ba:	00 00 00 $/;"	l
ba	zombie.asm	/^  ba:	eb 0a                	jmp    c6 <strcmp+0x1c>$/;"	l
ba0	echo.asm	/^ ba0:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
ba0	init.asm	/^ ba0:	81 7d ec ff 0f 00 00 	cmpl   $0xfff,-0x14(%rbp)$/;"	l
ba0	ls.asm	/^     ba0:	8b 95 20 ff ff ff    	mov    -0xe0(%rbp),%edx$/;"	l
ba0	mkdir.asm	/^ ba0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ba0	rm.asm	/^ ba0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ba0	zombie.asm	/^ ba0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ba1	grep.asm	/^ ba1:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)$/;"	l
ba1	mount.asm	/^ ba1:	e9 41 ff ff ff       	jmpq   ae7 <malloc+0x89>$/;"	l
ba1	sh.asm	/^     ba1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ba1	wc.asm	/^ ba1:	48 8b 00             	mov    (%rax),%rax$/;"	l
ba2	kill.asm	/^ ba2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ba2	ln.asm	/^ ba2:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
ba3	cat.asm	/^ ba3:	48 83 7d f8 ff       	cmpq   $0xffffffffffffffff,-0x8(%rbp)$/;"	l
ba3	echo.asm	/^ ba3:	48 b8 90 0e 00 00 00 	movabs $0xe90,%rax$/;"	l
ba3	stressfs.asm	/^ ba3:	00 00 00 $/;"	l
ba4	mkdir.asm	/^ ba4:	48 8b 10             	mov    (%rax),%rdx$/;"	l
ba4	rm.asm	/^ ba4:	48 8b 10             	mov    (%rax),%rdx$/;"	l
ba4	wc.asm	/^ ba4:	48 8b 10             	mov    (%rax),%rdx$/;"	l
ba4	zombie.asm	/^ ba4:	48 8b 00             	mov    (%rax),%rax$/;"	l
ba5	ln.asm	/^ ba5:	2b 45 ec             	sub    -0x14(%rbp),%eax$/;"	l
ba5	sh.asm	/^     ba5:	48 89 d6             	mov    %rdx,%rsi$/;"	l
ba6	kill.asm	/^ ba6:	8b 55 ec             	mov    -0x14(%rbp),%edx$/;"	l
ba6	ls.asm	/^     ba6:	83 c2 08             	add    $0x8,%edx$/;"	l
ba6	mount.asm	/^ ba6:	c9                   	leaveq $/;"	l
ba6	stressfs.asm	/^ ba6:	ff d0                	callq  *%rax$/;"	l
ba6	usertests.asm	/^     ba6:	00 00 00 $/;"	l
ba7	init.asm	/^ ba7:	77 07                	ja     bb0 <morecore+0x1b>$/;"	l
ba7	mkdir.asm	/^ ba7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ba7	mount.asm	/^ ba7:	c3                   	retq   $/;"	l
ba7	rm.asm	/^ ba7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ba7	wc.asm	/^ ba7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ba7	zombie.asm	/^ ba7:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ba8	cat.asm	/^ ba8:	75 07                	jne    bb1 <morecore+0x41>$/;"	l
ba8	grep.asm	/^ ba8:	48 83 bd 48 ff ff ff 	cmpq   $0x0,-0xb8(%rbp)$/;"	l
ba8	ln.asm	/^ ba8:	89 c2                	mov    %eax,%edx$/;"	l
ba8	sh.asm	/^     ba8:	48 89 c7             	mov    %rax,%rdi$/;"	l
ba8	stressfs.asm	/^ ba8:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ba9	init.asm	/^ ba9:	c7 45 ec 00 10 00 00 	movl   $0x1000,-0x14(%rbp)$/;"	l
ba9	kill.asm	/^ ba9:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
ba9	ls.asm	/^     ba9:	89 95 20 ff ff ff    	mov    %edx,-0xe0(%rbp)$/;"	l
ba9	usertests.asm	/^     ba9:	89 c7                	mov    %eax,%edi$/;"	l
baa	cat.asm	/^ baa:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
baa	echo.asm	/^ baa:	00 00 00 $/;"	l
baa	ln.asm	/^ baa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
bab	mkdir.asm	/^ bab:	48 89 10             	mov    %rdx,(%rax)$/;"	l
bab	rm.asm	/^ bab:	48 89 10             	mov    %rdx,(%rax)$/;"	l
bab	sh.asm	/^     bab:	48 b8 c4 0a 00 00 00 	movabs $0xac4,%rax$/;"	l
bab	usertests.asm	/^     bab:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
bab	wc.asm	/^ bab:	48 89 10             	mov    %rdx,(%rax)$/;"	l
bab	zombie.asm	/^ bab:	e9 41 ff ff ff       	jmpq   af1 <malloc+0x89>$/;"	l
bac	kill.asm	/^ bac:	48 b8 a0 0e 00 00 00 	movabs $0xea0,%rax$/;"	l
bac	stressfs.asm	/^ bac:	48 83 7d f8 ff       	cmpq   $0xffffffffffffffff,-0x8(%rbp)$/;"	l
backcmd	sh.c	/^backcmd(struct cmd *subcmd)$/;"	f
backcmd	sh.c	/^struct backcmd {$/;"	s	file:
bad	echo.asm	/^ bad:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
bad	kernel.asm	/^ bad:$/;"	l
bad	kernel.asm	/^bad:$/;"	l
bae	ln.asm	/^ bae:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
bae	mkdir.asm	/^ bae:	eb 2e                	jmp    bde <malloc+0xdf>$/;"	l
bae	rm.asm	/^ bae:	eb 2e                	jmp    bde <malloc+0xdf>$/;"	l
bae	wc.asm	/^ bae:	eb 0e                	jmp    bbe <free+0xcf>$/;"	l
baf	cat.asm	/^ baf:	eb 36                	jmp    be7 <morecore+0x77>$/;"	l
baf	grep.asm	/^ baf:	00 $/;"	l
baf	ls.asm	/^     baf:	eb 12                	jmp    bc3 <printf+0x246>$/;"	l
balloc	fs.c	/^balloc(uint dev)$/;"	f	file:
balloc	mkfs.c	/^balloc(int used)$/;"	f
base	umalloc.c	/^static Header base;$/;"	v	file:
base_15_0	mmu.h	/^  uint base_15_0 : 16; \/\/ Low bits of segment base address$/;"	m	struct:segdesc
base_23_16	mmu.h	/^  uint base_23_16 : 8; \/\/ Middle bits of segment base address$/;"	m	struct:segdesc
base_31_24	mmu.h	/^  uint base_31_24 : 8; \/\/ High bits of segment base address$/;"	m	struct:segdesc
bb	cat.asm	/^  bb:	c3                   	retq   $/;"	l
bb	kill.asm	/^  bb:	f3 aa                	rep stos %al,%es:(%rdi)$/;"	l
bb	ls.asm	/^      bb:	29 c3                	sub    %eax,%ebx$/;"	l
bb	stressfs.asm	/^  bb:	89 c2                	mov    %eax,%edx$/;"	l
bb0	grep.asm	/^ bb0:	75 3e                	jne    bf0 <printf+0x298>$/;"	l
bb0	init.asm	/^ bb0:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
bb0	mkdir.asm	/^ bb0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
bb0	rm.asm	/^ bb0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
bb0	usertests.asm	/^     bb0:	48 b9 d1 61 00 00 00 	movabs $0x61d1,%rcx$/;"	l
bb0	wc.asm	/^ bb0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
bb0	zombie.asm	/^ bb0:	c9                   	leaveq $/;"	l
bb1	cat.asm	/^ bb1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
bb1	echo.asm	/^ bb1:	48 89 10             	mov    %rdx,(%rax)$/;"	l
bb1	ln.asm	/^ bb1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
bb1	ls.asm	/^     bb1:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax$/;"	l
bb1	stressfs.asm	/^ bb1:	75 07                	jne    bba <morecore+0x41>$/;"	l
bb1	zombie.asm	/^ bb1:	c3                   	retq   $/;"	l
bb2	grep.asm	/^ bb2:	48 b8 2e 10 00 00 00 	movabs $0x102e,%rax$/;"	l
bb2	sh.asm	/^     bb2:	00 00 00 $/;"	l
bb3	init.asm	/^ bb3:	c1 e0 04             	shl    $0x4,%eax$/;"	l
bb3	kill.asm	/^ bb3:	00 00 00 $/;"	l
bb3	stressfs.asm	/^ bb3:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
bb4	echo.asm	/^ bb4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
bb4	mkdir.asm	/^ bb4:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
bb4	rm.asm	/^ bb4:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
bb4	wc.asm	/^ bb4:	48 8b 10             	mov    (%rax),%rdx$/;"	l
bb5	cat.asm	/^ bb5:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
bb5	ln.asm	/^ bb5:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
bb5	sh.asm	/^     bb5:	ff d0                	callq  *%rax$/;"	l
bb6	init.asm	/^ bb6:	89 c7                	mov    %eax,%edi$/;"	l
bb6	kill.asm	/^ bb6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
bb7	mkdir.asm	/^ bb7:	2b 45 ec             	sub    -0x14(%rbp),%eax$/;"	l
bb7	rm.asm	/^ bb7:	2b 45 ec             	sub    -0x14(%rbp),%eax$/;"	l
bb7	sh.asm	/^     bb7:	48 89 c2             	mov    %rax,%rdx$/;"	l
bb7	usertests.asm	/^     bb7:	00 00 00 $/;"	l
bb7	wc.asm	/^ bb7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
bb8	echo.asm	/^ bb8:	48 83 c0 10          	add    $0x10,%rax$/;"	l
bb8	init.asm	/^ bb8:	48 b8 99 05 00 00 00 	movabs $0x599,%rax$/;"	l
bb8	ln.asm	/^ bb8:	89 c0                	mov    %eax,%eax$/;"	l
bb8	ls.asm	/^     bb8:	48 8d 50 08          	lea    0x8(%rax),%rdx$/;"	l
bb8	stressfs.asm	/^ bb8:	eb 36                	jmp    bf0 <morecore+0x77>$/;"	l
bb9	cat.asm	/^ bb9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
bb9	grep.asm	/^ bb9:	00 00 00 $/;"	l
bba	kill.asm	/^ bba:	48 89 10             	mov    %rdx,(%rax)$/;"	l
bba	ln.asm	/^ bba:	48 c1 e0 04          	shl    $0x4,%rax$/;"	l
bba	mkdir.asm	/^ bba:	89 c2                	mov    %eax,%edx$/;"	l
bba	rm.asm	/^ bba:	89 c2                	mov    %eax,%edx$/;"	l
bba	sh.asm	/^     bba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
bba	stressfs.asm	/^ bba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
bba	usertests.asm	/^     bba:	ff d1                	callq  *%rcx$/;"	l
bbb	wc.asm	/^ bbb:	48 89 10             	mov    %rdx,(%rax)$/;"	l
bbc	echo.asm	/^ bbc:	eb 4e                	jmp    c0c <malloc+0x148>$/;"	l
bbc	grep.asm	/^ bbc:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)$/;"	l
bbc	ls.asm	/^     bbc:	48 89 95 28 ff ff ff 	mov    %rdx,-0xd8(%rbp)$/;"	l
bbc	mkdir.asm	/^ bbc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
bbc	rm.asm	/^ bbc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
bbc	usertests.asm	/^     bbc:	48 b8 02 60 00 00 00 	movabs $0x6002,%rax$/;"	l
bbd	cat.asm	/^ bbd:	8b 55 ec             	mov    -0x14(%rbp),%edx$/;"	l
bbd	kill.asm	/^ bbd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
bbe	echo.asm	/^ bbe:	48 b8 90 0e 00 00 00 	movabs $0xe90,%rax$/;"	l
bbe	ln.asm	/^ bbe:	48 01 45 f8          	add    %rax,-0x8(%rbp)$/;"	l
bbe	sh.asm	/^     bbe:	48 89 d6             	mov    %rdx,%rsi$/;"	l
bbe	stressfs.asm	/^ bbe:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
bbe	wc.asm	/^ bbe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
bbf	init.asm	/^ bbf:	00 00 00 $/;"	l
bc	cat.asm	/^  bc:	55                   	push   %rbp$/;"	l
bc	init.asm	/^  bc:	79 20                	jns    de <main+0xde>$/;"	l
bc	mkdir.asm	/^  bc:	48 b8 e0 03 00 00 00 	movabs $0x3e0,%rax$/;"	l
bc	mount.asm	/^  bc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
bc	rm.asm	/^  bc:	48 b8 e0 03 00 00 00 	movabs $0x3e0,%rax$/;"	l
bc	zombie.asm	/^  bc:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)$/;"	l
bc0	cat.asm	/^ bc0:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
bc0	mkdir.asm	/^ bc0:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
bc0	rm.asm	/^ bc0:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
bc1	kill.asm	/^ bc1:	48 83 c0 10          	add    $0x10,%rax$/;"	l
bc1	sh.asm	/^     bc1:	48 89 c7             	mov    %rax,%rdi$/;"	l
bc2	init.asm	/^ bc2:	ff d0                	callq  *%rax$/;"	l
bc2	ln.asm	/^ bc2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
bc2	stressfs.asm	/^ bc2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
bc2	wc.asm	/^ bc2:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
bc3	cat.asm	/^ bc3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
bc3	grep.asm	/^ bc3:	eb 2b                	jmp    bf0 <printf+0x298>$/;"	l
bc3	ls.asm	/^     bc3:	48 8b 00             	mov    (%rax),%rax$/;"	l
bc3	mkdir.asm	/^ bc3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
bc3	rm.asm	/^ bc3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
bc3	usertests.asm	/^     bc3:	00 00 00 $/;"	l
bc4	init.asm	/^ bc4:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
bc4	sh.asm	/^     bc4:	48 b8 e6 06 00 00 00 	movabs $0x6e6,%rax$/;"	l
bc5	echo.asm	/^ bc5:	00 00 00 $/;"	l
bc5	grep.asm	/^ bc5:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax$/;"	l
bc5	kill.asm	/^ bc5:	eb 4e                	jmp    c15 <malloc+0x148>$/;"	l
bc5	wc.asm	/^ bc5:	89 c0                	mov    %eax,%eax$/;"	l
bc6	ln.asm	/^ bc6:	8b 55 ec             	mov    -0x14(%rbp),%edx$/;"	l
bc6	ls.asm	/^     bc6:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)$/;"	l
bc6	stressfs.asm	/^ bc6:	8b 55 ec             	mov    -0x14(%rbp),%edx$/;"	l
bc6	usertests.asm	/^     bc6:	ff d0                	callq  *%rax$/;"	l
bc7	cat.asm	/^ bc7:	48 83 c0 10          	add    $0x10,%rax$/;"	l
bc7	kill.asm	/^ bc7:	48 b8 a0 0e 00 00 00 	movabs $0xea0,%rax$/;"	l
bc7	mkdir.asm	/^ bc7:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
bc7	rm.asm	/^ bc7:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
bc7	wc.asm	/^ bc7:	48 c1 e0 04          	shl    $0x4,%rax$/;"	l
bc8	echo.asm	/^ bc8:	48 8b 00             	mov    (%rax),%rax$/;"	l
bc8	init.asm	/^ bc8:	48 83 7d f8 ff       	cmpq   $0xffffffffffffffff,-0x8(%rbp)$/;"	l
bc8	usertests.asm	/^     bc8:	48 b8 40 88 00 00 00 	movabs $0x8840,%rax$/;"	l
bc9	ln.asm	/^ bc9:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
bc9	stressfs.asm	/^ bc9:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
bca	mkdir.asm	/^ bca:	89 c0                	mov    %eax,%eax$/;"	l
bca	rm.asm	/^ bca:	89 c0                	mov    %eax,%eax$/;"	l
bcache	bio.c	/^} bcache;$/;"	v	typeref:struct:__anon4
bcb	cat.asm	/^ bcb:	48 89 c7             	mov    %rax,%rdi$/;"	l
bcb	echo.asm	/^ bcb:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)$/;"	l
bcb	sh.asm	/^     bcb:	00 00 00 $/;"	l
bcb	wc.asm	/^ bcb:	48 89 c2             	mov    %rax,%rdx$/;"	l
bcc	grep.asm	/^ bcc:	0f b6 00             	movzbl (%rax),%eax$/;"	l
bcc	ln.asm	/^ bcc:	48 b8 d0 0e 00 00 00 	movabs $0xed0,%rax$/;"	l
bcc	mkdir.asm	/^ bcc:	48 c1 e0 04          	shl    $0x4,%rax$/;"	l
bcc	rm.asm	/^ bcc:	48 c1 e0 04          	shl    $0x4,%rax$/;"	l
bcc	stressfs.asm	/^ bcc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
bcd	init.asm	/^ bcd:	75 07                	jne    bd6 <morecore+0x41>$/;"	l
bcd	kernel.asm	/^  bcd = (sb & (1 << 2)) == 0;$/;"	d
bcd	ls.asm	/^     bcd:	48 83 bd 48 ff ff ff 	cmpq   $0x0,-0xb8(%rbp)$/;"	l
bce	cat.asm	/^ bce:	48 b8 3e 0a 00 00 00 	movabs $0xa3e,%rax$/;"	l
bce	kill.asm	/^ bce:	00 00 00 $/;"	l
bce	sh.asm	/^     bce:	ff d0                	callq  *%rax$/;"	l
bce	wc.asm	/^ bce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
bcf	echo.asm	/^ bcf:	75 23                	jne    bf4 <malloc+0x130>$/;"	l
bcf	grep.asm	/^ bcf:	0f be d0             	movsbl %al,%edx$/;"	l
bcf	init.asm	/^ bcf:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
bcf	usertests.asm	/^     bcf:	00 00 00 $/;"	l
bcmd	sh.asm	/^    bcmd = (struct backcmd*)cmd;$/;"	d
bd	cat.asm	/^  bd:	48 89 e5             	mov    %rsp,%rbp$/;"	l
bd	echo.asm	/^  bd:	89 55 f0             	mov    %edx,-0x10(%rbp)$/;"	l
bd	kill.asm	/^  bd:	89 ca                	mov    %ecx,%edx$/;"	l
bd	ls.asm	/^      bd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
bd	stressfs.asm	/^  bd:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
bd	usertests.asm	/^      bd:	ff d2                	callq  *%rdx$/;"	l
bd0	mkdir.asm	/^ bd0:	48 01 45 f8          	add    %rax,-0x8(%rbp)$/;"	l
bd0	rm.asm	/^ bd0:	48 01 45 f8          	add    %rax,-0x8(%rbp)$/;"	l
bd0	sh.asm	/^     bd0:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
bd0	stressfs.asm	/^ bd0:	48 83 c0 10          	add    $0x10,%rax$/;"	l
bd1	echo.asm	/^ bd1:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
bd1	kill.asm	/^ bd1:	48 8b 00             	mov    (%rax),%rax$/;"	l
bd2	grep.asm	/^ bd2:	8b 85 1c ff ff ff    	mov    -0xe4(%rbp),%eax$/;"	l
bd2	usertests.asm	/^     bd2:	8b 00                	mov    (%rax),%eax$/;"	l
bd2	wc.asm	/^ bd2:	48 01 d0             	add    %rdx,%rax$/;"	l
bd3	ln.asm	/^ bd3:	00 00 00 $/;"	l
bd4	echo.asm	/^ bd4:	89 c7                	mov    %eax,%edi$/;"	l
bd4	init.asm	/^ bd4:	eb 36                	jmp    c0c <morecore+0x77>$/;"	l
bd4	kill.asm	/^ bd4:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)$/;"	l
bd4	ls.asm	/^     bd4:	00 $/;"	l
bd4	mkdir.asm	/^ bd4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
bd4	rm.asm	/^ bd4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
bd4	sh.asm	/^     bd4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
bd4	stressfs.asm	/^ bd4:	48 89 c7             	mov    %rax,%rdi$/;"	l
bd4	usertests.asm	/^     bd4:	3b 45 f8             	cmp    -0x8(%rbp),%eax$/;"	l
bd5	cat.asm	/^ bd5:	00 00 00 $/;"	l
bd5	ls.asm	/^     bd5:	75 3e                	jne    c15 <printf+0x298>$/;"	l
bd5	wc.asm	/^ bd5:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax$/;"	l
bd6	echo.asm	/^ bd6:	48 b8 4b 0a 00 00 00 	movabs $0xa4b,%rax$/;"	l
bd6	init.asm	/^ bd6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
bd6	ln.asm	/^ bd6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
bd7	ls.asm	/^     bd7:	48 b8 61 10 00 00 00 	movabs $0x1061,%rax$/;"	l
bd7	stressfs.asm	/^ bd7:	48 b8 47 0a 00 00 00 	movabs $0xa47,%rax$/;"	l
bd7	usertests.asm	/^     bd7:	74 45                	je     c1e <writetest1+0x285>$/;"	l
bd8	cat.asm	/^ bd8:	ff d0                	callq  *%rax$/;"	l
bd8	grep.asm	/^ bd8:	89 d6                	mov    %edx,%esi$/;"	l
bd8	kill.asm	/^ bd8:	75 23                	jne    bfd <malloc+0x130>$/;"	l
bd8	mkdir.asm	/^ bd8:	8b 55 ec             	mov    -0x14(%rbp),%edx$/;"	l
bd8	rm.asm	/^ bd8:	8b 55 ec             	mov    -0x14(%rbp),%edx$/;"	l
bd8	sh.asm	/^     bd8:	c9                   	leaveq $/;"	l
bd9	sh.asm	/^     bd9:	c3                   	retq   $/;"	l
bd9	usertests.asm	/^     bd9:	48 b8 40 88 00 00 00 	movabs $0x8840,%rax$/;"	l
bd9	wc.asm	/^ bd9:	75 27                	jne    c02 <free+0x113>$/;"	l
bda	cat.asm	/^ bda:	48 b8 10 12 00 00 00 	movabs $0x1210,%rax$/;"	l
bda	grep.asm	/^ bda:	89 c7                	mov    %eax,%edi$/;"	l
bda	init.asm	/^ bda:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
bda	kernel.asm	/^  bda = (uchar *) P2V(0x400);$/;"	d
bda	kill.asm	/^ bda:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
bda	ln.asm	/^ bda:	48 89 10             	mov    %rdx,(%rax)$/;"	l
bda	sh.asm	/^     bda:	55                   	push   %rbp$/;"	l
bdb	mkdir.asm	/^ bdb:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
bdb	rm.asm	/^ bdb:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
bdb	sh.asm	/^     bdb:	48 89 e5             	mov    %rsp,%rbp$/;"	l
bdb	wc.asm	/^ bdb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
bdc	grep.asm	/^ bdc:	48 b8 5b 08 00 00 00 	movabs $0x85b,%rax$/;"	l
bdd	echo.asm	/^ bdd:	00 00 00 $/;"	l
bdd	kill.asm	/^ bdd:	89 c7                	mov    %eax,%edi$/;"	l
bdd	ln.asm	/^ bdd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
bde	init.asm	/^ bde:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
bde	ls.asm	/^     bde:	00 00 00 $/;"	l
bde	mkdir.asm	/^ bde:	48 b8 f0 0e 00 00 00 	movabs $0xef0,%rax$/;"	l
bde	rm.asm	/^ bde:	48 b8 f0 0e 00 00 00 	movabs $0xef0,%rax$/;"	l
bde	sh.asm	/^     bde:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
bde	stressfs.asm	/^ bde:	00 00 00 $/;"	l
bdf	kill.asm	/^ bdf:	48 b8 54 0a 00 00 00 	movabs $0xa54,%rax$/;"	l
bdf	wc.asm	/^ bdf:	8b 50 08             	mov    0x8(%rax),%edx$/;"	l
be	grep.asm	/^  be:	00 00 00 $/;"	l
be	init.asm	/^  be:	48 be 6f 0d 00 00 00 	movabs $0xd6f,%rsi$/;"	l
be	ln.asm	/^  be:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)$/;"	l
be	sh.asm	/^      be:	48 b9 cd 16 00 00 00 	movabs $0x16cd,%rcx$/;"	l
be	wc.asm	/^  be:	00 00 00 $/;"	l
be0	echo.asm	/^ be0:	ff d0                	callq  *%rax$/;"	l
be0	usertests.asm	/^     be0:	00 00 00 $/;"	l
be1	cat.asm	/^ be1:	00 00 00 $/;"	l
be1	ln.asm	/^ be1:	48 83 c0 10          	add    $0x10,%rax$/;"	l
be1	ls.asm	/^     be1:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)$/;"	l
be1	stressfs.asm	/^ be1:	ff d0                	callq  *%rax$/;"	l
be2	echo.asm	/^ be2:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
be2	init.asm	/^ be2:	8b 55 ec             	mov    -0x14(%rbp),%edx$/;"	l
be2	sh.asm	/^     be2:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
be2	wc.asm	/^ be2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
be3	grep.asm	/^ be3:	00 00 00 $/;"	l
be3	stressfs.asm	/^ be3:	48 b8 d0 0f 00 00 00 	movabs $0xfd0,%rax$/;"	l
be3	usertests.asm	/^     be3:	8b 08                	mov    (%rax),%ecx$/;"	l
be4	cat.asm	/^ be4:	48 8b 00             	mov    (%rax),%rax$/;"	l
be5	init.asm	/^ be5:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
be5	ln.asm	/^ be5:	eb 4e                	jmp    c35 <malloc+0x148>$/;"	l
be5	mkdir.asm	/^ be5:	00 00 00 $/;"	l
be5	rm.asm	/^ be5:	00 00 00 $/;"	l
be5	usertests.asm	/^     be5:	48 b8 08 88 00 00 00 	movabs $0x8808,%rax$/;"	l
be6	echo.asm	/^ be6:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)$/;"	l
be6	grep.asm	/^ be6:	ff d0                	callq  *%rax$/;"	l
be6	kill.asm	/^ be6:	00 00 00 $/;"	l
be6	sh.asm	/^     be6:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)$/;"	l
be6	wc.asm	/^ be6:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
be7	cat.asm	/^ be7:	c9                   	leaveq $/;"	l
be7	ln.asm	/^ be7:	48 b8 d0 0e 00 00 00 	movabs $0xed0,%rax$/;"	l
be8	cat.asm	/^ be8:	c3                   	retq   $/;"	l
be8	grep.asm	/^ be8:	48 83 85 48 ff ff ff 	addq   $0x1,-0xb8(%rbp)$/;"	l
be8	init.asm	/^ be8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
be8	ls.asm	/^     be8:	eb 2b                	jmp    c15 <printf+0x298>$/;"	l
be8	mkdir.asm	/^ be8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
be8	rm.asm	/^ be8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
be9	cat.asm	/^ be9:	55                   	push   %rbp$/;"	l
be9	kill.asm	/^ be9:	ff d0                	callq  *%rax$/;"	l
be9	wc.asm	/^ be9:	01 c2                	add    %eax,%edx$/;"	l
bea	cat.asm	/^ bea:	48 89 e5             	mov    %rsp,%rbp$/;"	l
bea	ls.asm	/^     bea:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax$/;"	l
bea	sh.asm	/^     bea:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx$/;"	l
bea	stressfs.asm	/^ bea:	00 00 00 $/;"	l
beb	echo.asm	/^ beb:	75 07                	jne    bf4 <malloc+0x130>$/;"	l
beb	kill.asm	/^ beb:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
beb	wc.asm	/^ beb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
bec	init.asm	/^ bec:	48 83 c0 10          	add    $0x10,%rax$/;"	l
bec	mkdir.asm	/^ bec:	48 89 10             	mov    %rdx,(%rax)$/;"	l
bec	rm.asm	/^ bec:	48 89 10             	mov    %rdx,(%rax)$/;"	l
bec	usertests.asm	/^     bec:	00 00 00 $/;"	l
bed	cat.asm	/^ bed:	48 83 ec 30          	sub    $0x30,%rsp$/;"	l
bed	echo.asm	/^ bed:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
bed	stressfs.asm	/^ bed:	48 8b 00             	mov    (%rax),%rax$/;"	l
bee	ln.asm	/^ bee:	00 00 00 $/;"	l
bee	sh.asm	/^     bee:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
bef	grep.asm	/^ bef:	01 $/;"	l
bef	kill.asm	/^ bef:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)$/;"	l
bef	mkdir.asm	/^ bef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
bef	rm.asm	/^ bef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
bef	usertests.asm	/^     bef:	8b 00                	mov    (%rax),%eax$/;"	l
bef	wc.asm	/^ bef:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
begin_op	log.c	/^begin_op(void)$/;"	f
bf	kill.asm	/^  bf:	48 89 fe             	mov    %rdi,%rsi$/;"	l
bf	usertests.asm	/^      bf:	48 b8 02 60 00 00 00 	movabs $0x6002,%rax$/;"	l
bf0	grep.asm	/^ bf0:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax$/;"	l
bf0	init.asm	/^ bf0:	48 89 c7             	mov    %rax,%rdi$/;"	l
bf0	stressfs.asm	/^ bf0:	c9                   	leaveq $/;"	l
bf1	cat.asm	/^ bf1:	89 7d dc             	mov    %edi,-0x24(%rbp)$/;"	l
bf1	ln.asm	/^ bf1:	48 8b 00             	mov    (%rax),%rax$/;"	l
bf1	ls.asm	/^     bf1:	0f b6 00             	movzbl (%rax),%eax$/;"	l
bf1	stressfs.asm	/^ bf1:	c3                   	retq   $/;"	l
bf1	usertests.asm	/^     bf1:	8b 55 f8             	mov    -0x8(%rbp),%edx$/;"	l
bf2	echo.asm	/^ bf2:	eb 18                	jmp    c0c <malloc+0x148>$/;"	l
bf2	sh.asm	/^     bf2:	48 89 d6             	mov    %rdx,%rsi$/;"	l
bf2	stressfs.asm	/^ bf2:	55                   	push   %rbp$/;"	l
bf2	wc.asm	/^ bf2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
bf3	init.asm	/^ bf3:	48 b8 63 0a 00 00 00 	movabs $0xa63,%rax$/;"	l
bf3	mkdir.asm	/^ bf3:	48 83 c0 10          	add    $0x10,%rax$/;"	l
bf3	rm.asm	/^ bf3:	48 83 c0 10          	add    $0x10,%rax$/;"	l
bf3	stressfs.asm	/^ bf3:	48 89 e5             	mov    %rsp,%rbp$/;"	l
bf4	cat.asm	/^ bf4:	8b 45 dc             	mov    -0x24(%rbp),%eax$/;"	l
bf4	echo.asm	/^ bf4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
bf4	kill.asm	/^ bf4:	75 07                	jne    bfd <malloc+0x130>$/;"	l
bf4	ln.asm	/^ bf4:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)$/;"	l
bf4	ls.asm	/^     bf4:	0f be d0             	movsbl %al,%edx$/;"	l
bf4	usertests.asm	/^     bf4:	48 be d8 6b 00 00 00 	movabs $0x6bd8,%rsi$/;"	l
bf5	sh.asm	/^     bf5:	48 89 c7             	mov    %rax,%rdi$/;"	l
bf6	kill.asm	/^ bf6:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
bf6	stressfs.asm	/^ bf6:	48 83 ec 30          	sub    $0x30,%rsp$/;"	l
bf6	wc.asm	/^ bf6:	48 8b 10             	mov    (%rax),%rdx$/;"	l
bf7	cat.asm	/^ bf7:	48 83 c0 0f          	add    $0xf,%rax$/;"	l
bf7	grep.asm	/^ bf7:	0f b6 00             	movzbl (%rax),%eax$/;"	l
bf7	ls.asm	/^     bf7:	8b 85 1c ff ff ff    	mov    -0xe4(%rbp),%eax$/;"	l
bf7	mkdir.asm	/^ bf7:	eb 4e                	jmp    c47 <malloc+0x148>$/;"	l
bf7	rm.asm	/^ bf7:	eb 4e                	jmp    c47 <malloc+0x148>$/;"	l
bf8	echo.asm	/^ bf8:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
bf8	ln.asm	/^ bf8:	75 23                	jne    c1d <malloc+0x130>$/;"	l
bf8	sh.asm	/^     bf8:	48 b8 e5 0e 00 00 00 	movabs $0xee5,%rax$/;"	l
bf9	mkdir.asm	/^ bf9:	48 b8 f0 0e 00 00 00 	movabs $0xef0,%rax$/;"	l
bf9	rm.asm	/^ bf9:	48 b8 f0 0e 00 00 00 	movabs $0xef0,%rax$/;"	l
bf9	wc.asm	/^ bf9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
bfa	grep.asm	/^ bfa:	84 c0                	test   %al,%al$/;"	l
bfa	init.asm	/^ bfa:	00 00 00 $/;"	l
bfa	ln.asm	/^ bfa:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
bfa	stressfs.asm	/^ bfa:	89 7d dc             	mov    %edi,-0x24(%rbp)$/;"	l
bfb	cat.asm	/^ bfb:	48 c1 e8 04          	shr    $0x4,%rax$/;"	l
bfb	kill.asm	/^ bfb:	eb 18                	jmp    c15 <malloc+0x148>$/;"	l
bfb	usertests.asm	/^     bfb:	00 00 00 $/;"	l
bfc	echo.asm	/^ bfc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
bfc	grep.asm	/^ bfc:	75 c7                	jne    bc5 <printf+0x26d>$/;"	l
bfd	init.asm	/^ bfd:	ff d0                	callq  *%rax$/;"	l
bfd	kill.asm	/^ bfd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
bfd	ln.asm	/^ bfd:	89 c7                	mov    %eax,%edi$/;"	l
bfd	ls.asm	/^     bfd:	89 d6                	mov    %edx,%esi$/;"	l
bfd	stressfs.asm	/^ bfd:	8b 45 dc             	mov    -0x24(%rbp),%eax$/;"	l
bfd	wc.asm	/^ bfd:	48 89 10             	mov    %rdx,(%rax)$/;"	l
bfe	grep.asm	/^ bfe:	e9 c8 00 00 00       	jmpq   ccb <printf+0x373>$/;"	l
bfe	usertests.asm	/^     bfe:	89 c7                	mov    %eax,%edi$/;"	l
bff	cat.asm	/^ bff:	83 c0 01             	add    $0x1,%eax$/;"	l
bff	init.asm	/^ bff:	48 b8 50 10 00 00 00 	movabs $0x1050,%rax$/;"	l
bff	ln.asm	/^ bff:	48 b8 74 0a 00 00 00 	movabs $0xa74,%rax$/;"	l
bff	ls.asm	/^     bff:	89 c7                	mov    %eax,%edi$/;"	l
bff	sh.asm	/^     bff:	00 00 00 $/;"	l
bfree	fs.c	/^bfree(int dev, uint b)$/;"	f	file:
bget	bio.c	/^bget(uint dev, uint blockno)$/;"	f	file:
bi	kernel.asm	/^  bi = b % BPB;$/;"	d
bigargtest	usertests.c	/^bigargtest(void)$/;"	f
bigdir	usertests.c	/^bigdir(void)$/;"	f
bigfile	usertests.c	/^bigfile(void)$/;"	f
bigwrite	usertests.c	/^bigwrite(void)$/;"	f
binit	bio.c	/^binit(void)$/;"	f
block	log.c	/^  int block[LOGSIZE];$/;"	m	struct:logheader	file:
blockno	buf.h	/^  uint blockno;$/;"	m	struct:buf
bmap	fs.c	/^bmap(struct inode *ip, uint bn)$/;"	f	file:
bmapstart	fs.h	/^  uint bmapstart;    \/\/ Block number of first free map block$/;"	m	struct:superblock
bootmain	bootmain.c	/^bootmain(void)$/;"	f
bp	cat.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	echo.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	grep.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	init.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	kernel.asm	/^    bp = bread(dev, BBLOCK(b, sb));$/;"	d
bp	kernel.asm	/^    bp = bread(dev, IBLOCK(inum, sb));$/;"	d
bp	kernel.asm	/^    bp = bread(ip->dev, addr);$/;"	d
bp	kernel.asm	/^    bp = bread(ip->dev, bmap(ip, off\/BSIZE));$/;"	d
bp	kernel.asm	/^    bp = bread(ip->dev, ip->addrs[NDIRECT]);$/;"	d
bp	kernel.asm	/^  bp = 0;$/;"	d
bp	kernel.asm	/^  bp = bread(dev, 1);$/;"	d
bp	kernel.asm	/^  bp = bread(dev, BBLOCK(b, sb));$/;"	d
bp	kernel.asm	/^  bp = bread(dev, bno);$/;"	d
bp	kernel.asm	/^  bp = bread(ip->dev, IBLOCK(ip->inum, sb));$/;"	d
bp	kernel.asm	/^  bp = bread(ip->dev, IBLOCK(ip->inum,sb));$/;"	d
bp	kill.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	ln.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	ls.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	mkdir.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	mount.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	rm.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	sh.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	stressfs.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	usertests.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	wc.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	zombie.asm	/^  bp = (Header*)ap - 1;$/;"	d
bread	bio.c	/^bread(uint dev, uint blockno)$/;"	f
brelse	bio.c	/^brelse(struct buf *b)$/;"	f
bss_end_addr	bootmain.c	/^  uint64 bss_end_addr;$/;"	m	struct:mbheader	file:
bsstest	usertests.c	/^bsstest(void)$/;"	f
buf	bio.c	/^  struct buf buf[NBUF];$/;"	m	struct:__anon4	typeref:struct:__anon4::buf	file:
buf	buf.h	/^struct buf {$/;"	s
buf	cat.c	/^char buf[512];$/;"	v
buf	console.c	/^  char buf[INPUT_BUF];$/;"	m	struct:__anon8	file:
buf	grep.c	/^char buf[1024];$/;"	v
buf	kernel.asm	/^  buf = (char*)p;$/;"	d
buf	usertests.c	/^char buf[8192];$/;"	v
buf	wc.c	/^char buf[512];$/;"	v
bwrite	bio.c	/^bwrite(struct buf *b)$/;"	f
bzero	fs.c	/^bzero(int dev, int bno)$/;"	f	file:
c	cat.asm	/^    c = fmt[i] & 0xff;$/;"	d
c	echo.asm	/^    c = fmt[i] & 0xff;$/;"	d
c	grep.asm	/^    c = fmt[i] & 0xff;$/;"	d
c	grep.asm	/^   c:	89 75 d4             	mov    %esi,-0x2c(%rbp)$/;"	l
c	init.asm	/^    c = fmt[i] & 0xff;$/;"	d
c	kernel.asm	/^        c = (c == '\\r') ? '\\n' : c;$/;"	d
c	kernel.asm	/^    c = fmt[++i] & 0xff;$/;"	d
c	kernel.asm	/^    c = input.buf[input.r++ % INPUT_BUF];$/;"	d
c	kernel.asm	/^  c = &cpus[cpunum()];$/;"	d
c	kernel.asm	/^  c = charcode[shift & (CTL | SHIFT)][data];$/;"	d
c	kill.asm	/^    c = fmt[i] & 0xff;$/;"	d
c	ln.asm	/^    c = fmt[i] & 0xff;$/;"	d
c	ls.asm	/^    c = fmt[i] & 0xff;$/;"	d
c	mkdir.asm	/^    c = fmt[i] & 0xff;$/;"	d
c	mount.asm	/^    c = fmt[i] & 0xff;$/;"	d
c	rm.asm	/^    c = fmt[i] & 0xff;$/;"	d
c	sh.asm	/^       c:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)$/;"	l
c	sh.asm	/^    c = fmt[i] & 0xff;$/;"	d
c	stressfs.asm	/^    c = fmt[i] & 0xff;$/;"	d
c	usertests.asm	/^    c = fmt[i] & 0xff;$/;"	d
c	usertests.asm	/^  c = sbrk(-(sbrk(0) - oldbrk));$/;"	d
c	usertests.asm	/^  c = sbrk(-4096);$/;"	d
c	usertests.asm	/^  c = sbrk(0);$/;"	d
c	usertests.asm	/^  c = sbrk(1);$/;"	d
c	usertests.asm	/^  c = sbrk(4096);$/;"	d
c	wc.asm	/^    c = fmt[i] & 0xff;$/;"	d
c	zombie.asm	/^    c = fmt[i] & 0xff;$/;"	d
c0	cat.asm	/^  c0:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
c0	echo.asm	/^  c0:	90                   	nop$/;"	l
c0	forktest.asm	/^  c0:	eb 2b                	jmp    ed <forktest+0x5c>$/;"	l
c0	mount.asm	/^  c0:	0f b6 00             	movzbl (%rax),%eax$/;"	l
c0	stressfs.asm	/^  c0:	01 d0                	add    %edx,%eax$/;"	l
c00	echo.asm	/^ c00:	48 8b 00             	mov    (%rax),%rax$/;"	l
c00	mkdir.asm	/^ c00:	00 00 00 $/;"	l
c00	rm.asm	/^ c00:	00 00 00 $/;"	l
c00	stressfs.asm	/^ c00:	48 83 c0 0f          	add    $0xf,%rax$/;"	l
c00	usertests.asm	/^     c00:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c00	wc.asm	/^ c00:	eb 0b                	jmp    c0d <free+0x11e>$/;"	l
c01	kill.asm	/^ c01:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
c01	ls.asm	/^     c01:	48 b8 80 08 00 00 00 	movabs $0x880,%rax$/;"	l
c02	cat.asm	/^ c02:	89 45 ec             	mov    %eax,-0x14(%rbp)$/;"	l
c02	sh.asm	/^     c02:	ff d0                	callq  *%rax$/;"	l
c02	wc.asm	/^ c02:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
c03	echo.asm	/^ c03:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
c03	grep.asm	/^ c03:	83 bd 3c ff ff ff 63 	cmpl   $0x63,-0xc4(%rbp)$/;"	l
c03	mkdir.asm	/^ c03:	48 8b 00             	mov    (%rax),%rax$/;"	l
c03	rm.asm	/^ c03:	48 8b 00             	mov    (%rax),%rax$/;"	l
c04	sh.asm	/^     c04:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
c04	stressfs.asm	/^ c04:	48 c1 e8 04          	shr    $0x4,%rax$/;"	l
c05	cat.asm	/^ c05:	48 b8 10 12 00 00 00 	movabs $0x1210,%rax$/;"	l
c05	kill.asm	/^ c05:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
c05	usertests.asm	/^     c05:	49 b8 d1 61 00 00 00 	movabs $0x61d1,%r8$/;"	l
c06	init.asm	/^ c06:	00 00 00 $/;"	l
c06	ln.asm	/^ c06:	00 00 00 $/;"	l
c06	mkdir.asm	/^ c06:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)$/;"	l
c06	rm.asm	/^ c06:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)$/;"	l
c06	wc.asm	/^ c06:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
c07	echo.asm	/^ c07:	e9 41 ff ff ff       	jmpq   b4d <malloc+0x89>$/;"	l
c08	ls.asm	/^     c08:	00 00 00 $/;"	l
c08	sh.asm	/^     c08:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx$/;"	l
c08	stressfs.asm	/^ c08:	83 c0 01             	add    $0x1,%eax$/;"	l
c09	init.asm	/^ c09:	48 8b 00             	mov    (%rax),%rax$/;"	l
c09	kill.asm	/^ c09:	48 8b 00             	mov    (%rax),%rax$/;"	l
c09	ln.asm	/^ c09:	ff d0                	callq  *%rax$/;"	l
c0a	grep.asm	/^ c0a:	75 5d                	jne    c69 <printf+0x311>$/;"	l
c0a	mkdir.asm	/^ c0a:	75 23                	jne    c2f <malloc+0x130>$/;"	l
c0a	rm.asm	/^ c0a:	75 23                	jne    c2f <malloc+0x130>$/;"	l
c0a	wc.asm	/^ c0a:	48 89 10             	mov    %rdx,(%rax)$/;"	l
c0b	ln.asm	/^ c0b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
c0b	ls.asm	/^     c0b:	ff d0                	callq  *%rax$/;"	l
c0b	stressfs.asm	/^ c0b:	89 45 ec             	mov    %eax,-0x14(%rbp)$/;"	l
c0c	cat.asm	/^ c0c:	00 00 00 $/;"	l
c0c	echo.asm	/^ c0c:	c9                   	leaveq $/;"	l
c0c	grep.asm	/^ c0c:	8b 85 20 ff ff ff    	mov    -0xe0(%rbp),%eax$/;"	l
c0c	init.asm	/^ c0c:	c9                   	leaveq $/;"	l
c0c	kill.asm	/^ c0c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
c0c	mkdir.asm	/^ c0c:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
c0c	rm.asm	/^ c0c:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
c0c	sh.asm	/^     c0c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
c0c	usertests.asm	/^     c0c:	00 00 00 $/;"	l
c0d	echo.asm	/^ c0d:	c3                   	retq   $/;"	l
c0d	init.asm	/^ c0d:	c3                   	retq   $/;"	l
c0d	ls.asm	/^     c0d:	48 83 85 48 ff ff ff 	addq   $0x1,-0xb8(%rbp)$/;"	l
c0d	wc.asm	/^ c0d:	48 b8 b0 12 00 00 00 	movabs $0x12b0,%rax$/;"	l
c0e	init.asm	/^ c0e:	55                   	push   %rbp$/;"	l
c0e	stressfs.asm	/^ c0e:	48 b8 d0 0f 00 00 00 	movabs $0xfd0,%rax$/;"	l
c0f	cat.asm	/^ c0f:	48 8b 00             	mov    (%rax),%rax$/;"	l
c0f	init.asm	/^ c0f:	48 89 e5             	mov    %rsp,%rbp$/;"	l
c0f	ln.asm	/^ c0f:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)$/;"	l
c0f	mkdir.asm	/^ c0f:	89 c7                	mov    %eax,%edi$/;"	l
c0f	rm.asm	/^ c0f:	89 c7                	mov    %eax,%edi$/;"	l
c0f	usertests.asm	/^     c0f:	41 ff d0             	callq  *%r8$/;"	l
c1	echo.asm	/^  c1:	c9                   	leaveq $/;"	l
c1	grep.asm	/^  c1:	ff d0                	callq  *%rax$/;"	l
c1	ls.asm	/^      c1:	48 89 c7             	mov    %rax,%rdi$/;"	l
c1	wc.asm	/^  c1:	89 c7                	mov    %eax,%edi$/;"	l
c1	zombie.asm	/^  c1:	48 83 45 f0 01       	addq   $0x1,-0x10(%rbp)$/;"	l
c10	kill.asm	/^ c10:	e9 41 ff ff ff       	jmpq   b56 <malloc+0x89>$/;"	l
c10	sh.asm	/^     c10:	48 ba 05 1e 00 00 00 	movabs $0x1e05,%rdx$/;"	l
c11	mkdir.asm	/^ c11:	48 b8 86 0a 00 00 00 	movabs $0xa86,%rax$/;"	l
c11	rm.asm	/^ c11:	48 b8 86 0a 00 00 00 	movabs $0xa86,%rax$/;"	l
c12	cat.asm	/^ c12:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
c12	grep.asm	/^ c12:	83 f8 30             	cmp    $0x30,%eax$/;"	l
c12	init.asm	/^ c12:	48 83 ec 30          	sub    $0x30,%rsp$/;"	l
c12	usertests.asm	/^     c12:	48 b8 02 60 00 00 00 	movabs $0x6002,%rax$/;"	l
c14	ln.asm	/^ c14:	75 07                	jne    c1d <malloc+0x130>$/;"	l
c14	ls.asm	/^     c14:	01 $/;"	l
c14	wc.asm	/^ c14:	00 00 00 $/;"	l
c15	grep.asm	/^ c15:	73 23                	jae    c3a <printf+0x2e2>$/;"	l
c15	kill.asm	/^ c15:	c9                   	leaveq $/;"	l
c15	ls.asm	/^     c15:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax$/;"	l
c15	stressfs.asm	/^ c15:	00 00 00 $/;"	l
c16	cat.asm	/^ c16:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)$/;"	l
c16	init.asm	/^ c16:	89 7d dc             	mov    %edi,-0x24(%rbp)$/;"	l
c16	kill.asm	/^ c16:	c3                   	retq   $/;"	l
c16	ln.asm	/^ c16:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c17	grep.asm	/^ c17:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax$/;"	l
c17	sh.asm	/^     c17:	00 00 00 $/;"	l
c17	wc.asm	/^ c17:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx$/;"	l
c18	mkdir.asm	/^ c18:	00 00 00 $/;"	l
c18	rm.asm	/^ c18:	00 00 00 $/;"	l
c18	stressfs.asm	/^ c18:	48 8b 00             	mov    (%rax),%rax$/;"	l
c19	init.asm	/^ c19:	8b 45 dc             	mov    -0x24(%rbp),%eax$/;"	l
c19	usertests.asm	/^     c19:	00 00 00 $/;"	l
c1a	sh.asm	/^     c1a:	48 89 ce             	mov    %rcx,%rsi$/;"	l
c1b	cat.asm	/^ c1b:	75 4a                	jne    c67 <malloc+0x7e>$/;"	l
c1b	ln.asm	/^ c1b:	eb 18                	jmp    c35 <malloc+0x148>$/;"	l
c1b	mkdir.asm	/^ c1b:	ff d0                	callq  *%rax$/;"	l
c1b	rm.asm	/^ c1b:	ff d0                	callq  *%rax$/;"	l
c1b	stressfs.asm	/^ c1b:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
c1b	wc.asm	/^ c1b:	48 89 10             	mov    %rdx,(%rax)$/;"	l
c1c	init.asm	/^ c1c:	48 83 c0 0f          	add    $0xf,%rax$/;"	l
c1c	ls.asm	/^     c1c:	0f b6 00             	movzbl (%rax),%eax$/;"	l
c1c	usertests.asm	/^     c1c:	ff d0                	callq  *%rax$/;"	l
c1d	cat.asm	/^ c1d:	48 b8 00 12 00 00 00 	movabs $0x1200,%rax$/;"	l
c1d	ln.asm	/^ c1d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
c1d	mkdir.asm	/^ c1d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
c1d	rm.asm	/^ c1d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
c1d	sh.asm	/^     c1d:	48 89 c7             	mov    %rax,%rdi$/;"	l
c1e	grep.asm	/^ c1e:	8b 95 20 ff ff ff    	mov    -0xe0(%rbp),%edx$/;"	l
c1e	usertests.asm	/^     c1e:	83 45 f8 01          	addl   $0x1,-0x8(%rbp)$/;"	l
c1e	wc.asm	/^ c1e:	90                   	nop$/;"	l
c1f	ls.asm	/^     c1f:	84 c0                	test   %al,%al$/;"	l
c1f	stressfs.asm	/^ c1f:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)$/;"	l
c1f	wc.asm	/^ c1f:	c9                   	leaveq $/;"	l
c2	echo.asm	/^  c2:	c3                   	retq   $/;"	l
c2	forktest.asm	/^  c2:	48 b8 03 05 00 00 00 	movabs $0x503,%rax$/;"	l
c2	kill.asm	/^  c2:	48 89 75 f8          	mov    %rsi,-0x8(%rbp)$/;"	l
c2	ln.asm	/^  c2:	89 75 f4             	mov    %esi,-0xc(%rbp)$/;"	l
c2	stressfs.asm	/^  c2:	88 45 e8             	mov    %al,-0x18(%rbp)$/;"	l
c20	init.asm	/^ c20:	48 c1 e8 04          	shr    $0x4,%rax$/;"	l
c20	sh.asm	/^     c20:	48 b8 51 09 00 00 00 	movabs $0x951,%rax$/;"	l
c20	wc.asm	/^ c20:	c3                   	retq   $/;"	l
c21	ln.asm	/^ c21:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
c21	ls.asm	/^     c21:	75 c7                	jne    bea <printf+0x26d>$/;"	l
c21	mkdir.asm	/^ c21:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)$/;"	l
c21	rm.asm	/^ c21:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)$/;"	l
c21	wc.asm	/^ c21:	55                   	push   %rbp$/;"	l
c22	usertests.asm	/^     c22:	e9 f2 fe ff ff       	jmpq   b19 <writetest1+0x180>$/;"	l
c22	wc.asm	/^ c22:	48 89 e5             	mov    %rsp,%rbp$/;"	l
c23	ls.asm	/^     c23:	e9 c8 00 00 00       	jmpq   cf0 <printf+0x373>$/;"	l
c24	cat.asm	/^ c24:	00 00 00 $/;"	l
c24	grep.asm	/^ c24:	89 d2                	mov    %edx,%edx$/;"	l
c24	init.asm	/^ c24:	83 c0 01             	add    $0x1,%eax$/;"	l
c24	stressfs.asm	/^ c24:	75 4a                	jne    c70 <malloc+0x7e>$/;"	l
c25	ln.asm	/^ c25:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
c25	wc.asm	/^ c25:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
c26	grep.asm	/^ c26:	48 01 d0             	add    %rdx,%rax$/;"	l
c26	mkdir.asm	/^ c26:	75 07                	jne    c2f <malloc+0x130>$/;"	l
c26	rm.asm	/^ c26:	75 07                	jne    c2f <malloc+0x130>$/;"	l
c26	stressfs.asm	/^ c26:	48 b8 c0 0f 00 00 00 	movabs $0xfc0,%rax$/;"	l
c27	cat.asm	/^ c27:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
c27	init.asm	/^ c27:	89 45 ec             	mov    %eax,-0x14(%rbp)$/;"	l
c27	sh.asm	/^     c27:	00 00 00 $/;"	l
c27	usertests.asm	/^     c27:	90                   	nop$/;"	l
c28	ls.asm	/^     c28:	83 bd 3c ff ff ff 63 	cmpl   $0x63,-0xc4(%rbp)$/;"	l
c28	mkdir.asm	/^ c28:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c28	rm.asm	/^ c28:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c28	usertests.asm	/^     c28:	8b 45 f4             	mov    -0xc(%rbp),%eax$/;"	l
c29	grep.asm	/^ c29:	8b 95 20 ff ff ff    	mov    -0xe0(%rbp),%edx$/;"	l
c29	ln.asm	/^ c29:	48 8b 00             	mov    (%rax),%rax$/;"	l
c29	wc.asm	/^ c29:	89 7d ec             	mov    %edi,-0x14(%rbp)$/;"	l
c2a	init.asm	/^ c2a:	48 b8 50 10 00 00 00 	movabs $0x1050,%rax$/;"	l
c2a	sh.asm	/^     c2a:	ff d0                	callq  *%rax$/;"	l
c2b	cat.asm	/^ c2b:	48 b8 10 12 00 00 00 	movabs $0x1210,%rax$/;"	l
c2b	usertests.asm	/^     c2b:	89 c7                	mov    %eax,%edi$/;"	l
c2c	ln.asm	/^ c2c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
c2c	sh.asm	/^     c2c:	85 c0                	test   %eax,%eax$/;"	l
c2c	wc.asm	/^ c2c:	81 7d ec ff 0f 00 00 	cmpl   $0xfff,-0x14(%rbp)$/;"	l
c2d	mkdir.asm	/^ c2d:	eb 18                	jmp    c47 <malloc+0x148>$/;"	l
c2d	rm.asm	/^ c2d:	eb 18                	jmp    c47 <malloc+0x148>$/;"	l
c2d	stressfs.asm	/^ c2d:	00 00 00 $/;"	l
c2d	usertests.asm	/^     c2d:	48 b8 34 60 00 00 00 	movabs $0x6034,%rax$/;"	l
c2e	sh.asm	/^     c2e:	74 58                	je     c88 <parsepipe+0xae>$/;"	l
c2f	grep.asm	/^ c2f:	83 c2 08             	add    $0x8,%edx$/;"	l
c2f	ls.asm	/^     c2f:	75 5d                	jne    c8e <printf+0x311>$/;"	l
c2f	mkdir.asm	/^ c2f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
c2f	rm.asm	/^ c2f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
c3	echo.asm	/^  c3:	55                   	push   %rbp$/;"	l
c3	grep.asm	/^  c3:	48 89 45 e0          	mov    %rax,-0x20(%rbp)$/;"	l
c3	mkdir.asm	/^  c3:	00 00 00 $/;"	l
c3	mount.asm	/^  c3:	84 c0                	test   %al,%al$/;"	l
c3	rm.asm	/^  c3:	00 00 00 $/;"	l
c3	wc.asm	/^  c3:	48 b8 99 05 00 00 00 	movabs $0x599,%rax$/;"	l
c30	ln.asm	/^ c30:	e9 41 ff ff ff       	jmpq   b76 <malloc+0x89>$/;"	l
c30	sh.asm	/^     c30:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi$/;"	l
c30	stressfs.asm	/^ c30:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
c31	init.asm	/^ c31:	00 00 00 $/;"	l
c31	ls.asm	/^     c31:	8b 85 20 ff ff ff    	mov    -0xe0(%rbp),%eax$/;"	l
c32	cat.asm	/^ c32:	00 00 00 $/;"	l
c32	grep.asm	/^ c32:	89 95 20 ff ff ff    	mov    %edx,-0xe0(%rbp)$/;"	l
c33	mkdir.asm	/^ c33:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
c33	rm.asm	/^ c33:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
c33	wc.asm	/^ c33:	77 07                	ja     c3c <morecore+0x1b>$/;"	l
c34	init.asm	/^ c34:	48 8b 00             	mov    (%rax),%rax$/;"	l
c34	sh.asm	/^     c34:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
c34	stressfs.asm	/^ c34:	48 b8 d0 0f 00 00 00 	movabs $0xfd0,%rax$/;"	l
c34	usertests.asm	/^     c34:	00 00 00 $/;"	l
c35	cat.asm	/^ c35:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
c35	ln.asm	/^ c35:	c9                   	leaveq $/;"	l
c35	wc.asm	/^ c35:	c7 45 ec 00 10 00 00 	movl   $0x1000,-0x14(%rbp)$/;"	l
c36	ln.asm	/^ c36:	c3                   	retq   $/;"	l
c37	init.asm	/^ c37:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
c37	ls.asm	/^     c37:	83 f8 30             	cmp    $0x30,%eax$/;"	l
c37	mkdir.asm	/^ c37:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
c37	rm.asm	/^ c37:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
c37	usertests.asm	/^     c37:	ff d0                	callq  *%rax$/;"	l
c38	grep.asm	/^ c38:	eb 12                	jmp    c4c <printf+0x2f4>$/;"	l
c38	sh.asm	/^     c38:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
c39	cat.asm	/^ c39:	48 89 10             	mov    %rdx,(%rax)$/;"	l
c39	usertests.asm	/^     c39:	48 bf 54 6b 00 00 00 	movabs $0x6b54,%rdi$/;"	l
c3a	grep.asm	/^ c3a:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax$/;"	l
c3a	ls.asm	/^     c3a:	73 23                	jae    c5f <printf+0x2e2>$/;"	l
c3b	init.asm	/^ c3b:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)$/;"	l
c3b	mkdir.asm	/^ c3b:	48 8b 00             	mov    (%rax),%rax$/;"	l
c3b	rm.asm	/^ c3b:	48 8b 00             	mov    (%rax),%rax$/;"	l
c3b	stressfs.asm	/^ c3b:	00 00 00 $/;"	l
c3c	cat.asm	/^ c3c:	48 b8 10 12 00 00 00 	movabs $0x1210,%rax$/;"	l
c3c	ls.asm	/^     c3c:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax$/;"	l
c3c	wc.asm	/^ c3c:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
c3d	sh.asm	/^     c3d:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c3e	mkdir.asm	/^ c3e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
c3e	rm.asm	/^ c3e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
c3e	stressfs.asm	/^ c3e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
c3f	wc.asm	/^ c3f:	c1 e0 04             	shl    $0x4,%eax$/;"	l
c4	cat.asm	/^  c4:	89 7d ec             	mov    %edi,-0x14(%rbp)$/;"	l
c4	echo.asm	/^  c4:	48 89 e5             	mov    %rsp,%rbp$/;"	l
c4	ls.asm	/^      c4:	48 b8 62 05 00 00 00 	movabs $0x562,%rax$/;"	l
c40	init.asm	/^ c40:	75 4a                	jne    c8c <malloc+0x7e>$/;"	l
c40	usertests.asm	/^     c40:	00 00 00 $/;"	l
c41	grep.asm	/^ c41:	48 8d 50 08          	lea    0x8(%rax),%rdx$/;"	l
c42	init.asm	/^ c42:	48 b8 40 10 00 00 00 	movabs $0x1040,%rax$/;"	l
c42	mkdir.asm	/^ c42:	e9 41 ff ff ff       	jmpq   b88 <malloc+0x89>$/;"	l
c42	rm.asm	/^ c42:	e9 41 ff ff ff       	jmpq   b88 <malloc+0x89>$/;"	l
c42	sh.asm	/^     c42:	48 89 c7             	mov    %rax,%rdi$/;"	l
c42	stressfs.asm	/^ c42:	48 89 10             	mov    %rdx,(%rax)$/;"	l
c42	wc.asm	/^ c42:	89 c7                	mov    %eax,%edi$/;"	l
c43	cat.asm	/^ c43:	00 00 00 $/;"	l
c43	ls.asm	/^     c43:	8b 95 20 ff ff ff    	mov    -0xe0(%rbp),%edx$/;"	l
c43	usertests.asm	/^     c43:	48 b8 66 60 00 00 00 	movabs $0x6066,%rax$/;"	l
c44	wc.asm	/^ c44:	48 b8 25 06 00 00 00 	movabs $0x625,%rax$/;"	l
c45	grep.asm	/^ c45:	48 89 95 28 ff ff ff 	mov    %rdx,-0xd8(%rbp)$/;"	l
c45	sh.asm	/^     c45:	48 b8 aa 07 00 00 00 	movabs $0x7aa,%rax$/;"	l
c45	stressfs.asm	/^ c45:	48 b8 d0 0f 00 00 00 	movabs $0xfd0,%rax$/;"	l
c46	cat.asm	/^ c46:	48 8b 10             	mov    (%rax),%rdx$/;"	l
c47	mkdir.asm	/^ c47:	c9                   	leaveq $/;"	l
c47	rm.asm	/^ c47:	c9                   	leaveq $/;"	l
c48	mkdir.asm	/^ c48:	c3                   	retq   $/;"	l
c48	rm.asm	/^ c48:	c3                   	retq   $/;"	l
c49	cat.asm	/^ c49:	48 b8 00 12 00 00 00 	movabs $0x1200,%rax$/;"	l
c49	init.asm	/^ c49:	00 00 00 $/;"	l
c49	ls.asm	/^     c49:	89 d2                	mov    %edx,%edx$/;"	l
c4a	usertests.asm	/^     c4a:	00 00 00 $/;"	l
c4b	ls.asm	/^     c4b:	48 01 d0             	add    %rdx,%rax$/;"	l
c4b	wc.asm	/^ c4b:	00 00 00 $/;"	l
c4c	grep.asm	/^ c4c:	8b 00                	mov    (%rax),%eax$/;"	l
c4c	init.asm	/^ c4c:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
c4c	sh.asm	/^     c4c:	00 00 00 $/;"	l
c4c	stressfs.asm	/^ c4c:	00 00 00 $/;"	l
c4d	usertests.asm	/^     c4d:	ff d0                	callq  *%rax$/;"	l
c4e	grep.asm	/^ c4e:	0f be d0             	movsbl %al,%edx$/;"	l
c4e	ls.asm	/^     c4e:	8b 95 20 ff ff ff    	mov    -0xe0(%rbp),%edx$/;"	l
c4e	wc.asm	/^ c4e:	ff d0                	callq  *%rax$/;"	l
c4f	sh.asm	/^     c4f:	ff d0                	callq  *%rax$/;"	l
c4f	stressfs.asm	/^ c4f:	48 8b 10             	mov    (%rax),%rdx$/;"	l
c4f	usertests.asm	/^     c4f:	85 c0                	test   %eax,%eax$/;"	l
c5	init.asm	/^  c5:	00 00 00 $/;"	l
c5	ln.asm	/^  c5:	89 55 f0             	mov    %edx,-0x10(%rbp)$/;"	l
c5	mount.asm	/^  c5:	74 12                	je     d9 <strcmp+0x39>$/;"	l
c5	sh.asm	/^      c5:	00 00 00 $/;"	l
c5	stressfs.asm	/^  c5:	48 8d 45 e0          	lea    -0x20(%rbp),%rax$/;"	l
c50	cat.asm	/^ c50:	00 00 00 $/;"	l
c50	init.asm	/^ c50:	48 b8 50 10 00 00 00 	movabs $0x1050,%rax$/;"	l
c50	wc.asm	/^ c50:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
c51	grep.asm	/^ c51:	8b 85 1c ff ff ff    	mov    -0xe4(%rbp),%eax$/;"	l
c51	sh.asm	/^     c51:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx$/;"	l
c51	usertests.asm	/^     c51:	79 35                	jns    c88 <writetest1+0x2ef>$/;"	l
c52	stressfs.asm	/^ c52:	48 b8 c0 0f 00 00 00 	movabs $0xfc0,%rax$/;"	l
c53	cat.asm	/^ c53:	48 89 10             	mov    %rdx,(%rax)$/;"	l
c53	usertests.asm	/^     c53:	48 b8 08 88 00 00 00 	movabs $0x8808,%rax$/;"	l
c54	ls.asm	/^     c54:	83 c2 08             	add    $0x8,%edx$/;"	l
c54	wc.asm	/^ c54:	48 83 7d f8 ff       	cmpq   $0xffffffffffffffff,-0x8(%rbp)$/;"	l
c55	sh.asm	/^     c55:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
c56	cat.asm	/^ c56:	48 b8 00 12 00 00 00 	movabs $0x1200,%rax$/;"	l
c57	grep.asm	/^ c57:	89 d6                	mov    %edx,%esi$/;"	l
c57	init.asm	/^ c57:	00 00 00 $/;"	l
c57	ls.asm	/^     c57:	89 95 20 ff ff ff    	mov    %edx,-0xe0(%rbp)$/;"	l
c59	grep.asm	/^ c59:	89 c7                	mov    %eax,%edi$/;"	l
c59	sh.asm	/^     c59:	48 89 d6             	mov    %rdx,%rsi$/;"	l
c59	stressfs.asm	/^ c59:	00 00 00 $/;"	l
c59	wc.asm	/^ c59:	75 07                	jne    c62 <morecore+0x41>$/;"	l
c5a	init.asm	/^ c5a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
c5a	usertests.asm	/^     c5a:	00 00 00 $/;"	l
c5b	grep.asm	/^ c5b:	48 b8 5b 08 00 00 00 	movabs $0x85b,%rax$/;"	l
c5b	wc.asm	/^ c5b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c5c	sh.asm	/^     c5c:	48 89 c7             	mov    %rax,%rdi$/;"	l
c5c	stressfs.asm	/^ c5c:	48 89 10             	mov    %rdx,(%rax)$/;"	l
c5d	cat.asm	/^ c5d:	00 00 00 $/;"	l
c5d	ls.asm	/^     c5d:	eb 12                	jmp    c71 <printf+0x2f4>$/;"	l
c5d	usertests.asm	/^     c5d:	8b 00                	mov    (%rax),%eax$/;"	l
c5e	init.asm	/^ c5e:	48 89 10             	mov    %rdx,(%rax)$/;"	l
c5f	ls.asm	/^     c5f:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax$/;"	l
c5f	sh.asm	/^     c5f:	48 b8 da 0b 00 00 00 	movabs $0xbda,%rax$/;"	l
c5f	stressfs.asm	/^ c5f:	48 b8 c0 0f 00 00 00 	movabs $0xfc0,%rax$/;"	l
c5f	usertests.asm	/^     c5f:	48 be f8 6b 00 00 00 	movabs $0x6bf8,%rsi$/;"	l
c6	kill.asm	/^  c6:	89 55 f0             	mov    %edx,-0x10(%rbp)$/;"	l
c6	mkdir.asm	/^  c6:	ff d0                	callq  *%rax$/;"	l
c6	rm.asm	/^  c6:	ff d0                	callq  *%rax$/;"	l
c6	usertests.asm	/^      c6:	00 00 00 $/;"	l
c6	zombie.asm	/^  c6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
c60	cat.asm	/^ c60:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%rax)$/;"	l
c60	wc.asm	/^ c60:	eb 36                	jmp    c98 <morecore+0x77>$/;"	l
c61	init.asm	/^ c61:	48 b8 50 10 00 00 00 	movabs $0x1050,%rax$/;"	l
c62	grep.asm	/^ c62:	00 00 00 $/;"	l
c62	wc.asm	/^ c62:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
c65	grep.asm	/^ c65:	ff d0                	callq  *%rax$/;"	l
c66	ls.asm	/^     c66:	48 8d 50 08          	lea    0x8(%rax),%rdx$/;"	l
c66	sh.asm	/^     c66:	00 00 00 $/;"	l
c66	stressfs.asm	/^ c66:	00 00 00 $/;"	l
c66	usertests.asm	/^     c66:	00 00 00 $/;"	l
c66	wc.asm	/^ c66:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
c67	cat.asm	/^ c67:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
c67	grep.asm	/^ c67:	eb 62                	jmp    ccb <printf+0x373>$/;"	l
c68	init.asm	/^ c68:	00 00 00 $/;"	l
c69	grep.asm	/^ c69:	83 bd 3c ff ff ff 25 	cmpl   $0x25,-0xc4(%rbp)$/;"	l
c69	sh.asm	/^     c69:	ff d0                	callq  *%rax$/;"	l
c69	stressfs.asm	/^ c69:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%rax)$/;"	l
c69	usertests.asm	/^     c69:	89 c7                	mov    %eax,%edi$/;"	l
c6a	ls.asm	/^     c6a:	48 89 95 28 ff ff ff 	mov    %rdx,-0xd8(%rbp)$/;"	l
c6a	wc.asm	/^ c6a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
c6b	cat.asm	/^ c6b:	48 8b 00             	mov    (%rax),%rax$/;"	l
c6b	init.asm	/^ c6b:	48 8b 10             	mov    (%rax),%rdx$/;"	l
c6b	sh.asm	/^     c6b:	48 89 c2             	mov    %rax,%rdx$/;"	l
c6b	usertests.asm	/^     c6b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c6e	cat.asm	/^ c6e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
c6e	init.asm	/^ c6e:	48 b8 40 10 00 00 00 	movabs $0x1040,%rax$/;"	l
c6e	sh.asm	/^     c6e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
c6e	wc.asm	/^ c6e:	8b 55 ec             	mov    -0x14(%rbp),%edx$/;"	l
c7	cat.asm	/^  c7:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)$/;"	l
c7	echo.asm	/^  c7:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
c7	grep.asm	/^  c7:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)$/;"	l
c7	mount.asm	/^  c7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
c70	grep.asm	/^ c70:	75 21                	jne    c93 <printf+0x33b>$/;"	l
c70	stressfs.asm	/^ c70:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
c70	usertests.asm	/^     c70:	48 ba d1 61 00 00 00 	movabs $0x61d1,%rdx$/;"	l
c71	ls.asm	/^     c71:	8b 00                	mov    (%rax),%eax$/;"	l
c71	wc.asm	/^ c71:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
c72	cat.asm	/^ c72:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
c72	grep.asm	/^ c72:	8b 85 3c ff ff ff    	mov    -0xc4(%rbp),%eax$/;"	l
c72	sh.asm	/^     c72:	48 89 d6             	mov    %rdx,%rsi$/;"	l
c73	ls.asm	/^     c73:	0f be d0             	movsbl %al,%edx$/;"	l
c74	stressfs.asm	/^ c74:	48 8b 00             	mov    (%rax),%rax$/;"	l
c74	wc.asm	/^ c74:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
c75	init.asm	/^ c75:	00 00 00 $/;"	l
c75	sh.asm	/^     c75:	48 89 c7             	mov    %rax,%rdi$/;"	l
c76	cat.asm	/^ c76:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
c76	ls.asm	/^     c76:	8b 85 1c ff ff ff    	mov    -0xe4(%rbp),%eax$/;"	l
c77	stressfs.asm	/^ c77:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
c77	usertests.asm	/^     c77:	00 00 00 $/;"	l
c78	grep.asm	/^ c78:	0f be d0             	movsbl %al,%edx$/;"	l
c78	init.asm	/^ c78:	48 89 10             	mov    %rdx,(%rax)$/;"	l
c78	sh.asm	/^     c78:	48 b8 7c 06 00 00 00 	movabs $0x67c,%rax$/;"	l
c78	wc.asm	/^ c78:	48 83 c0 10          	add    $0x10,%rax$/;"	l
c79	cat.asm	/^ c79:	3b 45 ec             	cmp    -0x14(%rbp),%eax$/;"	l
c7a	usertests.asm	/^     c7a:	ff d2                	callq  *%rdx$/;"	l
c7b	grep.asm	/^ c7b:	8b 85 1c ff ff ff    	mov    -0xe4(%rbp),%eax$/;"	l
c7b	init.asm	/^ c7b:	48 b8 40 10 00 00 00 	movabs $0x1040,%rax$/;"	l
c7b	stressfs.asm	/^ c7b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
c7c	cat.asm	/^ c7c:	72 65                	jb     ce3 <malloc+0xfa>$/;"	l
c7c	ls.asm	/^     c7c:	89 d6                	mov    %edx,%esi$/;"	l
c7c	usertests.asm	/^     c7c:	48 b8 02 60 00 00 00 	movabs $0x6002,%rax$/;"	l
c7c	wc.asm	/^ c7c:	48 89 c7             	mov    %rax,%rdi$/;"	l
c7e	cat.asm	/^ c7e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
c7e	ls.asm	/^     c7e:	89 c7                	mov    %eax,%edi$/;"	l
c7f	sh.asm	/^     c7f:	00 00 00 $/;"	l
c7f	stressfs.asm	/^ c7f:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
c7f	wc.asm	/^ c7f:	48 b8 ef 0a 00 00 00 	movabs $0xaef,%rax$/;"	l
c8	init.asm	/^  c8:	bf 01 00 00 00       	mov    $0x1,%edi$/;"	l
c8	ln.asm	/^  c8:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx$/;"	l
c8	mkdir.asm	/^  c8:	55                   	push   %rbp$/;"	l
c8	rm.asm	/^  c8:	55                   	push   %rbp$/;"	l
c8	sh.asm	/^      c8:	ff d1                	callq  *%rcx$/;"	l
c80	ls.asm	/^     c80:	48 b8 80 08 00 00 00 	movabs $0x880,%rax$/;"	l
c81	grep.asm	/^ c81:	89 d6                	mov    %edx,%esi$/;"	l
c82	cat.asm	/^ c82:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
c82	init.asm	/^ c82:	00 00 00 $/;"	l
c82	sh.asm	/^     c82:	ff d0                	callq  *%rax$/;"	l
c82	stressfs.asm	/^ c82:	3b 45 ec             	cmp    -0x14(%rbp),%eax$/;"	l
c83	grep.asm	/^ c83:	89 c7                	mov    %eax,%edi$/;"	l
c83	usertests.asm	/^     c83:	00 00 00 $/;"	l
c84	sh.asm	/^     c84:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
c85	cat.asm	/^ c85:	3b 45 ec             	cmp    -0x14(%rbp),%eax$/;"	l
c85	grep.asm	/^ c85:	48 b8 5b 08 00 00 00 	movabs $0x85b,%rax$/;"	l
c85	init.asm	/^ c85:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%rax)$/;"	l
c85	stressfs.asm	/^ c85:	72 65                	jb     cec <malloc+0xfa>$/;"	l
c86	usertests.asm	/^     c86:	ff d0                	callq  *%rax$/;"	l
c86	wc.asm	/^ c86:	00 00 00 $/;"	l
c87	ls.asm	/^     c87:	00 00 00 $/;"	l
c87	stressfs.asm	/^ c87:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
c88	cat.asm	/^ c88:	75 10                	jne    c9a <malloc+0xb1>$/;"	l
c88	sh.asm	/^     c88:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
c88	usertests.asm	/^     c88:	48 b8 08 88 00 00 00 	movabs $0x8808,%rax$/;"	l
c89	wc.asm	/^ c89:	ff d0                	callq  *%rax$/;"	l
c8a	cat.asm	/^ c8a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
c8a	ls.asm	/^     c8a:	ff d0                	callq  *%rax$/;"	l
c8b	stressfs.asm	/^ c8b:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
c8b	wc.asm	/^ c8b:	48 b8 b0 12 00 00 00 	movabs $0x12b0,%rax$/;"	l
c8c	grep.asm	/^ c8c:	00 00 00 $/;"	l
c8c	init.asm	/^ c8c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
c8c	ls.asm	/^     c8c:	eb 62                	jmp    cf0 <printf+0x373>$/;"	l
c8c	sh.asm	/^     c8c:	c9                   	leaveq $/;"	l
c8d	sh.asm	/^     c8d:	c3                   	retq   $/;"	l
c8e	cat.asm	/^ c8e:	48 8b 10             	mov    (%rax),%rdx$/;"	l
c8e	ls.asm	/^     c8e:	83 bd 3c ff ff ff 25 	cmpl   $0x25,-0xc4(%rbp)$/;"	l
c8e	sh.asm	/^     c8e:	55                   	push   %rbp$/;"	l
c8e	stressfs.asm	/^ c8e:	3b 45 ec             	cmp    -0x14(%rbp),%eax$/;"	l
c8f	grep.asm	/^ c8f:	ff d0                	callq  *%rax$/;"	l
c8f	sh.asm	/^     c8f:	48 89 e5             	mov    %rsp,%rbp$/;"	l
c8f	usertests.asm	/^     c8f:	00 00 00 $/;"	l
c9	forktest.asm	/^  c9:	00 00 00 $/;"	l
c9	kill.asm	/^  c9:	90                   	nop$/;"	l
c9	mkdir.asm	/^  c9:	48 89 e5             	mov    %rsp,%rbp$/;"	l
c9	rm.asm	/^  c9:	48 89 e5             	mov    %rsp,%rbp$/;"	l
c9	stressfs.asm	/^  c9:	be 02 02 00 00       	mov    $0x202,%esi$/;"	l
c9	usertests.asm	/^      c9:	ff d0                	callq  *%rax$/;"	l
c90	init.asm	/^ c90:	48 8b 00             	mov    (%rax),%rax$/;"	l
c91	cat.asm	/^ c91:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
c91	grep.asm	/^ c91:	eb 38                	jmp    ccb <printf+0x373>$/;"	l
c91	stressfs.asm	/^ c91:	75 10                	jne    ca3 <malloc+0xb1>$/;"	l
c92	sh.asm	/^     c92:	48 83 ec 40          	sub    $0x40,%rsp$/;"	l
c92	usertests.asm	/^     c92:	8b 00                	mov    (%rax),%eax$/;"	l
c92	wc.asm	/^ c92:	00 00 00 $/;"	l
c93	grep.asm	/^ c93:	8b 85 1c ff ff ff    	mov    -0xe4(%rbp),%eax$/;"	l
c93	init.asm	/^ c93:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
c93	stressfs.asm	/^ c93:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
c94	usertests.asm	/^     c94:	48 be 0b 6c 00 00 00 	movabs $0x6c0b,%rsi$/;"	l
c95	cat.asm	/^ c95:	48 89 10             	mov    %rdx,(%rax)$/;"	l
c95	ls.asm	/^     c95:	75 21                	jne    cb8 <printf+0x33b>$/;"	l
c95	wc.asm	/^ c95:	48 8b 00             	mov    (%rax),%rax$/;"	l
c96	sh.asm	/^     c96:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)$/;"	l
c97	init.asm	/^ c97:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
c97	ls.asm	/^     c97:	8b 85 3c ff ff ff    	mov    -0xc4(%rbp),%eax$/;"	l
c97	stressfs.asm	/^ c97:	48 8b 10             	mov    (%rax),%rdx$/;"	l
c98	cat.asm	/^ c98:	eb 2e                	jmp    cc8 <malloc+0xdf>$/;"	l
c98	wc.asm	/^ c98:	c9                   	leaveq $/;"	l
c99	grep.asm	/^ c99:	be 25 00 00 00       	mov    $0x25,%esi$/;"	l
c99	wc.asm	/^ c99:	c3                   	retq   $/;"	l
c9a	cat.asm	/^ c9a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
c9a	sh.asm	/^     c9a:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)$/;"	l
c9a	stressfs.asm	/^ c9a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
c9a	wc.asm	/^ c9a:	55                   	push   %rbp$/;"	l
c9b	init.asm	/^ c9b:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
c9b	usertests.asm	/^     c9b:	00 00 00 $/;"	l
c9b	wc.asm	/^ c9b:	48 89 e5             	mov    %rsp,%rbp$/;"	l
c9d	ls.asm	/^     c9d:	0f be d0             	movsbl %al,%edx$/;"	l
c9e	cat.asm	/^ c9e:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
c9e	grep.asm	/^ c9e:	89 c7                	mov    %eax,%edi$/;"	l
c9e	init.asm	/^ c9e:	3b 45 ec             	cmp    -0x14(%rbp),%eax$/;"	l
c9e	sh.asm	/^     c9e:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)$/;"	l
c9e	stressfs.asm	/^ c9e:	48 89 10             	mov    %rdx,(%rax)$/;"	l
c9e	usertests.asm	/^     c9e:	89 c7                	mov    %eax,%edi$/;"	l
c9e	wc.asm	/^ c9e:	48 83 ec 30          	sub    $0x30,%rsp$/;"	l
ca	kill.asm	/^  ca:	c9                   	leaveq $/;"	l
ca	sh.asm	/^      ca:	e9 62 02 00 00       	jmpq   331 <runcmd+0x331>$/;"	l
ca	wc.asm	/^  ca:	00 00 00 $/;"	l
ca	zombie.asm	/^  ca:	0f b6 00             	movzbl (%rax),%eax$/;"	l
ca0	grep.asm	/^ ca0:	48 b8 5b 08 00 00 00 	movabs $0x85b,%rax$/;"	l
ca0	ls.asm	/^     ca0:	8b 85 1c ff ff ff    	mov    -0xe4(%rbp),%eax$/;"	l
ca0	usertests.asm	/^     ca0:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ca1	cat.asm	/^ ca1:	2b 45 ec             	sub    -0x14(%rbp),%eax$/;"	l
ca1	init.asm	/^ ca1:	72 65                	jb     d08 <malloc+0xfa>$/;"	l
ca1	stressfs.asm	/^ ca1:	eb 2e                	jmp    cd1 <malloc+0xdf>$/;"	l
ca2	sh.asm	/^     ca2:	e9 f8 00 00 00       	jmpq   d9f <parseredirs+0x111>$/;"	l
ca2	wc.asm	/^ ca2:	89 7d dc             	mov    %edi,-0x24(%rbp)$/;"	l
ca3	init.asm	/^ ca3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ca3	stressfs.asm	/^ ca3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ca4	cat.asm	/^ ca4:	89 c2                	mov    %eax,%edx$/;"	l
ca5	usertests.asm	/^     ca5:	48 ba d1 61 00 00 00 	movabs $0x61d1,%rdx$/;"	l
ca5	wc.asm	/^ ca5:	8b 45 dc             	mov    -0x24(%rbp),%eax$/;"	l
ca6	cat.asm	/^ ca6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ca6	ls.asm	/^     ca6:	89 d6                	mov    %edx,%esi$/;"	l
ca7	grep.asm	/^ ca7:	00 00 00 $/;"	l
ca7	init.asm	/^ ca7:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
ca7	sh.asm	/^     ca7:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi$/;"	l
ca7	stressfs.asm	/^ ca7:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
ca8	ls.asm	/^     ca8:	89 c7                	mov    %eax,%edi$/;"	l
ca8	wc.asm	/^ ca8:	48 83 c0 0f          	add    $0xf,%rax$/;"	l
caa	cat.asm	/^ caa:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
caa	grep.asm	/^ caa:	ff d0                	callq  *%rax$/;"	l
caa	init.asm	/^ caa:	3b 45 ec             	cmp    -0x14(%rbp),%eax$/;"	l
caa	ls.asm	/^     caa:	48 b8 80 08 00 00 00 	movabs $0x880,%rax$/;"	l
caa	stressfs.asm	/^ caa:	2b 45 ec             	sub    -0x14(%rbp),%eax$/;"	l
cab	sh.asm	/^     cab:	48 8b 45 d0          	mov    -0x30(%rbp),%rax$/;"	l
cac	grep.asm	/^ cac:	8b 85 3c ff ff ff    	mov    -0xc4(%rbp),%eax$/;"	l
cac	usertests.asm	/^     cac:	00 00 00 $/;"	l
cac	wc.asm	/^ cac:	48 c1 e8 04          	shr    $0x4,%rax$/;"	l
cad	cat.asm	/^ cad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
cad	init.asm	/^ cad:	75 10                	jne    cbf <malloc+0xb1>$/;"	l
cad	stressfs.asm	/^ cad:	89 c2                	mov    %eax,%edx$/;"	l
caf	init.asm	/^ caf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
caf	sh.asm	/^     caf:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
caf	stressfs.asm	/^ caf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
caf	usertests.asm	/^     caf:	ff d2                	callq  *%rdx$/;"	l
cat	cat.c	/^cat(int fd)$/;"	f
cb	cat.asm	/^  cb:	83 7d ec 01          	cmpl   $0x1,-0x14(%rbp)$/;"	l
cb	echo.asm	/^  cb:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
cb	kill.asm	/^  cb:	c3                   	retq   $/;"	l
cb	ls.asm	/^      cb:	00 00 00 $/;"	l
cb	mount.asm	/^  cb:	0f b6 10             	movzbl (%rax),%edx$/;"	l
cb	usertests.asm	/^      cb:	48 bf bd 68 00 00 00 	movabs $0x68bd,%rdi$/;"	l
cb0	wc.asm	/^ cb0:	83 c0 01             	add    $0x1,%eax$/;"	l
cb1	cat.asm	/^ cb1:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
cb1	ls.asm	/^     cb1:	00 00 00 $/;"	l
cb1	usertests.asm	/^     cb1:	90                   	nop$/;"	l
cb2	grep.asm	/^ cb2:	0f be d0             	movsbl %al,%edx$/;"	l
cb2	usertests.asm	/^     cb2:	c9                   	leaveq $/;"	l
cb3	init.asm	/^ cb3:	48 8b 10             	mov    (%rax),%rdx$/;"	l
cb3	stressfs.asm	/^ cb3:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
cb3	usertests.asm	/^     cb3:	c3                   	retq   $/;"	l
cb3	wc.asm	/^ cb3:	89 45 ec             	mov    %eax,-0x14(%rbp)$/;"	l
cb4	cat.asm	/^ cb4:	89 c0                	mov    %eax,%eax$/;"	l
cb4	ls.asm	/^     cb4:	ff d0                	callq  *%rax$/;"	l
cb4	sh.asm	/^     cb4:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
cb4	usertests.asm	/^     cb4:	55                   	push   %rbp$/;"	l
cb5	grep.asm	/^ cb5:	8b 85 1c ff ff ff    	mov    -0xe4(%rbp),%eax$/;"	l
cb5	usertests.asm	/^     cb5:	48 89 e5             	mov    %rsp,%rbp$/;"	l
cb6	cat.asm	/^ cb6:	48 c1 e0 04          	shl    $0x4,%rax$/;"	l
cb6	init.asm	/^ cb6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
cb6	ls.asm	/^     cb6:	eb 38                	jmp    cf0 <printf+0x373>$/;"	l
cb6	stressfs.asm	/^ cb6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
cb6	wc.asm	/^ cb6:	48 b8 b0 12 00 00 00 	movabs $0x12b0,%rax$/;"	l
cb8	ls.asm	/^     cb8:	8b 85 1c ff ff ff    	mov    -0xe4(%rbp),%eax$/;"	l
cb8	usertests.asm	/^     cb8:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
cb9	sh.asm	/^     cb9:	48 89 c7             	mov    %rax,%rdi$/;"	l
cba	cat.asm	/^ cba:	48 01 45 f8          	add    %rax,-0x8(%rbp)$/;"	l
cba	init.asm	/^ cba:	48 89 10             	mov    %rdx,(%rax)$/;"	l
cba	stressfs.asm	/^ cba:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
cbb	grep.asm	/^ cbb:	89 d6                	mov    %edx,%esi$/;"	l
cbc	sh.asm	/^     cbc:	48 b8 aa 07 00 00 00 	movabs $0x7aa,%rax$/;"	l
cbc	usertests.asm	/^     cbc:	48 b8 08 88 00 00 00 	movabs $0x8808,%rax$/;"	l
cbd	grep.asm	/^ cbd:	89 c7                	mov    %eax,%edi$/;"	l
cbd	init.asm	/^ cbd:	eb 2e                	jmp    ced <malloc+0xdf>$/;"	l
cbd	stressfs.asm	/^ cbd:	89 c0                	mov    %eax,%eax$/;"	l
cbd	wc.asm	/^ cbd:	00 00 00 $/;"	l
cbe	cat.asm	/^ cbe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
cbe	ls.asm	/^     cbe:	be 25 00 00 00       	mov    $0x25,%esi$/;"	l
cbf	grep.asm	/^ cbf:	48 b8 5b 08 00 00 00 	movabs $0x85b,%rax$/;"	l
cbf	init.asm	/^ cbf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
cbf	stressfs.asm	/^ cbf:	48 c1 e0 04          	shl    $0x4,%rax$/;"	l
cc	cat.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	echo.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	forktest.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	forktest.asm	/^  cc:	ff d0                	callq  *%rax$/;"	l
cc	grep.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	grep.asm	/^  cc:	0f 85 72 ff ff ff    	jne    44 <grep+0x44>$/;"	l
cc	init.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	kill.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	kill.asm	/^  cc:	55                   	push   %rbp$/;"	l
cc	ln.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	ln.asm	/^  cc:	8b 55 f0             	mov    -0x10(%rbp),%edx$/;"	l
cc	ls.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	mkdir.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	mkdir.asm	/^  cc:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
cc	mount.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	rm.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	rm.asm	/^  cc:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
cc	sh.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	stressfs.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	usertests.asm	/^        cc = sizeof(buf);$/;"	d
cc	usertests.asm	/^      cc = cc * 2;$/;"	d
cc	usertests.asm	/^    cc = 1;$/;"	d
cc	usertests.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	usertests.asm	/^    cc = read(fd, buf, 300);$/;"	d
cc	usertests.asm	/^  cc = read(fd, buf, sizeof(buf));$/;"	d
cc	wc.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	zombie.asm	/^    cc = read(0, &c, 1);$/;"	d
cc0	wc.asm	/^ cc0:	48 8b 00             	mov    (%rax),%rax$/;"	l
cc2	cat.asm	/^ cc2:	8b 55 ec             	mov    -0x14(%rbp),%edx$/;"	l
cc3	init.asm	/^ cc3:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
cc3	ls.asm	/^     cc3:	89 c7                	mov    %eax,%edi$/;"	l
cc3	sh.asm	/^     cc3:	00 00 00 $/;"	l
cc3	stressfs.asm	/^ cc3:	48 01 45 f8          	add    %rax,-0x8(%rbp)$/;"	l
cc3	usertests.asm	/^     cc3:	00 00 00 $/;"	l
cc3	wc.asm	/^ cc3:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
cc5	cat.asm	/^ cc5:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
cc5	ls.asm	/^     cc5:	48 b8 80 08 00 00 00 	movabs $0x880,%rax$/;"	l
cc6	grep.asm	/^ cc6:	00 00 00 $/;"	l
cc6	init.asm	/^ cc6:	2b 45 ec             	sub    -0x14(%rbp),%eax$/;"	l
cc6	sh.asm	/^     cc6:	ff d0                	callq  *%rax$/;"	l
cc6	usertests.asm	/^     cc6:	8b 00                	mov    (%rax),%eax$/;"	l
cc7	stressfs.asm	/^ cc7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
cc7	wc.asm	/^ cc7:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)$/;"	l
cc8	cat.asm	/^ cc8:	48 b8 10 12 00 00 00 	movabs $0x1210,%rax$/;"	l
cc8	sh.asm	/^     cc8:	89 45 fc             	mov    %eax,-0x4(%rbp)$/;"	l
cc8	usertests.asm	/^     cc8:	48 be 20 6c 00 00 00 	movabs $0x6c20,%rsi$/;"	l
cc9	grep.asm	/^ cc9:	ff d0                	callq  *%rax$/;"	l
cc9	init.asm	/^ cc9:	89 c2                	mov    %eax,%edx$/;"	l
ccb	grep.asm	/^ ccb:	c7 85 40 ff ff ff 00 	movl   $0x0,-0xc0(%rbp)$/;"	l
ccb	init.asm	/^ ccb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ccb	sh.asm	/^     ccb:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx$/;"	l
ccb	stressfs.asm	/^ ccb:	8b 55 ec             	mov    -0x14(%rbp),%edx$/;"	l
ccc	ls.asm	/^     ccc:	00 00 00 $/;"	l
ccc	wc.asm	/^ ccc:	75 4a                	jne    d18 <malloc+0x7e>$/;"	l
cce	stressfs.asm	/^ cce:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
cce	wc.asm	/^ cce:	48 b8 a0 12 00 00 00 	movabs $0x12a0,%rax$/;"	l
ccf	cat.asm	/^ ccf:	00 00 00 $/;"	l
ccf	init.asm	/^ ccf:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
ccf	ls.asm	/^     ccf:	ff d0                	callq  *%rax$/;"	l
ccf	sh.asm	/^     ccf:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx$/;"	l
ccf	usertests.asm	/^     ccf:	00 00 00 $/;"	l
cd	init.asm	/^  cd:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
cd	kill.asm	/^  cd:	48 89 e5             	mov    %rsp,%rbp$/;"	l
cd	wc.asm	/^  cd:	ff d0                	callq  *%rax$/;"	l
cd	zombie.asm	/^  cd:	84 c0                	test   %al,%al$/;"	l
cd1	ls.asm	/^     cd1:	8b 85 3c ff ff ff    	mov    -0xc4(%rbp),%eax$/;"	l
cd1	stressfs.asm	/^ cd1:	48 b8 d0 0f 00 00 00 	movabs $0xfd0,%rax$/;"	l
cd2	cat.asm	/^ cd2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
cd2	grep.asm	/^ cd2:	00 00 00 $/;"	l
cd2	init.asm	/^ cd2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
cd2	usertests.asm	/^     cd2:	89 c7                	mov    %eax,%edi$/;"	l
cd3	sh.asm	/^     cd3:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi$/;"	l
cd4	usertests.asm	/^     cd4:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
cd5	grep.asm	/^ cd5:	83 85 44 ff ff ff 01 	addl   $0x1,-0xbc(%rbp)$/;"	l
cd5	wc.asm	/^ cd5:	00 00 00 $/;"	l
cd6	cat.asm	/^ cd6:	48 89 10             	mov    %rdx,(%rax)$/;"	l
cd6	init.asm	/^ cd6:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
cd7	ls.asm	/^     cd7:	0f be d0             	movsbl %al,%edx$/;"	l
cd7	sh.asm	/^     cd7:	48 8b 45 d0          	mov    -0x30(%rbp),%rax$/;"	l
cd8	stressfs.asm	/^ cd8:	00 00 00 $/;"	l
cd8	wc.asm	/^ cd8:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
cd9	cat.asm	/^ cd9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
cd9	init.asm	/^ cd9:	89 c0                	mov    %eax,%eax$/;"	l
cd9	usertests.asm	/^     cd9:	48 ba d1 61 00 00 00 	movabs $0x61d1,%rdx$/;"	l
cda	ls.asm	/^     cda:	8b 85 1c ff ff ff    	mov    -0xe4(%rbp),%eax$/;"	l
cdb	init.asm	/^ cdb:	48 c1 e0 04          	shl    $0x4,%rax$/;"	l
cdb	sh.asm	/^     cdb:	48 89 c7             	mov    %rax,%rdi$/;"	l
cdb	stressfs.asm	/^ cdb:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
cdc	grep.asm	/^ cdc:	8b 85 44 ff ff ff    	mov    -0xbc(%rbp),%eax$/;"	l
cdc	wc.asm	/^ cdc:	48 b8 b0 12 00 00 00 	movabs $0x12b0,%rax$/;"	l
cdd	cat.asm	/^ cdd:	48 83 c0 10          	add    $0x10,%rax$/;"	l
cde	sh.asm	/^     cde:	48 b8 aa 07 00 00 00 	movabs $0x7aa,%rax$/;"	l
cdf	init.asm	/^ cdf:	48 01 45 f8          	add    %rax,-0x8(%rbp)$/;"	l
cdf	stressfs.asm	/^ cdf:	48 89 10             	mov    %rdx,(%rax)$/;"	l
ce	forktest.asm	/^  ce:	89 45 f8             	mov    %eax,-0x8(%rbp)$/;"	l
ce	ls.asm	/^      ce:	ff d0                	callq  *%rax$/;"	l
ce	mount.asm	/^  ce:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ce	stressfs.asm	/^  ce:	48 89 c7             	mov    %rax,%rdi$/;"	l
ce0	ls.asm	/^     ce0:	89 d6                	mov    %edx,%esi$/;"	l
ce0	usertests.asm	/^     ce0:	00 00 00 $/;"	l
ce1	cat.asm	/^ ce1:	eb 4e                	jmp    d31 <malloc+0x148>$/;"	l
ce2	grep.asm	/^ ce2:	48 63 d0             	movslq %eax,%rdx$/;"	l
ce2	ls.asm	/^     ce2:	89 c7                	mov    %eax,%edi$/;"	l
ce2	stressfs.asm	/^ ce2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ce3	cat.asm	/^ ce3:	48 b8 10 12 00 00 00 	movabs $0x1210,%rax$/;"	l
ce3	init.asm	/^ ce3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ce3	usertests.asm	/^     ce3:	ff d2                	callq  *%rdx$/;"	l
ce3	wc.asm	/^ ce3:	00 00 00 $/;"	l
ce4	ls.asm	/^     ce4:	48 b8 80 08 00 00 00 	movabs $0x880,%rax$/;"	l
ce5	grep.asm	/^ ce5:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax$/;"	l
ce5	sh.asm	/^     ce5:	00 00 00 $/;"	l
ce5	usertests.asm	/^     ce5:	48 b8 40 a8 00 00 00 	movabs $0xa840,%rax$/;"	l
ce6	stressfs.asm	/^ ce6:	48 83 c0 10          	add    $0x10,%rax$/;"	l
ce6	wc.asm	/^ ce6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
ce7	init.asm	/^ ce7:	8b 55 ec             	mov    -0x14(%rbp),%edx$/;"	l
ce8	sh.asm	/^     ce8:	ff d0                	callq  *%rax$/;"	l
cea	cat.asm	/^ cea:	00 00 00 $/;"	l
cea	init.asm	/^ cea:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
cea	sh.asm	/^     cea:	83 f8 61             	cmp    $0x61,%eax$/;"	l
cea	stressfs.asm	/^ cea:	eb 4e                	jmp    d3a <malloc+0x148>$/;"	l
cea	wc.asm	/^ cea:	48 89 10             	mov    %rdx,(%rax)$/;"	l
ceb	ls.asm	/^     ceb:	00 00 00 $/;"	l
cec	grep.asm	/^ cec:	48 01 d0             	add    %rdx,%rax$/;"	l
cec	stressfs.asm	/^ cec:	48 b8 d0 0f 00 00 00 	movabs $0xfd0,%rax$/;"	l
cec	usertests.asm	/^     cec:	00 00 00 $/;"	l
ced	cat.asm	/^ ced:	48 8b 00             	mov    (%rax),%rax$/;"	l
ced	init.asm	/^ ced:	48 b8 50 10 00 00 00 	movabs $0x1050,%rax$/;"	l
ced	sh.asm	/^     ced:	74 16                	je     d05 <parseredirs+0x77>$/;"	l
ced	wc.asm	/^ ced:	48 b8 b0 12 00 00 00 	movabs $0x12b0,%rax$/;"	l
cee	ls.asm	/^     cee:	ff d0                	callq  *%rax$/;"	l
cef	grep.asm	/^ cef:	0f b6 00             	movzbl (%rax),%eax$/;"	l
cef	sh.asm	/^     cef:	48 bf 07 1e 00 00 00 	movabs $0x1e07,%rdi$/;"	l
cef	usertests.asm	/^     cef:	c6 00 61             	movb   $0x61,(%rax)$/;"	l
cf	cat.asm	/^  cf:	7f 1d                	jg     ee <main+0x32>$/;"	l
cf	echo.asm	/^  cf:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)$/;"	l
cf	ln.asm	/^  cf:	8b 45 f4             	mov    -0xc(%rbp),%eax$/;"	l
cf	sh.asm	/^      cf:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
cf	wc.asm	/^  cf:	89 45 e8             	mov    %eax,-0x18(%rbp)$/;"	l
cf	zombie.asm	/^  cf:	74 12                	je     e3 <strcmp+0x39>$/;"	l
cf0	cat.asm	/^ cf0:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)$/;"	l
cf0	ls.asm	/^     cf0:	c7 85 40 ff ff ff 00 	movl   $0x0,-0xc0(%rbp)$/;"	l
cf2	grep.asm	/^ cf2:	84 c0                	test   %al,%al$/;"	l
cf2	usertests.asm	/^     cf2:	48 b8 40 a8 00 00 00 	movabs $0xa840,%rax$/;"	l
cf3	stressfs.asm	/^ cf3:	00 00 00 $/;"	l
cf4	cat.asm	/^ cf4:	75 23                	jne    d19 <malloc+0x130>$/;"	l
cf4	grep.asm	/^ cf4:	0f 85 fc fc ff ff    	jne    9f6 <printf+0x9e>$/;"	l
cf4	init.asm	/^ cf4:	00 00 00 $/;"	l
cf4	wc.asm	/^ cf4:	00 00 00 $/;"	l
cf6	cat.asm	/^ cf6:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
cf6	sh.asm	/^     cf6:	00 00 00 $/;"	l
cf6	stressfs.asm	/^ cf6:	48 8b 00             	mov    (%rax),%rax$/;"	l
cf7	init.asm	/^ cf7:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
cf7	ls.asm	/^     cf7:	00 00 00 $/;"	l
cf7	wc.asm	/^ cf7:	48 8b 10             	mov    (%rax),%rdx$/;"	l
cf9	cat.asm	/^ cf9:	89 c7                	mov    %eax,%edi$/;"	l
cf9	sh.asm	/^     cf9:	48 b8 26 05 00 00 00 	movabs $0x526,%rax$/;"	l
cf9	stressfs.asm	/^ cf9:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)$/;"	l
cf9	usertests.asm	/^     cf9:	00 00 00 $/;"	l
cfa	grep.asm	/^ cfa:	90                   	nop$/;"	l
cfa	ls.asm	/^     cfa:	83 85 44 ff ff ff 01 	addl   $0x1,-0xbc(%rbp)$/;"	l
cfa	wc.asm	/^ cfa:	48 b8 a0 12 00 00 00 	movabs $0x12a0,%rax$/;"	l
cfb	cat.asm	/^ cfb:	48 b8 70 0b 00 00 00 	movabs $0xb70,%rax$/;"	l
cfb	grep.asm	/^ cfb:	c9                   	leaveq $/;"	l
cfb	init.asm	/^ cfb:	48 89 10             	mov    %rdx,(%rax)$/;"	l
cfc	grep.asm	/^ cfc:	c3                   	retq   $/;"	l
cfc	usertests.asm	/^     cfc:	c6 40 02 00          	movb   $0x0,0x2(%rax)$/;"	l
cfd	grep.asm	/^ cfd:	55                   	push   %rbp$/;"	l
cfd	stressfs.asm	/^ cfd:	75 23                	jne    d22 <malloc+0x130>$/;"	l
cfe	grep.asm	/^ cfe:	48 89 e5             	mov    %rsp,%rbp$/;"	l
cfe	init.asm	/^ cfe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
cff	stressfs.asm	/^ cff:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
cgaputc	console.c	/^cgaputc(int c)$/;"	f	file:
chan	proc.h	/^  void *chan;                  \/\/ If non-zero, sleeping on chan$/;"	m	struct:proc
char	cat.asm	/^char buf[512];$/;"	l
char	grep.asm	/^char buf[1024];$/;"	l
char	init.asm	/^char *argv[] = { "sh", 0 };$/;"	l
char	sh.asm	/^char symbols[] = "<|>&;()";$/;"	l
char	sh.asm	/^char whitespace[] = " \\t\\r\\n\\v";$/;"	l
char	usertests.asm	/^char uninit[10000];$/;"	l
char	wc.asm	/^char buf[512];$/;"	l
checksum	bootmain.c	/^  uint64 checksum;$/;"	m	struct:mbheader	file:
checksum	mp.h	/^  uchar checksum;               \/\/ all bytes must add up to 0$/;"	m	struct:mp
checksum	mp.h	/^  uchar checksum;               \/\/ all bytes must add up to 0$/;"	m	struct:mpconf
clearpteu	vm.c	/^clearpteu(pde_t *pgdir, char *uva)$/;"	f
cli	x86.h	/^cli(void)$/;"	f
cmd	sh.asm	/^      cmd = redircmd(cmd, q, eq, O_RDONLY, 0);$/;"	d
cmd	sh.asm	/^      cmd = redircmd(cmd, q, eq, O_WRONLY|O_CREATE, 1);$/;"	d
cmd	sh.asm	/^    cmd = backcmd(cmd);$/;"	d
cmd	sh.asm	/^    cmd = listcmd(cmd, parseline(ps, es));$/;"	d
cmd	sh.asm	/^    cmd = pipecmd(cmd, parsepipe(ps, es));$/;"	d
cmd	sh.asm	/^  cmd = (struct execcmd*)ret;$/;"	d
cmd	sh.asm	/^  cmd = malloc(sizeof(*cmd));$/;"	d
cmd	sh.asm	/^  cmd = parseexec(ps, es);$/;"	d
cmd	sh.asm	/^  cmd = parseline(&s, es);$/;"	d
cmd	sh.asm	/^  cmd = parseline(ps, es);$/;"	d
cmd	sh.asm	/^  cmd = parsepipe(ps, es);$/;"	d
cmd	sh.asm	/^  cmd = parseredirs(cmd, ps, es);$/;"	d
cmd	sh.c	/^  struct cmd *cmd;$/;"	m	struct:backcmd	typeref:struct:backcmd::cmd	file:
cmd	sh.c	/^  struct cmd *cmd;$/;"	m	struct:redircmd	typeref:struct:redircmd::cmd	file:
cmd	sh.c	/^struct cmd {$/;"	s	file:
cmos_read	lapic.c	/^static uint cmos_read(uint reg)$/;"	f	file:
cmostime	lapic.c	/^void cmostime(struct rtcdate *r)$/;"	f
code	kernel.asm	/^  code = P2V(0x7000);$/;"	d
commit	log.c	/^commit()$/;"	f	file:
committing	log.c	/^  int committing;  \/\/ in commit(), please wait.$/;"	m	struct:log	file:
concreate	usertests.c	/^concreate(void)$/;"	f
conf	kernel.asm	/^  conf = (struct mpconf*) P2V((addr_t) mp->physaddr);$/;"	d
cons	console.c	/^} cons;$/;"	v	typeref:struct:__anon7	file:
consoleinit	console.c	/^consoleinit(void)$/;"	f
consoleintr	console.c	/^consoleintr(int (*getc)(void))$/;"	f
consoleread	console.c	/^consoleread(struct inode *ip, char *dst, int n)$/;"	f
consolewrite	console.c	/^consolewrite(struct inode *ip, char *buf, int n)$/;"	f
consputc	console.c	/^consputc(int c)$/;"	f
context	proc.h	/^  struct context *context;     \/\/ swtch() here to run process$/;"	m	struct:proc	typeref:struct:proc::context
context	proc.h	/^struct context {$/;"	s
copyout	vm.c	/^copyout(pde_t *pgdir, uint va, void *p, uint len)$/;"	f
copyuvm	vm.c	/^copyuvm(pde_t *pgdir, uint sz)$/;"	f
cprintf	console.c	/^cprintf(char *fmt, ...)$/;"	f
cpu	kernel.asm	/^  cpu = c;$/;"	d
cpu	proc.h	/^struct cpu {$/;"	s
cpu	spinlock.h	/^  struct cpu *cpu;   \/\/ The cpu holding the lock.$/;"	m	struct:spinlock	typeref:struct:spinlock::cpu
cpu	vm.c	/^__thread struct cpu *cpu;$/;"	v	typeref:struct:cpu
cpunum	lapic.c	/^cpunum(void)$/;"	f
cpus	mp.c	/^struct cpu cpus[NCPU];$/;"	v	typeref:struct:cpu
cr3	mmu.h	/^  void *cr3;         \/\/ Page directory base$/;"	m	struct:taskstate
create	sysfile.c	/^create(char *path, short type, short major, short minor)$/;"	f	file:
createdelete	usertests.c	/^createdelete(void)$/;"	f
createtest	usertests.c	/^createtest(void)$/;"	f
crt	console.c	/^static ushort *crt = (ushort*)P2V(0xb8000);  \/\/ CGA memory$/;"	v	file:
cs	mmu.h	/^  uint cs : 16;         \/\/ code segment selector$/;"	m	struct:gatedesc
cs	mmu.h	/^  ushort cs;$/;"	m	struct:taskstate
cs	x86.h	/^   uint64 cs;$/;"	m	struct:trapframe
ctlmap	kbd.h	/^static uchar ctlmap[256] =$/;"	v
cwd	proc.h	/^  struct inode *cwd;           \/\/ Current directory$/;"	m	struct:proc	typeref:struct:proc::inode
d	cat.asm	/^   d:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
d	init.asm	/^   d:	48 bf 5b 0d 00 00 00 	movabs $0xd5b,%rdi$/;"	l
d	kernel.asm	/^  d = dst;$/;"	d
d	ls.asm	/^       d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
d0	kill.asm	/^  d0:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
d0	ls.asm	/^      d0:	89 c2                	mov    %eax,%edx$/;"	l
d0	mkdir.asm	/^  d0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)$/;"	l
d0	rm.asm	/^  d0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)$/;"	l
d00	sh.asm	/^     d00:	00 00 00 $/;"	l
d00	usertests.asm	/^     d00:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)$/;"	l
d01	grep.asm	/^ d01:	48 83 ec 18          	sub    $0x18,%rsp$/;"	l
d01	ls.asm	/^     d01:	8b 85 44 ff ff ff    	mov    -0xbc(%rbp),%eax$/;"	l
d01	wc.asm	/^ d01:	00 00 00 $/;"	l
d02	cat.asm	/^ d02:	00 00 00 $/;"	l
d02	init.asm	/^ d02:	48 83 c0 10          	add    $0x10,%rax$/;"	l
d02	stressfs.asm	/^ d02:	89 c7                	mov    %eax,%edi$/;"	l
d03	sh.asm	/^     d03:	ff d0                	callq  *%rax$/;"	l
d04	stressfs.asm	/^ d04:	48 b8 79 0b 00 00 00 	movabs $0xb79,%rax$/;"	l
d04	wc.asm	/^ d04:	48 89 10             	mov    %rdx,(%rax)$/;"	l
d05	cat.asm	/^ d05:	ff d0                	callq  *%rax$/;"	l
d05	grep.asm	/^ d05:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
d05	sh.asm	/^     d05:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
d06	init.asm	/^ d06:	eb 4e                	jmp    d56 <malloc+0x148>$/;"	l
d07	cat.asm	/^ d07:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
d07	ls.asm	/^     d07:	48 63 d0             	movslq %eax,%rdx$/;"	l
d07	usertests.asm	/^     d07:	eb 48                	jmp    d51 <createtest+0x9d>$/;"	l
d07	wc.asm	/^ d07:	48 b8 a0 12 00 00 00 	movabs $0x12a0,%rax$/;"	l
d08	init.asm	/^ d08:	48 b8 50 10 00 00 00 	movabs $0x1050,%rax$/;"	l
d08	sh.asm	/^     d08:	83 f8 3c             	cmp    $0x3c,%eax$/;"	l
d09	grep.asm	/^ d09:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
d09	usertests.asm	/^     d09:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
d0a	ls.asm	/^     d0a:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax$/;"	l
d0b	cat.asm	/^ d0b:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)$/;"	l
d0b	sh.asm	/^     d0b:	74 0f                	je     d1c <parseredirs+0x8e>$/;"	l
d0b	stressfs.asm	/^ d0b:	00 00 00 $/;"	l
d0c	usertests.asm	/^     d0c:	83 c0 30             	add    $0x30,%eax$/;"	l
d0d	grep.asm	/^ d0d:	48 83 e8 10          	sub    $0x10,%rax$/;"	l
d0d	sh.asm	/^     d0d:	83 f8 3e             	cmp    $0x3e,%eax$/;"	l
d0e	stressfs.asm	/^ d0e:	ff d0                	callq  *%rax$/;"	l
d0e	wc.asm	/^ d0e:	00 00 00 $/;"	l
d0f	init.asm	/^ d0f:	00 00 00 $/;"	l
d0f	usertests.asm	/^     d0f:	89 c2                	mov    %eax,%edx$/;"	l
d1	cat.asm	/^  d1:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
d1	forktest.asm	/^  d1:	83 7d f8 00          	cmpl   $0x0,-0x8(%rbp)$/;"	l
d1	stressfs.asm	/^  d1:	48 b8 23 05 00 00 00 	movabs $0x523,%rax$/;"	l
d1	zombie.asm	/^  d1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
d10	cat.asm	/^ d10:	75 07                	jne    d19 <malloc+0x130>$/;"	l
d10	sh.asm	/^     d10:	74 36                	je     d48 <parseredirs+0xba>$/;"	l
d10	stressfs.asm	/^ d10:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
d11	grep.asm	/^ d11:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
d11	ls.asm	/^     d11:	48 01 d0             	add    %rdx,%rax$/;"	l
d11	usertests.asm	/^     d11:	48 b8 40 a8 00 00 00 	movabs $0xa840,%rax$/;"	l
d11	wc.asm	/^ d11:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%rax)$/;"	l
d12	cat.asm	/^ d12:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
d12	init.asm	/^ d12:	48 8b 00             	mov    (%rax),%rax$/;"	l
d12	sh.asm	/^     d12:	83 f8 2b             	cmp    $0x2b,%eax$/;"	l
d14	ls.asm	/^     d14:	0f b6 00             	movzbl (%rax),%eax$/;"	l
d14	stressfs.asm	/^ d14:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)$/;"	l
d15	grep.asm	/^ d15:	48 b8 30 17 00 00 00 	movabs $0x1730,%rax$/;"	l
d15	init.asm	/^ d15:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)$/;"	l
d15	sh.asm	/^     d15:	74 5d                	je     d74 <parseredirs+0xe6>$/;"	l
d17	cat.asm	/^ d17:	eb 18                	jmp    d31 <malloc+0x148>$/;"	l
d17	ls.asm	/^     d17:	84 c0                	test   %al,%al$/;"	l
d17	sh.asm	/^     d17:	e9 83 00 00 00       	jmpq   d9f <parseredirs+0x111>$/;"	l
d18	usertests.asm	/^     d18:	00 00 00 $/;"	l
d18	wc.asm	/^ d18:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
d19	cat.asm	/^ d19:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
d19	init.asm	/^ d19:	75 23                	jne    d3e <malloc+0x130>$/;"	l
d19	ls.asm	/^     d19:	0f 85 fc fc ff ff    	jne    a1b <printf+0x9e>$/;"	l
d19	stressfs.asm	/^ d19:	75 07                	jne    d22 <malloc+0x130>$/;"	l
d1b	init.asm	/^ d1b:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
d1b	stressfs.asm	/^ d1b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
d1b	usertests.asm	/^     d1b:	88 50 01             	mov    %dl,0x1(%rax)$/;"	l
d1c	grep.asm	/^ d1c:	00 00 00 $/;"	l
d1c	sh.asm	/^     d1c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx$/;"	l
d1c	wc.asm	/^ d1c:	48 8b 00             	mov    (%rax),%rax$/;"	l
d1d	cat.asm	/^ d1d:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
d1e	init.asm	/^ d1e:	89 c7                	mov    %eax,%edi$/;"	l
d1e	usertests.asm	/^     d1e:	be 02 02 00 00       	mov    $0x202,%esi$/;"	l
d1f	grep.asm	/^ d1f:	48 8b 00             	mov    (%rax),%rax$/;"	l
d1f	ls.asm	/^     d1f:	90                   	nop$/;"	l
d1f	wc.asm	/^ d1f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
d2	grep.asm	/^  d2:	48 b8 20 13 00 00 00 	movabs $0x1320,%rax$/;"	l
d2	init.asm	/^  d2:	48 ba be 06 00 00 00 	movabs $0x6be,%rdx$/;"	l
d2	ln.asm	/^  d2:	48 89 ce             	mov    %rcx,%rsi$/;"	l
d2	ls.asm	/^      d2:	48 b8 20 13 00 00 00 	movabs $0x1320,%rax$/;"	l
d2	mount.asm	/^  d2:	0f b6 00             	movzbl (%rax),%eax$/;"	l
d2	usertests.asm	/^      d2:	00 00 00 $/;"	l
d2	wc.asm	/^  d2:	83 7d e8 00          	cmpl   $0x0,-0x18(%rbp)$/;"	l
d20	init.asm	/^ d20:	48 b8 95 0b 00 00 00 	movabs $0xb95,%rax$/;"	l
d20	ls.asm	/^     d20:	c9                   	leaveq $/;"	l
d20	sh.asm	/^     d20:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi$/;"	l
d20	stressfs.asm	/^ d20:	eb 18                	jmp    d3a <malloc+0x148>$/;"	l
d21	cat.asm	/^ d21:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
d21	ls.asm	/^     d21:	c3                   	retq   $/;"	l
d22	grep.asm	/^ d22:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
d22	ls.asm	/^     d22:	55                   	push   %rbp$/;"	l
d22	stressfs.asm	/^ d22:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
d23	ls.asm	/^     d23:	48 89 e5             	mov    %rsp,%rbp$/;"	l
d23	usertests.asm	/^     d23:	48 bf 40 a8 00 00 00 	movabs $0xa840,%rdi$/;"	l
d23	wc.asm	/^ d23:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
d24	sh.asm	/^     d24:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
d25	cat.asm	/^ d25:	48 8b 00             	mov    (%rax),%rax$/;"	l
d26	grep.asm	/^ d26:	eb 2f                	jmp    d57 <free+0x5a>$/;"	l
d26	ls.asm	/^     d26:	48 83 ec 18          	sub    $0x18,%rsp$/;"	l
d26	stressfs.asm	/^ d26:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
d27	init.asm	/^ d27:	00 00 00 $/;"	l
d27	wc.asm	/^ d27:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
d28	cat.asm	/^ d28:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
d28	grep.asm	/^ d28:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
d28	sh.asm	/^     d28:	41 b8 00 00 00 00    	mov    $0x0,%r8d$/;"	l
d2a	init.asm	/^ d2a:	ff d0                	callq  *%rax$/;"	l
d2a	ls.asm	/^     d2a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
d2a	stressfs.asm	/^ d2a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
d2a	usertests.asm	/^     d2a:	00 00 00 $/;"	l
d2a	wc.asm	/^ d2a:	3b 45 ec             	cmp    -0x14(%rbp),%eax$/;"	l
d2c	cat.asm	/^ d2c:	e9 41 ff ff ff       	jmpq   c72 <malloc+0x89>$/;"	l
d2c	grep.asm	/^ d2c:	48 8b 00             	mov    (%rax),%rax$/;"	l
d2c	init.asm	/^ d2c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
d2d	usertests.asm	/^     d2d:	48 b8 52 60 00 00 00 	movabs $0x6052,%rax$/;"	l
d2d	wc.asm	/^ d2d:	72 65                	jb     d94 <malloc+0xfa>$/;"	l
d2e	ls.asm	/^     d2e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
d2e	sh.asm	/^     d2e:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
d2e	stressfs.asm	/^ d2e:	48 8b 00             	mov    (%rax),%rax$/;"	l
d2f	grep.asm	/^ d2f:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax$/;"	l
d2f	wc.asm	/^ d2f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
d3	echo.asm	/^  d3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
d3	sh.asm	/^      d3:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
d30	init.asm	/^ d30:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)$/;"	l
d31	cat.asm	/^ d31:	c9                   	leaveq $/;"	l
d31	stressfs.asm	/^ d31:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
d32	cat.asm	/^ d32:	c3                   	retq   $/;"	l
d32	ls.asm	/^     d32:	48 83 e8 10          	sub    $0x10,%rax$/;"	l
d33	grep.asm	/^ d33:	77 17                	ja     d4c <free+0x4f>$/;"	l
d33	sh.asm	/^     d33:	48 89 c7             	mov    %rax,%rdi$/;"	l
d33	wc.asm	/^ d33:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
d34	usertests.asm	/^     d34:	00 00 00 $/;"	l
d35	grep.asm	/^ d35:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
d35	init.asm	/^ d35:	75 07                	jne    d3e <malloc+0x130>$/;"	l
d35	stressfs.asm	/^ d35:	e9 41 ff ff ff       	jmpq   c7b <malloc+0x89>$/;"	l
d36	ls.asm	/^     d36:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
d36	sh.asm	/^     d36:	48 b8 e7 05 00 00 00 	movabs $0x5e7,%rax$/;"	l
d36	wc.asm	/^ d36:	3b 45 ec             	cmp    -0x14(%rbp),%eax$/;"	l
d37	init.asm	/^ d37:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
d37	usertests.asm	/^     d37:	ff d0                	callq  *%rax$/;"	l
d39	grep.asm	/^ d39:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax$/;"	l
d39	usertests.asm	/^     d39:	89 45 f8             	mov    %eax,-0x8(%rbp)$/;"	l
d39	wc.asm	/^ d39:	75 10                	jne    d4b <malloc+0xb1>$/;"	l
d3a	ls.asm	/^     d3a:	48 b8 40 13 00 00 00 	movabs $0x1340,%rax$/;"	l
d3a	stressfs.asm	/^ d3a:	c9                   	leaveq $/;"	l
d3b	stressfs.asm	/^ d3b:	c3                   	retq   $/;"	l
d3b	wc.asm	/^ d3b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
d3c	init.asm	/^ d3c:	eb 18                	jmp    d56 <malloc+0x148>$/;"	l
d3c	usertests.asm	/^     d3c:	8b 45 f8             	mov    -0x8(%rbp),%eax$/;"	l
d3d	grep.asm	/^ d3d:	77 2f                	ja     d6e <free+0x71>$/;"	l
d3d	sh.asm	/^     d3d:	00 00 00 $/;"	l
d3e	init.asm	/^ d3e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
d3f	grep.asm	/^ d3f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
d3f	usertests.asm	/^     d3f:	89 c7                	mov    %eax,%edi$/;"	l
d3f	wc.asm	/^ d3f:	48 8b 10             	mov    (%rax),%rdx$/;"	l
d4	kill.asm	/^  d4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
d4	mkdir.asm	/^  d4:	89 75 f4             	mov    %esi,-0xc(%rbp)$/;"	l
d4	rm.asm	/^  d4:	89 75 f4             	mov    %esi,-0xc(%rbp)$/;"	l
d40	sh.asm	/^     d40:	ff d0                	callq  *%rax$/;"	l
d41	ls.asm	/^     d41:	00 00 00 $/;"	l
d41	usertests.asm	/^     d41:	48 b8 34 60 00 00 00 	movabs $0x6034,%rax$/;"	l
d42	init.asm	/^ d42:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
d42	sh.asm	/^     d42:	48 89 45 d8          	mov    %rax,-0x28(%rbp)$/;"	l
d42	wc.asm	/^ d42:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
d43	grep.asm	/^ d43:	48 8b 00             	mov    (%rax),%rax$/;"	l
d44	ls.asm	/^     d44:	48 8b 00             	mov    (%rax),%rax$/;"	l
d46	grep.asm	/^ d46:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax$/;"	l
d46	init.asm	/^ d46:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
d46	sh.asm	/^     d46:	eb 57                	jmp    d9f <parseredirs+0x111>$/;"	l
d46	wc.asm	/^ d46:	48 89 10             	mov    %rdx,(%rax)$/;"	l
d47	ls.asm	/^     d47:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
d48	sh.asm	/^     d48:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx$/;"	l
d48	usertests.asm	/^     d48:	00 00 00 $/;"	l
d49	wc.asm	/^ d49:	eb 2e                	jmp    d79 <malloc+0xdf>$/;"	l
d4a	grep.asm	/^ d4a:	77 22                	ja     d6e <free+0x71>$/;"	l
d4a	init.asm	/^ d4a:	48 8b 00             	mov    (%rax),%rax$/;"	l
d4b	ls.asm	/^     d4b:	eb 2f                	jmp    d7c <free+0x5a>$/;"	l
d4b	usertests.asm	/^     d4b:	ff d0                	callq  *%rax$/;"	l
d4b	wc.asm	/^ d4b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
d4c	grep.asm	/^ d4c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
d4c	sh.asm	/^     d4c:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi$/;"	l
d4d	init.asm	/^ d4d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
d4d	ls.asm	/^     d4d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
d4d	usertests.asm	/^     d4d:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)$/;"	l
d4f	wc.asm	/^ d4f:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
d5	forktest.asm	/^  d5:	78 21                	js     f8 <forktest+0x67>$/;"	l
d5	ln.asm	/^  d5:	48 89 f7             	mov    %rsi,%rdi$/;"	l
d5	mount.asm	/^  d5:	38 c2                	cmp    %al,%dl$/;"	l
d5	usertests.asm	/^      d5:	48 b8 66 60 00 00 00 	movabs $0x6066,%rax$/;"	l
d5	zombie.asm	/^  d5:	0f b6 10             	movzbl (%rax),%edx$/;"	l
d50	grep.asm	/^ d50:	48 8b 00             	mov    (%rax),%rax$/;"	l
d50	sh.asm	/^     d50:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
d51	init.asm	/^ d51:	e9 41 ff ff ff       	jmpq   c97 <malloc+0x89>$/;"	l
d51	ls.asm	/^     d51:	48 8b 00             	mov    (%rax),%rax$/;"	l
d51	usertests.asm	/^     d51:	83 7d fc 33          	cmpl   $0x33,-0x4(%rbp)$/;"	l
d52	wc.asm	/^ d52:	2b 45 ec             	sub    -0x14(%rbp),%eax$/;"	l
d53	grep.asm	/^ d53:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
d54	ls.asm	/^     d54:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax$/;"	l
d54	sh.asm	/^     d54:	41 b8 01 00 00 00    	mov    $0x1,%r8d$/;"	l
d55	usertests.asm	/^     d55:	7e b2                	jle    d09 <createtest+0x55>$/;"	l
d55	wc.asm	/^ d55:	89 c2                	mov    %eax,%edx$/;"	l
d56	init.asm	/^ d56:	c9                   	leaveq $/;"	l
d57	grep.asm	/^ d57:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
d57	init.asm	/^ d57:	c3                   	retq   $/;"	l
d57	usertests.asm	/^     d57:	48 b8 40 a8 00 00 00 	movabs $0xa840,%rax$/;"	l
d57	wc.asm	/^ d57:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
d58	ls.asm	/^     d58:	77 17                	ja     d71 <free+0x4f>$/;"	l
d5a	ls.asm	/^     d5a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
d5a	sh.asm	/^     d5a:	b9 01 02 00 00       	mov    $0x201,%ecx$/;"	l
d5b	grep.asm	/^ d5b:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax$/;"	l
d5b	wc.asm	/^ d5b:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
d5e	ls.asm	/^     d5e:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax$/;"	l
d5e	usertests.asm	/^     d5e:	00 00 00 $/;"	l
d5e	wc.asm	/^ d5e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
d5f	grep.asm	/^ d5f:	76 c7                	jbe    d28 <free+0x2b>$/;"	l
d5f	sh.asm	/^     d5f:	48 89 c7             	mov    %rax,%rdi$/;"	l
d6	cat.asm	/^  d6:	48 b8 00 00 00 00 00 	movabs $0x0,%rax$/;"	l
d6	wc.asm	/^  d6:	0f 8f 52 ff ff ff    	jg     2e <wc+0x2e>$/;"	l
d61	grep.asm	/^ d61:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
d61	usertests.asm	/^     d61:	c6 00 61             	movb   $0x61,(%rax)$/;"	l
d62	ls.asm	/^     d62:	77 2f                	ja     d93 <free+0x71>$/;"	l
d62	sh.asm	/^     d62:	48 b8 e7 05 00 00 00 	movabs $0x5e7,%rax$/;"	l
d62	wc.asm	/^ d62:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
d64	ls.asm	/^     d64:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
d64	usertests.asm	/^     d64:	48 b8 40 a8 00 00 00 	movabs $0xa840,%rax$/;"	l
d65	grep.asm	/^ d65:	48 8b 00             	mov    (%rax),%rax$/;"	l
d65	wc.asm	/^ d65:	89 c0                	mov    %eax,%eax$/;"	l
d67	wc.asm	/^ d67:	48 c1 e0 04          	shl    $0x4,%rax$/;"	l
d68	grep.asm	/^ d68:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax$/;"	l
d68	ls.asm	/^     d68:	48 8b 00             	mov    (%rax),%rax$/;"	l
d69	sh.asm	/^     d69:	00 00 00 $/;"	l
d6b	ls.asm	/^     d6b:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax$/;"	l
d6b	usertests.asm	/^     d6b:	00 00 00 $/;"	l
d6b	wc.asm	/^ d6b:	48 01 45 f8          	add    %rax,-0x8(%rbp)$/;"	l
d6c	grep.asm	/^ d6c:	76 ba                	jbe    d28 <free+0x2b>$/;"	l
d6c	sh.asm	/^     d6c:	ff d0                	callq  *%rax$/;"	l
d6e	grep.asm	/^ d6e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
d6e	sh.asm	/^     d6e:	48 89 45 d8          	mov    %rax,-0x28(%rbp)$/;"	l
d6e	usertests.asm	/^     d6e:	c6 40 02 00          	movb   $0x0,0x2(%rax)$/;"	l
d6f	ls.asm	/^     d6f:	77 22                	ja     d93 <free+0x71>$/;"	l
d6f	wc.asm	/^ d6f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
d7	echo.asm	/^  d7:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
d7	forktest.asm	/^  d7:	83 7d f8 00          	cmpl   $0x0,-0x8(%rbp)$/;"	l
d7	mkdir.asm	/^  d7:	89 55 f0             	mov    %edx,-0x10(%rbp)$/;"	l
d7	mount.asm	/^  d7:	74 d9                	je     b2 <strcmp+0x12>$/;"	l
d7	rm.asm	/^  d7:	89 55 f0             	mov    %edx,-0x10(%rbp)$/;"	l
d7	sh.asm	/^      d7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
d71	ls.asm	/^     d71:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
d72	grep.asm	/^ d72:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
d72	sh.asm	/^     d72:	eb 2b                	jmp    d9f <parseredirs+0x111>$/;"	l
d72	usertests.asm	/^     d72:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)$/;"	l
d73	wc.asm	/^ d73:	8b 55 ec             	mov    -0x14(%rbp),%edx$/;"	l
d74	sh.asm	/^     d74:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx$/;"	l
d75	grep.asm	/^ d75:	89 c0                	mov    %eax,%eax$/;"	l
d75	ls.asm	/^     d75:	48 8b 00             	mov    (%rax),%rax$/;"	l
d76	wc.asm	/^ d76:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
d77	grep.asm	/^ d77:	48 c1 e0 04          	shl    $0x4,%rax$/;"	l
d78	ls.asm	/^     d78:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
d78	sh.asm	/^     d78:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi$/;"	l
d79	usertests.asm	/^     d79:	eb 2f                	jmp    daa <createtest+0xf6>$/;"	l
d79	wc.asm	/^ d79:	48 b8 b0 12 00 00 00 	movabs $0x12b0,%rax$/;"	l
d7b	grep.asm	/^ d7b:	48 89 c2             	mov    %rax,%rdx$/;"	l
d7b	usertests.asm	/^     d7b:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
d7c	ls.asm	/^     d7c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
d7c	sh.asm	/^     d7c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
d7e	grep.asm	/^ d7e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
d7e	usertests.asm	/^     d7e:	83 c0 30             	add    $0x30,%eax$/;"	l
d8	kill.asm	/^  d8:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)$/;"	l
d8	ln.asm	/^  d8:	89 d1                	mov    %edx,%ecx$/;"	l
d8	stressfs.asm	/^  d8:	00 00 00 $/;"	l
d8	zombie.asm	/^  d8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
d80	ls.asm	/^     d80:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax$/;"	l
d80	sh.asm	/^     d80:	41 b8 01 00 00 00    	mov    $0x1,%r8d$/;"	l
d80	wc.asm	/^ d80:	00 00 00 $/;"	l
d81	usertests.asm	/^     d81:	89 c2                	mov    %eax,%edx$/;"	l
d82	grep.asm	/^ d82:	48 01 c2             	add    %rax,%rdx$/;"	l
d83	usertests.asm	/^     d83:	48 b8 40 a8 00 00 00 	movabs $0xa840,%rax$/;"	l
d83	wc.asm	/^ d83:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
d84	ls.asm	/^     d84:	76 c7                	jbe    d4d <free+0x2b>$/;"	l
d85	grep.asm	/^ d85:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
d86	ls.asm	/^     d86:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
d86	sh.asm	/^     d86:	b9 01 02 00 00       	mov    $0x201,%ecx$/;"	l
d87	wc.asm	/^ d87:	48 89 10             	mov    %rdx,(%rax)$/;"	l
d89	grep.asm	/^ d89:	48 8b 00             	mov    (%rax),%rax$/;"	l
d8a	ls.asm	/^     d8a:	48 8b 00             	mov    (%rax),%rax$/;"	l
d8a	usertests.asm	/^     d8a:	00 00 00 $/;"	l
d8a	wc.asm	/^ d8a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
d8b	sh.asm	/^     d8b:	48 89 c7             	mov    %rax,%rdi$/;"	l
d8c	grep.asm	/^ d8c:	48 39 c2             	cmp    %rax,%rdx$/;"	l
d8d	ls.asm	/^     d8d:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax$/;"	l
d8d	usertests.asm	/^     d8d:	88 50 01             	mov    %dl,0x1(%rax)$/;"	l
d8e	sh.asm	/^     d8e:	48 b8 e7 05 00 00 00 	movabs $0x5e7,%rax$/;"	l
d8e	wc.asm	/^ d8e:	48 83 c0 10          	add    $0x10,%rax$/;"	l
d8f	grep.asm	/^ d8f:	75 2d                	jne    dbe <free+0xc1>$/;"	l
d9	grep.asm	/^  d9:	00 00 00 $/;"	l
d9	init.asm	/^  d9:	00 00 00 $/;"	l
d9	ls.asm	/^      d9:	00 00 00 $/;"	l
d9	mount.asm	/^  d9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
d90	usertests.asm	/^     d90:	48 bf 40 a8 00 00 00 	movabs $0xa840,%rdi$/;"	l
d91	grep.asm	/^ d91:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
d91	ls.asm	/^     d91:	76 ba                	jbe    d4d <free+0x2b>$/;"	l
d92	wc.asm	/^ d92:	eb 4e                	jmp    de2 <malloc+0x148>$/;"	l
d93	ls.asm	/^     d93:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
d94	wc.asm	/^ d94:	48 b8 b0 12 00 00 00 	movabs $0x12b0,%rax$/;"	l
d95	grep.asm	/^ d95:	8b 50 08             	mov    0x8(%rax),%edx$/;"	l
d95	sh.asm	/^     d95:	00 00 00 $/;"	l
d97	ls.asm	/^     d97:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
d97	usertests.asm	/^     d97:	00 00 00 $/;"	l
d98	grep.asm	/^ d98:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
d98	sh.asm	/^     d98:	ff d0                	callq  *%rax$/;"	l
d9a	ls.asm	/^     d9a:	89 c0                	mov    %eax,%eax$/;"	l
d9a	sh.asm	/^     d9a:	48 89 45 d8          	mov    %rax,-0x28(%rbp)$/;"	l
d9a	usertests.asm	/^     d9a:	48 b8 66 60 00 00 00 	movabs $0x6066,%rax$/;"	l
d9b	wc.asm	/^ d9b:	00 00 00 $/;"	l
d9c	grep.asm	/^ d9c:	48 8b 00             	mov    (%rax),%rax$/;"	l
d9c	ls.asm	/^     d9c:	48 c1 e0 04          	shl    $0x4,%rax$/;"	l
d9e	sh.asm	/^     d9e:	90                   	nop$/;"	l
d9e	wc.asm	/^ d9e:	48 8b 00             	mov    (%rax),%rax$/;"	l
d9f	grep.asm	/^ d9f:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
d9f	sh.asm	/^     d9f:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx$/;"	l
da	ln.asm	/^  da:	fc                   	cld    $/;"	l
da	mkdir.asm	/^  da:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx$/;"	l
da	rm.asm	/^  da:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx$/;"	l
da0	ls.asm	/^     da0:	48 89 c2             	mov    %rax,%rdx$/;"	l
da1	usertests.asm	/^     da1:	00 00 00 $/;"	l
da1	wc.asm	/^ da1:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)$/;"	l
da2	grep.asm	/^ da2:	01 c2                	add    %eax,%edx$/;"	l
da3	ls.asm	/^     da3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
da3	sh.asm	/^     da3:	48 8b 45 d0          	mov    -0x30(%rbp),%rax$/;"	l
da4	grep.asm	/^ da4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
da4	usertests.asm	/^     da4:	ff d0                	callq  *%rax$/;"	l
da5	wc.asm	/^ da5:	75 23                	jne    dca <malloc+0x130>$/;"	l
da6	usertests.asm	/^     da6:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)$/;"	l
da7	ls.asm	/^     da7:	48 01 c2             	add    %rax,%rdx$/;"	l
da7	sh.asm	/^     da7:	48 ba 24 1e 00 00 00 	movabs $0x1e24,%rdx$/;"	l
da7	wc.asm	/^ da7:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
da8	grep.asm	/^ da8:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
daa	ls.asm	/^     daa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
daa	usertests.asm	/^     daa:	83 7d fc 33          	cmpl   $0x33,-0x4(%rbp)$/;"	l
daa	wc.asm	/^ daa:	89 c7                	mov    %eax,%edi$/;"	l
dab	grep.asm	/^ dab:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
dac	wc.asm	/^ dac:	48 b8 21 0c 00 00 00 	movabs $0xc21,%rax$/;"	l
dae	ls.asm	/^     dae:	48 8b 00             	mov    (%rax),%rax$/;"	l
dae	sh.asm	/^     dae:	00 00 00 $/;"	l
dae	usertests.asm	/^     dae:	7e cb                	jle    d7b <createtest+0xc7>$/;"	l
daf	grep.asm	/^ daf:	48 8b 00             	mov    (%rax),%rax$/;"	l
data	buf.h	/^  uchar data[BSIZE];$/;"	m	struct:buf
data	ioapic.c	/^  uint data;$/;"	m	struct:ioapic	file:
data	kernel.asm	/^    data = (shift & E0ESC ? data : data & 0x7F);$/;"	d
data	kernel.asm	/^  data = inb(KBDATAP);$/;"	d
data	pipe.c	/^  char data[PIPESIZE];$/;"	m	struct:pipe	file:
day	date.h	/^  uint day;$/;"	m	struct:rtcdate
db	echo.asm	/^  db:	90                   	nop$/;"	l
db	forktest.asm	/^  db:	75 0c                	jne    e9 <forktest+0x58>$/;"	l
db	ln.asm	/^  db:	f3 aa                	rep stos %al,%es:(%rdi)$/;"	l
db	mmu.h	/^  uint db : 1;         \/\/ 0 = 16-bit segment, 1 = 32-bit segment$/;"	m	struct:segdesc
db	sh.asm	/^      db:	8b 40 24             	mov    0x24(%rax),%eax$/;"	l
db	stressfs.asm	/^  db:	ff d0                	callq  *%rax$/;"	l
db0	usertests.asm	/^     db0:	48 b8 08 88 00 00 00 	movabs $0x8808,%rax$/;"	l
db1	ls.asm	/^     db1:	48 39 c2             	cmp    %rax,%rdx$/;"	l
db1	sh.asm	/^     db1:	48 89 ce             	mov    %rcx,%rsi$/;"	l
db2	grep.asm	/^ db2:	48 8b 10             	mov    (%rax),%rdx$/;"	l
db3	wc.asm	/^ db3:	00 00 00 $/;"	l
db4	ls.asm	/^     db4:	75 2d                	jne    de3 <free+0xc1>$/;"	l
db4	sh.asm	/^     db4:	48 89 c7             	mov    %rax,%rdi$/;"	l
db5	grep.asm	/^ db5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
db6	ls.asm	/^     db6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
db6	wc.asm	/^ db6:	ff d0                	callq  *%rax$/;"	l
db7	sh.asm	/^     db7:	48 b8 51 09 00 00 00 	movabs $0x951,%rax$/;"	l
db7	usertests.asm	/^     db7:	00 00 00 $/;"	l
db8	wc.asm	/^ db8:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
db9	grep.asm	/^ db9:	48 89 10             	mov    %rdx,(%rax)$/;"	l
dba	ls.asm	/^     dba:	8b 50 08             	mov    0x8(%rax),%edx$/;"	l
dba	usertests.asm	/^     dba:	8b 00                	mov    (%rax),%eax$/;"	l
dbc	grep.asm	/^ dbc:	eb 0e                	jmp    dcc <free+0xcf>$/;"	l
dbc	usertests.asm	/^     dbc:	48 be 48 6c 00 00 00 	movabs $0x6c48,%rsi$/;"	l
dbc	wc.asm	/^ dbc:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)$/;"	l
dbd	ls.asm	/^     dbd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
dbe	grep.asm	/^ dbe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
dbe	sh.asm	/^     dbe:	00 00 00 $/;"	l
dc	echo.asm	/^  dc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
dc	grep.asm	/^  dc:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)$/;"	l
dc	init.asm	/^  dc:	ff d2                	callq  *%rdx$/;"	l
dc	kill.asm	/^  dc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
dc	ls.asm	/^      dc:	48 01 d0             	add    %rdx,%rax$/;"	l
dc	usertests.asm	/^      dc:	00 00 00 $/;"	l
dc	wc.asm	/^  dc:	83 7d e8 00          	cmpl   $0x0,-0x18(%rbp)$/;"	l
dc	zombie.asm	/^  dc:	0f b6 00             	movzbl (%rax),%eax$/;"	l
dc1	ls.asm	/^     dc1:	48 8b 00             	mov    (%rax),%rax$/;"	l
dc1	sh.asm	/^     dc1:	ff d0                	callq  *%rax$/;"	l
dc1	wc.asm	/^ dc1:	75 07                	jne    dca <malloc+0x130>$/;"	l
dc2	grep.asm	/^ dc2:	48 8b 10             	mov    (%rax),%rdx$/;"	l
dc3	sh.asm	/^     dc3:	85 c0                	test   %eax,%eax$/;"	l
dc3	usertests.asm	/^     dc3:	00 00 00 $/;"	l
dc3	wc.asm	/^ dc3:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
dc4	ls.asm	/^     dc4:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
dc5	grep.asm	/^ dc5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
dc5	sh.asm	/^     dc5:	0f 85 dc fe ff ff    	jne    ca7 <parseredirs+0x19>$/;"	l
dc6	usertests.asm	/^     dc6:	89 c7                	mov    %eax,%edi$/;"	l
dc7	ls.asm	/^     dc7:	01 c2                	add    %eax,%edx$/;"	l
dc8	usertests.asm	/^     dc8:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
dc8	wc.asm	/^ dc8:	eb 18                	jmp    de2 <malloc+0x148>$/;"	l
dc9	grep.asm	/^ dc9:	48 89 10             	mov    %rdx,(%rax)$/;"	l
dc9	ls.asm	/^     dc9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
dca	wc.asm	/^ dca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
dcb	sh.asm	/^     dcb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
dcc	grep.asm	/^ dcc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
dcd	ls.asm	/^     dcd:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
dcd	usertests.asm	/^     dcd:	48 ba d1 61 00 00 00 	movabs $0x61d1,%rdx$/;"	l
dce	wc.asm	/^ dce:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
dcf	sh.asm	/^     dcf:	c9                   	leaveq $/;"	l
dd	cat.asm	/^  dd:	00 00 00 $/;"	l
dd	forktest.asm	/^  dd:	48 b8 0d 05 00 00 00 	movabs $0x50d,%rax$/;"	l
dd	ln.asm	/^  dd:	89 ca                	mov    %ecx,%edx$/;"	l
dd	mount.asm	/^  dd:	0f b6 00             	movzbl (%rax),%eax$/;"	l
dd	stressfs.asm	/^  dd:	89 45 f8             	mov    %eax,-0x8(%rbp)$/;"	l
dd0	grep.asm	/^ dd0:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
dd0	ls.asm	/^     dd0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
dd0	sh.asm	/^     dd0:	c3                   	retq   $/;"	l
dd1	sh.asm	/^     dd1:	55                   	push   %rbp$/;"	l
dd2	sh.asm	/^     dd2:	48 89 e5             	mov    %rsp,%rbp$/;"	l
dd2	wc.asm	/^ dd2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
dd3	grep.asm	/^ dd3:	89 c0                	mov    %eax,%eax$/;"	l
dd4	ls.asm	/^     dd4:	48 8b 00             	mov    (%rax),%rax$/;"	l
dd4	usertests.asm	/^     dd4:	00 00 00 $/;"	l
dd5	grep.asm	/^ dd5:	48 c1 e0 04          	shl    $0x4,%rax$/;"	l
dd5	sh.asm	/^     dd5:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
dd6	wc.asm	/^ dd6:	48 8b 00             	mov    (%rax),%rax$/;"	l
dd7	ls.asm	/^     dd7:	48 8b 10             	mov    (%rax),%rdx$/;"	l
dd7	usertests.asm	/^     dd7:	ff d2                	callq  *%rdx$/;"	l
dd9	grep.asm	/^ dd9:	48 89 c2             	mov    %rax,%rdx$/;"	l
dd9	sh.asm	/^     dd9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
dd9	usertests.asm	/^     dd9:	90                   	nop$/;"	l
dd9	wc.asm	/^ dd9:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
dda	ls.asm	/^     dda:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
dda	usertests.asm	/^     dda:	c9                   	leaveq $/;"	l
ddb	usertests.asm	/^     ddb:	c3                   	retq   $/;"	l
ddc	grep.asm	/^ ddc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ddc	usertests.asm	/^     ddc:	55                   	push   %rbp$/;"	l
ddd	sh.asm	/^     ddd:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)$/;"	l
ddd	usertests.asm	/^     ddd:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ddd	wc.asm	/^ ddd:	e9 41 ff ff ff       	jmpq   d23 <malloc+0x89>$/;"	l
dde	ls.asm	/^     dde:	48 89 10             	mov    %rdx,(%rax)$/;"	l
de	init.asm	/^  de:	48 be 84 0d 00 00 00 	movabs $0xd84,%rsi$/;"	l
de	mkdir.asm	/^  de:	8b 55 f0             	mov    -0x10(%rbp),%edx$/;"	l
de	rm.asm	/^  de:	8b 55 f0             	mov    -0x10(%rbp),%edx$/;"	l
de	sh.asm	/^      de:	89 c7                	mov    %eax,%edi$/;"	l
de0	grep.asm	/^ de0:	48 01 d0             	add    %rdx,%rax$/;"	l
de0	usertests.asm	/^     de0:	48 b8 08 88 00 00 00 	movabs $0x8808,%rax$/;"	l
de1	ls.asm	/^     de1:	eb 0e                	jmp    df1 <free+0xcf>$/;"	l
de1	sh.asm	/^     de1:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx$/;"	l
de2	wc.asm	/^ de2:	c9                   	leaveq $/;"	l
de3	grep.asm	/^ de3:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax$/;"	l
de3	ls.asm	/^     de3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
de3	wc.asm	/^ de3:	c3                   	retq   $/;"	l
de5	sh.asm	/^     de5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
de7	grep.asm	/^ de7:	75 27                	jne    e10 <free+0x113>$/;"	l
de7	ls.asm	/^     de7:	48 8b 10             	mov    (%rax),%rdx$/;"	l
de7	usertests.asm	/^     de7:	00 00 00 $/;"	l
de9	grep.asm	/^ de9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
de9	sh.asm	/^     de9:	48 ba 27 1e 00 00 00 	movabs $0x1e27,%rdx$/;"	l
dea	ls.asm	/^     dea:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
dea	usertests.asm	/^     dea:	8b 00                	mov    (%rax),%eax$/;"	l
deallocuvm	vm.c	/^deallocuvm(pde_t *pgdir, uint64 oldsz, uint64 newsz)$/;"	f
dec	usertests.asm	/^     dec:	48 be 6e 6c 00 00 00 	movabs $0x6c6e,%rsi$/;"	l
ded	grep.asm	/^ ded:	8b 50 08             	mov    0x8(%rax),%edx$/;"	l
dee	ls.asm	/^     dee:	48 89 10             	mov    %rdx,(%rax)$/;"	l
default	kernel.asm	/^    default: break;$/;"	l
default	kernel.asm	/^    default:$/;"	l
default	kernel.asm	/^  default:$/;"	l
default	sh.asm	/^  default:$/;"	l
dev	buf.h	/^  uint dev;$/;"	m	struct:buf
dev	file.h	/^  uint dev;           \/\/ Device number$/;"	m	struct:inode
dev	log.c	/^  int dev;$/;"	m	struct:log	file:
dev	stat.h	/^  int dev;     \/\/ File system's disk device$/;"	m	struct:stat
devsw	file.c	/^struct devsw devsw[NDEV];$/;"	v	typeref:struct:devsw
devsw	file.h	/^struct devsw {$/;"	s
df	ln.asm	/^  df:	48 89 fe             	mov    %rdi,%rsi$/;"	l
df	ls.asm	/^      df:	89 da                	mov    %ebx,%edx$/;"	l
df	usertests.asm	/^      df:	ff d0                	callq  *%rax$/;"	l
df	zombie.asm	/^  df:	38 c2                	cmp    %al,%dl$/;"	l
df0	grep.asm	/^ df0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
df0	sh.asm	/^     df0:	00 00 00 $/;"	l
df1	ls.asm	/^     df1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
df3	sh.asm	/^     df3:	48 89 ce             	mov    %rcx,%rsi$/;"	l
df3	usertests.asm	/^     df3:	00 00 00 $/;"	l
df4	grep.asm	/^ df4:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
df5	ls.asm	/^     df5:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
df6	sh.asm	/^     df6:	48 89 c7             	mov    %rax,%rdi$/;"	l
df6	usertests.asm	/^     df6:	89 c7                	mov    %eax,%edi$/;"	l
df7	grep.asm	/^ df7:	01 c2                	add    %eax,%edx$/;"	l
df8	ls.asm	/^     df8:	89 c0                	mov    %eax,%eax$/;"	l
df8	usertests.asm	/^     df8:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
df9	grep.asm	/^ df9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
df9	sh.asm	/^     df9:	48 b8 51 09 00 00 00 	movabs $0x951,%rax$/;"	l
dfa	ls.asm	/^     dfa:	48 c1 e0 04          	shl    $0x4,%rax$/;"	l
dfd	grep.asm	/^ dfd:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
dfd	usertests.asm	/^     dfd:	48 ba d1 61 00 00 00 	movabs $0x61d1,%rdx$/;"	l
dfe	ls.asm	/^     dfe:	48 89 c2             	mov    %rax,%rdx$/;"	l
digits	console.c	/^static char digits[] = "0123456789abcdef";$/;"	v	file:
dinode	fs.h	/^struct dinode {$/;"	s
dip	kernel.asm	/^    dip = (struct dinode*)bp->data + inum%IPB;$/;"	d
dip	kernel.asm	/^  dip = (struct dinode*)bp->data + ip->inum%IPB;$/;"	d
dirent	fs.h	/^struct dirent {$/;"	s
dirfile	usertests.c	/^dirfile(void)$/;"	f
dirlink	fs.c	/^dirlink(struct inode *dp, char *name, uint inum)$/;"	f
dirlookup	fs.c	/^dirlookup(struct inode *dp, char *name, uint *poff)$/;"	f
dirtest	usertests.c	/^void dirtest(void)$/;"	f
disksize	memide.c	/^static int disksize;$/;"	v	file:
do_commit	kernel.asm	/^    do_commit = 1;$/;"	d
dpl	mmu.h	/^  uint dpl : 2;         \/\/ descriptor(meaning new) privilege level$/;"	m	struct:gatedesc
dpl	mmu.h	/^  uint dpl : 2;        \/\/ Descriptor Privilege Level$/;"	m	struct:segdesc
ds	mmu.h	/^  ushort ds;$/;"	m	struct:taskstate
dst	cat.asm	/^  dst = vdst;$/;"	d
dst	echo.asm	/^  dst = vdst;$/;"	d
dst	forktest.asm	/^  dst = vdst;$/;"	d
dst	grep.asm	/^  dst = vdst;$/;"	d
dst	init.asm	/^  dst = vdst;$/;"	d
dst	kill.asm	/^  dst = vdst;$/;"	d
dst	ln.asm	/^  dst = vdst;$/;"	d
dst	ls.asm	/^  dst = vdst;$/;"	d
dst	mkdir.asm	/^  dst = vdst;$/;"	d
dst	mount.asm	/^  dst = vdst;$/;"	d
dst	rm.asm	/^  dst = vdst;$/;"	d
dst	sh.asm	/^  dst = vdst;$/;"	d
dst	stressfs.asm	/^  dst = vdst;$/;"	d
dst	usertests.asm	/^  dst = vdst;$/;"	d
dst	wc.asm	/^  dst = vdst;$/;"	d
dst	zombie.asm	/^  dst = vdst;$/;"	d
e	console.c	/^  uint e;  \/\/ Edit index$/;"	m	struct:__anon8	file:
e	initcode.asm	/^   e:	48 c7 c0 07 00 00 00 	mov    $0x7,%rax$/;"	l
e	kernel.asm	/^  e = addr+len;$/;"	d
e	usertests.asm	/^       e:	8b 00                	mov    (%rax),%eax$/;"	l
e	zombie.asm	/^   e:	ff d0                	callq  *%rax$/;"	l
e0	cat.asm	/^  e0:	ff d0                	callq  *%rax$/;"	l
e0	echo.asm	/^  e0:	48 8d 50 01          	lea    0x1(%rax),%rdx$/;"	l
e0	grep.asm	/^  e0:	75 07                	jne    e9 <grep+0xe9>$/;"	l
e0	kill.asm	/^  e0:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
e0	mount.asm	/^  e0:	0f b6 d0             	movzbl %al,%edx$/;"	l
e0	sh.asm	/^      e0:	48 b8 30 15 00 00 00 	movabs $0x1530,%rax$/;"	l
e0	stressfs.asm	/^  e0:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)$/;"	l
e0	wc.asm	/^  e0:	79 2c                	jns    10e <wc+0x10e>$/;"	l
e00	grep.asm	/^ e00:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
e00	sh.asm	/^     e00:	00 00 00 $/;"	l
e01	ls.asm	/^     e01:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
e03	sh.asm	/^     e03:	ff d0                	callq  *%rax$/;"	l
e04	grep.asm	/^ e04:	48 8b 10             	mov    (%rax),%rdx$/;"	l
e04	usertests.asm	/^     e04:	00 00 00 $/;"	l
e05	ls.asm	/^     e05:	48 01 d0             	add    %rdx,%rax$/;"	l
e05	sh.asm	/^     e05:	85 c0                	test   %eax,%eax$/;"	l
e07	grep.asm	/^ e07:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
e07	sh.asm	/^     e07:	75 16                	jne    e1f <parseblock+0x4e>$/;"	l
e07	usertests.asm	/^     e07:	ff d2                	callq  *%rdx$/;"	l
e08	ls.asm	/^     e08:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax$/;"	l
e09	sh.asm	/^     e09:	48 bf 29 1e 00 00 00 	movabs $0x1e29,%rdi$/;"	l
e09	usertests.asm	/^     e09:	48 bf 7a 6c 00 00 00 	movabs $0x6c7a,%rdi$/;"	l
e0b	grep.asm	/^ e0b:	48 89 10             	mov    %rdx,(%rax)$/;"	l
e0c	ls.asm	/^     e0c:	75 27                	jne    e35 <free+0x113>$/;"	l
e0e	grep.asm	/^ e0e:	eb 0b                	jmp    e1b <free+0x11e>$/;"	l
e0e	ls.asm	/^     e0e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
e1	ls.asm	/^      e1:	be 20 00 00 00       	mov    $0x20,%esi$/;"	l
e1	mkdir.asm	/^  e1:	8b 45 f4             	mov    -0xc(%rbp),%eax$/;"	l
e1	rm.asm	/^  e1:	8b 45 f4             	mov    -0xc(%rbp),%eax$/;"	l
e1	usertests.asm	/^      e1:	85 c0                	test   %eax,%eax$/;"	l
e1	zombie.asm	/^  e1:	74 d9                	je     bc <strcmp+0x12>$/;"	l
e10	grep.asm	/^ e10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
e10	sh.asm	/^     e10:	00 00 00 $/;"	l
e10	usertests.asm	/^     e10:	00 00 00 $/;"	l
e12	ls.asm	/^     e12:	8b 50 08             	mov    0x8(%rax),%edx$/;"	l
e13	sh.asm	/^     e13:	48 b8 26 05 00 00 00 	movabs $0x526,%rax$/;"	l
e13	usertests.asm	/^     e13:	48 b8 84 60 00 00 00 	movabs $0x6084,%rax$/;"	l
e14	grep.asm	/^ e14:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
e15	ls.asm	/^     e15:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
e18	grep.asm	/^ e18:	48 89 10             	mov    %rdx,(%rax)$/;"	l
e19	ls.asm	/^     e19:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
e1a	sh.asm	/^     e1a:	00 00 00 $/;"	l
e1a	usertests.asm	/^     e1a:	00 00 00 $/;"	l
e1b	grep.asm	/^ e1b:	48 b8 30 17 00 00 00 	movabs $0x1730,%rax$/;"	l
e1c	ls.asm	/^     e1c:	01 c2                	add    %eax,%edx$/;"	l
e1d	sh.asm	/^     e1d:	ff d0                	callq  *%rax$/;"	l
e1d	usertests.asm	/^     e1d:	ff d0                	callq  *%rax$/;"	l
e1e	ls.asm	/^     e1e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
e1f	sh.asm	/^     e1f:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi$/;"	l
e1f	usertests.asm	/^     e1f:	85 c0                	test   %eax,%eax$/;"	l
e2	cat.asm	/^  e2:	48 b8 ca 04 00 00 00 	movabs $0x4ca,%rax$/;"	l
e2	grep.asm	/^  e2:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)$/;"	l
e2	ln.asm	/^  e2:	48 89 75 f8          	mov    %rsi,-0x8(%rbp)$/;"	l
e2	wc.asm	/^  e2:	48 be ea 0d 00 00 00 	movabs $0xdea,%rsi$/;"	l
e21	usertests.asm	/^     e21:	79 35                	jns    e58 <dirtest+0x7c>$/;"	l
e22	grep.asm	/^ e22:	00 00 00 $/;"	l
e22	ls.asm	/^     e22:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
e23	sh.asm	/^     e23:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
e23	usertests.asm	/^     e23:	48 b8 08 88 00 00 00 	movabs $0x8808,%rax$/;"	l
e25	grep.asm	/^ e25:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx$/;"	l
e25	ls.asm	/^     e25:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
e27	sh.asm	/^     e27:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
e29	grep.asm	/^ e29:	48 89 10             	mov    %rdx,(%rax)$/;"	l
e29	ls.asm	/^     e29:	48 8b 10             	mov    (%rax),%rdx$/;"	l
e2a	usertests.asm	/^     e2a:	00 00 00 $/;"	l
e2c	grep.asm	/^ e2c:	90                   	nop$/;"	l
e2c	ls.asm	/^     e2c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
e2c	sh.asm	/^     e2c:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
e2d	grep.asm	/^ e2d:	c9                   	leaveq $/;"	l
e2d	usertests.asm	/^     e2d:	8b 00                	mov    (%rax),%eax$/;"	l
e2e	grep.asm	/^ e2e:	c3                   	retq   $/;"	l
e2f	grep.asm	/^ e2f:	55                   	push   %rbp$/;"	l
e2f	usertests.asm	/^     e2f:	48 be 99 68 00 00 00 	movabs $0x6899,%rsi$/;"	l
e3	mount.asm	/^  e3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
e3	usertests.asm	/^      e3:	79 35                	jns    11a <iputtest+0x11a>$/;"	l
e3	zombie.asm	/^  e3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
e30	grep.asm	/^ e30:	48 89 e5             	mov    %rsp,%rbp$/;"	l
e30	ls.asm	/^     e30:	48 89 10             	mov    %rdx,(%rax)$/;"	l
e31	sh.asm	/^     e31:	48 89 c7             	mov    %rax,%rdi$/;"	l
e33	grep.asm	/^ e33:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
e33	ls.asm	/^     e33:	eb 0b                	jmp    e40 <free+0x11e>$/;"	l
e34	sh.asm	/^     e34:	48 b8 aa 07 00 00 00 	movabs $0x7aa,%rax$/;"	l
e35	ls.asm	/^     e35:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
e36	usertests.asm	/^     e36:	00 00 00 $/;"	l
e37	grep.asm	/^ e37:	89 7d ec             	mov    %edi,-0x14(%rbp)$/;"	l
e39	ls.asm	/^     e39:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
e39	usertests.asm	/^     e39:	89 c7                	mov    %eax,%edi$/;"	l
e3a	grep.asm	/^ e3a:	81 7d ec ff 0f 00 00 	cmpl   $0xfff,-0x14(%rbp)$/;"	l
e3b	sh.asm	/^     e3b:	00 00 00 $/;"	l
e3b	usertests.asm	/^     e3b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
e3d	ls.asm	/^     e3d:	48 89 10             	mov    %rdx,(%rax)$/;"	l
e3e	sh.asm	/^     e3e:	ff d0                	callq  *%rax$/;"	l
e4	echo.asm	/^  e4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)$/;"	l
e4	forktest.asm	/^  e4:	00 00 00 $/;"	l
e4	kill.asm	/^  e4:	90                   	nop$/;"	l
e4	mkdir.asm	/^  e4:	48 89 ce             	mov    %rcx,%rsi$/;"	l
e4	rm.asm	/^  e4:	48 89 ce             	mov    %rcx,%rsi$/;"	l
e40	ls.asm	/^     e40:	48 b8 40 13 00 00 00 	movabs $0x1340,%rax$/;"	l
e40	sh.asm	/^     e40:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx$/;"	l
e40	usertests.asm	/^     e40:	48 ba d1 61 00 00 00 	movabs $0x61d1,%rdx$/;"	l
e41	grep.asm	/^ e41:	77 07                	ja     e4a <morecore+0x1b>$/;"	l
e43	grep.asm	/^ e43:	c7 45 ec 00 10 00 00 	movl   $0x1000,-0x14(%rbp)$/;"	l
e44	sh.asm	/^     e44:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
e47	ls.asm	/^     e47:	00 00 00 $/;"	l
e47	usertests.asm	/^     e47:	00 00 00 $/;"	l
e48	sh.asm	/^     e48:	48 89 d6             	mov    %rdx,%rsi$/;"	l
e4a	grep.asm	/^ e4a:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
e4a	ls.asm	/^     e4a:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx$/;"	l
e4a	usertests.asm	/^     e4a:	ff d2                	callq  *%rdx$/;"	l
e4b	sh.asm	/^     e4b:	48 89 c7             	mov    %rax,%rdi$/;"	l
e4c	usertests.asm	/^     e4c:	48 b8 02 60 00 00 00 	movabs $0x6002,%rax$/;"	l
e4d	grep.asm	/^ e4d:	c1 e0 04             	shl    $0x4,%eax$/;"	l
e4e	ls.asm	/^     e4e:	48 89 10             	mov    %rdx,(%rax)$/;"	l
e4e	sh.asm	/^     e4e:	48 b8 c4 0a 00 00 00 	movabs $0xac4,%rax$/;"	l
e5	init.asm	/^  e5:	00 00 00 $/;"	l
e5	kill.asm	/^  e5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
e5	usertests.asm	/^      e5:	48 b8 08 88 00 00 00 	movabs $0x8808,%rax$/;"	l
e50	grep.asm	/^ e50:	89 c7                	mov    %eax,%edi$/;"	l
e51	ls.asm	/^     e51:	90                   	nop$/;"	l
e52	grep.asm	/^ e52:	48 b8 33 08 00 00 00 	movabs $0x833,%rax$/;"	l
e52	ls.asm	/^     e52:	c9                   	leaveq $/;"	l
e53	ls.asm	/^     e53:	c3                   	retq   $/;"	l
e53	usertests.asm	/^     e53:	00 00 00 $/;"	l
e54	ls.asm	/^     e54:	55                   	push   %rbp$/;"	l
e55	ls.asm	/^     e55:	48 89 e5             	mov    %rsp,%rbp$/;"	l
e55	sh.asm	/^     e55:	00 00 00 $/;"	l
e56	usertests.asm	/^     e56:	ff d0                	callq  *%rax$/;"	l
e58	ls.asm	/^     e58:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
e58	sh.asm	/^     e58:	ff d0                	callq  *%rax$/;"	l
e58	usertests.asm	/^     e58:	48 bf 7a 6c 00 00 00 	movabs $0x6c7a,%rdi$/;"	l
e59	grep.asm	/^ e59:	00 00 00 $/;"	l
e5a	sh.asm	/^     e5a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
e5c	grep.asm	/^ e5c:	ff d0                	callq  *%rax$/;"	l
e5c	ls.asm	/^     e5c:	89 7d ec             	mov    %edi,-0x14(%rbp)$/;"	l
e5e	grep.asm	/^ e5e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
e5e	sh.asm	/^     e5e:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx$/;"	l
e5f	ls.asm	/^     e5f:	81 7d ec ff 0f 00 00 	cmpl   $0xfff,-0x14(%rbp)$/;"	l
e5f	usertests.asm	/^     e5f:	00 00 00 $/;"	l
e6	ln.asm	/^  e6:	89 55 f0             	mov    %edx,-0x10(%rbp)$/;"	l
e6	ls.asm	/^      e6:	48 89 c7             	mov    %rax,%rdi$/;"	l
e62	grep.asm	/^ e62:	48 83 7d f8 ff       	cmpq   $0xffffffffffffffff,-0x8(%rbp)$/;"	l
e62	sh.asm	/^     e62:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
e62	usertests.asm	/^     e62:	48 b8 8e 60 00 00 00 	movabs $0x608e,%rax$/;"	l
e66	ls.asm	/^     e66:	77 07                	ja     e6f <morecore+0x1b>$/;"	l
e66	sh.asm	/^     e66:	48 ba 34 1e 00 00 00 	movabs $0x1e34,%rdx$/;"	l
e67	grep.asm	/^ e67:	75 07                	jne    e70 <morecore+0x41>$/;"	l
e68	ls.asm	/^     e68:	c7 45 ec 00 10 00 00 	movl   $0x1000,-0x14(%rbp)$/;"	l
e69	grep.asm	/^ e69:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
e69	usertests.asm	/^     e69:	00 00 00 $/;"	l
e6c	usertests.asm	/^     e6c:	ff d0                	callq  *%rax$/;"	l
e6d	sh.asm	/^     e6d:	00 00 00 $/;"	l
e6e	grep.asm	/^ e6e:	eb 36                	jmp    ea6 <morecore+0x77>$/;"	l
e6e	usertests.asm	/^     e6e:	85 c0                	test   %eax,%eax$/;"	l
e6f	ls.asm	/^     e6f:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
e7	forktest.asm	/^  e7:	ff d0                	callq  *%rax$/;"	l
e7	mkdir.asm	/^  e7:	48 89 f7             	mov    %rsi,%rdi$/;"	l
e7	mount.asm	/^  e7:	0f b6 00             	movzbl (%rax),%eax$/;"	l
e7	rm.asm	/^  e7:	48 89 f7             	mov    %rsi,%rdi$/;"	l
e7	sh.asm	/^      e7:	00 00 00 $/;"	l
e7	stressfs.asm	/^  e7:	eb 24                	jmp    10d <main+0x10d>$/;"	l
e7	zombie.asm	/^  e7:	0f b6 00             	movzbl (%rax),%eax$/;"	l
e70	grep.asm	/^ e70:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
e70	sh.asm	/^     e70:	48 89 ce             	mov    %rcx,%rsi$/;"	l
e70	usertests.asm	/^     e70:	79 35                	jns    ea7 <dirtest+0xcb>$/;"	l
e72	ls.asm	/^     e72:	c1 e0 04             	shl    $0x4,%eax$/;"	l
e72	usertests.asm	/^     e72:	48 b8 08 88 00 00 00 	movabs $0x8808,%rax$/;"	l
e73	sh.asm	/^     e73:	48 89 c7             	mov    %rax,%rdi$/;"	l
e74	grep.asm	/^ e74:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
e75	ls.asm	/^     e75:	89 c7                	mov    %eax,%edi$/;"	l
e76	sh.asm	/^     e76:	48 b8 51 09 00 00 00 	movabs $0x951,%rax$/;"	l
e77	ls.asm	/^     e77:	48 b8 58 08 00 00 00 	movabs $0x858,%rax$/;"	l
e78	grep.asm	/^ e78:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
e79	usertests.asm	/^     e79:	00 00 00 $/;"	l
e7c	grep.asm	/^ e7c:	8b 55 ec             	mov    -0x14(%rbp),%edx$/;"	l
e7c	usertests.asm	/^     e7c:	8b 00                	mov    (%rax),%eax$/;"	l
e7d	sh.asm	/^     e7d:	00 00 00 $/;"	l
e7e	ls.asm	/^     e7e:	00 00 00 $/;"	l
e7e	usertests.asm	/^     e7e:	48 be 7f 6c 00 00 00 	movabs $0x6c7f,%rsi$/;"	l
e7f	grep.asm	/^ e7f:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
e8	echo.asm	/^  e8:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx$/;"	l
e8	init.asm	/^  e8:	bf 01 00 00 00       	mov    $0x1,%edi$/;"	l
e80	sh.asm	/^     e80:	ff d0                	callq  *%rax$/;"	l
e81	ls.asm	/^     e81:	ff d0                	callq  *%rax$/;"	l
e82	grep.asm	/^ e82:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
e82	sh.asm	/^     e82:	85 c0                	test   %eax,%eax$/;"	l
e83	ls.asm	/^     e83:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
e84	sh.asm	/^     e84:	75 16                	jne    e9c <parseblock+0xcb>$/;"	l
e85	usertests.asm	/^     e85:	00 00 00 $/;"	l
e86	grep.asm	/^ e86:	48 83 c0 10          	add    $0x10,%rax$/;"	l
e86	sh.asm	/^     e86:	48 bf 36 1e 00 00 00 	movabs $0x1e36,%rdi$/;"	l
e87	ls.asm	/^     e87:	48 83 7d f8 ff       	cmpq   $0xffffffffffffffff,-0x8(%rbp)$/;"	l
e88	usertests.asm	/^     e88:	89 c7                	mov    %eax,%edi$/;"	l
e8a	grep.asm	/^ e8a:	48 89 c7             	mov    %rax,%rdi$/;"	l
e8a	usertests.asm	/^     e8a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
e8c	ls.asm	/^     e8c:	75 07                	jne    e95 <morecore+0x41>$/;"	l
e8d	grep.asm	/^ e8d:	48 b8 fd 0c 00 00 00 	movabs $0xcfd,%rax$/;"	l
e8d	sh.asm	/^     e8d:	00 00 00 $/;"	l
e8e	ls.asm	/^     e8e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
e8f	usertests.asm	/^     e8f:	48 ba d1 61 00 00 00 	movabs $0x61d1,%rdx$/;"	l
e9	cat.asm	/^  e9:	00 00 00 $/;"	l
e9	forktest.asm	/^  e9:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)$/;"	l
e9	grep.asm	/^  e9:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)$/;"	l
e9	kill.asm	/^  e9:	48 8d 50 01          	lea    0x1(%rax),%rdx$/;"	l
e9	ln.asm	/^  e9:	90                   	nop$/;"	l
e9	ls.asm	/^      e9:	48 b8 94 05 00 00 00 	movabs $0x594,%rax$/;"	l
e9	stressfs.asm	/^  e9:	48 8d 8d e0 fd ff ff 	lea    -0x220(%rbp),%rcx$/;"	l
e9	wc.asm	/^  e9:	00 00 00 $/;"	l
e90	sh.asm	/^     e90:	48 b8 26 05 00 00 00 	movabs $0x526,%rax$/;"	l
e93	ls.asm	/^     e93:	eb 36                	jmp    ecb <morecore+0x77>$/;"	l
e94	grep.asm	/^ e94:	00 00 00 $/;"	l
e95	ls.asm	/^     e95:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
e96	usertests.asm	/^     e96:	00 00 00 $/;"	l
e97	grep.asm	/^ e97:	ff d0                	callq  *%rax$/;"	l
e97	sh.asm	/^     e97:	00 00 00 $/;"	l
e99	grep.asm	/^ e99:	48 b8 30 17 00 00 00 	movabs $0x1730,%rax$/;"	l
e99	ls.asm	/^     e99:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
e99	usertests.asm	/^     e99:	ff d2                	callq  *%rdx$/;"	l
e9a	sh.asm	/^     e9a:	ff d0                	callq  *%rax$/;"	l
e9b	usertests.asm	/^     e9b:	48 b8 02 60 00 00 00 	movabs $0x6002,%rax$/;"	l
e9c	sh.asm	/^     e9c:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi$/;"	l
e9d	ls.asm	/^     e9d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ea	ln.asm	/^  ea:	c9                   	leaveq $/;"	l
ea	mkdir.asm	/^  ea:	89 d1                	mov    %edx,%ecx$/;"	l
ea	mount.asm	/^  ea:	0f b6 c0             	movzbl %al,%eax$/;"	l
ea	rm.asm	/^  ea:	89 d1                	mov    %edx,%ecx$/;"	l
ea	sh.asm	/^      ea:	ff d0                	callq  *%rax$/;"	l
ea	zombie.asm	/^  ea:	0f b6 d0             	movzbl %al,%edx$/;"	l
ea0	grep.asm	/^ ea0:	00 00 00 $/;"	l
ea0	sh.asm	/^     ea0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ea1	ls.asm	/^     ea1:	8b 55 ec             	mov    -0x14(%rbp),%edx$/;"	l
ea2	usertests.asm	/^     ea2:	00 00 00 $/;"	l
ea3	grep.asm	/^ ea3:	48 8b 00             	mov    (%rax),%rax$/;"	l
ea4	ls.asm	/^     ea4:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
ea4	sh.asm	/^     ea4:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
ea5	usertests.asm	/^     ea5:	ff d0                	callq  *%rax$/;"	l
ea6	grep.asm	/^ ea6:	c9                   	leaveq $/;"	l
ea7	grep.asm	/^ ea7:	c3                   	retq   $/;"	l
ea7	ls.asm	/^     ea7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ea7	usertests.asm	/^     ea7:	48 bf 92 6c 00 00 00 	movabs $0x6c92,%rdi$/;"	l
ea8	grep.asm	/^ ea8:	55                   	push   %rbp$/;"	l
ea9	grep.asm	/^ ea9:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ea9	sh.asm	/^     ea9:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
eab	ls.asm	/^     eab:	48 83 c0 10          	add    $0x10,%rax$/;"	l
eac	grep.asm	/^ eac:	48 83 ec 30          	sub    $0x30,%rsp$/;"	l
eae	sh.asm	/^     eae:	48 89 c7             	mov    %rax,%rdi$/;"	l
eae	usertests.asm	/^     eae:	00 00 00 $/;"	l
eaf	ls.asm	/^     eaf:	48 89 c7             	mov    %rax,%rdi$/;"	l
eargv	sh.c	/^  char *eargv[MAXARGS];$/;"	m	struct:execcmd	file:
eax	mmu.h	/^  uint eax;          \/\/ More saved state (registers)$/;"	m	struct:taskstate
eb	ln.asm	/^  eb:	c3                   	retq   $/;"	l
eb0	grep.asm	/^ eb0:	89 7d dc             	mov    %edi,-0x24(%rbp)$/;"	l
eb1	sh.asm	/^     eb1:	48 b8 aa 07 00 00 00 	movabs $0x7aa,%rax$/;"	l
eb1	usertests.asm	/^     eb1:	48 b8 8e 60 00 00 00 	movabs $0x608e,%rax$/;"	l
eb2	ls.asm	/^     eb2:	48 b8 22 0d 00 00 00 	movabs $0xd22,%rax$/;"	l
eb3	grep.asm	/^ eb3:	8b 45 dc             	mov    -0x24(%rbp),%eax$/;"	l
eb6	grep.asm	/^ eb6:	48 83 c0 0f          	add    $0xf,%rax$/;"	l
eb8	sh.asm	/^     eb8:	00 00 00 $/;"	l
eb8	usertests.asm	/^     eb8:	00 00 00 $/;"	l
eb9	ls.asm	/^     eb9:	00 00 00 $/;"	l
eba	grep.asm	/^ eba:	48 c1 e8 04          	shr    $0x4,%rax$/;"	l
ebb	sh.asm	/^     ebb:	ff d0                	callq  *%rax$/;"	l
ebb	usertests.asm	/^     ebb:	ff d0                	callq  *%rax$/;"	l
ebc	ls.asm	/^     ebc:	ff d0                	callq  *%rax$/;"	l
ebd	sh.asm	/^     ebd:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx$/;"	l
ebd	usertests.asm	/^     ebd:	85 c0                	test   %eax,%eax$/;"	l
ebe	grep.asm	/^ ebe:	83 c0 01             	add    $0x1,%eax$/;"	l
ebe	ls.asm	/^     ebe:	48 b8 40 13 00 00 00 	movabs $0x1340,%rax$/;"	l
ebf	usertests.asm	/^     ebf:	79 35                	jns    ef6 <dirtest+0x11a>$/;"	l
ebp	kernel.asm	/^    ebp = (addr_t*)ebp[0]; \/\/ saved %ebp$/;"	d
ebp	kernel.asm	/^    ebp = (uint*)ebp[0]; \/\/ saved %ebp$/;"	d
ebp	mmu.h	/^  uint *ebp;$/;"	m	struct:taskstate
ebp	proc.h	/^  addr_t ebp; \/\/rbp$/;"	m	struct:context
ebx	mmu.h	/^  uint ebx;$/;"	m	struct:taskstate
ec	cat.asm	/^  ec:	ff d0                	callq  *%rax$/;"	l
ec	echo.asm	/^  ec:	48 8d 4a 01          	lea    0x1(%rdx),%rcx$/;"	l
ec	ln.asm	/^  ec:	55                   	push   %rbp$/;"	l
ec	mkdir.asm	/^  ec:	fc                   	cld    $/;"	l
ec	rm.asm	/^  ec:	fc                   	cld    $/;"	l
ec	sh.asm	/^      ec:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ec	usertests.asm	/^      ec:	00 00 00 $/;"	l
ec	wc.asm	/^  ec:	bf 01 00 00 00       	mov    $0x1,%edi$/;"	l
ec1	grep.asm	/^ ec1:	89 45 ec             	mov    %eax,-0x14(%rbp)$/;"	l
ec1	sh.asm	/^     ec1:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx$/;"	l
ec1	usertests.asm	/^     ec1:	48 b8 08 88 00 00 00 	movabs $0x8808,%rax$/;"	l
ec4	grep.asm	/^ ec4:	48 b8 30 17 00 00 00 	movabs $0x1730,%rax$/;"	l
ec5	ls.asm	/^     ec5:	00 00 00 $/;"	l
ec5	sh.asm	/^     ec5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ec8	ls.asm	/^     ec8:	48 8b 00             	mov    (%rax),%rax$/;"	l
ec8	usertests.asm	/^     ec8:	00 00 00 $/;"	l
ec9	sh.asm	/^     ec9:	48 89 ce             	mov    %rcx,%rsi$/;"	l
ecb	grep.asm	/^ ecb:	00 00 00 $/;"	l
ecb	ls.asm	/^     ecb:	c9                   	leaveq $/;"	l
ecb	usertests.asm	/^     ecb:	8b 00                	mov    (%rax),%eax$/;"	l
ecc	ls.asm	/^     ecc:	c3                   	retq   $/;"	l
ecc	sh.asm	/^     ecc:	48 89 c7             	mov    %rax,%rdi$/;"	l
ecd	ls.asm	/^     ecd:	55                   	push   %rbp$/;"	l
ecd	usertests.asm	/^     ecd:	48 be 95 6c 00 00 00 	movabs $0x6c95,%rsi$/;"	l
ece	grep.asm	/^ ece:	48 8b 00             	mov    (%rax),%rax$/;"	l
ece	ls.asm	/^     ece:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ecf	sh.asm	/^     ecf:	48 b8 8e 0c 00 00 00 	movabs $0xc8e,%rax$/;"	l
echoargv	usertests.c	/^char *echoargv[] = { "echo", "ALL", "TESTS", "PASSED", 0 };$/;"	v
ecmd	sh.asm	/^    ecmd = (struct execcmd*)cmd;$/;"	d
ecx	mmu.h	/^  uint ecx;$/;"	m	struct:taskstate
ed	forktest.asm	/^  ed:	81 7d fc e7 03 00 00 	cmpl   $0x3e7,-0x4(%rbp)$/;"	l
ed	grep.asm	/^  ed:	7e 3c                	jle    12b <grep+0x12b>$/;"	l
ed	init.asm	/^  ed:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ed	kill.asm	/^  ed:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)$/;"	l
ed	ln.asm	/^  ed:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ed	mkdir.asm	/^  ed:	f3 aa                	rep stos %al,%es:(%rdi)$/;"	l
ed	mount.asm	/^  ed:	29 c2                	sub    %eax,%edx$/;"	l
ed	rm.asm	/^  ed:	f3 aa                	rep stos %al,%es:(%rdi)$/;"	l
ed	zombie.asm	/^  ed:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ed1	grep.asm	/^ ed1:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ed1	ls.asm	/^     ed1:	48 83 ec 30          	sub    $0x30,%rsp$/;"	l
ed4	usertests.asm	/^     ed4:	00 00 00 $/;"	l
ed5	grep.asm	/^ ed5:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)$/;"	l
ed5	ls.asm	/^     ed5:	89 7d dc             	mov    %edi,-0x24(%rbp)$/;"	l
ed6	sh.asm	/^     ed6:	00 00 00 $/;"	l
ed7	usertests.asm	/^     ed7:	89 c7                	mov    %eax,%edi$/;"	l
ed8	ls.asm	/^     ed8:	8b 45 dc             	mov    -0x24(%rbp),%eax$/;"	l
ed9	sh.asm	/^     ed9:	ff d0                	callq  *%rax$/;"	l
ed9	usertests.asm	/^     ed9:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
eda	grep.asm	/^ eda:	75 4a                	jne    f26 <malloc+0x7e>$/;"	l
edb	ls.asm	/^     edb:	48 83 c0 0f          	add    $0xf,%rax$/;"	l
edb	sh.asm	/^     edb:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
edc	grep.asm	/^ edc:	48 b8 20 17 00 00 00 	movabs $0x1720,%rax$/;"	l
ede	usertests.asm	/^     ede:	48 ba d1 61 00 00 00 	movabs $0x61d1,%rdx$/;"	l
edf	ls.asm	/^     edf:	48 c1 e8 04          	shr    $0x4,%rax$/;"	l
edf	sh.asm	/^     edf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
edi	mmu.h	/^  uint edi;$/;"	m	struct:taskstate
edx	mmu.h	/^  uint edx;$/;"	m	struct:taskstate
ee	cat.asm	/^  ee:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%rbp)$/;"	l
ee3	grep.asm	/^ ee3:	00 00 00 $/;"	l
ee3	ls.asm	/^     ee3:	83 c0 01             	add    $0x1,%eax$/;"	l
ee3	sh.asm	/^     ee3:	c9                   	leaveq $/;"	l
ee4	sh.asm	/^     ee4:	c3                   	retq   $/;"	l
ee5	sh.asm	/^     ee5:	55                   	push   %rbp$/;"	l
ee5	usertests.asm	/^     ee5:	00 00 00 $/;"	l
ee6	grep.asm	/^ ee6:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ee6	ls.asm	/^     ee6:	89 45 ec             	mov    %eax,-0x14(%rbp)$/;"	l
ee6	sh.asm	/^     ee6:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ee8	usertests.asm	/^     ee8:	ff d2                	callq  *%rdx$/;"	l
ee9	ls.asm	/^     ee9:	48 b8 40 13 00 00 00 	movabs $0x1340,%rax$/;"	l
ee9	sh.asm	/^     ee9:	48 83 ec 40          	sub    $0x40,%rsp$/;"	l
eea	grep.asm	/^ eea:	48 b8 30 17 00 00 00 	movabs $0x1730,%rax$/;"	l
eea	usertests.asm	/^     eea:	48 b8 02 60 00 00 00 	movabs $0x6002,%rax$/;"	l
eed	sh.asm	/^     eed:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)$/;"	l
ef	grep.asm	/^  ef:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ef	mkdir.asm	/^  ef:	89 ca                	mov    %ecx,%edx$/;"	l
ef	mount.asm	/^  ef:	89 d0                	mov    %edx,%eax$/;"	l
ef	rm.asm	/^  ef:	89 ca                	mov    %ecx,%edx$/;"	l
ef	usertests.asm	/^      ef:	8b 00                	mov    (%rax),%eax$/;"	l
ef0	ls.asm	/^     ef0:	00 00 00 $/;"	l
ef1	grep.asm	/^ ef1:	00 00 00 $/;"	l
ef1	sh.asm	/^     ef1:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)$/;"	l
ef1	usertests.asm	/^     ef1:	00 00 00 $/;"	l
ef3	ls.asm	/^     ef3:	48 8b 00             	mov    (%rax),%rax$/;"	l
ef4	grep.asm	/^ ef4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
ef4	usertests.asm	/^     ef4:	ff d0                	callq  *%rax$/;"	l
ef5	sh.asm	/^     ef5:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx$/;"	l
ef6	ls.asm	/^     ef6:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ef6	usertests.asm	/^     ef6:	48 bf 7a 6c 00 00 00 	movabs $0x6c7a,%rdi$/;"	l
ef8	grep.asm	/^ ef8:	48 89 10             	mov    %rdx,(%rax)$/;"	l
ef9	sh.asm	/^     ef9:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
efa	ls.asm	/^     efa:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)$/;"	l
efb	grep.asm	/^ efb:	48 b8 30 17 00 00 00 	movabs $0x1730,%rax$/;"	l
efd	sh.asm	/^     efd:	48 ba 27 1e 00 00 00 	movabs $0x1e27,%rdx$/;"	l
efd	usertests.asm	/^     efd:	00 00 00 $/;"	l
eff	ls.asm	/^     eff:	75 4a                	jne    f4b <malloc+0x7e>$/;"	l
efile	sh.c	/^  char *efile;$/;"	m	struct:redircmd	file:
eflags	kernel.asm	/^  eflags = readeflags();$/;"	d
eflags	mmu.h	/^  uint eflags;$/;"	m	struct:taskstate
ehsize	elf.h	/^  ushort ehsize;$/;"	m	struct:elfhdr
eip	mmu.h	/^  uint *eip;         \/\/ Saved state from last task switch$/;"	m	struct:taskstate
eip	proc.h	/^  addr_t eip; \/\/rip;$/;"	m	struct:context
elf	elf.h	/^  uchar elf[12];$/;"	m	struct:elfhdr
elfhdr	elf.h	/^struct elfhdr {$/;"	s
empty	kernel.asm	/^      empty = ip;$/;"	d
empty	kernel.asm	/^  empty = 0;$/;"	d
end	kernel.asm	/^    end = srcsize;$/;"	d
end_op	log.c	/^end_op(void)$/;"	f
entry	elf.h	/^  addr_t entry;$/;"	m	struct:elfhdr
entry	mp.h	/^  ushort entry;                 \/\/ entry count$/;"	m	struct:mpconf
entry32mp	entry.S	/^entry32mp:$/;"	l
entry32mp	kernel.asm	/^entry32mp:$/;"	l
entry64high	entry.S	/^entry64high:$/;"	l
entry64high	kernel.asm	/^entry64high:$/;"	l
entry64low	entry.S	/^entry64low:$/;"	l
entry64low	kernel.asm	/^entry64low:$/;"	l
entry64mp	entry.S	/^entry64mp:$/;"	l
entry64mp	kernel.asm	/^entry64mp:$/;"	l
entry_addr	bootmain.c	/^  uint64 entry_addr;$/;"	m	struct:mbheader	file:
ep	kernel.asm	/^  ep = (char*)proc->sz;$/;"	d
err	x86.h	/^   uint64 err;$/;"	m	struct:trapframe
es	mmu.h	/^  ushort es;         \/\/ Even more saved state (segment selectors)$/;"	m	struct:taskstate
es	sh.asm	/^  es = s + strlen(s);$/;"	d
esi	mmu.h	/^  uint esi;$/;"	m	struct:taskstate
esp	mmu.h	/^  uint *esp;$/;"	m	struct:taskstate
esp0	mmu.h	/^  uint esp0;         \/\/ Stack pointers and segment selectors$/;"	m	struct:taskstate
esp1	mmu.h	/^  uint *esp1;$/;"	m	struct:taskstate
esp2	mmu.h	/^  uint *esp2;$/;"	m	struct:taskstate
exec	exec.c	/^exec(char *path, char **argv)$/;"	f
execcmd	sh.c	/^execcmd(void)$/;"	f
execcmd	sh.c	/^struct execcmd {$/;"	s	file:
exectest	usertests.c	/^exectest(void)$/;"	f
exit	initcode.S	/^exit:$/;"	l
exit	initcode.asm	/^exit:$/;"	l
exit	proc.c	/^exit(void)$/;"	f
exitiputtest	usertests.c	/^exitiputtest(void)$/;"	f
exitwait	usertests.c	/^exitwait(void)$/;"	f
extern	kernel.asm	/^extern addr_t vectors[];  \/\/ in vectors.S: array of 256 entry pointers$/;"	l
f	Makefile	/^	dd if=\/dev\/zero of=xv6.img count=10000$/;"	m
f	Makefile	/^	dd if=\/dev\/zero of=xv6memfs.img count=10000$/;"	m
f	Makefile	/^	dd if=bootblock of=xv6.img conv=notrunc$/;"	m
f	Makefile	/^	dd if=bootblock of=xv6memfs.img conv=notrunc$/;"	m
f	Makefile	/^	dd if=kernel of=xv6.img seek=1 conv=notrunc$/;"	m
f	Makefile	/^	dd if=kernelmemfs of=xv6memfs.img seek=1 conv=notrunc$/;"	m
f	echo.asm	/^   f:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%rbp)$/;"	l
f	grep.asm	/^   f:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)$/;"	l
f	kill.asm	/^   f:	83 7d ec 01          	cmpl   $0x1,-0x14(%rbp)$/;"	l
f	ln.asm	/^   f:	83 7d fc 03          	cmpl   $0x3,-0x4(%rbp)$/;"	l
f	mkdir.asm	/^   f:	83 7d ec 01          	cmpl   $0x1,-0x14(%rbp)$/;"	l
f	mount.asm	/^   f:	48 b8 fd 03 00 00 00 	movabs $0x3fd,%rax$/;"	l
f	rm.asm	/^   f:	83 7d ec 01          	cmpl   $0x1,-0x14(%rbp)$/;"	l
f	wc.asm	/^   f:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)$/;"	l
f0	echo.asm	/^  f0:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)$/;"	l
f0	ln.asm	/^  f0:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
f0	ls.asm	/^      f0:	00 00 00 $/;"	l
f0	sh.asm	/^      f0:	8b 50 20             	mov    0x20(%rax),%edx$/;"	l
f0	stressfs.asm	/^  f0:	8b 45 f8             	mov    -0x8(%rbp),%eax$/;"	l
f00	usertests.asm	/^     f00:	48 b8 66 60 00 00 00 	movabs $0x6066,%rax$/;"	l
f01	ls.asm	/^     f01:	48 b8 30 13 00 00 00 	movabs $0x1330,%rax$/;"	l
f02	grep.asm	/^ f02:	00 00 00 $/;"	l
f04	sh.asm	/^     f04:	00 00 00 $/;"	l
f05	grep.asm	/^ f05:	48 8b 10             	mov    (%rax),%rdx$/;"	l
f07	sh.asm	/^     f07:	48 89 ce             	mov    %rcx,%rsi$/;"	l
f07	usertests.asm	/^     f07:	00 00 00 $/;"	l
f08	grep.asm	/^ f08:	48 b8 20 17 00 00 00 	movabs $0x1720,%rax$/;"	l
f08	ls.asm	/^     f08:	00 00 00 $/;"	l
f0a	sh.asm	/^     f0a:	48 89 c7             	mov    %rax,%rdi$/;"	l
f0a	usertests.asm	/^     f0a:	ff d0                	callq  *%rax$/;"	l
f0b	ls.asm	/^     f0b:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
f0c	usertests.asm	/^     f0c:	85 c0                	test   %eax,%eax$/;"	l
f0d	sh.asm	/^     f0d:	48 b8 51 09 00 00 00 	movabs $0x951,%rax$/;"	l
f0e	usertests.asm	/^     f0e:	79 35                	jns    f45 <dirtest+0x169>$/;"	l
f0f	grep.asm	/^ f0f:	00 00 00 $/;"	l
f0f	ls.asm	/^     f0f:	48 b8 40 13 00 00 00 	movabs $0x1340,%rax$/;"	l
f1	kill.asm	/^  f1:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx$/;"	l
f1	mkdir.asm	/^  f1:	48 89 fe             	mov    %rdi,%rsi$/;"	l
f1	mount.asm	/^  f1:	c9                   	leaveq $/;"	l
f1	rm.asm	/^  f1:	48 89 fe             	mov    %rdi,%rsi$/;"	l
f1	usertests.asm	/^      f1:	48 be c8 68 00 00 00 	movabs $0x68c8,%rsi$/;"	l
f1	wc.asm	/^  f1:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f1	zombie.asm	/^  f1:	0f b6 00             	movzbl (%rax),%eax$/;"	l
f10	usertests.asm	/^     f10:	48 b8 08 88 00 00 00 	movabs $0x8808,%rax$/;"	l
f12	grep.asm	/^ f12:	48 89 10             	mov    %rdx,(%rax)$/;"	l
f14	sh.asm	/^     f14:	00 00 00 $/;"	l
f15	grep.asm	/^ f15:	48 b8 20 17 00 00 00 	movabs $0x1720,%rax$/;"	l
f16	ls.asm	/^     f16:	00 00 00 $/;"	l
f17	sh.asm	/^     f17:	ff d0                	callq  *%rax$/;"	l
f17	usertests.asm	/^     f17:	00 00 00 $/;"	l
f19	ls.asm	/^     f19:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
f19	sh.asm	/^     f19:	85 c0                	test   %eax,%eax$/;"	l
f1a	usertests.asm	/^     f1a:	8b 00                	mov    (%rax),%eax$/;"	l
f1b	sh.asm	/^     f1b:	74 1f                	je     f3c <parseexec+0x57>$/;"	l
f1c	grep.asm	/^ f1c:	00 00 00 $/;"	l
f1c	usertests.asm	/^     f1c:	48 be a6 6c 00 00 00 	movabs $0x6ca6,%rsi$/;"	l
f1d	ls.asm	/^     f1d:	48 89 10             	mov    %rdx,(%rax)$/;"	l
f1d	sh.asm	/^     f1d:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx$/;"	l
f1f	grep.asm	/^ f1f:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%rax)$/;"	l
f2	grep.asm	/^  f2:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx$/;"	l
f2	init.asm	/^  f2:	48 ba be 06 00 00 00 	movabs $0x6be,%rdx$/;"	l
f2	mount.asm	/^  f2:	c3                   	retq   $/;"	l
f20	ls.asm	/^     f20:	48 b8 40 13 00 00 00 	movabs $0x1340,%rax$/;"	l
f21	sh.asm	/^     f21:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
f23	usertests.asm	/^     f23:	00 00 00 $/;"	l
f25	sh.asm	/^     f25:	48 89 d6             	mov    %rdx,%rsi$/;"	l
f26	grep.asm	/^ f26:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
f26	usertests.asm	/^     f26:	89 c7                	mov    %eax,%edi$/;"	l
f27	ls.asm	/^     f27:	00 00 00 $/;"	l
f28	sh.asm	/^     f28:	48 89 c7             	mov    %rax,%rdi$/;"	l
f28	usertests.asm	/^     f28:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f2a	grep.asm	/^ f2a:	48 8b 00             	mov    (%rax),%rax$/;"	l
f2a	ls.asm	/^     f2a:	48 8b 10             	mov    (%rax),%rdx$/;"	l
f2b	sh.asm	/^     f2b:	48 b8 d1 0d 00 00 00 	movabs $0xdd1,%rax$/;"	l
f2d	grep.asm	/^ f2d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
f2d	ls.asm	/^     f2d:	48 b8 30 13 00 00 00 	movabs $0x1330,%rax$/;"	l
f2d	usertests.asm	/^     f2d:	48 ba d1 61 00 00 00 	movabs $0x61d1,%rdx$/;"	l
f3	ls.asm	/^      f3:	ff d0                	callq  *%rax$/;"	l
f3	mount.asm	/^  f3:	55                   	push   %rbp$/;"	l
f3	sh.asm	/^      f3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
f3	stressfs.asm	/^  f3:	ba 00 02 00 00       	mov    $0x200,%edx$/;"	l
f31	grep.asm	/^ f31:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
f32	sh.asm	/^     f32:	00 00 00 $/;"	l
f34	ls.asm	/^     f34:	00 00 00 $/;"	l
f34	usertests.asm	/^     f34:	00 00 00 $/;"	l
f35	grep.asm	/^ f35:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
f35	sh.asm	/^     f35:	ff d0                	callq  *%rax$/;"	l
f37	ls.asm	/^     f37:	48 89 10             	mov    %rdx,(%rax)$/;"	l
f37	sh.asm	/^     f37:	e9 57 01 00 00       	jmpq   1093 <parseexec+0x1ae>$/;"	l
f37	usertests.asm	/^     f37:	ff d2                	callq  *%rdx$/;"	l
f38	grep.asm	/^ f38:	3b 45 ec             	cmp    -0x14(%rbp),%eax$/;"	l
f39	usertests.asm	/^     f39:	48 b8 02 60 00 00 00 	movabs $0x6002,%rax$/;"	l
f3a	ls.asm	/^     f3a:	48 b8 30 13 00 00 00 	movabs $0x1330,%rax$/;"	l
f3b	grep.asm	/^ f3b:	72 65                	jb     fa2 <malloc+0xfa>$/;"	l
f3c	sh.asm	/^     f3c:	48 b8 9d 05 00 00 00 	movabs $0x59d,%rax$/;"	l
f3d	grep.asm	/^ f3d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
f4	echo.asm	/^  f4:	0f b6 12             	movzbl (%rdx),%edx$/;"	l
f4	forktest.asm	/^  f4:	7e cc                	jle    c2 <forktest+0x31>$/;"	l
f4	ln.asm	/^  f4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
f4	mkdir.asm	/^  f4:	48 89 75 f8          	mov    %rsi,-0x8(%rbp)$/;"	l
f4	mount.asm	/^  f4:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f4	rm.asm	/^  f4:	48 89 75 f8          	mov    %rsi,-0x8(%rbp)$/;"	l
f4	zombie.asm	/^  f4:	0f b6 c0             	movzbl %al,%eax$/;"	l
f40	usertests.asm	/^     f40:	00 00 00 $/;"	l
f41	grep.asm	/^ f41:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
f41	ls.asm	/^     f41:	00 00 00 $/;"	l
f43	sh.asm	/^     f43:	00 00 00 $/;"	l
f43	usertests.asm	/^     f43:	ff d0                	callq  *%rax$/;"	l
f44	grep.asm	/^ f44:	3b 45 ec             	cmp    -0x14(%rbp),%eax$/;"	l
f44	ls.asm	/^     f44:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%rax)$/;"	l
f45	usertests.asm	/^     f45:	48 b8 08 88 00 00 00 	movabs $0x8808,%rax$/;"	l
f46	sh.asm	/^     f46:	ff d0                	callq  *%rax$/;"	l
f47	grep.asm	/^ f47:	75 10                	jne    f59 <malloc+0xb1>$/;"	l
f48	sh.asm	/^     f48:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
f49	grep.asm	/^ f49:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
f4b	ls.asm	/^     f4b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
f4c	sh.asm	/^     f4c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
f4c	usertests.asm	/^     f4c:	00 00 00 $/;"	l
f4d	grep.asm	/^ f4d:	48 8b 10             	mov    (%rax),%rdx$/;"	l
f4f	ls.asm	/^     f4f:	48 8b 00             	mov    (%rax),%rax$/;"	l
f4f	usertests.asm	/^     f4f:	8b 00                	mov    (%rax),%eax$/;"	l
f5	cat.asm	/^  f5:	e9 a0 00 00 00       	jmpq   19a <main+0xde>$/;"	l
f5	kill.asm	/^  f5:	48 8d 4a 01          	lea    0x1(%rdx),%rcx$/;"	l
f5	ls.asm	/^      f5:	48 b8 20 13 00 00 00 	movabs $0x1320,%rax$/;"	l
f50	grep.asm	/^ f50:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
f50	sh.asm	/^     f50:	48 89 45 e8          	mov    %rax,-0x18(%rbp)$/;"	l
f51	usertests.asm	/^     f51:	48 be ba 6c 00 00 00 	movabs $0x6cba,%rsi$/;"	l
f52	ls.asm	/^     f52:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
f54	grep.asm	/^ f54:	48 89 10             	mov    %rdx,(%rax)$/;"	l
f54	sh.asm	/^     f54:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)$/;"	l
f56	ls.asm	/^     f56:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
f57	grep.asm	/^ f57:	eb 2e                	jmp    f87 <malloc+0xdf>$/;"	l
f58	usertests.asm	/^     f58:	00 00 00 $/;"	l
f59	grep.asm	/^ f59:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
f5a	ls.asm	/^     f5a:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
f5b	sh.asm	/^     f5b:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx$/;"	l
f5b	usertests.asm	/^     f5b:	89 c7                	mov    %eax,%edi$/;"	l
f5d	grep.asm	/^ f5d:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
f5d	ls.asm	/^     f5d:	3b 45 ec             	cmp    -0x14(%rbp),%eax$/;"	l
f5d	usertests.asm	/^     f5d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f5f	sh.asm	/^     f5f:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx$/;"	l
f6	forktest.asm	/^  f6:	eb 01                	jmp    f9 <forktest+0x68>$/;"	l
f6	grep.asm	/^  f6:	48 ba 20 13 00 00 00 	movabs $0x1320,%rdx$/;"	l
f6	wc.asm	/^  f6:	48 ba 4a 07 00 00 00 	movabs $0x74a,%rdx$/;"	l
f60	grep.asm	/^ f60:	2b 45 ec             	sub    -0x14(%rbp),%eax$/;"	l
f60	ls.asm	/^     f60:	72 65                	jb     fc7 <malloc+0xfa>$/;"	l
f62	ls.asm	/^     f62:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
f62	usertests.asm	/^     f62:	48 ba d1 61 00 00 00 	movabs $0x61d1,%rdx$/;"	l
f63	grep.asm	/^ f63:	89 c2                	mov    %eax,%edx$/;"	l
f63	sh.asm	/^     f63:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
f65	grep.asm	/^ f65:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
f66	ls.asm	/^     f66:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
f67	sh.asm	/^     f67:	48 89 ce             	mov    %rcx,%rsi$/;"	l
f69	grep.asm	/^ f69:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
f69	ls.asm	/^     f69:	3b 45 ec             	cmp    -0x14(%rbp),%eax$/;"	l
f69	usertests.asm	/^     f69:	00 00 00 $/;"	l
f6a	sh.asm	/^     f6a:	48 89 c7             	mov    %rax,%rdi$/;"	l
f6c	grep.asm	/^ f6c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
f6c	ls.asm	/^     f6c:	75 10                	jne    f7e <malloc+0xb1>$/;"	l
f6c	usertests.asm	/^     f6c:	ff d2                	callq  *%rdx$/;"	l
f6d	sh.asm	/^     f6d:	48 b8 8e 0c 00 00 00 	movabs $0xc8e,%rax$/;"	l
f6e	ls.asm	/^     f6e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
f6e	usertests.asm	/^     f6e:	90                   	nop$/;"	l
f6f	usertests.asm	/^     f6f:	5d                   	pop    %rbp$/;"	l
f7	echo.asm	/^  f7:	88 10                	mov    %dl,(%rax)$/;"	l
f7	mount.asm	/^  f7:	48 83 ec 18          	sub    $0x18,%rsp$/;"	l
f7	sh.asm	/^      f7:	48 8b 40 10          	mov    0x10(%rax),%rax$/;"	l
f7	zombie.asm	/^  f7:	29 c2                	sub    %eax,%edx$/;"	l
f70	grep.asm	/^ f70:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
f70	usertests.asm	/^     f70:	c3                   	retq   $/;"	l
f71	usertests.asm	/^     f71:	55                   	push   %rbp$/;"	l
f72	ls.asm	/^     f72:	48 8b 10             	mov    (%rax),%rdx$/;"	l
f72	usertests.asm	/^     f72:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f73	grep.asm	/^ f73:	89 c0                	mov    %eax,%eax$/;"	l
f74	sh.asm	/^     f74:	00 00 00 $/;"	l
f75	grep.asm	/^ f75:	48 c1 e0 04          	shl    $0x4,%rax$/;"	l
f75	ls.asm	/^     f75:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
f75	usertests.asm	/^     f75:	48 b8 08 88 00 00 00 	movabs $0x8808,%rax$/;"	l
f77	sh.asm	/^     f77:	ff d0                	callq  *%rax$/;"	l
f79	grep.asm	/^ f79:	48 01 45 f8          	add    %rax,-0x8(%rbp)$/;"	l
f79	ls.asm	/^     f79:	48 89 10             	mov    %rdx,(%rax)$/;"	l
f79	sh.asm	/^     f79:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
f7c	ls.asm	/^     f7c:	eb 2e                	jmp    fac <malloc+0xdf>$/;"	l
f7c	usertests.asm	/^     f7c:	00 00 00 $/;"	l
f7d	grep.asm	/^ f7d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
f7d	sh.asm	/^     f7d:	e9 b4 00 00 00       	jmpq   1036 <parseexec+0x151>$/;"	l
f7e	ls.asm	/^     f7e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
f7f	usertests.asm	/^     f7f:	8b 00                	mov    (%rax),%eax$/;"	l
f8	forktest.asm	/^  f8:	90                   	nop$/;"	l
f8	ln.asm	/^  f8:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)$/;"	l
f8	mkdir.asm	/^  f8:	89 55 f0             	mov    %edx,-0x10(%rbp)$/;"	l
f8	rm.asm	/^  f8:	89 55 f0             	mov    %edx,-0x10(%rbp)$/;"	l
f8	stressfs.asm	/^  f8:	48 89 ce             	mov    %rcx,%rsi$/;"	l
f8	usertests.asm	/^      f8:	00 00 00 $/;"	l
f81	grep.asm	/^ f81:	8b 55 ec             	mov    -0x14(%rbp),%edx$/;"	l
f81	usertests.asm	/^     f81:	48 be c9 6c 00 00 00 	movabs $0x6cc9,%rsi$/;"	l
f82	ls.asm	/^     f82:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
f82	sh.asm	/^     f82:	48 8d 4d d0          	lea    -0x30(%rbp),%rcx$/;"	l
f84	grep.asm	/^ f84:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
f85	ls.asm	/^     f85:	2b 45 ec             	sub    -0x14(%rbp),%eax$/;"	l
f86	sh.asm	/^     f86:	48 8d 55 d8          	lea    -0x28(%rbp),%rdx$/;"	l
f87	grep.asm	/^ f87:	48 b8 30 17 00 00 00 	movabs $0x1730,%rax$/;"	l
f88	ls.asm	/^     f88:	89 c2                	mov    %eax,%edx$/;"	l
f88	usertests.asm	/^     f88:	00 00 00 $/;"	l
f8a	ls.asm	/^     f8a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
f8a	sh.asm	/^     f8a:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi$/;"	l
f8b	usertests.asm	/^     f8b:	89 c7                	mov    %eax,%edi$/;"	l
f8d	usertests.asm	/^     f8d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f8e	grep.asm	/^ f8e:	00 00 00 $/;"	l
f8e	ls.asm	/^     f8e:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
f8e	sh.asm	/^     f8e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
f9	echo.asm	/^  f9:	0f b6 00             	movzbl (%rax),%eax$/;"	l
f9	forktest.asm	/^  f9:	81 7d fc e8 03 00 00 	cmpl   $0x3e8,-0x4(%rbp)$/;"	l
f9	init.asm	/^  f9:	00 00 00 $/;"	l
f9	kill.asm	/^  f9:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)$/;"	l
f9	zombie.asm	/^  f9:	89 d0                	mov    %edx,%eax$/;"	l
f91	grep.asm	/^ f91:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
f91	ls.asm	/^     f91:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
f92	sh.asm	/^     f92:	48 89 c7             	mov    %rax,%rdi$/;"	l
f92	usertests.asm	/^     f92:	48 ba d1 61 00 00 00 	movabs $0x61d1,%rdx$/;"	l
f95	grep.asm	/^ f95:	48 89 10             	mov    %rdx,(%rax)$/;"	l
f95	ls.asm	/^     f95:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
f95	sh.asm	/^     f95:	48 b8 aa 07 00 00 00 	movabs $0x7aa,%rax$/;"	l
f98	grep.asm	/^ f98:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
f98	ls.asm	/^     f98:	89 c0                	mov    %eax,%eax$/;"	l
f99	usertests.asm	/^     f99:	00 00 00 $/;"	l
f9a	ls.asm	/^     f9a:	48 c1 e0 04          	shl    $0x4,%rax$/;"	l
f9c	grep.asm	/^ f9c:	48 83 c0 10          	add    $0x10,%rax$/;"	l
f9c	sh.asm	/^     f9c:	00 00 00 $/;"	l
f9c	usertests.asm	/^     f9c:	ff d2                	callq  *%rdx$/;"	l
f9e	ls.asm	/^     f9e:	48 01 45 f8          	add    %rax,-0x8(%rbp)$/;"	l
f9e	usertests.asm	/^     f9e:	48 be e0 87 00 00 00 	movabs $0x87e0,%rsi$/;"	l
f9f	sh.asm	/^     f9f:	ff d0                	callq  *%rax$/;"	l
fa	cat.asm	/^  fa:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
fa0	grep.asm	/^ fa0:	eb 4e                	jmp    ff0 <malloc+0x148>$/;"	l
fa1	sh.asm	/^     fa1:	89 45 e4             	mov    %eax,-0x1c(%rbp)$/;"	l
fa2	grep.asm	/^ fa2:	48 b8 30 17 00 00 00 	movabs $0x1730,%rax$/;"	l
fa2	ls.asm	/^     fa2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
fa4	sh.asm	/^     fa4:	83 7d e4 00          	cmpl   $0x0,-0x1c(%rbp)$/;"	l
fa5	usertests.asm	/^     fa5:	00 00 00 $/;"	l
fa6	ls.asm	/^     fa6:	8b 55 ec             	mov    -0x14(%rbp),%edx$/;"	l
fa8	sh.asm	/^     fa8:	0f 84 b6 00 00 00    	je     1064 <parseexec+0x17f>$/;"	l
fa8	usertests.asm	/^     fa8:	48 bf 70 68 00 00 00 	movabs $0x6870,%rdi$/;"	l
fa9	grep.asm	/^ fa9:	00 00 00 $/;"	l
fa9	ls.asm	/^     fa9:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
fac	grep.asm	/^ fac:	48 8b 00             	mov    (%rax),%rax$/;"	l
fac	ls.asm	/^     fac:	48 b8 40 13 00 00 00 	movabs $0x1340,%rax$/;"	l
fae	sh.asm	/^     fae:	83 7d e4 61          	cmpl   $0x61,-0x1c(%rbp)$/;"	l
faf	grep.asm	/^ faf:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)$/;"	l
faf	usertests.asm	/^     faf:	00 00 00 $/;"	l
fb	mkdir.asm	/^  fb:	90                   	nop$/;"	l
fb	mount.asm	/^  fb:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
fb	rm.asm	/^  fb:	90                   	nop$/;"	l
fb	sh.asm	/^      fb:	89 d6                	mov    %edx,%esi$/;"	l
fb	stressfs.asm	/^  fb:	89 c7                	mov    %eax,%edi$/;"	l
fb	usertests.asm	/^      fb:	89 c7                	mov    %eax,%edi$/;"	l
fb	zombie.asm	/^  fb:	c9                   	leaveq $/;"	l
fb2	sh.asm	/^     fb2:	74 16                	je     fca <parseexec+0xe5>$/;"	l
fb2	usertests.asm	/^     fb2:	48 b8 48 60 00 00 00 	movabs $0x6048,%rax$/;"	l
fb3	grep.asm	/^ fb3:	75 23                	jne    fd8 <malloc+0x130>$/;"	l
fb3	ls.asm	/^     fb3:	00 00 00 $/;"	l
fb4	sh.asm	/^     fb4:	48 bf fa 1d 00 00 00 	movabs $0x1dfa,%rdi$/;"	l
fb5	grep.asm	/^ fb5:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
fb6	ls.asm	/^     fb6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
fb8	grep.asm	/^ fb8:	89 c7                	mov    %eax,%edi$/;"	l
fb9	usertests.asm	/^     fb9:	00 00 00 $/;"	l
fba	grep.asm	/^ fba:	48 b8 2f 0e 00 00 00 	movabs $0xe2f,%rax$/;"	l
fba	ls.asm	/^     fba:	48 89 10             	mov    %rdx,(%rax)$/;"	l
fbb	sh.asm	/^     fbb:	00 00 00 $/;"	l
fbc	usertests.asm	/^     fbc:	ff d0                	callq  *%rax$/;"	l
fbd	ls.asm	/^     fbd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
fbe	sh.asm	/^     fbe:	48 b8 26 05 00 00 00 	movabs $0x526,%rax$/;"	l
fbe	usertests.asm	/^     fbe:	85 c0                	test   %eax,%eax$/;"	l
fc	echo.asm	/^  fc:	84 c0                	test   %al,%al$/;"	l
fc	init.asm	/^  fc:	ff d2                	callq  *%rdx$/;"	l
fc	ln.asm	/^  fc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
fc	ls.asm	/^      fc:	00 00 00 $/;"	l
fc	mkdir.asm	/^  fc:	c9                   	leaveq $/;"	l
fc	rm.asm	/^  fc:	c9                   	leaveq $/;"	l
fc	zombie.asm	/^  fc:	c3                   	retq   $/;"	l
fc0	usertests.asm	/^     fc0:	79 35                	jns    ff7 <exectest+0x86>$/;"	l
fc1	grep.asm	/^ fc1:	00 00 00 $/;"	l
fc1	ls.asm	/^     fc1:	48 83 c0 10          	add    $0x10,%rax$/;"	l
fc2	usertests.asm	/^     fc2:	48 b8 08 88 00 00 00 	movabs $0x8808,%rax$/;"	l
fc4	grep.asm	/^ fc4:	ff d0                	callq  *%rax$/;"	l
fc5	ls.asm	/^     fc5:	eb 4e                	jmp    1015 <malloc+0x148>$/;"	l
fc5	sh.asm	/^     fc5:	00 00 00 $/;"	l
fc6	grep.asm	/^ fc6:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
fc7	ls.asm	/^     fc7:	48 b8 40 13 00 00 00 	movabs $0x1340,%rax$/;"	l
fc8	sh.asm	/^     fc8:	ff d0                	callq  *%rax$/;"	l
fc9	usertests.asm	/^     fc9:	00 00 00 $/;"	l
fca	grep.asm	/^ fca:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)$/;"	l
fca	sh.asm	/^     fca:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx$/;"	l
fcc	usertests.asm	/^     fcc:	8b 00                	mov    (%rax),%eax$/;"	l
fce	ls.asm	/^     fce:	00 00 00 $/;"	l
fce	sh.asm	/^     fce:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
fce	usertests.asm	/^     fce:	48 be d4 6c 00 00 00 	movabs $0x6cd4,%rsi$/;"	l
fcf	grep.asm	/^ fcf:	75 07                	jne    fd8 <malloc+0x130>$/;"	l
fd	cat.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	cat.asm	/^  fd:	48 98                	cltq   $/;"	l
fd	echo.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	forktest.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	grep.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	grep.asm	/^  fd:	00 00 00 $/;"	l
fd	init.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	kill.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	kill.asm	/^  fd:	0f b6 12             	movzbl (%rdx),%edx$/;"	l
fd	ln.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	ls.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	mkdir.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	mkdir.asm	/^  fd:	c3                   	retq   $/;"	l
fd	mount.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	rm.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	rm.asm	/^  fd:	c3                   	retq   $/;"	l
fd	sh.asm	/^      fd:	48 89 c7             	mov    %rax,%rdi$/;"	l
fd	sh.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	sh.c	/^  int fd;$/;"	m	struct:redircmd	file:
fd	stressfs.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	stressfs.asm	/^  fd = open(path, O_CREATE | O_RDWR);$/;"	d
fd	stressfs.asm	/^  fd = open(path, O_RDONLY);$/;"	d
fd	stressfs.asm	/^  fd:	48 b8 fb 04 00 00 00 	movabs $0x4fb,%rax$/;"	l
fd	usertests.asm	/^        fd = open(name, O_CREATE | O_RDWR);$/;"	d
fd	usertests.asm	/^      fd = open(file, O_CREATE | O_RDWR);$/;"	d
fd	usertests.asm	/^      fd = open(fname, O_CREATE | O_RDWR);$/;"	d
fd	usertests.asm	/^      fd = open(name, 0);$/;"	d
fd	usertests.asm	/^      fd:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
fd	usertests.asm	/^    fd = open("", O_CREATE);$/;"	d
fd	usertests.asm	/^    fd = open("bigarg-ok", O_CREATE);$/;"	d
fd	usertests.asm	/^    fd = open("bigwrite", O_CREATE | O_RDWR);$/;"	d
fd	usertests.asm	/^    fd = open("xx", O_CREATE);$/;"	d
fd	usertests.asm	/^    fd = open(fname, 0);$/;"	d
fd	usertests.asm	/^    fd = open(name, O_CREATE|O_RDWR);$/;"	d
fd	usertests.asm	/^  fd = open(".", 0);$/;"	d
fd	usertests.asm	/^  fd = open(".", O_RDWR);$/;"	d
fd	usertests.asm	/^  fd = open("123456789012345\/123456789012345\/123456789012345", O_CREATE);$/;"	d
fd	usertests.asm	/^  fd = open("12345678901234\/12345678901234\/12345678901234", 0);$/;"	d
fd	usertests.asm	/^  fd = open("bd", O_CREATE);$/;"	d
fd	usertests.asm	/^  fd = open("big", O_CREATE|O_RDWR);$/;"	d
fd	usertests.asm	/^  fd = open("big", O_RDONLY);$/;"	d
fd	usertests.asm	/^  fd = open("bigarg-ok", 0);$/;"	d
fd	usertests.asm	/^  fd = open("bigfile", 0);$/;"	d
fd	usertests.asm	/^  fd = open("bigfile", O_CREATE | O_RDWR);$/;"	d
fd	usertests.asm	/^  fd = open("dd\/dd\/..\/ff", 0);$/;"	d
fd	usertests.asm	/^  fd = open("dd\/dd\/ff", O_CREATE | O_RDWR);$/;"	d
fd	usertests.asm	/^  fd = open("dd\/dd\/ffff", 0);$/;"	d
fd	usertests.asm	/^  fd = open("dd\/ff", O_CREATE | O_RDWR);$/;"	d
fd	usertests.asm	/^  fd = open("dirfile", O_CREATE);$/;"	d
fd	usertests.asm	/^  fd = open("dirfile\/xx", 0);$/;"	d
fd	usertests.asm	/^  fd = open("dirfile\/xx", O_CREATE);$/;"	d
fd	usertests.asm	/^  fd = open("doesnotexist", 0);$/;"	d
fd	usertests.asm	/^  fd = open("echo", 0);$/;"	d
fd	usertests.asm	/^  fd = open("init", O_RDONLY);$/;"	d
fd	usertests.asm	/^  fd = open("lf1", O_CREATE|O_RDWR);$/;"	d
fd	usertests.asm	/^  fd = open("lf2", 0);$/;"	d
fd	usertests.asm	/^  fd = open("sharedfd", 0);$/;"	d
fd	usertests.asm	/^  fd = open("sharedfd", O_CREATE|O_RDWR);$/;"	d
fd	usertests.asm	/^  fd = open("small", O_CREATE|O_RDWR);$/;"	d
fd	usertests.asm	/^  fd = open("small", O_RDONLY);$/;"	d
fd	usertests.asm	/^  fd = open("unlinkread", O_CREATE | O_RDWR);$/;"	d
fd	usertests.asm	/^  fd = open("unlinkread", O_RDWR);$/;"	d
fd	usertests.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	wc.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	wc.asm	/^  fd:	00 00 00 $/;"	l
fd	zombie.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	zombie.asm	/^  fd:	55                   	push   %rbp$/;"	l
fd0	kernel.asm	/^  fd0 = -1;$/;"	d
fd1	grep.asm	/^ fd1:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
fd1	ls.asm	/^     fd1:	48 8b 00             	mov    (%rax),%rax$/;"	l
fd1	usertests.asm	/^  fd1 = open("unlinkread", O_CREATE | O_RDWR);$/;"	d
fd2	sh.asm	/^     fd2:	8b 55 fc             	mov    -0x4(%rbp),%edx$/;"	l
fd4	ls.asm	/^     fd4:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)$/;"	l
fd5	sh.asm	/^     fd5:	48 63 d2             	movslq %edx,%rdx$/;"	l
fd5	usertests.asm	/^     fd5:	00 00 00 $/;"	l
fd6	grep.asm	/^ fd6:	eb 18                	jmp    ff0 <malloc+0x148>$/;"	l
fd8	grep.asm	/^ fd8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
fd8	ls.asm	/^     fd8:	75 23                	jne    ffd <malloc+0x130>$/;"	l
fd8	sh.asm	/^     fd8:	48 89 4c d0 08       	mov    %rcx,0x8(%rax,%rdx,8)$/;"	l
fd8	usertests.asm	/^     fd8:	89 c7                	mov    %eax,%edi$/;"	l
fda	ls.asm	/^     fda:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
fda	usertests.asm	/^     fda:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
fdalloc	sysfile.c	/^fdalloc(struct file *f)$/;"	f	file:
fdc	grep.asm	/^ fdc:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
fdd	ls.asm	/^     fdd:	89 c7                	mov    %eax,%edi$/;"	l
fdd	sh.asm	/^     fdd:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx$/;"	l
fdf	ls.asm	/^     fdf:	48 b8 54 0e 00 00 00 	movabs $0xe54,%rax$/;"	l
fdf	usertests.asm	/^     fdf:	48 ba d1 61 00 00 00 	movabs $0x61d1,%rdx$/;"	l
fe	echo.asm	/^  fe:	75 dc                	jne    dc <strcpy+0x19>$/;"	l
fe	init.asm	/^  fe:	48 b8 e5 04 00 00 00 	movabs $0x4e5,%rax$/;"	l
fe	mkdir.asm	/^  fe:	55                   	push   %rbp$/;"	l
fe	rm.asm	/^  fe:	55                   	push   %rbp$/;"	l
fe	zombie.asm	/^  fe:	48 89 e5             	mov    %rsp,%rbp$/;"	l
fe0	grep.asm	/^ fe0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
fe1	sh.asm	/^     fe1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
fe4	grep.asm	/^ fe4:	48 8b 00             	mov    (%rax),%rax$/;"	l
fe5	sh.asm	/^     fe5:	8b 4d fc             	mov    -0x4(%rbp),%ecx$/;"	l
fe6	ls.asm	/^     fe6:	00 00 00 $/;"	l
fe6	usertests.asm	/^     fe6:	00 00 00 $/;"	l
fe7	grep.asm	/^ fe7:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
fe8	sh.asm	/^     fe8:	48 63 c9             	movslq %ecx,%rcx$/;"	l
fe9	ls.asm	/^     fe9:	ff d0                	callq  *%rax$/;"	l
fe9	usertests.asm	/^     fe9:	ff d2                	callq  *%rdx$/;"	l
feature	mp.h	/^  uint feature;                 \/\/ feature flags from CPUID instruction$/;"	m	struct:mpproc
feb	grep.asm	/^ feb:	e9 41 ff ff ff       	jmpq   f31 <malloc+0x89>$/;"	l
feb	ls.asm	/^     feb:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
feb	sh.asm	/^     feb:	48 83 c1 0a          	add    $0xa,%rcx$/;"	l
feb	usertests.asm	/^     feb:	48 b8 02 60 00 00 00 	movabs $0x6002,%rax$/;"	l
fef	ls.asm	/^     fef:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)$/;"	l
fef	sh.asm	/^     fef:	48 89 54 c8 08       	mov    %rdx,0x8(%rax,%rcx,8)$/;"	l
fetchaddr	syscall.c	/^fetchaddr(addr_t addr, addr_t *ip)$/;"	f
fetcharg	syscall.c	/^fetcharg(int n)$/;"	f	file:
fetchint	syscall.c	/^fetchint(addr_t addr, int *ip)$/;"	f
fetchstr	syscall.c	/^fetchstr(addr_t addr, char **pp)$/;"	f
ff	cat.asm	/^  ff:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx$/;"	l
ff	kernel.asm	/^  ff = *f;$/;"	d
ff	ls.asm	/^      ff:	48 83 c4 28          	add    $0x28,%rsp$/;"	l
ff	mkdir.asm	/^  ff:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ff	mount.asm	/^  ff:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)$/;"	l
ff	rm.asm	/^  ff:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ff0	grep.asm	/^ ff0:	c9                   	leaveq $/;"	l
ff1	grep.asm	/^ ff1:	c3                   	retq   $/;"	l
ff2	usertests.asm	/^     ff2:	00 00 00 $/;"	l
ff4	ls.asm	/^     ff4:	75 07                	jne    ffd <malloc+0x130>$/;"	l
ff4	sh.asm	/^     ff4:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)$/;"	l
ff5	usertests.asm	/^     ff5:	ff d0                	callq  *%rax$/;"	l
ff6	ls.asm	/^     ff6:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ff7	usertests.asm	/^     ff7:	90                   	nop$/;"	l
ff8	sh.asm	/^     ff8:	83 7d fc 09          	cmpl   $0x9,-0x4(%rbp)$/;"	l
ff8	usertests.asm	/^     ff8:	5d                   	pop    %rbp$/;"	l
ff9	usertests.asm	/^     ff9:	c3                   	retq   $/;"	l
ffa	usertests.asm	/^     ffa:	55                   	push   %rbp$/;"	l
ffb	ls.asm	/^     ffb:	eb 18                	jmp    1015 <malloc+0x148>$/;"	l
ffb	usertests.asm	/^     ffb:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffc	sh.asm	/^     ffc:	7e 16                	jle    1014 <parseexec+0x12f>$/;"	l
ffd	ls.asm	/^     ffd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffe	sh.asm	/^     ffe:	48 bf 49 1e 00 00 00 	movabs $0x1e49,%rdi$/;"	l
ffe	usertests.asm	/^     ffe:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ffff800000100000	kernel.asm	/^ffff800000100000 <begin>:$/;"	l
ffff800000100000	kernel.asm	/^ffff800000100000:	02 b0 ad 1b 00 00    	add    0x1bad(%rax),%dh$/;"	l
ffff800000100006	kernel.asm	/^ffff800000100006:	01 00                	add    %eax,(%rax)$/;"	l
ffff800000100008	kernel.asm	/^ffff800000100008:	fe 4f 51             	decb   0x51(%rdi)$/;"	l
ffff80000010000b	kernel.asm	/^ffff80000010000b:	e4 00                	in     $0x0,%al$/;"	l
ffff80000010000d	kernel.asm	/^ffff80000010000d:	00 10                	add    %dl,(%rax)$/;"	l
ffff80000010000f	kernel.asm	/^ffff80000010000f:	00 00                	add    %al,(%rax)$/;"	l
ffff800000100011	kernel.asm	/^ffff800000100011:	00 10                	add    %dl,(%rax)$/;"	l
ffff800000100013	kernel.asm	/^ffff800000100013:	00 00                	add    %al,(%rax)$/;"	l
ffff800000100015	kernel.asm	/^ffff800000100015:	f0 10 00             	lock adc %al,(%rax)$/;"	l
ffff800000100018	kernel.asm	/^ffff800000100018:	00 d0                	add    %dl,%al$/;"	l
ffff80000010001a	kernel.asm	/^ffff80000010001a:	11 00                	adc    %eax,(%rax)$/;"	l
ffff80000010001c	kernel.asm	/^ffff80000010001c:	20 00                	and    %al,(%rax)$/;"	l
ffff80000010001e	kernel.asm	/^ffff80000010001e:	10 00                	adc    %al,(%rax)$/;"	l
ffff800000100020	kernel.asm	/^ffff800000100020 <mboot_entry>:$/;"	l
ffff800000100020	kernel.asm	/^ffff800000100020:	31 c0                	xor    %eax,%eax$/;"	l
ffff800000100022	kernel.asm	/^ffff800000100022:	bf 00 10 00 00       	mov    $0x1000,%edi$/;"	l
ffff800000100027	kernel.asm	/^ffff800000100027:	b9 00 20 00 00       	mov    $0x2000,%ecx$/;"	l
ffff80000010002c	kernel.asm	/^ffff80000010002c:	f3 aa                	rep stos %al,%es:(%rdi)$/;"	l
ffff80000010002e	kernel.asm	/^ffff80000010002e:	b8 03 20 00 00       	mov    $0x2003,%eax$/;"	l
ffff800000100033	kernel.asm	/^ffff800000100033:	a3 00 10 00 00 a3 00 	movabs %eax,0x1800a300001000$/;"	l
ffff80000010003a	kernel.asm	/^ffff80000010003a:	18 00 $/;"	l
ffff80000010003c	kernel.asm	/^ffff80000010003c:	00 b8 83 00 00 00    	add    %bh,0x83(%rax)$/;"	l
ffff800000100042	kernel.asm	/^ffff800000100042:	a3                   	.byte 0xa3$/;"	l
ffff800000100043	kernel.asm	/^ffff800000100043:	00 20                	add    %ah,(%rax)$/;"	l
ffff800000100045	kernel.asm	/^ffff800000100045:	00 00                	add    %al,(%rax)$/;"	l
ffff800000100047	kernel.asm	/^ffff800000100047:	31 db                	xor    %ebx,%ebx$/;"	l
ffff800000100049	kernel.asm	/^ffff800000100049 <entry32mp>:$/;"	l
ffff800000100049	kernel.asm	/^ffff800000100049:	b8 00 10 00 00       	mov    $0x1000,%eax$/;"	l
ffff80000010004e	kernel.asm	/^ffff80000010004e:	0f 22 d8             	mov    %rax,%cr3$/;"	l
ffff800000100051	kernel.asm	/^ffff800000100051:	0f 01 15 90 00 10 00 	lgdt   0x100090(%rip)        # ffff8000002000e8 <end+0xe30e8>$/;"	l
ffff800000100058	kernel.asm	/^ffff800000100058:	0f 20 e0             	mov    %cr4,%rax$/;"	l
ffff80000010005b	kernel.asm	/^ffff80000010005b:	0f ba e8 05          	bts    $0x5,%eax$/;"	l
ffff80000010005f	kernel.asm	/^ffff80000010005f:	0f 22 e0             	mov    %rax,%cr4$/;"	l
ffff800000100062	kernel.asm	/^ffff800000100062:	b9 80 00 00 c0       	mov    $0xc0000080,%ecx$/;"	l
ffff800000100067	kernel.asm	/^ffff800000100067:	0f 32                	rdmsr  $/;"	l
ffff800000100069	kernel.asm	/^ffff800000100069:	0f ba e8 00          	bts    $0x0,%eax$/;"	l
ffff80000010006d	kernel.asm	/^ffff80000010006d:	0f ba e8 08          	bts    $0x8,%eax$/;"	l
ffff800000100071	kernel.asm	/^ffff800000100071:	0f 30                	wrmsr  $/;"	l
ffff800000100073	kernel.asm	/^ffff800000100073:	0f 20 c0             	mov    %cr0,%rax$/;"	l
ffff800000100076	kernel.asm	/^ffff800000100076:	0d 02 00 01 80       	or     $0x80010002,%eax$/;"	l
ffff80000010007b	kernel.asm	/^ffff80000010007b:	0f 22 c0             	mov    %rax,%cr0$/;"	l
ffff80000010007e	kernel.asm	/^ffff80000010007e:	ea                   	(bad)  $/;"	l
ffff80000010007f	kernel.asm	/^ffff80000010007f:	c0 00 10             	rolb   $0x10,(%rax)$/;"	l
ffff800000100082	kernel.asm	/^ffff800000100082:	00 08                	add    %cl,(%rax)$/;"	l
ffff800000100084	kernel.asm	/^ffff800000100084:	00 90 66 2e 0f 1f    	add    %dl,0x1f0f2e66(%rax)$/;"	l
ffff80000010008a	kernel.asm	/^ffff80000010008a:	84 00                	test   %al,(%rax)$/;"	l
ffff80000010008c	kernel.asm	/^ffff80000010008c:	00 00                	add    %al,(%rax)$/;"	l
ffff800000100090	kernel.asm	/^ffff800000100090 <gdtr64>:$/;"	l
ffff800000100090	kernel.asm	/^ffff800000100090:	17                   	(bad)  $/;"	l
ffff800000100091	kernel.asm	/^ffff800000100091:	00 a0 00 10 00 00    	add    %ah,0x1000(%rax)$/;"	l
ffff800000100097	kernel.asm	/^ffff800000100097:	00 00                	add    %al,(%rax)$/;"	l
ffff800000100099	kernel.asm	/^ffff800000100099:	00 66 0f             	add    %ah,0xf(%rsi)$/;"	l
ffff80000010009c	kernel.asm	/^ffff80000010009c:	1f                   	(bad)  $/;"	l
ffff80000010009d	kernel.asm	/^ffff80000010009d:	44 00 00             	add    %r8b,(%rax)$/;"	l
ffff8000001000a0	kernel.asm	/^ffff8000001000a0 <gdt64_begin>:$/;"	l
ffff8000001000ac	kernel.asm	/^ffff8000001000ac:	00 98 20 00 00 00    	add    %bl,0x20(%rax)$/;"	l
ffff8000001000b2	kernel.asm	/^ffff8000001000b2:	00 00                	add    %al,(%rax)$/;"	l
ffff8000001000b4	kernel.asm	/^ffff8000001000b4:	00                   	.byte 0x0$/;"	l
ffff8000001000b5	kernel.asm	/^ffff8000001000b5:	90                   	nop$/;"	l
ffff8000001000b8	kernel.asm	/^ffff8000001000b8 <gdt64_end>:$/;"	l
ffff8000001000b8	kernel.asm	/^ffff8000001000b8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)$/;"	l
ffff8000001000bf	kernel.asm	/^ffff8000001000bf:	00 $/;"	l
ffff8000001000c0	kernel.asm	/^ffff8000001000c0 <entry64low>:$/;"	l
ffff8000001000c0	kernel.asm	/^ffff8000001000c0:	48 b8 cc 00 10 00 00 	movabs $0xffff8000001000cc,%rax$/;"	l
ffff8000001000c7	kernel.asm	/^ffff8000001000c7:	80 ff ff $/;"	l
ffff8000001000ca	kernel.asm	/^ffff8000001000ca:	ff e0                	jmpq   *%rax$/;"	l
ffff8000001000cc	kernel.asm	/^ffff8000001000cc <_start>:$/;"	l
ffff8000001000cc	kernel.asm	/^ffff8000001000cc:	48 31 c0             	xor    %rax,%rax$/;"	l
ffff8000001000cf	kernel.asm	/^ffff8000001000cf:	8e d0                	mov    %eax,%ss$/;"	l
ffff8000001000d1	kernel.asm	/^ffff8000001000d1:	8e d8                	mov    %eax,%ds$/;"	l
ffff8000001000d3	kernel.asm	/^ffff8000001000d3:	8e c0                	mov    %eax,%es$/;"	l
ffff8000001000d5	kernel.asm	/^ffff8000001000d5:	8e e0                	mov    %eax,%fs$/;"	l
ffff8000001000d7	kernel.asm	/^ffff8000001000d7:	8e e8                	mov    %eax,%gs$/;"	l
ffff8000001000d9	kernel.asm	/^ffff8000001000d9:	85 db                	test   %ebx,%ebx$/;"	l
ffff8000001000db	kernel.asm	/^ffff8000001000db:	75 14                	jne    ffff8000001000f1 <entry64mp>$/;"	l
ffff8000001000dd	kernel.asm	/^ffff8000001000dd:	48 b8 00 00 01 00 00 	movabs $0xffff800000010000,%rax$/;"	l
ffff8000001000e4	kernel.asm	/^ffff8000001000e4:	80 ff ff $/;"	l
ffff8000001000e7	kernel.asm	/^ffff8000001000e7:	48 89 c4             	mov    %rax,%rsp$/;"	l
ffff8000001000ea	kernel.asm	/^ffff8000001000ea:	e9 2f 53 00 00       	jmpq   ffff80000010541e <main>$/;"	l
ffff8000001000ef	kernel.asm	/^ffff8000001000ef <__deadloop>:$/;"	l
ffff8000001000ef	kernel.asm	/^ffff8000001000ef:	eb fe                	jmp    ffff8000001000ef <__deadloop>$/;"	l
ffff8000001000f1	kernel.asm	/^ffff8000001000f1 <entry64mp>:$/;"	l
ffff8000001000f1	kernel.asm	/^ffff8000001000f1:	48 c7 c0 00 70 00 00 	mov    $0x7000,%rax$/;"	l
ffff8000001000f8	kernel.asm	/^ffff8000001000f8:	48 8b 60 f0          	mov    -0x10(%rax),%rsp$/;"	l
ffff8000001000fc	kernel.asm	/^ffff8000001000fc:	e9 4a 54 00 00       	jmpq   ffff80000010554b <mpenter>$/;"	l
ffff800000100101	kernel.asm	/^ffff800000100101 <wrmsr>:$/;"	l
ffff800000100101	kernel.asm	/^ffff800000100101:	48 89 f9             	mov    %rdi,%rcx$/;"	l
ffff800000100104	kernel.asm	/^ffff800000100104:	48 89 f0             	mov    %rsi,%rax$/;"	l
ffff800000100107	kernel.asm	/^ffff800000100107:	48 c1 ee 20          	shr    $0x20,%rsi$/;"	l
ffff80000010010b	kernel.asm	/^ffff80000010010b:	48 89 f2             	mov    %rsi,%rdx$/;"	l
ffff80000010010e	kernel.asm	/^ffff80000010010e:	0f 30                	wrmsr  $/;"	l
ffff800000100110	kernel.asm	/^ffff800000100110:	c3                   	retq   $/;"	l
ffff800000100111	kernel.asm	/^ffff800000100111 <ignore_sysret>:$/;"	l
ffff800000100111	kernel.asm	/^ffff800000100111:	48 c7 c0 da ff ff ff 	mov    $0xffffffffffffffda,%rax$/;"	l
ffff800000100118	kernel.asm	/^ffff800000100118:	0f 07                	sysret $/;"	l
ffff80000010011a	kernel.asm	/^ffff80000010011a <syscall_entry>:$/;"	l
ffff80000010011a	kernel.asm	/^ffff80000010011a:	48 89 44 24 f8       	mov    %rax,-0x8(%rsp)$/;"	l
ffff80000010011f	kernel.asm	/^ffff80000010011f:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000100126	kernel.asm	/^ffff800000100126:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff80000010012a	kernel.asm	/^ffff80000010012a:	48 8b 40 10          	mov    0x10(%rax),%rax$/;"	l
ffff80000010012e	kernel.asm	/^ffff80000010012e:	48 05 00 10 00 00    	add    $0x1000,%rax$/;"	l
ffff800000100134	kernel.asm	/^ffff800000100134:	48 83 e8 10          	sub    $0x10,%rax$/;"	l
ffff800000100138	kernel.asm	/^ffff800000100138:	48 89 20             	mov    %rsp,(%rax)$/;"	l
ffff80000010013b	kernel.asm	/^ffff80000010013b:	48 89 c4             	mov    %rax,%rsp$/;"	l
ffff80000010013e	kernel.asm	/^ffff80000010013e:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff800000100141	kernel.asm	/^ffff800000100141:	48 8b 40 f8          	mov    -0x8(%rax),%rax$/;"	l
ffff800000100145	kernel.asm	/^ffff800000100145:	41 53                	push   %r11$/;"	l
ffff800000100147	kernel.asm	/^ffff800000100147:	6a 2b                	pushq  $0x2b$/;"	l
ffff800000100149	kernel.asm	/^ffff800000100149:	51                   	push   %rcx$/;"	l
ffff80000010014a	kernel.asm	/^ffff80000010014a:	6a 00                	pushq  $0x0$/;"	l
ffff80000010014c	kernel.asm	/^ffff80000010014c:	6a 40                	pushq  $0x40$/;"	l
ffff80000010014e	kernel.asm	/^ffff80000010014e:	e9 47 98 00 00       	jmpq   ffff80000010999a <syscall_trap>$/;"	l
ffff800000100153	kernel.asm	/^ffff800000100153 <binit>:$/;"	l
ffff800000100153	kernel.asm	/^ffff800000100153:	55                   	push   %rbp$/;"	l
ffff800000100154	kernel.asm	/^ffff800000100154:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000100157	kernel.asm	/^ffff800000100157:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff80000010015b	kernel.asm	/^ffff80000010015b:	48 be 08 c2 10 00 00 	movabs $0xffff80000010c208,%rsi$/;"	l
ffff800000100162	kernel.asm	/^ffff800000100162:	80 ff ff $/;"	l
ffff800000100165	kernel.asm	/^ffff800000100165:	48 bf 00 f0 10 00 00 	movabs $0xffff80000010f000,%rdi$/;"	l
ffff80000010016c	kernel.asm	/^ffff80000010016c:	80 ff ff $/;"	l
ffff80000010016f	kernel.asm	/^ffff80000010016f:	48 b8 cc 78 10 00 00 	movabs $0xffff8000001078cc,%rax$/;"	l
ffff800000100176	kernel.asm	/^ffff800000100176:	80 ff ff $/;"	l
ffff800000100179	kernel.asm	/^ffff800000100179:	ff d0                	callq  *%rax$/;"	l
ffff80000010017b	kernel.asm	/^ffff80000010017b:	48 b8 00 f0 10 00 00 	movabs $0xffff80000010f000,%rax$/;"	l
ffff800000100182	kernel.asm	/^ffff800000100182:	80 ff ff $/;"	l
ffff800000100185	kernel.asm	/^ffff800000100185:	48 b9 08 41 11 00 00 	movabs $0xffff800000114108,%rcx$/;"	l
ffff80000010018c	kernel.asm	/^ffff80000010018c:	80 ff ff $/;"	l
ffff80000010018f	kernel.asm	/^ffff80000010018f:	48 89 88 a0 51 00 00 	mov    %rcx,0x51a0(%rax)$/;"	l
ffff800000100196	kernel.asm	/^ffff800000100196:	48 b8 00 f0 10 00 00 	movabs $0xffff80000010f000,%rax$/;"	l
ffff80000010019d	kernel.asm	/^ffff80000010019d:	80 ff ff $/;"	l
ffff8000001001a0	kernel.asm	/^ffff8000001001a0:	48 b9 08 41 11 00 00 	movabs $0xffff800000114108,%rcx$/;"	l
ffff8000001001a7	kernel.asm	/^ffff8000001001a7:	80 ff ff $/;"	l
ffff8000001001aa	kernel.asm	/^ffff8000001001aa:	48 89 88 a8 51 00 00 	mov    %rcx,0x51a8(%rax)$/;"	l
ffff8000001001b1	kernel.asm	/^ffff8000001001b1:	48 b8 68 f0 10 00 00 	movabs $0xffff80000010f068,%rax$/;"	l
ffff8000001001b8	kernel.asm	/^ffff8000001001b8:	80 ff ff $/;"	l
ffff8000001001bb	kernel.asm	/^ffff8000001001bb:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff8000001001bf	kernel.asm	/^ffff8000001001bf:	e9 8b 00 00 00       	jmpq   ffff80000010024f <binit+0xfc>$/;"	l
ffff8000001001c4	kernel.asm	/^ffff8000001001c4:	48 b8 00 f0 10 00 00 	movabs $0xffff80000010f000,%rax$/;"	l
ffff8000001001cb	kernel.asm	/^ffff8000001001cb:	80 ff ff $/;"	l
ffff8000001001ce	kernel.asm	/^ffff8000001001ce:	48 8b 90 a8 51 00 00 	mov    0x51a8(%rax),%rdx$/;"	l
ffff8000001001d5	kernel.asm	/^ffff8000001001d5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001001d9	kernel.asm	/^ffff8000001001d9:	48 89 90 a0 00 00 00 	mov    %rdx,0xa0(%rax)$/;"	l
ffff8000001001e0	kernel.asm	/^ffff8000001001e0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001001e4	kernel.asm	/^ffff8000001001e4:	48 be 08 41 11 00 00 	movabs $0xffff800000114108,%rsi$/;"	l
ffff8000001001eb	kernel.asm	/^ffff8000001001eb:	80 ff ff $/;"	l
ffff8000001001ee	kernel.asm	/^ffff8000001001ee:	48 89 b0 98 00 00 00 	mov    %rsi,0x98(%rax)$/;"	l
ffff8000001001f5	kernel.asm	/^ffff8000001001f5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001001f9	kernel.asm	/^ffff8000001001f9:	48 83 c0 10          	add    $0x10,%rax$/;"	l
ffff8000001001fd	kernel.asm	/^ffff8000001001fd:	48 be 0f c2 10 00 00 	movabs $0xffff80000010c20f,%rsi$/;"	l
ffff800000100204	kernel.asm	/^ffff800000100204:	80 ff ff $/;"	l
ffff800000100207	kernel.asm	/^ffff800000100207:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010020a	kernel.asm	/^ffff80000010020a:	48 b8 f9 76 10 00 00 	movabs $0xffff8000001076f9,%rax$/;"	l
ffff800000100211	kernel.asm	/^ffff800000100211:	80 ff ff $/;"	l
ffff800000100214	kernel.asm	/^ffff800000100214:	ff d0                	callq  *%rax$/;"	l
ffff800000100216	kernel.asm	/^ffff800000100216:	48 b8 00 f0 10 00 00 	movabs $0xffff80000010f000,%rax$/;"	l
ffff80000010021d	kernel.asm	/^ffff80000010021d:	80 ff ff $/;"	l
ffff800000100220	kernel.asm	/^ffff800000100220:	48 8b 80 a8 51 00 00 	mov    0x51a8(%rax),%rax$/;"	l
ffff800000100227	kernel.asm	/^ffff800000100227:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx$/;"	l
ffff80000010022b	kernel.asm	/^ffff80000010022b:	48 89 90 98 00 00 00 	mov    %rdx,0x98(%rax)$/;"	l
ffff800000100232	kernel.asm	/^ffff800000100232:	48 b8 00 f0 10 00 00 	movabs $0xffff80000010f000,%rax$/;"	l
ffff800000100239	kernel.asm	/^ffff800000100239:	80 ff ff $/;"	l
ffff80000010023c	kernel.asm	/^ffff80000010023c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx$/;"	l
ffff800000100240	kernel.asm	/^ffff800000100240:	48 89 90 a8 51 00 00 	mov    %rdx,0x51a8(%rax)$/;"	l
ffff800000100247	kernel.asm	/^ffff800000100247:	48 81 45 f8 b0 02 00 	addq   $0x2b0,-0x8(%rbp)$/;"	l
ffff80000010024e	kernel.asm	/^ffff80000010024e:	00 $/;"	l
ffff80000010024f	kernel.asm	/^ffff80000010024f:	48 b8 08 41 11 00 00 	movabs $0xffff800000114108,%rax$/;"	l
ffff800000100256	kernel.asm	/^ffff800000100256:	80 ff ff $/;"	l
ffff800000100259	kernel.asm	/^ffff800000100259:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)$/;"	l
ffff80000010025d	kernel.asm	/^ffff80000010025d:	0f 82 61 ff ff ff    	jb     ffff8000001001c4 <binit+0x71>$/;"	l
ffff800000100263	kernel.asm	/^ffff800000100263:	90                   	nop$/;"	l
ffff800000100264	kernel.asm	/^ffff800000100264:	c9                   	leaveq $/;"	l
ffff800000100265	kernel.asm	/^ffff800000100265:	c3                   	retq   $/;"	l
ffff800000100266	kernel.asm	/^ffff800000100266 <bget>:$/;"	l
ffff800000100266	kernel.asm	/^ffff800000100266:	55                   	push   %rbp$/;"	l
ffff800000100267	kernel.asm	/^ffff800000100267:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010026a	kernel.asm	/^ffff80000010026a:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ffff80000010026e	kernel.asm	/^ffff80000010026e:	89 7d ec             	mov    %edi,-0x14(%rbp)$/;"	l
ffff800000100271	kernel.asm	/^ffff800000100271:	89 75 e8             	mov    %esi,-0x18(%rbp)$/;"	l
ffff800000100274	kernel.asm	/^ffff800000100274:	48 bf 00 f0 10 00 00 	movabs $0xffff80000010f000,%rdi$/;"	l
ffff80000010027b	kernel.asm	/^ffff80000010027b:	80 ff ff $/;"	l
ffff80000010027e	kernel.asm	/^ffff80000010027e:	48 b8 01 79 10 00 00 	movabs $0xffff800000107901,%rax$/;"	l
ffff800000100285	kernel.asm	/^ffff800000100285:	80 ff ff $/;"	l
ffff800000100288	kernel.asm	/^ffff800000100288:	ff d0                	callq  *%rax$/;"	l
ffff80000010028a	kernel.asm	/^ffff80000010028a:	48 b8 00 f0 10 00 00 	movabs $0xffff80000010f000,%rax$/;"	l
ffff800000100291	kernel.asm	/^ffff800000100291:	80 ff ff $/;"	l
ffff800000100294	kernel.asm	/^ffff800000100294:	48 8b 80 a8 51 00 00 	mov    0x51a8(%rax),%rax$/;"	l
ffff80000010029b	kernel.asm	/^ffff80000010029b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff80000010029f	kernel.asm	/^ffff80000010029f:	eb 74                	jmp    ffff800000100315 <bget+0xaf>$/;"	l
ffff8000001002a1	kernel.asm	/^ffff8000001002a1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001002a5	kernel.asm	/^ffff8000001002a5:	8b 40 04             	mov    0x4(%rax),%eax$/;"	l
ffff8000001002a8	kernel.asm	/^ffff8000001002a8:	3b 45 ec             	cmp    -0x14(%rbp),%eax$/;"	l
ffff8000001002ab	kernel.asm	/^ffff8000001002ab:	75 59                	jne    ffff800000100306 <bget+0xa0>$/;"	l
ffff8000001002ad	kernel.asm	/^ffff8000001002ad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001002b1	kernel.asm	/^ffff8000001002b1:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
ffff8000001002b4	kernel.asm	/^ffff8000001002b4:	3b 45 e8             	cmp    -0x18(%rbp),%eax$/;"	l
ffff8000001002b7	kernel.asm	/^ffff8000001002b7:	75 4d                	jne    ffff800000100306 <bget+0xa0>$/;"	l
ffff8000001002b9	kernel.asm	/^ffff8000001002b9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001002bd	kernel.asm	/^ffff8000001002bd:	8b 80 90 00 00 00    	mov    0x90(%rax),%eax$/;"	l
ffff8000001002c3	kernel.asm	/^ffff8000001002c3:	8d 50 01             	lea    0x1(%rax),%edx$/;"	l
ffff8000001002c6	kernel.asm	/^ffff8000001002c6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001002ca	kernel.asm	/^ffff8000001002ca:	89 90 90 00 00 00    	mov    %edx,0x90(%rax)$/;"	l
ffff8000001002d0	kernel.asm	/^ffff8000001002d0:	48 bf 00 f0 10 00 00 	movabs $0xffff80000010f000,%rdi$/;"	l
ffff8000001002d7	kernel.asm	/^ffff8000001002d7:	80 ff ff $/;"	l
ffff8000001002da	kernel.asm	/^ffff8000001002da:	48 b8 9a 79 10 00 00 	movabs $0xffff80000010799a,%rax$/;"	l
ffff8000001002e1	kernel.asm	/^ffff8000001002e1:	80 ff ff $/;"	l
ffff8000001002e4	kernel.asm	/^ffff8000001002e4:	ff d0                	callq  *%rax$/;"	l
ffff8000001002e6	kernel.asm	/^ffff8000001002e6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001002ea	kernel.asm	/^ffff8000001002ea:	48 83 c0 10          	add    $0x10,%rax$/;"	l
ffff8000001002ee	kernel.asm	/^ffff8000001002ee:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001002f1	kernel.asm	/^ffff8000001002f1:	48 b8 4e 77 10 00 00 	movabs $0xffff80000010774e,%rax$/;"	l
ffff8000001002f8	kernel.asm	/^ffff8000001002f8:	80 ff ff $/;"	l
ffff8000001002fb	kernel.asm	/^ffff8000001002fb:	ff d0                	callq  *%rax$/;"	l
ffff8000001002fd	kernel.asm	/^ffff8000001002fd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000100301	kernel.asm	/^ffff800000100301:	e9 f0 00 00 00       	jmpq   ffff8000001003f6 <bget+0x190>$/;"	l
ffff800000100306	kernel.asm	/^ffff800000100306:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010030a	kernel.asm	/^ffff80000010030a:	48 8b 80 a0 00 00 00 	mov    0xa0(%rax),%rax$/;"	l
ffff800000100311	kernel.asm	/^ffff800000100311:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff800000100315	kernel.asm	/^ffff800000100315:	48 b8 08 41 11 00 00 	movabs $0xffff800000114108,%rax$/;"	l
ffff80000010031c	kernel.asm	/^ffff80000010031c:	80 ff ff $/;"	l
ffff80000010031f	kernel.asm	/^ffff80000010031f:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)$/;"	l
ffff800000100323	kernel.asm	/^ffff800000100323:	0f 85 78 ff ff ff    	jne    ffff8000001002a1 <bget+0x3b>$/;"	l
ffff800000100329	kernel.asm	/^ffff800000100329:	48 b8 00 f0 10 00 00 	movabs $0xffff80000010f000,%rax$/;"	l
ffff800000100330	kernel.asm	/^ffff800000100330:	80 ff ff $/;"	l
ffff800000100333	kernel.asm	/^ffff800000100333:	48 8b 80 a0 51 00 00 	mov    0x51a0(%rax),%rax$/;"	l
ffff80000010033a	kernel.asm	/^ffff80000010033a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff80000010033e	kernel.asm	/^ffff80000010033e:	e9 89 00 00 00       	jmpq   ffff8000001003cc <bget+0x166>$/;"	l
ffff800000100343	kernel.asm	/^ffff800000100343:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000100347	kernel.asm	/^ffff800000100347:	8b 80 90 00 00 00    	mov    0x90(%rax),%eax$/;"	l
ffff80000010034d	kernel.asm	/^ffff80000010034d:	85 c0                	test   %eax,%eax$/;"	l
ffff80000010034f	kernel.asm	/^ffff80000010034f:	75 6c                	jne    ffff8000001003bd <bget+0x157>$/;"	l
ffff800000100351	kernel.asm	/^ffff800000100351:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000100355	kernel.asm	/^ffff800000100355:	8b 00                	mov    (%rax),%eax$/;"	l
ffff800000100357	kernel.asm	/^ffff800000100357:	83 e0 04             	and    $0x4,%eax$/;"	l
ffff80000010035a	kernel.asm	/^ffff80000010035a:	85 c0                	test   %eax,%eax$/;"	l
ffff80000010035c	kernel.asm	/^ffff80000010035c:	75 5f                	jne    ffff8000001003bd <bget+0x157>$/;"	l
ffff80000010035e	kernel.asm	/^ffff80000010035e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000100362	kernel.asm	/^ffff800000100362:	8b 55 ec             	mov    -0x14(%rbp),%edx$/;"	l
ffff800000100365	kernel.asm	/^ffff800000100365:	89 50 04             	mov    %edx,0x4(%rax)$/;"	l
ffff800000100368	kernel.asm	/^ffff800000100368:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010036c	kernel.asm	/^ffff80000010036c:	8b 55 e8             	mov    -0x18(%rbp),%edx$/;"	l
ffff80000010036f	kernel.asm	/^ffff80000010036f:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
ffff800000100372	kernel.asm	/^ffff800000100372:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000100376	kernel.asm	/^ffff800000100376:	c7 00 00 00 00 00    	movl   $0x0,(%rax)$/;"	l
ffff80000010037c	kernel.asm	/^ffff80000010037c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000100380	kernel.asm	/^ffff800000100380:	c7 80 90 00 00 00 01 	movl   $0x1,0x90(%rax)$/;"	l
ffff800000100387	kernel.asm	/^ffff800000100387:	00 00 00 $/;"	l
ffff80000010038a	kernel.asm	/^ffff80000010038a:	48 bf 00 f0 10 00 00 	movabs $0xffff80000010f000,%rdi$/;"	l
ffff800000100391	kernel.asm	/^ffff800000100391:	80 ff ff $/;"	l
ffff800000100394	kernel.asm	/^ffff800000100394:	48 b8 9a 79 10 00 00 	movabs $0xffff80000010799a,%rax$/;"	l
ffff80000010039b	kernel.asm	/^ffff80000010039b:	80 ff ff $/;"	l
ffff80000010039e	kernel.asm	/^ffff80000010039e:	ff d0                	callq  *%rax$/;"	l
ffff8000001003a0	kernel.asm	/^ffff8000001003a0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001003a4	kernel.asm	/^ffff8000001003a4:	48 83 c0 10          	add    $0x10,%rax$/;"	l
ffff8000001003a8	kernel.asm	/^ffff8000001003a8:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001003ab	kernel.asm	/^ffff8000001003ab:	48 b8 4e 77 10 00 00 	movabs $0xffff80000010774e,%rax$/;"	l
ffff8000001003b2	kernel.asm	/^ffff8000001003b2:	80 ff ff $/;"	l
ffff8000001003b5	kernel.asm	/^ffff8000001003b5:	ff d0                	callq  *%rax$/;"	l
ffff8000001003b7	kernel.asm	/^ffff8000001003b7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001003bb	kernel.asm	/^ffff8000001003bb:	eb 39                	jmp    ffff8000001003f6 <bget+0x190>$/;"	l
ffff8000001003bd	kernel.asm	/^ffff8000001003bd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001003c1	kernel.asm	/^ffff8000001003c1:	48 8b 80 98 00 00 00 	mov    0x98(%rax),%rax$/;"	l
ffff8000001003c8	kernel.asm	/^ffff8000001003c8:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff8000001003cc	kernel.asm	/^ffff8000001003cc:	48 b8 08 41 11 00 00 	movabs $0xffff800000114108,%rax$/;"	l
ffff8000001003d3	kernel.asm	/^ffff8000001003d3:	80 ff ff $/;"	l
ffff8000001003d6	kernel.asm	/^ffff8000001003d6:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)$/;"	l
ffff8000001003da	kernel.asm	/^ffff8000001003da:	0f 85 63 ff ff ff    	jne    ffff800000100343 <bget+0xdd>$/;"	l
ffff8000001003e0	kernel.asm	/^ffff8000001003e0:	48 bf 16 c2 10 00 00 	movabs $0xffff80000010c216,%rdi$/;"	l
ffff8000001003e7	kernel.asm	/^ffff8000001003e7:	80 ff ff $/;"	l
ffff8000001003ea	kernel.asm	/^ffff8000001003ea:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff8000001003f1	kernel.asm	/^ffff8000001003f1:	80 ff ff $/;"	l
ffff8000001003f4	kernel.asm	/^ffff8000001003f4:	ff d0                	callq  *%rax$/;"	l
ffff8000001003f6	kernel.asm	/^ffff8000001003f6:	c9                   	leaveq $/;"	l
ffff8000001003f7	kernel.asm	/^ffff8000001003f7:	c3                   	retq   $/;"	l
ffff8000001003f8	kernel.asm	/^ffff8000001003f8 <bread>:$/;"	l
ffff8000001003f8	kernel.asm	/^ffff8000001003f8:	55                   	push   %rbp$/;"	l
ffff8000001003f9	kernel.asm	/^ffff8000001003f9:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff8000001003fc	kernel.asm	/^ffff8000001003fc:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ffff800000100400	kernel.asm	/^ffff800000100400:	89 7d ec             	mov    %edi,-0x14(%rbp)$/;"	l
ffff800000100403	kernel.asm	/^ffff800000100403:	89 75 e8             	mov    %esi,-0x18(%rbp)$/;"	l
ffff800000100406	kernel.asm	/^ffff800000100406:	8b 55 e8             	mov    -0x18(%rbp),%edx$/;"	l
ffff800000100409	kernel.asm	/^ffff800000100409:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
ffff80000010040c	kernel.asm	/^ffff80000010040c:	89 d6                	mov    %edx,%esi$/;"	l
ffff80000010040e	kernel.asm	/^ffff80000010040e:	89 c7                	mov    %eax,%edi$/;"	l
ffff800000100410	kernel.asm	/^ffff800000100410:	48 b8 66 02 10 00 00 	movabs $0xffff800000100266,%rax$/;"	l
ffff800000100417	kernel.asm	/^ffff800000100417:	80 ff ff $/;"	l
ffff80000010041a	kernel.asm	/^ffff80000010041a:	ff d0                	callq  *%rax$/;"	l
ffff80000010041c	kernel.asm	/^ffff80000010041c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff800000100420	kernel.asm	/^ffff800000100420:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000100424	kernel.asm	/^ffff800000100424:	8b 00                	mov    (%rax),%eax$/;"	l
ffff800000100426	kernel.asm	/^ffff800000100426:	83 e0 02             	and    $0x2,%eax$/;"	l
ffff800000100429	kernel.asm	/^ffff800000100429:	85 c0                	test   %eax,%eax$/;"	l
ffff80000010042b	kernel.asm	/^ffff80000010042b:	75 13                	jne    ffff800000100440 <bread+0x48>$/;"	l
ffff80000010042d	kernel.asm	/^ffff80000010042d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000100431	kernel.asm	/^ffff800000100431:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000100434	kernel.asm	/^ffff800000100434:	48 b8 be 3c 10 00 00 	movabs $0xffff800000103cbe,%rax$/;"	l
ffff80000010043b	kernel.asm	/^ffff80000010043b:	80 ff ff $/;"	l
ffff80000010043e	kernel.asm	/^ffff80000010043e:	ff d0                	callq  *%rax$/;"	l
ffff800000100440	kernel.asm	/^ffff800000100440:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000100444	kernel.asm	/^ffff800000100444:	c9                   	leaveq $/;"	l
ffff800000100445	kernel.asm	/^ffff800000100445:	c3                   	retq   $/;"	l
ffff800000100446	kernel.asm	/^ffff800000100446 <bwrite>:$/;"	l
ffff800000100446	kernel.asm	/^ffff800000100446:	55                   	push   %rbp$/;"	l
ffff800000100447	kernel.asm	/^ffff800000100447:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010044a	kernel.asm	/^ffff80000010044a:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff80000010044e	kernel.asm	/^ffff80000010044e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)$/;"	l
ffff800000100452	kernel.asm	/^ffff800000100452:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000100456	kernel.asm	/^ffff800000100456:	48 83 c0 10          	add    $0x10,%rax$/;"	l
ffff80000010045a	kernel.asm	/^ffff80000010045a:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010045d	kernel.asm	/^ffff80000010045d:	48 b8 39 78 10 00 00 	movabs $0xffff800000107839,%rax$/;"	l
ffff800000100464	kernel.asm	/^ffff800000100464:	80 ff ff $/;"	l
ffff800000100467	kernel.asm	/^ffff800000100467:	ff d0                	callq  *%rax$/;"	l
ffff800000100469	kernel.asm	/^ffff800000100469:	85 c0                	test   %eax,%eax$/;"	l
ffff80000010046b	kernel.asm	/^ffff80000010046b:	75 16                	jne    ffff800000100483 <bwrite+0x3d>$/;"	l
ffff80000010046d	kernel.asm	/^ffff80000010046d:	48 bf 27 c2 10 00 00 	movabs $0xffff80000010c227,%rdi$/;"	l
ffff800000100474	kernel.asm	/^ffff800000100474:	80 ff ff $/;"	l
ffff800000100477	kernel.asm	/^ffff800000100477:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff80000010047e	kernel.asm	/^ffff80000010047e:	80 ff ff $/;"	l
ffff800000100481	kernel.asm	/^ffff800000100481:	ff d0                	callq  *%rax$/;"	l
ffff800000100483	kernel.asm	/^ffff800000100483:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000100487	kernel.asm	/^ffff800000100487:	8b 00                	mov    (%rax),%eax$/;"	l
ffff800000100489	kernel.asm	/^ffff800000100489:	83 c8 04             	or     $0x4,%eax$/;"	l
ffff80000010048c	kernel.asm	/^ffff80000010048c:	89 c2                	mov    %eax,%edx$/;"	l
ffff80000010048e	kernel.asm	/^ffff80000010048e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000100492	kernel.asm	/^ffff800000100492:	89 10                	mov    %edx,(%rax)$/;"	l
ffff800000100494	kernel.asm	/^ffff800000100494:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000100498	kernel.asm	/^ffff800000100498:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010049b	kernel.asm	/^ffff80000010049b:	48 b8 be 3c 10 00 00 	movabs $0xffff800000103cbe,%rax$/;"	l
ffff8000001004a2	kernel.asm	/^ffff8000001004a2:	80 ff ff $/;"	l
ffff8000001004a5	kernel.asm	/^ffff8000001004a5:	ff d0                	callq  *%rax$/;"	l
ffff8000001004a7	kernel.asm	/^ffff8000001004a7:	90                   	nop$/;"	l
ffff8000001004a8	kernel.asm	/^ffff8000001004a8:	c9                   	leaveq $/;"	l
ffff8000001004a9	kernel.asm	/^ffff8000001004a9:	c3                   	retq   $/;"	l
ffff8000001004aa	kernel.asm	/^ffff8000001004aa <brelse>:$/;"	l
ffff8000001004aa	kernel.asm	/^ffff8000001004aa:	55                   	push   %rbp$/;"	l
ffff8000001004ab	kernel.asm	/^ffff8000001004ab:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff8000001004ae	kernel.asm	/^ffff8000001004ae:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff8000001004b2	kernel.asm	/^ffff8000001004b2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)$/;"	l
ffff8000001004b6	kernel.asm	/^ffff8000001004b6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001004ba	kernel.asm	/^ffff8000001004ba:	48 83 c0 10          	add    $0x10,%rax$/;"	l
ffff8000001004be	kernel.asm	/^ffff8000001004be:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001004c1	kernel.asm	/^ffff8000001004c1:	48 b8 39 78 10 00 00 	movabs $0xffff800000107839,%rax$/;"	l
ffff8000001004c8	kernel.asm	/^ffff8000001004c8:	80 ff ff $/;"	l
ffff8000001004cb	kernel.asm	/^ffff8000001004cb:	ff d0                	callq  *%rax$/;"	l
ffff8000001004cd	kernel.asm	/^ffff8000001004cd:	85 c0                	test   %eax,%eax$/;"	l
ffff8000001004cf	kernel.asm	/^ffff8000001004cf:	75 16                	jne    ffff8000001004e7 <brelse+0x3d>$/;"	l
ffff8000001004d1	kernel.asm	/^ffff8000001004d1:	48 bf 2e c2 10 00 00 	movabs $0xffff80000010c22e,%rdi$/;"	l
ffff8000001004d8	kernel.asm	/^ffff8000001004d8:	80 ff ff $/;"	l
ffff8000001004db	kernel.asm	/^ffff8000001004db:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff8000001004e2	kernel.asm	/^ffff8000001004e2:	80 ff ff $/;"	l
ffff8000001004e5	kernel.asm	/^ffff8000001004e5:	ff d0                	callq  *%rax$/;"	l
ffff8000001004e7	kernel.asm	/^ffff8000001004e7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001004eb	kernel.asm	/^ffff8000001004eb:	48 83 c0 10          	add    $0x10,%rax$/;"	l
ffff8000001004ef	kernel.asm	/^ffff8000001004ef:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001004f2	kernel.asm	/^ffff8000001004f2:	48 b8 d4 77 10 00 00 	movabs $0xffff8000001077d4,%rax$/;"	l
ffff8000001004f9	kernel.asm	/^ffff8000001004f9:	80 ff ff $/;"	l
ffff8000001004fc	kernel.asm	/^ffff8000001004fc:	ff d0                	callq  *%rax$/;"	l
ffff8000001004fe	kernel.asm	/^ffff8000001004fe:	48 bf 00 f0 10 00 00 	movabs $0xffff80000010f000,%rdi$/;"	l
ffff800000100505	kernel.asm	/^ffff800000100505:	80 ff ff $/;"	l
ffff800000100508	kernel.asm	/^ffff800000100508:	48 b8 01 79 10 00 00 	movabs $0xffff800000107901,%rax$/;"	l
ffff80000010050f	kernel.asm	/^ffff80000010050f:	80 ff ff $/;"	l
ffff800000100512	kernel.asm	/^ffff800000100512:	ff d0                	callq  *%rax$/;"	l
ffff800000100514	kernel.asm	/^ffff800000100514:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000100518	kernel.asm	/^ffff800000100518:	8b 80 90 00 00 00    	mov    0x90(%rax),%eax$/;"	l
ffff80000010051e	kernel.asm	/^ffff80000010051e:	8d 50 ff             	lea    -0x1(%rax),%edx$/;"	l
ffff800000100521	kernel.asm	/^ffff800000100521:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000100525	kernel.asm	/^ffff800000100525:	89 90 90 00 00 00    	mov    %edx,0x90(%rax)$/;"	l
ffff80000010052b	kernel.asm	/^ffff80000010052b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010052f	kernel.asm	/^ffff80000010052f:	8b 80 90 00 00 00    	mov    0x90(%rax),%eax$/;"	l
ffff800000100535	kernel.asm	/^ffff800000100535:	85 c0                	test   %eax,%eax$/;"	l
ffff800000100537	kernel.asm	/^ffff800000100537:	0f 85 9c 00 00 00    	jne    ffff8000001005d9 <brelse+0x12f>$/;"	l
ffff80000010053d	kernel.asm	/^ffff80000010053d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000100541	kernel.asm	/^ffff800000100541:	48 8b 80 a0 00 00 00 	mov    0xa0(%rax),%rax$/;"	l
ffff800000100548	kernel.asm	/^ffff800000100548:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx$/;"	l
ffff80000010054c	kernel.asm	/^ffff80000010054c:	48 8b 92 98 00 00 00 	mov    0x98(%rdx),%rdx$/;"	l
ffff800000100553	kernel.asm	/^ffff800000100553:	48 89 90 98 00 00 00 	mov    %rdx,0x98(%rax)$/;"	l
ffff80000010055a	kernel.asm	/^ffff80000010055a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010055e	kernel.asm	/^ffff80000010055e:	48 8b 80 98 00 00 00 	mov    0x98(%rax),%rax$/;"	l
ffff800000100565	kernel.asm	/^ffff800000100565:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx$/;"	l
ffff800000100569	kernel.asm	/^ffff800000100569:	48 8b 92 a0 00 00 00 	mov    0xa0(%rdx),%rdx$/;"	l
ffff800000100570	kernel.asm	/^ffff800000100570:	48 89 90 a0 00 00 00 	mov    %rdx,0xa0(%rax)$/;"	l
ffff800000100577	kernel.asm	/^ffff800000100577:	48 b8 00 f0 10 00 00 	movabs $0xffff80000010f000,%rax$/;"	l
ffff80000010057e	kernel.asm	/^ffff80000010057e:	80 ff ff $/;"	l
ffff800000100581	kernel.asm	/^ffff800000100581:	48 8b 90 a8 51 00 00 	mov    0x51a8(%rax),%rdx$/;"	l
ffff800000100588	kernel.asm	/^ffff800000100588:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010058c	kernel.asm	/^ffff80000010058c:	48 89 90 a0 00 00 00 	mov    %rdx,0xa0(%rax)$/;"	l
ffff800000100593	kernel.asm	/^ffff800000100593:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000100597	kernel.asm	/^ffff800000100597:	48 b9 08 41 11 00 00 	movabs $0xffff800000114108,%rcx$/;"	l
ffff80000010059e	kernel.asm	/^ffff80000010059e:	80 ff ff $/;"	l
ffff8000001005a1	kernel.asm	/^ffff8000001005a1:	48 89 88 98 00 00 00 	mov    %rcx,0x98(%rax)$/;"	l
ffff8000001005a8	kernel.asm	/^ffff8000001005a8:	48 b8 00 f0 10 00 00 	movabs $0xffff80000010f000,%rax$/;"	l
ffff8000001005af	kernel.asm	/^ffff8000001005af:	80 ff ff $/;"	l
ffff8000001005b2	kernel.asm	/^ffff8000001005b2:	48 8b 80 a8 51 00 00 	mov    0x51a8(%rax),%rax$/;"	l
ffff8000001005b9	kernel.asm	/^ffff8000001005b9:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx$/;"	l
ffff8000001005bd	kernel.asm	/^ffff8000001005bd:	48 89 90 98 00 00 00 	mov    %rdx,0x98(%rax)$/;"	l
ffff8000001005c4	kernel.asm	/^ffff8000001005c4:	48 b8 00 f0 10 00 00 	movabs $0xffff80000010f000,%rax$/;"	l
ffff8000001005cb	kernel.asm	/^ffff8000001005cb:	80 ff ff $/;"	l
ffff8000001005ce	kernel.asm	/^ffff8000001005ce:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx$/;"	l
ffff8000001005d2	kernel.asm	/^ffff8000001005d2:	48 89 90 a8 51 00 00 	mov    %rdx,0x51a8(%rax)$/;"	l
ffff8000001005d9	kernel.asm	/^ffff8000001005d9:	48 bf 00 f0 10 00 00 	movabs $0xffff80000010f000,%rdi$/;"	l
ffff8000001005e0	kernel.asm	/^ffff8000001005e0:	80 ff ff $/;"	l
ffff8000001005e3	kernel.asm	/^ffff8000001005e3:	48 b8 9a 79 10 00 00 	movabs $0xffff80000010799a,%rax$/;"	l
ffff8000001005ea	kernel.asm	/^ffff8000001005ea:	80 ff ff $/;"	l
ffff8000001005ed	kernel.asm	/^ffff8000001005ed:	ff d0                	callq  *%rax$/;"	l
ffff8000001005ef	kernel.asm	/^ffff8000001005ef:	90                   	nop$/;"	l
ffff8000001005f0	kernel.asm	/^ffff8000001005f0:	c9                   	leaveq $/;"	l
ffff8000001005f1	kernel.asm	/^ffff8000001005f1:	c3                   	retq   $/;"	l
ffff8000001005f2	kernel.asm	/^ffff8000001005f2 <inb>:$/;"	l
ffff8000001005f2	kernel.asm	/^ffff8000001005f2:	55                   	push   %rbp$/;"	l
ffff8000001005f3	kernel.asm	/^ffff8000001005f3:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff8000001005f6	kernel.asm	/^ffff8000001005f6:	48 83 ec 18          	sub    $0x18,%rsp$/;"	l
ffff8000001005fa	kernel.asm	/^ffff8000001005fa:	89 f8                	mov    %edi,%eax$/;"	l
ffff8000001005fc	kernel.asm	/^ffff8000001005fc:	66 89 45 ec          	mov    %ax,-0x14(%rbp)$/;"	l
ffff800000100600	kernel.asm	/^ffff800000100600:	0f b7 45 ec          	movzwl -0x14(%rbp),%eax$/;"	l
ffff800000100604	kernel.asm	/^ffff800000100604:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000100606	kernel.asm	/^ffff800000100606:	ec                   	in     (%dx),%al$/;"	l
ffff800000100607	kernel.asm	/^ffff800000100607:	88 45 ff             	mov    %al,-0x1(%rbp)$/;"	l
ffff80000010060a	kernel.asm	/^ffff80000010060a:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax$/;"	l
ffff80000010060e	kernel.asm	/^ffff80000010060e:	c9                   	leaveq $/;"	l
ffff80000010060f	kernel.asm	/^ffff80000010060f:	c3                   	retq   $/;"	l
ffff800000100610	kernel.asm	/^ffff800000100610 <outb>:$/;"	l
ffff800000100610	kernel.asm	/^ffff800000100610:	55                   	push   %rbp$/;"	l
ffff800000100611	kernel.asm	/^ffff800000100611:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000100614	kernel.asm	/^ffff800000100614:	48 83 ec 08          	sub    $0x8,%rsp$/;"	l
ffff800000100618	kernel.asm	/^ffff800000100618:	89 fa                	mov    %edi,%edx$/;"	l
ffff80000010061a	kernel.asm	/^ffff80000010061a:	89 f0                	mov    %esi,%eax$/;"	l
ffff80000010061c	kernel.asm	/^ffff80000010061c:	66 89 55 fc          	mov    %dx,-0x4(%rbp)$/;"	l
ffff800000100620	kernel.asm	/^ffff800000100620:	88 45 f8             	mov    %al,-0x8(%rbp)$/;"	l
ffff800000100623	kernel.asm	/^ffff800000100623:	0f b6 45 f8          	movzbl -0x8(%rbp),%eax$/;"	l
ffff800000100627	kernel.asm	/^ffff800000100627:	0f b7 55 fc          	movzwl -0x4(%rbp),%edx$/;"	l
ffff80000010062b	kernel.asm	/^ffff80000010062b:	ee                   	out    %al,(%dx)$/;"	l
ffff80000010062c	kernel.asm	/^ffff80000010062c:	90                   	nop$/;"	l
ffff80000010062d	kernel.asm	/^ffff80000010062d:	c9                   	leaveq $/;"	l
ffff80000010062e	kernel.asm	/^ffff80000010062e:	c3                   	retq   $/;"	l
ffff80000010062f	kernel.asm	/^ffff80000010062f <lidt>:$/;"	l
ffff80000010062f	kernel.asm	/^ffff80000010062f:	55                   	push   %rbp$/;"	l
ffff800000100630	kernel.asm	/^ffff800000100630:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000100633	kernel.asm	/^ffff800000100633:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ffff800000100637	kernel.asm	/^ffff800000100637:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
ffff80000010063b	kernel.asm	/^ffff80000010063b:	89 75 e4             	mov    %esi,-0x1c(%rbp)$/;"	l
ffff80000010063e	kernel.asm	/^ffff80000010063e:	8b 45 e4             	mov    -0x1c(%rbp),%eax$/;"	l
ffff800000100641	kernel.asm	/^ffff800000100641:	83 e8 01             	sub    $0x1,%eax$/;"	l
ffff800000100644	kernel.asm	/^ffff800000100644:	66 89 45 f0          	mov    %ax,-0x10(%rbp)$/;"	l
ffff800000100648	kernel.asm	/^ffff800000100648:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010064c	kernel.asm	/^ffff80000010064c:	66 89 45 f2          	mov    %ax,-0xe(%rbp)$/;"	l
ffff800000100650	kernel.asm	/^ffff800000100650:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000100654	kernel.asm	/^ffff800000100654:	48 c1 e8 10          	shr    $0x10,%rax$/;"	l
ffff800000100658	kernel.asm	/^ffff800000100658:	66 89 45 f4          	mov    %ax,-0xc(%rbp)$/;"	l
ffff80000010065c	kernel.asm	/^ffff80000010065c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000100660	kernel.asm	/^ffff800000100660:	48 c1 e8 20          	shr    $0x20,%rax$/;"	l
ffff800000100664	kernel.asm	/^ffff800000100664:	66 89 45 f6          	mov    %ax,-0xa(%rbp)$/;"	l
ffff800000100668	kernel.asm	/^ffff800000100668:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010066c	kernel.asm	/^ffff80000010066c:	48 c1 e8 30          	shr    $0x30,%rax$/;"	l
ffff800000100670	kernel.asm	/^ffff800000100670:	66 89 45 f8          	mov    %ax,-0x8(%rbp)$/;"	l
ffff800000100674	kernel.asm	/^ffff800000100674:	48 8d 45 f0          	lea    -0x10(%rbp),%rax$/;"	l
ffff800000100678	kernel.asm	/^ffff800000100678:	0f 01 18             	lidt   (%rax)$/;"	l
ffff80000010067b	kernel.asm	/^ffff80000010067b:	90                   	nop$/;"	l
ffff80000010067c	kernel.asm	/^ffff80000010067c:	c9                   	leaveq $/;"	l
ffff80000010067d	kernel.asm	/^ffff80000010067d:	c3                   	retq   $/;"	l
ffff80000010067e	kernel.asm	/^ffff80000010067e <cli>:$/;"	l
ffff80000010067e	kernel.asm	/^ffff80000010067e:	55                   	push   %rbp$/;"	l
ffff80000010067f	kernel.asm	/^ffff80000010067f:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000100682	kernel.asm	/^ffff800000100682:	fa                   	cli    $/;"	l
ffff800000100683	kernel.asm	/^ffff800000100683:	90                   	nop$/;"	l
ffff800000100684	kernel.asm	/^ffff800000100684:	5d                   	pop    %rbp$/;"	l
ffff800000100685	kernel.asm	/^ffff800000100685:	c3                   	retq   $/;"	l
ffff800000100686	kernel.asm	/^ffff800000100686 <printptr>:$/;"	l
ffff800000100686	kernel.asm	/^ffff800000100686:	55                   	push   %rbp$/;"	l
ffff800000100687	kernel.asm	/^ffff800000100687:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010068a	kernel.asm	/^ffff80000010068a:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ffff80000010068e	kernel.asm	/^ffff80000010068e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
ffff800000100692	kernel.asm	/^ffff800000100692:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)$/;"	l
ffff800000100699	kernel.asm	/^ffff800000100699:	eb 33                	jmp    ffff8000001006ce <printptr+0x48>$/;"	l
ffff80000010069b	kernel.asm	/^ffff80000010069b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010069f	kernel.asm	/^ffff80000010069f:	48 c1 e8 3c          	shr    $0x3c,%rax$/;"	l
ffff8000001006a3	kernel.asm	/^ffff8000001006a3:	48 89 c2             	mov    %rax,%rdx$/;"	l
ffff8000001006a6	kernel.asm	/^ffff8000001006a6:	48 b8 00 d0 10 00 00 	movabs $0xffff80000010d000,%rax$/;"	l
ffff8000001006ad	kernel.asm	/^ffff8000001006ad:	80 ff ff $/;"	l
ffff8000001006b0	kernel.asm	/^ffff8000001006b0:	0f b6 04 10          	movzbl (%rax,%rdx,1),%eax$/;"	l
ffff8000001006b4	kernel.asm	/^ffff8000001006b4:	0f be c0             	movsbl %al,%eax$/;"	l
ffff8000001006b7	kernel.asm	/^ffff8000001006b7:	89 c7                	mov    %eax,%edi$/;"	l
ffff8000001006b9	kernel.asm	/^ffff8000001006b9:	48 b8 3b 0e 10 00 00 	movabs $0xffff800000100e3b,%rax$/;"	l
ffff8000001006c0	kernel.asm	/^ffff8000001006c0:	80 ff ff $/;"	l
ffff8000001006c3	kernel.asm	/^ffff8000001006c3:	ff d0                	callq  *%rax$/;"	l
ffff8000001006c5	kernel.asm	/^ffff8000001006c5:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)$/;"	l
ffff8000001006c9	kernel.asm	/^ffff8000001006c9:	48 c1 65 e8 04       	shlq   $0x4,-0x18(%rbp)$/;"	l
ffff8000001006ce	kernel.asm	/^ffff8000001006ce:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff8000001006d1	kernel.asm	/^ffff8000001006d1:	83 f8 0f             	cmp    $0xf,%eax$/;"	l
ffff8000001006d4	kernel.asm	/^ffff8000001006d4:	76 c5                	jbe    ffff80000010069b <printptr+0x15>$/;"	l
ffff8000001006d6	kernel.asm	/^ffff8000001006d6:	90                   	nop$/;"	l
ffff8000001006d7	kernel.asm	/^ffff8000001006d7:	c9                   	leaveq $/;"	l
ffff8000001006d8	kernel.asm	/^ffff8000001006d8:	c3                   	retq   $/;"	l
ffff8000001006d9	kernel.asm	/^ffff8000001006d9 <printint>:$/;"	l
ffff8000001006d9	kernel.asm	/^ffff8000001006d9:	55                   	push   %rbp$/;"	l
ffff8000001006da	kernel.asm	/^ffff8000001006da:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff8000001006dd	kernel.asm	/^ffff8000001006dd:	48 83 ec 40          	sub    $0x40,%rsp$/;"	l
ffff8000001006e1	kernel.asm	/^ffff8000001006e1:	89 7d cc             	mov    %edi,-0x34(%rbp)$/;"	l
ffff8000001006e4	kernel.asm	/^ffff8000001006e4:	89 75 c8             	mov    %esi,-0x38(%rbp)$/;"	l
ffff8000001006e7	kernel.asm	/^ffff8000001006e7:	89 55 c4             	mov    %edx,-0x3c(%rbp)$/;"	l
ffff8000001006ea	kernel.asm	/^ffff8000001006ea:	83 7d c4 00          	cmpl   $0x0,-0x3c(%rbp)$/;"	l
ffff8000001006ee	kernel.asm	/^ffff8000001006ee:	74 1f                	je     ffff80000010070f <printint+0x36>$/;"	l
ffff8000001006f0	kernel.asm	/^ffff8000001006f0:	8b 45 cc             	mov    -0x34(%rbp),%eax$/;"	l
ffff8000001006f3	kernel.asm	/^ffff8000001006f3:	c1 e8 1f             	shr    $0x1f,%eax$/;"	l
ffff8000001006f6	kernel.asm	/^ffff8000001006f6:	0f b6 c0             	movzbl %al,%eax$/;"	l
ffff8000001006f9	kernel.asm	/^ffff8000001006f9:	89 45 c4             	mov    %eax,-0x3c(%rbp)$/;"	l
ffff8000001006fc	kernel.asm	/^ffff8000001006fc:	83 7d c4 00          	cmpl   $0x0,-0x3c(%rbp)$/;"	l
ffff800000100700	kernel.asm	/^ffff800000100700:	74 0d                	je     ffff80000010070f <printint+0x36>$/;"	l
ffff800000100702	kernel.asm	/^ffff800000100702:	8b 45 cc             	mov    -0x34(%rbp),%eax$/;"	l
ffff800000100705	kernel.asm	/^ffff800000100705:	f7 d8                	neg    %eax$/;"	l
ffff800000100707	kernel.asm	/^ffff800000100707:	48 98                	cltq   $/;"	l
ffff800000100709	kernel.asm	/^ffff800000100709:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ffff80000010070d	kernel.asm	/^ffff80000010070d:	eb 09                	jmp    ffff800000100718 <printint+0x3f>$/;"	l
ffff80000010070f	kernel.asm	/^ffff80000010070f:	8b 45 cc             	mov    -0x34(%rbp),%eax$/;"	l
ffff800000100712	kernel.asm	/^ffff800000100712:	48 98                	cltq   $/;"	l
ffff800000100714	kernel.asm	/^ffff800000100714:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ffff800000100718	kernel.asm	/^ffff800000100718:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)$/;"	l
ffff80000010071f	kernel.asm	/^ffff80000010071f:	8b 4d fc             	mov    -0x4(%rbp),%ecx$/;"	l
ffff800000100722	kernel.asm	/^ffff800000100722:	8d 41 01             	lea    0x1(%rcx),%eax$/;"	l
ffff800000100725	kernel.asm	/^ffff800000100725:	89 45 fc             	mov    %eax,-0x4(%rbp)$/;"	l
ffff800000100728	kernel.asm	/^ffff800000100728:	8b 45 c8             	mov    -0x38(%rbp),%eax$/;"	l
ffff80000010072b	kernel.asm	/^ffff80000010072b:	48 63 f0             	movslq %eax,%rsi$/;"	l
ffff80000010072e	kernel.asm	/^ffff80000010072e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000100732	kernel.asm	/^ffff800000100732:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
ffff800000100737	kernel.asm	/^ffff800000100737:	48 f7 f6             	div    %rsi$/;"	l
ffff80000010073a	kernel.asm	/^ffff80000010073a:	48 b8 00 d0 10 00 00 	movabs $0xffff80000010d000,%rax$/;"	l
ffff800000100741	kernel.asm	/^ffff800000100741:	80 ff ff $/;"	l
ffff800000100744	kernel.asm	/^ffff800000100744:	0f b6 14 10          	movzbl (%rax,%rdx,1),%edx$/;"	l
ffff800000100748	kernel.asm	/^ffff800000100748:	48 63 c1             	movslq %ecx,%rax$/;"	l
ffff80000010074b	kernel.asm	/^ffff80000010074b:	88 54 05 d0          	mov    %dl,-0x30(%rbp,%rax,1)$/;"	l
ffff80000010074f	kernel.asm	/^ffff80000010074f:	8b 45 c8             	mov    -0x38(%rbp),%eax$/;"	l
ffff800000100752	kernel.asm	/^ffff800000100752:	48 63 f8             	movslq %eax,%rdi$/;"	l
ffff800000100755	kernel.asm	/^ffff800000100755:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000100759	kernel.asm	/^ffff800000100759:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
ffff80000010075e	kernel.asm	/^ffff80000010075e:	48 f7 f7             	div    %rdi$/;"	l
ffff800000100761	kernel.asm	/^ffff800000100761:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ffff800000100765	kernel.asm	/^ffff800000100765:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)$/;"	l
ffff80000010076a	kernel.asm	/^ffff80000010076a:	75 b3                	jne    ffff80000010071f <printint+0x46>$/;"	l
ffff80000010076c	kernel.asm	/^ffff80000010076c:	83 7d c4 00          	cmpl   $0x0,-0x3c(%rbp)$/;"	l
ffff800000100770	kernel.asm	/^ffff800000100770:	74 2d                	je     ffff80000010079f <printint+0xc6>$/;"	l
ffff800000100772	kernel.asm	/^ffff800000100772:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff800000100775	kernel.asm	/^ffff800000100775:	8d 50 01             	lea    0x1(%rax),%edx$/;"	l
ffff800000100778	kernel.asm	/^ffff800000100778:	89 55 fc             	mov    %edx,-0x4(%rbp)$/;"	l
ffff80000010077b	kernel.asm	/^ffff80000010077b:	48 98                	cltq   $/;"	l
ffff80000010077d	kernel.asm	/^ffff80000010077d:	c6 44 05 d0 2d       	movb   $0x2d,-0x30(%rbp,%rax,1)$/;"	l
ffff800000100782	kernel.asm	/^ffff800000100782:	eb 1b                	jmp    ffff80000010079f <printint+0xc6>$/;"	l
ffff800000100784	kernel.asm	/^ffff800000100784:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff800000100787	kernel.asm	/^ffff800000100787:	48 98                	cltq   $/;"	l
ffff800000100789	kernel.asm	/^ffff800000100789:	0f b6 44 05 d0       	movzbl -0x30(%rbp,%rax,1),%eax$/;"	l
ffff80000010078e	kernel.asm	/^ffff80000010078e:	0f be c0             	movsbl %al,%eax$/;"	l
ffff800000100791	kernel.asm	/^ffff800000100791:	89 c7                	mov    %eax,%edi$/;"	l
ffff800000100793	kernel.asm	/^ffff800000100793:	48 b8 3b 0e 10 00 00 	movabs $0xffff800000100e3b,%rax$/;"	l
ffff80000010079a	kernel.asm	/^ffff80000010079a:	80 ff ff $/;"	l
ffff80000010079d	kernel.asm	/^ffff80000010079d:	ff d0                	callq  *%rax$/;"	l
ffff80000010079f	kernel.asm	/^ffff80000010079f:	83 6d fc 01          	subl   $0x1,-0x4(%rbp)$/;"	l
ffff8000001007a3	kernel.asm	/^ffff8000001007a3:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)$/;"	l
ffff8000001007a7	kernel.asm	/^ffff8000001007a7:	79 db                	jns    ffff800000100784 <printint+0xab>$/;"	l
ffff8000001007a9	kernel.asm	/^ffff8000001007a9:	90                   	nop$/;"	l
ffff8000001007aa	kernel.asm	/^ffff8000001007aa:	c9                   	leaveq $/;"	l
ffff8000001007ab	kernel.asm	/^ffff8000001007ab:	c3                   	retq   $/;"	l
ffff8000001007ac	kernel.asm	/^ffff8000001007ac <cprintf>:$/;"	l
ffff8000001007ac	kernel.asm	/^ffff8000001007ac:	55                   	push   %rbp$/;"	l
ffff8000001007ad	kernel.asm	/^ffff8000001007ad:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff8000001007b0	kernel.asm	/^ffff8000001007b0:	48 81 ec f0 00 00 00 	sub    $0xf0,%rsp$/;"	l
ffff8000001007b7	kernel.asm	/^ffff8000001007b7:	48 89 bd 18 ff ff ff 	mov    %rdi,-0xe8(%rbp)$/;"	l
ffff8000001007be	kernel.asm	/^ffff8000001007be:	48 89 b5 58 ff ff ff 	mov    %rsi,-0xa8(%rbp)$/;"	l
ffff8000001007c5	kernel.asm	/^ffff8000001007c5:	48 89 95 60 ff ff ff 	mov    %rdx,-0xa0(%rbp)$/;"	l
ffff8000001007cc	kernel.asm	/^ffff8000001007cc:	48 89 8d 68 ff ff ff 	mov    %rcx,-0x98(%rbp)$/;"	l
ffff8000001007d3	kernel.asm	/^ffff8000001007d3:	4c 89 85 70 ff ff ff 	mov    %r8,-0x90(%rbp)$/;"	l
ffff8000001007da	kernel.asm	/^ffff8000001007da:	4c 89 8d 78 ff ff ff 	mov    %r9,-0x88(%rbp)$/;"	l
ffff8000001007e1	kernel.asm	/^ffff8000001007e1:	84 c0                	test   %al,%al$/;"	l
ffff8000001007e3	kernel.asm	/^ffff8000001007e3:	74 20                	je     ffff800000100805 <cprintf+0x59>$/;"	l
ffff8000001007e5	kernel.asm	/^ffff8000001007e5:	0f 29 45 80          	movaps %xmm0,-0x80(%rbp)$/;"	l
ffff8000001007e9	kernel.asm	/^ffff8000001007e9:	0f 29 4d 90          	movaps %xmm1,-0x70(%rbp)$/;"	l
ffff8000001007ed	kernel.asm	/^ffff8000001007ed:	0f 29 55 a0          	movaps %xmm2,-0x60(%rbp)$/;"	l
ffff8000001007f1	kernel.asm	/^ffff8000001007f1:	0f 29 5d b0          	movaps %xmm3,-0x50(%rbp)$/;"	l
ffff8000001007f5	kernel.asm	/^ffff8000001007f5:	0f 29 65 c0          	movaps %xmm4,-0x40(%rbp)$/;"	l
ffff8000001007f9	kernel.asm	/^ffff8000001007f9:	0f 29 6d d0          	movaps %xmm5,-0x30(%rbp)$/;"	l
ffff8000001007fd	kernel.asm	/^ffff8000001007fd:	0f 29 75 e0          	movaps %xmm6,-0x20(%rbp)$/;"	l
ffff800000100801	kernel.asm	/^ffff800000100801:	0f 29 7d f0          	movaps %xmm7,-0x10(%rbp)$/;"	l
ffff800000100805	kernel.asm	/^ffff800000100805:	c7 85 20 ff ff ff 08 	movl   $0x8,-0xe0(%rbp)$/;"	l
ffff80000010080c	kernel.asm	/^ffff80000010080c:	00 00 00 $/;"	l
ffff80000010080f	kernel.asm	/^ffff80000010080f:	c7 85 24 ff ff ff 30 	movl   $0x30,-0xdc(%rbp)$/;"	l
ffff800000100816	kernel.asm	/^ffff800000100816:	00 00 00 $/;"	l
ffff800000100819	kernel.asm	/^ffff800000100819:	48 8d 45 10          	lea    0x10(%rbp),%rax$/;"	l
ffff80000010081d	kernel.asm	/^ffff80000010081d:	48 89 85 28 ff ff ff 	mov    %rax,-0xd8(%rbp)$/;"	l
ffff800000100824	kernel.asm	/^ffff800000100824:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax$/;"	l
ffff80000010082b	kernel.asm	/^ffff80000010082b:	48 89 85 30 ff ff ff 	mov    %rax,-0xd0(%rbp)$/;"	l
ffff800000100832	kernel.asm	/^ffff800000100832:	48 b8 c0 44 11 00 00 	movabs $0xffff8000001144c0,%rax$/;"	l
ffff800000100839	kernel.asm	/^ffff800000100839:	80 ff ff $/;"	l
ffff80000010083c	kernel.asm	/^ffff80000010083c:	8b 40 68             	mov    0x68(%rax),%eax$/;"	l
ffff80000010083f	kernel.asm	/^ffff80000010083f:	89 85 3c ff ff ff    	mov    %eax,-0xc4(%rbp)$/;"	l
ffff800000100845	kernel.asm	/^ffff800000100845:	83 bd 3c ff ff ff 00 	cmpl   $0x0,-0xc4(%rbp)$/;"	l
ffff80000010084c	kernel.asm	/^ffff80000010084c:	74 16                	je     ffff800000100864 <cprintf+0xb8>$/;"	l
ffff80000010084e	kernel.asm	/^ffff80000010084e:	48 bf c0 44 11 00 00 	movabs $0xffff8000001144c0,%rdi$/;"	l
ffff800000100855	kernel.asm	/^ffff800000100855:	80 ff ff $/;"	l
ffff800000100858	kernel.asm	/^ffff800000100858:	48 b8 01 79 10 00 00 	movabs $0xffff800000107901,%rax$/;"	l
ffff80000010085f	kernel.asm	/^ffff80000010085f:	80 ff ff $/;"	l
ffff800000100862	kernel.asm	/^ffff800000100862:	ff d0                	callq  *%rax$/;"	l
ffff800000100864	kernel.asm	/^ffff800000100864:	48 83 bd 18 ff ff ff 	cmpq   $0x0,-0xe8(%rbp)$/;"	l
ffff80000010086b	kernel.asm	/^ffff80000010086b:	00 $/;"	l
ffff80000010086c	kernel.asm	/^ffff80000010086c:	75 16                	jne    ffff800000100884 <cprintf+0xd8>$/;"	l
ffff80000010086e	kernel.asm	/^ffff80000010086e:	48 bf 35 c2 10 00 00 	movabs $0xffff80000010c235,%rdi$/;"	l
ffff800000100875	kernel.asm	/^ffff800000100875:	80 ff ff $/;"	l
ffff800000100878	kernel.asm	/^ffff800000100878:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff80000010087f	kernel.asm	/^ffff80000010087f:	80 ff ff $/;"	l
ffff800000100882	kernel.asm	/^ffff800000100882:	ff d0                	callq  *%rax$/;"	l
ffff800000100884	kernel.asm	/^ffff800000100884:	c7 85 4c ff ff ff 00 	movl   $0x0,-0xb4(%rbp)$/;"	l
ffff80000010088b	kernel.asm	/^ffff80000010088b:	00 00 00 $/;"	l
ffff80000010088e	kernel.asm	/^ffff80000010088e:	e9 83 02 00 00       	jmpq   ffff800000100b16 <cprintf+0x36a>$/;"	l
ffff800000100893	kernel.asm	/^ffff800000100893:	83 bd 38 ff ff ff 25 	cmpl   $0x25,-0xc8(%rbp)$/;"	l
ffff80000010089a	kernel.asm	/^ffff80000010089a:	74 19                	je     ffff8000001008b5 <cprintf+0x109>$/;"	l
ffff80000010089c	kernel.asm	/^ffff80000010089c:	8b 85 38 ff ff ff    	mov    -0xc8(%rbp),%eax$/;"	l
ffff8000001008a2	kernel.asm	/^ffff8000001008a2:	89 c7                	mov    %eax,%edi$/;"	l
ffff8000001008a4	kernel.asm	/^ffff8000001008a4:	48 b8 3b 0e 10 00 00 	movabs $0xffff800000100e3b,%rax$/;"	l
ffff8000001008ab	kernel.asm	/^ffff8000001008ab:	80 ff ff $/;"	l
ffff8000001008ae	kernel.asm	/^ffff8000001008ae:	ff d0                	callq  *%rax$/;"	l
ffff8000001008b0	kernel.asm	/^ffff8000001008b0:	e9 5a 02 00 00       	jmpq   ffff800000100b0f <cprintf+0x363>$/;"	l
ffff8000001008b5	kernel.asm	/^ffff8000001008b5:	83 85 4c ff ff ff 01 	addl   $0x1,-0xb4(%rbp)$/;"	l
ffff8000001008bc	kernel.asm	/^ffff8000001008bc:	8b 85 4c ff ff ff    	mov    -0xb4(%rbp),%eax$/;"	l
ffff8000001008c2	kernel.asm	/^ffff8000001008c2:	48 63 d0             	movslq %eax,%rdx$/;"	l
ffff8000001008c5	kernel.asm	/^ffff8000001008c5:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax$/;"	l
ffff8000001008cc	kernel.asm	/^ffff8000001008cc:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff8000001008cf	kernel.asm	/^ffff8000001008cf:	0f b6 00             	movzbl (%rax),%eax$/;"	l
ffff8000001008d2	kernel.asm	/^ffff8000001008d2:	0f be c0             	movsbl %al,%eax$/;"	l
ffff8000001008d5	kernel.asm	/^ffff8000001008d5:	25 ff 00 00 00       	and    $0xff,%eax$/;"	l
ffff8000001008da	kernel.asm	/^ffff8000001008da:	89 85 38 ff ff ff    	mov    %eax,-0xc8(%rbp)$/;"	l
ffff8000001008e0	kernel.asm	/^ffff8000001008e0:	83 bd 38 ff ff ff 00 	cmpl   $0x0,-0xc8(%rbp)$/;"	l
ffff8000001008e7	kernel.asm	/^ffff8000001008e7:	0f 84 5c 02 00 00    	je     ffff800000100b49 <cprintf+0x39d>$/;"	l
ffff8000001008ed	kernel.asm	/^ffff8000001008ed:	8b 85 38 ff ff ff    	mov    -0xc8(%rbp),%eax$/;"	l
ffff8000001008f3	kernel.asm	/^ffff8000001008f3:	83 f8 70             	cmp    $0x70,%eax$/;"	l
ffff8000001008f6	kernel.asm	/^ffff8000001008f6:	0f 84 e9 00 00 00    	je     ffff8000001009e5 <cprintf+0x239>$/;"	l
ffff8000001008fc	kernel.asm	/^ffff8000001008fc:	83 f8 70             	cmp    $0x70,%eax$/;"	l
ffff8000001008ff	kernel.asm	/^ffff8000001008ff:	7f 13                	jg     ffff800000100914 <cprintf+0x168>$/;"	l
ffff800000100901	kernel.asm	/^ffff800000100901:	83 f8 25             	cmp    $0x25,%eax$/;"	l
ffff800000100904	kernel.asm	/^ffff800000100904:	0f 84 cc 01 00 00    	je     ffff800000100ad6 <cprintf+0x32a>$/;"	l
ffff80000010090a	kernel.asm	/^ffff80000010090a:	83 f8 64             	cmp    $0x64,%eax$/;"	l
ffff80000010090d	kernel.asm	/^ffff80000010090d:	74 18                	je     ffff800000100927 <cprintf+0x17b>$/;"	l
ffff80000010090f	kernel.asm	/^ffff80000010090f:	e9 d5 01 00 00       	jmpq   ffff800000100ae9 <cprintf+0x33d>$/;"	l
ffff800000100914	kernel.asm	/^ffff800000100914:	83 f8 73             	cmp    $0x73,%eax$/;"	l
ffff800000100917	kernel.asm	/^ffff800000100917:	0f 84 1f 01 00 00    	je     ffff800000100a3c <cprintf+0x290>$/;"	l
ffff80000010091d	kernel.asm	/^ffff80000010091d:	83 f8 78             	cmp    $0x78,%eax$/;"	l
ffff800000100920	kernel.asm	/^ffff800000100920:	74 64                	je     ffff800000100986 <cprintf+0x1da>$/;"	l
ffff800000100922	kernel.asm	/^ffff800000100922:	e9 c2 01 00 00       	jmpq   ffff800000100ae9 <cprintf+0x33d>$/;"	l
ffff800000100927	kernel.asm	/^ffff800000100927:	8b 85 20 ff ff ff    	mov    -0xe0(%rbp),%eax$/;"	l
ffff80000010092d	kernel.asm	/^ffff80000010092d:	83 f8 30             	cmp    $0x30,%eax$/;"	l
ffff800000100930	kernel.asm	/^ffff800000100930:	73 23                	jae    ffff800000100955 <cprintf+0x1a9>$/;"	l
ffff800000100932	kernel.asm	/^ffff800000100932:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax$/;"	l
ffff800000100939	kernel.asm	/^ffff800000100939:	8b 95 20 ff ff ff    	mov    -0xe0(%rbp),%edx$/;"	l
ffff80000010093f	kernel.asm	/^ffff80000010093f:	89 d2                	mov    %edx,%edx$/;"	l
ffff800000100941	kernel.asm	/^ffff800000100941:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff800000100944	kernel.asm	/^ffff800000100944:	8b 95 20 ff ff ff    	mov    -0xe0(%rbp),%edx$/;"	l
ffff80000010094a	kernel.asm	/^ffff80000010094a:	83 c2 08             	add    $0x8,%edx$/;"	l
ffff80000010094d	kernel.asm	/^ffff80000010094d:	89 95 20 ff ff ff    	mov    %edx,-0xe0(%rbp)$/;"	l
ffff800000100953	kernel.asm	/^ffff800000100953:	eb 12                	jmp    ffff800000100967 <cprintf+0x1bb>$/;"	l
ffff800000100955	kernel.asm	/^ffff800000100955:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax$/;"	l
ffff80000010095c	kernel.asm	/^ffff80000010095c:	48 8d 50 08          	lea    0x8(%rax),%rdx$/;"	l
ffff800000100960	kernel.asm	/^ffff800000100960:	48 89 95 28 ff ff ff 	mov    %rdx,-0xd8(%rbp)$/;"	l
ffff800000100967	kernel.asm	/^ffff800000100967:	8b 00                	mov    (%rax),%eax$/;"	l
ffff800000100969	kernel.asm	/^ffff800000100969:	ba 01 00 00 00       	mov    $0x1,%edx$/;"	l
ffff80000010096e	kernel.asm	/^ffff80000010096e:	be 0a 00 00 00       	mov    $0xa,%esi$/;"	l
ffff800000100973	kernel.asm	/^ffff800000100973:	89 c7                	mov    %eax,%edi$/;"	l
ffff800000100975	kernel.asm	/^ffff800000100975:	48 b8 d9 06 10 00 00 	movabs $0xffff8000001006d9,%rax$/;"	l
ffff80000010097c	kernel.asm	/^ffff80000010097c:	80 ff ff $/;"	l
ffff80000010097f	kernel.asm	/^ffff80000010097f:	ff d0                	callq  *%rax$/;"	l
ffff800000100981	kernel.asm	/^ffff800000100981:	e9 89 01 00 00       	jmpq   ffff800000100b0f <cprintf+0x363>$/;"	l
ffff800000100986	kernel.asm	/^ffff800000100986:	8b 85 20 ff ff ff    	mov    -0xe0(%rbp),%eax$/;"	l
ffff80000010098c	kernel.asm	/^ffff80000010098c:	83 f8 30             	cmp    $0x30,%eax$/;"	l
ffff80000010098f	kernel.asm	/^ffff80000010098f:	73 23                	jae    ffff8000001009b4 <cprintf+0x208>$/;"	l
ffff800000100991	kernel.asm	/^ffff800000100991:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax$/;"	l
ffff800000100998	kernel.asm	/^ffff800000100998:	8b 95 20 ff ff ff    	mov    -0xe0(%rbp),%edx$/;"	l
ffff80000010099e	kernel.asm	/^ffff80000010099e:	89 d2                	mov    %edx,%edx$/;"	l
ffff8000001009a0	kernel.asm	/^ffff8000001009a0:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff8000001009a3	kernel.asm	/^ffff8000001009a3:	8b 95 20 ff ff ff    	mov    -0xe0(%rbp),%edx$/;"	l
ffff8000001009a9	kernel.asm	/^ffff8000001009a9:	83 c2 08             	add    $0x8,%edx$/;"	l
ffff8000001009ac	kernel.asm	/^ffff8000001009ac:	89 95 20 ff ff ff    	mov    %edx,-0xe0(%rbp)$/;"	l
ffff8000001009b2	kernel.asm	/^ffff8000001009b2:	eb 12                	jmp    ffff8000001009c6 <cprintf+0x21a>$/;"	l
ffff8000001009b4	kernel.asm	/^ffff8000001009b4:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax$/;"	l
ffff8000001009bb	kernel.asm	/^ffff8000001009bb:	48 8d 50 08          	lea    0x8(%rax),%rdx$/;"	l
ffff8000001009bf	kernel.asm	/^ffff8000001009bf:	48 89 95 28 ff ff ff 	mov    %rdx,-0xd8(%rbp)$/;"	l
ffff8000001009c6	kernel.asm	/^ffff8000001009c6:	8b 00                	mov    (%rax),%eax$/;"	l
ffff8000001009c8	kernel.asm	/^ffff8000001009c8:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
ffff8000001009cd	kernel.asm	/^ffff8000001009cd:	be 10 00 00 00       	mov    $0x10,%esi$/;"	l
ffff8000001009d2	kernel.asm	/^ffff8000001009d2:	89 c7                	mov    %eax,%edi$/;"	l
ffff8000001009d4	kernel.asm	/^ffff8000001009d4:	48 b8 d9 06 10 00 00 	movabs $0xffff8000001006d9,%rax$/;"	l
ffff8000001009db	kernel.asm	/^ffff8000001009db:	80 ff ff $/;"	l
ffff8000001009de	kernel.asm	/^ffff8000001009de:	ff d0                	callq  *%rax$/;"	l
ffff8000001009e0	kernel.asm	/^ffff8000001009e0:	e9 2a 01 00 00       	jmpq   ffff800000100b0f <cprintf+0x363>$/;"	l
ffff8000001009e5	kernel.asm	/^ffff8000001009e5:	8b 85 20 ff ff ff    	mov    -0xe0(%rbp),%eax$/;"	l
ffff8000001009eb	kernel.asm	/^ffff8000001009eb:	83 f8 30             	cmp    $0x30,%eax$/;"	l
ffff8000001009ee	kernel.asm	/^ffff8000001009ee:	73 23                	jae    ffff800000100a13 <cprintf+0x267>$/;"	l
ffff8000001009f0	kernel.asm	/^ffff8000001009f0:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax$/;"	l
ffff8000001009f7	kernel.asm	/^ffff8000001009f7:	8b 95 20 ff ff ff    	mov    -0xe0(%rbp),%edx$/;"	l
ffff8000001009fd	kernel.asm	/^ffff8000001009fd:	89 d2                	mov    %edx,%edx$/;"	l
ffff8000001009ff	kernel.asm	/^ffff8000001009ff:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff800000100a02	kernel.asm	/^ffff800000100a02:	8b 95 20 ff ff ff    	mov    -0xe0(%rbp),%edx$/;"	l
ffff800000100a08	kernel.asm	/^ffff800000100a08:	83 c2 08             	add    $0x8,%edx$/;"	l
ffff800000100a0b	kernel.asm	/^ffff800000100a0b:	89 95 20 ff ff ff    	mov    %edx,-0xe0(%rbp)$/;"	l
ffff800000100a11	kernel.asm	/^ffff800000100a11:	eb 12                	jmp    ffff800000100a25 <cprintf+0x279>$/;"	l
ffff800000100a13	kernel.asm	/^ffff800000100a13:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax$/;"	l
ffff800000100a1a	kernel.asm	/^ffff800000100a1a:	48 8d 50 08          	lea    0x8(%rax),%rdx$/;"	l
ffff800000100a1e	kernel.asm	/^ffff800000100a1e:	48 89 95 28 ff ff ff 	mov    %rdx,-0xd8(%rbp)$/;"	l
ffff800000100a25	kernel.asm	/^ffff800000100a25:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff800000100a28	kernel.asm	/^ffff800000100a28:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000100a2b	kernel.asm	/^ffff800000100a2b:	48 b8 86 06 10 00 00 	movabs $0xffff800000100686,%rax$/;"	l
ffff800000100a32	kernel.asm	/^ffff800000100a32:	80 ff ff $/;"	l
ffff800000100a35	kernel.asm	/^ffff800000100a35:	ff d0                	callq  *%rax$/;"	l
ffff800000100a37	kernel.asm	/^ffff800000100a37:	e9 d3 00 00 00       	jmpq   ffff800000100b0f <cprintf+0x363>$/;"	l
ffff800000100a3c	kernel.asm	/^ffff800000100a3c:	8b 85 20 ff ff ff    	mov    -0xe0(%rbp),%eax$/;"	l
ffff800000100a42	kernel.asm	/^ffff800000100a42:	83 f8 30             	cmp    $0x30,%eax$/;"	l
ffff800000100a45	kernel.asm	/^ffff800000100a45:	73 23                	jae    ffff800000100a6a <cprintf+0x2be>$/;"	l
ffff800000100a47	kernel.asm	/^ffff800000100a47:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax$/;"	l
ffff800000100a4e	kernel.asm	/^ffff800000100a4e:	8b 95 20 ff ff ff    	mov    -0xe0(%rbp),%edx$/;"	l
ffff800000100a54	kernel.asm	/^ffff800000100a54:	89 d2                	mov    %edx,%edx$/;"	l
ffff800000100a56	kernel.asm	/^ffff800000100a56:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff800000100a59	kernel.asm	/^ffff800000100a59:	8b 95 20 ff ff ff    	mov    -0xe0(%rbp),%edx$/;"	l
ffff800000100a5f	kernel.asm	/^ffff800000100a5f:	83 c2 08             	add    $0x8,%edx$/;"	l
ffff800000100a62	kernel.asm	/^ffff800000100a62:	89 95 20 ff ff ff    	mov    %edx,-0xe0(%rbp)$/;"	l
ffff800000100a68	kernel.asm	/^ffff800000100a68:	eb 12                	jmp    ffff800000100a7c <cprintf+0x2d0>$/;"	l
ffff800000100a6a	kernel.asm	/^ffff800000100a6a:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax$/;"	l
ffff800000100a71	kernel.asm	/^ffff800000100a71:	48 8d 50 08          	lea    0x8(%rax),%rdx$/;"	l
ffff800000100a75	kernel.asm	/^ffff800000100a75:	48 89 95 28 ff ff ff 	mov    %rdx,-0xd8(%rbp)$/;"	l
ffff800000100a7c	kernel.asm	/^ffff800000100a7c:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff800000100a7f	kernel.asm	/^ffff800000100a7f:	48 89 85 40 ff ff ff 	mov    %rax,-0xc0(%rbp)$/;"	l
ffff800000100a86	kernel.asm	/^ffff800000100a86:	48 83 bd 40 ff ff ff 	cmpq   $0x0,-0xc0(%rbp)$/;"	l
ffff800000100a8d	kernel.asm	/^ffff800000100a8d:	00 $/;"	l
ffff800000100a8e	kernel.asm	/^ffff800000100a8e:	75 36                	jne    ffff800000100ac6 <cprintf+0x31a>$/;"	l
ffff800000100a90	kernel.asm	/^ffff800000100a90:	48 b8 3e c2 10 00 00 	movabs $0xffff80000010c23e,%rax$/;"	l
ffff800000100a97	kernel.asm	/^ffff800000100a97:	80 ff ff $/;"	l
ffff800000100a9a	kernel.asm	/^ffff800000100a9a:	48 89 85 40 ff ff ff 	mov    %rax,-0xc0(%rbp)$/;"	l
ffff800000100aa1	kernel.asm	/^ffff800000100aa1:	eb 23                	jmp    ffff800000100ac6 <cprintf+0x31a>$/;"	l
ffff800000100aa3	kernel.asm	/^ffff800000100aa3:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax$/;"	l
ffff800000100aaa	kernel.asm	/^ffff800000100aaa:	0f b6 00             	movzbl (%rax),%eax$/;"	l
ffff800000100aad	kernel.asm	/^ffff800000100aad:	0f be c0             	movsbl %al,%eax$/;"	l
ffff800000100ab0	kernel.asm	/^ffff800000100ab0:	89 c7                	mov    %eax,%edi$/;"	l
ffff800000100ab2	kernel.asm	/^ffff800000100ab2:	48 b8 3b 0e 10 00 00 	movabs $0xffff800000100e3b,%rax$/;"	l
ffff800000100ab9	kernel.asm	/^ffff800000100ab9:	80 ff ff $/;"	l
ffff800000100abc	kernel.asm	/^ffff800000100abc:	ff d0                	callq  *%rax$/;"	l
ffff800000100abe	kernel.asm	/^ffff800000100abe:	48 83 85 40 ff ff ff 	addq   $0x1,-0xc0(%rbp)$/;"	l
ffff800000100ac5	kernel.asm	/^ffff800000100ac5:	01 $/;"	l
ffff800000100ac6	kernel.asm	/^ffff800000100ac6:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax$/;"	l
ffff800000100acd	kernel.asm	/^ffff800000100acd:	0f b6 00             	movzbl (%rax),%eax$/;"	l
ffff800000100ad0	kernel.asm	/^ffff800000100ad0:	84 c0                	test   %al,%al$/;"	l
ffff800000100ad2	kernel.asm	/^ffff800000100ad2:	75 cf                	jne    ffff800000100aa3 <cprintf+0x2f7>$/;"	l
ffff800000100ad4	kernel.asm	/^ffff800000100ad4:	eb 39                	jmp    ffff800000100b0f <cprintf+0x363>$/;"	l
ffff800000100ad6	kernel.asm	/^ffff800000100ad6:	bf 25 00 00 00       	mov    $0x25,%edi$/;"	l
ffff800000100adb	kernel.asm	/^ffff800000100adb:	48 b8 3b 0e 10 00 00 	movabs $0xffff800000100e3b,%rax$/;"	l
ffff800000100ae2	kernel.asm	/^ffff800000100ae2:	80 ff ff $/;"	l
ffff800000100ae5	kernel.asm	/^ffff800000100ae5:	ff d0                	callq  *%rax$/;"	l
ffff800000100ae7	kernel.asm	/^ffff800000100ae7:	eb 26                	jmp    ffff800000100b0f <cprintf+0x363>$/;"	l
ffff800000100ae9	kernel.asm	/^ffff800000100ae9:	bf 25 00 00 00       	mov    $0x25,%edi$/;"	l
ffff800000100aee	kernel.asm	/^ffff800000100aee:	48 b8 3b 0e 10 00 00 	movabs $0xffff800000100e3b,%rax$/;"	l
ffff800000100af5	kernel.asm	/^ffff800000100af5:	80 ff ff $/;"	l
ffff800000100af8	kernel.asm	/^ffff800000100af8:	ff d0                	callq  *%rax$/;"	l
ffff800000100afa	kernel.asm	/^ffff800000100afa:	8b 85 38 ff ff ff    	mov    -0xc8(%rbp),%eax$/;"	l
ffff800000100b00	kernel.asm	/^ffff800000100b00:	89 c7                	mov    %eax,%edi$/;"	l
ffff800000100b02	kernel.asm	/^ffff800000100b02:	48 b8 3b 0e 10 00 00 	movabs $0xffff800000100e3b,%rax$/;"	l
ffff800000100b09	kernel.asm	/^ffff800000100b09:	80 ff ff $/;"	l
ffff800000100b0c	kernel.asm	/^ffff800000100b0c:	ff d0                	callq  *%rax$/;"	l
ffff800000100b0e	kernel.asm	/^ffff800000100b0e:	90                   	nop$/;"	l
ffff800000100b0f	kernel.asm	/^ffff800000100b0f:	83 85 4c ff ff ff 01 	addl   $0x1,-0xb4(%rbp)$/;"	l
ffff800000100b16	kernel.asm	/^ffff800000100b16:	8b 85 4c ff ff ff    	mov    -0xb4(%rbp),%eax$/;"	l
ffff800000100b1c	kernel.asm	/^ffff800000100b1c:	48 63 d0             	movslq %eax,%rdx$/;"	l
ffff800000100b1f	kernel.asm	/^ffff800000100b1f:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax$/;"	l
ffff800000100b26	kernel.asm	/^ffff800000100b26:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff800000100b29	kernel.asm	/^ffff800000100b29:	0f b6 00             	movzbl (%rax),%eax$/;"	l
ffff800000100b2c	kernel.asm	/^ffff800000100b2c:	0f be c0             	movsbl %al,%eax$/;"	l
ffff800000100b2f	kernel.asm	/^ffff800000100b2f:	25 ff 00 00 00       	and    $0xff,%eax$/;"	l
ffff800000100b34	kernel.asm	/^ffff800000100b34:	89 85 38 ff ff ff    	mov    %eax,-0xc8(%rbp)$/;"	l
ffff800000100b3a	kernel.asm	/^ffff800000100b3a:	83 bd 38 ff ff ff 00 	cmpl   $0x0,-0xc8(%rbp)$/;"	l
ffff800000100b41	kernel.asm	/^ffff800000100b41:	0f 85 4c fd ff ff    	jne    ffff800000100893 <cprintf+0xe7>$/;"	l
ffff800000100b47	kernel.asm	/^ffff800000100b47:	eb 01                	jmp    ffff800000100b4a <cprintf+0x39e>$/;"	l
ffff800000100b49	kernel.asm	/^ffff800000100b49:	90                   	nop$/;"	l
ffff800000100b4a	kernel.asm	/^ffff800000100b4a:	83 bd 3c ff ff ff 00 	cmpl   $0x0,-0xc4(%rbp)$/;"	l
ffff800000100b51	kernel.asm	/^ffff800000100b51:	74 16                	je     ffff800000100b69 <cprintf+0x3bd>$/;"	l
ffff800000100b53	kernel.asm	/^ffff800000100b53:	48 bf c0 44 11 00 00 	movabs $0xffff8000001144c0,%rdi$/;"	l
ffff800000100b5a	kernel.asm	/^ffff800000100b5a:	80 ff ff $/;"	l
ffff800000100b5d	kernel.asm	/^ffff800000100b5d:	48 b8 9a 79 10 00 00 	movabs $0xffff80000010799a,%rax$/;"	l
ffff800000100b64	kernel.asm	/^ffff800000100b64:	80 ff ff $/;"	l
ffff800000100b67	kernel.asm	/^ffff800000100b67:	ff d0                	callq  *%rax$/;"	l
ffff800000100b69	kernel.asm	/^ffff800000100b69:	90                   	nop$/;"	l
ffff800000100b6a	kernel.asm	/^ffff800000100b6a:	c9                   	leaveq $/;"	l
ffff800000100b6b	kernel.asm	/^ffff800000100b6b:	c3                   	retq   $/;"	l
ffff800000100b6c	kernel.asm	/^ffff800000100b6c <panic>:$/;"	l
ffff800000100b6c	kernel.asm	/^ffff800000100b6c:	55                   	push   %rbp$/;"	l
ffff800000100b6d	kernel.asm	/^ffff800000100b6d:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000100b70	kernel.asm	/^ffff800000100b70:	48 83 ec 70          	sub    $0x70,%rsp$/;"	l
ffff800000100b74	kernel.asm	/^ffff800000100b74:	48 89 7d 98          	mov    %rdi,-0x68(%rbp)$/;"	l
ffff800000100b78	kernel.asm	/^ffff800000100b78:	48 b8 7e 06 10 00 00 	movabs $0xffff80000010067e,%rax$/;"	l
ffff800000100b7f	kernel.asm	/^ffff800000100b7f:	80 ff ff $/;"	l
ffff800000100b82	kernel.asm	/^ffff800000100b82:	ff d0                	callq  *%rax$/;"	l
ffff800000100b84	kernel.asm	/^ffff800000100b84:	48 b8 c0 44 11 00 00 	movabs $0xffff8000001144c0,%rax$/;"	l
ffff800000100b8b	kernel.asm	/^ffff800000100b8b:	80 ff ff $/;"	l
ffff800000100b8e	kernel.asm	/^ffff800000100b8e:	c7 40 68 00 00 00 00 	movl   $0x0,0x68(%rax)$/;"	l
ffff800000100b95	kernel.asm	/^ffff800000100b95:	48 c7 c0 f0 ff ff ff 	mov    $0xfffffffffffffff0,%rax$/;"	l
ffff800000100b9c	kernel.asm	/^ffff800000100b9c:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000100ba0	kernel.asm	/^ffff800000100ba0:	0f b6 00             	movzbl (%rax),%eax$/;"	l
ffff800000100ba3	kernel.asm	/^ffff800000100ba3:	0f b6 c0             	movzbl %al,%eax$/;"	l
ffff800000100ba6	kernel.asm	/^ffff800000100ba6:	89 c6                	mov    %eax,%esi$/;"	l
ffff800000100ba8	kernel.asm	/^ffff800000100ba8:	48 bf 45 c2 10 00 00 	movabs $0xffff80000010c245,%rdi$/;"	l
ffff800000100baf	kernel.asm	/^ffff800000100baf:	80 ff ff $/;"	l
ffff800000100bb2	kernel.asm	/^ffff800000100bb2:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000100bb7	kernel.asm	/^ffff800000100bb7:	48 ba ac 07 10 00 00 	movabs $0xffff8000001007ac,%rdx$/;"	l
ffff800000100bbe	kernel.asm	/^ffff800000100bbe:	80 ff ff $/;"	l
ffff800000100bc1	kernel.asm	/^ffff800000100bc1:	ff d2                	callq  *%rdx$/;"	l
ffff800000100bc3	kernel.asm	/^ffff800000100bc3:	48 8b 45 98          	mov    -0x68(%rbp),%rax$/;"	l
ffff800000100bc7	kernel.asm	/^ffff800000100bc7:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000100bca	kernel.asm	/^ffff800000100bca:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000100bcf	kernel.asm	/^ffff800000100bcf:	48 ba ac 07 10 00 00 	movabs $0xffff8000001007ac,%rdx$/;"	l
ffff800000100bd6	kernel.asm	/^ffff800000100bd6:	80 ff ff $/;"	l
ffff800000100bd9	kernel.asm	/^ffff800000100bd9:	ff d2                	callq  *%rdx$/;"	l
ffff800000100bdb	kernel.asm	/^ffff800000100bdb:	48 bf 54 c2 10 00 00 	movabs $0xffff80000010c254,%rdi$/;"	l
ffff800000100be2	kernel.asm	/^ffff800000100be2:	80 ff ff $/;"	l
ffff800000100be5	kernel.asm	/^ffff800000100be5:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000100bea	kernel.asm	/^ffff800000100bea:	48 ba ac 07 10 00 00 	movabs $0xffff8000001007ac,%rdx$/;"	l
ffff800000100bf1	kernel.asm	/^ffff800000100bf1:	80 ff ff $/;"	l
ffff800000100bf4	kernel.asm	/^ffff800000100bf4:	ff d2                	callq  *%rdx$/;"	l
ffff800000100bf6	kernel.asm	/^ffff800000100bf6:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx$/;"	l
ffff800000100bfa	kernel.asm	/^ffff800000100bfa:	48 8d 45 98          	lea    -0x68(%rbp),%rax$/;"	l
ffff800000100bfe	kernel.asm	/^ffff800000100bfe:	48 89 d6             	mov    %rdx,%rsi$/;"	l
ffff800000100c01	kernel.asm	/^ffff800000100c01:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000100c04	kernel.asm	/^ffff800000100c04:	48 b8 0b 7a 10 00 00 	movabs $0xffff800000107a0b,%rax$/;"	l
ffff800000100c0b	kernel.asm	/^ffff800000100c0b:	80 ff ff $/;"	l
ffff800000100c0e	kernel.asm	/^ffff800000100c0e:	ff d0                	callq  *%rax$/;"	l
ffff800000100c10	kernel.asm	/^ffff800000100c10:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)$/;"	l
ffff800000100c17	kernel.asm	/^ffff800000100c17:	eb 2c                	jmp    ffff800000100c45 <panic+0xd9>$/;"	l
ffff800000100c19	kernel.asm	/^ffff800000100c19:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff800000100c1c	kernel.asm	/^ffff800000100c1c:	48 98                	cltq   $/;"	l
ffff800000100c1e	kernel.asm	/^ffff800000100c1e:	48 8b 44 c5 a0       	mov    -0x60(%rbp,%rax,8),%rax$/;"	l
ffff800000100c23	kernel.asm	/^ffff800000100c23:	48 89 c6             	mov    %rax,%rsi$/;"	l
ffff800000100c26	kernel.asm	/^ffff800000100c26:	48 bf 56 c2 10 00 00 	movabs $0xffff80000010c256,%rdi$/;"	l
ffff800000100c2d	kernel.asm	/^ffff800000100c2d:	80 ff ff $/;"	l
ffff800000100c30	kernel.asm	/^ffff800000100c30:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000100c35	kernel.asm	/^ffff800000100c35:	48 ba ac 07 10 00 00 	movabs $0xffff8000001007ac,%rdx$/;"	l
ffff800000100c3c	kernel.asm	/^ffff800000100c3c:	80 ff ff $/;"	l
ffff800000100c3f	kernel.asm	/^ffff800000100c3f:	ff d2                	callq  *%rdx$/;"	l
ffff800000100c41	kernel.asm	/^ffff800000100c41:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)$/;"	l
ffff800000100c45	kernel.asm	/^ffff800000100c45:	83 7d fc 09          	cmpl   $0x9,-0x4(%rbp)$/;"	l
ffff800000100c49	kernel.asm	/^ffff800000100c49:	7e ce                	jle    ffff800000100c19 <panic+0xad>$/;"	l
ffff800000100c4b	kernel.asm	/^ffff800000100c4b:	48 b8 b8 44 11 00 00 	movabs $0xffff8000001144b8,%rax$/;"	l
ffff800000100c52	kernel.asm	/^ffff800000100c52:	80 ff ff $/;"	l
ffff800000100c55	kernel.asm	/^ffff800000100c55:	c7 00 01 00 00 00    	movl   $0x1,(%rax)$/;"	l
ffff800000100c5b	kernel.asm	/^ffff800000100c5b:	eb fe                	jmp    ffff800000100c5b <panic+0xef>$/;"	l
ffff800000100c5d	kernel.asm	/^ffff800000100c5d <cgaputc>:$/;"	l
ffff800000100c5d	kernel.asm	/^ffff800000100c5d:	55                   	push   %rbp$/;"	l
ffff800000100c5e	kernel.asm	/^ffff800000100c5e:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000100c61	kernel.asm	/^ffff800000100c61:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ffff800000100c65	kernel.asm	/^ffff800000100c65:	89 7d ec             	mov    %edi,-0x14(%rbp)$/;"	l
ffff800000100c68	kernel.asm	/^ffff800000100c68:	be 0e 00 00 00       	mov    $0xe,%esi$/;"	l
ffff800000100c6d	kernel.asm	/^ffff800000100c6d:	bf d4 03 00 00       	mov    $0x3d4,%edi$/;"	l
ffff800000100c72	kernel.asm	/^ffff800000100c72:	48 b8 10 06 10 00 00 	movabs $0xffff800000100610,%rax$/;"	l
ffff800000100c79	kernel.asm	/^ffff800000100c79:	80 ff ff $/;"	l
ffff800000100c7c	kernel.asm	/^ffff800000100c7c:	ff d0                	callq  *%rax$/;"	l
ffff800000100c7e	kernel.asm	/^ffff800000100c7e:	bf d5 03 00 00       	mov    $0x3d5,%edi$/;"	l
ffff800000100c83	kernel.asm	/^ffff800000100c83:	48 b8 f2 05 10 00 00 	movabs $0xffff8000001005f2,%rax$/;"	l
ffff800000100c8a	kernel.asm	/^ffff800000100c8a:	80 ff ff $/;"	l
ffff800000100c8d	kernel.asm	/^ffff800000100c8d:	ff d0                	callq  *%rax$/;"	l
ffff800000100c8f	kernel.asm	/^ffff800000100c8f:	0f b6 c0             	movzbl %al,%eax$/;"	l
ffff800000100c92	kernel.asm	/^ffff800000100c92:	c1 e0 08             	shl    $0x8,%eax$/;"	l
ffff800000100c95	kernel.asm	/^ffff800000100c95:	89 45 fc             	mov    %eax,-0x4(%rbp)$/;"	l
ffff800000100c98	kernel.asm	/^ffff800000100c98:	be 0f 00 00 00       	mov    $0xf,%esi$/;"	l
ffff800000100c9d	kernel.asm	/^ffff800000100c9d:	bf d4 03 00 00       	mov    $0x3d4,%edi$/;"	l
ffff800000100ca2	kernel.asm	/^ffff800000100ca2:	48 b8 10 06 10 00 00 	movabs $0xffff800000100610,%rax$/;"	l
ffff800000100ca9	kernel.asm	/^ffff800000100ca9:	80 ff ff $/;"	l
ffff800000100cac	kernel.asm	/^ffff800000100cac:	ff d0                	callq  *%rax$/;"	l
ffff800000100cae	kernel.asm	/^ffff800000100cae:	bf d5 03 00 00       	mov    $0x3d5,%edi$/;"	l
ffff800000100cb3	kernel.asm	/^ffff800000100cb3:	48 b8 f2 05 10 00 00 	movabs $0xffff8000001005f2,%rax$/;"	l
ffff800000100cba	kernel.asm	/^ffff800000100cba:	80 ff ff $/;"	l
ffff800000100cbd	kernel.asm	/^ffff800000100cbd:	ff d0                	callq  *%rax$/;"	l
ffff800000100cbf	kernel.asm	/^ffff800000100cbf:	0f b6 c0             	movzbl %al,%eax$/;"	l
ffff800000100cc2	kernel.asm	/^ffff800000100cc2:	09 45 fc             	or     %eax,-0x4(%rbp)$/;"	l
ffff800000100cc5	kernel.asm	/^ffff800000100cc5:	83 7d ec 0a          	cmpl   $0xa,-0x14(%rbp)$/;"	l
ffff800000100cc9	kernel.asm	/^ffff800000100cc9:	75 30                	jne    ffff800000100cfb <cgaputc+0x9e>$/;"	l
ffff800000100ccb	kernel.asm	/^ffff800000100ccb:	8b 4d fc             	mov    -0x4(%rbp),%ecx$/;"	l
ffff800000100cce	kernel.asm	/^ffff800000100cce:	ba 67 66 66 66       	mov    $0x66666667,%edx$/;"	l
ffff800000100cd3	kernel.asm	/^ffff800000100cd3:	89 c8                	mov    %ecx,%eax$/;"	l
ffff800000100cd5	kernel.asm	/^ffff800000100cd5:	f7 ea                	imul   %edx$/;"	l
ffff800000100cd7	kernel.asm	/^ffff800000100cd7:	c1 fa 05             	sar    $0x5,%edx$/;"	l
ffff800000100cda	kernel.asm	/^ffff800000100cda:	89 c8                	mov    %ecx,%eax$/;"	l
ffff800000100cdc	kernel.asm	/^ffff800000100cdc:	c1 f8 1f             	sar    $0x1f,%eax$/;"	l
ffff800000100cdf	kernel.asm	/^ffff800000100cdf:	29 c2                	sub    %eax,%edx$/;"	l
ffff800000100ce1	kernel.asm	/^ffff800000100ce1:	89 d0                	mov    %edx,%eax$/;"	l
ffff800000100ce3	kernel.asm	/^ffff800000100ce3:	c1 e0 02             	shl    $0x2,%eax$/;"	l
ffff800000100ce6	kernel.asm	/^ffff800000100ce6:	01 d0                	add    %edx,%eax$/;"	l
ffff800000100ce8	kernel.asm	/^ffff800000100ce8:	c1 e0 04             	shl    $0x4,%eax$/;"	l
ffff800000100ceb	kernel.asm	/^ffff800000100ceb:	29 c1                	sub    %eax,%ecx$/;"	l
ffff800000100ced	kernel.asm	/^ffff800000100ced:	89 ca                	mov    %ecx,%edx$/;"	l
ffff800000100cef	kernel.asm	/^ffff800000100cef:	b8 50 00 00 00       	mov    $0x50,%eax$/;"	l
ffff800000100cf4	kernel.asm	/^ffff800000100cf4:	29 d0                	sub    %edx,%eax$/;"	l
ffff800000100cf6	kernel.asm	/^ffff800000100cf6:	01 45 fc             	add    %eax,-0x4(%rbp)$/;"	l
ffff800000100cf9	kernel.asm	/^ffff800000100cf9:	eb 3f                	jmp    ffff800000100d3a <cgaputc+0xdd>$/;"	l
ffff800000100cfb	kernel.asm	/^ffff800000100cfb:	81 7d ec 00 01 00 00 	cmpl   $0x100,-0x14(%rbp)$/;"	l
ffff800000100d02	kernel.asm	/^ffff800000100d02:	75 0c                	jne    ffff800000100d10 <cgaputc+0xb3>$/;"	l
ffff800000100d04	kernel.asm	/^ffff800000100d04:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)$/;"	l
ffff800000100d08	kernel.asm	/^ffff800000100d08:	7e 30                	jle    ffff800000100d3a <cgaputc+0xdd>$/;"	l
ffff800000100d0a	kernel.asm	/^ffff800000100d0a:	83 6d fc 01          	subl   $0x1,-0x4(%rbp)$/;"	l
ffff800000100d0e	kernel.asm	/^ffff800000100d0e:	eb 2a                	jmp    ffff800000100d3a <cgaputc+0xdd>$/;"	l
ffff800000100d10	kernel.asm	/^ffff800000100d10:	48 b8 18 d0 10 00 00 	movabs $0xffff80000010d018,%rax$/;"	l
ffff800000100d17	kernel.asm	/^ffff800000100d17:	80 ff ff $/;"	l
ffff800000100d1a	kernel.asm	/^ffff800000100d1a:	48 8b 08             	mov    (%rax),%rcx$/;"	l
ffff800000100d1d	kernel.asm	/^ffff800000100d1d:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff800000100d20	kernel.asm	/^ffff800000100d20:	8d 50 01             	lea    0x1(%rax),%edx$/;"	l
ffff800000100d23	kernel.asm	/^ffff800000100d23:	89 55 fc             	mov    %edx,-0x4(%rbp)$/;"	l
ffff800000100d26	kernel.asm	/^ffff800000100d26:	48 98                	cltq   $/;"	l
ffff800000100d28	kernel.asm	/^ffff800000100d28:	48 01 c0             	add    %rax,%rax$/;"	l
ffff800000100d2b	kernel.asm	/^ffff800000100d2b:	48 01 c8             	add    %rcx,%rax$/;"	l
ffff800000100d2e	kernel.asm	/^ffff800000100d2e:	8b 55 ec             	mov    -0x14(%rbp),%edx$/;"	l
ffff800000100d31	kernel.asm	/^ffff800000100d31:	0f b6 d2             	movzbl %dl,%edx$/;"	l
ffff800000100d34	kernel.asm	/^ffff800000100d34:	80 ce 07             	or     $0x7,%dh$/;"	l
ffff800000100d37	kernel.asm	/^ffff800000100d37:	66 89 10             	mov    %dx,(%rax)$/;"	l
ffff800000100d3a	kernel.asm	/^ffff800000100d3a:	81 7d fc 7f 07 00 00 	cmpl   $0x77f,-0x4(%rbp)$/;"	l
ffff800000100d41	kernel.asm	/^ffff800000100d41:	7e 76                	jle    ffff800000100db9 <cgaputc+0x15c>$/;"	l
ffff800000100d43	kernel.asm	/^ffff800000100d43:	48 b8 18 d0 10 00 00 	movabs $0xffff80000010d018,%rax$/;"	l
ffff800000100d4a	kernel.asm	/^ffff800000100d4a:	80 ff ff $/;"	l
ffff800000100d4d	kernel.asm	/^ffff800000100d4d:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff800000100d50	kernel.asm	/^ffff800000100d50:	48 8d 88 a0 00 00 00 	lea    0xa0(%rax),%rcx$/;"	l
ffff800000100d57	kernel.asm	/^ffff800000100d57:	48 b8 18 d0 10 00 00 	movabs $0xffff80000010d018,%rax$/;"	l
ffff800000100d5e	kernel.asm	/^ffff800000100d5e:	80 ff ff $/;"	l
ffff800000100d61	kernel.asm	/^ffff800000100d61:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff800000100d64	kernel.asm	/^ffff800000100d64:	ba 60 0e 00 00       	mov    $0xe60,%edx$/;"	l
ffff800000100d69	kernel.asm	/^ffff800000100d69:	48 89 ce             	mov    %rcx,%rsi$/;"	l
ffff800000100d6c	kernel.asm	/^ffff800000100d6c:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000100d6f	kernel.asm	/^ffff800000100d6f:	48 b8 9a 7d 10 00 00 	movabs $0xffff800000107d9a,%rax$/;"	l
ffff800000100d76	kernel.asm	/^ffff800000100d76:	80 ff ff $/;"	l
ffff800000100d79	kernel.asm	/^ffff800000100d79:	ff d0                	callq  *%rax$/;"	l
ffff800000100d7b	kernel.asm	/^ffff800000100d7b:	83 6d fc 50          	subl   $0x50,-0x4(%rbp)$/;"	l
ffff800000100d7f	kernel.asm	/^ffff800000100d7f:	b8 80 07 00 00       	mov    $0x780,%eax$/;"	l
ffff800000100d84	kernel.asm	/^ffff800000100d84:	2b 45 fc             	sub    -0x4(%rbp),%eax$/;"	l
ffff800000100d87	kernel.asm	/^ffff800000100d87:	48 98                	cltq   $/;"	l
ffff800000100d89	kernel.asm	/^ffff800000100d89:	8d 14 00             	lea    (%rax,%rax,1),%edx$/;"	l
ffff800000100d8c	kernel.asm	/^ffff800000100d8c:	48 b8 18 d0 10 00 00 	movabs $0xffff80000010d018,%rax$/;"	l
ffff800000100d93	kernel.asm	/^ffff800000100d93:	80 ff ff $/;"	l
ffff800000100d96	kernel.asm	/^ffff800000100d96:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff800000100d99	kernel.asm	/^ffff800000100d99:	8b 4d fc             	mov    -0x4(%rbp),%ecx$/;"	l
ffff800000100d9c	kernel.asm	/^ffff800000100d9c:	48 63 c9             	movslq %ecx,%rcx$/;"	l
ffff800000100d9f	kernel.asm	/^ffff800000100d9f:	48 01 c9             	add    %rcx,%rcx$/;"	l
ffff800000100da2	kernel.asm	/^ffff800000100da2:	48 01 c8             	add    %rcx,%rax$/;"	l
ffff800000100da5	kernel.asm	/^ffff800000100da5:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffff800000100daa	kernel.asm	/^ffff800000100daa:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000100dad	kernel.asm	/^ffff800000100dad:	48 b8 9d 7c 10 00 00 	movabs $0xffff800000107c9d,%rax$/;"	l
ffff800000100db4	kernel.asm	/^ffff800000100db4:	80 ff ff $/;"	l
ffff800000100db7	kernel.asm	/^ffff800000100db7:	ff d0                	callq  *%rax$/;"	l
ffff800000100db9	kernel.asm	/^ffff800000100db9:	be 0e 00 00 00       	mov    $0xe,%esi$/;"	l
ffff800000100dbe	kernel.asm	/^ffff800000100dbe:	bf d4 03 00 00       	mov    $0x3d4,%edi$/;"	l
ffff800000100dc3	kernel.asm	/^ffff800000100dc3:	48 b8 10 06 10 00 00 	movabs $0xffff800000100610,%rax$/;"	l
ffff800000100dca	kernel.asm	/^ffff800000100dca:	80 ff ff $/;"	l
ffff800000100dcd	kernel.asm	/^ffff800000100dcd:	ff d0                	callq  *%rax$/;"	l
ffff800000100dcf	kernel.asm	/^ffff800000100dcf:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff800000100dd2	kernel.asm	/^ffff800000100dd2:	c1 f8 08             	sar    $0x8,%eax$/;"	l
ffff800000100dd5	kernel.asm	/^ffff800000100dd5:	0f b6 c0             	movzbl %al,%eax$/;"	l
ffff800000100dd8	kernel.asm	/^ffff800000100dd8:	89 c6                	mov    %eax,%esi$/;"	l
ffff800000100dda	kernel.asm	/^ffff800000100dda:	bf d5 03 00 00       	mov    $0x3d5,%edi$/;"	l
ffff800000100ddf	kernel.asm	/^ffff800000100ddf:	48 b8 10 06 10 00 00 	movabs $0xffff800000100610,%rax$/;"	l
ffff800000100de6	kernel.asm	/^ffff800000100de6:	80 ff ff $/;"	l
ffff800000100de9	kernel.asm	/^ffff800000100de9:	ff d0                	callq  *%rax$/;"	l
ffff800000100deb	kernel.asm	/^ffff800000100deb:	be 0f 00 00 00       	mov    $0xf,%esi$/;"	l
ffff800000100df0	kernel.asm	/^ffff800000100df0:	bf d4 03 00 00       	mov    $0x3d4,%edi$/;"	l
ffff800000100df5	kernel.asm	/^ffff800000100df5:	48 b8 10 06 10 00 00 	movabs $0xffff800000100610,%rax$/;"	l
ffff800000100dfc	kernel.asm	/^ffff800000100dfc:	80 ff ff $/;"	l
ffff800000100dff	kernel.asm	/^ffff800000100dff:	ff d0                	callq  *%rax$/;"	l
ffff800000100e01	kernel.asm	/^ffff800000100e01:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff800000100e04	kernel.asm	/^ffff800000100e04:	0f b6 c0             	movzbl %al,%eax$/;"	l
ffff800000100e07	kernel.asm	/^ffff800000100e07:	89 c6                	mov    %eax,%esi$/;"	l
ffff800000100e09	kernel.asm	/^ffff800000100e09:	bf d5 03 00 00       	mov    $0x3d5,%edi$/;"	l
ffff800000100e0e	kernel.asm	/^ffff800000100e0e:	48 b8 10 06 10 00 00 	movabs $0xffff800000100610,%rax$/;"	l
ffff800000100e15	kernel.asm	/^ffff800000100e15:	80 ff ff $/;"	l
ffff800000100e18	kernel.asm	/^ffff800000100e18:	ff d0                	callq  *%rax$/;"	l
ffff800000100e1a	kernel.asm	/^ffff800000100e1a:	48 b8 18 d0 10 00 00 	movabs $0xffff80000010d018,%rax$/;"	l
ffff800000100e21	kernel.asm	/^ffff800000100e21:	80 ff ff $/;"	l
ffff800000100e24	kernel.asm	/^ffff800000100e24:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff800000100e27	kernel.asm	/^ffff800000100e27:	8b 55 fc             	mov    -0x4(%rbp),%edx$/;"	l
ffff800000100e2a	kernel.asm	/^ffff800000100e2a:	48 63 d2             	movslq %edx,%rdx$/;"	l
ffff800000100e2d	kernel.asm	/^ffff800000100e2d:	48 01 d2             	add    %rdx,%rdx$/;"	l
ffff800000100e30	kernel.asm	/^ffff800000100e30:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff800000100e33	kernel.asm	/^ffff800000100e33:	66 c7 00 20 07       	movw   $0x720,(%rax)$/;"	l
ffff800000100e38	kernel.asm	/^ffff800000100e38:	90                   	nop$/;"	l
ffff800000100e39	kernel.asm	/^ffff800000100e39:	c9                   	leaveq $/;"	l
ffff800000100e3a	kernel.asm	/^ffff800000100e3a:	c3                   	retq   $/;"	l
ffff800000100e3b	kernel.asm	/^ffff800000100e3b <consputc>:$/;"	l
ffff800000100e3b	kernel.asm	/^ffff800000100e3b:	55                   	push   %rbp$/;"	l
ffff800000100e3c	kernel.asm	/^ffff800000100e3c:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000100e3f	kernel.asm	/^ffff800000100e3f:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff800000100e43	kernel.asm	/^ffff800000100e43:	89 7d fc             	mov    %edi,-0x4(%rbp)$/;"	l
ffff800000100e46	kernel.asm	/^ffff800000100e46:	48 b8 b8 44 11 00 00 	movabs $0xffff8000001144b8,%rax$/;"	l
ffff800000100e4d	kernel.asm	/^ffff800000100e4d:	80 ff ff $/;"	l
ffff800000100e50	kernel.asm	/^ffff800000100e50:	8b 00                	mov    (%rax),%eax$/;"	l
ffff800000100e52	kernel.asm	/^ffff800000100e52:	85 c0                	test   %eax,%eax$/;"	l
ffff800000100e54	kernel.asm	/^ffff800000100e54:	74 0e                	je     ffff800000100e64 <consputc+0x29>$/;"	l
ffff800000100e56	kernel.asm	/^ffff800000100e56:	48 b8 7e 06 10 00 00 	movabs $0xffff80000010067e,%rax$/;"	l
ffff800000100e5d	kernel.asm	/^ffff800000100e5d:	80 ff ff $/;"	l
ffff800000100e60	kernel.asm	/^ffff800000100e60:	ff d0                	callq  *%rax$/;"	l
ffff800000100e62	kernel.asm	/^ffff800000100e62:	eb fe                	jmp    ffff800000100e62 <consputc+0x27>$/;"	l
ffff800000100e64	kernel.asm	/^ffff800000100e64:	81 7d fc 00 01 00 00 	cmpl   $0x100,-0x4(%rbp)$/;"	l
ffff800000100e6b	kernel.asm	/^ffff800000100e6b:	75 35                	jne    ffff800000100ea2 <consputc+0x67>$/;"	l
ffff800000100e6d	kernel.asm	/^ffff800000100e6d:	bf 08 00 00 00       	mov    $0x8,%edi$/;"	l
ffff800000100e72	kernel.asm	/^ffff800000100e72:	48 b8 d4 a1 10 00 00 	movabs $0xffff80000010a1d4,%rax$/;"	l
ffff800000100e79	kernel.asm	/^ffff800000100e79:	80 ff ff $/;"	l
ffff800000100e7c	kernel.asm	/^ffff800000100e7c:	ff d0                	callq  *%rax$/;"	l
ffff800000100e7e	kernel.asm	/^ffff800000100e7e:	bf 20 00 00 00       	mov    $0x20,%edi$/;"	l
ffff800000100e83	kernel.asm	/^ffff800000100e83:	48 b8 d4 a1 10 00 00 	movabs $0xffff80000010a1d4,%rax$/;"	l
ffff800000100e8a	kernel.asm	/^ffff800000100e8a:	80 ff ff $/;"	l
ffff800000100e8d	kernel.asm	/^ffff800000100e8d:	ff d0                	callq  *%rax$/;"	l
ffff800000100e8f	kernel.asm	/^ffff800000100e8f:	bf 08 00 00 00       	mov    $0x8,%edi$/;"	l
ffff800000100e94	kernel.asm	/^ffff800000100e94:	48 b8 d4 a1 10 00 00 	movabs $0xffff80000010a1d4,%rax$/;"	l
ffff800000100e9b	kernel.asm	/^ffff800000100e9b:	80 ff ff $/;"	l
ffff800000100e9e	kernel.asm	/^ffff800000100e9e:	ff d0                	callq  *%rax$/;"	l
ffff800000100ea0	kernel.asm	/^ffff800000100ea0:	eb 11                	jmp    ffff800000100eb3 <consputc+0x78>$/;"	l
ffff800000100ea2	kernel.asm	/^ffff800000100ea2:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff800000100ea5	kernel.asm	/^ffff800000100ea5:	89 c7                	mov    %eax,%edi$/;"	l
ffff800000100ea7	kernel.asm	/^ffff800000100ea7:	48 b8 d4 a1 10 00 00 	movabs $0xffff80000010a1d4,%rax$/;"	l
ffff800000100eae	kernel.asm	/^ffff800000100eae:	80 ff ff $/;"	l
ffff800000100eb1	kernel.asm	/^ffff800000100eb1:	ff d0                	callq  *%rax$/;"	l
ffff800000100eb3	kernel.asm	/^ffff800000100eb3:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff800000100eb6	kernel.asm	/^ffff800000100eb6:	89 c7                	mov    %eax,%edi$/;"	l
ffff800000100eb8	kernel.asm	/^ffff800000100eb8:	48 b8 5d 0c 10 00 00 	movabs $0xffff800000100c5d,%rax$/;"	l
ffff800000100ebf	kernel.asm	/^ffff800000100ebf:	80 ff ff $/;"	l
ffff800000100ec2	kernel.asm	/^ffff800000100ec2:	ff d0                	callq  *%rax$/;"	l
ffff800000100ec4	kernel.asm	/^ffff800000100ec4:	90                   	nop$/;"	l
ffff800000100ec5	kernel.asm	/^ffff800000100ec5:	c9                   	leaveq $/;"	l
ffff800000100ec6	kernel.asm	/^ffff800000100ec6:	c3                   	retq   $/;"	l
ffff800000100ec7	kernel.asm	/^ffff800000100ec7 <consoleintr>:$/;"	l
ffff800000100ec7	kernel.asm	/^ffff800000100ec7:	55                   	push   %rbp$/;"	l
ffff800000100ec8	kernel.asm	/^ffff800000100ec8:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000100ecb	kernel.asm	/^ffff800000100ecb:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ffff800000100ecf	kernel.asm	/^ffff800000100ecf:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
ffff800000100ed3	kernel.asm	/^ffff800000100ed3:	48 bf c0 43 11 00 00 	movabs $0xffff8000001143c0,%rdi$/;"	l
ffff800000100eda	kernel.asm	/^ffff800000100eda:	80 ff ff $/;"	l
ffff800000100edd	kernel.asm	/^ffff800000100edd:	48 b8 01 79 10 00 00 	movabs $0xffff800000107901,%rax$/;"	l
ffff800000100ee4	kernel.asm	/^ffff800000100ee4:	80 ff ff $/;"	l
ffff800000100ee7	kernel.asm	/^ffff800000100ee7:	ff d0                	callq  *%rax$/;"	l
ffff800000100ee9	kernel.asm	/^ffff800000100ee9:	e9 58 02 00 00       	jmpq   ffff800000101146 <consoleintr+0x27f>$/;"	l
ffff800000100eee	kernel.asm	/^ffff800000100eee:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff800000100ef1	kernel.asm	/^ffff800000100ef1:	83 f8 15             	cmp    $0x15,%eax$/;"	l
ffff800000100ef4	kernel.asm	/^ffff800000100ef4:	0f 84 8b 00 00 00    	je     ffff800000100f85 <consoleintr+0xbe>$/;"	l
ffff800000100efa	kernel.asm	/^ffff800000100efa:	83 f8 15             	cmp    $0x15,%eax$/;"	l
ffff800000100efd	kernel.asm	/^ffff800000100efd:	7f 13                	jg     ffff800000100f12 <consoleintr+0x4b>$/;"	l
ffff800000100eff	kernel.asm	/^ffff800000100eff:	83 f8 08             	cmp    $0x8,%eax$/;"	l
ffff800000100f02	kernel.asm	/^ffff800000100f02:	0f 84 db 00 00 00    	je     ffff800000100fe3 <consoleintr+0x11c>$/;"	l
ffff800000100f08	kernel.asm	/^ffff800000100f08:	83 f8 10             	cmp    $0x10,%eax$/;"	l
ffff800000100f0b	kernel.asm	/^ffff800000100f0b:	74 33                	je     ffff800000100f40 <consoleintr+0x79>$/;"	l
ffff800000100f0d	kernel.asm	/^ffff800000100f0d:	e9 32 01 00 00       	jmpq   ffff800000101044 <consoleintr+0x17d>$/;"	l
ffff800000100f12	kernel.asm	/^ffff800000100f12:	83 f8 1a             	cmp    $0x1a,%eax$/;"	l
ffff800000100f15	kernel.asm	/^ffff800000100f15:	74 0e                	je     ffff800000100f25 <consoleintr+0x5e>$/;"	l
ffff800000100f17	kernel.asm	/^ffff800000100f17:	83 f8 7f             	cmp    $0x7f,%eax$/;"	l
ffff800000100f1a	kernel.asm	/^ffff800000100f1a:	0f 84 c3 00 00 00    	je     ffff800000100fe3 <consoleintr+0x11c>$/;"	l
ffff800000100f20	kernel.asm	/^ffff800000100f20:	e9 1f 01 00 00       	jmpq   ffff800000101044 <consoleintr+0x17d>$/;"	l
ffff800000100f25	kernel.asm	/^ffff800000100f25:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffff800000100f2a	kernel.asm	/^ffff800000100f2a:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
ffff800000100f2f	kernel.asm	/^ffff800000100f2f:	48 b8 2f 06 10 00 00 	movabs $0xffff80000010062f,%rax$/;"	l
ffff800000100f36	kernel.asm	/^ffff800000100f36:	80 ff ff $/;"	l
ffff800000100f39	kernel.asm	/^ffff800000100f39:	ff d0                	callq  *%rax$/;"	l
ffff800000100f3b	kernel.asm	/^ffff800000100f3b:	e9 06 02 00 00       	jmpq   ffff800000101146 <consoleintr+0x27f>$/;"	l
ffff800000100f40	kernel.asm	/^ffff800000100f40:	48 b8 18 70 10 00 00 	movabs $0xffff800000107018,%rax$/;"	l
ffff800000100f47	kernel.asm	/^ffff800000100f47:	80 ff ff $/;"	l
ffff800000100f4a	kernel.asm	/^ffff800000100f4a:	ff d0                	callq  *%rax$/;"	l
ffff800000100f4c	kernel.asm	/^ffff800000100f4c:	e9 f5 01 00 00       	jmpq   ffff800000101146 <consoleintr+0x27f>$/;"	l
ffff800000100f51	kernel.asm	/^ffff800000100f51:	48 b8 c0 43 11 00 00 	movabs $0xffff8000001143c0,%rax$/;"	l
ffff800000100f58	kernel.asm	/^ffff800000100f58:	80 ff ff $/;"	l
ffff800000100f5b	kernel.asm	/^ffff800000100f5b:	8b 80 f0 00 00 00    	mov    0xf0(%rax),%eax$/;"	l
ffff800000100f61	kernel.asm	/^ffff800000100f61:	8d 50 ff             	lea    -0x1(%rax),%edx$/;"	l
ffff800000100f64	kernel.asm	/^ffff800000100f64:	48 b8 c0 43 11 00 00 	movabs $0xffff8000001143c0,%rax$/;"	l
ffff800000100f6b	kernel.asm	/^ffff800000100f6b:	80 ff ff $/;"	l
ffff800000100f6e	kernel.asm	/^ffff800000100f6e:	89 90 f0 00 00 00    	mov    %edx,0xf0(%rax)$/;"	l
ffff800000100f74	kernel.asm	/^ffff800000100f74:	bf 00 01 00 00       	mov    $0x100,%edi$/;"	l
ffff800000100f79	kernel.asm	/^ffff800000100f79:	48 b8 3b 0e 10 00 00 	movabs $0xffff800000100e3b,%rax$/;"	l
ffff800000100f80	kernel.asm	/^ffff800000100f80:	80 ff ff $/;"	l
ffff800000100f83	kernel.asm	/^ffff800000100f83:	ff d0                	callq  *%rax$/;"	l
ffff800000100f85	kernel.asm	/^ffff800000100f85:	48 b8 c0 43 11 00 00 	movabs $0xffff8000001143c0,%rax$/;"	l
ffff800000100f8c	kernel.asm	/^ffff800000100f8c:	80 ff ff $/;"	l
ffff800000100f8f	kernel.asm	/^ffff800000100f8f:	8b 90 f0 00 00 00    	mov    0xf0(%rax),%edx$/;"	l
ffff800000100f95	kernel.asm	/^ffff800000100f95:	48 b8 c0 43 11 00 00 	movabs $0xffff8000001143c0,%rax$/;"	l
ffff800000100f9c	kernel.asm	/^ffff800000100f9c:	80 ff ff $/;"	l
ffff800000100f9f	kernel.asm	/^ffff800000100f9f:	8b 80 ec 00 00 00    	mov    0xec(%rax),%eax$/;"	l
ffff800000100fa5	kernel.asm	/^ffff800000100fa5:	39 c2                	cmp    %eax,%edx$/;"	l
ffff800000100fa7	kernel.asm	/^ffff800000100fa7:	0f 84 99 01 00 00    	je     ffff800000101146 <consoleintr+0x27f>$/;"	l
ffff800000100fad	kernel.asm	/^ffff800000100fad:	48 b8 c0 43 11 00 00 	movabs $0xffff8000001143c0,%rax$/;"	l
ffff800000100fb4	kernel.asm	/^ffff800000100fb4:	80 ff ff $/;"	l
ffff800000100fb7	kernel.asm	/^ffff800000100fb7:	8b 80 f0 00 00 00    	mov    0xf0(%rax),%eax$/;"	l
ffff800000100fbd	kernel.asm	/^ffff800000100fbd:	83 e8 01             	sub    $0x1,%eax$/;"	l
ffff800000100fc0	kernel.asm	/^ffff800000100fc0:	83 e0 7f             	and    $0x7f,%eax$/;"	l
ffff800000100fc3	kernel.asm	/^ffff800000100fc3:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000100fc5	kernel.asm	/^ffff800000100fc5:	48 b8 c0 43 11 00 00 	movabs $0xffff8000001143c0,%rax$/;"	l
ffff800000100fcc	kernel.asm	/^ffff800000100fcc:	80 ff ff $/;"	l
ffff800000100fcf	kernel.asm	/^ffff800000100fcf:	89 d2                	mov    %edx,%edx$/;"	l
ffff800000100fd1	kernel.asm	/^ffff800000100fd1:	0f b6 44 10 68       	movzbl 0x68(%rax,%rdx,1),%eax$/;"	l
ffff800000100fd6	kernel.asm	/^ffff800000100fd6:	3c 0a                	cmp    $0xa,%al$/;"	l
ffff800000100fd8	kernel.asm	/^ffff800000100fd8:	0f 85 73 ff ff ff    	jne    ffff800000100f51 <consoleintr+0x8a>$/;"	l
ffff800000100fde	kernel.asm	/^ffff800000100fde:	e9 63 01 00 00       	jmpq   ffff800000101146 <consoleintr+0x27f>$/;"	l
ffff800000100fe3	kernel.asm	/^ffff800000100fe3:	48 b8 c0 43 11 00 00 	movabs $0xffff8000001143c0,%rax$/;"	l
ffff800000100fea	kernel.asm	/^ffff800000100fea:	80 ff ff $/;"	l
ffff800000100fed	kernel.asm	/^ffff800000100fed:	8b 90 f0 00 00 00    	mov    0xf0(%rax),%edx$/;"	l
ffff800000100ff3	kernel.asm	/^ffff800000100ff3:	48 b8 c0 43 11 00 00 	movabs $0xffff8000001143c0,%rax$/;"	l
ffff800000100ffa	kernel.asm	/^ffff800000100ffa:	80 ff ff $/;"	l
ffff800000100ffd	kernel.asm	/^ffff800000100ffd:	8b 80 ec 00 00 00    	mov    0xec(%rax),%eax$/;"	l
ffff800000101003	kernel.asm	/^ffff800000101003:	39 c2                	cmp    %eax,%edx$/;"	l
ffff800000101005	kernel.asm	/^ffff800000101005:	0f 84 3b 01 00 00    	je     ffff800000101146 <consoleintr+0x27f>$/;"	l
ffff80000010100b	kernel.asm	/^ffff80000010100b:	48 b8 c0 43 11 00 00 	movabs $0xffff8000001143c0,%rax$/;"	l
ffff800000101012	kernel.asm	/^ffff800000101012:	80 ff ff $/;"	l
ffff800000101015	kernel.asm	/^ffff800000101015:	8b 80 f0 00 00 00    	mov    0xf0(%rax),%eax$/;"	l
ffff80000010101b	kernel.asm	/^ffff80000010101b:	8d 50 ff             	lea    -0x1(%rax),%edx$/;"	l
ffff80000010101e	kernel.asm	/^ffff80000010101e:	48 b8 c0 43 11 00 00 	movabs $0xffff8000001143c0,%rax$/;"	l
ffff800000101025	kernel.asm	/^ffff800000101025:	80 ff ff $/;"	l
ffff800000101028	kernel.asm	/^ffff800000101028:	89 90 f0 00 00 00    	mov    %edx,0xf0(%rax)$/;"	l
ffff80000010102e	kernel.asm	/^ffff80000010102e:	bf 00 01 00 00       	mov    $0x100,%edi$/;"	l
ffff800000101033	kernel.asm	/^ffff800000101033:	48 b8 3b 0e 10 00 00 	movabs $0xffff800000100e3b,%rax$/;"	l
ffff80000010103a	kernel.asm	/^ffff80000010103a:	80 ff ff $/;"	l
ffff80000010103d	kernel.asm	/^ffff80000010103d:	ff d0                	callq  *%rax$/;"	l
ffff80000010103f	kernel.asm	/^ffff80000010103f:	e9 02 01 00 00       	jmpq   ffff800000101146 <consoleintr+0x27f>$/;"	l
ffff800000101044	kernel.asm	/^ffff800000101044:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)$/;"	l
ffff800000101048	kernel.asm	/^ffff800000101048:	0f 84 f7 00 00 00    	je     ffff800000101145 <consoleintr+0x27e>$/;"	l
ffff80000010104e	kernel.asm	/^ffff80000010104e:	48 b8 c0 43 11 00 00 	movabs $0xffff8000001143c0,%rax$/;"	l
ffff800000101055	kernel.asm	/^ffff800000101055:	80 ff ff $/;"	l
ffff800000101058	kernel.asm	/^ffff800000101058:	8b 90 f0 00 00 00    	mov    0xf0(%rax),%edx$/;"	l
ffff80000010105e	kernel.asm	/^ffff80000010105e:	48 b8 c0 43 11 00 00 	movabs $0xffff8000001143c0,%rax$/;"	l
ffff800000101065	kernel.asm	/^ffff800000101065:	80 ff ff $/;"	l
ffff800000101068	kernel.asm	/^ffff800000101068:	8b 80 e8 00 00 00    	mov    0xe8(%rax),%eax$/;"	l
ffff80000010106e	kernel.asm	/^ffff80000010106e:	29 c2                	sub    %eax,%edx$/;"	l
ffff800000101070	kernel.asm	/^ffff800000101070:	89 d0                	mov    %edx,%eax$/;"	l
ffff800000101072	kernel.asm	/^ffff800000101072:	83 f8 7f             	cmp    $0x7f,%eax$/;"	l
ffff800000101075	kernel.asm	/^ffff800000101075:	0f 87 ca 00 00 00    	ja     ffff800000101145 <consoleintr+0x27e>$/;"	l
ffff80000010107b	kernel.asm	/^ffff80000010107b:	83 7d fc 0d          	cmpl   $0xd,-0x4(%rbp)$/;"	l
ffff80000010107f	kernel.asm	/^ffff80000010107f:	74 05                	je     ffff800000101086 <consoleintr+0x1bf>$/;"	l
ffff800000101081	kernel.asm	/^ffff800000101081:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff800000101084	kernel.asm	/^ffff800000101084:	eb 05                	jmp    ffff80000010108b <consoleintr+0x1c4>$/;"	l
ffff800000101086	kernel.asm	/^ffff800000101086:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
ffff80000010108b	kernel.asm	/^ffff80000010108b:	89 45 fc             	mov    %eax,-0x4(%rbp)$/;"	l
ffff80000010108e	kernel.asm	/^ffff80000010108e:	48 b8 c0 43 11 00 00 	movabs $0xffff8000001143c0,%rax$/;"	l
ffff800000101095	kernel.asm	/^ffff800000101095:	80 ff ff $/;"	l
ffff800000101098	kernel.asm	/^ffff800000101098:	8b 80 f0 00 00 00    	mov    0xf0(%rax),%eax$/;"	l
ffff80000010109e	kernel.asm	/^ffff80000010109e:	8d 48 01             	lea    0x1(%rax),%ecx$/;"	l
ffff8000001010a1	kernel.asm	/^ffff8000001010a1:	48 ba c0 43 11 00 00 	movabs $0xffff8000001143c0,%rdx$/;"	l
ffff8000001010a8	kernel.asm	/^ffff8000001010a8:	80 ff ff $/;"	l
ffff8000001010ab	kernel.asm	/^ffff8000001010ab:	89 8a f0 00 00 00    	mov    %ecx,0xf0(%rdx)$/;"	l
ffff8000001010b1	kernel.asm	/^ffff8000001010b1:	83 e0 7f             	and    $0x7f,%eax$/;"	l
ffff8000001010b4	kernel.asm	/^ffff8000001010b4:	89 c2                	mov    %eax,%edx$/;"	l
ffff8000001010b6	kernel.asm	/^ffff8000001010b6:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff8000001010b9	kernel.asm	/^ffff8000001010b9:	89 c1                	mov    %eax,%ecx$/;"	l
ffff8000001010bb	kernel.asm	/^ffff8000001010bb:	48 b8 c0 43 11 00 00 	movabs $0xffff8000001143c0,%rax$/;"	l
ffff8000001010c2	kernel.asm	/^ffff8000001010c2:	80 ff ff $/;"	l
ffff8000001010c5	kernel.asm	/^ffff8000001010c5:	89 d2                	mov    %edx,%edx$/;"	l
ffff8000001010c7	kernel.asm	/^ffff8000001010c7:	88 4c 10 68          	mov    %cl,0x68(%rax,%rdx,1)$/;"	l
ffff8000001010cb	kernel.asm	/^ffff8000001010cb:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff8000001010ce	kernel.asm	/^ffff8000001010ce:	89 c7                	mov    %eax,%edi$/;"	l
ffff8000001010d0	kernel.asm	/^ffff8000001010d0:	48 b8 3b 0e 10 00 00 	movabs $0xffff800000100e3b,%rax$/;"	l
ffff8000001010d7	kernel.asm	/^ffff8000001010d7:	80 ff ff $/;"	l
ffff8000001010da	kernel.asm	/^ffff8000001010da:	ff d0                	callq  *%rax$/;"	l
ffff8000001010dc	kernel.asm	/^ffff8000001010dc:	83 7d fc 0a          	cmpl   $0xa,-0x4(%rbp)$/;"	l
ffff8000001010e0	kernel.asm	/^ffff8000001010e0:	74 2d                	je     ffff80000010110f <consoleintr+0x248>$/;"	l
ffff8000001010e2	kernel.asm	/^ffff8000001010e2:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)$/;"	l
ffff8000001010e6	kernel.asm	/^ffff8000001010e6:	74 27                	je     ffff80000010110f <consoleintr+0x248>$/;"	l
ffff8000001010e8	kernel.asm	/^ffff8000001010e8:	48 b8 c0 43 11 00 00 	movabs $0xffff8000001143c0,%rax$/;"	l
ffff8000001010ef	kernel.asm	/^ffff8000001010ef:	80 ff ff $/;"	l
ffff8000001010f2	kernel.asm	/^ffff8000001010f2:	8b 90 f0 00 00 00    	mov    0xf0(%rax),%edx$/;"	l
ffff8000001010f8	kernel.asm	/^ffff8000001010f8:	48 b8 c0 43 11 00 00 	movabs $0xffff8000001143c0,%rax$/;"	l
ffff8000001010ff	kernel.asm	/^ffff8000001010ff:	80 ff ff $/;"	l
ffff800000101102	kernel.asm	/^ffff800000101102:	8b 80 e8 00 00 00    	mov    0xe8(%rax),%eax$/;"	l
ffff800000101108	kernel.asm	/^ffff800000101108:	83 e8 80             	sub    $0xffffff80,%eax$/;"	l
ffff80000010110b	kernel.asm	/^ffff80000010110b:	39 c2                	cmp    %eax,%edx$/;"	l
ffff80000010110d	kernel.asm	/^ffff80000010110d:	75 36                	jne    ffff800000101145 <consoleintr+0x27e>$/;"	l
ffff80000010110f	kernel.asm	/^ffff80000010110f:	48 b8 c0 43 11 00 00 	movabs $0xffff8000001143c0,%rax$/;"	l
ffff800000101116	kernel.asm	/^ffff800000101116:	80 ff ff $/;"	l
ffff800000101119	kernel.asm	/^ffff800000101119:	8b 90 f0 00 00 00    	mov    0xf0(%rax),%edx$/;"	l
ffff80000010111f	kernel.asm	/^ffff80000010111f:	48 b8 c0 43 11 00 00 	movabs $0xffff8000001143c0,%rax$/;"	l
ffff800000101126	kernel.asm	/^ffff800000101126:	80 ff ff $/;"	l
ffff800000101129	kernel.asm	/^ffff800000101129:	89 90 ec 00 00 00    	mov    %edx,0xec(%rax)$/;"	l
ffff80000010112f	kernel.asm	/^ffff80000010112f:	48 bf a8 44 11 00 00 	movabs $0xffff8000001144a8,%rdi$/;"	l
ffff800000101136	kernel.asm	/^ffff800000101136:	80 ff ff $/;"	l
ffff800000101139	kernel.asm	/^ffff800000101139:	48 b8 19 6f 10 00 00 	movabs $0xffff800000106f19,%rax$/;"	l
ffff800000101140	kernel.asm	/^ffff800000101140:	80 ff ff $/;"	l
ffff800000101143	kernel.asm	/^ffff800000101143:	ff d0                	callq  *%rax$/;"	l
ffff800000101145	kernel.asm	/^ffff800000101145:	90                   	nop$/;"	l
ffff800000101146	kernel.asm	/^ffff800000101146:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010114a	kernel.asm	/^ffff80000010114a:	ff d0                	callq  *%rax$/;"	l
ffff80000010114c	kernel.asm	/^ffff80000010114c:	89 45 fc             	mov    %eax,-0x4(%rbp)$/;"	l
ffff80000010114f	kernel.asm	/^ffff80000010114f:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)$/;"	l
ffff800000101153	kernel.asm	/^ffff800000101153:	0f 89 95 fd ff ff    	jns    ffff800000100eee <consoleintr+0x27>$/;"	l
ffff800000101159	kernel.asm	/^ffff800000101159:	48 bf c0 43 11 00 00 	movabs $0xffff8000001143c0,%rdi$/;"	l
ffff800000101160	kernel.asm	/^ffff800000101160:	80 ff ff $/;"	l
ffff800000101163	kernel.asm	/^ffff800000101163:	48 b8 9a 79 10 00 00 	movabs $0xffff80000010799a,%rax$/;"	l
ffff80000010116a	kernel.asm	/^ffff80000010116a:	80 ff ff $/;"	l
ffff80000010116d	kernel.asm	/^ffff80000010116d:	ff d0                	callq  *%rax$/;"	l
ffff80000010116f	kernel.asm	/^ffff80000010116f:	90                   	nop$/;"	l
ffff800000101170	kernel.asm	/^ffff800000101170:	c9                   	leaveq $/;"	l
ffff800000101171	kernel.asm	/^ffff800000101171:	c3                   	retq   $/;"	l
ffff800000101172	kernel.asm	/^ffff800000101172 <consoleread>:$/;"	l
ffff800000101172	kernel.asm	/^ffff800000101172:	55                   	push   %rbp$/;"	l
ffff800000101173	kernel.asm	/^ffff800000101173:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000101176	kernel.asm	/^ffff800000101176:	48 83 ec 30          	sub    $0x30,%rsp$/;"	l
ffff80000010117a	kernel.asm	/^ffff80000010117a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
ffff80000010117e	kernel.asm	/^ffff80000010117e:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)$/;"	l
ffff800000101182	kernel.asm	/^ffff800000101182:	89 55 dc             	mov    %edx,-0x24(%rbp)$/;"	l
ffff800000101185	kernel.asm	/^ffff800000101185:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000101189	kernel.asm	/^ffff800000101189:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010118c	kernel.asm	/^ffff80000010118c:	48 b8 d0 29 10 00 00 	movabs $0xffff8000001029d0,%rax$/;"	l
ffff800000101193	kernel.asm	/^ffff800000101193:	80 ff ff $/;"	l
ffff800000101196	kernel.asm	/^ffff800000101196:	ff d0                	callq  *%rax$/;"	l
ffff800000101198	kernel.asm	/^ffff800000101198:	8b 45 dc             	mov    -0x24(%rbp),%eax$/;"	l
ffff80000010119b	kernel.asm	/^ffff80000010119b:	89 45 fc             	mov    %eax,-0x4(%rbp)$/;"	l
ffff80000010119e	kernel.asm	/^ffff80000010119e:	48 bf c0 43 11 00 00 	movabs $0xffff8000001143c0,%rdi$/;"	l
ffff8000001011a5	kernel.asm	/^ffff8000001011a5:	80 ff ff $/;"	l
ffff8000001011a8	kernel.asm	/^ffff8000001011a8:	48 b8 01 79 10 00 00 	movabs $0xffff800000107901,%rax$/;"	l
ffff8000001011af	kernel.asm	/^ffff8000001011af:	80 ff ff $/;"	l
ffff8000001011b2	kernel.asm	/^ffff8000001011b2:	ff d0                	callq  *%rax$/;"	l
ffff8000001011b4	kernel.asm	/^ffff8000001011b4:	e9 1a 01 00 00       	jmpq   ffff8000001012d3 <consoleread+0x161>$/;"	l
ffff8000001011b9	kernel.asm	/^ffff8000001011b9:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff8000001011c0	kernel.asm	/^ffff8000001011c0:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff8000001011c4	kernel.asm	/^ffff8000001011c4:	8b 40 40             	mov    0x40(%rax),%eax$/;"	l
ffff8000001011c7	kernel.asm	/^ffff8000001011c7:	85 c0                	test   %eax,%eax$/;"	l
ffff8000001011c9	kernel.asm	/^ffff8000001011c9:	74 33                	je     ffff8000001011fe <consoleread+0x8c>$/;"	l
ffff8000001011cb	kernel.asm	/^ffff8000001011cb:	48 bf c0 43 11 00 00 	movabs $0xffff8000001143c0,%rdi$/;"	l
ffff8000001011d2	kernel.asm	/^ffff8000001011d2:	80 ff ff $/;"	l
ffff8000001011d5	kernel.asm	/^ffff8000001011d5:	48 b8 9a 79 10 00 00 	movabs $0xffff80000010799a,%rax$/;"	l
ffff8000001011dc	kernel.asm	/^ffff8000001011dc:	80 ff ff $/;"	l
ffff8000001011df	kernel.asm	/^ffff8000001011df:	ff d0                	callq  *%rax$/;"	l
ffff8000001011e1	kernel.asm	/^ffff8000001011e1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff8000001011e5	kernel.asm	/^ffff8000001011e5:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001011e8	kernel.asm	/^ffff8000001011e8:	48 b8 1d 28 10 00 00 	movabs $0xffff80000010281d,%rax$/;"	l
ffff8000001011ef	kernel.asm	/^ffff8000001011ef:	80 ff ff $/;"	l
ffff8000001011f2	kernel.asm	/^ffff8000001011f2:	ff d0                	callq  *%rax$/;"	l
ffff8000001011f4	kernel.asm	/^ffff8000001011f4:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff8000001011f9	kernel.asm	/^ffff8000001011f9:	e9 18 01 00 00       	jmpq   ffff800000101316 <consoleread+0x1a4>$/;"	l
ffff8000001011fe	kernel.asm	/^ffff8000001011fe:	48 be c0 43 11 00 00 	movabs $0xffff8000001143c0,%rsi$/;"	l
ffff800000101205	kernel.asm	/^ffff800000101205:	80 ff ff $/;"	l
ffff800000101208	kernel.asm	/^ffff800000101208:	48 bf a8 44 11 00 00 	movabs $0xffff8000001144a8,%rdi$/;"	l
ffff80000010120f	kernel.asm	/^ffff80000010120f:	80 ff ff $/;"	l
ffff800000101212	kernel.asm	/^ffff800000101212:	48 b8 b1 6d 10 00 00 	movabs $0xffff800000106db1,%rax$/;"	l
ffff800000101219	kernel.asm	/^ffff800000101219:	80 ff ff $/;"	l
ffff80000010121c	kernel.asm	/^ffff80000010121c:	ff d0                	callq  *%rax$/;"	l
ffff80000010121e	kernel.asm	/^ffff80000010121e:	48 b8 c0 43 11 00 00 	movabs $0xffff8000001143c0,%rax$/;"	l
ffff800000101225	kernel.asm	/^ffff800000101225:	80 ff ff $/;"	l
ffff800000101228	kernel.asm	/^ffff800000101228:	8b 90 e8 00 00 00    	mov    0xe8(%rax),%edx$/;"	l
ffff80000010122e	kernel.asm	/^ffff80000010122e:	48 b8 c0 43 11 00 00 	movabs $0xffff8000001143c0,%rax$/;"	l
ffff800000101235	kernel.asm	/^ffff800000101235:	80 ff ff $/;"	l
ffff800000101238	kernel.asm	/^ffff800000101238:	8b 80 ec 00 00 00    	mov    0xec(%rax),%eax$/;"	l
ffff80000010123e	kernel.asm	/^ffff80000010123e:	39 c2                	cmp    %eax,%edx$/;"	l
ffff800000101240	kernel.asm	/^ffff800000101240:	0f 84 73 ff ff ff    	je     ffff8000001011b9 <consoleread+0x47>$/;"	l
ffff800000101246	kernel.asm	/^ffff800000101246:	48 b8 c0 43 11 00 00 	movabs $0xffff8000001143c0,%rax$/;"	l
ffff80000010124d	kernel.asm	/^ffff80000010124d:	80 ff ff $/;"	l
ffff800000101250	kernel.asm	/^ffff800000101250:	8b 80 e8 00 00 00    	mov    0xe8(%rax),%eax$/;"	l
ffff800000101256	kernel.asm	/^ffff800000101256:	8d 48 01             	lea    0x1(%rax),%ecx$/;"	l
ffff800000101259	kernel.asm	/^ffff800000101259:	48 ba c0 43 11 00 00 	movabs $0xffff8000001143c0,%rdx$/;"	l
ffff800000101260	kernel.asm	/^ffff800000101260:	80 ff ff $/;"	l
ffff800000101263	kernel.asm	/^ffff800000101263:	89 8a e8 00 00 00    	mov    %ecx,0xe8(%rdx)$/;"	l
ffff800000101269	kernel.asm	/^ffff800000101269:	83 e0 7f             	and    $0x7f,%eax$/;"	l
ffff80000010126c	kernel.asm	/^ffff80000010126c:	89 c2                	mov    %eax,%edx$/;"	l
ffff80000010126e	kernel.asm	/^ffff80000010126e:	48 b8 c0 43 11 00 00 	movabs $0xffff8000001143c0,%rax$/;"	l
ffff800000101275	kernel.asm	/^ffff800000101275:	80 ff ff $/;"	l
ffff800000101278	kernel.asm	/^ffff800000101278:	89 d2                	mov    %edx,%edx$/;"	l
ffff80000010127a	kernel.asm	/^ffff80000010127a:	0f b6 44 10 68       	movzbl 0x68(%rax,%rdx,1),%eax$/;"	l
ffff80000010127f	kernel.asm	/^ffff80000010127f:	0f be c0             	movsbl %al,%eax$/;"	l
ffff800000101282	kernel.asm	/^ffff800000101282:	89 45 f8             	mov    %eax,-0x8(%rbp)$/;"	l
ffff800000101285	kernel.asm	/^ffff800000101285:	83 7d f8 04          	cmpl   $0x4,-0x8(%rbp)$/;"	l
ffff800000101289	kernel.asm	/^ffff800000101289:	75 2d                	jne    ffff8000001012b8 <consoleread+0x146>$/;"	l
ffff80000010128b	kernel.asm	/^ffff80000010128b:	8b 45 dc             	mov    -0x24(%rbp),%eax$/;"	l
ffff80000010128e	kernel.asm	/^ffff80000010128e:	3b 45 fc             	cmp    -0x4(%rbp),%eax$/;"	l
ffff800000101291	kernel.asm	/^ffff800000101291:	73 4c                	jae    ffff8000001012df <consoleread+0x16d>$/;"	l
ffff800000101293	kernel.asm	/^ffff800000101293:	48 b8 c0 43 11 00 00 	movabs $0xffff8000001143c0,%rax$/;"	l
ffff80000010129a	kernel.asm	/^ffff80000010129a:	80 ff ff $/;"	l
ffff80000010129d	kernel.asm	/^ffff80000010129d:	8b 80 e8 00 00 00    	mov    0xe8(%rax),%eax$/;"	l
ffff8000001012a3	kernel.asm	/^ffff8000001012a3:	8d 50 ff             	lea    -0x1(%rax),%edx$/;"	l
ffff8000001012a6	kernel.asm	/^ffff8000001012a6:	48 b8 c0 43 11 00 00 	movabs $0xffff8000001143c0,%rax$/;"	l
ffff8000001012ad	kernel.asm	/^ffff8000001012ad:	80 ff ff $/;"	l
ffff8000001012b0	kernel.asm	/^ffff8000001012b0:	89 90 e8 00 00 00    	mov    %edx,0xe8(%rax)$/;"	l
ffff8000001012b6	kernel.asm	/^ffff8000001012b6:	eb 27                	jmp    ffff8000001012df <consoleread+0x16d>$/;"	l
ffff8000001012b8	kernel.asm	/^ffff8000001012b8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff8000001012bc	kernel.asm	/^ffff8000001012bc:	48 8d 50 01          	lea    0x1(%rax),%rdx$/;"	l
ffff8000001012c0	kernel.asm	/^ffff8000001012c0:	48 89 55 e0          	mov    %rdx,-0x20(%rbp)$/;"	l
ffff8000001012c4	kernel.asm	/^ffff8000001012c4:	8b 55 f8             	mov    -0x8(%rbp),%edx$/;"	l
ffff8000001012c7	kernel.asm	/^ffff8000001012c7:	88 10                	mov    %dl,(%rax)$/;"	l
ffff8000001012c9	kernel.asm	/^ffff8000001012c9:	83 6d dc 01          	subl   $0x1,-0x24(%rbp)$/;"	l
ffff8000001012cd	kernel.asm	/^ffff8000001012cd:	83 7d f8 0a          	cmpl   $0xa,-0x8(%rbp)$/;"	l
ffff8000001012d1	kernel.asm	/^ffff8000001012d1:	74 0f                	je     ffff8000001012e2 <consoleread+0x170>$/;"	l
ffff8000001012d3	kernel.asm	/^ffff8000001012d3:	83 7d dc 00          	cmpl   $0x0,-0x24(%rbp)$/;"	l
ffff8000001012d7	kernel.asm	/^ffff8000001012d7:	0f 8f 41 ff ff ff    	jg     ffff80000010121e <consoleread+0xac>$/;"	l
ffff8000001012dd	kernel.asm	/^ffff8000001012dd:	eb 04                	jmp    ffff8000001012e3 <consoleread+0x171>$/;"	l
ffff8000001012df	kernel.asm	/^ffff8000001012df:	90                   	nop$/;"	l
ffff8000001012e0	kernel.asm	/^ffff8000001012e0:	eb 01                	jmp    ffff8000001012e3 <consoleread+0x171>$/;"	l
ffff8000001012e2	kernel.asm	/^ffff8000001012e2:	90                   	nop$/;"	l
ffff8000001012e3	kernel.asm	/^ffff8000001012e3:	48 bf c0 43 11 00 00 	movabs $0xffff8000001143c0,%rdi$/;"	l
ffff8000001012ea	kernel.asm	/^ffff8000001012ea:	80 ff ff $/;"	l
ffff8000001012ed	kernel.asm	/^ffff8000001012ed:	48 b8 9a 79 10 00 00 	movabs $0xffff80000010799a,%rax$/;"	l
ffff8000001012f4	kernel.asm	/^ffff8000001012f4:	80 ff ff $/;"	l
ffff8000001012f7	kernel.asm	/^ffff8000001012f7:	ff d0                	callq  *%rax$/;"	l
ffff8000001012f9	kernel.asm	/^ffff8000001012f9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff8000001012fd	kernel.asm	/^ffff8000001012fd:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000101300	kernel.asm	/^ffff800000101300:	48 b8 1d 28 10 00 00 	movabs $0xffff80000010281d,%rax$/;"	l
ffff800000101307	kernel.asm	/^ffff800000101307:	80 ff ff $/;"	l
ffff80000010130a	kernel.asm	/^ffff80000010130a:	ff d0                	callq  *%rax$/;"	l
ffff80000010130c	kernel.asm	/^ffff80000010130c:	8b 45 dc             	mov    -0x24(%rbp),%eax$/;"	l
ffff80000010130f	kernel.asm	/^ffff80000010130f:	8b 55 fc             	mov    -0x4(%rbp),%edx$/;"	l
ffff800000101312	kernel.asm	/^ffff800000101312:	29 c2                	sub    %eax,%edx$/;"	l
ffff800000101314	kernel.asm	/^ffff800000101314:	89 d0                	mov    %edx,%eax$/;"	l
ffff800000101316	kernel.asm	/^ffff800000101316:	c9                   	leaveq $/;"	l
ffff800000101317	kernel.asm	/^ffff800000101317:	c3                   	retq   $/;"	l
ffff800000101318	kernel.asm	/^ffff800000101318 <consolewrite>:$/;"	l
ffff800000101318	kernel.asm	/^ffff800000101318:	55                   	push   %rbp$/;"	l
ffff800000101319	kernel.asm	/^ffff800000101319:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010131c	kernel.asm	/^ffff80000010131c:	48 83 ec 30          	sub    $0x30,%rsp$/;"	l
ffff800000101320	kernel.asm	/^ffff800000101320:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
ffff800000101324	kernel.asm	/^ffff800000101324:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)$/;"	l
ffff800000101328	kernel.asm	/^ffff800000101328:	89 55 dc             	mov    %edx,-0x24(%rbp)$/;"	l
ffff80000010132b	kernel.asm	/^ffff80000010132b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010132f	kernel.asm	/^ffff80000010132f:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000101332	kernel.asm	/^ffff800000101332:	48 b8 d0 29 10 00 00 	movabs $0xffff8000001029d0,%rax$/;"	l
ffff800000101339	kernel.asm	/^ffff800000101339:	80 ff ff $/;"	l
ffff80000010133c	kernel.asm	/^ffff80000010133c:	ff d0                	callq  *%rax$/;"	l
ffff80000010133e	kernel.asm	/^ffff80000010133e:	48 bf c0 44 11 00 00 	movabs $0xffff8000001144c0,%rdi$/;"	l
ffff800000101345	kernel.asm	/^ffff800000101345:	80 ff ff $/;"	l
ffff800000101348	kernel.asm	/^ffff800000101348:	48 b8 01 79 10 00 00 	movabs $0xffff800000107901,%rax$/;"	l
ffff80000010134f	kernel.asm	/^ffff80000010134f:	80 ff ff $/;"	l
ffff800000101352	kernel.asm	/^ffff800000101352:	ff d0                	callq  *%rax$/;"	l
ffff800000101354	kernel.asm	/^ffff800000101354:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)$/;"	l
ffff80000010135b	kernel.asm	/^ffff80000010135b:	eb 28                	jmp    ffff800000101385 <consolewrite+0x6d>$/;"	l
ffff80000010135d	kernel.asm	/^ffff80000010135d:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff800000101360	kernel.asm	/^ffff800000101360:	48 63 d0             	movslq %eax,%rdx$/;"	l
ffff800000101363	kernel.asm	/^ffff800000101363:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff800000101367	kernel.asm	/^ffff800000101367:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff80000010136a	kernel.asm	/^ffff80000010136a:	0f b6 00             	movzbl (%rax),%eax$/;"	l
ffff80000010136d	kernel.asm	/^ffff80000010136d:	0f be c0             	movsbl %al,%eax$/;"	l
ffff800000101370	kernel.asm	/^ffff800000101370:	0f b6 c0             	movzbl %al,%eax$/;"	l
ffff800000101373	kernel.asm	/^ffff800000101373:	89 c7                	mov    %eax,%edi$/;"	l
ffff800000101375	kernel.asm	/^ffff800000101375:	48 b8 3b 0e 10 00 00 	movabs $0xffff800000100e3b,%rax$/;"	l
ffff80000010137c	kernel.asm	/^ffff80000010137c:	80 ff ff $/;"	l
ffff80000010137f	kernel.asm	/^ffff80000010137f:	ff d0                	callq  *%rax$/;"	l
ffff800000101381	kernel.asm	/^ffff800000101381:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)$/;"	l
ffff800000101385	kernel.asm	/^ffff800000101385:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff800000101388	kernel.asm	/^ffff800000101388:	3b 45 dc             	cmp    -0x24(%rbp),%eax$/;"	l
ffff80000010138b	kernel.asm	/^ffff80000010138b:	7c d0                	jl     ffff80000010135d <consolewrite+0x45>$/;"	l
ffff80000010138d	kernel.asm	/^ffff80000010138d:	48 bf c0 44 11 00 00 	movabs $0xffff8000001144c0,%rdi$/;"	l
ffff800000101394	kernel.asm	/^ffff800000101394:	80 ff ff $/;"	l
ffff800000101397	kernel.asm	/^ffff800000101397:	48 b8 9a 79 10 00 00 	movabs $0xffff80000010799a,%rax$/;"	l
ffff80000010139e	kernel.asm	/^ffff80000010139e:	80 ff ff $/;"	l
ffff8000001013a1	kernel.asm	/^ffff8000001013a1:	ff d0                	callq  *%rax$/;"	l
ffff8000001013a3	kernel.asm	/^ffff8000001013a3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff8000001013a7	kernel.asm	/^ffff8000001013a7:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001013aa	kernel.asm	/^ffff8000001013aa:	48 b8 1d 28 10 00 00 	movabs $0xffff80000010281d,%rax$/;"	l
ffff8000001013b1	kernel.asm	/^ffff8000001013b1:	80 ff ff $/;"	l
ffff8000001013b4	kernel.asm	/^ffff8000001013b4:	ff d0                	callq  *%rax$/;"	l
ffff8000001013b6	kernel.asm	/^ffff8000001013b6:	8b 45 dc             	mov    -0x24(%rbp),%eax$/;"	l
ffff8000001013b9	kernel.asm	/^ffff8000001013b9:	c9                   	leaveq $/;"	l
ffff8000001013ba	kernel.asm	/^ffff8000001013ba:	c3                   	retq   $/;"	l
ffff8000001013bb	kernel.asm	/^ffff8000001013bb <consoleinit>:$/;"	l
ffff8000001013bb	kernel.asm	/^ffff8000001013bb:	55                   	push   %rbp$/;"	l
ffff8000001013bc	kernel.asm	/^ffff8000001013bc:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff8000001013bf	kernel.asm	/^ffff8000001013bf:	48 be 5a c2 10 00 00 	movabs $0xffff80000010c25a,%rsi$/;"	l
ffff8000001013c6	kernel.asm	/^ffff8000001013c6:	80 ff ff $/;"	l
ffff8000001013c9	kernel.asm	/^ffff8000001013c9:	48 bf c0 44 11 00 00 	movabs $0xffff8000001144c0,%rdi$/;"	l
ffff8000001013d0	kernel.asm	/^ffff8000001013d0:	80 ff ff $/;"	l
ffff8000001013d3	kernel.asm	/^ffff8000001013d3:	48 b8 cc 78 10 00 00 	movabs $0xffff8000001078cc,%rax$/;"	l
ffff8000001013da	kernel.asm	/^ffff8000001013da:	80 ff ff $/;"	l
ffff8000001013dd	kernel.asm	/^ffff8000001013dd:	ff d0                	callq  *%rax$/;"	l
ffff8000001013df	kernel.asm	/^ffff8000001013df:	48 be 62 c2 10 00 00 	movabs $0xffff80000010c262,%rsi$/;"	l
ffff8000001013e6	kernel.asm	/^ffff8000001013e6:	80 ff ff $/;"	l
ffff8000001013e9	kernel.asm	/^ffff8000001013e9:	48 bf c0 43 11 00 00 	movabs $0xffff8000001143c0,%rdi$/;"	l
ffff8000001013f0	kernel.asm	/^ffff8000001013f0:	80 ff ff $/;"	l
ffff8000001013f3	kernel.asm	/^ffff8000001013f3:	48 b8 cc 78 10 00 00 	movabs $0xffff8000001078cc,%rax$/;"	l
ffff8000001013fa	kernel.asm	/^ffff8000001013fa:	80 ff ff $/;"	l
ffff8000001013fd	kernel.asm	/^ffff8000001013fd:	ff d0                	callq  *%rax$/;"	l
ffff8000001013ff	kernel.asm	/^ffff8000001013ff:	48 b8 40 45 11 00 00 	movabs $0xffff800000114540,%rax$/;"	l
ffff800000101406	kernel.asm	/^ffff800000101406:	80 ff ff $/;"	l
ffff800000101409	kernel.asm	/^ffff800000101409:	48 ba 18 13 10 00 00 	movabs $0xffff800000101318,%rdx$/;"	l
ffff800000101410	kernel.asm	/^ffff800000101410:	80 ff ff $/;"	l
ffff800000101413	kernel.asm	/^ffff800000101413:	48 89 50 18          	mov    %rdx,0x18(%rax)$/;"	l
ffff800000101417	kernel.asm	/^ffff800000101417:	48 b8 40 45 11 00 00 	movabs $0xffff800000114540,%rax$/;"	l
ffff80000010141e	kernel.asm	/^ffff80000010141e:	80 ff ff $/;"	l
ffff800000101421	kernel.asm	/^ffff800000101421:	48 b9 72 11 10 00 00 	movabs $0xffff800000101172,%rcx$/;"	l
ffff800000101428	kernel.asm	/^ffff800000101428:	80 ff ff $/;"	l
ffff80000010142b	kernel.asm	/^ffff80000010142b:	48 89 48 10          	mov    %rcx,0x10(%rax)$/;"	l
ffff80000010142f	kernel.asm	/^ffff80000010142f:	48 b8 c0 44 11 00 00 	movabs $0xffff8000001144c0,%rax$/;"	l
ffff800000101436	kernel.asm	/^ffff800000101436:	80 ff ff $/;"	l
ffff800000101439	kernel.asm	/^ffff800000101439:	c7 40 68 01 00 00 00 	movl   $0x1,0x68(%rax)$/;"	l
ffff800000101440	kernel.asm	/^ffff800000101440:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffff800000101445	kernel.asm	/^ffff800000101445:	bf 01 00 00 00       	mov    $0x1,%edi$/;"	l
ffff80000010144a	kernel.asm	/^ffff80000010144a:	48 b8 5b 3f 10 00 00 	movabs $0xffff800000103f5b,%rax$/;"	l
ffff800000101451	kernel.asm	/^ffff800000101451:	80 ff ff $/;"	l
ffff800000101454	kernel.asm	/^ffff800000101454:	ff d0                	callq  *%rax$/;"	l
ffff800000101456	kernel.asm	/^ffff800000101456:	90                   	nop$/;"	l
ffff800000101457	kernel.asm	/^ffff800000101457:	5d                   	pop    %rbp$/;"	l
ffff800000101458	kernel.asm	/^ffff800000101458:	c3                   	retq   $/;"	l
ffff800000101459	kernel.asm	/^ffff800000101459 <exec>:$/;"	l
ffff800000101459	kernel.asm	/^ffff800000101459:	55                   	push   %rbp$/;"	l
ffff80000010145a	kernel.asm	/^ffff80000010145a:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010145d	kernel.asm	/^ffff80000010145d:	48 81 ec 00 02 00 00 	sub    $0x200,%rsp$/;"	l
ffff800000101464	kernel.asm	/^ffff800000101464:	48 89 bd 08 fe ff ff 	mov    %rdi,-0x1f8(%rbp)$/;"	l
ffff80000010146b	kernel.asm	/^ffff80000010146b:	48 89 b5 00 fe ff ff 	mov    %rsi,-0x200(%rbp)$/;"	l
ffff800000101472	kernel.asm	/^ffff800000101472:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000101479	kernel.asm	/^ffff800000101479:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff80000010147d	kernel.asm	/^ffff80000010147d:	48 8b 40 08          	mov    0x8(%rax),%rax$/;"	l
ffff800000101481	kernel.asm	/^ffff800000101481:	48 89 45 b8          	mov    %rax,-0x48(%rbp)$/;"	l
ffff800000101485	kernel.asm	/^ffff800000101485:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff80000010148a	kernel.asm	/^ffff80000010148a:	48 ba 20 4f 10 00 00 	movabs $0xffff800000104f20,%rdx$/;"	l
ffff800000101491	kernel.asm	/^ffff800000101491:	80 ff ff $/;"	l
ffff800000101494	kernel.asm	/^ffff800000101494:	ff d2                	callq  *%rdx$/;"	l
ffff800000101496	kernel.asm	/^ffff800000101496:	48 8b 85 08 fe ff ff 	mov    -0x1f8(%rbp),%rax$/;"	l
ffff80000010149d	kernel.asm	/^ffff80000010149d:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001014a0	kernel.asm	/^ffff8000001014a0:	48 b8 b0 37 10 00 00 	movabs $0xffff8000001037b0,%rax$/;"	l
ffff8000001014a7	kernel.asm	/^ffff8000001014a7:	80 ff ff $/;"	l
ffff8000001014aa	kernel.asm	/^ffff8000001014aa:	ff d0                	callq  *%rax$/;"	l
ffff8000001014ac	kernel.asm	/^ffff8000001014ac:	48 89 45 c8          	mov    %rax,-0x38(%rbp)$/;"	l
ffff8000001014b0	kernel.asm	/^ffff8000001014b0:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)$/;"	l
ffff8000001014b5	kernel.asm	/^ffff8000001014b5:	75 1b                	jne    ffff8000001014d2 <exec+0x79>$/;"	l
ffff8000001014b7	kernel.asm	/^ffff8000001014b7:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff8000001014bc	kernel.asm	/^ffff8000001014bc:	48 ba f6 4f 10 00 00 	movabs $0xffff800000104ff6,%rdx$/;"	l
ffff8000001014c3	kernel.asm	/^ffff8000001014c3:	80 ff ff $/;"	l
ffff8000001014c6	kernel.asm	/^ffff8000001014c6:	ff d2                	callq  *%rdx$/;"	l
ffff8000001014c8	kernel.asm	/^ffff8000001014c8:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff8000001014cd	kernel.asm	/^ffff8000001014cd:	e9 a9 05 00 00       	jmpq   ffff800000101a7b <exec+0x622>$/;"	l
ffff8000001014d2	kernel.asm	/^ffff8000001014d2:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
ffff8000001014d6	kernel.asm	/^ffff8000001014d6:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001014d9	kernel.asm	/^ffff8000001014d9:	48 b8 1d 28 10 00 00 	movabs $0xffff80000010281d,%rax$/;"	l
ffff8000001014e0	kernel.asm	/^ffff8000001014e0:	80 ff ff $/;"	l
ffff8000001014e3	kernel.asm	/^ffff8000001014e3:	ff d0                	callq  *%rax$/;"	l
ffff8000001014e5	kernel.asm	/^ffff8000001014e5:	48 c7 45 c0 00 00 00 	movq   $0x0,-0x40(%rbp)$/;"	l
ffff8000001014ec	kernel.asm	/^ffff8000001014ec:	00 $/;"	l
ffff8000001014ed	kernel.asm	/^ffff8000001014ed:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
ffff8000001014f1	kernel.asm	/^ffff8000001014f1:	48 8b 80 98 00 00 00 	mov    0x98(%rax),%rax$/;"	l
ffff8000001014f8	kernel.asm	/^ffff8000001014f8:	48 8b 40 10          	mov    0x10(%rax),%rax$/;"	l
ffff8000001014fc	kernel.asm	/^ffff8000001014fc:	48 8d b5 50 fe ff ff 	lea    -0x1b0(%rbp),%rsi$/;"	l
ffff800000101503	kernel.asm	/^ffff800000101503:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi$/;"	l
ffff800000101507	kernel.asm	/^ffff800000101507:	b9 40 00 00 00       	mov    $0x40,%ecx$/;"	l
ffff80000010150c	kernel.asm	/^ffff80000010150c:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
ffff800000101511	kernel.asm	/^ffff800000101511:	ff d0                	callq  *%rax$/;"	l
ffff800000101513	kernel.asm	/^ffff800000101513:	83 f8 40             	cmp    $0x40,%eax$/;"	l
ffff800000101516	kernel.asm	/^ffff800000101516:	0f 85 f0 04 00 00    	jne    ffff800000101a0c <exec+0x5b3>$/;"	l
ffff80000010151c	kernel.asm	/^ffff80000010151c:	8b 85 50 fe ff ff    	mov    -0x1b0(%rbp),%eax$/;"	l
ffff800000101522	kernel.asm	/^ffff800000101522:	3d 7f 45 4c 46       	cmp    $0x464c457f,%eax$/;"	l
ffff800000101527	kernel.asm	/^ffff800000101527:	0f 85 e2 04 00 00    	jne    ffff800000101a0f <exec+0x5b6>$/;"	l
ffff80000010152d	kernel.asm	/^ffff80000010152d:	48 b8 e5 b2 10 00 00 	movabs $0xffff80000010b2e5,%rax$/;"	l
ffff800000101534	kernel.asm	/^ffff800000101534:	80 ff ff $/;"	l
ffff800000101537	kernel.asm	/^ffff800000101537:	ff d0                	callq  *%rax$/;"	l
ffff800000101539	kernel.asm	/^ffff800000101539:	48 89 45 c0          	mov    %rax,-0x40(%rbp)$/;"	l
ffff80000010153d	kernel.asm	/^ffff80000010153d:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)$/;"	l
ffff800000101542	kernel.asm	/^ffff800000101542:	0f 84 ca 04 00 00    	je     ffff800000101a12 <exec+0x5b9>$/;"	l
ffff800000101548	kernel.asm	/^ffff800000101548:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)$/;"	l
ffff80000010154f	kernel.asm	/^ffff80000010154f:	00 $/;"	l
ffff800000101550	kernel.asm	/^ffff800000101550:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)$/;"	l
ffff800000101557	kernel.asm	/^ffff800000101557:	48 8b 85 70 fe ff ff 	mov    -0x190(%rbp),%rax$/;"	l
ffff80000010155e	kernel.asm	/^ffff80000010155e:	89 45 e8             	mov    %eax,-0x18(%rbp)$/;"	l
ffff800000101561	kernel.asm	/^ffff800000101561:	e9 15 01 00 00       	jmpq   ffff80000010167b <exec+0x222>$/;"	l
ffff800000101566	kernel.asm	/^ffff800000101566:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
ffff80000010156a	kernel.asm	/^ffff80000010156a:	48 8b 80 98 00 00 00 	mov    0x98(%rax),%rax$/;"	l
ffff800000101571	kernel.asm	/^ffff800000101571:	48 8b 40 10          	mov    0x10(%rax),%rax$/;"	l
ffff800000101575	kernel.asm	/^ffff800000101575:	8b 55 e8             	mov    -0x18(%rbp),%edx$/;"	l
ffff800000101578	kernel.asm	/^ffff800000101578:	48 8d b5 10 fe ff ff 	lea    -0x1f0(%rbp),%rsi$/;"	l
ffff80000010157f	kernel.asm	/^ffff80000010157f:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi$/;"	l
ffff800000101583	kernel.asm	/^ffff800000101583:	b9 38 00 00 00       	mov    $0x38,%ecx$/;"	l
ffff800000101588	kernel.asm	/^ffff800000101588:	ff d0                	callq  *%rax$/;"	l
ffff80000010158a	kernel.asm	/^ffff80000010158a:	83 f8 38             	cmp    $0x38,%eax$/;"	l
ffff80000010158d	kernel.asm	/^ffff80000010158d:	0f 85 82 04 00 00    	jne    ffff800000101a15 <exec+0x5bc>$/;"	l
ffff800000101593	kernel.asm	/^ffff800000101593:	8b 85 10 fe ff ff    	mov    -0x1f0(%rbp),%eax$/;"	l
ffff800000101599	kernel.asm	/^ffff800000101599:	83 f8 01             	cmp    $0x1,%eax$/;"	l
ffff80000010159c	kernel.asm	/^ffff80000010159c:	0f 85 cb 00 00 00    	jne    ffff80000010166d <exec+0x214>$/;"	l
ffff8000001015a2	kernel.asm	/^ffff8000001015a2:	48 8b 95 38 fe ff ff 	mov    -0x1c8(%rbp),%rdx$/;"	l
ffff8000001015a9	kernel.asm	/^ffff8000001015a9:	48 8b 85 30 fe ff ff 	mov    -0x1d0(%rbp),%rax$/;"	l
ffff8000001015b0	kernel.asm	/^ffff8000001015b0:	48 39 c2             	cmp    %rax,%rdx$/;"	l
ffff8000001015b3	kernel.asm	/^ffff8000001015b3:	0f 82 5f 04 00 00    	jb     ffff800000101a18 <exec+0x5bf>$/;"	l
ffff8000001015b9	kernel.asm	/^ffff8000001015b9:	48 8b 95 20 fe ff ff 	mov    -0x1e0(%rbp),%rdx$/;"	l
ffff8000001015c0	kernel.asm	/^ffff8000001015c0:	48 8b 85 38 fe ff ff 	mov    -0x1c8(%rbp),%rax$/;"	l
ffff8000001015c7	kernel.asm	/^ffff8000001015c7:	48 01 c2             	add    %rax,%rdx$/;"	l
ffff8000001015ca	kernel.asm	/^ffff8000001015ca:	48 8b 85 20 fe ff ff 	mov    -0x1e0(%rbp),%rax$/;"	l
ffff8000001015d1	kernel.asm	/^ffff8000001015d1:	48 39 c2             	cmp    %rax,%rdx$/;"	l
ffff8000001015d4	kernel.asm	/^ffff8000001015d4:	0f 82 41 04 00 00    	jb     ffff800000101a1b <exec+0x5c2>$/;"	l
ffff8000001015da	kernel.asm	/^ffff8000001015da:	48 8b 85 20 fe ff ff 	mov    -0x1e0(%rbp),%rax$/;"	l
ffff8000001015e1	kernel.asm	/^ffff8000001015e1:	89 c2                	mov    %eax,%edx$/;"	l
ffff8000001015e3	kernel.asm	/^ffff8000001015e3:	48 8b 85 38 fe ff ff 	mov    -0x1c8(%rbp),%rax$/;"	l
ffff8000001015ea	kernel.asm	/^ffff8000001015ea:	01 c2                	add    %eax,%edx$/;"	l
ffff8000001015ec	kernel.asm	/^ffff8000001015ec:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff8000001015f0	kernel.asm	/^ffff8000001015f0:	89 c1                	mov    %eax,%ecx$/;"	l
ffff8000001015f2	kernel.asm	/^ffff8000001015f2:	48 8b 45 c0          	mov    -0x40(%rbp),%rax$/;"	l
ffff8000001015f6	kernel.asm	/^ffff8000001015f6:	89 ce                	mov    %ecx,%esi$/;"	l
ffff8000001015f8	kernel.asm	/^ffff8000001015f8:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001015fb	kernel.asm	/^ffff8000001015fb:	48 b8 3f ba 10 00 00 	movabs $0xffff80000010ba3f,%rax$/;"	l
ffff800000101602	kernel.asm	/^ffff800000101602:	80 ff ff $/;"	l
ffff800000101605	kernel.asm	/^ffff800000101605:	ff d0                	callq  *%rax$/;"	l
ffff800000101607	kernel.asm	/^ffff800000101607:	48 98                	cltq   $/;"	l
ffff800000101609	kernel.asm	/^ffff800000101609:	48 89 45 d8          	mov    %rax,-0x28(%rbp)$/;"	l
ffff80000010160d	kernel.asm	/^ffff80000010160d:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)$/;"	l
ffff800000101612	kernel.asm	/^ffff800000101612:	0f 84 06 04 00 00    	je     ffff800000101a1e <exec+0x5c5>$/;"	l
ffff800000101618	kernel.asm	/^ffff800000101618:	48 8b 85 20 fe ff ff 	mov    -0x1e0(%rbp),%rax$/;"	l
ffff80000010161f	kernel.asm	/^ffff80000010161f:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
ffff800000101624	kernel.asm	/^ffff800000101624:	48 85 c0             	test   %rax,%rax$/;"	l
ffff800000101627	kernel.asm	/^ffff800000101627:	0f 85 f4 03 00 00    	jne    ffff800000101a21 <exec+0x5c8>$/;"	l
ffff80000010162d	kernel.asm	/^ffff80000010162d:	48 8b 85 30 fe ff ff 	mov    -0x1d0(%rbp),%rax$/;"	l
ffff800000101634	kernel.asm	/^ffff800000101634:	89 c7                	mov    %eax,%edi$/;"	l
ffff800000101636	kernel.asm	/^ffff800000101636:	48 8b 85 18 fe ff ff 	mov    -0x1e8(%rbp),%rax$/;"	l
ffff80000010163d	kernel.asm	/^ffff80000010163d:	89 c1                	mov    %eax,%ecx$/;"	l
ffff80000010163f	kernel.asm	/^ffff80000010163f:	48 8b 85 20 fe ff ff 	mov    -0x1e0(%rbp),%rax$/;"	l
ffff800000101646	kernel.asm	/^ffff800000101646:	48 89 c6             	mov    %rax,%rsi$/;"	l
ffff800000101649	kernel.asm	/^ffff800000101649:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx$/;"	l
ffff80000010164d	kernel.asm	/^ffff80000010164d:	48 8b 45 c0          	mov    -0x40(%rbp),%rax$/;"	l
ffff800000101651	kernel.asm	/^ffff800000101651:	41 89 f8             	mov    %edi,%r8d$/;"	l
ffff800000101654	kernel.asm	/^ffff800000101654:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000101657	kernel.asm	/^ffff800000101657:	48 b8 1b b9 10 00 00 	movabs $0xffff80000010b91b,%rax$/;"	l
ffff80000010165e	kernel.asm	/^ffff80000010165e:	80 ff ff $/;"	l
ffff800000101661	kernel.asm	/^ffff800000101661:	ff d0                	callq  *%rax$/;"	l
ffff800000101663	kernel.asm	/^ffff800000101663:	85 c0                	test   %eax,%eax$/;"	l
ffff800000101665	kernel.asm	/^ffff800000101665:	0f 88 b9 03 00 00    	js     ffff800000101a24 <exec+0x5cb>$/;"	l
ffff80000010166b	kernel.asm	/^ffff80000010166b:	eb 01                	jmp    ffff80000010166e <exec+0x215>$/;"	l
ffff80000010166d	kernel.asm	/^ffff80000010166d:	90                   	nop$/;"	l
ffff80000010166e	kernel.asm	/^ffff80000010166e:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)$/;"	l
ffff800000101672	kernel.asm	/^ffff800000101672:	8b 45 e8             	mov    -0x18(%rbp),%eax$/;"	l
ffff800000101675	kernel.asm	/^ffff800000101675:	83 c0 38             	add    $0x38,%eax$/;"	l
ffff800000101678	kernel.asm	/^ffff800000101678:	89 45 e8             	mov    %eax,-0x18(%rbp)$/;"	l
ffff80000010167b	kernel.asm	/^ffff80000010167b:	0f b7 85 88 fe ff ff 	movzwl -0x178(%rbp),%eax$/;"	l
ffff800000101682	kernel.asm	/^ffff800000101682:	0f b7 c0             	movzwl %ax,%eax$/;"	l
ffff800000101685	kernel.asm	/^ffff800000101685:	3b 45 ec             	cmp    -0x14(%rbp),%eax$/;"	l
ffff800000101688	kernel.asm	/^ffff800000101688:	0f 8f d8 fe ff ff    	jg     ffff800000101566 <exec+0x10d>$/;"	l
ffff80000010168e	kernel.asm	/^ffff80000010168e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
ffff800000101692	kernel.asm	/^ffff800000101692:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000101695	kernel.asm	/^ffff800000101695:	48 b8 2c 2b 10 00 00 	movabs $0xffff800000102b2c,%rax$/;"	l
ffff80000010169c	kernel.asm	/^ffff80000010169c:	80 ff ff $/;"	l
ffff80000010169f	kernel.asm	/^ffff80000010169f:	ff d0                	callq  *%rax$/;"	l
ffff8000001016a1	kernel.asm	/^ffff8000001016a1:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff8000001016a6	kernel.asm	/^ffff8000001016a6:	48 ba f6 4f 10 00 00 	movabs $0xffff800000104ff6,%rdx$/;"	l
ffff8000001016ad	kernel.asm	/^ffff8000001016ad:	80 ff ff $/;"	l
ffff8000001016b0	kernel.asm	/^ffff8000001016b0:	ff d2                	callq  *%rdx$/;"	l
ffff8000001016b2	kernel.asm	/^ffff8000001016b2:	48 c7 45 c8 00 00 00 	movq   $0x0,-0x38(%rbp)$/;"	l
ffff8000001016b9	kernel.asm	/^ffff8000001016b9:	00 $/;"	l
ffff8000001016ba	kernel.asm	/^ffff8000001016ba:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff8000001016be	kernel.asm	/^ffff8000001016be:	48 05 ff 0f 00 00    	add    $0xfff,%rax$/;"	l
ffff8000001016c4	kernel.asm	/^ffff8000001016c4:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax$/;"	l
ffff8000001016ca	kernel.asm	/^ffff8000001016ca:	48 89 45 d8          	mov    %rax,-0x28(%rbp)$/;"	l
ffff8000001016ce	kernel.asm	/^ffff8000001016ce:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff8000001016d2	kernel.asm	/^ffff8000001016d2:	8d 90 00 20 00 00    	lea    0x2000(%rax),%edx$/;"	l
ffff8000001016d8	kernel.asm	/^ffff8000001016d8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff8000001016dc	kernel.asm	/^ffff8000001016dc:	89 c1                	mov    %eax,%ecx$/;"	l
ffff8000001016de	kernel.asm	/^ffff8000001016de:	48 8b 45 c0          	mov    -0x40(%rbp),%rax$/;"	l
ffff8000001016e2	kernel.asm	/^ffff8000001016e2:	89 ce                	mov    %ecx,%esi$/;"	l
ffff8000001016e4	kernel.asm	/^ffff8000001016e4:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001016e7	kernel.asm	/^ffff8000001016e7:	48 b8 3f ba 10 00 00 	movabs $0xffff80000010ba3f,%rax$/;"	l
ffff8000001016ee	kernel.asm	/^ffff8000001016ee:	80 ff ff $/;"	l
ffff8000001016f1	kernel.asm	/^ffff8000001016f1:	ff d0                	callq  *%rax$/;"	l
ffff8000001016f3	kernel.asm	/^ffff8000001016f3:	48 98                	cltq   $/;"	l
ffff8000001016f5	kernel.asm	/^ffff8000001016f5:	48 89 45 d8          	mov    %rax,-0x28(%rbp)$/;"	l
ffff8000001016f9	kernel.asm	/^ffff8000001016f9:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)$/;"	l
ffff8000001016fe	kernel.asm	/^ffff8000001016fe:	0f 84 23 03 00 00    	je     ffff800000101a27 <exec+0x5ce>$/;"	l
ffff800000101704	kernel.asm	/^ffff800000101704:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff800000101708	kernel.asm	/^ffff800000101708:	48 2d 00 20 00 00    	sub    $0x2000,%rax$/;"	l
ffff80000010170e	kernel.asm	/^ffff80000010170e:	48 89 c2             	mov    %rax,%rdx$/;"	l
ffff800000101711	kernel.asm	/^ffff800000101711:	48 8b 45 c0          	mov    -0x40(%rbp),%rax$/;"	l
ffff800000101715	kernel.asm	/^ffff800000101715:	48 89 d6             	mov    %rdx,%rsi$/;"	l
ffff800000101718	kernel.asm	/^ffff800000101718:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010171b	kernel.asm	/^ffff80000010171b:	48 b8 bd be 10 00 00 	movabs $0xffff80000010bebd,%rax$/;"	l
ffff800000101722	kernel.asm	/^ffff800000101722:	80 ff ff $/;"	l
ffff800000101725	kernel.asm	/^ffff800000101725:	ff d0                	callq  *%rax$/;"	l
ffff800000101727	kernel.asm	/^ffff800000101727:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff80000010172b	kernel.asm	/^ffff80000010172b:	48 89 45 d0          	mov    %rax,-0x30(%rbp)$/;"	l
ffff80000010172f	kernel.asm	/^ffff80000010172f:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)$/;"	l
ffff800000101736	kernel.asm	/^ffff800000101736:	00 $/;"	l
ffff800000101737	kernel.asm	/^ffff800000101737:	e9 ca 00 00 00       	jmpq   ffff800000101806 <exec+0x3ad>$/;"	l
ffff80000010173c	kernel.asm	/^ffff80000010173c:	48 83 7d e0 1f       	cmpq   $0x1f,-0x20(%rbp)$/;"	l
ffff800000101741	kernel.asm	/^ffff800000101741:	0f 87 e3 02 00 00    	ja     ffff800000101a2a <exec+0x5d1>$/;"	l
ffff800000101747	kernel.asm	/^ffff800000101747:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff80000010174b	kernel.asm	/^ffff80000010174b:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx$/;"	l
ffff800000101752	kernel.asm	/^ffff800000101752:	00 $/;"	l
ffff800000101753	kernel.asm	/^ffff800000101753:	48 8b 85 00 fe ff ff 	mov    -0x200(%rbp),%rax$/;"	l
ffff80000010175a	kernel.asm	/^ffff80000010175a:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff80000010175d	kernel.asm	/^ffff80000010175d:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff800000101760	kernel.asm	/^ffff800000101760:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000101763	kernel.asm	/^ffff800000101763:	48 b8 af 7f 10 00 00 	movabs $0xffff800000107faf,%rax$/;"	l
ffff80000010176a	kernel.asm	/^ffff80000010176a:	80 ff ff $/;"	l
ffff80000010176d	kernel.asm	/^ffff80000010176d:	ff d0                	callq  *%rax$/;"	l
ffff80000010176f	kernel.asm	/^ffff80000010176f:	83 c0 01             	add    $0x1,%eax$/;"	l
ffff800000101772	kernel.asm	/^ffff800000101772:	48 98                	cltq   $/;"	l
ffff800000101774	kernel.asm	/^ffff800000101774:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx$/;"	l
ffff800000101778	kernel.asm	/^ffff800000101778:	48 29 c2             	sub    %rax,%rdx$/;"	l
ffff80000010177b	kernel.asm	/^ffff80000010177b:	48 89 d0             	mov    %rdx,%rax$/;"	l
ffff80000010177e	kernel.asm	/^ffff80000010177e:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax$/;"	l
ffff800000101782	kernel.asm	/^ffff800000101782:	48 89 45 d0          	mov    %rax,-0x30(%rbp)$/;"	l
ffff800000101786	kernel.asm	/^ffff800000101786:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff80000010178a	kernel.asm	/^ffff80000010178a:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx$/;"	l
ffff800000101791	kernel.asm	/^ffff800000101791:	00 $/;"	l
ffff800000101792	kernel.asm	/^ffff800000101792:	48 8b 85 00 fe ff ff 	mov    -0x200(%rbp),%rax$/;"	l
ffff800000101799	kernel.asm	/^ffff800000101799:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff80000010179c	kernel.asm	/^ffff80000010179c:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff80000010179f	kernel.asm	/^ffff80000010179f:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001017a2	kernel.asm	/^ffff8000001017a2:	48 b8 af 7f 10 00 00 	movabs $0xffff800000107faf,%rax$/;"	l
ffff8000001017a9	kernel.asm	/^ffff8000001017a9:	80 ff ff $/;"	l
ffff8000001017ac	kernel.asm	/^ffff8000001017ac:	ff d0                	callq  *%rax$/;"	l
ffff8000001017ae	kernel.asm	/^ffff8000001017ae:	83 c0 01             	add    $0x1,%eax$/;"	l
ffff8000001017b1	kernel.asm	/^ffff8000001017b1:	89 c1                	mov    %eax,%ecx$/;"	l
ffff8000001017b3	kernel.asm	/^ffff8000001017b3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff8000001017b7	kernel.asm	/^ffff8000001017b7:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx$/;"	l
ffff8000001017be	kernel.asm	/^ffff8000001017be:	00 $/;"	l
ffff8000001017bf	kernel.asm	/^ffff8000001017bf:	48 8b 85 00 fe ff ff 	mov    -0x200(%rbp),%rax$/;"	l
ffff8000001017c6	kernel.asm	/^ffff8000001017c6:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff8000001017c9	kernel.asm	/^ffff8000001017c9:	48 8b 10             	mov    (%rax),%rdx$/;"	l
ffff8000001017cc	kernel.asm	/^ffff8000001017cc:	48 8b 45 d0          	mov    -0x30(%rbp),%rax$/;"	l
ffff8000001017d0	kernel.asm	/^ffff8000001017d0:	89 c6                	mov    %eax,%esi$/;"	l
ffff8000001017d2	kernel.asm	/^ffff8000001017d2:	48 8b 45 c0          	mov    -0x40(%rbp),%rax$/;"	l
ffff8000001017d6	kernel.asm	/^ffff8000001017d6:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001017d9	kernel.asm	/^ffff8000001017d9:	48 b8 26 c1 10 00 00 	movabs $0xffff80000010c126,%rax$/;"	l
ffff8000001017e0	kernel.asm	/^ffff8000001017e0:	80 ff ff $/;"	l
ffff8000001017e3	kernel.asm	/^ffff8000001017e3:	ff d0                	callq  *%rax$/;"	l
ffff8000001017e5	kernel.asm	/^ffff8000001017e5:	85 c0                	test   %eax,%eax$/;"	l
ffff8000001017e7	kernel.asm	/^ffff8000001017e7:	0f 88 40 02 00 00    	js     ffff800000101a2d <exec+0x5d4>$/;"	l
ffff8000001017ed	kernel.asm	/^ffff8000001017ed:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff8000001017f1	kernel.asm	/^ffff8000001017f1:	48 8d 50 03          	lea    0x3(%rax),%rdx$/;"	l
ffff8000001017f5	kernel.asm	/^ffff8000001017f5:	48 8b 45 d0          	mov    -0x30(%rbp),%rax$/;"	l
ffff8000001017f9	kernel.asm	/^ffff8000001017f9:	48 89 84 d5 90 fe ff 	mov    %rax,-0x170(%rbp,%rdx,8)$/;"	l
ffff800000101800	kernel.asm	/^ffff800000101800:	ff $/;"	l
ffff800000101801	kernel.asm	/^ffff800000101801:	48 83 45 e0 01       	addq   $0x1,-0x20(%rbp)$/;"	l
ffff800000101806	kernel.asm	/^ffff800000101806:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff80000010180a	kernel.asm	/^ffff80000010180a:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx$/;"	l
ffff800000101811	kernel.asm	/^ffff800000101811:	00 $/;"	l
ffff800000101812	kernel.asm	/^ffff800000101812:	48 8b 85 00 fe ff ff 	mov    -0x200(%rbp),%rax$/;"	l
ffff800000101819	kernel.asm	/^ffff800000101819:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff80000010181c	kernel.asm	/^ffff80000010181c:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff80000010181f	kernel.asm	/^ffff80000010181f:	48 85 c0             	test   %rax,%rax$/;"	l
ffff800000101822	kernel.asm	/^ffff800000101822:	0f 85 14 ff ff ff    	jne    ffff80000010173c <exec+0x2e3>$/;"	l
ffff800000101828	kernel.asm	/^ffff800000101828:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff80000010182c	kernel.asm	/^ffff80000010182c:	48 83 c0 03          	add    $0x3,%rax$/;"	l
ffff800000101830	kernel.asm	/^ffff800000101830:	48 c7 84 c5 90 fe ff 	movq   $0x0,-0x170(%rbp,%rax,8)$/;"	l
ffff800000101837	kernel.asm	/^ffff800000101837:	ff 00 00 00 00 $/;"	l
ffff80000010183c	kernel.asm	/^ffff80000010183c:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff800000101841	kernel.asm	/^ffff800000101841:	48 89 85 90 fe ff ff 	mov    %rax,-0x170(%rbp)$/;"	l
ffff800000101848	kernel.asm	/^ffff800000101848:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff80000010184c	kernel.asm	/^ffff80000010184c:	48 89 85 98 fe ff ff 	mov    %rax,-0x168(%rbp)$/;"	l
ffff800000101853	kernel.asm	/^ffff800000101853:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff800000101857	kernel.asm	/^ffff800000101857:	48 83 c0 01          	add    $0x1,%rax$/;"	l
ffff80000010185b	kernel.asm	/^ffff80000010185b:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx$/;"	l
ffff800000101862	kernel.asm	/^ffff800000101862:	00 $/;"	l
ffff800000101863	kernel.asm	/^ffff800000101863:	48 8b 45 d0          	mov    -0x30(%rbp),%rax$/;"	l
ffff800000101867	kernel.asm	/^ffff800000101867:	48 29 d0             	sub    %rdx,%rax$/;"	l
ffff80000010186a	kernel.asm	/^ffff80000010186a:	48 89 85 a0 fe ff ff 	mov    %rax,-0x160(%rbp)$/;"	l
ffff800000101871	kernel.asm	/^ffff800000101871:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000101878	kernel.asm	/^ffff800000101878:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff80000010187c	kernel.asm	/^ffff80000010187c:	48 8b 40 28          	mov    0x28(%rax),%rax$/;"	l
ffff800000101880	kernel.asm	/^ffff800000101880:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx$/;"	l
ffff800000101884	kernel.asm	/^ffff800000101884:	48 89 50 30          	mov    %rdx,0x30(%rax)$/;"	l
ffff800000101888	kernel.asm	/^ffff800000101888:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff80000010188f	kernel.asm	/^ffff80000010188f:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000101893	kernel.asm	/^ffff800000101893:	48 8b 40 28          	mov    0x28(%rax),%rax$/;"	l
ffff800000101897	kernel.asm	/^ffff800000101897:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx$/;"	l
ffff80000010189b	kernel.asm	/^ffff80000010189b:	48 83 c2 01          	add    $0x1,%rdx$/;"	l
ffff80000010189f	kernel.asm	/^ffff80000010189f:	48 8d 0c d5 00 00 00 	lea    0x0(,%rdx,8),%rcx$/;"	l
ffff8000001018a6	kernel.asm	/^ffff8000001018a6:	00 $/;"	l
ffff8000001018a7	kernel.asm	/^ffff8000001018a7:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx$/;"	l
ffff8000001018ab	kernel.asm	/^ffff8000001018ab:	48 29 ca             	sub    %rcx,%rdx$/;"	l
ffff8000001018ae	kernel.asm	/^ffff8000001018ae:	48 89 50 28          	mov    %rdx,0x28(%rax)$/;"	l
ffff8000001018b2	kernel.asm	/^ffff8000001018b2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff8000001018b6	kernel.asm	/^ffff8000001018b6:	48 83 c0 04          	add    $0x4,%rax$/;"	l
ffff8000001018ba	kernel.asm	/^ffff8000001018ba:	48 c1 e0 03          	shl    $0x3,%rax$/;"	l
ffff8000001018be	kernel.asm	/^ffff8000001018be:	48 29 45 d0          	sub    %rax,-0x30(%rbp)$/;"	l
ffff8000001018c2	kernel.asm	/^ffff8000001018c2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff8000001018c6	kernel.asm	/^ffff8000001018c6:	48 83 c0 04          	add    $0x4,%rax$/;"	l
ffff8000001018ca	kernel.asm	/^ffff8000001018ca:	8d 0c c5 00 00 00 00 	lea    0x0(,%rax,8),%ecx$/;"	l
ffff8000001018d1	kernel.asm	/^ffff8000001018d1:	48 8b 45 d0          	mov    -0x30(%rbp),%rax$/;"	l
ffff8000001018d5	kernel.asm	/^ffff8000001018d5:	89 c6                	mov    %eax,%esi$/;"	l
ffff8000001018d7	kernel.asm	/^ffff8000001018d7:	48 8d 95 90 fe ff ff 	lea    -0x170(%rbp),%rdx$/;"	l
ffff8000001018de	kernel.asm	/^ffff8000001018de:	48 8b 45 c0          	mov    -0x40(%rbp),%rax$/;"	l
ffff8000001018e2	kernel.asm	/^ffff8000001018e2:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001018e5	kernel.asm	/^ffff8000001018e5:	48 b8 26 c1 10 00 00 	movabs $0xffff80000010c126,%rax$/;"	l
ffff8000001018ec	kernel.asm	/^ffff8000001018ec:	80 ff ff $/;"	l
ffff8000001018ef	kernel.asm	/^ffff8000001018ef:	ff d0                	callq  *%rax$/;"	l
ffff8000001018f1	kernel.asm	/^ffff8000001018f1:	85 c0                	test   %eax,%eax$/;"	l
ffff8000001018f3	kernel.asm	/^ffff8000001018f3:	0f 88 37 01 00 00    	js     ffff800000101a30 <exec+0x5d7>$/;"	l
ffff8000001018f9	kernel.asm	/^ffff8000001018f9:	48 8b 85 08 fe ff ff 	mov    -0x1f8(%rbp),%rax$/;"	l
ffff800000101900	kernel.asm	/^ffff800000101900:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff800000101904	kernel.asm	/^ffff800000101904:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000101908	kernel.asm	/^ffff800000101908:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ffff80000010190c	kernel.asm	/^ffff80000010190c:	eb 1c                	jmp    ffff80000010192a <exec+0x4d1>$/;"	l
ffff80000010190e	kernel.asm	/^ffff80000010190e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000101912	kernel.asm	/^ffff800000101912:	0f b6 00             	movzbl (%rax),%eax$/;"	l
ffff800000101915	kernel.asm	/^ffff800000101915:	3c 2f                	cmp    $0x2f,%al$/;"	l
ffff800000101917	kernel.asm	/^ffff800000101917:	75 0c                	jne    ffff800000101925 <exec+0x4cc>$/;"	l
ffff800000101919	kernel.asm	/^ffff800000101919:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010191d	kernel.asm	/^ffff80000010191d:	48 83 c0 01          	add    $0x1,%rax$/;"	l
ffff800000101921	kernel.asm	/^ffff800000101921:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ffff800000101925	kernel.asm	/^ffff800000101925:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)$/;"	l
ffff80000010192a	kernel.asm	/^ffff80000010192a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010192e	kernel.asm	/^ffff80000010192e:	0f b6 00             	movzbl (%rax),%eax$/;"	l
ffff800000101931	kernel.asm	/^ffff800000101931:	84 c0                	test   %al,%al$/;"	l
ffff800000101933	kernel.asm	/^ffff800000101933:	75 d9                	jne    ffff80000010190e <exec+0x4b5>$/;"	l
ffff800000101935	kernel.asm	/^ffff800000101935:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff80000010193c	kernel.asm	/^ffff80000010193c:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000101940	kernel.asm	/^ffff800000101940:	48 8d 88 d0 00 00 00 	lea    0xd0(%rax),%rcx$/;"	l
ffff800000101947	kernel.asm	/^ffff800000101947:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff80000010194b	kernel.asm	/^ffff80000010194b:	ba 10 00 00 00       	mov    $0x10,%edx$/;"	l
ffff800000101950	kernel.asm	/^ffff800000101950:	48 89 c6             	mov    %rax,%rsi$/;"	l
ffff800000101953	kernel.asm	/^ffff800000101953:	48 89 cf             	mov    %rcx,%rdi$/;"	l
ffff800000101956	kernel.asm	/^ffff800000101956:	48 b8 4d 7f 10 00 00 	movabs $0xffff800000107f4d,%rax$/;"	l
ffff80000010195d	kernel.asm	/^ffff80000010195d:	80 ff ff $/;"	l
ffff800000101960	kernel.asm	/^ffff800000101960:	ff d0                	callq  *%rax$/;"	l
ffff800000101962	kernel.asm	/^ffff800000101962:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000101969	kernel.asm	/^ffff800000101969:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff80000010196d	kernel.asm	/^ffff80000010196d:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx$/;"	l
ffff800000101971	kernel.asm	/^ffff800000101971:	48 89 50 08          	mov    %rdx,0x8(%rax)$/;"	l
ffff800000101975	kernel.asm	/^ffff800000101975:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff80000010197c	kernel.asm	/^ffff80000010197c:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000101980	kernel.asm	/^ffff800000101980:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx$/;"	l
ffff800000101984	kernel.asm	/^ffff800000101984:	48 89 10             	mov    %rdx,(%rax)$/;"	l
ffff800000101987	kernel.asm	/^ffff800000101987:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff80000010198e	kernel.asm	/^ffff80000010198e:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000101992	kernel.asm	/^ffff800000101992:	48 8b 40 28          	mov    0x28(%rax),%rax$/;"	l
ffff800000101996	kernel.asm	/^ffff800000101996:	48 8b 95 68 fe ff ff 	mov    -0x198(%rbp),%rdx$/;"	l
ffff80000010199d	kernel.asm	/^ffff80000010199d:	48 89 90 88 00 00 00 	mov    %rdx,0x88(%rax)$/;"	l
ffff8000001019a4	kernel.asm	/^ffff8000001019a4:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff8000001019ab	kernel.asm	/^ffff8000001019ab:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff8000001019af	kernel.asm	/^ffff8000001019af:	48 8b 40 28          	mov    0x28(%rax),%rax$/;"	l
ffff8000001019b3	kernel.asm	/^ffff8000001019b3:	48 8b 95 68 fe ff ff 	mov    -0x198(%rbp),%rdx$/;"	l
ffff8000001019ba	kernel.asm	/^ffff8000001019ba:	48 89 50 10          	mov    %rdx,0x10(%rax)$/;"	l
ffff8000001019be	kernel.asm	/^ffff8000001019be:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff8000001019c5	kernel.asm	/^ffff8000001019c5:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff8000001019c9	kernel.asm	/^ffff8000001019c9:	48 8b 40 28          	mov    0x28(%rax),%rax$/;"	l
ffff8000001019cd	kernel.asm	/^ffff8000001019cd:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx$/;"	l
ffff8000001019d1	kernel.asm	/^ffff8000001019d1:	48 89 90 a0 00 00 00 	mov    %rdx,0xa0(%rax)$/;"	l
ffff8000001019d8	kernel.asm	/^ffff8000001019d8:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff8000001019df	kernel.asm	/^ffff8000001019df:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff8000001019e3	kernel.asm	/^ffff8000001019e3:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001019e6	kernel.asm	/^ffff8000001019e6:	48 b8 8b b4 10 00 00 	movabs $0xffff80000010b48b,%rax$/;"	l
ffff8000001019ed	kernel.asm	/^ffff8000001019ed:	80 ff ff $/;"	l
ffff8000001019f0	kernel.asm	/^ffff8000001019f0:	ff d0                	callq  *%rax$/;"	l
ffff8000001019f2	kernel.asm	/^ffff8000001019f2:	48 8b 45 b8          	mov    -0x48(%rbp),%rax$/;"	l
ffff8000001019f6	kernel.asm	/^ffff8000001019f6:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001019f9	kernel.asm	/^ffff8000001019f9:	48 b8 89 bc 10 00 00 	movabs $0xffff80000010bc89,%rax$/;"	l
ffff800000101a00	kernel.asm	/^ffff800000101a00:	80 ff ff $/;"	l
ffff800000101a03	kernel.asm	/^ffff800000101a03:	ff d0                	callq  *%rax$/;"	l
ffff800000101a05	kernel.asm	/^ffff800000101a05:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000101a0a	kernel.asm	/^ffff800000101a0a:	eb 6f                	jmp    ffff800000101a7b <exec+0x622>$/;"	l
ffff800000101a0c	kernel.asm	/^ffff800000101a0c:	90                   	nop$/;"	l
ffff800000101a0d	kernel.asm	/^ffff800000101a0d:	eb 22                	jmp    ffff800000101a31 <exec+0x5d8>$/;"	l
ffff800000101a0f	kernel.asm	/^ffff800000101a0f:	90                   	nop$/;"	l
ffff800000101a10	kernel.asm	/^ffff800000101a10:	eb 1f                	jmp    ffff800000101a31 <exec+0x5d8>$/;"	l
ffff800000101a12	kernel.asm	/^ffff800000101a12:	90                   	nop$/;"	l
ffff800000101a13	kernel.asm	/^ffff800000101a13:	eb 1c                	jmp    ffff800000101a31 <exec+0x5d8>$/;"	l
ffff800000101a15	kernel.asm	/^ffff800000101a15:	90                   	nop$/;"	l
ffff800000101a16	kernel.asm	/^ffff800000101a16:	eb 19                	jmp    ffff800000101a31 <exec+0x5d8>$/;"	l
ffff800000101a18	kernel.asm	/^ffff800000101a18:	90                   	nop$/;"	l
ffff800000101a19	kernel.asm	/^ffff800000101a19:	eb 16                	jmp    ffff800000101a31 <exec+0x5d8>$/;"	l
ffff800000101a1b	kernel.asm	/^ffff800000101a1b:	90                   	nop$/;"	l
ffff800000101a1c	kernel.asm	/^ffff800000101a1c:	eb 13                	jmp    ffff800000101a31 <exec+0x5d8>$/;"	l
ffff800000101a1e	kernel.asm	/^ffff800000101a1e:	90                   	nop$/;"	l
ffff800000101a1f	kernel.asm	/^ffff800000101a1f:	eb 10                	jmp    ffff800000101a31 <exec+0x5d8>$/;"	l
ffff800000101a21	kernel.asm	/^ffff800000101a21:	90                   	nop$/;"	l
ffff800000101a22	kernel.asm	/^ffff800000101a22:	eb 0d                	jmp    ffff800000101a31 <exec+0x5d8>$/;"	l
ffff800000101a24	kernel.asm	/^ffff800000101a24:	90                   	nop$/;"	l
ffff800000101a25	kernel.asm	/^ffff800000101a25:	eb 0a                	jmp    ffff800000101a31 <exec+0x5d8>$/;"	l
ffff800000101a27	kernel.asm	/^ffff800000101a27:	90                   	nop$/;"	l
ffff800000101a28	kernel.asm	/^ffff800000101a28:	eb 07                	jmp    ffff800000101a31 <exec+0x5d8>$/;"	l
ffff800000101a2a	kernel.asm	/^ffff800000101a2a:	90                   	nop$/;"	l
ffff800000101a2b	kernel.asm	/^ffff800000101a2b:	eb 04                	jmp    ffff800000101a31 <exec+0x5d8>$/;"	l
ffff800000101a2d	kernel.asm	/^ffff800000101a2d:	90                   	nop$/;"	l
ffff800000101a2e	kernel.asm	/^ffff800000101a2e:	eb 01                	jmp    ffff800000101a31 <exec+0x5d8>$/;"	l
ffff800000101a30	kernel.asm	/^ffff800000101a30:	90                   	nop$/;"	l
ffff800000101a31	kernel.asm	/^ffff800000101a31:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)$/;"	l
ffff800000101a36	kernel.asm	/^ffff800000101a36:	74 13                	je     ffff800000101a4b <exec+0x5f2>$/;"	l
ffff800000101a38	kernel.asm	/^ffff800000101a38:	48 8b 45 c0          	mov    -0x40(%rbp),%rax$/;"	l
ffff800000101a3c	kernel.asm	/^ffff800000101a3c:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000101a3f	kernel.asm	/^ffff800000101a3f:	48 b8 89 bc 10 00 00 	movabs $0xffff80000010bc89,%rax$/;"	l
ffff800000101a46	kernel.asm	/^ffff800000101a46:	80 ff ff $/;"	l
ffff800000101a49	kernel.asm	/^ffff800000101a49:	ff d0                	callq  *%rax$/;"	l
ffff800000101a4b	kernel.asm	/^ffff800000101a4b:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)$/;"	l
ffff800000101a50	kernel.asm	/^ffff800000101a50:	74 24                	je     ffff800000101a76 <exec+0x61d>$/;"	l
ffff800000101a52	kernel.asm	/^ffff800000101a52:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
ffff800000101a56	kernel.asm	/^ffff800000101a56:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000101a59	kernel.asm	/^ffff800000101a59:	48 b8 2c 2b 10 00 00 	movabs $0xffff800000102b2c,%rax$/;"	l
ffff800000101a60	kernel.asm	/^ffff800000101a60:	80 ff ff $/;"	l
ffff800000101a63	kernel.asm	/^ffff800000101a63:	ff d0                	callq  *%rax$/;"	l
ffff800000101a65	kernel.asm	/^ffff800000101a65:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000101a6a	kernel.asm	/^ffff800000101a6a:	48 ba f6 4f 10 00 00 	movabs $0xffff800000104ff6,%rdx$/;"	l
ffff800000101a71	kernel.asm	/^ffff800000101a71:	80 ff ff $/;"	l
ffff800000101a74	kernel.asm	/^ffff800000101a74:	ff d2                	callq  *%rdx$/;"	l
ffff800000101a76	kernel.asm	/^ffff800000101a76:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff800000101a7b	kernel.asm	/^ffff800000101a7b:	c9                   	leaveq $/;"	l
ffff800000101a7c	kernel.asm	/^ffff800000101a7c:	c3                   	retq   $/;"	l
ffff800000101a7d	kernel.asm	/^ffff800000101a7d <fileinit>:$/;"	l
ffff800000101a7d	kernel.asm	/^ffff800000101a7d:	55                   	push   %rbp$/;"	l
ffff800000101a7e	kernel.asm	/^ffff800000101a7e:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000101a81	kernel.asm	/^ffff800000101a81:	48 be 68 c2 10 00 00 	movabs $0xffff80000010c268,%rsi$/;"	l
ffff800000101a88	kernel.asm	/^ffff800000101a88:	80 ff ff $/;"	l
ffff800000101a8b	kernel.asm	/^ffff800000101a8b:	48 bf e0 45 11 00 00 	movabs $0xffff8000001145e0,%rdi$/;"	l
ffff800000101a92	kernel.asm	/^ffff800000101a92:	80 ff ff $/;"	l
ffff800000101a95	kernel.asm	/^ffff800000101a95:	48 b8 cc 78 10 00 00 	movabs $0xffff8000001078cc,%rax$/;"	l
ffff800000101a9c	kernel.asm	/^ffff800000101a9c:	80 ff ff $/;"	l
ffff800000101a9f	kernel.asm	/^ffff800000101a9f:	ff d0                	callq  *%rax$/;"	l
ffff800000101aa1	kernel.asm	/^ffff800000101aa1:	90                   	nop$/;"	l
ffff800000101aa2	kernel.asm	/^ffff800000101aa2:	5d                   	pop    %rbp$/;"	l
ffff800000101aa3	kernel.asm	/^ffff800000101aa3:	c3                   	retq   $/;"	l
ffff800000101aa4	kernel.asm	/^ffff800000101aa4 <filealloc>:$/;"	l
ffff800000101aa4	kernel.asm	/^ffff800000101aa4:	55                   	push   %rbp$/;"	l
ffff800000101aa5	kernel.asm	/^ffff800000101aa5:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000101aa8	kernel.asm	/^ffff800000101aa8:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff800000101aac	kernel.asm	/^ffff800000101aac:	48 bf e0 45 11 00 00 	movabs $0xffff8000001145e0,%rdi$/;"	l
ffff800000101ab3	kernel.asm	/^ffff800000101ab3:	80 ff ff $/;"	l
ffff800000101ab6	kernel.asm	/^ffff800000101ab6:	48 b8 01 79 10 00 00 	movabs $0xffff800000107901,%rax$/;"	l
ffff800000101abd	kernel.asm	/^ffff800000101abd:	80 ff ff $/;"	l
ffff800000101ac0	kernel.asm	/^ffff800000101ac0:	ff d0                	callq  *%rax$/;"	l
ffff800000101ac2	kernel.asm	/^ffff800000101ac2:	48 b8 48 46 11 00 00 	movabs $0xffff800000114648,%rax$/;"	l
ffff800000101ac9	kernel.asm	/^ffff800000101ac9:	80 ff ff $/;"	l
ffff800000101acc	kernel.asm	/^ffff800000101acc:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff800000101ad0	kernel.asm	/^ffff800000101ad0:	eb 37                	jmp    ffff800000101b09 <filealloc+0x65>$/;"	l
ffff800000101ad2	kernel.asm	/^ffff800000101ad2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000101ad6	kernel.asm	/^ffff800000101ad6:	8b 40 04             	mov    0x4(%rax),%eax$/;"	l
ffff800000101ad9	kernel.asm	/^ffff800000101ad9:	85 c0                	test   %eax,%eax$/;"	l
ffff800000101adb	kernel.asm	/^ffff800000101adb:	75 27                	jne    ffff800000101b04 <filealloc+0x60>$/;"	l
ffff800000101add	kernel.asm	/^ffff800000101add:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000101ae1	kernel.asm	/^ffff800000101ae1:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%rax)$/;"	l
ffff800000101ae8	kernel.asm	/^ffff800000101ae8:	48 bf e0 45 11 00 00 	movabs $0xffff8000001145e0,%rdi$/;"	l
ffff800000101aef	kernel.asm	/^ffff800000101aef:	80 ff ff $/;"	l
ffff800000101af2	kernel.asm	/^ffff800000101af2:	48 b8 9a 79 10 00 00 	movabs $0xffff80000010799a,%rax$/;"	l
ffff800000101af9	kernel.asm	/^ffff800000101af9:	80 ff ff $/;"	l
ffff800000101afc	kernel.asm	/^ffff800000101afc:	ff d0                	callq  *%rax$/;"	l
ffff800000101afe	kernel.asm	/^ffff800000101afe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000101b02	kernel.asm	/^ffff800000101b02:	eb 30                	jmp    ffff800000101b34 <filealloc+0x90>$/;"	l
ffff800000101b04	kernel.asm	/^ffff800000101b04:	48 83 45 f8 28       	addq   $0x28,-0x8(%rbp)$/;"	l
ffff800000101b09	kernel.asm	/^ffff800000101b09:	48 b8 e8 55 11 00 00 	movabs $0xffff8000001155e8,%rax$/;"	l
ffff800000101b10	kernel.asm	/^ffff800000101b10:	80 ff ff $/;"	l
ffff800000101b13	kernel.asm	/^ffff800000101b13:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)$/;"	l
ffff800000101b17	kernel.asm	/^ffff800000101b17:	72 b9                	jb     ffff800000101ad2 <filealloc+0x2e>$/;"	l
ffff800000101b19	kernel.asm	/^ffff800000101b19:	48 bf e0 45 11 00 00 	movabs $0xffff8000001145e0,%rdi$/;"	l
ffff800000101b20	kernel.asm	/^ffff800000101b20:	80 ff ff $/;"	l
ffff800000101b23	kernel.asm	/^ffff800000101b23:	48 b8 9a 79 10 00 00 	movabs $0xffff80000010799a,%rax$/;"	l
ffff800000101b2a	kernel.asm	/^ffff800000101b2a:	80 ff ff $/;"	l
ffff800000101b2d	kernel.asm	/^ffff800000101b2d:	ff d0                	callq  *%rax$/;"	l
ffff800000101b2f	kernel.asm	/^ffff800000101b2f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000101b34	kernel.asm	/^ffff800000101b34:	c9                   	leaveq $/;"	l
ffff800000101b35	kernel.asm	/^ffff800000101b35:	c3                   	retq   $/;"	l
ffff800000101b36	kernel.asm	/^ffff800000101b36 <filedup>:$/;"	l
ffff800000101b36	kernel.asm	/^ffff800000101b36:	55                   	push   %rbp$/;"	l
ffff800000101b37	kernel.asm	/^ffff800000101b37:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000101b3a	kernel.asm	/^ffff800000101b3a:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff800000101b3e	kernel.asm	/^ffff800000101b3e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)$/;"	l
ffff800000101b42	kernel.asm	/^ffff800000101b42:	48 bf e0 45 11 00 00 	movabs $0xffff8000001145e0,%rdi$/;"	l
ffff800000101b49	kernel.asm	/^ffff800000101b49:	80 ff ff $/;"	l
ffff800000101b4c	kernel.asm	/^ffff800000101b4c:	48 b8 01 79 10 00 00 	movabs $0xffff800000107901,%rax$/;"	l
ffff800000101b53	kernel.asm	/^ffff800000101b53:	80 ff ff $/;"	l
ffff800000101b56	kernel.asm	/^ffff800000101b56:	ff d0                	callq  *%rax$/;"	l
ffff800000101b58	kernel.asm	/^ffff800000101b58:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000101b5c	kernel.asm	/^ffff800000101b5c:	8b 40 04             	mov    0x4(%rax),%eax$/;"	l
ffff800000101b5f	kernel.asm	/^ffff800000101b5f:	85 c0                	test   %eax,%eax$/;"	l
ffff800000101b61	kernel.asm	/^ffff800000101b61:	7f 16                	jg     ffff800000101b79 <filedup+0x43>$/;"	l
ffff800000101b63	kernel.asm	/^ffff800000101b63:	48 bf 6f c2 10 00 00 	movabs $0xffff80000010c26f,%rdi$/;"	l
ffff800000101b6a	kernel.asm	/^ffff800000101b6a:	80 ff ff $/;"	l
ffff800000101b6d	kernel.asm	/^ffff800000101b6d:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff800000101b74	kernel.asm	/^ffff800000101b74:	80 ff ff $/;"	l
ffff800000101b77	kernel.asm	/^ffff800000101b77:	ff d0                	callq  *%rax$/;"	l
ffff800000101b79	kernel.asm	/^ffff800000101b79:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000101b7d	kernel.asm	/^ffff800000101b7d:	8b 40 04             	mov    0x4(%rax),%eax$/;"	l
ffff800000101b80	kernel.asm	/^ffff800000101b80:	8d 50 01             	lea    0x1(%rax),%edx$/;"	l
ffff800000101b83	kernel.asm	/^ffff800000101b83:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000101b87	kernel.asm	/^ffff800000101b87:	89 50 04             	mov    %edx,0x4(%rax)$/;"	l
ffff800000101b8a	kernel.asm	/^ffff800000101b8a:	48 bf e0 45 11 00 00 	movabs $0xffff8000001145e0,%rdi$/;"	l
ffff800000101b91	kernel.asm	/^ffff800000101b91:	80 ff ff $/;"	l
ffff800000101b94	kernel.asm	/^ffff800000101b94:	48 b8 9a 79 10 00 00 	movabs $0xffff80000010799a,%rax$/;"	l
ffff800000101b9b	kernel.asm	/^ffff800000101b9b:	80 ff ff $/;"	l
ffff800000101b9e	kernel.asm	/^ffff800000101b9e:	ff d0                	callq  *%rax$/;"	l
ffff800000101ba0	kernel.asm	/^ffff800000101ba0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000101ba4	kernel.asm	/^ffff800000101ba4:	c9                   	leaveq $/;"	l
ffff800000101ba5	kernel.asm	/^ffff800000101ba5:	c3                   	retq   $/;"	l
ffff800000101ba6	kernel.asm	/^ffff800000101ba6 <fileclose>:$/;"	l
ffff800000101ba6	kernel.asm	/^ffff800000101ba6:	55                   	push   %rbp$/;"	l
ffff800000101ba7	kernel.asm	/^ffff800000101ba7:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000101baa	kernel.asm	/^ffff800000101baa:	48 83 ec 40          	sub    $0x40,%rsp$/;"	l
ffff800000101bae	kernel.asm	/^ffff800000101bae:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)$/;"	l
ffff800000101bb2	kernel.asm	/^ffff800000101bb2:	48 bf e0 45 11 00 00 	movabs $0xffff8000001145e0,%rdi$/;"	l
ffff800000101bb9	kernel.asm	/^ffff800000101bb9:	80 ff ff $/;"	l
ffff800000101bbc	kernel.asm	/^ffff800000101bbc:	48 b8 01 79 10 00 00 	movabs $0xffff800000107901,%rax$/;"	l
ffff800000101bc3	kernel.asm	/^ffff800000101bc3:	80 ff ff $/;"	l
ffff800000101bc6	kernel.asm	/^ffff800000101bc6:	ff d0                	callq  *%rax$/;"	l
ffff800000101bc8	kernel.asm	/^ffff800000101bc8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
ffff800000101bcc	kernel.asm	/^ffff800000101bcc:	8b 40 04             	mov    0x4(%rax),%eax$/;"	l
ffff800000101bcf	kernel.asm	/^ffff800000101bcf:	85 c0                	test   %eax,%eax$/;"	l
ffff800000101bd1	kernel.asm	/^ffff800000101bd1:	7f 16                	jg     ffff800000101be9 <fileclose+0x43>$/;"	l
ffff800000101bd3	kernel.asm	/^ffff800000101bd3:	48 bf 77 c2 10 00 00 	movabs $0xffff80000010c277,%rdi$/;"	l
ffff800000101bda	kernel.asm	/^ffff800000101bda:	80 ff ff $/;"	l
ffff800000101bdd	kernel.asm	/^ffff800000101bdd:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff800000101be4	kernel.asm	/^ffff800000101be4:	80 ff ff $/;"	l
ffff800000101be7	kernel.asm	/^ffff800000101be7:	ff d0                	callq  *%rax$/;"	l
ffff800000101be9	kernel.asm	/^ffff800000101be9:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
ffff800000101bed	kernel.asm	/^ffff800000101bed:	8b 40 04             	mov    0x4(%rax),%eax$/;"	l
ffff800000101bf0	kernel.asm	/^ffff800000101bf0:	8d 50 ff             	lea    -0x1(%rax),%edx$/;"	l
ffff800000101bf3	kernel.asm	/^ffff800000101bf3:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
ffff800000101bf7	kernel.asm	/^ffff800000101bf7:	89 50 04             	mov    %edx,0x4(%rax)$/;"	l
ffff800000101bfa	kernel.asm	/^ffff800000101bfa:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
ffff800000101bfe	kernel.asm	/^ffff800000101bfe:	8b 40 04             	mov    0x4(%rax),%eax$/;"	l
ffff800000101c01	kernel.asm	/^ffff800000101c01:	85 c0                	test   %eax,%eax$/;"	l
ffff800000101c03	kernel.asm	/^ffff800000101c03:	7e 1b                	jle    ffff800000101c20 <fileclose+0x7a>$/;"	l
ffff800000101c05	kernel.asm	/^ffff800000101c05:	48 bf e0 45 11 00 00 	movabs $0xffff8000001145e0,%rdi$/;"	l
ffff800000101c0c	kernel.asm	/^ffff800000101c0c:	80 ff ff $/;"	l
ffff800000101c0f	kernel.asm	/^ffff800000101c0f:	48 b8 9a 79 10 00 00 	movabs $0xffff80000010799a,%rax$/;"	l
ffff800000101c16	kernel.asm	/^ffff800000101c16:	80 ff ff $/;"	l
ffff800000101c19	kernel.asm	/^ffff800000101c19:	ff d0                	callq  *%rax$/;"	l
ffff800000101c1b	kernel.asm	/^ffff800000101c1b:	e9 b9 00 00 00       	jmpq   ffff800000101cd9 <fileclose+0x133>$/;"	l
ffff800000101c20	kernel.asm	/^ffff800000101c20:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
ffff800000101c24	kernel.asm	/^ffff800000101c24:	48 8b 10             	mov    (%rax),%rdx$/;"	l
ffff800000101c27	kernel.asm	/^ffff800000101c27:	48 89 55 d0          	mov    %rdx,-0x30(%rbp)$/;"	l
ffff800000101c2b	kernel.asm	/^ffff800000101c2b:	48 8b 50 08          	mov    0x8(%rax),%rdx$/;"	l
ffff800000101c2f	kernel.asm	/^ffff800000101c2f:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)$/;"	l
ffff800000101c33	kernel.asm	/^ffff800000101c33:	48 8b 50 10          	mov    0x10(%rax),%rdx$/;"	l
ffff800000101c37	kernel.asm	/^ffff800000101c37:	48 89 55 e0          	mov    %rdx,-0x20(%rbp)$/;"	l
ffff800000101c3b	kernel.asm	/^ffff800000101c3b:	48 8b 50 18          	mov    0x18(%rax),%rdx$/;"	l
ffff800000101c3f	kernel.asm	/^ffff800000101c3f:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)$/;"	l
ffff800000101c43	kernel.asm	/^ffff800000101c43:	48 8b 40 20          	mov    0x20(%rax),%rax$/;"	l
ffff800000101c47	kernel.asm	/^ffff800000101c47:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ffff800000101c4b	kernel.asm	/^ffff800000101c4b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
ffff800000101c4f	kernel.asm	/^ffff800000101c4f:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%rax)$/;"	l
ffff800000101c56	kernel.asm	/^ffff800000101c56:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
ffff800000101c5a	kernel.asm	/^ffff800000101c5a:	c7 00 00 00 00 00    	movl   $0x0,(%rax)$/;"	l
ffff800000101c60	kernel.asm	/^ffff800000101c60:	48 bf e0 45 11 00 00 	movabs $0xffff8000001145e0,%rdi$/;"	l
ffff800000101c67	kernel.asm	/^ffff800000101c67:	80 ff ff $/;"	l
ffff800000101c6a	kernel.asm	/^ffff800000101c6a:	48 b8 9a 79 10 00 00 	movabs $0xffff80000010799a,%rax$/;"	l
ffff800000101c71	kernel.asm	/^ffff800000101c71:	80 ff ff $/;"	l
ffff800000101c74	kernel.asm	/^ffff800000101c74:	ff d0                	callq  *%rax$/;"	l
ffff800000101c76	kernel.asm	/^ffff800000101c76:	8b 45 d0             	mov    -0x30(%rbp),%eax$/;"	l
ffff800000101c79	kernel.asm	/^ffff800000101c79:	83 f8 01             	cmp    $0x1,%eax$/;"	l
ffff800000101c7c	kernel.asm	/^ffff800000101c7c:	75 1e                	jne    ffff800000101c9c <fileclose+0xf6>$/;"	l
ffff800000101c7e	kernel.asm	/^ffff800000101c7e:	0f b6 45 d9          	movzbl -0x27(%rbp),%eax$/;"	l
ffff800000101c82	kernel.asm	/^ffff800000101c82:	0f be d0             	movsbl %al,%edx$/;"	l
ffff800000101c85	kernel.asm	/^ffff800000101c85:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff800000101c89	kernel.asm	/^ffff800000101c89:	89 d6                	mov    %edx,%esi$/;"	l
ffff800000101c8b	kernel.asm	/^ffff800000101c8b:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000101c8e	kernel.asm	/^ffff800000101c8e:	48 b8 de 5d 10 00 00 	movabs $0xffff800000105dde,%rax$/;"	l
ffff800000101c95	kernel.asm	/^ffff800000101c95:	80 ff ff $/;"	l
ffff800000101c98	kernel.asm	/^ffff800000101c98:	ff d0                	callq  *%rax$/;"	l
ffff800000101c9a	kernel.asm	/^ffff800000101c9a:	eb 3d                	jmp    ffff800000101cd9 <fileclose+0x133>$/;"	l
ffff800000101c9c	kernel.asm	/^ffff800000101c9c:	8b 45 d0             	mov    -0x30(%rbp),%eax$/;"	l
ffff800000101c9f	kernel.asm	/^ffff800000101c9f:	83 f8 02             	cmp    $0x2,%eax$/;"	l
ffff800000101ca2	kernel.asm	/^ffff800000101ca2:	75 35                	jne    ffff800000101cd9 <fileclose+0x133>$/;"	l
ffff800000101ca4	kernel.asm	/^ffff800000101ca4:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000101ca9	kernel.asm	/^ffff800000101ca9:	48 ba 20 4f 10 00 00 	movabs $0xffff800000104f20,%rdx$/;"	l
ffff800000101cb0	kernel.asm	/^ffff800000101cb0:	80 ff ff $/;"	l
ffff800000101cb3	kernel.asm	/^ffff800000101cb3:	ff d2                	callq  *%rdx$/;"	l
ffff800000101cb5	kernel.asm	/^ffff800000101cb5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000101cb9	kernel.asm	/^ffff800000101cb9:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000101cbc	kernel.asm	/^ffff800000101cbc:	48 b8 39 2a 10 00 00 	movabs $0xffff800000102a39,%rax$/;"	l
ffff800000101cc3	kernel.asm	/^ffff800000101cc3:	80 ff ff $/;"	l
ffff800000101cc6	kernel.asm	/^ffff800000101cc6:	ff d0                	callq  *%rax$/;"	l
ffff800000101cc8	kernel.asm	/^ffff800000101cc8:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000101ccd	kernel.asm	/^ffff800000101ccd:	48 ba f6 4f 10 00 00 	movabs $0xffff800000104ff6,%rdx$/;"	l
ffff800000101cd4	kernel.asm	/^ffff800000101cd4:	80 ff ff $/;"	l
ffff800000101cd7	kernel.asm	/^ffff800000101cd7:	ff d2                	callq  *%rdx$/;"	l
ffff800000101cd9	kernel.asm	/^ffff800000101cd9:	c9                   	leaveq $/;"	l
ffff800000101cda	kernel.asm	/^ffff800000101cda:	c3                   	retq   $/;"	l
ffff800000101cdb	kernel.asm	/^ffff800000101cdb <filestat>:$/;"	l
ffff800000101cdb	kernel.asm	/^ffff800000101cdb:	55                   	push   %rbp$/;"	l
ffff800000101cdc	kernel.asm	/^ffff800000101cdc:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000101cdf	kernel.asm	/^ffff800000101cdf:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff800000101ce3	kernel.asm	/^ffff800000101ce3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)$/;"	l
ffff800000101ce7	kernel.asm	/^ffff800000101ce7:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)$/;"	l
ffff800000101ceb	kernel.asm	/^ffff800000101ceb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000101cef	kernel.asm	/^ffff800000101cef:	8b 00                	mov    (%rax),%eax$/;"	l
ffff800000101cf1	kernel.asm	/^ffff800000101cf1:	83 f8 02             	cmp    $0x2,%eax$/;"	l
ffff800000101cf4	kernel.asm	/^ffff800000101cf4:	75 53                	jne    ffff800000101d49 <filestat+0x6e>$/;"	l
ffff800000101cf6	kernel.asm	/^ffff800000101cf6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000101cfa	kernel.asm	/^ffff800000101cfa:	48 8b 40 18          	mov    0x18(%rax),%rax$/;"	l
ffff800000101cfe	kernel.asm	/^ffff800000101cfe:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000101d01	kernel.asm	/^ffff800000101d01:	48 b8 1d 28 10 00 00 	movabs $0xffff80000010281d,%rax$/;"	l
ffff800000101d08	kernel.asm	/^ffff800000101d08:	80 ff ff $/;"	l
ffff800000101d0b	kernel.asm	/^ffff800000101d0b:	ff d0                	callq  *%rax$/;"	l
ffff800000101d0d	kernel.asm	/^ffff800000101d0d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000101d11	kernel.asm	/^ffff800000101d11:	48 8b 40 18          	mov    0x18(%rax),%rax$/;"	l
ffff800000101d15	kernel.asm	/^ffff800000101d15:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
ffff800000101d19	kernel.asm	/^ffff800000101d19:	48 89 d6             	mov    %rdx,%rsi$/;"	l
ffff800000101d1c	kernel.asm	/^ffff800000101d1c:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000101d1f	kernel.asm	/^ffff800000101d1f:	48 b8 40 2e 10 00 00 	movabs $0xffff800000102e40,%rax$/;"	l
ffff800000101d26	kernel.asm	/^ffff800000101d26:	80 ff ff $/;"	l
ffff800000101d29	kernel.asm	/^ffff800000101d29:	ff d0                	callq  *%rax$/;"	l
ffff800000101d2b	kernel.asm	/^ffff800000101d2b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000101d2f	kernel.asm	/^ffff800000101d2f:	48 8b 40 18          	mov    0x18(%rax),%rax$/;"	l
ffff800000101d33	kernel.asm	/^ffff800000101d33:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000101d36	kernel.asm	/^ffff800000101d36:	48 b8 d0 29 10 00 00 	movabs $0xffff8000001029d0,%rax$/;"	l
ffff800000101d3d	kernel.asm	/^ffff800000101d3d:	80 ff ff $/;"	l
ffff800000101d40	kernel.asm	/^ffff800000101d40:	ff d0                	callq  *%rax$/;"	l
ffff800000101d42	kernel.asm	/^ffff800000101d42:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000101d47	kernel.asm	/^ffff800000101d47:	eb 05                	jmp    ffff800000101d4e <filestat+0x73>$/;"	l
ffff800000101d49	kernel.asm	/^ffff800000101d49:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff800000101d4e	kernel.asm	/^ffff800000101d4e:	c9                   	leaveq $/;"	l
ffff800000101d4f	kernel.asm	/^ffff800000101d4f:	c3                   	retq   $/;"	l
ffff800000101d50	kernel.asm	/^ffff800000101d50 <fileread>:$/;"	l
ffff800000101d50	kernel.asm	/^ffff800000101d50:	55                   	push   %rbp$/;"	l
ffff800000101d51	kernel.asm	/^ffff800000101d51:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000101d54	kernel.asm	/^ffff800000101d54:	48 83 ec 30          	sub    $0x30,%rsp$/;"	l
ffff800000101d58	kernel.asm	/^ffff800000101d58:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
ffff800000101d5c	kernel.asm	/^ffff800000101d5c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)$/;"	l
ffff800000101d60	kernel.asm	/^ffff800000101d60:	89 55 dc             	mov    %edx,-0x24(%rbp)$/;"	l
ffff800000101d63	kernel.asm	/^ffff800000101d63:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000101d67	kernel.asm	/^ffff800000101d67:	0f b6 40 08          	movzbl 0x8(%rax),%eax$/;"	l
ffff800000101d6b	kernel.asm	/^ffff800000101d6b:	84 c0                	test   %al,%al$/;"	l
ffff800000101d6d	kernel.asm	/^ffff800000101d6d:	75 0a                	jne    ffff800000101d79 <fileread+0x29>$/;"	l
ffff800000101d6f	kernel.asm	/^ffff800000101d6f:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff800000101d74	kernel.asm	/^ffff800000101d74:	e9 cc 00 00 00       	jmpq   ffff800000101e45 <fileread+0xf5>$/;"	l
ffff800000101d79	kernel.asm	/^ffff800000101d79:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000101d7d	kernel.asm	/^ffff800000101d7d:	8b 00                	mov    (%rax),%eax$/;"	l
ffff800000101d7f	kernel.asm	/^ffff800000101d7f:	83 f8 01             	cmp    $0x1,%eax$/;"	l
ffff800000101d82	kernel.asm	/^ffff800000101d82:	75 26                	jne    ffff800000101daa <fileread+0x5a>$/;"	l
ffff800000101d84	kernel.asm	/^ffff800000101d84:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000101d88	kernel.asm	/^ffff800000101d88:	48 8b 40 10          	mov    0x10(%rax),%rax$/;"	l
ffff800000101d8c	kernel.asm	/^ffff800000101d8c:	8b 55 dc             	mov    -0x24(%rbp),%edx$/;"	l
ffff800000101d8f	kernel.asm	/^ffff800000101d8f:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx$/;"	l
ffff800000101d93	kernel.asm	/^ffff800000101d93:	48 89 ce             	mov    %rcx,%rsi$/;"	l
ffff800000101d96	kernel.asm	/^ffff800000101d96:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000101d99	kernel.asm	/^ffff800000101d99:	48 b8 ef 5f 10 00 00 	movabs $0xffff800000105fef,%rax$/;"	l
ffff800000101da0	kernel.asm	/^ffff800000101da0:	80 ff ff $/;"	l
ffff800000101da3	kernel.asm	/^ffff800000101da3:	ff d0                	callq  *%rax$/;"	l
ffff800000101da5	kernel.asm	/^ffff800000101da5:	e9 9b 00 00 00       	jmpq   ffff800000101e45 <fileread+0xf5>$/;"	l
ffff800000101daa	kernel.asm	/^ffff800000101daa:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000101dae	kernel.asm	/^ffff800000101dae:	8b 00                	mov    (%rax),%eax$/;"	l
ffff800000101db0	kernel.asm	/^ffff800000101db0:	83 f8 02             	cmp    $0x2,%eax$/;"	l
ffff800000101db3	kernel.asm	/^ffff800000101db3:	75 7a                	jne    ffff800000101e2f <fileread+0xdf>$/;"	l
ffff800000101db5	kernel.asm	/^ffff800000101db5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000101db9	kernel.asm	/^ffff800000101db9:	48 8b 40 18          	mov    0x18(%rax),%rax$/;"	l
ffff800000101dbd	kernel.asm	/^ffff800000101dbd:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000101dc0	kernel.asm	/^ffff800000101dc0:	48 b8 1d 28 10 00 00 	movabs $0xffff80000010281d,%rax$/;"	l
ffff800000101dc7	kernel.asm	/^ffff800000101dc7:	80 ff ff $/;"	l
ffff800000101dca	kernel.asm	/^ffff800000101dca:	ff d0                	callq  *%rax$/;"	l
ffff800000101dcc	kernel.asm	/^ffff800000101dcc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000101dd0	kernel.asm	/^ffff800000101dd0:	48 8b 40 18          	mov    0x18(%rax),%rax$/;"	l
ffff800000101dd4	kernel.asm	/^ffff800000101dd4:	48 8b 80 98 00 00 00 	mov    0x98(%rax),%rax$/;"	l
ffff800000101ddb	kernel.asm	/^ffff800000101ddb:	48 8b 40 10          	mov    0x10(%rax),%rax$/;"	l
ffff800000101ddf	kernel.asm	/^ffff800000101ddf:	8b 4d dc             	mov    -0x24(%rbp),%ecx$/;"	l
ffff800000101de2	kernel.asm	/^ffff800000101de2:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx$/;"	l
ffff800000101de6	kernel.asm	/^ffff800000101de6:	8b 52 20             	mov    0x20(%rdx),%edx$/;"	l
ffff800000101de9	kernel.asm	/^ffff800000101de9:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi$/;"	l
ffff800000101ded	kernel.asm	/^ffff800000101ded:	48 8b 7e 18          	mov    0x18(%rsi),%rdi$/;"	l
ffff800000101df1	kernel.asm	/^ffff800000101df1:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi$/;"	l
ffff800000101df5	kernel.asm	/^ffff800000101df5:	ff d0                	callq  *%rax$/;"	l
ffff800000101df7	kernel.asm	/^ffff800000101df7:	89 45 fc             	mov    %eax,-0x4(%rbp)$/;"	l
ffff800000101dfa	kernel.asm	/^ffff800000101dfa:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)$/;"	l
ffff800000101dfe	kernel.asm	/^ffff800000101dfe:	7e 13                	jle    ffff800000101e13 <fileread+0xc3>$/;"	l
ffff800000101e00	kernel.asm	/^ffff800000101e00:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000101e04	kernel.asm	/^ffff800000101e04:	8b 50 20             	mov    0x20(%rax),%edx$/;"	l
ffff800000101e07	kernel.asm	/^ffff800000101e07:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff800000101e0a	kernel.asm	/^ffff800000101e0a:	01 c2                	add    %eax,%edx$/;"	l
ffff800000101e0c	kernel.asm	/^ffff800000101e0c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000101e10	kernel.asm	/^ffff800000101e10:	89 50 20             	mov    %edx,0x20(%rax)$/;"	l
ffff800000101e13	kernel.asm	/^ffff800000101e13:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000101e17	kernel.asm	/^ffff800000101e17:	48 8b 40 18          	mov    0x18(%rax),%rax$/;"	l
ffff800000101e1b	kernel.asm	/^ffff800000101e1b:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000101e1e	kernel.asm	/^ffff800000101e1e:	48 b8 d0 29 10 00 00 	movabs $0xffff8000001029d0,%rax$/;"	l
ffff800000101e25	kernel.asm	/^ffff800000101e25:	80 ff ff $/;"	l
ffff800000101e28	kernel.asm	/^ffff800000101e28:	ff d0                	callq  *%rax$/;"	l
ffff800000101e2a	kernel.asm	/^ffff800000101e2a:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff800000101e2d	kernel.asm	/^ffff800000101e2d:	eb 16                	jmp    ffff800000101e45 <fileread+0xf5>$/;"	l
ffff800000101e2f	kernel.asm	/^ffff800000101e2f:	48 bf 81 c2 10 00 00 	movabs $0xffff80000010c281,%rdi$/;"	l
ffff800000101e36	kernel.asm	/^ffff800000101e36:	80 ff ff $/;"	l
ffff800000101e39	kernel.asm	/^ffff800000101e39:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff800000101e40	kernel.asm	/^ffff800000101e40:	80 ff ff $/;"	l
ffff800000101e43	kernel.asm	/^ffff800000101e43:	ff d0                	callq  *%rax$/;"	l
ffff800000101e45	kernel.asm	/^ffff800000101e45:	c9                   	leaveq $/;"	l
ffff800000101e46	kernel.asm	/^ffff800000101e46:	c3                   	retq   $/;"	l
ffff800000101e47	kernel.asm	/^ffff800000101e47 <filewrite>:$/;"	l
ffff800000101e47	kernel.asm	/^ffff800000101e47:	55                   	push   %rbp$/;"	l
ffff800000101e48	kernel.asm	/^ffff800000101e48:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000101e4b	kernel.asm	/^ffff800000101e4b:	48 83 ec 30          	sub    $0x30,%rsp$/;"	l
ffff800000101e4f	kernel.asm	/^ffff800000101e4f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
ffff800000101e53	kernel.asm	/^ffff800000101e53:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)$/;"	l
ffff800000101e57	kernel.asm	/^ffff800000101e57:	89 55 dc             	mov    %edx,-0x24(%rbp)$/;"	l
ffff800000101e5a	kernel.asm	/^ffff800000101e5a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000101e5e	kernel.asm	/^ffff800000101e5e:	0f b6 40 09          	movzbl 0x9(%rax),%eax$/;"	l
ffff800000101e62	kernel.asm	/^ffff800000101e62:	84 c0                	test   %al,%al$/;"	l
ffff800000101e64	kernel.asm	/^ffff800000101e64:	75 0a                	jne    ffff800000101e70 <filewrite+0x29>$/;"	l
ffff800000101e66	kernel.asm	/^ffff800000101e66:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff800000101e6b	kernel.asm	/^ffff800000101e6b:	e9 71 01 00 00       	jmpq   ffff800000101fe1 <filewrite+0x19a>$/;"	l
ffff800000101e70	kernel.asm	/^ffff800000101e70:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000101e74	kernel.asm	/^ffff800000101e74:	8b 00                	mov    (%rax),%eax$/;"	l
ffff800000101e76	kernel.asm	/^ffff800000101e76:	83 f8 01             	cmp    $0x1,%eax$/;"	l
ffff800000101e79	kernel.asm	/^ffff800000101e79:	75 26                	jne    ffff800000101ea1 <filewrite+0x5a>$/;"	l
ffff800000101e7b	kernel.asm	/^ffff800000101e7b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000101e7f	kernel.asm	/^ffff800000101e7f:	48 8b 40 10          	mov    0x10(%rax),%rax$/;"	l
ffff800000101e83	kernel.asm	/^ffff800000101e83:	8b 55 dc             	mov    -0x24(%rbp),%edx$/;"	l
ffff800000101e86	kernel.asm	/^ffff800000101e86:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx$/;"	l
ffff800000101e8a	kernel.asm	/^ffff800000101e8a:	48 89 ce             	mov    %rcx,%rsi$/;"	l
ffff800000101e8d	kernel.asm	/^ffff800000101e8d:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000101e90	kernel.asm	/^ffff800000101e90:	48 b8 b0 5e 10 00 00 	movabs $0xffff800000105eb0,%rax$/;"	l
ffff800000101e97	kernel.asm	/^ffff800000101e97:	80 ff ff $/;"	l
ffff800000101e9a	kernel.asm	/^ffff800000101e9a:	ff d0                	callq  *%rax$/;"	l
ffff800000101e9c	kernel.asm	/^ffff800000101e9c:	e9 40 01 00 00       	jmpq   ffff800000101fe1 <filewrite+0x19a>$/;"	l
ffff800000101ea1	kernel.asm	/^ffff800000101ea1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000101ea5	kernel.asm	/^ffff800000101ea5:	8b 00                	mov    (%rax),%eax$/;"	l
ffff800000101ea7	kernel.asm	/^ffff800000101ea7:	83 f8 02             	cmp    $0x2,%eax$/;"	l
ffff800000101eaa	kernel.asm	/^ffff800000101eaa:	0f 85 1b 01 00 00    	jne    ffff800000101fcb <filewrite+0x184>$/;"	l
ffff800000101eb0	kernel.asm	/^ffff800000101eb0:	c7 45 f4 00 1a 00 00 	movl   $0x1a00,-0xc(%rbp)$/;"	l
ffff800000101eb7	kernel.asm	/^ffff800000101eb7:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)$/;"	l
ffff800000101ebe	kernel.asm	/^ffff800000101ebe:	e9 e5 00 00 00       	jmpq   ffff800000101fa8 <filewrite+0x161>$/;"	l
ffff800000101ec3	kernel.asm	/^ffff800000101ec3:	8b 45 dc             	mov    -0x24(%rbp),%eax$/;"	l
ffff800000101ec6	kernel.asm	/^ffff800000101ec6:	2b 45 fc             	sub    -0x4(%rbp),%eax$/;"	l
ffff800000101ec9	kernel.asm	/^ffff800000101ec9:	89 45 f8             	mov    %eax,-0x8(%rbp)$/;"	l
ffff800000101ecc	kernel.asm	/^ffff800000101ecc:	8b 45 f8             	mov    -0x8(%rbp),%eax$/;"	l
ffff800000101ecf	kernel.asm	/^ffff800000101ecf:	3b 45 f4             	cmp    -0xc(%rbp),%eax$/;"	l
ffff800000101ed2	kernel.asm	/^ffff800000101ed2:	7e 06                	jle    ffff800000101eda <filewrite+0x93>$/;"	l
ffff800000101ed4	kernel.asm	/^ffff800000101ed4:	8b 45 f4             	mov    -0xc(%rbp),%eax$/;"	l
ffff800000101ed7	kernel.asm	/^ffff800000101ed7:	89 45 f8             	mov    %eax,-0x8(%rbp)$/;"	l
ffff800000101eda	kernel.asm	/^ffff800000101eda:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000101edf	kernel.asm	/^ffff800000101edf:	48 ba 20 4f 10 00 00 	movabs $0xffff800000104f20,%rdx$/;"	l
ffff800000101ee6	kernel.asm	/^ffff800000101ee6:	80 ff ff $/;"	l
ffff800000101ee9	kernel.asm	/^ffff800000101ee9:	ff d2                	callq  *%rdx$/;"	l
ffff800000101eeb	kernel.asm	/^ffff800000101eeb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000101eef	kernel.asm	/^ffff800000101eef:	48 8b 40 18          	mov    0x18(%rax),%rax$/;"	l
ffff800000101ef3	kernel.asm	/^ffff800000101ef3:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000101ef6	kernel.asm	/^ffff800000101ef6:	48 b8 1d 28 10 00 00 	movabs $0xffff80000010281d,%rax$/;"	l
ffff800000101efd	kernel.asm	/^ffff800000101efd:	80 ff ff $/;"	l
ffff800000101f00	kernel.asm	/^ffff800000101f00:	ff d0                	callq  *%rax$/;"	l
ffff800000101f02	kernel.asm	/^ffff800000101f02:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000101f06	kernel.asm	/^ffff800000101f06:	48 8b 40 18          	mov    0x18(%rax),%rax$/;"	l
ffff800000101f0a	kernel.asm	/^ffff800000101f0a:	48 8b 80 98 00 00 00 	mov    0x98(%rax),%rax$/;"	l
ffff800000101f11	kernel.asm	/^ffff800000101f11:	48 8b 40 18          	mov    0x18(%rax),%rax$/;"	l
ffff800000101f15	kernel.asm	/^ffff800000101f15:	8b 4d f8             	mov    -0x8(%rbp),%ecx$/;"	l
ffff800000101f18	kernel.asm	/^ffff800000101f18:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx$/;"	l
ffff800000101f1c	kernel.asm	/^ffff800000101f1c:	8b 52 20             	mov    0x20(%rdx),%edx$/;"	l
ffff800000101f1f	kernel.asm	/^ffff800000101f1f:	8b 75 fc             	mov    -0x4(%rbp),%esi$/;"	l
ffff800000101f22	kernel.asm	/^ffff800000101f22:	48 63 fe             	movslq %esi,%rdi$/;"	l
ffff800000101f25	kernel.asm	/^ffff800000101f25:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi$/;"	l
ffff800000101f29	kernel.asm	/^ffff800000101f29:	4c 8d 04 37          	lea    (%rdi,%rsi,1),%r8$/;"	l
ffff800000101f2d	kernel.asm	/^ffff800000101f2d:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi$/;"	l
ffff800000101f31	kernel.asm	/^ffff800000101f31:	48 8b 7e 18          	mov    0x18(%rsi),%rdi$/;"	l
ffff800000101f35	kernel.asm	/^ffff800000101f35:	4c 89 c6             	mov    %r8,%rsi$/;"	l
ffff800000101f38	kernel.asm	/^ffff800000101f38:	ff d0                	callq  *%rax$/;"	l
ffff800000101f3a	kernel.asm	/^ffff800000101f3a:	89 45 f0             	mov    %eax,-0x10(%rbp)$/;"	l
ffff800000101f3d	kernel.asm	/^ffff800000101f3d:	83 7d f0 00          	cmpl   $0x0,-0x10(%rbp)$/;"	l
ffff800000101f41	kernel.asm	/^ffff800000101f41:	7e 13                	jle    ffff800000101f56 <filewrite+0x10f>$/;"	l
ffff800000101f43	kernel.asm	/^ffff800000101f43:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000101f47	kernel.asm	/^ffff800000101f47:	8b 50 20             	mov    0x20(%rax),%edx$/;"	l
ffff800000101f4a	kernel.asm	/^ffff800000101f4a:	8b 45 f0             	mov    -0x10(%rbp),%eax$/;"	l
ffff800000101f4d	kernel.asm	/^ffff800000101f4d:	01 c2                	add    %eax,%edx$/;"	l
ffff800000101f4f	kernel.asm	/^ffff800000101f4f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000101f53	kernel.asm	/^ffff800000101f53:	89 50 20             	mov    %edx,0x20(%rax)$/;"	l
ffff800000101f56	kernel.asm	/^ffff800000101f56:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000101f5a	kernel.asm	/^ffff800000101f5a:	48 8b 40 18          	mov    0x18(%rax),%rax$/;"	l
ffff800000101f5e	kernel.asm	/^ffff800000101f5e:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000101f61	kernel.asm	/^ffff800000101f61:	48 b8 d0 29 10 00 00 	movabs $0xffff8000001029d0,%rax$/;"	l
ffff800000101f68	kernel.asm	/^ffff800000101f68:	80 ff ff $/;"	l
ffff800000101f6b	kernel.asm	/^ffff800000101f6b:	ff d0                	callq  *%rax$/;"	l
ffff800000101f6d	kernel.asm	/^ffff800000101f6d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000101f72	kernel.asm	/^ffff800000101f72:	48 ba f6 4f 10 00 00 	movabs $0xffff800000104ff6,%rdx$/;"	l
ffff800000101f79	kernel.asm	/^ffff800000101f79:	80 ff ff $/;"	l
ffff800000101f7c	kernel.asm	/^ffff800000101f7c:	ff d2                	callq  *%rdx$/;"	l
ffff800000101f7e	kernel.asm	/^ffff800000101f7e:	83 7d f0 00          	cmpl   $0x0,-0x10(%rbp)$/;"	l
ffff800000101f82	kernel.asm	/^ffff800000101f82:	78 32                	js     ffff800000101fb6 <filewrite+0x16f>$/;"	l
ffff800000101f84	kernel.asm	/^ffff800000101f84:	8b 45 f0             	mov    -0x10(%rbp),%eax$/;"	l
ffff800000101f87	kernel.asm	/^ffff800000101f87:	3b 45 f8             	cmp    -0x8(%rbp),%eax$/;"	l
ffff800000101f8a	kernel.asm	/^ffff800000101f8a:	74 16                	je     ffff800000101fa2 <filewrite+0x15b>$/;"	l
ffff800000101f8c	kernel.asm	/^ffff800000101f8c:	48 bf 8a c2 10 00 00 	movabs $0xffff80000010c28a,%rdi$/;"	l
ffff800000101f93	kernel.asm	/^ffff800000101f93:	80 ff ff $/;"	l
ffff800000101f96	kernel.asm	/^ffff800000101f96:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff800000101f9d	kernel.asm	/^ffff800000101f9d:	80 ff ff $/;"	l
ffff800000101fa0	kernel.asm	/^ffff800000101fa0:	ff d0                	callq  *%rax$/;"	l
ffff800000101fa2	kernel.asm	/^ffff800000101fa2:	8b 45 f0             	mov    -0x10(%rbp),%eax$/;"	l
ffff800000101fa5	kernel.asm	/^ffff800000101fa5:	01 45 fc             	add    %eax,-0x4(%rbp)$/;"	l
ffff800000101fa8	kernel.asm	/^ffff800000101fa8:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff800000101fab	kernel.asm	/^ffff800000101fab:	3b 45 dc             	cmp    -0x24(%rbp),%eax$/;"	l
ffff800000101fae	kernel.asm	/^ffff800000101fae:	0f 8c 0f ff ff ff    	jl     ffff800000101ec3 <filewrite+0x7c>$/;"	l
ffff800000101fb4	kernel.asm	/^ffff800000101fb4:	eb 01                	jmp    ffff800000101fb7 <filewrite+0x170>$/;"	l
ffff800000101fb6	kernel.asm	/^ffff800000101fb6:	90                   	nop$/;"	l
ffff800000101fb7	kernel.asm	/^ffff800000101fb7:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff800000101fba	kernel.asm	/^ffff800000101fba:	3b 45 dc             	cmp    -0x24(%rbp),%eax$/;"	l
ffff800000101fbd	kernel.asm	/^ffff800000101fbd:	75 05                	jne    ffff800000101fc4 <filewrite+0x17d>$/;"	l
ffff800000101fbf	kernel.asm	/^ffff800000101fbf:	8b 45 dc             	mov    -0x24(%rbp),%eax$/;"	l
ffff800000101fc2	kernel.asm	/^ffff800000101fc2:	eb 1d                	jmp    ffff800000101fe1 <filewrite+0x19a>$/;"	l
ffff800000101fc4	kernel.asm	/^ffff800000101fc4:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff800000101fc9	kernel.asm	/^ffff800000101fc9:	eb 16                	jmp    ffff800000101fe1 <filewrite+0x19a>$/;"	l
ffff800000101fcb	kernel.asm	/^ffff800000101fcb:	48 bf 9a c2 10 00 00 	movabs $0xffff80000010c29a,%rdi$/;"	l
ffff800000101fd2	kernel.asm	/^ffff800000101fd2:	80 ff ff $/;"	l
ffff800000101fd5	kernel.asm	/^ffff800000101fd5:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff800000101fdc	kernel.asm	/^ffff800000101fdc:	80 ff ff $/;"	l
ffff800000101fdf	kernel.asm	/^ffff800000101fdf:	ff d0                	callq  *%rax$/;"	l
ffff800000101fe1	kernel.asm	/^ffff800000101fe1:	c9                   	leaveq $/;"	l
ffff800000101fe2	kernel.asm	/^ffff800000101fe2:	c3                   	retq   $/;"	l
ffff800000101fe3	kernel.asm	/^ffff800000101fe3 <readsb>:$/;"	l
ffff800000101fe3	kernel.asm	/^ffff800000101fe3:	55                   	push   %rbp$/;"	l
ffff800000101fe4	kernel.asm	/^ffff800000101fe4:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000101fe7	kernel.asm	/^ffff800000101fe7:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ffff800000101feb	kernel.asm	/^ffff800000101feb:	89 7d ec             	mov    %edi,-0x14(%rbp)$/;"	l
ffff800000101fee	kernel.asm	/^ffff800000101fee:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)$/;"	l
ffff800000101ff2	kernel.asm	/^ffff800000101ff2:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
ffff800000101ff5	kernel.asm	/^ffff800000101ff5:	be 01 00 00 00       	mov    $0x1,%esi$/;"	l
ffff800000101ffa	kernel.asm	/^ffff800000101ffa:	89 c7                	mov    %eax,%edi$/;"	l
ffff800000101ffc	kernel.asm	/^ffff800000101ffc:	48 b8 f8 03 10 00 00 	movabs $0xffff8000001003f8,%rax$/;"	l
ffff800000102003	kernel.asm	/^ffff800000102003:	80 ff ff $/;"	l
ffff800000102006	kernel.asm	/^ffff800000102006:	ff d0                	callq  *%rax$/;"	l
ffff800000102008	kernel.asm	/^ffff800000102008:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff80000010200c	kernel.asm	/^ffff80000010200c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000102010	kernel.asm	/^ffff800000102010:	48 8d 88 b0 00 00 00 	lea    0xb0(%rax),%rcx$/;"	l
ffff800000102017	kernel.asm	/^ffff800000102017:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff80000010201b	kernel.asm	/^ffff80000010201b:	ba 1c 00 00 00       	mov    $0x1c,%edx$/;"	l
ffff800000102020	kernel.asm	/^ffff800000102020:	48 89 ce             	mov    %rcx,%rsi$/;"	l
ffff800000102023	kernel.asm	/^ffff800000102023:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000102026	kernel.asm	/^ffff800000102026:	48 b8 9a 7d 10 00 00 	movabs $0xffff800000107d9a,%rax$/;"	l
ffff80000010202d	kernel.asm	/^ffff80000010202d:	80 ff ff $/;"	l
ffff800000102030	kernel.asm	/^ffff800000102030:	ff d0                	callq  *%rax$/;"	l
ffff800000102032	kernel.asm	/^ffff800000102032:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000102036	kernel.asm	/^ffff800000102036:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000102039	kernel.asm	/^ffff800000102039:	48 b8 aa 04 10 00 00 	movabs $0xffff8000001004aa,%rax$/;"	l
ffff800000102040	kernel.asm	/^ffff800000102040:	80 ff ff $/;"	l
ffff800000102043	kernel.asm	/^ffff800000102043:	ff d0                	callq  *%rax$/;"	l
ffff800000102045	kernel.asm	/^ffff800000102045:	90                   	nop$/;"	l
ffff800000102046	kernel.asm	/^ffff800000102046:	c9                   	leaveq $/;"	l
ffff800000102047	kernel.asm	/^ffff800000102047:	c3                   	retq   $/;"	l
ffff800000102048	kernel.asm	/^ffff800000102048 <bzero>:$/;"	l
ffff800000102048	kernel.asm	/^ffff800000102048:	55                   	push   %rbp$/;"	l
ffff800000102049	kernel.asm	/^ffff800000102049:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010204c	kernel.asm	/^ffff80000010204c:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ffff800000102050	kernel.asm	/^ffff800000102050:	89 7d ec             	mov    %edi,-0x14(%rbp)$/;"	l
ffff800000102053	kernel.asm	/^ffff800000102053:	89 75 e8             	mov    %esi,-0x18(%rbp)$/;"	l
ffff800000102056	kernel.asm	/^ffff800000102056:	8b 55 e8             	mov    -0x18(%rbp),%edx$/;"	l
ffff800000102059	kernel.asm	/^ffff800000102059:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
ffff80000010205c	kernel.asm	/^ffff80000010205c:	89 d6                	mov    %edx,%esi$/;"	l
ffff80000010205e	kernel.asm	/^ffff80000010205e:	89 c7                	mov    %eax,%edi$/;"	l
ffff800000102060	kernel.asm	/^ffff800000102060:	48 b8 f8 03 10 00 00 	movabs $0xffff8000001003f8,%rax$/;"	l
ffff800000102067	kernel.asm	/^ffff800000102067:	80 ff ff $/;"	l
ffff80000010206a	kernel.asm	/^ffff80000010206a:	ff d0                	callq  *%rax$/;"	l
ffff80000010206c	kernel.asm	/^ffff80000010206c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff800000102070	kernel.asm	/^ffff800000102070:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000102074	kernel.asm	/^ffff800000102074:	48 05 b0 00 00 00    	add    $0xb0,%rax$/;"	l
ffff80000010207a	kernel.asm	/^ffff80000010207a:	ba 00 02 00 00       	mov    $0x200,%edx$/;"	l
ffff80000010207f	kernel.asm	/^ffff80000010207f:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffff800000102084	kernel.asm	/^ffff800000102084:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000102087	kernel.asm	/^ffff800000102087:	48 b8 9d 7c 10 00 00 	movabs $0xffff800000107c9d,%rax$/;"	l
ffff80000010208e	kernel.asm	/^ffff80000010208e:	80 ff ff $/;"	l
ffff800000102091	kernel.asm	/^ffff800000102091:	ff d0                	callq  *%rax$/;"	l
ffff800000102093	kernel.asm	/^ffff800000102093:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000102097	kernel.asm	/^ffff800000102097:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010209a	kernel.asm	/^ffff80000010209a:	48 b8 85 52 10 00 00 	movabs $0xffff800000105285,%rax$/;"	l
ffff8000001020a1	kernel.asm	/^ffff8000001020a1:	80 ff ff $/;"	l
ffff8000001020a4	kernel.asm	/^ffff8000001020a4:	ff d0                	callq  *%rax$/;"	l
ffff8000001020a6	kernel.asm	/^ffff8000001020a6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001020aa	kernel.asm	/^ffff8000001020aa:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001020ad	kernel.asm	/^ffff8000001020ad:	48 b8 aa 04 10 00 00 	movabs $0xffff8000001004aa,%rax$/;"	l
ffff8000001020b4	kernel.asm	/^ffff8000001020b4:	80 ff ff $/;"	l
ffff8000001020b7	kernel.asm	/^ffff8000001020b7:	ff d0                	callq  *%rax$/;"	l
ffff8000001020b9	kernel.asm	/^ffff8000001020b9:	90                   	nop$/;"	l
ffff8000001020ba	kernel.asm	/^ffff8000001020ba:	c9                   	leaveq $/;"	l
ffff8000001020bb	kernel.asm	/^ffff8000001020bb:	c3                   	retq   $/;"	l
ffff8000001020bc	kernel.asm	/^ffff8000001020bc <balloc>:$/;"	l
ffff8000001020bc	kernel.asm	/^ffff8000001020bc:	55                   	push   %rbp$/;"	l
ffff8000001020bd	kernel.asm	/^ffff8000001020bd:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff8000001020c0	kernel.asm	/^ffff8000001020c0:	48 83 ec 30          	sub    $0x30,%rsp$/;"	l
ffff8000001020c4	kernel.asm	/^ffff8000001020c4:	89 7d dc             	mov    %edi,-0x24(%rbp)$/;"	l
ffff8000001020c7	kernel.asm	/^ffff8000001020c7:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)$/;"	l
ffff8000001020ce	kernel.asm	/^ffff8000001020ce:	00 $/;"	l
ffff8000001020cf	kernel.asm	/^ffff8000001020cf:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)$/;"	l
ffff8000001020d6	kernel.asm	/^ffff8000001020d6:	e9 52 01 00 00       	jmpq   ffff80000010222d <balloc+0x171>$/;"	l
ffff8000001020db	kernel.asm	/^ffff8000001020db:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff8000001020de	kernel.asm	/^ffff8000001020de:	8d 90 ff 0f 00 00    	lea    0xfff(%rax),%edx$/;"	l
ffff8000001020e4	kernel.asm	/^ffff8000001020e4:	85 c0                	test   %eax,%eax$/;"	l
ffff8000001020e6	kernel.asm	/^ffff8000001020e6:	0f 48 c2             	cmovs  %edx,%eax$/;"	l
ffff8000001020e9	kernel.asm	/^ffff8000001020e9:	c1 f8 0c             	sar    $0xc,%eax$/;"	l
ffff8000001020ec	kernel.asm	/^ffff8000001020ec:	89 c2                	mov    %eax,%edx$/;"	l
ffff8000001020ee	kernel.asm	/^ffff8000001020ee:	48 b8 00 56 11 00 00 	movabs $0xffff800000115600,%rax$/;"	l
ffff8000001020f5	kernel.asm	/^ffff8000001020f5:	80 ff ff $/;"	l
ffff8000001020f8	kernel.asm	/^ffff8000001020f8:	8b 40 18             	mov    0x18(%rax),%eax$/;"	l
ffff8000001020fb	kernel.asm	/^ffff8000001020fb:	01 c2                	add    %eax,%edx$/;"	l
ffff8000001020fd	kernel.asm	/^ffff8000001020fd:	8b 45 dc             	mov    -0x24(%rbp),%eax$/;"	l
ffff800000102100	kernel.asm	/^ffff800000102100:	89 d6                	mov    %edx,%esi$/;"	l
ffff800000102102	kernel.asm	/^ffff800000102102:	89 c7                	mov    %eax,%edi$/;"	l
ffff800000102104	kernel.asm	/^ffff800000102104:	48 b8 f8 03 10 00 00 	movabs $0xffff8000001003f8,%rax$/;"	l
ffff80000010210b	kernel.asm	/^ffff80000010210b:	80 ff ff $/;"	l
ffff80000010210e	kernel.asm	/^ffff80000010210e:	ff d0                	callq  *%rax$/;"	l
ffff800000102110	kernel.asm	/^ffff800000102110:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ffff800000102114	kernel.asm	/^ffff800000102114:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)$/;"	l
ffff80000010211b	kernel.asm	/^ffff80000010211b:	e9 cc 00 00 00       	jmpq   ffff8000001021ec <balloc+0x130>$/;"	l
ffff800000102120	kernel.asm	/^ffff800000102120:	8b 45 f8             	mov    -0x8(%rbp),%eax$/;"	l
ffff800000102123	kernel.asm	/^ffff800000102123:	99                   	cltd   $/;"	l
ffff800000102124	kernel.asm	/^ffff800000102124:	c1 ea 1d             	shr    $0x1d,%edx$/;"	l
ffff800000102127	kernel.asm	/^ffff800000102127:	01 d0                	add    %edx,%eax$/;"	l
ffff800000102129	kernel.asm	/^ffff800000102129:	83 e0 07             	and    $0x7,%eax$/;"	l
ffff80000010212c	kernel.asm	/^ffff80000010212c:	29 d0                	sub    %edx,%eax$/;"	l
ffff80000010212e	kernel.asm	/^ffff80000010212e:	ba 01 00 00 00       	mov    $0x1,%edx$/;"	l
ffff800000102133	kernel.asm	/^ffff800000102133:	89 c1                	mov    %eax,%ecx$/;"	l
ffff800000102135	kernel.asm	/^ffff800000102135:	d3 e2                	shl    %cl,%edx$/;"	d
ffff800000102137	kernel.asm	/^ffff800000102137:	89 d0                	mov    %edx,%eax$/;"	l
ffff800000102139	kernel.asm	/^ffff800000102139:	89 45 ec             	mov    %eax,-0x14(%rbp)$/;"	l
ffff80000010213c	kernel.asm	/^ffff80000010213c:	8b 45 f8             	mov    -0x8(%rbp),%eax$/;"	l
ffff80000010213f	kernel.asm	/^ffff80000010213f:	8d 50 07             	lea    0x7(%rax),%edx$/;"	l
ffff800000102142	kernel.asm	/^ffff800000102142:	85 c0                	test   %eax,%eax$/;"	l
ffff800000102144	kernel.asm	/^ffff800000102144:	0f 48 c2             	cmovs  %edx,%eax$/;"	l
ffff800000102147	kernel.asm	/^ffff800000102147:	c1 f8 03             	sar    $0x3,%eax$/;"	l
ffff80000010214a	kernel.asm	/^ffff80000010214a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
ffff80000010214e	kernel.asm	/^ffff80000010214e:	48 98                	cltq   $/;"	l
ffff800000102150	kernel.asm	/^ffff800000102150:	0f b6 84 02 b0 00 00 	movzbl 0xb0(%rdx,%rax,1),%eax$/;"	l
ffff800000102157	kernel.asm	/^ffff800000102157:	00 $/;"	l
ffff800000102158	kernel.asm	/^ffff800000102158:	0f b6 c0             	movzbl %al,%eax$/;"	l
ffff80000010215b	kernel.asm	/^ffff80000010215b:	23 45 ec             	and    -0x14(%rbp),%eax$/;"	l
ffff80000010215e	kernel.asm	/^ffff80000010215e:	85 c0                	test   %eax,%eax$/;"	l
ffff800000102160	kernel.asm	/^ffff800000102160:	0f 85 82 00 00 00    	jne    ffff8000001021e8 <balloc+0x12c>$/;"	l
ffff800000102166	kernel.asm	/^ffff800000102166:	8b 45 f8             	mov    -0x8(%rbp),%eax$/;"	l
ffff800000102169	kernel.asm	/^ffff800000102169:	8d 50 07             	lea    0x7(%rax),%edx$/;"	l
ffff80000010216c	kernel.asm	/^ffff80000010216c:	85 c0                	test   %eax,%eax$/;"	l
ffff80000010216e	kernel.asm	/^ffff80000010216e:	0f 48 c2             	cmovs  %edx,%eax$/;"	l
ffff800000102171	kernel.asm	/^ffff800000102171:	c1 f8 03             	sar    $0x3,%eax$/;"	l
ffff800000102174	kernel.asm	/^ffff800000102174:	89 c1                	mov    %eax,%ecx$/;"	l
ffff800000102176	kernel.asm	/^ffff800000102176:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
ffff80000010217a	kernel.asm	/^ffff80000010217a:	48 63 c1             	movslq %ecx,%rax$/;"	l
ffff80000010217d	kernel.asm	/^ffff80000010217d:	0f b6 84 02 b0 00 00 	movzbl 0xb0(%rdx,%rax,1),%eax$/;"	l
ffff800000102184	kernel.asm	/^ffff800000102184:	00 $/;"	l
ffff800000102185	kernel.asm	/^ffff800000102185:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000102187	kernel.asm	/^ffff800000102187:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
ffff80000010218a	kernel.asm	/^ffff80000010218a:	09 d0                	or     %edx,%eax$/;"	l
ffff80000010218c	kernel.asm	/^ffff80000010218c:	89 c6                	mov    %eax,%esi$/;"	l
ffff80000010218e	kernel.asm	/^ffff80000010218e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
ffff800000102192	kernel.asm	/^ffff800000102192:	48 63 c1             	movslq %ecx,%rax$/;"	l
ffff800000102195	kernel.asm	/^ffff800000102195:	40 88 b4 02 b0 00 00 	mov    %sil,0xb0(%rdx,%rax,1)$/;"	l
ffff80000010219c	kernel.asm	/^ffff80000010219c:	00 $/;"	l
ffff80000010219d	kernel.asm	/^ffff80000010219d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff8000001021a1	kernel.asm	/^ffff8000001021a1:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001021a4	kernel.asm	/^ffff8000001021a4:	48 b8 85 52 10 00 00 	movabs $0xffff800000105285,%rax$/;"	l
ffff8000001021ab	kernel.asm	/^ffff8000001021ab:	80 ff ff $/;"	l
ffff8000001021ae	kernel.asm	/^ffff8000001021ae:	ff d0                	callq  *%rax$/;"	l
ffff8000001021b0	kernel.asm	/^ffff8000001021b0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff8000001021b4	kernel.asm	/^ffff8000001021b4:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001021b7	kernel.asm	/^ffff8000001021b7:	48 b8 aa 04 10 00 00 	movabs $0xffff8000001004aa,%rax$/;"	l
ffff8000001021be	kernel.asm	/^ffff8000001021be:	80 ff ff $/;"	l
ffff8000001021c1	kernel.asm	/^ffff8000001021c1:	ff d0                	callq  *%rax$/;"	l
ffff8000001021c3	kernel.asm	/^ffff8000001021c3:	8b 55 fc             	mov    -0x4(%rbp),%edx$/;"	l
ffff8000001021c6	kernel.asm	/^ffff8000001021c6:	8b 45 f8             	mov    -0x8(%rbp),%eax$/;"	l
ffff8000001021c9	kernel.asm	/^ffff8000001021c9:	01 c2                	add    %eax,%edx$/;"	l
ffff8000001021cb	kernel.asm	/^ffff8000001021cb:	8b 45 dc             	mov    -0x24(%rbp),%eax$/;"	l
ffff8000001021ce	kernel.asm	/^ffff8000001021ce:	89 d6                	mov    %edx,%esi$/;"	l
ffff8000001021d0	kernel.asm	/^ffff8000001021d0:	89 c7                	mov    %eax,%edi$/;"	l
ffff8000001021d2	kernel.asm	/^ffff8000001021d2:	48 b8 48 20 10 00 00 	movabs $0xffff800000102048,%rax$/;"	l
ffff8000001021d9	kernel.asm	/^ffff8000001021d9:	80 ff ff $/;"	l
ffff8000001021dc	kernel.asm	/^ffff8000001021dc:	ff d0                	callq  *%rax$/;"	l
ffff8000001021de	kernel.asm	/^ffff8000001021de:	8b 55 fc             	mov    -0x4(%rbp),%edx$/;"	l
ffff8000001021e1	kernel.asm	/^ffff8000001021e1:	8b 45 f8             	mov    -0x8(%rbp),%eax$/;"	l
ffff8000001021e4	kernel.asm	/^ffff8000001021e4:	01 d0                	add    %edx,%eax$/;"	l
ffff8000001021e6	kernel.asm	/^ffff8000001021e6:	eb 72                	jmp    ffff80000010225a <balloc+0x19e>$/;"	l
ffff8000001021e8	kernel.asm	/^ffff8000001021e8:	83 45 f8 01          	addl   $0x1,-0x8(%rbp)$/;"	l
ffff8000001021ec	kernel.asm	/^ffff8000001021ec:	81 7d f8 ff 0f 00 00 	cmpl   $0xfff,-0x8(%rbp)$/;"	l
ffff8000001021f3	kernel.asm	/^ffff8000001021f3:	7f 1e                	jg     ffff800000102213 <balloc+0x157>$/;"	l
ffff8000001021f5	kernel.asm	/^ffff8000001021f5:	8b 55 fc             	mov    -0x4(%rbp),%edx$/;"	l
ffff8000001021f8	kernel.asm	/^ffff8000001021f8:	8b 45 f8             	mov    -0x8(%rbp),%eax$/;"	l
ffff8000001021fb	kernel.asm	/^ffff8000001021fb:	01 d0                	add    %edx,%eax$/;"	l
ffff8000001021fd	kernel.asm	/^ffff8000001021fd:	89 c2                	mov    %eax,%edx$/;"	l
ffff8000001021ff	kernel.asm	/^ffff8000001021ff:	48 b8 00 56 11 00 00 	movabs $0xffff800000115600,%rax$/;"	l
ffff800000102206	kernel.asm	/^ffff800000102206:	80 ff ff $/;"	l
ffff800000102209	kernel.asm	/^ffff800000102209:	8b 00                	mov    (%rax),%eax$/;"	l
ffff80000010220b	kernel.asm	/^ffff80000010220b:	39 c2                	cmp    %eax,%edx$/;"	l
ffff80000010220d	kernel.asm	/^ffff80000010220d:	0f 82 0d ff ff ff    	jb     ffff800000102120 <balloc+0x64>$/;"	l
ffff800000102213	kernel.asm	/^ffff800000102213:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000102217	kernel.asm	/^ffff800000102217:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010221a	kernel.asm	/^ffff80000010221a:	48 b8 aa 04 10 00 00 	movabs $0xffff8000001004aa,%rax$/;"	l
ffff800000102221	kernel.asm	/^ffff800000102221:	80 ff ff $/;"	l
ffff800000102224	kernel.asm	/^ffff800000102224:	ff d0                	callq  *%rax$/;"	l
ffff800000102226	kernel.asm	/^ffff800000102226:	81 45 fc 00 10 00 00 	addl   $0x1000,-0x4(%rbp)$/;"	l
ffff80000010222d	kernel.asm	/^ffff80000010222d:	48 b8 00 56 11 00 00 	movabs $0xffff800000115600,%rax$/;"	l
ffff800000102234	kernel.asm	/^ffff800000102234:	80 ff ff $/;"	l
ffff800000102237	kernel.asm	/^ffff800000102237:	8b 10                	mov    (%rax),%edx$/;"	l
ffff800000102239	kernel.asm	/^ffff800000102239:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff80000010223c	kernel.asm	/^ffff80000010223c:	39 c2                	cmp    %eax,%edx$/;"	l
ffff80000010223e	kernel.asm	/^ffff80000010223e:	0f 87 97 fe ff ff    	ja     ffff8000001020db <balloc+0x1f>$/;"	l
ffff800000102244	kernel.asm	/^ffff800000102244:	48 bf a4 c2 10 00 00 	movabs $0xffff80000010c2a4,%rdi$/;"	l
ffff80000010224b	kernel.asm	/^ffff80000010224b:	80 ff ff $/;"	l
ffff80000010224e	kernel.asm	/^ffff80000010224e:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff800000102255	kernel.asm	/^ffff800000102255:	80 ff ff $/;"	l
ffff800000102258	kernel.asm	/^ffff800000102258:	ff d0                	callq  *%rax$/;"	l
ffff80000010225a	kernel.asm	/^ffff80000010225a:	c9                   	leaveq $/;"	l
ffff80000010225b	kernel.asm	/^ffff80000010225b:	c3                   	retq   $/;"	l
ffff80000010225c	kernel.asm	/^ffff80000010225c <bfree>:$/;"	l
ffff80000010225c	kernel.asm	/^ffff80000010225c:	55                   	push   %rbp$/;"	l
ffff80000010225d	kernel.asm	/^ffff80000010225d:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000102260	kernel.asm	/^ffff800000102260:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ffff800000102264	kernel.asm	/^ffff800000102264:	89 7d ec             	mov    %edi,-0x14(%rbp)$/;"	l
ffff800000102267	kernel.asm	/^ffff800000102267:	89 75 e8             	mov    %esi,-0x18(%rbp)$/;"	l
ffff80000010226a	kernel.asm	/^ffff80000010226a:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
ffff80000010226d	kernel.asm	/^ffff80000010226d:	48 be 00 56 11 00 00 	movabs $0xffff800000115600,%rsi$/;"	l
ffff800000102274	kernel.asm	/^ffff800000102274:	80 ff ff $/;"	l
ffff800000102277	kernel.asm	/^ffff800000102277:	89 c7                	mov    %eax,%edi$/;"	l
ffff800000102279	kernel.asm	/^ffff800000102279:	48 b8 e3 1f 10 00 00 	movabs $0xffff800000101fe3,%rax$/;"	l
ffff800000102280	kernel.asm	/^ffff800000102280:	80 ff ff $/;"	l
ffff800000102283	kernel.asm	/^ffff800000102283:	ff d0                	callq  *%rax$/;"	l
ffff800000102285	kernel.asm	/^ffff800000102285:	8b 45 e8             	mov    -0x18(%rbp),%eax$/;"	l
ffff800000102288	kernel.asm	/^ffff800000102288:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
ffff80000010228b	kernel.asm	/^ffff80000010228b:	89 c2                	mov    %eax,%edx$/;"	l
ffff80000010228d	kernel.asm	/^ffff80000010228d:	48 b8 00 56 11 00 00 	movabs $0xffff800000115600,%rax$/;"	l
ffff800000102294	kernel.asm	/^ffff800000102294:	80 ff ff $/;"	l
ffff800000102297	kernel.asm	/^ffff800000102297:	8b 40 18             	mov    0x18(%rax),%eax$/;"	l
ffff80000010229a	kernel.asm	/^ffff80000010229a:	01 c2                	add    %eax,%edx$/;"	l
ffff80000010229c	kernel.asm	/^ffff80000010229c:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
ffff80000010229f	kernel.asm	/^ffff80000010229f:	89 d6                	mov    %edx,%esi$/;"	l
ffff8000001022a1	kernel.asm	/^ffff8000001022a1:	89 c7                	mov    %eax,%edi$/;"	l
ffff8000001022a3	kernel.asm	/^ffff8000001022a3:	48 b8 f8 03 10 00 00 	movabs $0xffff8000001003f8,%rax$/;"	l
ffff8000001022aa	kernel.asm	/^ffff8000001022aa:	80 ff ff $/;"	l
ffff8000001022ad	kernel.asm	/^ffff8000001022ad:	ff d0                	callq  *%rax$/;"	l
ffff8000001022af	kernel.asm	/^ffff8000001022af:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff8000001022b3	kernel.asm	/^ffff8000001022b3:	8b 45 e8             	mov    -0x18(%rbp),%eax$/;"	l
ffff8000001022b6	kernel.asm	/^ffff8000001022b6:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
ffff8000001022bb	kernel.asm	/^ffff8000001022bb:	89 45 f4             	mov    %eax,-0xc(%rbp)$/;"	l
ffff8000001022be	kernel.asm	/^ffff8000001022be:	8b 45 f4             	mov    -0xc(%rbp),%eax$/;"	l
ffff8000001022c1	kernel.asm	/^ffff8000001022c1:	99                   	cltd   $/;"	l
ffff8000001022c2	kernel.asm	/^ffff8000001022c2:	c1 ea 1d             	shr    $0x1d,%edx$/;"	l
ffff8000001022c5	kernel.asm	/^ffff8000001022c5:	01 d0                	add    %edx,%eax$/;"	l
ffff8000001022c7	kernel.asm	/^ffff8000001022c7:	83 e0 07             	and    $0x7,%eax$/;"	l
ffff8000001022ca	kernel.asm	/^ffff8000001022ca:	29 d0                	sub    %edx,%eax$/;"	l
ffff8000001022cc	kernel.asm	/^ffff8000001022cc:	ba 01 00 00 00       	mov    $0x1,%edx$/;"	l
ffff8000001022d1	kernel.asm	/^ffff8000001022d1:	89 c1                	mov    %eax,%ecx$/;"	l
ffff8000001022d3	kernel.asm	/^ffff8000001022d3:	d3 e2                	shl    %cl,%edx$/;"	d
ffff8000001022d5	kernel.asm	/^ffff8000001022d5:	89 d0                	mov    %edx,%eax$/;"	l
ffff8000001022d7	kernel.asm	/^ffff8000001022d7:	89 45 f0             	mov    %eax,-0x10(%rbp)$/;"	l
ffff8000001022da	kernel.asm	/^ffff8000001022da:	8b 45 f4             	mov    -0xc(%rbp),%eax$/;"	l
ffff8000001022dd	kernel.asm	/^ffff8000001022dd:	8d 50 07             	lea    0x7(%rax),%edx$/;"	l
ffff8000001022e0	kernel.asm	/^ffff8000001022e0:	85 c0                	test   %eax,%eax$/;"	l
ffff8000001022e2	kernel.asm	/^ffff8000001022e2:	0f 48 c2             	cmovs  %edx,%eax$/;"	l
ffff8000001022e5	kernel.asm	/^ffff8000001022e5:	c1 f8 03             	sar    $0x3,%eax$/;"	l
ffff8000001022e8	kernel.asm	/^ffff8000001022e8:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx$/;"	l
ffff8000001022ec	kernel.asm	/^ffff8000001022ec:	48 98                	cltq   $/;"	l
ffff8000001022ee	kernel.asm	/^ffff8000001022ee:	0f b6 84 02 b0 00 00 	movzbl 0xb0(%rdx,%rax,1),%eax$/;"	l
ffff8000001022f5	kernel.asm	/^ffff8000001022f5:	00 $/;"	l
ffff8000001022f6	kernel.asm	/^ffff8000001022f6:	0f b6 c0             	movzbl %al,%eax$/;"	l
ffff8000001022f9	kernel.asm	/^ffff8000001022f9:	23 45 f0             	and    -0x10(%rbp),%eax$/;"	l
ffff8000001022fc	kernel.asm	/^ffff8000001022fc:	85 c0                	test   %eax,%eax$/;"	l
ffff8000001022fe	kernel.asm	/^ffff8000001022fe:	75 16                	jne    ffff800000102316 <bfree+0xba>$/;"	l
ffff800000102300	kernel.asm	/^ffff800000102300:	48 bf ba c2 10 00 00 	movabs $0xffff80000010c2ba,%rdi$/;"	l
ffff800000102307	kernel.asm	/^ffff800000102307:	80 ff ff $/;"	l
ffff80000010230a	kernel.asm	/^ffff80000010230a:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff800000102311	kernel.asm	/^ffff800000102311:	80 ff ff $/;"	l
ffff800000102314	kernel.asm	/^ffff800000102314:	ff d0                	callq  *%rax$/;"	l
ffff800000102316	kernel.asm	/^ffff800000102316:	8b 45 f4             	mov    -0xc(%rbp),%eax$/;"	l
ffff800000102319	kernel.asm	/^ffff800000102319:	8d 50 07             	lea    0x7(%rax),%edx$/;"	l
ffff80000010231c	kernel.asm	/^ffff80000010231c:	85 c0                	test   %eax,%eax$/;"	l
ffff80000010231e	kernel.asm	/^ffff80000010231e:	0f 48 c2             	cmovs  %edx,%eax$/;"	l
ffff800000102321	kernel.asm	/^ffff800000102321:	c1 f8 03             	sar    $0x3,%eax$/;"	l
ffff800000102324	kernel.asm	/^ffff800000102324:	89 c1                	mov    %eax,%ecx$/;"	l
ffff800000102326	kernel.asm	/^ffff800000102326:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx$/;"	l
ffff80000010232a	kernel.asm	/^ffff80000010232a:	48 63 c1             	movslq %ecx,%rax$/;"	l
ffff80000010232d	kernel.asm	/^ffff80000010232d:	0f b6 84 02 b0 00 00 	movzbl 0xb0(%rdx,%rax,1),%eax$/;"	l
ffff800000102334	kernel.asm	/^ffff800000102334:	00 $/;"	l
ffff800000102335	kernel.asm	/^ffff800000102335:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000102337	kernel.asm	/^ffff800000102337:	8b 45 f0             	mov    -0x10(%rbp),%eax$/;"	l
ffff80000010233a	kernel.asm	/^ffff80000010233a:	f7 d0                	not    %eax$/;"	l
ffff80000010233c	kernel.asm	/^ffff80000010233c:	21 d0                	and    %edx,%eax$/;"	l
ffff80000010233e	kernel.asm	/^ffff80000010233e:	89 c6                	mov    %eax,%esi$/;"	l
ffff800000102340	kernel.asm	/^ffff800000102340:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx$/;"	l
ffff800000102344	kernel.asm	/^ffff800000102344:	48 63 c1             	movslq %ecx,%rax$/;"	l
ffff800000102347	kernel.asm	/^ffff800000102347:	40 88 b4 02 b0 00 00 	mov    %sil,0xb0(%rdx,%rax,1)$/;"	l
ffff80000010234e	kernel.asm	/^ffff80000010234e:	00 $/;"	l
ffff80000010234f	kernel.asm	/^ffff80000010234f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000102353	kernel.asm	/^ffff800000102353:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000102356	kernel.asm	/^ffff800000102356:	48 b8 85 52 10 00 00 	movabs $0xffff800000105285,%rax$/;"	l
ffff80000010235d	kernel.asm	/^ffff80000010235d:	80 ff ff $/;"	l
ffff800000102360	kernel.asm	/^ffff800000102360:	ff d0                	callq  *%rax$/;"	l
ffff800000102362	kernel.asm	/^ffff800000102362:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000102366	kernel.asm	/^ffff800000102366:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000102369	kernel.asm	/^ffff800000102369:	48 b8 aa 04 10 00 00 	movabs $0xffff8000001004aa,%rax$/;"	l
ffff800000102370	kernel.asm	/^ffff800000102370:	80 ff ff $/;"	l
ffff800000102373	kernel.asm	/^ffff800000102373:	ff d0                	callq  *%rax$/;"	l
ffff800000102375	kernel.asm	/^ffff800000102375:	90                   	nop$/;"	l
ffff800000102376	kernel.asm	/^ffff800000102376:	c9                   	leaveq $/;"	l
ffff800000102377	kernel.asm	/^ffff800000102377:	c3                   	retq   $/;"	l
ffff800000102378	kernel.asm	/^ffff800000102378 <iinit>:$/;"	l
ffff800000102378	kernel.asm	/^ffff800000102378:	55                   	push   %rbp$/;"	l
ffff800000102379	kernel.asm	/^ffff800000102379:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010237c	kernel.asm	/^ffff80000010237c:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ffff800000102380	kernel.asm	/^ffff800000102380:	89 7d ec             	mov    %edi,-0x14(%rbp)$/;"	l
ffff800000102383	kernel.asm	/^ffff800000102383:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)$/;"	l
ffff80000010238a	kernel.asm	/^ffff80000010238a:	48 be cd c2 10 00 00 	movabs $0xffff80000010c2cd,%rsi$/;"	l
ffff800000102391	kernel.asm	/^ffff800000102391:	80 ff ff $/;"	l
ffff800000102394	kernel.asm	/^ffff800000102394:	48 bf 20 56 11 00 00 	movabs $0xffff800000115620,%rdi$/;"	l
ffff80000010239b	kernel.asm	/^ffff80000010239b:	80 ff ff $/;"	l
ffff80000010239e	kernel.asm	/^ffff80000010239e:	48 b8 cc 78 10 00 00 	movabs $0xffff8000001078cc,%rax$/;"	l
ffff8000001023a5	kernel.asm	/^ffff8000001023a5:	80 ff ff $/;"	l
ffff8000001023a8	kernel.asm	/^ffff8000001023a8:	ff d0                	callq  *%rax$/;"	l
ffff8000001023aa	kernel.asm	/^ffff8000001023aa:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)$/;"	l
ffff8000001023b1	kernel.asm	/^ffff8000001023b1:	eb 4f                	jmp    ffff800000102402 <iinit+0x8a>$/;"	l
ffff8000001023b3	kernel.asm	/^ffff8000001023b3:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff8000001023b6	kernel.asm	/^ffff8000001023b6:	48 98                	cltq   $/;"	l
ffff8000001023b8	kernel.asm	/^ffff8000001023b8:	48 89 c2             	mov    %rax,%rdx$/;"	l
ffff8000001023bb	kernel.asm	/^ffff8000001023bb:	48 89 d0             	mov    %rdx,%rax$/;"	l
ffff8000001023be	kernel.asm	/^ffff8000001023be:	48 c1 e0 05          	shl    $0x5,%rax$/;"	l
ffff8000001023c2	kernel.asm	/^ffff8000001023c2:	48 89 c2             	mov    %rax,%rdx$/;"	l
ffff8000001023c5	kernel.asm	/^ffff8000001023c5:	48 8d 04 d5 00 00 00 	lea    0x0(,%rdx,8),%rax$/;"	l
ffff8000001023cc	kernel.asm	/^ffff8000001023cc:	00 $/;"	l
ffff8000001023cd	kernel.asm	/^ffff8000001023cd:	48 29 d0             	sub    %rdx,%rax$/;"	l
ffff8000001023d0	kernel.asm	/^ffff8000001023d0:	48 8d 50 70          	lea    0x70(%rax),%rdx$/;"	l
ffff8000001023d4	kernel.asm	/^ffff8000001023d4:	48 b8 20 56 11 00 00 	movabs $0xffff800000115620,%rax$/;"	l
ffff8000001023db	kernel.asm	/^ffff8000001023db:	80 ff ff $/;"	l
ffff8000001023de	kernel.asm	/^ffff8000001023de:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff8000001023e1	kernel.asm	/^ffff8000001023e1:	48 83 c0 08          	add    $0x8,%rax$/;"	l
ffff8000001023e5	kernel.asm	/^ffff8000001023e5:	48 be d4 c2 10 00 00 	movabs $0xffff80000010c2d4,%rsi$/;"	l
ffff8000001023ec	kernel.asm	/^ffff8000001023ec:	80 ff ff $/;"	l
ffff8000001023ef	kernel.asm	/^ffff8000001023ef:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001023f2	kernel.asm	/^ffff8000001023f2:	48 b8 f9 76 10 00 00 	movabs $0xffff8000001076f9,%rax$/;"	l
ffff8000001023f9	kernel.asm	/^ffff8000001023f9:	80 ff ff $/;"	l
ffff8000001023fc	kernel.asm	/^ffff8000001023fc:	ff d0                	callq  *%rax$/;"	l
ffff8000001023fe	kernel.asm	/^ffff8000001023fe:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)$/;"	l
ffff800000102402	kernel.asm	/^ffff800000102402:	83 7d fc 31          	cmpl   $0x31,-0x4(%rbp)$/;"	l
ffff800000102406	kernel.asm	/^ffff800000102406:	7e ab                	jle    ffff8000001023b3 <iinit+0x3b>$/;"	l
ffff800000102408	kernel.asm	/^ffff800000102408:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
ffff80000010240b	kernel.asm	/^ffff80000010240b:	48 be 00 56 11 00 00 	movabs $0xffff800000115600,%rsi$/;"	l
ffff800000102412	kernel.asm	/^ffff800000102412:	80 ff ff $/;"	l
ffff800000102415	kernel.asm	/^ffff800000102415:	89 c7                	mov    %eax,%edi$/;"	l
ffff800000102417	kernel.asm	/^ffff800000102417:	48 b8 e3 1f 10 00 00 	movabs $0xffff800000101fe3,%rax$/;"	l
ffff80000010241e	kernel.asm	/^ffff80000010241e:	80 ff ff $/;"	l
ffff800000102421	kernel.asm	/^ffff800000102421:	ff d0                	callq  *%rax$/;"	l
ffff800000102423	kernel.asm	/^ffff800000102423:	90                   	nop$/;"	l
ffff800000102424	kernel.asm	/^ffff800000102424:	c9                   	leaveq $/;"	l
ffff800000102425	kernel.asm	/^ffff800000102425:	c3                   	retq   $/;"	l
ffff800000102426	kernel.asm	/^ffff800000102426 <ialloc>:$/;"	l
ffff800000102426	kernel.asm	/^ffff800000102426:	55                   	push   %rbp$/;"	l
ffff800000102427	kernel.asm	/^ffff800000102427:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010242a	kernel.asm	/^ffff80000010242a:	48 83 ec 30          	sub    $0x30,%rsp$/;"	l
ffff80000010242e	kernel.asm	/^ffff80000010242e:	89 7d dc             	mov    %edi,-0x24(%rbp)$/;"	l
ffff800000102431	kernel.asm	/^ffff800000102431:	89 f0                	mov    %esi,%eax$/;"	l
ffff800000102433	kernel.asm	/^ffff800000102433:	48 89 55 d0          	mov    %rdx,-0x30(%rbp)$/;"	l
ffff800000102437	kernel.asm	/^ffff800000102437:	66 89 45 d8          	mov    %ax,-0x28(%rbp)$/;"	l
ffff80000010243b	kernel.asm	/^ffff80000010243b:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%rbp)$/;"	l
ffff800000102442	kernel.asm	/^ffff800000102442:	e9 dc 00 00 00       	jmpq   ffff800000102523 <ialloc+0xfd>$/;"	l
ffff800000102447	kernel.asm	/^ffff800000102447:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff80000010244a	kernel.asm	/^ffff80000010244a:	48 98                	cltq   $/;"	l
ffff80000010244c	kernel.asm	/^ffff80000010244c:	48 c1 e8 03          	shr    $0x3,%rax$/;"	l
ffff800000102450	kernel.asm	/^ffff800000102450:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000102452	kernel.asm	/^ffff800000102452:	48 b8 00 56 11 00 00 	movabs $0xffff800000115600,%rax$/;"	l
ffff800000102459	kernel.asm	/^ffff800000102459:	80 ff ff $/;"	l
ffff80000010245c	kernel.asm	/^ffff80000010245c:	8b 40 14             	mov    0x14(%rax),%eax$/;"	l
ffff80000010245f	kernel.asm	/^ffff80000010245f:	01 c2                	add    %eax,%edx$/;"	l
ffff800000102461	kernel.asm	/^ffff800000102461:	8b 45 dc             	mov    -0x24(%rbp),%eax$/;"	l
ffff800000102464	kernel.asm	/^ffff800000102464:	89 d6                	mov    %edx,%esi$/;"	l
ffff800000102466	kernel.asm	/^ffff800000102466:	89 c7                	mov    %eax,%edi$/;"	l
ffff800000102468	kernel.asm	/^ffff800000102468:	48 b8 f8 03 10 00 00 	movabs $0xffff8000001003f8,%rax$/;"	l
ffff80000010246f	kernel.asm	/^ffff80000010246f:	80 ff ff $/;"	l
ffff800000102472	kernel.asm	/^ffff800000102472:	ff d0                	callq  *%rax$/;"	l
ffff800000102474	kernel.asm	/^ffff800000102474:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ffff800000102478	kernel.asm	/^ffff800000102478:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff80000010247c	kernel.asm	/^ffff80000010247c:	48 8d 90 b0 00 00 00 	lea    0xb0(%rax),%rdx$/;"	l
ffff800000102483	kernel.asm	/^ffff800000102483:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff800000102486	kernel.asm	/^ffff800000102486:	48 98                	cltq   $/;"	l
ffff800000102488	kernel.asm	/^ffff800000102488:	83 e0 07             	and    $0x7,%eax$/;"	l
ffff80000010248b	kernel.asm	/^ffff80000010248b:	48 c1 e0 06          	shl    $0x6,%rax$/;"	l
ffff80000010248f	kernel.asm	/^ffff80000010248f:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff800000102492	kernel.asm	/^ffff800000102492:	48 89 45 e8          	mov    %rax,-0x18(%rbp)$/;"	l
ffff800000102496	kernel.asm	/^ffff800000102496:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010249a	kernel.asm	/^ffff80000010249a:	0f b7 00             	movzwl (%rax),%eax$/;"	l
ffff80000010249d	kernel.asm	/^ffff80000010249d:	66 85 c0             	test   %ax,%ax$/;"	l
ffff8000001024a0	kernel.asm	/^ffff8000001024a0:	75 6a                	jne    ffff80000010250c <ialloc+0xe6>$/;"	l
ffff8000001024a2	kernel.asm	/^ffff8000001024a2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff8000001024a6	kernel.asm	/^ffff8000001024a6:	ba 40 00 00 00       	mov    $0x40,%edx$/;"	l
ffff8000001024ab	kernel.asm	/^ffff8000001024ab:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffff8000001024b0	kernel.asm	/^ffff8000001024b0:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001024b3	kernel.asm	/^ffff8000001024b3:	48 b8 9d 7c 10 00 00 	movabs $0xffff800000107c9d,%rax$/;"	l
ffff8000001024ba	kernel.asm	/^ffff8000001024ba:	80 ff ff $/;"	l
ffff8000001024bd	kernel.asm	/^ffff8000001024bd:	ff d0                	callq  *%rax$/;"	l
ffff8000001024bf	kernel.asm	/^ffff8000001024bf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff8000001024c3	kernel.asm	/^ffff8000001024c3:	0f b7 55 d8          	movzwl -0x28(%rbp),%edx$/;"	l
ffff8000001024c7	kernel.asm	/^ffff8000001024c7:	66 89 10             	mov    %dx,(%rax)$/;"	l
ffff8000001024ca	kernel.asm	/^ffff8000001024ca:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff8000001024ce	kernel.asm	/^ffff8000001024ce:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001024d1	kernel.asm	/^ffff8000001024d1:	48 b8 85 52 10 00 00 	movabs $0xffff800000105285,%rax$/;"	l
ffff8000001024d8	kernel.asm	/^ffff8000001024d8:	80 ff ff $/;"	l
ffff8000001024db	kernel.asm	/^ffff8000001024db:	ff d0                	callq  *%rax$/;"	l
ffff8000001024dd	kernel.asm	/^ffff8000001024dd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff8000001024e1	kernel.asm	/^ffff8000001024e1:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001024e4	kernel.asm	/^ffff8000001024e4:	48 b8 aa 04 10 00 00 	movabs $0xffff8000001004aa,%rax$/;"	l
ffff8000001024eb	kernel.asm	/^ffff8000001024eb:	80 ff ff $/;"	l
ffff8000001024ee	kernel.asm	/^ffff8000001024ee:	ff d0                	callq  *%rax$/;"	l
ffff8000001024f0	kernel.asm	/^ffff8000001024f0:	8b 4d fc             	mov    -0x4(%rbp),%ecx$/;"	l
ffff8000001024f3	kernel.asm	/^ffff8000001024f3:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx$/;"	l
ffff8000001024f7	kernel.asm	/^ffff8000001024f7:	8b 45 dc             	mov    -0x24(%rbp),%eax$/;"	l
ffff8000001024fa	kernel.asm	/^ffff8000001024fa:	89 ce                	mov    %ecx,%esi$/;"	l
ffff8000001024fc	kernel.asm	/^ffff8000001024fc:	89 c7                	mov    %eax,%edi$/;"	l
ffff8000001024fe	kernel.asm	/^ffff8000001024fe:	48 b8 65 26 10 00 00 	movabs $0xffff800000102665,%rax$/;"	l
ffff800000102505	kernel.asm	/^ffff800000102505:	80 ff ff $/;"	l
ffff800000102508	kernel.asm	/^ffff800000102508:	ff d0                	callq  *%rax$/;"	l
ffff80000010250a	kernel.asm	/^ffff80000010250a:	eb 45                	jmp    ffff800000102551 <ialloc+0x12b>$/;"	l
ffff80000010250c	kernel.asm	/^ffff80000010250c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000102510	kernel.asm	/^ffff800000102510:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000102513	kernel.asm	/^ffff800000102513:	48 b8 aa 04 10 00 00 	movabs $0xffff8000001004aa,%rax$/;"	l
ffff80000010251a	kernel.asm	/^ffff80000010251a:	80 ff ff $/;"	l
ffff80000010251d	kernel.asm	/^ffff80000010251d:	ff d0                	callq  *%rax$/;"	l
ffff80000010251f	kernel.asm	/^ffff80000010251f:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)$/;"	l
ffff800000102523	kernel.asm	/^ffff800000102523:	48 b8 00 56 11 00 00 	movabs $0xffff800000115600,%rax$/;"	l
ffff80000010252a	kernel.asm	/^ffff80000010252a:	80 ff ff $/;"	l
ffff80000010252d	kernel.asm	/^ffff80000010252d:	8b 50 08             	mov    0x8(%rax),%edx$/;"	l
ffff800000102530	kernel.asm	/^ffff800000102530:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff800000102533	kernel.asm	/^ffff800000102533:	39 c2                	cmp    %eax,%edx$/;"	l
ffff800000102535	kernel.asm	/^ffff800000102535:	0f 87 0c ff ff ff    	ja     ffff800000102447 <ialloc+0x21>$/;"	l
ffff80000010253b	kernel.asm	/^ffff80000010253b:	48 bf da c2 10 00 00 	movabs $0xffff80000010c2da,%rdi$/;"	l
ffff800000102542	kernel.asm	/^ffff800000102542:	80 ff ff $/;"	l
ffff800000102545	kernel.asm	/^ffff800000102545:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff80000010254c	kernel.asm	/^ffff80000010254c:	80 ff ff $/;"	l
ffff80000010254f	kernel.asm	/^ffff80000010254f:	ff d0                	callq  *%rax$/;"	l
ffff800000102551	kernel.asm	/^ffff800000102551:	c9                   	leaveq $/;"	l
ffff800000102552	kernel.asm	/^ffff800000102552:	c3                   	retq   $/;"	l
ffff800000102553	kernel.asm	/^ffff800000102553 <fs_iupdate>:$/;"	l
ffff800000102553	kernel.asm	/^ffff800000102553:	55                   	push   %rbp$/;"	l
ffff800000102554	kernel.asm	/^ffff800000102554:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000102557	kernel.asm	/^ffff800000102557:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ffff80000010255b	kernel.asm	/^ffff80000010255b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
ffff80000010255f	kernel.asm	/^ffff80000010255f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000102563	kernel.asm	/^ffff800000102563:	8b 40 04             	mov    0x4(%rax),%eax$/;"	l
ffff800000102566	kernel.asm	/^ffff800000102566:	c1 e8 03             	shr    $0x3,%eax$/;"	l
ffff800000102569	kernel.asm	/^ffff800000102569:	89 c2                	mov    %eax,%edx$/;"	l
ffff80000010256b	kernel.asm	/^ffff80000010256b:	48 b8 00 56 11 00 00 	movabs $0xffff800000115600,%rax$/;"	l
ffff800000102572	kernel.asm	/^ffff800000102572:	80 ff ff $/;"	l
ffff800000102575	kernel.asm	/^ffff800000102575:	8b 40 14             	mov    0x14(%rax),%eax$/;"	l
ffff800000102578	kernel.asm	/^ffff800000102578:	01 c2                	add    %eax,%edx$/;"	l
ffff80000010257a	kernel.asm	/^ffff80000010257a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010257e	kernel.asm	/^ffff80000010257e:	8b 00                	mov    (%rax),%eax$/;"	l
ffff800000102580	kernel.asm	/^ffff800000102580:	89 d6                	mov    %edx,%esi$/;"	l
ffff800000102582	kernel.asm	/^ffff800000102582:	89 c7                	mov    %eax,%edi$/;"	l
ffff800000102584	kernel.asm	/^ffff800000102584:	48 b8 f8 03 10 00 00 	movabs $0xffff8000001003f8,%rax$/;"	l
ffff80000010258b	kernel.asm	/^ffff80000010258b:	80 ff ff $/;"	l
ffff80000010258e	kernel.asm	/^ffff80000010258e:	ff d0                	callq  *%rax$/;"	l
ffff800000102590	kernel.asm	/^ffff800000102590:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff800000102594	kernel.asm	/^ffff800000102594:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000102598	kernel.asm	/^ffff800000102598:	48 8d 90 b0 00 00 00 	lea    0xb0(%rax),%rdx$/;"	l
ffff80000010259f	kernel.asm	/^ffff80000010259f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff8000001025a3	kernel.asm	/^ffff8000001025a3:	8b 40 04             	mov    0x4(%rax),%eax$/;"	l
ffff8000001025a6	kernel.asm	/^ffff8000001025a6:	89 c0                	mov    %eax,%eax$/;"	l
ffff8000001025a8	kernel.asm	/^ffff8000001025a8:	83 e0 07             	and    $0x7,%eax$/;"	l
ffff8000001025ab	kernel.asm	/^ffff8000001025ab:	48 c1 e0 06          	shl    $0x6,%rax$/;"	l
ffff8000001025af	kernel.asm	/^ffff8000001025af:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff8000001025b2	kernel.asm	/^ffff8000001025b2:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ffff8000001025b6	kernel.asm	/^ffff8000001025b6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff8000001025ba	kernel.asm	/^ffff8000001025ba:	0f b7 90 a0 00 00 00 	movzwl 0xa0(%rax),%edx$/;"	l
ffff8000001025c1	kernel.asm	/^ffff8000001025c1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff8000001025c5	kernel.asm	/^ffff8000001025c5:	66 89 10             	mov    %dx,(%rax)$/;"	l
ffff8000001025c8	kernel.asm	/^ffff8000001025c8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff8000001025cc	kernel.asm	/^ffff8000001025cc:	0f b7 90 a2 00 00 00 	movzwl 0xa2(%rax),%edx$/;"	l
ffff8000001025d3	kernel.asm	/^ffff8000001025d3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff8000001025d7	kernel.asm	/^ffff8000001025d7:	66 89 50 02          	mov    %dx,0x2(%rax)$/;"	l
ffff8000001025db	kernel.asm	/^ffff8000001025db:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff8000001025df	kernel.asm	/^ffff8000001025df:	0f b7 90 a4 00 00 00 	movzwl 0xa4(%rax),%edx$/;"	l
ffff8000001025e6	kernel.asm	/^ffff8000001025e6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff8000001025ea	kernel.asm	/^ffff8000001025ea:	66 89 50 04          	mov    %dx,0x4(%rax)$/;"	l
ffff8000001025ee	kernel.asm	/^ffff8000001025ee:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff8000001025f2	kernel.asm	/^ffff8000001025f2:	0f b7 90 a6 00 00 00 	movzwl 0xa6(%rax),%edx$/;"	l
ffff8000001025f9	kernel.asm	/^ffff8000001025f9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff8000001025fd	kernel.asm	/^ffff8000001025fd:	66 89 50 06          	mov    %dx,0x6(%rax)$/;"	l
ffff800000102601	kernel.asm	/^ffff800000102601:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000102605	kernel.asm	/^ffff800000102605:	8b 90 a8 00 00 00    	mov    0xa8(%rax),%edx$/;"	l
ffff80000010260b	kernel.asm	/^ffff80000010260b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff80000010260f	kernel.asm	/^ffff80000010260f:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
ffff800000102612	kernel.asm	/^ffff800000102612:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000102616	kernel.asm	/^ffff800000102616:	48 8d 88 ac 00 00 00 	lea    0xac(%rax),%rcx$/;"	l
ffff80000010261d	kernel.asm	/^ffff80000010261d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000102621	kernel.asm	/^ffff800000102621:	48 83 c0 0c          	add    $0xc,%rax$/;"	l
ffff800000102625	kernel.asm	/^ffff800000102625:	ba 34 00 00 00       	mov    $0x34,%edx$/;"	l
ffff80000010262a	kernel.asm	/^ffff80000010262a:	48 89 ce             	mov    %rcx,%rsi$/;"	l
ffff80000010262d	kernel.asm	/^ffff80000010262d:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000102630	kernel.asm	/^ffff800000102630:	48 b8 9a 7d 10 00 00 	movabs $0xffff800000107d9a,%rax$/;"	l
ffff800000102637	kernel.asm	/^ffff800000102637:	80 ff ff $/;"	l
ffff80000010263a	kernel.asm	/^ffff80000010263a:	ff d0                	callq  *%rax$/;"	l
ffff80000010263c	kernel.asm	/^ffff80000010263c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000102640	kernel.asm	/^ffff800000102640:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000102643	kernel.asm	/^ffff800000102643:	48 b8 85 52 10 00 00 	movabs $0xffff800000105285,%rax$/;"	l
ffff80000010264a	kernel.asm	/^ffff80000010264a:	80 ff ff $/;"	l
ffff80000010264d	kernel.asm	/^ffff80000010264d:	ff d0                	callq  *%rax$/;"	l
ffff80000010264f	kernel.asm	/^ffff80000010264f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000102653	kernel.asm	/^ffff800000102653:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000102656	kernel.asm	/^ffff800000102656:	48 b8 aa 04 10 00 00 	movabs $0xffff8000001004aa,%rax$/;"	l
ffff80000010265d	kernel.asm	/^ffff80000010265d:	80 ff ff $/;"	l
ffff800000102660	kernel.asm	/^ffff800000102660:	ff d0                	callq  *%rax$/;"	l
ffff800000102662	kernel.asm	/^ffff800000102662:	90                   	nop$/;"	l
ffff800000102663	kernel.asm	/^ffff800000102663:	c9                   	leaveq $/;"	l
ffff800000102664	kernel.asm	/^ffff800000102664:	c3                   	retq   $/;"	l
ffff800000102665	kernel.asm	/^ffff800000102665 <iget>:$/;"	l
ffff800000102665	kernel.asm	/^ffff800000102665:	55                   	push   %rbp$/;"	l
ffff800000102666	kernel.asm	/^ffff800000102666:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000102669	kernel.asm	/^ffff800000102669:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ffff80000010266d	kernel.asm	/^ffff80000010266d:	89 7d ec             	mov    %edi,-0x14(%rbp)$/;"	l
ffff800000102670	kernel.asm	/^ffff800000102670:	89 75 e8             	mov    %esi,-0x18(%rbp)$/;"	l
ffff800000102673	kernel.asm	/^ffff800000102673:	48 89 55 e0          	mov    %rdx,-0x20(%rbp)$/;"	l
ffff800000102677	kernel.asm	/^ffff800000102677:	48 bf 20 56 11 00 00 	movabs $0xffff800000115620,%rdi$/;"	l
ffff80000010267e	kernel.asm	/^ffff80000010267e:	80 ff ff $/;"	l
ffff800000102681	kernel.asm	/^ffff800000102681:	48 b8 01 79 10 00 00 	movabs $0xffff800000107901,%rax$/;"	l
ffff800000102688	kernel.asm	/^ffff800000102688:	80 ff ff $/;"	l
ffff80000010268b	kernel.asm	/^ffff80000010268b:	ff d0                	callq  *%rax$/;"	l
ffff80000010268d	kernel.asm	/^ffff80000010268d:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)$/;"	l
ffff800000102694	kernel.asm	/^ffff800000102694:	00 $/;"	l
ffff800000102695	kernel.asm	/^ffff800000102695:	48 b8 88 56 11 00 00 	movabs $0xffff800000115688,%rax$/;"	l
ffff80000010269c	kernel.asm	/^ffff80000010269c:	80 ff ff $/;"	l
ffff80000010269f	kernel.asm	/^ffff80000010269f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff8000001026a3	kernel.asm	/^ffff8000001026a3:	eb 74                	jmp    ffff800000102719 <iget+0xb4>$/;"	l
ffff8000001026a5	kernel.asm	/^ffff8000001026a5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001026a9	kernel.asm	/^ffff8000001026a9:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
ffff8000001026ac	kernel.asm	/^ffff8000001026ac:	85 c0                	test   %eax,%eax$/;"	l
ffff8000001026ae	kernel.asm	/^ffff8000001026ae:	7e 47                	jle    ffff8000001026f7 <iget+0x92>$/;"	l
ffff8000001026b0	kernel.asm	/^ffff8000001026b0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001026b4	kernel.asm	/^ffff8000001026b4:	8b 00                	mov    (%rax),%eax$/;"	l
ffff8000001026b6	kernel.asm	/^ffff8000001026b6:	3b 45 ec             	cmp    -0x14(%rbp),%eax$/;"	l
ffff8000001026b9	kernel.asm	/^ffff8000001026b9:	75 3c                	jne    ffff8000001026f7 <iget+0x92>$/;"	l
ffff8000001026bb	kernel.asm	/^ffff8000001026bb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001026bf	kernel.asm	/^ffff8000001026bf:	8b 40 04             	mov    0x4(%rax),%eax$/;"	l
ffff8000001026c2	kernel.asm	/^ffff8000001026c2:	3b 45 e8             	cmp    -0x18(%rbp),%eax$/;"	l
ffff8000001026c5	kernel.asm	/^ffff8000001026c5:	75 30                	jne    ffff8000001026f7 <iget+0x92>$/;"	l
ffff8000001026c7	kernel.asm	/^ffff8000001026c7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001026cb	kernel.asm	/^ffff8000001026cb:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
ffff8000001026ce	kernel.asm	/^ffff8000001026ce:	8d 50 01             	lea    0x1(%rax),%edx$/;"	l
ffff8000001026d1	kernel.asm	/^ffff8000001026d1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001026d5	kernel.asm	/^ffff8000001026d5:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
ffff8000001026d8	kernel.asm	/^ffff8000001026d8:	48 bf 20 56 11 00 00 	movabs $0xffff800000115620,%rdi$/;"	l
ffff8000001026df	kernel.asm	/^ffff8000001026df:	80 ff ff $/;"	l
ffff8000001026e2	kernel.asm	/^ffff8000001026e2:	48 b8 9a 79 10 00 00 	movabs $0xffff80000010799a,%rax$/;"	l
ffff8000001026e9	kernel.asm	/^ffff8000001026e9:	80 ff ff $/;"	l
ffff8000001026ec	kernel.asm	/^ffff8000001026ec:	ff d0                	callq  *%rax$/;"	l
ffff8000001026ee	kernel.asm	/^ffff8000001026ee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001026f2	kernel.asm	/^ffff8000001026f2:	e9 d5 00 00 00       	jmpq   ffff8000001027cc <iget+0x167>$/;"	l
ffff8000001026f7	kernel.asm	/^ffff8000001026f7:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)$/;"	l
ffff8000001026fc	kernel.asm	/^ffff8000001026fc:	75 13                	jne    ffff800000102711 <iget+0xac>$/;"	l
ffff8000001026fe	kernel.asm	/^ffff8000001026fe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000102702	kernel.asm	/^ffff800000102702:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
ffff800000102705	kernel.asm	/^ffff800000102705:	85 c0                	test   %eax,%eax$/;"	l
ffff800000102707	kernel.asm	/^ffff800000102707:	75 08                	jne    ffff800000102711 <iget+0xac>$/;"	l
ffff800000102709	kernel.asm	/^ffff800000102709:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010270d	kernel.asm	/^ffff80000010270d:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ffff800000102711	kernel.asm	/^ffff800000102711:	48 81 45 f8 e0 00 00 	addq   $0xe0,-0x8(%rbp)$/;"	l
ffff800000102718	kernel.asm	/^ffff800000102718:	00 $/;"	l
ffff800000102719	kernel.asm	/^ffff800000102719:	48 b8 48 82 11 00 00 	movabs $0xffff800000118248,%rax$/;"	l
ffff800000102720	kernel.asm	/^ffff800000102720:	80 ff ff $/;"	l
ffff800000102723	kernel.asm	/^ffff800000102723:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)$/;"	l
ffff800000102727	kernel.asm	/^ffff800000102727:	0f 82 78 ff ff ff    	jb     ffff8000001026a5 <iget+0x40>$/;"	l
ffff80000010272d	kernel.asm	/^ffff80000010272d:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)$/;"	l
ffff800000102732	kernel.asm	/^ffff800000102732:	75 16                	jne    ffff80000010274a <iget+0xe5>$/;"	l
ffff800000102734	kernel.asm	/^ffff800000102734:	48 bf ec c2 10 00 00 	movabs $0xffff80000010c2ec,%rdi$/;"	l
ffff80000010273b	kernel.asm	/^ffff80000010273b:	80 ff ff $/;"	l
ffff80000010273e	kernel.asm	/^ffff80000010273e:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff800000102745	kernel.asm	/^ffff800000102745:	80 ff ff $/;"	l
ffff800000102748	kernel.asm	/^ffff800000102748:	ff d0                	callq  *%rax$/;"	l
ffff80000010274a	kernel.asm	/^ffff80000010274a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff80000010274e	kernel.asm	/^ffff80000010274e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff800000102752	kernel.asm	/^ffff800000102752:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000102756	kernel.asm	/^ffff800000102756:	8b 55 ec             	mov    -0x14(%rbp),%edx$/;"	l
ffff800000102759	kernel.asm	/^ffff800000102759:	89 10                	mov    %edx,(%rax)$/;"	l
ffff80000010275b	kernel.asm	/^ffff80000010275b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010275f	kernel.asm	/^ffff80000010275f:	8b 55 e8             	mov    -0x18(%rbp),%edx$/;"	l
ffff800000102762	kernel.asm	/^ffff800000102762:	89 50 04             	mov    %edx,0x4(%rax)$/;"	l
ffff800000102765	kernel.asm	/^ffff800000102765:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)$/;"	l
ffff80000010276a	kernel.asm	/^ffff80000010276a:	74 18                	je     ffff800000102784 <iget+0x11f>$/;"	l
ffff80000010276c	kernel.asm	/^ffff80000010276c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff800000102770	kernel.asm	/^ffff800000102770:	48 8b 90 98 00 00 00 	mov    0x98(%rax),%rdx$/;"	l
ffff800000102777	kernel.asm	/^ffff800000102777:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010277b	kernel.asm	/^ffff80000010277b:	48 89 90 98 00 00 00 	mov    %rdx,0x98(%rax)$/;"	l
ffff800000102782	kernel.asm	/^ffff800000102782:	eb 15                	jmp    ffff800000102799 <iget+0x134>$/;"	l
ffff800000102784	kernel.asm	/^ffff800000102784:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000102788	kernel.asm	/^ffff800000102788:	48 b9 20 d0 10 00 00 	movabs $0xffff80000010d020,%rcx$/;"	l
ffff80000010278f	kernel.asm	/^ffff80000010278f:	80 ff ff $/;"	l
ffff800000102792	kernel.asm	/^ffff800000102792:	48 89 88 98 00 00 00 	mov    %rcx,0x98(%rax)$/;"	l
ffff800000102799	kernel.asm	/^ffff800000102799:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010279d	kernel.asm	/^ffff80000010279d:	c7 40 08 01 00 00 00 	movl   $0x1,0x8(%rax)$/;"	l
ffff8000001027a4	kernel.asm	/^ffff8000001027a4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001027a8	kernel.asm	/^ffff8000001027a8:	c7 80 90 00 00 00 00 	movl   $0x0,0x90(%rax)$/;"	l
ffff8000001027af	kernel.asm	/^ffff8000001027af:	00 00 00 $/;"	l
ffff8000001027b2	kernel.asm	/^ffff8000001027b2:	48 bf 20 56 11 00 00 	movabs $0xffff800000115620,%rdi$/;"	l
ffff8000001027b9	kernel.asm	/^ffff8000001027b9:	80 ff ff $/;"	l
ffff8000001027bc	kernel.asm	/^ffff8000001027bc:	48 b8 9a 79 10 00 00 	movabs $0xffff80000010799a,%rax$/;"	l
ffff8000001027c3	kernel.asm	/^ffff8000001027c3:	80 ff ff $/;"	l
ffff8000001027c6	kernel.asm	/^ffff8000001027c6:	ff d0                	callq  *%rax$/;"	l
ffff8000001027c8	kernel.asm	/^ffff8000001027c8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001027cc	kernel.asm	/^ffff8000001027cc:	c9                   	leaveq $/;"	l
ffff8000001027cd	kernel.asm	/^ffff8000001027cd:	c3                   	retq   $/;"	l
ffff8000001027ce	kernel.asm	/^ffff8000001027ce <idup>:$/;"	l
ffff8000001027ce	kernel.asm	/^ffff8000001027ce:	55                   	push   %rbp$/;"	l
ffff8000001027cf	kernel.asm	/^ffff8000001027cf:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff8000001027d2	kernel.asm	/^ffff8000001027d2:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff8000001027d6	kernel.asm	/^ffff8000001027d6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)$/;"	l
ffff8000001027da	kernel.asm	/^ffff8000001027da:	48 bf 20 56 11 00 00 	movabs $0xffff800000115620,%rdi$/;"	l
ffff8000001027e1	kernel.asm	/^ffff8000001027e1:	80 ff ff $/;"	l
ffff8000001027e4	kernel.asm	/^ffff8000001027e4:	48 b8 01 79 10 00 00 	movabs $0xffff800000107901,%rax$/;"	l
ffff8000001027eb	kernel.asm	/^ffff8000001027eb:	80 ff ff $/;"	l
ffff8000001027ee	kernel.asm	/^ffff8000001027ee:	ff d0                	callq  *%rax$/;"	l
ffff8000001027f0	kernel.asm	/^ffff8000001027f0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001027f4	kernel.asm	/^ffff8000001027f4:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
ffff8000001027f7	kernel.asm	/^ffff8000001027f7:	8d 50 01             	lea    0x1(%rax),%edx$/;"	l
ffff8000001027fa	kernel.asm	/^ffff8000001027fa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001027fe	kernel.asm	/^ffff8000001027fe:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
ffff800000102801	kernel.asm	/^ffff800000102801:	48 bf 20 56 11 00 00 	movabs $0xffff800000115620,%rdi$/;"	l
ffff800000102808	kernel.asm	/^ffff800000102808:	80 ff ff $/;"	l
ffff80000010280b	kernel.asm	/^ffff80000010280b:	48 b8 9a 79 10 00 00 	movabs $0xffff80000010799a,%rax$/;"	l
ffff800000102812	kernel.asm	/^ffff800000102812:	80 ff ff $/;"	l
ffff800000102815	kernel.asm	/^ffff800000102815:	ff d0                	callq  *%rax$/;"	l
ffff800000102817	kernel.asm	/^ffff800000102817:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010281b	kernel.asm	/^ffff80000010281b:	c9                   	leaveq $/;"	l
ffff80000010281c	kernel.asm	/^ffff80000010281c:	c3                   	retq   $/;"	l
ffff80000010281d	kernel.asm	/^ffff80000010281d <ilock>:$/;"	l
ffff80000010281d	kernel.asm	/^ffff80000010281d:	55                   	push   %rbp$/;"	l
ffff80000010281e	kernel.asm	/^ffff80000010281e:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000102821	kernel.asm	/^ffff800000102821:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff800000102825	kernel.asm	/^ffff800000102825:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)$/;"	l
ffff800000102829	kernel.asm	/^ffff800000102829:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)$/;"	l
ffff80000010282e	kernel.asm	/^ffff80000010282e:	74 0b                	je     ffff80000010283b <ilock+0x1e>$/;"	l
ffff800000102830	kernel.asm	/^ffff800000102830:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000102834	kernel.asm	/^ffff800000102834:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
ffff800000102837	kernel.asm	/^ffff800000102837:	85 c0                	test   %eax,%eax$/;"	l
ffff800000102839	kernel.asm	/^ffff800000102839:	7f 16                	jg     ffff800000102851 <ilock+0x34>$/;"	l
ffff80000010283b	kernel.asm	/^ffff80000010283b:	48 bf fc c2 10 00 00 	movabs $0xffff80000010c2fc,%rdi$/;"	l
ffff800000102842	kernel.asm	/^ffff800000102842:	80 ff ff $/;"	l
ffff800000102845	kernel.asm	/^ffff800000102845:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff80000010284c	kernel.asm	/^ffff80000010284c:	80 ff ff $/;"	l
ffff80000010284f	kernel.asm	/^ffff80000010284f:	ff d0                	callq  *%rax$/;"	l
ffff800000102851	kernel.asm	/^ffff800000102851:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000102855	kernel.asm	/^ffff800000102855:	48 83 c0 10          	add    $0x10,%rax$/;"	l
ffff800000102859	kernel.asm	/^ffff800000102859:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010285c	kernel.asm	/^ffff80000010285c:	48 b8 4e 77 10 00 00 	movabs $0xffff80000010774e,%rax$/;"	l
ffff800000102863	kernel.asm	/^ffff800000102863:	80 ff ff $/;"	l
ffff800000102866	kernel.asm	/^ffff800000102866:	ff d0                	callq  *%rax$/;"	l
ffff800000102868	kernel.asm	/^ffff800000102868:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010286c	kernel.asm	/^ffff80000010286c:	8b 80 90 00 00 00    	mov    0x90(%rax),%eax$/;"	l
ffff800000102872	kernel.asm	/^ffff800000102872:	83 e0 02             	and    $0x2,%eax$/;"	l
ffff800000102875	kernel.asm	/^ffff800000102875:	85 c0                	test   %eax,%eax$/;"	l
ffff800000102877	kernel.asm	/^ffff800000102877:	75 17                	jne    ffff800000102890 <ilock+0x73>$/;"	l
ffff800000102879	kernel.asm	/^ffff800000102879:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010287d	kernel.asm	/^ffff80000010287d:	48 8b 80 98 00 00 00 	mov    0x98(%rax),%rax$/;"	l
ffff800000102884	kernel.asm	/^ffff800000102884:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff800000102887	kernel.asm	/^ffff800000102887:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx$/;"	l
ffff80000010288b	kernel.asm	/^ffff80000010288b:	48 89 d7             	mov    %rdx,%rdi$/;"	l
ffff80000010288e	kernel.asm	/^ffff80000010288e:	ff d0                	callq  *%rax$/;"	l
ffff800000102890	kernel.asm	/^ffff800000102890:	90                   	nop$/;"	l
ffff800000102891	kernel.asm	/^ffff800000102891:	c9                   	leaveq $/;"	l
ffff800000102892	kernel.asm	/^ffff800000102892:	c3                   	retq   $/;"	l
ffff800000102893	kernel.asm	/^ffff800000102893 <fs_ipopulate>:$/;"	l
ffff800000102893	kernel.asm	/^ffff800000102893:	55                   	push   %rbp$/;"	l
ffff800000102894	kernel.asm	/^ffff800000102894:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000102897	kernel.asm	/^ffff800000102897:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ffff80000010289b	kernel.asm	/^ffff80000010289b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
ffff80000010289f	kernel.asm	/^ffff80000010289f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff8000001028a3	kernel.asm	/^ffff8000001028a3:	8b 40 04             	mov    0x4(%rax),%eax$/;"	l
ffff8000001028a6	kernel.asm	/^ffff8000001028a6:	c1 e8 03             	shr    $0x3,%eax$/;"	l
ffff8000001028a9	kernel.asm	/^ffff8000001028a9:	89 c2                	mov    %eax,%edx$/;"	l
ffff8000001028ab	kernel.asm	/^ffff8000001028ab:	48 b8 00 56 11 00 00 	movabs $0xffff800000115600,%rax$/;"	l
ffff8000001028b2	kernel.asm	/^ffff8000001028b2:	80 ff ff $/;"	l
ffff8000001028b5	kernel.asm	/^ffff8000001028b5:	8b 40 14             	mov    0x14(%rax),%eax$/;"	l
ffff8000001028b8	kernel.asm	/^ffff8000001028b8:	01 c2                	add    %eax,%edx$/;"	l
ffff8000001028ba	kernel.asm	/^ffff8000001028ba:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff8000001028be	kernel.asm	/^ffff8000001028be:	8b 00                	mov    (%rax),%eax$/;"	l
ffff8000001028c0	kernel.asm	/^ffff8000001028c0:	89 d6                	mov    %edx,%esi$/;"	l
ffff8000001028c2	kernel.asm	/^ffff8000001028c2:	89 c7                	mov    %eax,%edi$/;"	l
ffff8000001028c4	kernel.asm	/^ffff8000001028c4:	48 b8 f8 03 10 00 00 	movabs $0xffff8000001003f8,%rax$/;"	l
ffff8000001028cb	kernel.asm	/^ffff8000001028cb:	80 ff ff $/;"	l
ffff8000001028ce	kernel.asm	/^ffff8000001028ce:	ff d0                	callq  *%rax$/;"	l
ffff8000001028d0	kernel.asm	/^ffff8000001028d0:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff8000001028d4	kernel.asm	/^ffff8000001028d4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001028d8	kernel.asm	/^ffff8000001028d8:	48 8d 90 b0 00 00 00 	lea    0xb0(%rax),%rdx$/;"	l
ffff8000001028df	kernel.asm	/^ffff8000001028df:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff8000001028e3	kernel.asm	/^ffff8000001028e3:	8b 40 04             	mov    0x4(%rax),%eax$/;"	l
ffff8000001028e6	kernel.asm	/^ffff8000001028e6:	89 c0                	mov    %eax,%eax$/;"	l
ffff8000001028e8	kernel.asm	/^ffff8000001028e8:	83 e0 07             	and    $0x7,%eax$/;"	l
ffff8000001028eb	kernel.asm	/^ffff8000001028eb:	48 c1 e0 06          	shl    $0x6,%rax$/;"	l
ffff8000001028ef	kernel.asm	/^ffff8000001028ef:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff8000001028f2	kernel.asm	/^ffff8000001028f2:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ffff8000001028f6	kernel.asm	/^ffff8000001028f6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff8000001028fa	kernel.asm	/^ffff8000001028fa:	0f b7 10             	movzwl (%rax),%edx$/;"	l
ffff8000001028fd	kernel.asm	/^ffff8000001028fd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000102901	kernel.asm	/^ffff800000102901:	66 89 90 a0 00 00 00 	mov    %dx,0xa0(%rax)$/;"	l
ffff800000102908	kernel.asm	/^ffff800000102908:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff80000010290c	kernel.asm	/^ffff80000010290c:	0f b7 50 02          	movzwl 0x2(%rax),%edx$/;"	l
ffff800000102910	kernel.asm	/^ffff800000102910:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000102914	kernel.asm	/^ffff800000102914:	66 89 90 a2 00 00 00 	mov    %dx,0xa2(%rax)$/;"	l
ffff80000010291b	kernel.asm	/^ffff80000010291b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff80000010291f	kernel.asm	/^ffff80000010291f:	0f b7 50 04          	movzwl 0x4(%rax),%edx$/;"	l
ffff800000102923	kernel.asm	/^ffff800000102923:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000102927	kernel.asm	/^ffff800000102927:	66 89 90 a4 00 00 00 	mov    %dx,0xa4(%rax)$/;"	l
ffff80000010292e	kernel.asm	/^ffff80000010292e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000102932	kernel.asm	/^ffff800000102932:	0f b7 50 06          	movzwl 0x6(%rax),%edx$/;"	l
ffff800000102936	kernel.asm	/^ffff800000102936:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010293a	kernel.asm	/^ffff80000010293a:	66 89 90 a6 00 00 00 	mov    %dx,0xa6(%rax)$/;"	l
ffff800000102941	kernel.asm	/^ffff800000102941:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000102945	kernel.asm	/^ffff800000102945:	8b 50 08             	mov    0x8(%rax),%edx$/;"	l
ffff800000102948	kernel.asm	/^ffff800000102948:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010294c	kernel.asm	/^ffff80000010294c:	89 90 a8 00 00 00    	mov    %edx,0xa8(%rax)$/;"	l
ffff800000102952	kernel.asm	/^ffff800000102952:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000102956	kernel.asm	/^ffff800000102956:	48 8d 48 0c          	lea    0xc(%rax),%rcx$/;"	l
ffff80000010295a	kernel.asm	/^ffff80000010295a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010295e	kernel.asm	/^ffff80000010295e:	48 05 ac 00 00 00    	add    $0xac,%rax$/;"	l
ffff800000102964	kernel.asm	/^ffff800000102964:	ba 34 00 00 00       	mov    $0x34,%edx$/;"	l
ffff800000102969	kernel.asm	/^ffff800000102969:	48 89 ce             	mov    %rcx,%rsi$/;"	l
ffff80000010296c	kernel.asm	/^ffff80000010296c:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010296f	kernel.asm	/^ffff80000010296f:	48 b8 9a 7d 10 00 00 	movabs $0xffff800000107d9a,%rax$/;"	l
ffff800000102976	kernel.asm	/^ffff800000102976:	80 ff ff $/;"	l
ffff800000102979	kernel.asm	/^ffff800000102979:	ff d0                	callq  *%rax$/;"	l
ffff80000010297b	kernel.asm	/^ffff80000010297b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010297f	kernel.asm	/^ffff80000010297f:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000102982	kernel.asm	/^ffff800000102982:	48 b8 aa 04 10 00 00 	movabs $0xffff8000001004aa,%rax$/;"	l
ffff800000102989	kernel.asm	/^ffff800000102989:	80 ff ff $/;"	l
ffff80000010298c	kernel.asm	/^ffff80000010298c:	ff d0                	callq  *%rax$/;"	l
ffff80000010298e	kernel.asm	/^ffff80000010298e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000102992	kernel.asm	/^ffff800000102992:	8b 80 90 00 00 00    	mov    0x90(%rax),%eax$/;"	l
ffff800000102998	kernel.asm	/^ffff800000102998:	83 c8 02             	or     $0x2,%eax$/;"	l
ffff80000010299b	kernel.asm	/^ffff80000010299b:	89 c2                	mov    %eax,%edx$/;"	l
ffff80000010299d	kernel.asm	/^ffff80000010299d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff8000001029a1	kernel.asm	/^ffff8000001029a1:	89 90 90 00 00 00    	mov    %edx,0x90(%rax)$/;"	l
ffff8000001029a7	kernel.asm	/^ffff8000001029a7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff8000001029ab	kernel.asm	/^ffff8000001029ab:	0f b7 80 a0 00 00 00 	movzwl 0xa0(%rax),%eax$/;"	l
ffff8000001029b2	kernel.asm	/^ffff8000001029b2:	66 85 c0             	test   %ax,%ax$/;"	l
ffff8000001029b5	kernel.asm	/^ffff8000001029b5:	75 16                	jne    ffff8000001029cd <fs_ipopulate+0x13a>$/;"	l
ffff8000001029b7	kernel.asm	/^ffff8000001029b7:	48 bf 02 c3 10 00 00 	movabs $0xffff80000010c302,%rdi$/;"	l
ffff8000001029be	kernel.asm	/^ffff8000001029be:	80 ff ff $/;"	l
ffff8000001029c1	kernel.asm	/^ffff8000001029c1:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff8000001029c8	kernel.asm	/^ffff8000001029c8:	80 ff ff $/;"	l
ffff8000001029cb	kernel.asm	/^ffff8000001029cb:	ff d0                	callq  *%rax$/;"	l
ffff8000001029cd	kernel.asm	/^ffff8000001029cd:	90                   	nop$/;"	l
ffff8000001029ce	kernel.asm	/^ffff8000001029ce:	c9                   	leaveq $/;"	l
ffff8000001029cf	kernel.asm	/^ffff8000001029cf:	c3                   	retq   $/;"	l
ffff8000001029d0	kernel.asm	/^ffff8000001029d0 <iunlock>:$/;"	l
ffff8000001029d0	kernel.asm	/^ffff8000001029d0:	55                   	push   %rbp$/;"	l
ffff8000001029d1	kernel.asm	/^ffff8000001029d1:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff8000001029d4	kernel.asm	/^ffff8000001029d4:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff8000001029d8	kernel.asm	/^ffff8000001029d8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)$/;"	l
ffff8000001029dc	kernel.asm	/^ffff8000001029dc:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)$/;"	l
ffff8000001029e1	kernel.asm	/^ffff8000001029e1:	74 26                	je     ffff800000102a09 <iunlock+0x39>$/;"	l
ffff8000001029e3	kernel.asm	/^ffff8000001029e3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001029e7	kernel.asm	/^ffff8000001029e7:	48 83 c0 10          	add    $0x10,%rax$/;"	l
ffff8000001029eb	kernel.asm	/^ffff8000001029eb:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001029ee	kernel.asm	/^ffff8000001029ee:	48 b8 39 78 10 00 00 	movabs $0xffff800000107839,%rax$/;"	l
ffff8000001029f5	kernel.asm	/^ffff8000001029f5:	80 ff ff $/;"	l
ffff8000001029f8	kernel.asm	/^ffff8000001029f8:	ff d0                	callq  *%rax$/;"	l
ffff8000001029fa	kernel.asm	/^ffff8000001029fa:	85 c0                	test   %eax,%eax$/;"	l
ffff8000001029fc	kernel.asm	/^ffff8000001029fc:	74 0b                	je     ffff800000102a09 <iunlock+0x39>$/;"	l
ffff8000001029fe	kernel.asm	/^ffff8000001029fe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000102a02	kernel.asm	/^ffff800000102a02:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
ffff800000102a05	kernel.asm	/^ffff800000102a05:	85 c0                	test   %eax,%eax$/;"	l
ffff800000102a07	kernel.asm	/^ffff800000102a07:	7f 16                	jg     ffff800000102a1f <iunlock+0x4f>$/;"	l
ffff800000102a09	kernel.asm	/^ffff800000102a09:	48 bf 11 c3 10 00 00 	movabs $0xffff80000010c311,%rdi$/;"	l
ffff800000102a10	kernel.asm	/^ffff800000102a10:	80 ff ff $/;"	l
ffff800000102a13	kernel.asm	/^ffff800000102a13:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff800000102a1a	kernel.asm	/^ffff800000102a1a:	80 ff ff $/;"	l
ffff800000102a1d	kernel.asm	/^ffff800000102a1d:	ff d0                	callq  *%rax$/;"	l
ffff800000102a1f	kernel.asm	/^ffff800000102a1f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000102a23	kernel.asm	/^ffff800000102a23:	48 83 c0 10          	add    $0x10,%rax$/;"	l
ffff800000102a27	kernel.asm	/^ffff800000102a27:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000102a2a	kernel.asm	/^ffff800000102a2a:	48 b8 d4 77 10 00 00 	movabs $0xffff8000001077d4,%rax$/;"	l
ffff800000102a31	kernel.asm	/^ffff800000102a31:	80 ff ff $/;"	l
ffff800000102a34	kernel.asm	/^ffff800000102a34:	ff d0                	callq  *%rax$/;"	l
ffff800000102a36	kernel.asm	/^ffff800000102a36:	90                   	nop$/;"	l
ffff800000102a37	kernel.asm	/^ffff800000102a37:	c9                   	leaveq $/;"	l
ffff800000102a38	kernel.asm	/^ffff800000102a38:	c3                   	retq   $/;"	l
ffff800000102a39	kernel.asm	/^ffff800000102a39 <iput>:$/;"	l
ffff800000102a39	kernel.asm	/^ffff800000102a39:	55                   	push   %rbp$/;"	l
ffff800000102a3a	kernel.asm	/^ffff800000102a3a:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000102a3d	kernel.asm	/^ffff800000102a3d:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff800000102a41	kernel.asm	/^ffff800000102a41:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)$/;"	l
ffff800000102a45	kernel.asm	/^ffff800000102a45:	48 bf 20 56 11 00 00 	movabs $0xffff800000115620,%rdi$/;"	l
ffff800000102a4c	kernel.asm	/^ffff800000102a4c:	80 ff ff $/;"	l
ffff800000102a4f	kernel.asm	/^ffff800000102a4f:	48 b8 01 79 10 00 00 	movabs $0xffff800000107901,%rax$/;"	l
ffff800000102a56	kernel.asm	/^ffff800000102a56:	80 ff ff $/;"	l
ffff800000102a59	kernel.asm	/^ffff800000102a59:	ff d0                	callq  *%rax$/;"	l
ffff800000102a5b	kernel.asm	/^ffff800000102a5b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000102a5f	kernel.asm	/^ffff800000102a5f:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
ffff800000102a62	kernel.asm	/^ffff800000102a62:	83 f8 01             	cmp    $0x1,%eax$/;"	l
ffff800000102a65	kernel.asm	/^ffff800000102a65:	0f 85 97 00 00 00    	jne    ffff800000102b02 <iput+0xc9>$/;"	l
ffff800000102a6b	kernel.asm	/^ffff800000102a6b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000102a6f	kernel.asm	/^ffff800000102a6f:	8b 80 90 00 00 00    	mov    0x90(%rax),%eax$/;"	l
ffff800000102a75	kernel.asm	/^ffff800000102a75:	83 e0 02             	and    $0x2,%eax$/;"	l
ffff800000102a78	kernel.asm	/^ffff800000102a78:	85 c0                	test   %eax,%eax$/;"	l
ffff800000102a7a	kernel.asm	/^ffff800000102a7a:	0f 84 82 00 00 00    	je     ffff800000102b02 <iput+0xc9>$/;"	l
ffff800000102a80	kernel.asm	/^ffff800000102a80:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000102a84	kernel.asm	/^ffff800000102a84:	0f b7 80 a6 00 00 00 	movzwl 0xa6(%rax),%eax$/;"	l
ffff800000102a8b	kernel.asm	/^ffff800000102a8b:	66 85 c0             	test   %ax,%ax$/;"	l
ffff800000102a8e	kernel.asm	/^ffff800000102a8e:	75 72                	jne    ffff800000102b02 <iput+0xc9>$/;"	l
ffff800000102a90	kernel.asm	/^ffff800000102a90:	48 bf 20 56 11 00 00 	movabs $0xffff800000115620,%rdi$/;"	l
ffff800000102a97	kernel.asm	/^ffff800000102a97:	80 ff ff $/;"	l
ffff800000102a9a	kernel.asm	/^ffff800000102a9a:	48 b8 9a 79 10 00 00 	movabs $0xffff80000010799a,%rax$/;"	l
ffff800000102aa1	kernel.asm	/^ffff800000102aa1:	80 ff ff $/;"	l
ffff800000102aa4	kernel.asm	/^ffff800000102aa4:	ff d0                	callq  *%rax$/;"	l
ffff800000102aa6	kernel.asm	/^ffff800000102aa6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000102aaa	kernel.asm	/^ffff800000102aaa:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000102aad	kernel.asm	/^ffff800000102aad:	48 b8 c4 2c 10 00 00 	movabs $0xffff800000102cc4,%rax$/;"	l
ffff800000102ab4	kernel.asm	/^ffff800000102ab4:	80 ff ff $/;"	l
ffff800000102ab7	kernel.asm	/^ffff800000102ab7:	ff d0                	callq  *%rax$/;"	l
ffff800000102ab9	kernel.asm	/^ffff800000102ab9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000102abd	kernel.asm	/^ffff800000102abd:	66 c7 80 a0 00 00 00 	movw   $0x0,0xa0(%rax)$/;"	l
ffff800000102ac4	kernel.asm	/^ffff800000102ac4:	00 00 $/;"	l
ffff800000102ac6	kernel.asm	/^ffff800000102ac6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000102aca	kernel.asm	/^ffff800000102aca:	48 8b 80 98 00 00 00 	mov    0x98(%rax),%rax$/;"	l
ffff800000102ad1	kernel.asm	/^ffff800000102ad1:	48 8b 40 08          	mov    0x8(%rax),%rax$/;"	l
ffff800000102ad5	kernel.asm	/^ffff800000102ad5:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx$/;"	l
ffff800000102ad9	kernel.asm	/^ffff800000102ad9:	48 89 d7             	mov    %rdx,%rdi$/;"	l
ffff800000102adc	kernel.asm	/^ffff800000102adc:	ff d0                	callq  *%rax$/;"	l
ffff800000102ade	kernel.asm	/^ffff800000102ade:	48 bf 20 56 11 00 00 	movabs $0xffff800000115620,%rdi$/;"	l
ffff800000102ae5	kernel.asm	/^ffff800000102ae5:	80 ff ff $/;"	l
ffff800000102ae8	kernel.asm	/^ffff800000102ae8:	48 b8 01 79 10 00 00 	movabs $0xffff800000107901,%rax$/;"	l
ffff800000102aef	kernel.asm	/^ffff800000102aef:	80 ff ff $/;"	l
ffff800000102af2	kernel.asm	/^ffff800000102af2:	ff d0                	callq  *%rax$/;"	l
ffff800000102af4	kernel.asm	/^ffff800000102af4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000102af8	kernel.asm	/^ffff800000102af8:	c7 80 90 00 00 00 00 	movl   $0x0,0x90(%rax)$/;"	l
ffff800000102aff	kernel.asm	/^ffff800000102aff:	00 00 00 $/;"	l
ffff800000102b02	kernel.asm	/^ffff800000102b02:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000102b06	kernel.asm	/^ffff800000102b06:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
ffff800000102b09	kernel.asm	/^ffff800000102b09:	8d 50 ff             	lea    -0x1(%rax),%edx$/;"	l
ffff800000102b0c	kernel.asm	/^ffff800000102b0c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000102b10	kernel.asm	/^ffff800000102b10:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
ffff800000102b13	kernel.asm	/^ffff800000102b13:	48 bf 20 56 11 00 00 	movabs $0xffff800000115620,%rdi$/;"	l
ffff800000102b1a	kernel.asm	/^ffff800000102b1a:	80 ff ff $/;"	l
ffff800000102b1d	kernel.asm	/^ffff800000102b1d:	48 b8 9a 79 10 00 00 	movabs $0xffff80000010799a,%rax$/;"	l
ffff800000102b24	kernel.asm	/^ffff800000102b24:	80 ff ff $/;"	l
ffff800000102b27	kernel.asm	/^ffff800000102b27:	ff d0                	callq  *%rax$/;"	l
ffff800000102b29	kernel.asm	/^ffff800000102b29:	90                   	nop$/;"	l
ffff800000102b2a	kernel.asm	/^ffff800000102b2a:	c9                   	leaveq $/;"	l
ffff800000102b2b	kernel.asm	/^ffff800000102b2b:	c3                   	retq   $/;"	l
ffff800000102b2c	kernel.asm	/^ffff800000102b2c <iunlockput>:$/;"	l
ffff800000102b2c	kernel.asm	/^ffff800000102b2c:	55                   	push   %rbp$/;"	l
ffff800000102b2d	kernel.asm	/^ffff800000102b2d:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000102b30	kernel.asm	/^ffff800000102b30:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff800000102b34	kernel.asm	/^ffff800000102b34:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)$/;"	l
ffff800000102b38	kernel.asm	/^ffff800000102b38:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000102b3c	kernel.asm	/^ffff800000102b3c:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000102b3f	kernel.asm	/^ffff800000102b3f:	48 b8 d0 29 10 00 00 	movabs $0xffff8000001029d0,%rax$/;"	l
ffff800000102b46	kernel.asm	/^ffff800000102b46:	80 ff ff $/;"	l
ffff800000102b49	kernel.asm	/^ffff800000102b49:	ff d0                	callq  *%rax$/;"	l
ffff800000102b4b	kernel.asm	/^ffff800000102b4b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000102b4f	kernel.asm	/^ffff800000102b4f:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000102b52	kernel.asm	/^ffff800000102b52:	48 b8 39 2a 10 00 00 	movabs $0xffff800000102a39,%rax$/;"	l
ffff800000102b59	kernel.asm	/^ffff800000102b59:	80 ff ff $/;"	l
ffff800000102b5c	kernel.asm	/^ffff800000102b5c:	ff d0                	callq  *%rax$/;"	l
ffff800000102b5e	kernel.asm	/^ffff800000102b5e:	90                   	nop$/;"	l
ffff800000102b5f	kernel.asm	/^ffff800000102b5f:	c9                   	leaveq $/;"	l
ffff800000102b60	kernel.asm	/^ffff800000102b60:	c3                   	retq   $/;"	l
ffff800000102b61	kernel.asm	/^ffff800000102b61 <bmap>:$/;"	l
ffff800000102b61	kernel.asm	/^ffff800000102b61:	55                   	push   %rbp$/;"	l
ffff800000102b62	kernel.asm	/^ffff800000102b62:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000102b65	kernel.asm	/^ffff800000102b65:	53                   	push   %rbx$/;"	l
ffff800000102b66	kernel.asm	/^ffff800000102b66:	48 83 ec 38          	sub    $0x38,%rsp$/;"	l
ffff800000102b6a	kernel.asm	/^ffff800000102b6a:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)$/;"	l
ffff800000102b6e	kernel.asm	/^ffff800000102b6e:	89 75 c4             	mov    %esi,-0x3c(%rbp)$/;"	l
ffff800000102b71	kernel.asm	/^ffff800000102b71:	83 7d c4 0b          	cmpl   $0xb,-0x3c(%rbp)$/;"	l
ffff800000102b75	kernel.asm	/^ffff800000102b75:	77 49                	ja     ffff800000102bc0 <bmap+0x5f>$/;"	l
ffff800000102b77	kernel.asm	/^ffff800000102b77:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
ffff800000102b7b	kernel.asm	/^ffff800000102b7b:	8b 55 c4             	mov    -0x3c(%rbp),%edx$/;"	l
ffff800000102b7e	kernel.asm	/^ffff800000102b7e:	48 83 c2 28          	add    $0x28,%rdx$/;"	l
ffff800000102b82	kernel.asm	/^ffff800000102b82:	8b 44 90 0c          	mov    0xc(%rax,%rdx,4),%eax$/;"	l
ffff800000102b86	kernel.asm	/^ffff800000102b86:	89 45 ec             	mov    %eax,-0x14(%rbp)$/;"	l
ffff800000102b89	kernel.asm	/^ffff800000102b89:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)$/;"	l
ffff800000102b8d	kernel.asm	/^ffff800000102b8d:	75 29                	jne    ffff800000102bb8 <bmap+0x57>$/;"	l
ffff800000102b8f	kernel.asm	/^ffff800000102b8f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
ffff800000102b93	kernel.asm	/^ffff800000102b93:	8b 00                	mov    (%rax),%eax$/;"	l
ffff800000102b95	kernel.asm	/^ffff800000102b95:	89 c7                	mov    %eax,%edi$/;"	l
ffff800000102b97	kernel.asm	/^ffff800000102b97:	48 b8 bc 20 10 00 00 	movabs $0xffff8000001020bc,%rax$/;"	l
ffff800000102b9e	kernel.asm	/^ffff800000102b9e:	80 ff ff $/;"	l
ffff800000102ba1	kernel.asm	/^ffff800000102ba1:	ff d0                	callq  *%rax$/;"	l
ffff800000102ba3	kernel.asm	/^ffff800000102ba3:	89 45 ec             	mov    %eax,-0x14(%rbp)$/;"	l
ffff800000102ba6	kernel.asm	/^ffff800000102ba6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
ffff800000102baa	kernel.asm	/^ffff800000102baa:	8b 55 c4             	mov    -0x3c(%rbp),%edx$/;"	l
ffff800000102bad	kernel.asm	/^ffff800000102bad:	48 8d 4a 28          	lea    0x28(%rdx),%rcx$/;"	l
ffff800000102bb1	kernel.asm	/^ffff800000102bb1:	8b 55 ec             	mov    -0x14(%rbp),%edx$/;"	l
ffff800000102bb4	kernel.asm	/^ffff800000102bb4:	89 54 88 0c          	mov    %edx,0xc(%rax,%rcx,4)$/;"	l
ffff800000102bb8	kernel.asm	/^ffff800000102bb8:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
ffff800000102bbb	kernel.asm	/^ffff800000102bbb:	e9 fd 00 00 00       	jmpq   ffff800000102cbd <bmap+0x15c>$/;"	l
ffff800000102bc0	kernel.asm	/^ffff800000102bc0:	83 6d c4 0c          	subl   $0xc,-0x3c(%rbp)$/;"	l
ffff800000102bc4	kernel.asm	/^ffff800000102bc4:	83 7d c4 7f          	cmpl   $0x7f,-0x3c(%rbp)$/;"	l
ffff800000102bc8	kernel.asm	/^ffff800000102bc8:	0f 87 d9 00 00 00    	ja     ffff800000102ca7 <bmap+0x146>$/;"	l
ffff800000102bce	kernel.asm	/^ffff800000102bce:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
ffff800000102bd2	kernel.asm	/^ffff800000102bd2:	8b 80 dc 00 00 00    	mov    0xdc(%rax),%eax$/;"	l
ffff800000102bd8	kernel.asm	/^ffff800000102bd8:	89 45 ec             	mov    %eax,-0x14(%rbp)$/;"	l
ffff800000102bdb	kernel.asm	/^ffff800000102bdb:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)$/;"	l
ffff800000102bdf	kernel.asm	/^ffff800000102bdf:	75 24                	jne    ffff800000102c05 <bmap+0xa4>$/;"	l
ffff800000102be1	kernel.asm	/^ffff800000102be1:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
ffff800000102be5	kernel.asm	/^ffff800000102be5:	8b 00                	mov    (%rax),%eax$/;"	l
ffff800000102be7	kernel.asm	/^ffff800000102be7:	89 c7                	mov    %eax,%edi$/;"	l
ffff800000102be9	kernel.asm	/^ffff800000102be9:	48 b8 bc 20 10 00 00 	movabs $0xffff8000001020bc,%rax$/;"	l
ffff800000102bf0	kernel.asm	/^ffff800000102bf0:	80 ff ff $/;"	l
ffff800000102bf3	kernel.asm	/^ffff800000102bf3:	ff d0                	callq  *%rax$/;"	l
ffff800000102bf5	kernel.asm	/^ffff800000102bf5:	89 45 ec             	mov    %eax,-0x14(%rbp)$/;"	l
ffff800000102bf8	kernel.asm	/^ffff800000102bf8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
ffff800000102bfc	kernel.asm	/^ffff800000102bfc:	8b 55 ec             	mov    -0x14(%rbp),%edx$/;"	l
ffff800000102bff	kernel.asm	/^ffff800000102bff:	89 90 dc 00 00 00    	mov    %edx,0xdc(%rax)$/;"	l
ffff800000102c05	kernel.asm	/^ffff800000102c05:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
ffff800000102c09	kernel.asm	/^ffff800000102c09:	8b 00                	mov    (%rax),%eax$/;"	l
ffff800000102c0b	kernel.asm	/^ffff800000102c0b:	8b 55 ec             	mov    -0x14(%rbp),%edx$/;"	l
ffff800000102c0e	kernel.asm	/^ffff800000102c0e:	89 d6                	mov    %edx,%esi$/;"	l
ffff800000102c10	kernel.asm	/^ffff800000102c10:	89 c7                	mov    %eax,%edi$/;"	l
ffff800000102c12	kernel.asm	/^ffff800000102c12:	48 b8 f8 03 10 00 00 	movabs $0xffff8000001003f8,%rax$/;"	l
ffff800000102c19	kernel.asm	/^ffff800000102c19:	80 ff ff $/;"	l
ffff800000102c1c	kernel.asm	/^ffff800000102c1c:	ff d0                	callq  *%rax$/;"	l
ffff800000102c1e	kernel.asm	/^ffff800000102c1e:	48 89 45 e0          	mov    %rax,-0x20(%rbp)$/;"	l
ffff800000102c22	kernel.asm	/^ffff800000102c22:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff800000102c26	kernel.asm	/^ffff800000102c26:	48 05 b0 00 00 00    	add    $0xb0,%rax$/;"	l
ffff800000102c2c	kernel.asm	/^ffff800000102c2c:	48 89 45 d8          	mov    %rax,-0x28(%rbp)$/;"	l
ffff800000102c30	kernel.asm	/^ffff800000102c30:	8b 45 c4             	mov    -0x3c(%rbp),%eax$/;"	l
ffff800000102c33	kernel.asm	/^ffff800000102c33:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx$/;"	l
ffff800000102c3a	kernel.asm	/^ffff800000102c3a:	00 $/;"	l
ffff800000102c3b	kernel.asm	/^ffff800000102c3b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff800000102c3f	kernel.asm	/^ffff800000102c3f:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff800000102c42	kernel.asm	/^ffff800000102c42:	8b 00                	mov    (%rax),%eax$/;"	l
ffff800000102c44	kernel.asm	/^ffff800000102c44:	89 45 ec             	mov    %eax,-0x14(%rbp)$/;"	l
ffff800000102c47	kernel.asm	/^ffff800000102c47:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)$/;"	l
ffff800000102c4b	kernel.asm	/^ffff800000102c4b:	75 42                	jne    ffff800000102c8f <bmap+0x12e>$/;"	l
ffff800000102c4d	kernel.asm	/^ffff800000102c4d:	8b 45 c4             	mov    -0x3c(%rbp),%eax$/;"	l
ffff800000102c50	kernel.asm	/^ffff800000102c50:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx$/;"	l
ffff800000102c57	kernel.asm	/^ffff800000102c57:	00 $/;"	l
ffff800000102c58	kernel.asm	/^ffff800000102c58:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff800000102c5c	kernel.asm	/^ffff800000102c5c:	48 8d 1c 02          	lea    (%rdx,%rax,1),%rbx$/;"	l
ffff800000102c60	kernel.asm	/^ffff800000102c60:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
ffff800000102c64	kernel.asm	/^ffff800000102c64:	8b 00                	mov    (%rax),%eax$/;"	l
ffff800000102c66	kernel.asm	/^ffff800000102c66:	89 c7                	mov    %eax,%edi$/;"	l
ffff800000102c68	kernel.asm	/^ffff800000102c68:	48 b8 bc 20 10 00 00 	movabs $0xffff8000001020bc,%rax$/;"	l
ffff800000102c6f	kernel.asm	/^ffff800000102c6f:	80 ff ff $/;"	l
ffff800000102c72	kernel.asm	/^ffff800000102c72:	ff d0                	callq  *%rax$/;"	l
ffff800000102c74	kernel.asm	/^ffff800000102c74:	89 45 ec             	mov    %eax,-0x14(%rbp)$/;"	l
ffff800000102c77	kernel.asm	/^ffff800000102c77:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
ffff800000102c7a	kernel.asm	/^ffff800000102c7a:	89 03                	mov    %eax,(%rbx)$/;"	l
ffff800000102c7c	kernel.asm	/^ffff800000102c7c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff800000102c80	kernel.asm	/^ffff800000102c80:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000102c83	kernel.asm	/^ffff800000102c83:	48 b8 85 52 10 00 00 	movabs $0xffff800000105285,%rax$/;"	l
ffff800000102c8a	kernel.asm	/^ffff800000102c8a:	80 ff ff $/;"	l
ffff800000102c8d	kernel.asm	/^ffff800000102c8d:	ff d0                	callq  *%rax$/;"	l
ffff800000102c8f	kernel.asm	/^ffff800000102c8f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff800000102c93	kernel.asm	/^ffff800000102c93:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000102c96	kernel.asm	/^ffff800000102c96:	48 b8 aa 04 10 00 00 	movabs $0xffff8000001004aa,%rax$/;"	l
ffff800000102c9d	kernel.asm	/^ffff800000102c9d:	80 ff ff $/;"	l
ffff800000102ca0	kernel.asm	/^ffff800000102ca0:	ff d0                	callq  *%rax$/;"	l
ffff800000102ca2	kernel.asm	/^ffff800000102ca2:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
ffff800000102ca5	kernel.asm	/^ffff800000102ca5:	eb 16                	jmp    ffff800000102cbd <bmap+0x15c>$/;"	l
ffff800000102ca7	kernel.asm	/^ffff800000102ca7:	48 bf 19 c3 10 00 00 	movabs $0xffff80000010c319,%rdi$/;"	l
ffff800000102cae	kernel.asm	/^ffff800000102cae:	80 ff ff $/;"	l
ffff800000102cb1	kernel.asm	/^ffff800000102cb1:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff800000102cb8	kernel.asm	/^ffff800000102cb8:	80 ff ff $/;"	l
ffff800000102cbb	kernel.asm	/^ffff800000102cbb:	ff d0                	callq  *%rax$/;"	l
ffff800000102cbd	kernel.asm	/^ffff800000102cbd:	48 83 c4 38          	add    $0x38,%rsp$/;"	l
ffff800000102cc1	kernel.asm	/^ffff800000102cc1:	5b                   	pop    %rbx$/;"	l
ffff800000102cc2	kernel.asm	/^ffff800000102cc2:	5d                   	pop    %rbp$/;"	l
ffff800000102cc3	kernel.asm	/^ffff800000102cc3:	c3                   	retq   $/;"	l
ffff800000102cc4	kernel.asm	/^ffff800000102cc4 <itrunc>:$/;"	l
ffff800000102cc4	kernel.asm	/^ffff800000102cc4:	55                   	push   %rbp$/;"	l
ffff800000102cc5	kernel.asm	/^ffff800000102cc5:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000102cc8	kernel.asm	/^ffff800000102cc8:	48 83 ec 30          	sub    $0x30,%rsp$/;"	l
ffff800000102ccc	kernel.asm	/^ffff800000102ccc:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)$/;"	l
ffff800000102cd0	kernel.asm	/^ffff800000102cd0:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)$/;"	l
ffff800000102cd7	kernel.asm	/^ffff800000102cd7:	eb 58                	jmp    ffff800000102d31 <itrunc+0x6d>$/;"	l
ffff800000102cd9	kernel.asm	/^ffff800000102cd9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff800000102cdd	kernel.asm	/^ffff800000102cdd:	8b 55 fc             	mov    -0x4(%rbp),%edx$/;"	l
ffff800000102ce0	kernel.asm	/^ffff800000102ce0:	48 63 d2             	movslq %edx,%rdx$/;"	l
ffff800000102ce3	kernel.asm	/^ffff800000102ce3:	48 83 c2 28          	add    $0x28,%rdx$/;"	l
ffff800000102ce7	kernel.asm	/^ffff800000102ce7:	8b 44 90 0c          	mov    0xc(%rax,%rdx,4),%eax$/;"	l
ffff800000102ceb	kernel.asm	/^ffff800000102ceb:	85 c0                	test   %eax,%eax$/;"	l
ffff800000102ced	kernel.asm	/^ffff800000102ced:	74 3e                	je     ffff800000102d2d <itrunc+0x69>$/;"	l
ffff800000102cef	kernel.asm	/^ffff800000102cef:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff800000102cf3	kernel.asm	/^ffff800000102cf3:	8b 55 fc             	mov    -0x4(%rbp),%edx$/;"	l
ffff800000102cf6	kernel.asm	/^ffff800000102cf6:	48 63 d2             	movslq %edx,%rdx$/;"	l
ffff800000102cf9	kernel.asm	/^ffff800000102cf9:	48 83 c2 28          	add    $0x28,%rdx$/;"	l
ffff800000102cfd	kernel.asm	/^ffff800000102cfd:	8b 44 90 0c          	mov    0xc(%rax,%rdx,4),%eax$/;"	l
ffff800000102d01	kernel.asm	/^ffff800000102d01:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx$/;"	l
ffff800000102d05	kernel.asm	/^ffff800000102d05:	8b 12                	mov    (%rdx),%edx$/;"	l
ffff800000102d07	kernel.asm	/^ffff800000102d07:	89 c6                	mov    %eax,%esi$/;"	l
ffff800000102d09	kernel.asm	/^ffff800000102d09:	89 d7                	mov    %edx,%edi$/;"	l
ffff800000102d0b	kernel.asm	/^ffff800000102d0b:	48 b8 5c 22 10 00 00 	movabs $0xffff80000010225c,%rax$/;"	l
ffff800000102d12	kernel.asm	/^ffff800000102d12:	80 ff ff $/;"	l
ffff800000102d15	kernel.asm	/^ffff800000102d15:	ff d0                	callq  *%rax$/;"	l
ffff800000102d17	kernel.asm	/^ffff800000102d17:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff800000102d1b	kernel.asm	/^ffff800000102d1b:	8b 55 fc             	mov    -0x4(%rbp),%edx$/;"	l
ffff800000102d1e	kernel.asm	/^ffff800000102d1e:	48 63 d2             	movslq %edx,%rdx$/;"	l
ffff800000102d21	kernel.asm	/^ffff800000102d21:	48 83 c2 28          	add    $0x28,%rdx$/;"	l
ffff800000102d25	kernel.asm	/^ffff800000102d25:	c7 44 90 0c 00 00 00 	movl   $0x0,0xc(%rax,%rdx,4)$/;"	l
ffff800000102d2c	kernel.asm	/^ffff800000102d2c:	00 $/;"	l
ffff800000102d2d	kernel.asm	/^ffff800000102d2d:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)$/;"	l
ffff800000102d31	kernel.asm	/^ffff800000102d31:	83 7d fc 0b          	cmpl   $0xb,-0x4(%rbp)$/;"	l
ffff800000102d35	kernel.asm	/^ffff800000102d35:	7e a2                	jle    ffff800000102cd9 <itrunc+0x15>$/;"	l
ffff800000102d37	kernel.asm	/^ffff800000102d37:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff800000102d3b	kernel.asm	/^ffff800000102d3b:	8b 80 dc 00 00 00    	mov    0xdc(%rax),%eax$/;"	l
ffff800000102d41	kernel.asm	/^ffff800000102d41:	85 c0                	test   %eax,%eax$/;"	l
ffff800000102d43	kernel.asm	/^ffff800000102d43:	0f 84 ce 00 00 00    	je     ffff800000102e17 <itrunc+0x153>$/;"	l
ffff800000102d49	kernel.asm	/^ffff800000102d49:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff800000102d4d	kernel.asm	/^ffff800000102d4d:	8b 90 dc 00 00 00    	mov    0xdc(%rax),%edx$/;"	l
ffff800000102d53	kernel.asm	/^ffff800000102d53:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff800000102d57	kernel.asm	/^ffff800000102d57:	8b 00                	mov    (%rax),%eax$/;"	l
ffff800000102d59	kernel.asm	/^ffff800000102d59:	89 d6                	mov    %edx,%esi$/;"	l
ffff800000102d5b	kernel.asm	/^ffff800000102d5b:	89 c7                	mov    %eax,%edi$/;"	l
ffff800000102d5d	kernel.asm	/^ffff800000102d5d:	48 b8 f8 03 10 00 00 	movabs $0xffff8000001003f8,%rax$/;"	l
ffff800000102d64	kernel.asm	/^ffff800000102d64:	80 ff ff $/;"	l
ffff800000102d67	kernel.asm	/^ffff800000102d67:	ff d0                	callq  *%rax$/;"	l
ffff800000102d69	kernel.asm	/^ffff800000102d69:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ffff800000102d6d	kernel.asm	/^ffff800000102d6d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000102d71	kernel.asm	/^ffff800000102d71:	48 05 b0 00 00 00    	add    $0xb0,%rax$/;"	l
ffff800000102d77	kernel.asm	/^ffff800000102d77:	48 89 45 e8          	mov    %rax,-0x18(%rbp)$/;"	l
ffff800000102d7b	kernel.asm	/^ffff800000102d7b:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)$/;"	l
ffff800000102d82	kernel.asm	/^ffff800000102d82:	eb 4a                	jmp    ffff800000102dce <itrunc+0x10a>$/;"	l
ffff800000102d84	kernel.asm	/^ffff800000102d84:	8b 45 f8             	mov    -0x8(%rbp),%eax$/;"	l
ffff800000102d87	kernel.asm	/^ffff800000102d87:	48 98                	cltq   $/;"	l
ffff800000102d89	kernel.asm	/^ffff800000102d89:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx$/;"	l
ffff800000102d90	kernel.asm	/^ffff800000102d90:	00 $/;"	l
ffff800000102d91	kernel.asm	/^ffff800000102d91:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000102d95	kernel.asm	/^ffff800000102d95:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff800000102d98	kernel.asm	/^ffff800000102d98:	8b 00                	mov    (%rax),%eax$/;"	l
ffff800000102d9a	kernel.asm	/^ffff800000102d9a:	85 c0                	test   %eax,%eax$/;"	l
ffff800000102d9c	kernel.asm	/^ffff800000102d9c:	74 2c                	je     ffff800000102dca <itrunc+0x106>$/;"	l
ffff800000102d9e	kernel.asm	/^ffff800000102d9e:	8b 45 f8             	mov    -0x8(%rbp),%eax$/;"	l
ffff800000102da1	kernel.asm	/^ffff800000102da1:	48 98                	cltq   $/;"	l
ffff800000102da3	kernel.asm	/^ffff800000102da3:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx$/;"	l
ffff800000102daa	kernel.asm	/^ffff800000102daa:	00 $/;"	l
ffff800000102dab	kernel.asm	/^ffff800000102dab:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000102daf	kernel.asm	/^ffff800000102daf:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff800000102db2	kernel.asm	/^ffff800000102db2:	8b 00                	mov    (%rax),%eax$/;"	l
ffff800000102db4	kernel.asm	/^ffff800000102db4:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx$/;"	l
ffff800000102db8	kernel.asm	/^ffff800000102db8:	8b 12                	mov    (%rdx),%edx$/;"	l
ffff800000102dba	kernel.asm	/^ffff800000102dba:	89 c6                	mov    %eax,%esi$/;"	l
ffff800000102dbc	kernel.asm	/^ffff800000102dbc:	89 d7                	mov    %edx,%edi$/;"	l
ffff800000102dbe	kernel.asm	/^ffff800000102dbe:	48 b8 5c 22 10 00 00 	movabs $0xffff80000010225c,%rax$/;"	l
ffff800000102dc5	kernel.asm	/^ffff800000102dc5:	80 ff ff $/;"	l
ffff800000102dc8	kernel.asm	/^ffff800000102dc8:	ff d0                	callq  *%rax$/;"	l
ffff800000102dca	kernel.asm	/^ffff800000102dca:	83 45 f8 01          	addl   $0x1,-0x8(%rbp)$/;"	l
ffff800000102dce	kernel.asm	/^ffff800000102dce:	8b 45 f8             	mov    -0x8(%rbp),%eax$/;"	l
ffff800000102dd1	kernel.asm	/^ffff800000102dd1:	83 f8 7f             	cmp    $0x7f,%eax$/;"	l
ffff800000102dd4	kernel.asm	/^ffff800000102dd4:	76 ae                	jbe    ffff800000102d84 <itrunc+0xc0>$/;"	l
ffff800000102dd6	kernel.asm	/^ffff800000102dd6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000102dda	kernel.asm	/^ffff800000102dda:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000102ddd	kernel.asm	/^ffff800000102ddd:	48 b8 aa 04 10 00 00 	movabs $0xffff8000001004aa,%rax$/;"	l
ffff800000102de4	kernel.asm	/^ffff800000102de4:	80 ff ff $/;"	l
ffff800000102de7	kernel.asm	/^ffff800000102de7:	ff d0                	callq  *%rax$/;"	l
ffff800000102de9	kernel.asm	/^ffff800000102de9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff800000102ded	kernel.asm	/^ffff800000102ded:	8b 80 dc 00 00 00    	mov    0xdc(%rax),%eax$/;"	l
ffff800000102df3	kernel.asm	/^ffff800000102df3:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx$/;"	l
ffff800000102df7	kernel.asm	/^ffff800000102df7:	8b 12                	mov    (%rdx),%edx$/;"	l
ffff800000102df9	kernel.asm	/^ffff800000102df9:	89 c6                	mov    %eax,%esi$/;"	l
ffff800000102dfb	kernel.asm	/^ffff800000102dfb:	89 d7                	mov    %edx,%edi$/;"	l
ffff800000102dfd	kernel.asm	/^ffff800000102dfd:	48 b8 5c 22 10 00 00 	movabs $0xffff80000010225c,%rax$/;"	l
ffff800000102e04	kernel.asm	/^ffff800000102e04:	80 ff ff $/;"	l
ffff800000102e07	kernel.asm	/^ffff800000102e07:	ff d0                	callq  *%rax$/;"	l
ffff800000102e09	kernel.asm	/^ffff800000102e09:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff800000102e0d	kernel.asm	/^ffff800000102e0d:	c7 80 dc 00 00 00 00 	movl   $0x0,0xdc(%rax)$/;"	l
ffff800000102e14	kernel.asm	/^ffff800000102e14:	00 00 00 $/;"	l
ffff800000102e17	kernel.asm	/^ffff800000102e17:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff800000102e1b	kernel.asm	/^ffff800000102e1b:	c7 80 a8 00 00 00 00 	movl   $0x0,0xa8(%rax)$/;"	l
ffff800000102e22	kernel.asm	/^ffff800000102e22:	00 00 00 $/;"	l
ffff800000102e25	kernel.asm	/^ffff800000102e25:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff800000102e29	kernel.asm	/^ffff800000102e29:	48 8b 80 98 00 00 00 	mov    0x98(%rax),%rax$/;"	l
ffff800000102e30	kernel.asm	/^ffff800000102e30:	48 8b 40 08          	mov    0x8(%rax),%rax$/;"	l
ffff800000102e34	kernel.asm	/^ffff800000102e34:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx$/;"	l
ffff800000102e38	kernel.asm	/^ffff800000102e38:	48 89 d7             	mov    %rdx,%rdi$/;"	l
ffff800000102e3b	kernel.asm	/^ffff800000102e3b:	ff d0                	callq  *%rax$/;"	l
ffff800000102e3d	kernel.asm	/^ffff800000102e3d:	90                   	nop$/;"	l
ffff800000102e3e	kernel.asm	/^ffff800000102e3e:	c9                   	leaveq $/;"	l
ffff800000102e3f	kernel.asm	/^ffff800000102e3f:	c3                   	retq   $/;"	l
ffff800000102e40	kernel.asm	/^ffff800000102e40 <stati>:$/;"	l
ffff800000102e40	kernel.asm	/^ffff800000102e40:	55                   	push   %rbp$/;"	l
ffff800000102e41	kernel.asm	/^ffff800000102e41:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000102e44	kernel.asm	/^ffff800000102e44:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff800000102e48	kernel.asm	/^ffff800000102e48:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)$/;"	l
ffff800000102e4c	kernel.asm	/^ffff800000102e4c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)$/;"	l
ffff800000102e50	kernel.asm	/^ffff800000102e50:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000102e54	kernel.asm	/^ffff800000102e54:	8b 00                	mov    (%rax),%eax$/;"	l
ffff800000102e56	kernel.asm	/^ffff800000102e56:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000102e58	kernel.asm	/^ffff800000102e58:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000102e5c	kernel.asm	/^ffff800000102e5c:	89 50 04             	mov    %edx,0x4(%rax)$/;"	l
ffff800000102e5f	kernel.asm	/^ffff800000102e5f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000102e63	kernel.asm	/^ffff800000102e63:	8b 50 04             	mov    0x4(%rax),%edx$/;"	l
ffff800000102e66	kernel.asm	/^ffff800000102e66:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000102e6a	kernel.asm	/^ffff800000102e6a:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
ffff800000102e6d	kernel.asm	/^ffff800000102e6d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000102e71	kernel.asm	/^ffff800000102e71:	0f b7 90 a0 00 00 00 	movzwl 0xa0(%rax),%edx$/;"	l
ffff800000102e78	kernel.asm	/^ffff800000102e78:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000102e7c	kernel.asm	/^ffff800000102e7c:	66 89 10             	mov    %dx,(%rax)$/;"	l
ffff800000102e7f	kernel.asm	/^ffff800000102e7f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000102e83	kernel.asm	/^ffff800000102e83:	0f b7 90 a6 00 00 00 	movzwl 0xa6(%rax),%edx$/;"	l
ffff800000102e8a	kernel.asm	/^ffff800000102e8a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000102e8e	kernel.asm	/^ffff800000102e8e:	66 89 50 0c          	mov    %dx,0xc(%rax)$/;"	l
ffff800000102e92	kernel.asm	/^ffff800000102e92:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000102e96	kernel.asm	/^ffff800000102e96:	8b 90 a8 00 00 00    	mov    0xa8(%rax),%edx$/;"	l
ffff800000102e9c	kernel.asm	/^ffff800000102e9c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000102ea0	kernel.asm	/^ffff800000102ea0:	89 50 10             	mov    %edx,0x10(%rax)$/;"	l
ffff800000102ea3	kernel.asm	/^ffff800000102ea3:	90                   	nop$/;"	l
ffff800000102ea4	kernel.asm	/^ffff800000102ea4:	c9                   	leaveq $/;"	l
ffff800000102ea5	kernel.asm	/^ffff800000102ea5:	c3                   	retq   $/;"	l
ffff800000102ea6	kernel.asm	/^ffff800000102ea6 <fs_readi>:$/;"	l
ffff800000102ea6	kernel.asm	/^ffff800000102ea6:	55                   	push   %rbp$/;"	l
ffff800000102ea7	kernel.asm	/^ffff800000102ea7:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000102eaa	kernel.asm	/^ffff800000102eaa:	48 83 ec 40          	sub    $0x40,%rsp$/;"	l
ffff800000102eae	kernel.asm	/^ffff800000102eae:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)$/;"	l
ffff800000102eb2	kernel.asm	/^ffff800000102eb2:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)$/;"	l
ffff800000102eb6	kernel.asm	/^ffff800000102eb6:	89 55 cc             	mov    %edx,-0x34(%rbp)$/;"	l
ffff800000102eb9	kernel.asm	/^ffff800000102eb9:	89 4d c8             	mov    %ecx,-0x38(%rbp)$/;"	l
ffff800000102ebc	kernel.asm	/^ffff800000102ebc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff800000102ec0	kernel.asm	/^ffff800000102ec0:	0f b7 80 a0 00 00 00 	movzwl 0xa0(%rax),%eax$/;"	l
ffff800000102ec7	kernel.asm	/^ffff800000102ec7:	66 83 f8 03          	cmp    $0x3,%ax$/;"	l
ffff800000102ecb	kernel.asm	/^ffff800000102ecb:	0f 85 8f 00 00 00    	jne    ffff800000102f60 <fs_readi+0xba>$/;"	l
ffff800000102ed1	kernel.asm	/^ffff800000102ed1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff800000102ed5	kernel.asm	/^ffff800000102ed5:	0f b7 80 a2 00 00 00 	movzwl 0xa2(%rax),%eax$/;"	l
ffff800000102edc	kernel.asm	/^ffff800000102edc:	66 85 c0             	test   %ax,%ax$/;"	l
ffff800000102edf	kernel.asm	/^ffff800000102edf:	78 3b                	js     ffff800000102f1c <fs_readi+0x76>$/;"	l
ffff800000102ee1	kernel.asm	/^ffff800000102ee1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff800000102ee5	kernel.asm	/^ffff800000102ee5:	0f b7 80 a2 00 00 00 	movzwl 0xa2(%rax),%eax$/;"	l
ffff800000102eec	kernel.asm	/^ffff800000102eec:	66 83 f8 09          	cmp    $0x9,%ax$/;"	l
ffff800000102ef0	kernel.asm	/^ffff800000102ef0:	7f 2a                	jg     ffff800000102f1c <fs_readi+0x76>$/;"	l
ffff800000102ef2	kernel.asm	/^ffff800000102ef2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff800000102ef6	kernel.asm	/^ffff800000102ef6:	0f b7 80 a2 00 00 00 	movzwl 0xa2(%rax),%eax$/;"	l
ffff800000102efd	kernel.asm	/^ffff800000102efd:	0f bf d0             	movswl %ax,%edx$/;"	l
ffff800000102f00	kernel.asm	/^ffff800000102f00:	48 b8 40 45 11 00 00 	movabs $0xffff800000114540,%rax$/;"	l
ffff800000102f07	kernel.asm	/^ffff800000102f07:	80 ff ff $/;"	l
ffff800000102f0a	kernel.asm	/^ffff800000102f0a:	48 63 d2             	movslq %edx,%rdx$/;"	l
ffff800000102f0d	kernel.asm	/^ffff800000102f0d:	48 c1 e2 04          	shl    $0x4,%rdx$/;"	l
ffff800000102f11	kernel.asm	/^ffff800000102f11:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff800000102f14	kernel.asm	/^ffff800000102f14:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff800000102f17	kernel.asm	/^ffff800000102f17:	48 85 c0             	test   %rax,%rax$/;"	l
ffff800000102f1a	kernel.asm	/^ffff800000102f1a:	75 0a                	jne    ffff800000102f26 <fs_readi+0x80>$/;"	l
ffff800000102f1c	kernel.asm	/^ffff800000102f1c:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff800000102f21	kernel.asm	/^ffff800000102f21:	e9 4d 01 00 00       	jmpq   ffff800000103073 <fs_readi+0x1cd>$/;"	l
ffff800000102f26	kernel.asm	/^ffff800000102f26:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff800000102f2a	kernel.asm	/^ffff800000102f2a:	0f b7 80 a2 00 00 00 	movzwl 0xa2(%rax),%eax$/;"	l
ffff800000102f31	kernel.asm	/^ffff800000102f31:	0f bf d0             	movswl %ax,%edx$/;"	l
ffff800000102f34	kernel.asm	/^ffff800000102f34:	48 b8 40 45 11 00 00 	movabs $0xffff800000114540,%rax$/;"	l
ffff800000102f3b	kernel.asm	/^ffff800000102f3b:	80 ff ff $/;"	l
ffff800000102f3e	kernel.asm	/^ffff800000102f3e:	48 63 d2             	movslq %edx,%rdx$/;"	l
ffff800000102f41	kernel.asm	/^ffff800000102f41:	48 c1 e2 04          	shl    $0x4,%rdx$/;"	l
ffff800000102f45	kernel.asm	/^ffff800000102f45:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff800000102f48	kernel.asm	/^ffff800000102f48:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff800000102f4b	kernel.asm	/^ffff800000102f4b:	8b 55 c8             	mov    -0x38(%rbp),%edx$/;"	l
ffff800000102f4e	kernel.asm	/^ffff800000102f4e:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi$/;"	l
ffff800000102f52	kernel.asm	/^ffff800000102f52:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx$/;"	l
ffff800000102f56	kernel.asm	/^ffff800000102f56:	48 89 cf             	mov    %rcx,%rdi$/;"	l
ffff800000102f59	kernel.asm	/^ffff800000102f59:	ff d0                	callq  *%rax$/;"	l
ffff800000102f5b	kernel.asm	/^ffff800000102f5b:	e9 13 01 00 00       	jmpq   ffff800000103073 <fs_readi+0x1cd>$/;"	l
ffff800000102f60	kernel.asm	/^ffff800000102f60:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff800000102f64	kernel.asm	/^ffff800000102f64:	8b 80 a8 00 00 00    	mov    0xa8(%rax),%eax$/;"	l
ffff800000102f6a	kernel.asm	/^ffff800000102f6a:	3b 45 cc             	cmp    -0x34(%rbp),%eax$/;"	l
ffff800000102f6d	kernel.asm	/^ffff800000102f6d:	72 0d                	jb     ffff800000102f7c <fs_readi+0xd6>$/;"	l
ffff800000102f6f	kernel.asm	/^ffff800000102f6f:	8b 55 cc             	mov    -0x34(%rbp),%edx$/;"	l
ffff800000102f72	kernel.asm	/^ffff800000102f72:	8b 45 c8             	mov    -0x38(%rbp),%eax$/;"	l
ffff800000102f75	kernel.asm	/^ffff800000102f75:	01 d0                	add    %edx,%eax$/;"	l
ffff800000102f77	kernel.asm	/^ffff800000102f77:	3b 45 cc             	cmp    -0x34(%rbp),%eax$/;"	l
ffff800000102f7a	kernel.asm	/^ffff800000102f7a:	73 0a                	jae    ffff800000102f86 <fs_readi+0xe0>$/;"	l
ffff800000102f7c	kernel.asm	/^ffff800000102f7c:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff800000102f81	kernel.asm	/^ffff800000102f81:	e9 ed 00 00 00       	jmpq   ffff800000103073 <fs_readi+0x1cd>$/;"	l
ffff800000102f86	kernel.asm	/^ffff800000102f86:	8b 55 cc             	mov    -0x34(%rbp),%edx$/;"	l
ffff800000102f89	kernel.asm	/^ffff800000102f89:	8b 45 c8             	mov    -0x38(%rbp),%eax$/;"	l
ffff800000102f8c	kernel.asm	/^ffff800000102f8c:	01 c2                	add    %eax,%edx$/;"	l
ffff800000102f8e	kernel.asm	/^ffff800000102f8e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff800000102f92	kernel.asm	/^ffff800000102f92:	8b 80 a8 00 00 00    	mov    0xa8(%rax),%eax$/;"	l
ffff800000102f98	kernel.asm	/^ffff800000102f98:	39 c2                	cmp    %eax,%edx$/;"	l
ffff800000102f9a	kernel.asm	/^ffff800000102f9a:	76 10                	jbe    ffff800000102fac <fs_readi+0x106>$/;"	l
ffff800000102f9c	kernel.asm	/^ffff800000102f9c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff800000102fa0	kernel.asm	/^ffff800000102fa0:	8b 80 a8 00 00 00    	mov    0xa8(%rax),%eax$/;"	l
ffff800000102fa6	kernel.asm	/^ffff800000102fa6:	2b 45 cc             	sub    -0x34(%rbp),%eax$/;"	l
ffff800000102fa9	kernel.asm	/^ffff800000102fa9:	89 45 c8             	mov    %eax,-0x38(%rbp)$/;"	l
ffff800000102fac	kernel.asm	/^ffff800000102fac:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)$/;"	l
ffff800000102fb3	kernel.asm	/^ffff800000102fb3:	e9 ac 00 00 00       	jmpq   ffff800000103064 <fs_readi+0x1be>$/;"	l
ffff800000102fb8	kernel.asm	/^ffff800000102fb8:	8b 45 cc             	mov    -0x34(%rbp),%eax$/;"	l
ffff800000102fbb	kernel.asm	/^ffff800000102fbb:	c1 e8 09             	shr    $0x9,%eax$/;"	l
ffff800000102fbe	kernel.asm	/^ffff800000102fbe:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000102fc0	kernel.asm	/^ffff800000102fc0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff800000102fc4	kernel.asm	/^ffff800000102fc4:	89 d6                	mov    %edx,%esi$/;"	l
ffff800000102fc6	kernel.asm	/^ffff800000102fc6:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000102fc9	kernel.asm	/^ffff800000102fc9:	48 b8 61 2b 10 00 00 	movabs $0xffff800000102b61,%rax$/;"	l
ffff800000102fd0	kernel.asm	/^ffff800000102fd0:	80 ff ff $/;"	l
ffff800000102fd3	kernel.asm	/^ffff800000102fd3:	ff d0                	callq  *%rax$/;"	l
ffff800000102fd5	kernel.asm	/^ffff800000102fd5:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000102fd7	kernel.asm	/^ffff800000102fd7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff800000102fdb	kernel.asm	/^ffff800000102fdb:	8b 00                	mov    (%rax),%eax$/;"	l
ffff800000102fdd	kernel.asm	/^ffff800000102fdd:	89 d6                	mov    %edx,%esi$/;"	l
ffff800000102fdf	kernel.asm	/^ffff800000102fdf:	89 c7                	mov    %eax,%edi$/;"	l
ffff800000102fe1	kernel.asm	/^ffff800000102fe1:	48 b8 f8 03 10 00 00 	movabs $0xffff8000001003f8,%rax$/;"	l
ffff800000102fe8	kernel.asm	/^ffff800000102fe8:	80 ff ff $/;"	l
ffff800000102feb	kernel.asm	/^ffff800000102feb:	ff d0                	callq  *%rax$/;"	l
ffff800000102fed	kernel.asm	/^ffff800000102fed:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ffff800000102ff1	kernel.asm	/^ffff800000102ff1:	8b 45 cc             	mov    -0x34(%rbp),%eax$/;"	l
ffff800000102ff4	kernel.asm	/^ffff800000102ff4:	25 ff 01 00 00       	and    $0x1ff,%eax$/;"	l
ffff800000102ff9	kernel.asm	/^ffff800000102ff9:	ba 00 02 00 00       	mov    $0x200,%edx$/;"	l
ffff800000102ffe	kernel.asm	/^ffff800000102ffe:	29 c2                	sub    %eax,%edx$/;"	l
ffff800000103000	kernel.asm	/^ffff800000103000:	8b 45 c8             	mov    -0x38(%rbp),%eax$/;"	l
ffff800000103003	kernel.asm	/^ffff800000103003:	2b 45 fc             	sub    -0x4(%rbp),%eax$/;"	l
ffff800000103006	kernel.asm	/^ffff800000103006:	39 c2                	cmp    %eax,%edx$/;"	l
ffff800000103008	kernel.asm	/^ffff800000103008:	0f 46 c2             	cmovbe %edx,%eax$/;"	l
ffff80000010300b	kernel.asm	/^ffff80000010300b:	89 45 ec             	mov    %eax,-0x14(%rbp)$/;"	l
ffff80000010300e	kernel.asm	/^ffff80000010300e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000103012	kernel.asm	/^ffff800000103012:	48 8d 90 b0 00 00 00 	lea    0xb0(%rax),%rdx$/;"	l
ffff800000103019	kernel.asm	/^ffff800000103019:	8b 45 cc             	mov    -0x34(%rbp),%eax$/;"	l
ffff80000010301c	kernel.asm	/^ffff80000010301c:	25 ff 01 00 00       	and    $0x1ff,%eax$/;"	l
ffff800000103021	kernel.asm	/^ffff800000103021:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx$/;"	l
ffff800000103025	kernel.asm	/^ffff800000103025:	8b 55 ec             	mov    -0x14(%rbp),%edx$/;"	l
ffff800000103028	kernel.asm	/^ffff800000103028:	48 8b 45 d0          	mov    -0x30(%rbp),%rax$/;"	l
ffff80000010302c	kernel.asm	/^ffff80000010302c:	48 89 ce             	mov    %rcx,%rsi$/;"	l
ffff80000010302f	kernel.asm	/^ffff80000010302f:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000103032	kernel.asm	/^ffff800000103032:	48 b8 9a 7d 10 00 00 	movabs $0xffff800000107d9a,%rax$/;"	l
ffff800000103039	kernel.asm	/^ffff800000103039:	80 ff ff $/;"	l
ffff80000010303c	kernel.asm	/^ffff80000010303c:	ff d0                	callq  *%rax$/;"	l
ffff80000010303e	kernel.asm	/^ffff80000010303e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000103042	kernel.asm	/^ffff800000103042:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000103045	kernel.asm	/^ffff800000103045:	48 b8 aa 04 10 00 00 	movabs $0xffff8000001004aa,%rax$/;"	l
ffff80000010304c	kernel.asm	/^ffff80000010304c:	80 ff ff $/;"	l
ffff80000010304f	kernel.asm	/^ffff80000010304f:	ff d0                	callq  *%rax$/;"	l
ffff800000103051	kernel.asm	/^ffff800000103051:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
ffff800000103054	kernel.asm	/^ffff800000103054:	01 45 fc             	add    %eax,-0x4(%rbp)$/;"	l
ffff800000103057	kernel.asm	/^ffff800000103057:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
ffff80000010305a	kernel.asm	/^ffff80000010305a:	01 45 cc             	add    %eax,-0x34(%rbp)$/;"	l
ffff80000010305d	kernel.asm	/^ffff80000010305d:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
ffff800000103060	kernel.asm	/^ffff800000103060:	48 01 45 d0          	add    %rax,-0x30(%rbp)$/;"	l
ffff800000103064	kernel.asm	/^ffff800000103064:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff800000103067	kernel.asm	/^ffff800000103067:	3b 45 c8             	cmp    -0x38(%rbp),%eax$/;"	l
ffff80000010306a	kernel.asm	/^ffff80000010306a:	0f 82 48 ff ff ff    	jb     ffff800000102fb8 <fs_readi+0x112>$/;"	l
ffff800000103070	kernel.asm	/^ffff800000103070:	8b 45 c8             	mov    -0x38(%rbp),%eax$/;"	l
ffff800000103073	kernel.asm	/^ffff800000103073:	c9                   	leaveq $/;"	l
ffff800000103074	kernel.asm	/^ffff800000103074:	c3                   	retq   $/;"	l
ffff800000103075	kernel.asm	/^ffff800000103075 <fs_writei>:$/;"	l
ffff800000103075	kernel.asm	/^ffff800000103075:	55                   	push   %rbp$/;"	l
ffff800000103076	kernel.asm	/^ffff800000103076:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000103079	kernel.asm	/^ffff800000103079:	48 83 ec 40          	sub    $0x40,%rsp$/;"	l
ffff80000010307d	kernel.asm	/^ffff80000010307d:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)$/;"	l
ffff800000103081	kernel.asm	/^ffff800000103081:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)$/;"	l
ffff800000103085	kernel.asm	/^ffff800000103085:	89 55 cc             	mov    %edx,-0x34(%rbp)$/;"	l
ffff800000103088	kernel.asm	/^ffff800000103088:	89 4d c8             	mov    %ecx,-0x38(%rbp)$/;"	l
ffff80000010308b	kernel.asm	/^ffff80000010308b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff80000010308f	kernel.asm	/^ffff80000010308f:	0f b7 80 a0 00 00 00 	movzwl 0xa0(%rax),%eax$/;"	l
ffff800000103096	kernel.asm	/^ffff800000103096:	66 83 f8 03          	cmp    $0x3,%ax$/;"	l
ffff80000010309a	kernel.asm	/^ffff80000010309a:	0f 85 97 00 00 00    	jne    ffff800000103137 <fs_writei+0xc2>$/;"	l
ffff8000001030a0	kernel.asm	/^ffff8000001030a0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff8000001030a4	kernel.asm	/^ffff8000001030a4:	0f b7 80 a2 00 00 00 	movzwl 0xa2(%rax),%eax$/;"	l
ffff8000001030ab	kernel.asm	/^ffff8000001030ab:	66 85 c0             	test   %ax,%ax$/;"	l
ffff8000001030ae	kernel.asm	/^ffff8000001030ae:	78 3f                	js     ffff8000001030ef <fs_writei+0x7a>$/;"	l
ffff8000001030b0	kernel.asm	/^ffff8000001030b0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff8000001030b4	kernel.asm	/^ffff8000001030b4:	0f b7 80 a2 00 00 00 	movzwl 0xa2(%rax),%eax$/;"	l
ffff8000001030bb	kernel.asm	/^ffff8000001030bb:	66 83 f8 09          	cmp    $0x9,%ax$/;"	l
ffff8000001030bf	kernel.asm	/^ffff8000001030bf:	7f 2e                	jg     ffff8000001030ef <fs_writei+0x7a>$/;"	l
ffff8000001030c1	kernel.asm	/^ffff8000001030c1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff8000001030c5	kernel.asm	/^ffff8000001030c5:	0f b7 80 a2 00 00 00 	movzwl 0xa2(%rax),%eax$/;"	l
ffff8000001030cc	kernel.asm	/^ffff8000001030cc:	0f bf d0             	movswl %ax,%edx$/;"	l
ffff8000001030cf	kernel.asm	/^ffff8000001030cf:	48 b8 40 45 11 00 00 	movabs $0xffff800000114540,%rax$/;"	l
ffff8000001030d6	kernel.asm	/^ffff8000001030d6:	80 ff ff $/;"	l
ffff8000001030d9	kernel.asm	/^ffff8000001030d9:	48 63 d2             	movslq %edx,%rdx$/;"	l
ffff8000001030dc	kernel.asm	/^ffff8000001030dc:	48 c1 e2 04          	shl    $0x4,%rdx$/;"	l
ffff8000001030e0	kernel.asm	/^ffff8000001030e0:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff8000001030e3	kernel.asm	/^ffff8000001030e3:	48 83 c0 08          	add    $0x8,%rax$/;"	l
ffff8000001030e7	kernel.asm	/^ffff8000001030e7:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff8000001030ea	kernel.asm	/^ffff8000001030ea:	48 85 c0             	test   %rax,%rax$/;"	l
ffff8000001030ed	kernel.asm	/^ffff8000001030ed:	75 0a                	jne    ffff8000001030f9 <fs_writei+0x84>$/;"	l
ffff8000001030ef	kernel.asm	/^ffff8000001030ef:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff8000001030f4	kernel.asm	/^ffff8000001030f4:	e9 91 01 00 00       	jmpq   ffff80000010328a <fs_writei+0x215>$/;"	l
ffff8000001030f9	kernel.asm	/^ffff8000001030f9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff8000001030fd	kernel.asm	/^ffff8000001030fd:	0f b7 80 a2 00 00 00 	movzwl 0xa2(%rax),%eax$/;"	l
ffff800000103104	kernel.asm	/^ffff800000103104:	0f bf d0             	movswl %ax,%edx$/;"	l
ffff800000103107	kernel.asm	/^ffff800000103107:	48 b8 40 45 11 00 00 	movabs $0xffff800000114540,%rax$/;"	l
ffff80000010310e	kernel.asm	/^ffff80000010310e:	80 ff ff $/;"	l
ffff800000103111	kernel.asm	/^ffff800000103111:	48 63 d2             	movslq %edx,%rdx$/;"	l
ffff800000103114	kernel.asm	/^ffff800000103114:	48 c1 e2 04          	shl    $0x4,%rdx$/;"	l
ffff800000103118	kernel.asm	/^ffff800000103118:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff80000010311b	kernel.asm	/^ffff80000010311b:	48 83 c0 08          	add    $0x8,%rax$/;"	l
ffff80000010311f	kernel.asm	/^ffff80000010311f:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff800000103122	kernel.asm	/^ffff800000103122:	8b 55 c8             	mov    -0x38(%rbp),%edx$/;"	l
ffff800000103125	kernel.asm	/^ffff800000103125:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi$/;"	l
ffff800000103129	kernel.asm	/^ffff800000103129:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx$/;"	l
ffff80000010312d	kernel.asm	/^ffff80000010312d:	48 89 cf             	mov    %rcx,%rdi$/;"	l
ffff800000103130	kernel.asm	/^ffff800000103130:	ff d0                	callq  *%rax$/;"	l
ffff800000103132	kernel.asm	/^ffff800000103132:	e9 53 01 00 00       	jmpq   ffff80000010328a <fs_writei+0x215>$/;"	l
ffff800000103137	kernel.asm	/^ffff800000103137:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff80000010313b	kernel.asm	/^ffff80000010313b:	8b 80 a8 00 00 00    	mov    0xa8(%rax),%eax$/;"	l
ffff800000103141	kernel.asm	/^ffff800000103141:	3b 45 cc             	cmp    -0x34(%rbp),%eax$/;"	l
ffff800000103144	kernel.asm	/^ffff800000103144:	72 0d                	jb     ffff800000103153 <fs_writei+0xde>$/;"	l
ffff800000103146	kernel.asm	/^ffff800000103146:	8b 55 cc             	mov    -0x34(%rbp),%edx$/;"	l
ffff800000103149	kernel.asm	/^ffff800000103149:	8b 45 c8             	mov    -0x38(%rbp),%eax$/;"	l
ffff80000010314c	kernel.asm	/^ffff80000010314c:	01 d0                	add    %edx,%eax$/;"	l
ffff80000010314e	kernel.asm	/^ffff80000010314e:	3b 45 cc             	cmp    -0x34(%rbp),%eax$/;"	l
ffff800000103151	kernel.asm	/^ffff800000103151:	73 0a                	jae    ffff80000010315d <fs_writei+0xe8>$/;"	l
ffff800000103153	kernel.asm	/^ffff800000103153:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff800000103158	kernel.asm	/^ffff800000103158:	e9 2d 01 00 00       	jmpq   ffff80000010328a <fs_writei+0x215>$/;"	l
ffff80000010315d	kernel.asm	/^ffff80000010315d:	8b 55 cc             	mov    -0x34(%rbp),%edx$/;"	l
ffff800000103160	kernel.asm	/^ffff800000103160:	8b 45 c8             	mov    -0x38(%rbp),%eax$/;"	l
ffff800000103163	kernel.asm	/^ffff800000103163:	01 d0                	add    %edx,%eax$/;"	l
ffff800000103165	kernel.asm	/^ffff800000103165:	3d 00 18 01 00       	cmp    $0x11800,%eax$/;"	l
ffff80000010316a	kernel.asm	/^ffff80000010316a:	76 0a                	jbe    ffff800000103176 <fs_writei+0x101>$/;"	l
ffff80000010316c	kernel.asm	/^ffff80000010316c:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff800000103171	kernel.asm	/^ffff800000103171:	e9 14 01 00 00       	jmpq   ffff80000010328a <fs_writei+0x215>$/;"	l
ffff800000103176	kernel.asm	/^ffff800000103176:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)$/;"	l
ffff80000010317d	kernel.asm	/^ffff80000010317d:	e9 bf 00 00 00       	jmpq   ffff800000103241 <fs_writei+0x1cc>$/;"	l
ffff800000103182	kernel.asm	/^ffff800000103182:	8b 45 cc             	mov    -0x34(%rbp),%eax$/;"	l
ffff800000103185	kernel.asm	/^ffff800000103185:	c1 e8 09             	shr    $0x9,%eax$/;"	l
ffff800000103188	kernel.asm	/^ffff800000103188:	89 c2                	mov    %eax,%edx$/;"	l
ffff80000010318a	kernel.asm	/^ffff80000010318a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff80000010318e	kernel.asm	/^ffff80000010318e:	89 d6                	mov    %edx,%esi$/;"	l
ffff800000103190	kernel.asm	/^ffff800000103190:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000103193	kernel.asm	/^ffff800000103193:	48 b8 61 2b 10 00 00 	movabs $0xffff800000102b61,%rax$/;"	l
ffff80000010319a	kernel.asm	/^ffff80000010319a:	80 ff ff $/;"	l
ffff80000010319d	kernel.asm	/^ffff80000010319d:	ff d0                	callq  *%rax$/;"	l
ffff80000010319f	kernel.asm	/^ffff80000010319f:	89 c2                	mov    %eax,%edx$/;"	l
ffff8000001031a1	kernel.asm	/^ffff8000001031a1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff8000001031a5	kernel.asm	/^ffff8000001031a5:	8b 00                	mov    (%rax),%eax$/;"	l
ffff8000001031a7	kernel.asm	/^ffff8000001031a7:	89 d6                	mov    %edx,%esi$/;"	l
ffff8000001031a9	kernel.asm	/^ffff8000001031a9:	89 c7                	mov    %eax,%edi$/;"	l
ffff8000001031ab	kernel.asm	/^ffff8000001031ab:	48 b8 f8 03 10 00 00 	movabs $0xffff8000001003f8,%rax$/;"	l
ffff8000001031b2	kernel.asm	/^ffff8000001031b2:	80 ff ff $/;"	l
ffff8000001031b5	kernel.asm	/^ffff8000001031b5:	ff d0                	callq  *%rax$/;"	l
ffff8000001031b7	kernel.asm	/^ffff8000001031b7:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ffff8000001031bb	kernel.asm	/^ffff8000001031bb:	8b 45 cc             	mov    -0x34(%rbp),%eax$/;"	l
ffff8000001031be	kernel.asm	/^ffff8000001031be:	25 ff 01 00 00       	and    $0x1ff,%eax$/;"	l
ffff8000001031c3	kernel.asm	/^ffff8000001031c3:	ba 00 02 00 00       	mov    $0x200,%edx$/;"	l
ffff8000001031c8	kernel.asm	/^ffff8000001031c8:	29 c2                	sub    %eax,%edx$/;"	l
ffff8000001031ca	kernel.asm	/^ffff8000001031ca:	8b 45 c8             	mov    -0x38(%rbp),%eax$/;"	l
ffff8000001031cd	kernel.asm	/^ffff8000001031cd:	2b 45 fc             	sub    -0x4(%rbp),%eax$/;"	l
ffff8000001031d0	kernel.asm	/^ffff8000001031d0:	39 c2                	cmp    %eax,%edx$/;"	l
ffff8000001031d2	kernel.asm	/^ffff8000001031d2:	0f 46 c2             	cmovbe %edx,%eax$/;"	l
ffff8000001031d5	kernel.asm	/^ffff8000001031d5:	89 45 ec             	mov    %eax,-0x14(%rbp)$/;"	l
ffff8000001031d8	kernel.asm	/^ffff8000001031d8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff8000001031dc	kernel.asm	/^ffff8000001031dc:	48 8d 90 b0 00 00 00 	lea    0xb0(%rax),%rdx$/;"	l
ffff8000001031e3	kernel.asm	/^ffff8000001031e3:	8b 45 cc             	mov    -0x34(%rbp),%eax$/;"	l
ffff8000001031e6	kernel.asm	/^ffff8000001031e6:	25 ff 01 00 00       	and    $0x1ff,%eax$/;"	l
ffff8000001031eb	kernel.asm	/^ffff8000001031eb:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx$/;"	l
ffff8000001031ef	kernel.asm	/^ffff8000001031ef:	8b 55 ec             	mov    -0x14(%rbp),%edx$/;"	l
ffff8000001031f2	kernel.asm	/^ffff8000001031f2:	48 8b 45 d0          	mov    -0x30(%rbp),%rax$/;"	l
ffff8000001031f6	kernel.asm	/^ffff8000001031f6:	48 89 c6             	mov    %rax,%rsi$/;"	l
ffff8000001031f9	kernel.asm	/^ffff8000001031f9:	48 89 cf             	mov    %rcx,%rdi$/;"	l
ffff8000001031fc	kernel.asm	/^ffff8000001031fc:	48 b8 9a 7d 10 00 00 	movabs $0xffff800000107d9a,%rax$/;"	l
ffff800000103203	kernel.asm	/^ffff800000103203:	80 ff ff $/;"	l
ffff800000103206	kernel.asm	/^ffff800000103206:	ff d0                	callq  *%rax$/;"	l
ffff800000103208	kernel.asm	/^ffff800000103208:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff80000010320c	kernel.asm	/^ffff80000010320c:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010320f	kernel.asm	/^ffff80000010320f:	48 b8 85 52 10 00 00 	movabs $0xffff800000105285,%rax$/;"	l
ffff800000103216	kernel.asm	/^ffff800000103216:	80 ff ff $/;"	l
ffff800000103219	kernel.asm	/^ffff800000103219:	ff d0                	callq  *%rax$/;"	l
ffff80000010321b	kernel.asm	/^ffff80000010321b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff80000010321f	kernel.asm	/^ffff80000010321f:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000103222	kernel.asm	/^ffff800000103222:	48 b8 aa 04 10 00 00 	movabs $0xffff8000001004aa,%rax$/;"	l
ffff800000103229	kernel.asm	/^ffff800000103229:	80 ff ff $/;"	l
ffff80000010322c	kernel.asm	/^ffff80000010322c:	ff d0                	callq  *%rax$/;"	l
ffff80000010322e	kernel.asm	/^ffff80000010322e:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
ffff800000103231	kernel.asm	/^ffff800000103231:	01 45 fc             	add    %eax,-0x4(%rbp)$/;"	l
ffff800000103234	kernel.asm	/^ffff800000103234:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
ffff800000103237	kernel.asm	/^ffff800000103237:	01 45 cc             	add    %eax,-0x34(%rbp)$/;"	l
ffff80000010323a	kernel.asm	/^ffff80000010323a:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
ffff80000010323d	kernel.asm	/^ffff80000010323d:	48 01 45 d0          	add    %rax,-0x30(%rbp)$/;"	l
ffff800000103241	kernel.asm	/^ffff800000103241:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff800000103244	kernel.asm	/^ffff800000103244:	3b 45 c8             	cmp    -0x38(%rbp),%eax$/;"	l
ffff800000103247	kernel.asm	/^ffff800000103247:	0f 82 35 ff ff ff    	jb     ffff800000103182 <fs_writei+0x10d>$/;"	l
ffff80000010324d	kernel.asm	/^ffff80000010324d:	83 7d c8 00          	cmpl   $0x0,-0x38(%rbp)$/;"	l
ffff800000103251	kernel.asm	/^ffff800000103251:	74 34                	je     ffff800000103287 <fs_writei+0x212>$/;"	l
ffff800000103253	kernel.asm	/^ffff800000103253:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff800000103257	kernel.asm	/^ffff800000103257:	8b 80 a8 00 00 00    	mov    0xa8(%rax),%eax$/;"	l
ffff80000010325d	kernel.asm	/^ffff80000010325d:	3b 45 cc             	cmp    -0x34(%rbp),%eax$/;"	l
ffff800000103260	kernel.asm	/^ffff800000103260:	73 25                	jae    ffff800000103287 <fs_writei+0x212>$/;"	l
ffff800000103262	kernel.asm	/^ffff800000103262:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff800000103266	kernel.asm	/^ffff800000103266:	8b 55 cc             	mov    -0x34(%rbp),%edx$/;"	l
ffff800000103269	kernel.asm	/^ffff800000103269:	89 90 a8 00 00 00    	mov    %edx,0xa8(%rax)$/;"	l
ffff80000010326f	kernel.asm	/^ffff80000010326f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff800000103273	kernel.asm	/^ffff800000103273:	48 8b 80 98 00 00 00 	mov    0x98(%rax),%rax$/;"	l
ffff80000010327a	kernel.asm	/^ffff80000010327a:	48 8b 40 08          	mov    0x8(%rax),%rax$/;"	l
ffff80000010327e	kernel.asm	/^ffff80000010327e:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx$/;"	l
ffff800000103282	kernel.asm	/^ffff800000103282:	48 89 d7             	mov    %rdx,%rdi$/;"	l
ffff800000103285	kernel.asm	/^ffff800000103285:	ff d0                	callq  *%rax$/;"	l
ffff800000103287	kernel.asm	/^ffff800000103287:	8b 45 c8             	mov    -0x38(%rbp),%eax$/;"	l
ffff80000010328a	kernel.asm	/^ffff80000010328a:	c9                   	leaveq $/;"	l
ffff80000010328b	kernel.asm	/^ffff80000010328b:	c3                   	retq   $/;"	l
ffff80000010328c	kernel.asm	/^ffff80000010328c <namecmp>:$/;"	l
ffff80000010328c	kernel.asm	/^ffff80000010328c:	55                   	push   %rbp$/;"	l
ffff80000010328d	kernel.asm	/^ffff80000010328d:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000103290	kernel.asm	/^ffff800000103290:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff800000103294	kernel.asm	/^ffff800000103294:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)$/;"	l
ffff800000103298	kernel.asm	/^ffff800000103298:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)$/;"	l
ffff80000010329c	kernel.asm	/^ffff80000010329c:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx$/;"	l
ffff8000001032a0	kernel.asm	/^ffff8000001032a0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001032a4	kernel.asm	/^ffff8000001032a4:	ba 0e 00 00 00       	mov    $0xe,%edx$/;"	l
ffff8000001032a9	kernel.asm	/^ffff8000001032a9:	48 89 ce             	mov    %rcx,%rsi$/;"	l
ffff8000001032ac	kernel.asm	/^ffff8000001032ac:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001032af	kernel.asm	/^ffff8000001032af:	48 b8 6f 7e 10 00 00 	movabs $0xffff800000107e6f,%rax$/;"	l
ffff8000001032b6	kernel.asm	/^ffff8000001032b6:	80 ff ff $/;"	l
ffff8000001032b9	kernel.asm	/^ffff8000001032b9:	ff d0                	callq  *%rax$/;"	l
ffff8000001032bb	kernel.asm	/^ffff8000001032bb:	c9                   	leaveq $/;"	l
ffff8000001032bc	kernel.asm	/^ffff8000001032bc:	c3                   	retq   $/;"	l
ffff8000001032bd	kernel.asm	/^ffff8000001032bd <dirlookup>:$/;"	l
ffff8000001032bd	kernel.asm	/^ffff8000001032bd:	55                   	push   %rbp$/;"	l
ffff8000001032be	kernel.asm	/^ffff8000001032be:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff8000001032c1	kernel.asm	/^ffff8000001032c1:	48 83 ec 40          	sub    $0x40,%rsp$/;"	l
ffff8000001032c5	kernel.asm	/^ffff8000001032c5:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)$/;"	l
ffff8000001032c9	kernel.asm	/^ffff8000001032c9:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)$/;"	l
ffff8000001032cd	kernel.asm	/^ffff8000001032cd:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)$/;"	l
ffff8000001032d1	kernel.asm	/^ffff8000001032d1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff8000001032d5	kernel.asm	/^ffff8000001032d5:	0f b7 80 a0 00 00 00 	movzwl 0xa0(%rax),%eax$/;"	l
ffff8000001032dc	kernel.asm	/^ffff8000001032dc:	66 83 f8 01          	cmp    $0x1,%ax$/;"	l
ffff8000001032e0	kernel.asm	/^ffff8000001032e0:	74 16                	je     ffff8000001032f8 <dirlookup+0x3b>$/;"	l
ffff8000001032e2	kernel.asm	/^ffff8000001032e2:	48 bf 2c c3 10 00 00 	movabs $0xffff80000010c32c,%rdi$/;"	l
ffff8000001032e9	kernel.asm	/^ffff8000001032e9:	80 ff ff $/;"	l
ffff8000001032ec	kernel.asm	/^ffff8000001032ec:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff8000001032f3	kernel.asm	/^ffff8000001032f3:	80 ff ff $/;"	l
ffff8000001032f6	kernel.asm	/^ffff8000001032f6:	ff d0                	callq  *%rax$/;"	l
ffff8000001032f8	kernel.asm	/^ffff8000001032f8:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)$/;"	l
ffff8000001032ff	kernel.asm	/^ffff8000001032ff:	e9 e8 00 00 00       	jmpq   ffff8000001033ec <dirlookup+0x12f>$/;"	l
ffff800000103304	kernel.asm	/^ffff800000103304:	0f b7 45 e0          	movzwl -0x20(%rbp),%eax$/;"	l
ffff800000103308	kernel.asm	/^ffff800000103308:	66 85 c0             	test   %ax,%ax$/;"	l
ffff80000010330b	kernel.asm	/^ffff80000010330b:	0f 84 d7 00 00 00    	je     ffff8000001033e8 <dirlookup+0x12b>$/;"	l
ffff800000103311	kernel.asm	/^ffff800000103311:	48 8d 45 e0          	lea    -0x20(%rbp),%rax$/;"	l
ffff800000103315	kernel.asm	/^ffff800000103315:	48 8d 50 02          	lea    0x2(%rax),%rdx$/;"	l
ffff800000103319	kernel.asm	/^ffff800000103319:	48 8b 45 d0          	mov    -0x30(%rbp),%rax$/;"	l
ffff80000010331d	kernel.asm	/^ffff80000010331d:	48 89 d6             	mov    %rdx,%rsi$/;"	l
ffff800000103320	kernel.asm	/^ffff800000103320:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000103323	kernel.asm	/^ffff800000103323:	48 b8 8c 32 10 00 00 	movabs $0xffff80000010328c,%rax$/;"	l
ffff80000010332a	kernel.asm	/^ffff80000010332a:	80 ff ff $/;"	l
ffff80000010332d	kernel.asm	/^ffff80000010332d:	ff d0                	callq  *%rax$/;"	l
ffff80000010332f	kernel.asm	/^ffff80000010332f:	85 c0                	test   %eax,%eax$/;"	l
ffff800000103331	kernel.asm	/^ffff800000103331:	0f 85 b1 00 00 00    	jne    ffff8000001033e8 <dirlookup+0x12b>$/;"	l
ffff800000103337	kernel.asm	/^ffff800000103337:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff80000010333b	kernel.asm	/^ffff80000010333b:	48 8b 80 98 00 00 00 	mov    0x98(%rax),%rax$/;"	l
ffff800000103342	kernel.asm	/^ffff800000103342:	48 8b 40 10          	mov    0x10(%rax),%rax$/;"	l
ffff800000103346	kernel.asm	/^ffff800000103346:	8b 55 fc             	mov    -0x4(%rbp),%edx$/;"	l
ffff800000103349	kernel.asm	/^ffff800000103349:	48 8d 75 e0          	lea    -0x20(%rbp),%rsi$/;"	l
ffff80000010334d	kernel.asm	/^ffff80000010334d:	48 8b 7d d8          	mov    -0x28(%rbp),%rdi$/;"	l
ffff800000103351	kernel.asm	/^ffff800000103351:	b9 10 00 00 00       	mov    $0x10,%ecx$/;"	l
ffff800000103356	kernel.asm	/^ffff800000103356:	ff d0                	callq  *%rax$/;"	l
ffff800000103358	kernel.asm	/^ffff800000103358:	83 f8 10             	cmp    $0x10,%eax$/;"	l
ffff80000010335b	kernel.asm	/^ffff80000010335b:	74 16                	je     ffff800000103373 <dirlookup+0xb6>$/;"	l
ffff80000010335d	kernel.asm	/^ffff80000010335d:	48 bf 3e c3 10 00 00 	movabs $0xffff80000010c33e,%rdi$/;"	l
ffff800000103364	kernel.asm	/^ffff800000103364:	80 ff ff $/;"	l
ffff800000103367	kernel.asm	/^ffff800000103367:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff80000010336e	kernel.asm	/^ffff80000010336e:	80 ff ff $/;"	l
ffff800000103371	kernel.asm	/^ffff800000103371:	ff d0                	callq  *%rax$/;"	l
ffff800000103373	kernel.asm	/^ffff800000103373:	0f b7 45 e0          	movzwl -0x20(%rbp),%eax$/;"	l
ffff800000103377	kernel.asm	/^ffff800000103377:	66 85 c0             	test   %ax,%ax$/;"	l
ffff80000010337a	kernel.asm	/^ffff80000010337a:	75 02                	jne    ffff80000010337e <dirlookup+0xc1>$/;"	l
ffff80000010337c	kernel.asm	/^ffff80000010337c:	eb 6e                	jmp    ffff8000001033ec <dirlookup+0x12f>$/;"	l
ffff80000010337e	kernel.asm	/^ffff80000010337e:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)$/;"	l
ffff800000103383	kernel.asm	/^ffff800000103383:	74 09                	je     ffff80000010338e <dirlookup+0xd1>$/;"	l
ffff800000103385	kernel.asm	/^ffff800000103385:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
ffff800000103389	kernel.asm	/^ffff800000103389:	8b 55 fc             	mov    -0x4(%rbp),%edx$/;"	l
ffff80000010338c	kernel.asm	/^ffff80000010338c:	89 10                	mov    %edx,(%rax)$/;"	l
ffff80000010338e	kernel.asm	/^ffff80000010338e:	0f b7 45 e0          	movzwl -0x20(%rbp),%eax$/;"	l
ffff800000103392	kernel.asm	/^ffff800000103392:	0f b7 c0             	movzwl %ax,%eax$/;"	l
ffff800000103395	kernel.asm	/^ffff800000103395:	89 45 f8             	mov    %eax,-0x8(%rbp)$/;"	l
ffff800000103398	kernel.asm	/^ffff800000103398:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff80000010339c	kernel.asm	/^ffff80000010339c:	8b 80 94 00 00 00    	mov    0x94(%rax),%eax$/;"	l
ffff8000001033a2	kernel.asm	/^ffff8000001033a2:	85 c0                	test   %eax,%eax$/;"	l
ffff8000001033a4	kernel.asm	/^ffff8000001033a4:	74 23                	je     ffff8000001033c9 <dirlookup+0x10c>$/;"	l
ffff8000001033a6	kernel.asm	/^ffff8000001033a6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff8000001033aa	kernel.asm	/^ffff8000001033aa:	8b 80 94 00 00 00    	mov    0x94(%rax),%eax$/;"	l
ffff8000001033b0	kernel.asm	/^ffff8000001033b0:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx$/;"	l
ffff8000001033b4	kernel.asm	/^ffff8000001033b4:	8b 4d f8             	mov    -0x8(%rbp),%ecx$/;"	l
ffff8000001033b7	kernel.asm	/^ffff8000001033b7:	89 ce                	mov    %ecx,%esi$/;"	l
ffff8000001033b9	kernel.asm	/^ffff8000001033b9:	89 c7                	mov    %eax,%edi$/;"	l
ffff8000001033bb	kernel.asm	/^ffff8000001033bb:	48 b8 65 26 10 00 00 	movabs $0xffff800000102665,%rax$/;"	l
ffff8000001033c2	kernel.asm	/^ffff8000001033c2:	80 ff ff $/;"	l
ffff8000001033c5	kernel.asm	/^ffff8000001033c5:	ff d0                	callq  *%rax$/;"	l
ffff8000001033c7	kernel.asm	/^ffff8000001033c7:	eb 52                	jmp    ffff80000010341b <dirlookup+0x15e>$/;"	l
ffff8000001033c9	kernel.asm	/^ffff8000001033c9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff8000001033cd	kernel.asm	/^ffff8000001033cd:	8b 00                	mov    (%rax),%eax$/;"	l
ffff8000001033cf	kernel.asm	/^ffff8000001033cf:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx$/;"	l
ffff8000001033d3	kernel.asm	/^ffff8000001033d3:	8b 4d f8             	mov    -0x8(%rbp),%ecx$/;"	l
ffff8000001033d6	kernel.asm	/^ffff8000001033d6:	89 ce                	mov    %ecx,%esi$/;"	l
ffff8000001033d8	kernel.asm	/^ffff8000001033d8:	89 c7                	mov    %eax,%edi$/;"	l
ffff8000001033da	kernel.asm	/^ffff8000001033da:	48 b8 65 26 10 00 00 	movabs $0xffff800000102665,%rax$/;"	l
ffff8000001033e1	kernel.asm	/^ffff8000001033e1:	80 ff ff $/;"	l
ffff8000001033e4	kernel.asm	/^ffff8000001033e4:	ff d0                	callq  *%rax$/;"	l
ffff8000001033e6	kernel.asm	/^ffff8000001033e6:	eb 33                	jmp    ffff80000010341b <dirlookup+0x15e>$/;"	l
ffff8000001033e8	kernel.asm	/^ffff8000001033e8:	83 45 fc 10          	addl   $0x10,-0x4(%rbp)$/;"	l
ffff8000001033ec	kernel.asm	/^ffff8000001033ec:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff8000001033f0	kernel.asm	/^ffff8000001033f0:	48 8b 80 98 00 00 00 	mov    0x98(%rax),%rax$/;"	l
ffff8000001033f7	kernel.asm	/^ffff8000001033f7:	48 8b 40 10          	mov    0x10(%rax),%rax$/;"	l
ffff8000001033fb	kernel.asm	/^ffff8000001033fb:	8b 55 fc             	mov    -0x4(%rbp),%edx$/;"	l
ffff8000001033fe	kernel.asm	/^ffff8000001033fe:	48 8d 75 e0          	lea    -0x20(%rbp),%rsi$/;"	l
ffff800000103402	kernel.asm	/^ffff800000103402:	48 8b 7d d8          	mov    -0x28(%rbp),%rdi$/;"	l
ffff800000103406	kernel.asm	/^ffff800000103406:	b9 10 00 00 00       	mov    $0x10,%ecx$/;"	l
ffff80000010340b	kernel.asm	/^ffff80000010340b:	ff d0                	callq  *%rax$/;"	l
ffff80000010340d	kernel.asm	/^ffff80000010340d:	83 f8 10             	cmp    $0x10,%eax$/;"	l
ffff800000103410	kernel.asm	/^ffff800000103410:	0f 84 ee fe ff ff    	je     ffff800000103304 <dirlookup+0x47>$/;"	l
ffff800000103416	kernel.asm	/^ffff800000103416:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff80000010341b	kernel.asm	/^ffff80000010341b:	c9                   	leaveq $/;"	l
ffff80000010341c	kernel.asm	/^ffff80000010341c:	c3                   	retq   $/;"	l
ffff80000010341d	kernel.asm	/^ffff80000010341d <dirlink>:$/;"	l
ffff80000010341d	kernel.asm	/^ffff80000010341d:	55                   	push   %rbp$/;"	l
ffff80000010341e	kernel.asm	/^ffff80000010341e:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000103421	kernel.asm	/^ffff800000103421:	48 83 ec 40          	sub    $0x40,%rsp$/;"	l
ffff800000103425	kernel.asm	/^ffff800000103425:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)$/;"	l
ffff800000103429	kernel.asm	/^ffff800000103429:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)$/;"	l
ffff80000010342d	kernel.asm	/^ffff80000010342d:	89 55 cc             	mov    %edx,-0x34(%rbp)$/;"	l
ffff800000103430	kernel.asm	/^ffff800000103430:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx$/;"	l
ffff800000103434	kernel.asm	/^ffff800000103434:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff800000103438	kernel.asm	/^ffff800000103438:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
ffff80000010343d	kernel.asm	/^ffff80000010343d:	48 89 ce             	mov    %rcx,%rsi$/;"	l
ffff800000103440	kernel.asm	/^ffff800000103440:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000103443	kernel.asm	/^ffff800000103443:	48 b8 bd 32 10 00 00 	movabs $0xffff8000001032bd,%rax$/;"	l
ffff80000010344a	kernel.asm	/^ffff80000010344a:	80 ff ff $/;"	l
ffff80000010344d	kernel.asm	/^ffff80000010344d:	ff d0                	callq  *%rax$/;"	l
ffff80000010344f	kernel.asm	/^ffff80000010344f:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ffff800000103453	kernel.asm	/^ffff800000103453:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)$/;"	l
ffff800000103458	kernel.asm	/^ffff800000103458:	74 1d                	je     ffff800000103477 <dirlink+0x5a>$/;"	l
ffff80000010345a	kernel.asm	/^ffff80000010345a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff80000010345e	kernel.asm	/^ffff80000010345e:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000103461	kernel.asm	/^ffff800000103461:	48 b8 39 2a 10 00 00 	movabs $0xffff800000102a39,%rax$/;"	l
ffff800000103468	kernel.asm	/^ffff800000103468:	80 ff ff $/;"	l
ffff80000010346b	kernel.asm	/^ffff80000010346b:	ff d0                	callq  *%rax$/;"	l
ffff80000010346d	kernel.asm	/^ffff80000010346d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff800000103472	kernel.asm	/^ffff800000103472:	e9 d6 00 00 00       	jmpq   ffff80000010354d <dirlink+0x130>$/;"	l
ffff800000103477	kernel.asm	/^ffff800000103477:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)$/;"	l
ffff80000010347e	kernel.asm	/^ffff80000010347e:	eb 4e                	jmp    ffff8000001034ce <dirlink+0xb1>$/;"	l
ffff800000103480	kernel.asm	/^ffff800000103480:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff800000103484	kernel.asm	/^ffff800000103484:	48 8b 80 98 00 00 00 	mov    0x98(%rax),%rax$/;"	l
ffff80000010348b	kernel.asm	/^ffff80000010348b:	48 8b 40 10          	mov    0x10(%rax),%rax$/;"	l
ffff80000010348f	kernel.asm	/^ffff80000010348f:	8b 55 fc             	mov    -0x4(%rbp),%edx$/;"	l
ffff800000103492	kernel.asm	/^ffff800000103492:	48 8d 75 e0          	lea    -0x20(%rbp),%rsi$/;"	l
ffff800000103496	kernel.asm	/^ffff800000103496:	48 8b 7d d8          	mov    -0x28(%rbp),%rdi$/;"	l
ffff80000010349a	kernel.asm	/^ffff80000010349a:	b9 10 00 00 00       	mov    $0x10,%ecx$/;"	l
ffff80000010349f	kernel.asm	/^ffff80000010349f:	ff d0                	callq  *%rax$/;"	l
ffff8000001034a1	kernel.asm	/^ffff8000001034a1:	83 f8 10             	cmp    $0x10,%eax$/;"	l
ffff8000001034a4	kernel.asm	/^ffff8000001034a4:	74 16                	je     ffff8000001034bc <dirlink+0x9f>$/;"	l
ffff8000001034a6	kernel.asm	/^ffff8000001034a6:	48 bf 4d c3 10 00 00 	movabs $0xffff80000010c34d,%rdi$/;"	l
ffff8000001034ad	kernel.asm	/^ffff8000001034ad:	80 ff ff $/;"	l
ffff8000001034b0	kernel.asm	/^ffff8000001034b0:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff8000001034b7	kernel.asm	/^ffff8000001034b7:	80 ff ff $/;"	l
ffff8000001034ba	kernel.asm	/^ffff8000001034ba:	ff d0                	callq  *%rax$/;"	l
ffff8000001034bc	kernel.asm	/^ffff8000001034bc:	0f b7 45 e0          	movzwl -0x20(%rbp),%eax$/;"	l
ffff8000001034c0	kernel.asm	/^ffff8000001034c0:	66 85 c0             	test   %ax,%ax$/;"	l
ffff8000001034c3	kernel.asm	/^ffff8000001034c3:	74 1c                	je     ffff8000001034e1 <dirlink+0xc4>$/;"	l
ffff8000001034c5	kernel.asm	/^ffff8000001034c5:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff8000001034c8	kernel.asm	/^ffff8000001034c8:	83 c0 10             	add    $0x10,%eax$/;"	l
ffff8000001034cb	kernel.asm	/^ffff8000001034cb:	89 45 fc             	mov    %eax,-0x4(%rbp)$/;"	l
ffff8000001034ce	kernel.asm	/^ffff8000001034ce:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff8000001034d2	kernel.asm	/^ffff8000001034d2:	8b 90 a8 00 00 00    	mov    0xa8(%rax),%edx$/;"	l
ffff8000001034d8	kernel.asm	/^ffff8000001034d8:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff8000001034db	kernel.asm	/^ffff8000001034db:	39 c2                	cmp    %eax,%edx$/;"	l
ffff8000001034dd	kernel.asm	/^ffff8000001034dd:	77 a1                	ja     ffff800000103480 <dirlink+0x63>$/;"	l
ffff8000001034df	kernel.asm	/^ffff8000001034df:	eb 01                	jmp    ffff8000001034e2 <dirlink+0xc5>$/;"	l
ffff8000001034e1	kernel.asm	/^ffff8000001034e1:	90                   	nop$/;"	l
ffff8000001034e2	kernel.asm	/^ffff8000001034e2:	48 8b 45 d0          	mov    -0x30(%rbp),%rax$/;"	l
ffff8000001034e6	kernel.asm	/^ffff8000001034e6:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx$/;"	l
ffff8000001034ea	kernel.asm	/^ffff8000001034ea:	48 8d 4a 02          	lea    0x2(%rdx),%rcx$/;"	l
ffff8000001034ee	kernel.asm	/^ffff8000001034ee:	ba 0e 00 00 00       	mov    $0xe,%edx$/;"	l
ffff8000001034f3	kernel.asm	/^ffff8000001034f3:	48 89 c6             	mov    %rax,%rsi$/;"	l
ffff8000001034f6	kernel.asm	/^ffff8000001034f6:	48 89 cf             	mov    %rcx,%rdi$/;"	l
ffff8000001034f9	kernel.asm	/^ffff8000001034f9:	48 b8 dc 7e 10 00 00 	movabs $0xffff800000107edc,%rax$/;"	l
ffff800000103500	kernel.asm	/^ffff800000103500:	80 ff ff $/;"	l
ffff800000103503	kernel.asm	/^ffff800000103503:	ff d0                	callq  *%rax$/;"	l
ffff800000103505	kernel.asm	/^ffff800000103505:	8b 45 cc             	mov    -0x34(%rbp),%eax$/;"	l
ffff800000103508	kernel.asm	/^ffff800000103508:	66 89 45 e0          	mov    %ax,-0x20(%rbp)$/;"	l
ffff80000010350c	kernel.asm	/^ffff80000010350c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff800000103510	kernel.asm	/^ffff800000103510:	48 8b 80 98 00 00 00 	mov    0x98(%rax),%rax$/;"	l
ffff800000103517	kernel.asm	/^ffff800000103517:	48 8b 40 18          	mov    0x18(%rax),%rax$/;"	l
ffff80000010351b	kernel.asm	/^ffff80000010351b:	8b 55 fc             	mov    -0x4(%rbp),%edx$/;"	l
ffff80000010351e	kernel.asm	/^ffff80000010351e:	48 8d 75 e0          	lea    -0x20(%rbp),%rsi$/;"	l
ffff800000103522	kernel.asm	/^ffff800000103522:	48 8b 7d d8          	mov    -0x28(%rbp),%rdi$/;"	l
ffff800000103526	kernel.asm	/^ffff800000103526:	b9 10 00 00 00       	mov    $0x10,%ecx$/;"	l
ffff80000010352b	kernel.asm	/^ffff80000010352b:	ff d0                	callq  *%rax$/;"	l
ffff80000010352d	kernel.asm	/^ffff80000010352d:	83 f8 10             	cmp    $0x10,%eax$/;"	l
ffff800000103530	kernel.asm	/^ffff800000103530:	74 16                	je     ffff800000103548 <dirlink+0x12b>$/;"	l
ffff800000103532	kernel.asm	/^ffff800000103532:	48 bf 5a c3 10 00 00 	movabs $0xffff80000010c35a,%rdi$/;"	l
ffff800000103539	kernel.asm	/^ffff800000103539:	80 ff ff $/;"	l
ffff80000010353c	kernel.asm	/^ffff80000010353c:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff800000103543	kernel.asm	/^ffff800000103543:	80 ff ff $/;"	l
ffff800000103546	kernel.asm	/^ffff800000103546:	ff d0                	callq  *%rax$/;"	l
ffff800000103548	kernel.asm	/^ffff800000103548:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff80000010354d	kernel.asm	/^ffff80000010354d:	c9                   	leaveq $/;"	l
ffff80000010354e	kernel.asm	/^ffff80000010354e:	c3                   	retq   $/;"	l
ffff80000010354f	kernel.asm	/^ffff80000010354f <skipelem>:$/;"	l
ffff80000010354f	kernel.asm	/^ffff80000010354f:	55                   	push   %rbp$/;"	l
ffff800000103550	kernel.asm	/^ffff800000103550:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000103553	kernel.asm	/^ffff800000103553:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ffff800000103557	kernel.asm	/^ffff800000103557:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
ffff80000010355b	kernel.asm	/^ffff80000010355b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)$/;"	l
ffff80000010355f	kernel.asm	/^ffff80000010355f:	eb 05                	jmp    ffff800000103566 <skipelem+0x17>$/;"	l
ffff800000103561	kernel.asm	/^ffff800000103561:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)$/;"	l
ffff800000103566	kernel.asm	/^ffff800000103566:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010356a	kernel.asm	/^ffff80000010356a:	0f b6 00             	movzbl (%rax),%eax$/;"	l
ffff80000010356d	kernel.asm	/^ffff80000010356d:	3c 2f                	cmp    $0x2f,%al$/;"	l
ffff80000010356f	kernel.asm	/^ffff80000010356f:	74 f0                	je     ffff800000103561 <skipelem+0x12>$/;"	l
ffff800000103571	kernel.asm	/^ffff800000103571:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000103575	kernel.asm	/^ffff800000103575:	0f b6 00             	movzbl (%rax),%eax$/;"	l
ffff800000103578	kernel.asm	/^ffff800000103578:	84 c0                	test   %al,%al$/;"	l
ffff80000010357a	kernel.asm	/^ffff80000010357a:	75 0a                	jne    ffff800000103586 <skipelem+0x37>$/;"	l
ffff80000010357c	kernel.asm	/^ffff80000010357c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000103581	kernel.asm	/^ffff800000103581:	e9 a0 00 00 00       	jmpq   ffff800000103626 <skipelem+0xd7>$/;"	l
ffff800000103586	kernel.asm	/^ffff800000103586:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010358a	kernel.asm	/^ffff80000010358a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff80000010358e	kernel.asm	/^ffff80000010358e:	eb 05                	jmp    ffff800000103595 <skipelem+0x46>$/;"	l
ffff800000103590	kernel.asm	/^ffff800000103590:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)$/;"	l
ffff800000103595	kernel.asm	/^ffff800000103595:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000103599	kernel.asm	/^ffff800000103599:	0f b6 00             	movzbl (%rax),%eax$/;"	l
ffff80000010359c	kernel.asm	/^ffff80000010359c:	3c 2f                	cmp    $0x2f,%al$/;"	l
ffff80000010359e	kernel.asm	/^ffff80000010359e:	74 0b                	je     ffff8000001035ab <skipelem+0x5c>$/;"	l
ffff8000001035a0	kernel.asm	/^ffff8000001035a0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff8000001035a4	kernel.asm	/^ffff8000001035a4:	0f b6 00             	movzbl (%rax),%eax$/;"	l
ffff8000001035a7	kernel.asm	/^ffff8000001035a7:	84 c0                	test   %al,%al$/;"	l
ffff8000001035a9	kernel.asm	/^ffff8000001035a9:	75 e5                	jne    ffff800000103590 <skipelem+0x41>$/;"	l
ffff8000001035ab	kernel.asm	/^ffff8000001035ab:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx$/;"	l
ffff8000001035af	kernel.asm	/^ffff8000001035af:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001035b3	kernel.asm	/^ffff8000001035b3:	48 29 c2             	sub    %rax,%rdx$/;"	l
ffff8000001035b6	kernel.asm	/^ffff8000001035b6:	48 89 d0             	mov    %rdx,%rax$/;"	l
ffff8000001035b9	kernel.asm	/^ffff8000001035b9:	89 45 f4             	mov    %eax,-0xc(%rbp)$/;"	l
ffff8000001035bc	kernel.asm	/^ffff8000001035bc:	83 7d f4 0d          	cmpl   $0xd,-0xc(%rbp)$/;"	l
ffff8000001035c0	kernel.asm	/^ffff8000001035c0:	7e 21                	jle    ffff8000001035e3 <skipelem+0x94>$/;"	l
ffff8000001035c2	kernel.asm	/^ffff8000001035c2:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx$/;"	l
ffff8000001035c6	kernel.asm	/^ffff8000001035c6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff8000001035ca	kernel.asm	/^ffff8000001035ca:	ba 0e 00 00 00       	mov    $0xe,%edx$/;"	l
ffff8000001035cf	kernel.asm	/^ffff8000001035cf:	48 89 ce             	mov    %rcx,%rsi$/;"	l
ffff8000001035d2	kernel.asm	/^ffff8000001035d2:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001035d5	kernel.asm	/^ffff8000001035d5:	48 b8 9a 7d 10 00 00 	movabs $0xffff800000107d9a,%rax$/;"	l
ffff8000001035dc	kernel.asm	/^ffff8000001035dc:	80 ff ff $/;"	l
ffff8000001035df	kernel.asm	/^ffff8000001035df:	ff d0                	callq  *%rax$/;"	l
ffff8000001035e1	kernel.asm	/^ffff8000001035e1:	eb 34                	jmp    ffff800000103617 <skipelem+0xc8>$/;"	l
ffff8000001035e3	kernel.asm	/^ffff8000001035e3:	8b 55 f4             	mov    -0xc(%rbp),%edx$/;"	l
ffff8000001035e6	kernel.asm	/^ffff8000001035e6:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx$/;"	l
ffff8000001035ea	kernel.asm	/^ffff8000001035ea:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff8000001035ee	kernel.asm	/^ffff8000001035ee:	48 89 ce             	mov    %rcx,%rsi$/;"	l
ffff8000001035f1	kernel.asm	/^ffff8000001035f1:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001035f4	kernel.asm	/^ffff8000001035f4:	48 b8 9a 7d 10 00 00 	movabs $0xffff800000107d9a,%rax$/;"	l
ffff8000001035fb	kernel.asm	/^ffff8000001035fb:	80 ff ff $/;"	l
ffff8000001035fe	kernel.asm	/^ffff8000001035fe:	ff d0                	callq  *%rax$/;"	l
ffff800000103600	kernel.asm	/^ffff800000103600:	8b 45 f4             	mov    -0xc(%rbp),%eax$/;"	l
ffff800000103603	kernel.asm	/^ffff800000103603:	48 63 d0             	movslq %eax,%rdx$/;"	l
ffff800000103606	kernel.asm	/^ffff800000103606:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff80000010360a	kernel.asm	/^ffff80000010360a:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff80000010360d	kernel.asm	/^ffff80000010360d:	c6 00 00             	movb   $0x0,(%rax)$/;"	l
ffff800000103610	kernel.asm	/^ffff800000103610:	eb 05                	jmp    ffff800000103617 <skipelem+0xc8>$/;"	l
ffff800000103612	kernel.asm	/^ffff800000103612:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)$/;"	l
ffff800000103617	kernel.asm	/^ffff800000103617:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010361b	kernel.asm	/^ffff80000010361b:	0f b6 00             	movzbl (%rax),%eax$/;"	l
ffff80000010361e	kernel.asm	/^ffff80000010361e:	3c 2f                	cmp    $0x2f,%al$/;"	l
ffff800000103620	kernel.asm	/^ffff800000103620:	74 f0                	je     ffff800000103612 <skipelem+0xc3>$/;"	l
ffff800000103622	kernel.asm	/^ffff800000103622:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000103626	kernel.asm	/^ffff800000103626:	c9                   	leaveq $/;"	l
ffff800000103627	kernel.asm	/^ffff800000103627:	c3                   	retq   $/;"	l
ffff800000103628	kernel.asm	/^ffff800000103628 <namex>:$/;"	l
ffff800000103628	kernel.asm	/^ffff800000103628:	55                   	push   %rbp$/;"	l
ffff800000103629	kernel.asm	/^ffff800000103629:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010362c	kernel.asm	/^ffff80000010362c:	48 83 ec 30          	sub    $0x30,%rsp$/;"	l
ffff800000103630	kernel.asm	/^ffff800000103630:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
ffff800000103634	kernel.asm	/^ffff800000103634:	89 75 e4             	mov    %esi,-0x1c(%rbp)$/;"	l
ffff800000103637	kernel.asm	/^ffff800000103637:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)$/;"	l
ffff80000010363b	kernel.asm	/^ffff80000010363b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010363f	kernel.asm	/^ffff80000010363f:	0f b6 00             	movzbl (%rax),%eax$/;"	l
ffff800000103642	kernel.asm	/^ffff800000103642:	3c 2f                	cmp    $0x2f,%al$/;"	l
ffff800000103644	kernel.asm	/^ffff800000103644:	75 24                	jne    ffff80000010366a <namex+0x42>$/;"	l
ffff800000103646	kernel.asm	/^ffff800000103646:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
ffff80000010364b	kernel.asm	/^ffff80000010364b:	be 01 00 00 00       	mov    $0x1,%esi$/;"	l
ffff800000103650	kernel.asm	/^ffff800000103650:	bf 01 00 00 00       	mov    $0x1,%edi$/;"	l
ffff800000103655	kernel.asm	/^ffff800000103655:	48 b8 65 26 10 00 00 	movabs $0xffff800000102665,%rax$/;"	l
ffff80000010365c	kernel.asm	/^ffff80000010365c:	80 ff ff $/;"	l
ffff80000010365f	kernel.asm	/^ffff80000010365f:	ff d0                	callq  *%rax$/;"	l
ffff800000103661	kernel.asm	/^ffff800000103661:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff800000103665	kernel.asm	/^ffff800000103665:	e9 f7 00 00 00       	jmpq   ffff800000103761 <namex+0x139>$/;"	l
ffff80000010366a	kernel.asm	/^ffff80000010366a:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000103671	kernel.asm	/^ffff800000103671:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000103675	kernel.asm	/^ffff800000103675:	48 8b 80 c8 00 00 00 	mov    0xc8(%rax),%rax$/;"	l
ffff80000010367c	kernel.asm	/^ffff80000010367c:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010367f	kernel.asm	/^ffff80000010367f:	48 b8 ce 27 10 00 00 	movabs $0xffff8000001027ce,%rax$/;"	l
ffff800000103686	kernel.asm	/^ffff800000103686:	80 ff ff $/;"	l
ffff800000103689	kernel.asm	/^ffff800000103689:	ff d0                	callq  *%rax$/;"	l
ffff80000010368b	kernel.asm	/^ffff80000010368b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff80000010368f	kernel.asm	/^ffff80000010368f:	e9 cd 00 00 00       	jmpq   ffff800000103761 <namex+0x139>$/;"	l
ffff800000103694	kernel.asm	/^ffff800000103694:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000103698	kernel.asm	/^ffff800000103698:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010369b	kernel.asm	/^ffff80000010369b:	48 b8 1d 28 10 00 00 	movabs $0xffff80000010281d,%rax$/;"	l
ffff8000001036a2	kernel.asm	/^ffff8000001036a2:	80 ff ff $/;"	l
ffff8000001036a5	kernel.asm	/^ffff8000001036a5:	ff d0                	callq  *%rax$/;"	l
ffff8000001036a7	kernel.asm	/^ffff8000001036a7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001036ab	kernel.asm	/^ffff8000001036ab:	0f b7 80 a0 00 00 00 	movzwl 0xa0(%rax),%eax$/;"	l
ffff8000001036b2	kernel.asm	/^ffff8000001036b2:	66 83 f8 01          	cmp    $0x1,%ax$/;"	l
ffff8000001036b6	kernel.asm	/^ffff8000001036b6:	74 1d                	je     ffff8000001036d5 <namex+0xad>$/;"	l
ffff8000001036b8	kernel.asm	/^ffff8000001036b8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001036bc	kernel.asm	/^ffff8000001036bc:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001036bf	kernel.asm	/^ffff8000001036bf:	48 b8 2c 2b 10 00 00 	movabs $0xffff800000102b2c,%rax$/;"	l
ffff8000001036c6	kernel.asm	/^ffff8000001036c6:	80 ff ff $/;"	l
ffff8000001036c9	kernel.asm	/^ffff8000001036c9:	ff d0                	callq  *%rax$/;"	l
ffff8000001036cb	kernel.asm	/^ffff8000001036cb:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff8000001036d0	kernel.asm	/^ffff8000001036d0:	e9 d9 00 00 00       	jmpq   ffff8000001037ae <namex+0x186>$/;"	l
ffff8000001036d5	kernel.asm	/^ffff8000001036d5:	83 7d e4 00          	cmpl   $0x0,-0x1c(%rbp)$/;"	l
ffff8000001036d9	kernel.asm	/^ffff8000001036d9:	74 27                	je     ffff800000103702 <namex+0xda>$/;"	l
ffff8000001036db	kernel.asm	/^ffff8000001036db:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff8000001036df	kernel.asm	/^ffff8000001036df:	0f b6 00             	movzbl (%rax),%eax$/;"	l
ffff8000001036e2	kernel.asm	/^ffff8000001036e2:	84 c0                	test   %al,%al$/;"	l
ffff8000001036e4	kernel.asm	/^ffff8000001036e4:	75 1c                	jne    ffff800000103702 <namex+0xda>$/;"	l
ffff8000001036e6	kernel.asm	/^ffff8000001036e6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001036ea	kernel.asm	/^ffff8000001036ea:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001036ed	kernel.asm	/^ffff8000001036ed:	48 b8 d0 29 10 00 00 	movabs $0xffff8000001029d0,%rax$/;"	l
ffff8000001036f4	kernel.asm	/^ffff8000001036f4:	80 ff ff $/;"	l
ffff8000001036f7	kernel.asm	/^ffff8000001036f7:	ff d0                	callq  *%rax$/;"	l
ffff8000001036f9	kernel.asm	/^ffff8000001036f9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001036fd	kernel.asm	/^ffff8000001036fd:	e9 ac 00 00 00       	jmpq   ffff8000001037ae <namex+0x186>$/;"	l
ffff800000103702	kernel.asm	/^ffff800000103702:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx$/;"	l
ffff800000103706	kernel.asm	/^ffff800000103706:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010370a	kernel.asm	/^ffff80000010370a:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
ffff80000010370f	kernel.asm	/^ffff80000010370f:	48 89 ce             	mov    %rcx,%rsi$/;"	l
ffff800000103712	kernel.asm	/^ffff800000103712:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000103715	kernel.asm	/^ffff800000103715:	48 b8 bd 32 10 00 00 	movabs $0xffff8000001032bd,%rax$/;"	l
ffff80000010371c	kernel.asm	/^ffff80000010371c:	80 ff ff $/;"	l
ffff80000010371f	kernel.asm	/^ffff80000010371f:	ff d0                	callq  *%rax$/;"	l
ffff800000103721	kernel.asm	/^ffff800000103721:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ffff800000103725	kernel.asm	/^ffff800000103725:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)$/;"	l
ffff80000010372a	kernel.asm	/^ffff80000010372a:	75 1a                	jne    ffff800000103746 <namex+0x11e>$/;"	l
ffff80000010372c	kernel.asm	/^ffff80000010372c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000103730	kernel.asm	/^ffff800000103730:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000103733	kernel.asm	/^ffff800000103733:	48 b8 2c 2b 10 00 00 	movabs $0xffff800000102b2c,%rax$/;"	l
ffff80000010373a	kernel.asm	/^ffff80000010373a:	80 ff ff $/;"	l
ffff80000010373d	kernel.asm	/^ffff80000010373d:	ff d0                	callq  *%rax$/;"	l
ffff80000010373f	kernel.asm	/^ffff80000010373f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000103744	kernel.asm	/^ffff800000103744:	eb 68                	jmp    ffff8000001037ae <namex+0x186>$/;"	l
ffff800000103746	kernel.asm	/^ffff800000103746:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010374a	kernel.asm	/^ffff80000010374a:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010374d	kernel.asm	/^ffff80000010374d:	48 b8 2c 2b 10 00 00 	movabs $0xffff800000102b2c,%rax$/;"	l
ffff800000103754	kernel.asm	/^ffff800000103754:	80 ff ff $/;"	l
ffff800000103757	kernel.asm	/^ffff800000103757:	ff d0                	callq  *%rax$/;"	l
ffff800000103759	kernel.asm	/^ffff800000103759:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff80000010375d	kernel.asm	/^ffff80000010375d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff800000103761	kernel.asm	/^ffff800000103761:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx$/;"	l
ffff800000103765	kernel.asm	/^ffff800000103765:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000103769	kernel.asm	/^ffff800000103769:	48 89 d6             	mov    %rdx,%rsi$/;"	l
ffff80000010376c	kernel.asm	/^ffff80000010376c:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010376f	kernel.asm	/^ffff80000010376f:	48 b8 4f 35 10 00 00 	movabs $0xffff80000010354f,%rax$/;"	l
ffff800000103776	kernel.asm	/^ffff800000103776:	80 ff ff $/;"	l
ffff800000103779	kernel.asm	/^ffff800000103779:	ff d0                	callq  *%rax$/;"	l
ffff80000010377b	kernel.asm	/^ffff80000010377b:	48 89 45 e8          	mov    %rax,-0x18(%rbp)$/;"	l
ffff80000010377f	kernel.asm	/^ffff80000010377f:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)$/;"	l
ffff800000103784	kernel.asm	/^ffff800000103784:	0f 85 0a ff ff ff    	jne    ffff800000103694 <namex+0x6c>$/;"	l
ffff80000010378a	kernel.asm	/^ffff80000010378a:	83 7d e4 00          	cmpl   $0x0,-0x1c(%rbp)$/;"	l
ffff80000010378e	kernel.asm	/^ffff80000010378e:	74 1a                	je     ffff8000001037aa <namex+0x182>$/;"	l
ffff800000103790	kernel.asm	/^ffff800000103790:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000103794	kernel.asm	/^ffff800000103794:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000103797	kernel.asm	/^ffff800000103797:	48 b8 39 2a 10 00 00 	movabs $0xffff800000102a39,%rax$/;"	l
ffff80000010379e	kernel.asm	/^ffff80000010379e:	80 ff ff $/;"	l
ffff8000001037a1	kernel.asm	/^ffff8000001037a1:	ff d0                	callq  *%rax$/;"	l
ffff8000001037a3	kernel.asm	/^ffff8000001037a3:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff8000001037a8	kernel.asm	/^ffff8000001037a8:	eb 04                	jmp    ffff8000001037ae <namex+0x186>$/;"	l
ffff8000001037aa	kernel.asm	/^ffff8000001037aa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001037ae	kernel.asm	/^ffff8000001037ae:	c9                   	leaveq $/;"	l
ffff8000001037af	kernel.asm	/^ffff8000001037af:	c3                   	retq   $/;"	l
ffff8000001037b0	kernel.asm	/^ffff8000001037b0 <namei>:$/;"	l
ffff8000001037b0	kernel.asm	/^ffff8000001037b0:	55                   	push   %rbp$/;"	l
ffff8000001037b1	kernel.asm	/^ffff8000001037b1:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff8000001037b4	kernel.asm	/^ffff8000001037b4:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ffff8000001037b8	kernel.asm	/^ffff8000001037b8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
ffff8000001037bc	kernel.asm	/^ffff8000001037bc:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx$/;"	l
ffff8000001037c0	kernel.asm	/^ffff8000001037c0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff8000001037c4	kernel.asm	/^ffff8000001037c4:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffff8000001037c9	kernel.asm	/^ffff8000001037c9:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001037cc	kernel.asm	/^ffff8000001037cc:	48 b8 28 36 10 00 00 	movabs $0xffff800000103628,%rax$/;"	l
ffff8000001037d3	kernel.asm	/^ffff8000001037d3:	80 ff ff $/;"	l
ffff8000001037d6	kernel.asm	/^ffff8000001037d6:	ff d0                	callq  *%rax$/;"	l
ffff8000001037d8	kernel.asm	/^ffff8000001037d8:	c9                   	leaveq $/;"	l
ffff8000001037d9	kernel.asm	/^ffff8000001037d9:	c3                   	retq   $/;"	l
ffff8000001037da	kernel.asm	/^ffff8000001037da <nameiparent>:$/;"	l
ffff8000001037da	kernel.asm	/^ffff8000001037da:	55                   	push   %rbp$/;"	l
ffff8000001037db	kernel.asm	/^ffff8000001037db:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff8000001037de	kernel.asm	/^ffff8000001037de:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff8000001037e2	kernel.asm	/^ffff8000001037e2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)$/;"	l
ffff8000001037e6	kernel.asm	/^ffff8000001037e6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)$/;"	l
ffff8000001037ea	kernel.asm	/^ffff8000001037ea:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
ffff8000001037ee	kernel.asm	/^ffff8000001037ee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001037f2	kernel.asm	/^ffff8000001037f2:	be 01 00 00 00       	mov    $0x1,%esi$/;"	l
ffff8000001037f7	kernel.asm	/^ffff8000001037f7:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001037fa	kernel.asm	/^ffff8000001037fa:	48 b8 28 36 10 00 00 	movabs $0xffff800000103628,%rax$/;"	l
ffff800000103801	kernel.asm	/^ffff800000103801:	80 ff ff $/;"	l
ffff800000103804	kernel.asm	/^ffff800000103804:	ff d0                	callq  *%rax$/;"	l
ffff800000103806	kernel.asm	/^ffff800000103806:	c9                   	leaveq $/;"	l
ffff800000103807	kernel.asm	/^ffff800000103807:	c3                   	retq   $/;"	l
ffff800000103808	kernel.asm	/^ffff800000103808 <inb>:$/;"	l
ffff800000103808	kernel.asm	/^ffff800000103808:	55                   	push   %rbp$/;"	l
ffff800000103809	kernel.asm	/^ffff800000103809:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010380c	kernel.asm	/^ffff80000010380c:	48 83 ec 18          	sub    $0x18,%rsp$/;"	l
ffff800000103810	kernel.asm	/^ffff800000103810:	89 f8                	mov    %edi,%eax$/;"	l
ffff800000103812	kernel.asm	/^ffff800000103812:	66 89 45 ec          	mov    %ax,-0x14(%rbp)$/;"	l
ffff800000103816	kernel.asm	/^ffff800000103816:	0f b7 45 ec          	movzwl -0x14(%rbp),%eax$/;"	l
ffff80000010381a	kernel.asm	/^ffff80000010381a:	89 c2                	mov    %eax,%edx$/;"	l
ffff80000010381c	kernel.asm	/^ffff80000010381c:	ec                   	in     (%dx),%al$/;"	l
ffff80000010381d	kernel.asm	/^ffff80000010381d:	88 45 ff             	mov    %al,-0x1(%rbp)$/;"	l
ffff800000103820	kernel.asm	/^ffff800000103820:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax$/;"	l
ffff800000103824	kernel.asm	/^ffff800000103824:	c9                   	leaveq $/;"	l
ffff800000103825	kernel.asm	/^ffff800000103825:	c3                   	retq   $/;"	l
ffff800000103826	kernel.asm	/^ffff800000103826 <insl>:$/;"	l
ffff800000103826	kernel.asm	/^ffff800000103826:	55                   	push   %rbp$/;"	l
ffff800000103827	kernel.asm	/^ffff800000103827:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010382a	kernel.asm	/^ffff80000010382a:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff80000010382e	kernel.asm	/^ffff80000010382e:	89 7d fc             	mov    %edi,-0x4(%rbp)$/;"	l
ffff800000103831	kernel.asm	/^ffff800000103831:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)$/;"	l
ffff800000103835	kernel.asm	/^ffff800000103835:	89 55 f8             	mov    %edx,-0x8(%rbp)$/;"	l
ffff800000103838	kernel.asm	/^ffff800000103838:	8b 55 fc             	mov    -0x4(%rbp),%edx$/;"	l
ffff80000010383b	kernel.asm	/^ffff80000010383b:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx$/;"	l
ffff80000010383f	kernel.asm	/^ffff80000010383f:	8b 45 f8             	mov    -0x8(%rbp),%eax$/;"	l
ffff800000103842	kernel.asm	/^ffff800000103842:	48 89 ce             	mov    %rcx,%rsi$/;"	l
ffff800000103845	kernel.asm	/^ffff800000103845:	48 89 f7             	mov    %rsi,%rdi$/;"	l
ffff800000103848	kernel.asm	/^ffff800000103848:	89 c1                	mov    %eax,%ecx$/;"	l
ffff80000010384a	kernel.asm	/^ffff80000010384a:	fc                   	cld    $/;"	l
ffff80000010384b	kernel.asm	/^ffff80000010384b:	f3 6d                	rep insl (%dx),%es:(%rdi)$/;"	l
ffff80000010384d	kernel.asm	/^ffff80000010384d:	89 c8                	mov    %ecx,%eax$/;"	l
ffff80000010384f	kernel.asm	/^ffff80000010384f:	48 89 fe             	mov    %rdi,%rsi$/;"	l
ffff800000103852	kernel.asm	/^ffff800000103852:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)$/;"	l
ffff800000103856	kernel.asm	/^ffff800000103856:	89 45 f8             	mov    %eax,-0x8(%rbp)$/;"	l
ffff800000103859	kernel.asm	/^ffff800000103859:	90                   	nop$/;"	l
ffff80000010385a	kernel.asm	/^ffff80000010385a:	c9                   	leaveq $/;"	l
ffff80000010385b	kernel.asm	/^ffff80000010385b:	c3                   	retq   $/;"	l
ffff80000010385c	kernel.asm	/^ffff80000010385c <outb>:$/;"	l
ffff80000010385c	kernel.asm	/^ffff80000010385c:	55                   	push   %rbp$/;"	l
ffff80000010385d	kernel.asm	/^ffff80000010385d:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000103860	kernel.asm	/^ffff800000103860:	48 83 ec 08          	sub    $0x8,%rsp$/;"	l
ffff800000103864	kernel.asm	/^ffff800000103864:	89 fa                	mov    %edi,%edx$/;"	l
ffff800000103866	kernel.asm	/^ffff800000103866:	89 f0                	mov    %esi,%eax$/;"	l
ffff800000103868	kernel.asm	/^ffff800000103868:	66 89 55 fc          	mov    %dx,-0x4(%rbp)$/;"	l
ffff80000010386c	kernel.asm	/^ffff80000010386c:	88 45 f8             	mov    %al,-0x8(%rbp)$/;"	l
ffff80000010386f	kernel.asm	/^ffff80000010386f:	0f b6 45 f8          	movzbl -0x8(%rbp),%eax$/;"	l
ffff800000103873	kernel.asm	/^ffff800000103873:	0f b7 55 fc          	movzwl -0x4(%rbp),%edx$/;"	l
ffff800000103877	kernel.asm	/^ffff800000103877:	ee                   	out    %al,(%dx)$/;"	l
ffff800000103878	kernel.asm	/^ffff800000103878:	90                   	nop$/;"	l
ffff800000103879	kernel.asm	/^ffff800000103879:	c9                   	leaveq $/;"	l
ffff80000010387a	kernel.asm	/^ffff80000010387a:	c3                   	retq   $/;"	l
ffff80000010387b	kernel.asm	/^ffff80000010387b <outsl>:$/;"	l
ffff80000010387b	kernel.asm	/^ffff80000010387b:	55                   	push   %rbp$/;"	l
ffff80000010387c	kernel.asm	/^ffff80000010387c:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010387f	kernel.asm	/^ffff80000010387f:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff800000103883	kernel.asm	/^ffff800000103883:	89 7d fc             	mov    %edi,-0x4(%rbp)$/;"	l
ffff800000103886	kernel.asm	/^ffff800000103886:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)$/;"	l
ffff80000010388a	kernel.asm	/^ffff80000010388a:	89 55 f8             	mov    %edx,-0x8(%rbp)$/;"	l
ffff80000010388d	kernel.asm	/^ffff80000010388d:	8b 55 fc             	mov    -0x4(%rbp),%edx$/;"	l
ffff800000103890	kernel.asm	/^ffff800000103890:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx$/;"	l
ffff800000103894	kernel.asm	/^ffff800000103894:	8b 45 f8             	mov    -0x8(%rbp),%eax$/;"	l
ffff800000103897	kernel.asm	/^ffff800000103897:	48 89 ce             	mov    %rcx,%rsi$/;"	l
ffff80000010389a	kernel.asm	/^ffff80000010389a:	89 c1                	mov    %eax,%ecx$/;"	l
ffff80000010389c	kernel.asm	/^ffff80000010389c:	fc                   	cld    $/;"	l
ffff80000010389d	kernel.asm	/^ffff80000010389d:	f3 6f                	rep outsl %ds:(%rsi),(%dx)$/;"	l
ffff80000010389f	kernel.asm	/^ffff80000010389f:	89 c8                	mov    %ecx,%eax$/;"	l
ffff8000001038a1	kernel.asm	/^ffff8000001038a1:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)$/;"	l
ffff8000001038a5	kernel.asm	/^ffff8000001038a5:	89 45 f8             	mov    %eax,-0x8(%rbp)$/;"	l
ffff8000001038a8	kernel.asm	/^ffff8000001038a8:	90                   	nop$/;"	l
ffff8000001038a9	kernel.asm	/^ffff8000001038a9:	c9                   	leaveq $/;"	l
ffff8000001038aa	kernel.asm	/^ffff8000001038aa:	c3                   	retq   $/;"	l
ffff8000001038ab	kernel.asm	/^ffff8000001038ab <idewait>:$/;"	l
ffff8000001038ab	kernel.asm	/^ffff8000001038ab:	55                   	push   %rbp$/;"	l
ffff8000001038ac	kernel.asm	/^ffff8000001038ac:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff8000001038af	kernel.asm	/^ffff8000001038af:	48 83 ec 18          	sub    $0x18,%rsp$/;"	l
ffff8000001038b3	kernel.asm	/^ffff8000001038b3:	89 7d ec             	mov    %edi,-0x14(%rbp)$/;"	l
ffff8000001038b6	kernel.asm	/^ffff8000001038b6:	90                   	nop$/;"	l
ffff8000001038b7	kernel.asm	/^ffff8000001038b7:	bf f7 01 00 00       	mov    $0x1f7,%edi$/;"	l
ffff8000001038bc	kernel.asm	/^ffff8000001038bc:	48 b8 08 38 10 00 00 	movabs $0xffff800000103808,%rax$/;"	l
ffff8000001038c3	kernel.asm	/^ffff8000001038c3:	80 ff ff $/;"	l
ffff8000001038c6	kernel.asm	/^ffff8000001038c6:	ff d0                	callq  *%rax$/;"	l
ffff8000001038c8	kernel.asm	/^ffff8000001038c8:	0f b6 c0             	movzbl %al,%eax$/;"	l
ffff8000001038cb	kernel.asm	/^ffff8000001038cb:	89 45 fc             	mov    %eax,-0x4(%rbp)$/;"	l
ffff8000001038ce	kernel.asm	/^ffff8000001038ce:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff8000001038d1	kernel.asm	/^ffff8000001038d1:	25 c0 00 00 00       	and    $0xc0,%eax$/;"	l
ffff8000001038d6	kernel.asm	/^ffff8000001038d6:	83 f8 40             	cmp    $0x40,%eax$/;"	l
ffff8000001038d9	kernel.asm	/^ffff8000001038d9:	75 dc                	jne    ffff8000001038b7 <idewait+0xc>$/;"	l
ffff8000001038db	kernel.asm	/^ffff8000001038db:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)$/;"	l
ffff8000001038df	kernel.asm	/^ffff8000001038df:	74 11                	je     ffff8000001038f2 <idewait+0x47>$/;"	l
ffff8000001038e1	kernel.asm	/^ffff8000001038e1:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff8000001038e4	kernel.asm	/^ffff8000001038e4:	83 e0 21             	and    $0x21,%eax$/;"	l
ffff8000001038e7	kernel.asm	/^ffff8000001038e7:	85 c0                	test   %eax,%eax$/;"	l
ffff8000001038e9	kernel.asm	/^ffff8000001038e9:	74 07                	je     ffff8000001038f2 <idewait+0x47>$/;"	l
ffff8000001038eb	kernel.asm	/^ffff8000001038eb:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff8000001038f0	kernel.asm	/^ffff8000001038f0:	eb 05                	jmp    ffff8000001038f7 <idewait+0x4c>$/;"	l
ffff8000001038f2	kernel.asm	/^ffff8000001038f2:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff8000001038f7	kernel.asm	/^ffff8000001038f7:	c9                   	leaveq $/;"	l
ffff8000001038f8	kernel.asm	/^ffff8000001038f8:	c3                   	retq   $/;"	l
ffff8000001038f9	kernel.asm	/^ffff8000001038f9 <ideinit>:$/;"	l
ffff8000001038f9	kernel.asm	/^ffff8000001038f9:	55                   	push   %rbp$/;"	l
ffff8000001038fa	kernel.asm	/^ffff8000001038fa:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff8000001038fd	kernel.asm	/^ffff8000001038fd:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff800000103901	kernel.asm	/^ffff800000103901:	48 be 62 c3 10 00 00 	movabs $0xffff80000010c362,%rsi$/;"	l
ffff800000103908	kernel.asm	/^ffff800000103908:	80 ff ff $/;"	l
ffff80000010390b	kernel.asm	/^ffff80000010390b:	48 bf 60 82 11 00 00 	movabs $0xffff800000118260,%rdi$/;"	l
ffff800000103912	kernel.asm	/^ffff800000103912:	80 ff ff $/;"	l
ffff800000103915	kernel.asm	/^ffff800000103915:	48 b8 cc 78 10 00 00 	movabs $0xffff8000001078cc,%rax$/;"	l
ffff80000010391c	kernel.asm	/^ffff80000010391c:	80 ff ff $/;"	l
ffff80000010391f	kernel.asm	/^ffff80000010391f:	ff d0                	callq  *%rax$/;"	l
ffff800000103921	kernel.asm	/^ffff800000103921:	48 b8 40 8c 11 00 00 	movabs $0xffff800000118c40,%rax$/;"	l
ffff800000103928	kernel.asm	/^ffff800000103928:	80 ff ff $/;"	l
ffff80000010392b	kernel.asm	/^ffff80000010392b:	8b 00                	mov    (%rax),%eax$/;"	l
ffff80000010392d	kernel.asm	/^ffff80000010392d:	83 e8 01             	sub    $0x1,%eax$/;"	l
ffff800000103930	kernel.asm	/^ffff800000103930:	89 c6                	mov    %eax,%esi$/;"	l
ffff800000103932	kernel.asm	/^ffff800000103932:	bf 0e 00 00 00       	mov    $0xe,%edi$/;"	l
ffff800000103937	kernel.asm	/^ffff800000103937:	48 b8 5b 3f 10 00 00 	movabs $0xffff800000103f5b,%rax$/;"	l
ffff80000010393e	kernel.asm	/^ffff80000010393e:	80 ff ff $/;"	l
ffff800000103941	kernel.asm	/^ffff800000103941:	ff d0                	callq  *%rax$/;"	l
ffff800000103943	kernel.asm	/^ffff800000103943:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
ffff800000103948	kernel.asm	/^ffff800000103948:	48 b8 ab 38 10 00 00 	movabs $0xffff8000001038ab,%rax$/;"	l
ffff80000010394f	kernel.asm	/^ffff80000010394f:	80 ff ff $/;"	l
ffff800000103952	kernel.asm	/^ffff800000103952:	ff d0                	callq  *%rax$/;"	l
ffff800000103954	kernel.asm	/^ffff800000103954:	be f0 00 00 00       	mov    $0xf0,%esi$/;"	l
ffff800000103959	kernel.asm	/^ffff800000103959:	bf f6 01 00 00       	mov    $0x1f6,%edi$/;"	l
ffff80000010395e	kernel.asm	/^ffff80000010395e:	48 b8 5c 38 10 00 00 	movabs $0xffff80000010385c,%rax$/;"	l
ffff800000103965	kernel.asm	/^ffff800000103965:	80 ff ff $/;"	l
ffff800000103968	kernel.asm	/^ffff800000103968:	ff d0                	callq  *%rax$/;"	l
ffff80000010396a	kernel.asm	/^ffff80000010396a:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)$/;"	l
ffff800000103971	kernel.asm	/^ffff800000103971:	eb 2b                	jmp    ffff80000010399e <ideinit+0xa5>$/;"	l
ffff800000103973	kernel.asm	/^ffff800000103973:	bf f7 01 00 00       	mov    $0x1f7,%edi$/;"	l
ffff800000103978	kernel.asm	/^ffff800000103978:	48 b8 08 38 10 00 00 	movabs $0xffff800000103808,%rax$/;"	l
ffff80000010397f	kernel.asm	/^ffff80000010397f:	80 ff ff $/;"	l
ffff800000103982	kernel.asm	/^ffff800000103982:	ff d0                	callq  *%rax$/;"	l
ffff800000103984	kernel.asm	/^ffff800000103984:	84 c0                	test   %al,%al$/;"	l
ffff800000103986	kernel.asm	/^ffff800000103986:	74 12                	je     ffff80000010399a <ideinit+0xa1>$/;"	l
ffff800000103988	kernel.asm	/^ffff800000103988:	48 b8 d0 82 11 00 00 	movabs $0xffff8000001182d0,%rax$/;"	l
ffff80000010398f	kernel.asm	/^ffff80000010398f:	80 ff ff $/;"	l
ffff800000103992	kernel.asm	/^ffff800000103992:	c7 00 01 00 00 00    	movl   $0x1,(%rax)$/;"	l
ffff800000103998	kernel.asm	/^ffff800000103998:	eb 0d                	jmp    ffff8000001039a7 <ideinit+0xae>$/;"	l
ffff80000010399a	kernel.asm	/^ffff80000010399a:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)$/;"	l
ffff80000010399e	kernel.asm	/^ffff80000010399e:	81 7d fc e7 03 00 00 	cmpl   $0x3e7,-0x4(%rbp)$/;"	l
ffff8000001039a5	kernel.asm	/^ffff8000001039a5:	7e cc                	jle    ffff800000103973 <ideinit+0x7a>$/;"	l
ffff8000001039a7	kernel.asm	/^ffff8000001039a7:	be e0 00 00 00       	mov    $0xe0,%esi$/;"	l
ffff8000001039ac	kernel.asm	/^ffff8000001039ac:	bf f6 01 00 00       	mov    $0x1f6,%edi$/;"	l
ffff8000001039b1	kernel.asm	/^ffff8000001039b1:	48 b8 5c 38 10 00 00 	movabs $0xffff80000010385c,%rax$/;"	l
ffff8000001039b8	kernel.asm	/^ffff8000001039b8:	80 ff ff $/;"	l
ffff8000001039bb	kernel.asm	/^ffff8000001039bb:	ff d0                	callq  *%rax$/;"	l
ffff8000001039bd	kernel.asm	/^ffff8000001039bd:	90                   	nop$/;"	l
ffff8000001039be	kernel.asm	/^ffff8000001039be:	c9                   	leaveq $/;"	l
ffff8000001039bf	kernel.asm	/^ffff8000001039bf:	c3                   	retq   $/;"	l
ffff8000001039c0	kernel.asm	/^ffff8000001039c0 <idestart>:$/;"	l
ffff8000001039c0	kernel.asm	/^ffff8000001039c0:	55                   	push   %rbp$/;"	l
ffff8000001039c1	kernel.asm	/^ffff8000001039c1:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff8000001039c4	kernel.asm	/^ffff8000001039c4:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ffff8000001039c8	kernel.asm	/^ffff8000001039c8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
ffff8000001039cc	kernel.asm	/^ffff8000001039cc:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)$/;"	l
ffff8000001039d1	kernel.asm	/^ffff8000001039d1:	75 16                	jne    ffff8000001039e9 <idestart+0x29>$/;"	l
ffff8000001039d3	kernel.asm	/^ffff8000001039d3:	48 bf 66 c3 10 00 00 	movabs $0xffff80000010c366,%rdi$/;"	l
ffff8000001039da	kernel.asm	/^ffff8000001039da:	80 ff ff $/;"	l
ffff8000001039dd	kernel.asm	/^ffff8000001039dd:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff8000001039e4	kernel.asm	/^ffff8000001039e4:	80 ff ff $/;"	l
ffff8000001039e7	kernel.asm	/^ffff8000001039e7:	ff d0                	callq  *%rax$/;"	l
ffff8000001039e9	kernel.asm	/^ffff8000001039e9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff8000001039ed	kernel.asm	/^ffff8000001039ed:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
ffff8000001039f0	kernel.asm	/^ffff8000001039f0:	3d e7 03 00 00       	cmp    $0x3e7,%eax$/;"	l
ffff8000001039f5	kernel.asm	/^ffff8000001039f5:	76 16                	jbe    ffff800000103a0d <idestart+0x4d>$/;"	l
ffff8000001039f7	kernel.asm	/^ffff8000001039f7:	48 bf 6f c3 10 00 00 	movabs $0xffff80000010c36f,%rdi$/;"	l
ffff8000001039fe	kernel.asm	/^ffff8000001039fe:	80 ff ff $/;"	l
ffff800000103a01	kernel.asm	/^ffff800000103a01:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff800000103a08	kernel.asm	/^ffff800000103a08:	80 ff ff $/;"	l
ffff800000103a0b	kernel.asm	/^ffff800000103a0b:	ff d0                	callq  *%rax$/;"	l
ffff800000103a0d	kernel.asm	/^ffff800000103a0d:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%rbp)$/;"	l
ffff800000103a14	kernel.asm	/^ffff800000103a14:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000103a18	kernel.asm	/^ffff800000103a18:	8b 50 08             	mov    0x8(%rax),%edx$/;"	l
ffff800000103a1b	kernel.asm	/^ffff800000103a1b:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff800000103a1e	kernel.asm	/^ffff800000103a1e:	0f af c2             	imul   %edx,%eax$/;"	l
ffff800000103a21	kernel.asm	/^ffff800000103a21:	89 45 f8             	mov    %eax,-0x8(%rbp)$/;"	l
ffff800000103a24	kernel.asm	/^ffff800000103a24:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)$/;"	l
ffff800000103a28	kernel.asm	/^ffff800000103a28:	75 07                	jne    ffff800000103a31 <idestart+0x71>$/;"	l
ffff800000103a2a	kernel.asm	/^ffff800000103a2a:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
ffff800000103a2f	kernel.asm	/^ffff800000103a2f:	eb 05                	jmp    ffff800000103a36 <idestart+0x76>$/;"	l
ffff800000103a31	kernel.asm	/^ffff800000103a31:	b8 c4 00 00 00       	mov    $0xc4,%eax$/;"	l
ffff800000103a36	kernel.asm	/^ffff800000103a36:	89 45 f4             	mov    %eax,-0xc(%rbp)$/;"	l
ffff800000103a39	kernel.asm	/^ffff800000103a39:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)$/;"	l
ffff800000103a3d	kernel.asm	/^ffff800000103a3d:	75 07                	jne    ffff800000103a46 <idestart+0x86>$/;"	l
ffff800000103a3f	kernel.asm	/^ffff800000103a3f:	b8 30 00 00 00       	mov    $0x30,%eax$/;"	l
ffff800000103a44	kernel.asm	/^ffff800000103a44:	eb 05                	jmp    ffff800000103a4b <idestart+0x8b>$/;"	l
ffff800000103a46	kernel.asm	/^ffff800000103a46:	b8 c5 00 00 00       	mov    $0xc5,%eax$/;"	l
ffff800000103a4b	kernel.asm	/^ffff800000103a4b:	89 45 f0             	mov    %eax,-0x10(%rbp)$/;"	l
ffff800000103a4e	kernel.asm	/^ffff800000103a4e:	83 7d fc 07          	cmpl   $0x7,-0x4(%rbp)$/;"	l
ffff800000103a52	kernel.asm	/^ffff800000103a52:	7e 16                	jle    ffff800000103a6a <idestart+0xaa>$/;"	l
ffff800000103a54	kernel.asm	/^ffff800000103a54:	48 bf 66 c3 10 00 00 	movabs $0xffff80000010c366,%rdi$/;"	l
ffff800000103a5b	kernel.asm	/^ffff800000103a5b:	80 ff ff $/;"	l
ffff800000103a5e	kernel.asm	/^ffff800000103a5e:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff800000103a65	kernel.asm	/^ffff800000103a65:	80 ff ff $/;"	l
ffff800000103a68	kernel.asm	/^ffff800000103a68:	ff d0                	callq  *%rax$/;"	l
ffff800000103a6a	kernel.asm	/^ffff800000103a6a:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
ffff800000103a6f	kernel.asm	/^ffff800000103a6f:	48 b8 ab 38 10 00 00 	movabs $0xffff8000001038ab,%rax$/;"	l
ffff800000103a76	kernel.asm	/^ffff800000103a76:	80 ff ff $/;"	l
ffff800000103a79	kernel.asm	/^ffff800000103a79:	ff d0                	callq  *%rax$/;"	l
ffff800000103a7b	kernel.asm	/^ffff800000103a7b:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffff800000103a80	kernel.asm	/^ffff800000103a80:	bf f6 03 00 00       	mov    $0x3f6,%edi$/;"	l
ffff800000103a85	kernel.asm	/^ffff800000103a85:	48 b8 5c 38 10 00 00 	movabs $0xffff80000010385c,%rax$/;"	l
ffff800000103a8c	kernel.asm	/^ffff800000103a8c:	80 ff ff $/;"	l
ffff800000103a8f	kernel.asm	/^ffff800000103a8f:	ff d0                	callq  *%rax$/;"	l
ffff800000103a91	kernel.asm	/^ffff800000103a91:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff800000103a94	kernel.asm	/^ffff800000103a94:	0f b6 c0             	movzbl %al,%eax$/;"	l
ffff800000103a97	kernel.asm	/^ffff800000103a97:	89 c6                	mov    %eax,%esi$/;"	l
ffff800000103a99	kernel.asm	/^ffff800000103a99:	bf f2 01 00 00       	mov    $0x1f2,%edi$/;"	l
ffff800000103a9e	kernel.asm	/^ffff800000103a9e:	48 b8 5c 38 10 00 00 	movabs $0xffff80000010385c,%rax$/;"	l
ffff800000103aa5	kernel.asm	/^ffff800000103aa5:	80 ff ff $/;"	l
ffff800000103aa8	kernel.asm	/^ffff800000103aa8:	ff d0                	callq  *%rax$/;"	l
ffff800000103aaa	kernel.asm	/^ffff800000103aaa:	8b 45 f8             	mov    -0x8(%rbp),%eax$/;"	l
ffff800000103aad	kernel.asm	/^ffff800000103aad:	0f b6 c0             	movzbl %al,%eax$/;"	l
ffff800000103ab0	kernel.asm	/^ffff800000103ab0:	89 c6                	mov    %eax,%esi$/;"	l
ffff800000103ab2	kernel.asm	/^ffff800000103ab2:	bf f3 01 00 00       	mov    $0x1f3,%edi$/;"	l
ffff800000103ab7	kernel.asm	/^ffff800000103ab7:	48 b8 5c 38 10 00 00 	movabs $0xffff80000010385c,%rax$/;"	l
ffff800000103abe	kernel.asm	/^ffff800000103abe:	80 ff ff $/;"	l
ffff800000103ac1	kernel.asm	/^ffff800000103ac1:	ff d0                	callq  *%rax$/;"	l
ffff800000103ac3	kernel.asm	/^ffff800000103ac3:	8b 45 f8             	mov    -0x8(%rbp),%eax$/;"	l
ffff800000103ac6	kernel.asm	/^ffff800000103ac6:	c1 f8 08             	sar    $0x8,%eax$/;"	l
ffff800000103ac9	kernel.asm	/^ffff800000103ac9:	0f b6 c0             	movzbl %al,%eax$/;"	l
ffff800000103acc	kernel.asm	/^ffff800000103acc:	89 c6                	mov    %eax,%esi$/;"	l
ffff800000103ace	kernel.asm	/^ffff800000103ace:	bf f4 01 00 00       	mov    $0x1f4,%edi$/;"	l
ffff800000103ad3	kernel.asm	/^ffff800000103ad3:	48 b8 5c 38 10 00 00 	movabs $0xffff80000010385c,%rax$/;"	l
ffff800000103ada	kernel.asm	/^ffff800000103ada:	80 ff ff $/;"	l
ffff800000103add	kernel.asm	/^ffff800000103add:	ff d0                	callq  *%rax$/;"	l
ffff800000103adf	kernel.asm	/^ffff800000103adf:	8b 45 f8             	mov    -0x8(%rbp),%eax$/;"	l
ffff800000103ae2	kernel.asm	/^ffff800000103ae2:	c1 f8 10             	sar    $0x10,%eax$/;"	l
ffff800000103ae5	kernel.asm	/^ffff800000103ae5:	0f b6 c0             	movzbl %al,%eax$/;"	l
ffff800000103ae8	kernel.asm	/^ffff800000103ae8:	89 c6                	mov    %eax,%esi$/;"	l
ffff800000103aea	kernel.asm	/^ffff800000103aea:	bf f5 01 00 00       	mov    $0x1f5,%edi$/;"	l
ffff800000103aef	kernel.asm	/^ffff800000103aef:	48 b8 5c 38 10 00 00 	movabs $0xffff80000010385c,%rax$/;"	l
ffff800000103af6	kernel.asm	/^ffff800000103af6:	80 ff ff $/;"	l
ffff800000103af9	kernel.asm	/^ffff800000103af9:	ff d0                	callq  *%rax$/;"	l
ffff800000103afb	kernel.asm	/^ffff800000103afb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000103aff	kernel.asm	/^ffff800000103aff:	8b 40 04             	mov    0x4(%rax),%eax$/;"	l
ffff800000103b02	kernel.asm	/^ffff800000103b02:	83 e0 01             	and    $0x1,%eax$/;"	l
ffff800000103b05	kernel.asm	/^ffff800000103b05:	c1 e0 04             	shl    $0x4,%eax$/;"	l
ffff800000103b08	kernel.asm	/^ffff800000103b08:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000103b0a	kernel.asm	/^ffff800000103b0a:	8b 45 f8             	mov    -0x8(%rbp),%eax$/;"	l
ffff800000103b0d	kernel.asm	/^ffff800000103b0d:	c1 f8 18             	sar    $0x18,%eax$/;"	l
ffff800000103b10	kernel.asm	/^ffff800000103b10:	83 e0 0f             	and    $0xf,%eax$/;"	l
ffff800000103b13	kernel.asm	/^ffff800000103b13:	09 d0                	or     %edx,%eax$/;"	l
ffff800000103b15	kernel.asm	/^ffff800000103b15:	83 c8 e0             	or     $0xffffffe0,%eax$/;"	l
ffff800000103b18	kernel.asm	/^ffff800000103b18:	0f b6 c0             	movzbl %al,%eax$/;"	l
ffff800000103b1b	kernel.asm	/^ffff800000103b1b:	89 c6                	mov    %eax,%esi$/;"	l
ffff800000103b1d	kernel.asm	/^ffff800000103b1d:	bf f6 01 00 00       	mov    $0x1f6,%edi$/;"	l
ffff800000103b22	kernel.asm	/^ffff800000103b22:	48 b8 5c 38 10 00 00 	movabs $0xffff80000010385c,%rax$/;"	l
ffff800000103b29	kernel.asm	/^ffff800000103b29:	80 ff ff $/;"	l
ffff800000103b2c	kernel.asm	/^ffff800000103b2c:	ff d0                	callq  *%rax$/;"	l
ffff800000103b2e	kernel.asm	/^ffff800000103b2e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000103b32	kernel.asm	/^ffff800000103b32:	8b 00                	mov    (%rax),%eax$/;"	l
ffff800000103b34	kernel.asm	/^ffff800000103b34:	83 e0 04             	and    $0x4,%eax$/;"	l
ffff800000103b37	kernel.asm	/^ffff800000103b37:	85 c0                	test   %eax,%eax$/;"	l
ffff800000103b39	kernel.asm	/^ffff800000103b39:	74 3e                	je     ffff800000103b79 <idestart+0x1b9>$/;"	l
ffff800000103b3b	kernel.asm	/^ffff800000103b3b:	8b 45 f0             	mov    -0x10(%rbp),%eax$/;"	l
ffff800000103b3e	kernel.asm	/^ffff800000103b3e:	0f b6 c0             	movzbl %al,%eax$/;"	l
ffff800000103b41	kernel.asm	/^ffff800000103b41:	89 c6                	mov    %eax,%esi$/;"	l
ffff800000103b43	kernel.asm	/^ffff800000103b43:	bf f7 01 00 00       	mov    $0x1f7,%edi$/;"	l
ffff800000103b48	kernel.asm	/^ffff800000103b48:	48 b8 5c 38 10 00 00 	movabs $0xffff80000010385c,%rax$/;"	l
ffff800000103b4f	kernel.asm	/^ffff800000103b4f:	80 ff ff $/;"	l
ffff800000103b52	kernel.asm	/^ffff800000103b52:	ff d0                	callq  *%rax$/;"	l
ffff800000103b54	kernel.asm	/^ffff800000103b54:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000103b58	kernel.asm	/^ffff800000103b58:	48 05 b0 00 00 00    	add    $0xb0,%rax$/;"	l
ffff800000103b5e	kernel.asm	/^ffff800000103b5e:	ba 80 00 00 00       	mov    $0x80,%edx$/;"	l
ffff800000103b63	kernel.asm	/^ffff800000103b63:	48 89 c6             	mov    %rax,%rsi$/;"	l
ffff800000103b66	kernel.asm	/^ffff800000103b66:	bf f0 01 00 00       	mov    $0x1f0,%edi$/;"	l
ffff800000103b6b	kernel.asm	/^ffff800000103b6b:	48 b8 7b 38 10 00 00 	movabs $0xffff80000010387b,%rax$/;"	l
ffff800000103b72	kernel.asm	/^ffff800000103b72:	80 ff ff $/;"	l
ffff800000103b75	kernel.asm	/^ffff800000103b75:	ff d0                	callq  *%rax$/;"	l
ffff800000103b77	kernel.asm	/^ffff800000103b77:	eb 19                	jmp    ffff800000103b92 <idestart+0x1d2>$/;"	l
ffff800000103b79	kernel.asm	/^ffff800000103b79:	8b 45 f4             	mov    -0xc(%rbp),%eax$/;"	l
ffff800000103b7c	kernel.asm	/^ffff800000103b7c:	0f b6 c0             	movzbl %al,%eax$/;"	l
ffff800000103b7f	kernel.asm	/^ffff800000103b7f:	89 c6                	mov    %eax,%esi$/;"	l
ffff800000103b81	kernel.asm	/^ffff800000103b81:	bf f7 01 00 00       	mov    $0x1f7,%edi$/;"	l
ffff800000103b86	kernel.asm	/^ffff800000103b86:	48 b8 5c 38 10 00 00 	movabs $0xffff80000010385c,%rax$/;"	l
ffff800000103b8d	kernel.asm	/^ffff800000103b8d:	80 ff ff $/;"	l
ffff800000103b90	kernel.asm	/^ffff800000103b90:	ff d0                	callq  *%rax$/;"	l
ffff800000103b92	kernel.asm	/^ffff800000103b92:	90                   	nop$/;"	l
ffff800000103b93	kernel.asm	/^ffff800000103b93:	c9                   	leaveq $/;"	l
ffff800000103b94	kernel.asm	/^ffff800000103b94:	c3                   	retq   $/;"	l
ffff800000103b95	kernel.asm	/^ffff800000103b95 <ideintr>:$/;"	l
ffff800000103b95	kernel.asm	/^ffff800000103b95:	55                   	push   %rbp$/;"	l
ffff800000103b96	kernel.asm	/^ffff800000103b96:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000103b99	kernel.asm	/^ffff800000103b99:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff800000103b9d	kernel.asm	/^ffff800000103b9d:	48 bf 60 82 11 00 00 	movabs $0xffff800000118260,%rdi$/;"	l
ffff800000103ba4	kernel.asm	/^ffff800000103ba4:	80 ff ff $/;"	l
ffff800000103ba7	kernel.asm	/^ffff800000103ba7:	48 b8 01 79 10 00 00 	movabs $0xffff800000107901,%rax$/;"	l
ffff800000103bae	kernel.asm	/^ffff800000103bae:	80 ff ff $/;"	l
ffff800000103bb1	kernel.asm	/^ffff800000103bb1:	ff d0                	callq  *%rax$/;"	l
ffff800000103bb3	kernel.asm	/^ffff800000103bb3:	48 b8 c8 82 11 00 00 	movabs $0xffff8000001182c8,%rax$/;"	l
ffff800000103bba	kernel.asm	/^ffff800000103bba:	80 ff ff $/;"	l
ffff800000103bbd	kernel.asm	/^ffff800000103bbd:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff800000103bc0	kernel.asm	/^ffff800000103bc0:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff800000103bc4	kernel.asm	/^ffff800000103bc4:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)$/;"	l
ffff800000103bc9	kernel.asm	/^ffff800000103bc9:	75 1b                	jne    ffff800000103be6 <ideintr+0x51>$/;"	l
ffff800000103bcb	kernel.asm	/^ffff800000103bcb:	48 bf 60 82 11 00 00 	movabs $0xffff800000118260,%rdi$/;"	l
ffff800000103bd2	kernel.asm	/^ffff800000103bd2:	80 ff ff $/;"	l
ffff800000103bd5	kernel.asm	/^ffff800000103bd5:	48 b8 9a 79 10 00 00 	movabs $0xffff80000010799a,%rax$/;"	l
ffff800000103bdc	kernel.asm	/^ffff800000103bdc:	80 ff ff $/;"	l
ffff800000103bdf	kernel.asm	/^ffff800000103bdf:	ff d0                	callq  *%rax$/;"	l
ffff800000103be1	kernel.asm	/^ffff800000103be1:	e9 d6 00 00 00       	jmpq   ffff800000103cbc <ideintr+0x127>$/;"	l
ffff800000103be6	kernel.asm	/^ffff800000103be6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000103bea	kernel.asm	/^ffff800000103bea:	48 8b 90 a8 00 00 00 	mov    0xa8(%rax),%rdx$/;"	l
ffff800000103bf1	kernel.asm	/^ffff800000103bf1:	48 b8 c8 82 11 00 00 	movabs $0xffff8000001182c8,%rax$/;"	l
ffff800000103bf8	kernel.asm	/^ffff800000103bf8:	80 ff ff $/;"	l
ffff800000103bfb	kernel.asm	/^ffff800000103bfb:	48 89 10             	mov    %rdx,(%rax)$/;"	l
ffff800000103bfe	kernel.asm	/^ffff800000103bfe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000103c02	kernel.asm	/^ffff800000103c02:	8b 00                	mov    (%rax),%eax$/;"	l
ffff800000103c04	kernel.asm	/^ffff800000103c04:	83 e0 04             	and    $0x4,%eax$/;"	l
ffff800000103c07	kernel.asm	/^ffff800000103c07:	85 c0                	test   %eax,%eax$/;"	l
ffff800000103c09	kernel.asm	/^ffff800000103c09:	75 38                	jne    ffff800000103c43 <ideintr+0xae>$/;"	l
ffff800000103c0b	kernel.asm	/^ffff800000103c0b:	bf 01 00 00 00       	mov    $0x1,%edi$/;"	l
ffff800000103c10	kernel.asm	/^ffff800000103c10:	48 b8 ab 38 10 00 00 	movabs $0xffff8000001038ab,%rax$/;"	l
ffff800000103c17	kernel.asm	/^ffff800000103c17:	80 ff ff $/;"	l
ffff800000103c1a	kernel.asm	/^ffff800000103c1a:	ff d0                	callq  *%rax$/;"	l
ffff800000103c1c	kernel.asm	/^ffff800000103c1c:	85 c0                	test   %eax,%eax$/;"	l
ffff800000103c1e	kernel.asm	/^ffff800000103c1e:	78 23                	js     ffff800000103c43 <ideintr+0xae>$/;"	l
ffff800000103c20	kernel.asm	/^ffff800000103c20:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000103c24	kernel.asm	/^ffff800000103c24:	48 05 b0 00 00 00    	add    $0xb0,%rax$/;"	l
ffff800000103c2a	kernel.asm	/^ffff800000103c2a:	ba 80 00 00 00       	mov    $0x80,%edx$/;"	l
ffff800000103c2f	kernel.asm	/^ffff800000103c2f:	48 89 c6             	mov    %rax,%rsi$/;"	l
ffff800000103c32	kernel.asm	/^ffff800000103c32:	bf f0 01 00 00       	mov    $0x1f0,%edi$/;"	l
ffff800000103c37	kernel.asm	/^ffff800000103c37:	48 b8 26 38 10 00 00 	movabs $0xffff800000103826,%rax$/;"	l
ffff800000103c3e	kernel.asm	/^ffff800000103c3e:	80 ff ff $/;"	l
ffff800000103c41	kernel.asm	/^ffff800000103c41:	ff d0                	callq  *%rax$/;"	l
ffff800000103c43	kernel.asm	/^ffff800000103c43:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000103c47	kernel.asm	/^ffff800000103c47:	8b 00                	mov    (%rax),%eax$/;"	l
ffff800000103c49	kernel.asm	/^ffff800000103c49:	83 c8 02             	or     $0x2,%eax$/;"	l
ffff800000103c4c	kernel.asm	/^ffff800000103c4c:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000103c4e	kernel.asm	/^ffff800000103c4e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000103c52	kernel.asm	/^ffff800000103c52:	89 10                	mov    %edx,(%rax)$/;"	l
ffff800000103c54	kernel.asm	/^ffff800000103c54:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000103c58	kernel.asm	/^ffff800000103c58:	8b 00                	mov    (%rax),%eax$/;"	l
ffff800000103c5a	kernel.asm	/^ffff800000103c5a:	83 e0 fb             	and    $0xfffffffb,%eax$/;"	l
ffff800000103c5d	kernel.asm	/^ffff800000103c5d:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000103c5f	kernel.asm	/^ffff800000103c5f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000103c63	kernel.asm	/^ffff800000103c63:	89 10                	mov    %edx,(%rax)$/;"	l
ffff800000103c65	kernel.asm	/^ffff800000103c65:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000103c69	kernel.asm	/^ffff800000103c69:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000103c6c	kernel.asm	/^ffff800000103c6c:	48 b8 19 6f 10 00 00 	movabs $0xffff800000106f19,%rax$/;"	l
ffff800000103c73	kernel.asm	/^ffff800000103c73:	80 ff ff $/;"	l
ffff800000103c76	kernel.asm	/^ffff800000103c76:	ff d0                	callq  *%rax$/;"	l
ffff800000103c78	kernel.asm	/^ffff800000103c78:	48 b8 c8 82 11 00 00 	movabs $0xffff8000001182c8,%rax$/;"	l
ffff800000103c7f	kernel.asm	/^ffff800000103c7f:	80 ff ff $/;"	l
ffff800000103c82	kernel.asm	/^ffff800000103c82:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff800000103c85	kernel.asm	/^ffff800000103c85:	48 85 c0             	test   %rax,%rax$/;"	l
ffff800000103c88	kernel.asm	/^ffff800000103c88:	74 1c                	je     ffff800000103ca6 <ideintr+0x111>$/;"	l
ffff800000103c8a	kernel.asm	/^ffff800000103c8a:	48 b8 c8 82 11 00 00 	movabs $0xffff8000001182c8,%rax$/;"	l
ffff800000103c91	kernel.asm	/^ffff800000103c91:	80 ff ff $/;"	l
ffff800000103c94	kernel.asm	/^ffff800000103c94:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff800000103c97	kernel.asm	/^ffff800000103c97:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000103c9a	kernel.asm	/^ffff800000103c9a:	48 b8 c0 39 10 00 00 	movabs $0xffff8000001039c0,%rax$/;"	l
ffff800000103ca1	kernel.asm	/^ffff800000103ca1:	80 ff ff $/;"	l
ffff800000103ca4	kernel.asm	/^ffff800000103ca4:	ff d0                	callq  *%rax$/;"	l
ffff800000103ca6	kernel.asm	/^ffff800000103ca6:	48 bf 60 82 11 00 00 	movabs $0xffff800000118260,%rdi$/;"	l
ffff800000103cad	kernel.asm	/^ffff800000103cad:	80 ff ff $/;"	l
ffff800000103cb0	kernel.asm	/^ffff800000103cb0:	48 b8 9a 79 10 00 00 	movabs $0xffff80000010799a,%rax$/;"	l
ffff800000103cb7	kernel.asm	/^ffff800000103cb7:	80 ff ff $/;"	l
ffff800000103cba	kernel.asm	/^ffff800000103cba:	ff d0                	callq  *%rax$/;"	l
ffff800000103cbc	kernel.asm	/^ffff800000103cbc:	c9                   	leaveq $/;"	l
ffff800000103cbd	kernel.asm	/^ffff800000103cbd:	c3                   	retq   $/;"	l
ffff800000103cbe	kernel.asm	/^ffff800000103cbe <iderw>:$/;"	l
ffff800000103cbe	kernel.asm	/^ffff800000103cbe:	55                   	push   %rbp$/;"	l
ffff800000103cbf	kernel.asm	/^ffff800000103cbf:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000103cc2	kernel.asm	/^ffff800000103cc2:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ffff800000103cc6	kernel.asm	/^ffff800000103cc6:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
ffff800000103cca	kernel.asm	/^ffff800000103cca:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000103cce	kernel.asm	/^ffff800000103cce:	48 83 c0 10          	add    $0x10,%rax$/;"	l
ffff800000103cd2	kernel.asm	/^ffff800000103cd2:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000103cd5	kernel.asm	/^ffff800000103cd5:	48 b8 39 78 10 00 00 	movabs $0xffff800000107839,%rax$/;"	l
ffff800000103cdc	kernel.asm	/^ffff800000103cdc:	80 ff ff $/;"	l
ffff800000103cdf	kernel.asm	/^ffff800000103cdf:	ff d0                	callq  *%rax$/;"	l
ffff800000103ce1	kernel.asm	/^ffff800000103ce1:	85 c0                	test   %eax,%eax$/;"	l
ffff800000103ce3	kernel.asm	/^ffff800000103ce3:	75 16                	jne    ffff800000103cfb <iderw+0x3d>$/;"	l
ffff800000103ce5	kernel.asm	/^ffff800000103ce5:	48 bf 81 c3 10 00 00 	movabs $0xffff80000010c381,%rdi$/;"	l
ffff800000103cec	kernel.asm	/^ffff800000103cec:	80 ff ff $/;"	l
ffff800000103cef	kernel.asm	/^ffff800000103cef:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff800000103cf6	kernel.asm	/^ffff800000103cf6:	80 ff ff $/;"	l
ffff800000103cf9	kernel.asm	/^ffff800000103cf9:	ff d0                	callq  *%rax$/;"	l
ffff800000103cfb	kernel.asm	/^ffff800000103cfb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000103cff	kernel.asm	/^ffff800000103cff:	8b 00                	mov    (%rax),%eax$/;"	l
ffff800000103d01	kernel.asm	/^ffff800000103d01:	83 e0 06             	and    $0x6,%eax$/;"	l
ffff800000103d04	kernel.asm	/^ffff800000103d04:	83 f8 02             	cmp    $0x2,%eax$/;"	l
ffff800000103d07	kernel.asm	/^ffff800000103d07:	75 16                	jne    ffff800000103d1f <iderw+0x61>$/;"	l
ffff800000103d09	kernel.asm	/^ffff800000103d09:	48 bf 97 c3 10 00 00 	movabs $0xffff80000010c397,%rdi$/;"	l
ffff800000103d10	kernel.asm	/^ffff800000103d10:	80 ff ff $/;"	l
ffff800000103d13	kernel.asm	/^ffff800000103d13:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff800000103d1a	kernel.asm	/^ffff800000103d1a:	80 ff ff $/;"	l
ffff800000103d1d	kernel.asm	/^ffff800000103d1d:	ff d0                	callq  *%rax$/;"	l
ffff800000103d1f	kernel.asm	/^ffff800000103d1f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000103d23	kernel.asm	/^ffff800000103d23:	8b 40 04             	mov    0x4(%rax),%eax$/;"	l
ffff800000103d26	kernel.asm	/^ffff800000103d26:	85 c0                	test   %eax,%eax$/;"	l
ffff800000103d28	kernel.asm	/^ffff800000103d28:	74 26                	je     ffff800000103d50 <iderw+0x92>$/;"	l
ffff800000103d2a	kernel.asm	/^ffff800000103d2a:	48 b8 d0 82 11 00 00 	movabs $0xffff8000001182d0,%rax$/;"	l
ffff800000103d31	kernel.asm	/^ffff800000103d31:	80 ff ff $/;"	l
ffff800000103d34	kernel.asm	/^ffff800000103d34:	8b 00                	mov    (%rax),%eax$/;"	l
ffff800000103d36	kernel.asm	/^ffff800000103d36:	85 c0                	test   %eax,%eax$/;"	l
ffff800000103d38	kernel.asm	/^ffff800000103d38:	75 16                	jne    ffff800000103d50 <iderw+0x92>$/;"	l
ffff800000103d3a	kernel.asm	/^ffff800000103d3a:	48 bf ac c3 10 00 00 	movabs $0xffff80000010c3ac,%rdi$/;"	l
ffff800000103d41	kernel.asm	/^ffff800000103d41:	80 ff ff $/;"	l
ffff800000103d44	kernel.asm	/^ffff800000103d44:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff800000103d4b	kernel.asm	/^ffff800000103d4b:	80 ff ff $/;"	l
ffff800000103d4e	kernel.asm	/^ffff800000103d4e:	ff d0                	callq  *%rax$/;"	l
ffff800000103d50	kernel.asm	/^ffff800000103d50:	48 bf 60 82 11 00 00 	movabs $0xffff800000118260,%rdi$/;"	l
ffff800000103d57	kernel.asm	/^ffff800000103d57:	80 ff ff $/;"	l
ffff800000103d5a	kernel.asm	/^ffff800000103d5a:	48 b8 01 79 10 00 00 	movabs $0xffff800000107901,%rax$/;"	l
ffff800000103d61	kernel.asm	/^ffff800000103d61:	80 ff ff $/;"	l
ffff800000103d64	kernel.asm	/^ffff800000103d64:	ff d0                	callq  *%rax$/;"	l
ffff800000103d66	kernel.asm	/^ffff800000103d66:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000103d6a	kernel.asm	/^ffff800000103d6a:	48 c7 80 a8 00 00 00 	movq   $0x0,0xa8(%rax)$/;"	l
ffff800000103d71	kernel.asm	/^ffff800000103d71:	00 00 00 00 $/;"	l
ffff800000103d75	kernel.asm	/^ffff800000103d75:	48 b8 c8 82 11 00 00 	movabs $0xffff8000001182c8,%rax$/;"	l
ffff800000103d7c	kernel.asm	/^ffff800000103d7c:	80 ff ff $/;"	l
ffff800000103d7f	kernel.asm	/^ffff800000103d7f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff800000103d83	kernel.asm	/^ffff800000103d83:	eb 11                	jmp    ffff800000103d96 <iderw+0xd8>$/;"	l
ffff800000103d85	kernel.asm	/^ffff800000103d85:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000103d89	kernel.asm	/^ffff800000103d89:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff800000103d8c	kernel.asm	/^ffff800000103d8c:	48 05 a8 00 00 00    	add    $0xa8,%rax$/;"	l
ffff800000103d92	kernel.asm	/^ffff800000103d92:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff800000103d96	kernel.asm	/^ffff800000103d96:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000103d9a	kernel.asm	/^ffff800000103d9a:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff800000103d9d	kernel.asm	/^ffff800000103d9d:	48 85 c0             	test   %rax,%rax$/;"	l
ffff800000103da0	kernel.asm	/^ffff800000103da0:	75 e3                	jne    ffff800000103d85 <iderw+0xc7>$/;"	l
ffff800000103da2	kernel.asm	/^ffff800000103da2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000103da6	kernel.asm	/^ffff800000103da6:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx$/;"	l
ffff800000103daa	kernel.asm	/^ffff800000103daa:	48 89 10             	mov    %rdx,(%rax)$/;"	l
ffff800000103dad	kernel.asm	/^ffff800000103dad:	48 b8 c8 82 11 00 00 	movabs $0xffff8000001182c8,%rax$/;"	l
ffff800000103db4	kernel.asm	/^ffff800000103db4:	80 ff ff $/;"	l
ffff800000103db7	kernel.asm	/^ffff800000103db7:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff800000103dba	kernel.asm	/^ffff800000103dba:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax$/;"	l
ffff800000103dbe	kernel.asm	/^ffff800000103dbe:	75 32                	jne    ffff800000103df2 <iderw+0x134>$/;"	l
ffff800000103dc0	kernel.asm	/^ffff800000103dc0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000103dc4	kernel.asm	/^ffff800000103dc4:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000103dc7	kernel.asm	/^ffff800000103dc7:	48 b8 c0 39 10 00 00 	movabs $0xffff8000001039c0,%rax$/;"	l
ffff800000103dce	kernel.asm	/^ffff800000103dce:	80 ff ff $/;"	l
ffff800000103dd1	kernel.asm	/^ffff800000103dd1:	ff d0                	callq  *%rax$/;"	l
ffff800000103dd3	kernel.asm	/^ffff800000103dd3:	eb 1d                	jmp    ffff800000103df2 <iderw+0x134>$/;"	l
ffff800000103dd5	kernel.asm	/^ffff800000103dd5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000103dd9	kernel.asm	/^ffff800000103dd9:	48 be 60 82 11 00 00 	movabs $0xffff800000118260,%rsi$/;"	l
ffff800000103de0	kernel.asm	/^ffff800000103de0:	80 ff ff $/;"	l
ffff800000103de3	kernel.asm	/^ffff800000103de3:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000103de6	kernel.asm	/^ffff800000103de6:	48 b8 b1 6d 10 00 00 	movabs $0xffff800000106db1,%rax$/;"	l
ffff800000103ded	kernel.asm	/^ffff800000103ded:	80 ff ff $/;"	l
ffff800000103df0	kernel.asm	/^ffff800000103df0:	ff d0                	callq  *%rax$/;"	l
ffff800000103df2	kernel.asm	/^ffff800000103df2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000103df6	kernel.asm	/^ffff800000103df6:	8b 00                	mov    (%rax),%eax$/;"	l
ffff800000103df8	kernel.asm	/^ffff800000103df8:	83 e0 06             	and    $0x6,%eax$/;"	l
ffff800000103dfb	kernel.asm	/^ffff800000103dfb:	83 f8 02             	cmp    $0x2,%eax$/;"	l
ffff800000103dfe	kernel.asm	/^ffff800000103dfe:	75 d5                	jne    ffff800000103dd5 <iderw+0x117>$/;"	l
ffff800000103e00	kernel.asm	/^ffff800000103e00:	48 bf 60 82 11 00 00 	movabs $0xffff800000118260,%rdi$/;"	l
ffff800000103e07	kernel.asm	/^ffff800000103e07:	80 ff ff $/;"	l
ffff800000103e0a	kernel.asm	/^ffff800000103e0a:	48 b8 9a 79 10 00 00 	movabs $0xffff80000010799a,%rax$/;"	l
ffff800000103e11	kernel.asm	/^ffff800000103e11:	80 ff ff $/;"	l
ffff800000103e14	kernel.asm	/^ffff800000103e14:	ff d0                	callq  *%rax$/;"	l
ffff800000103e16	kernel.asm	/^ffff800000103e16:	90                   	nop$/;"	l
ffff800000103e17	kernel.asm	/^ffff800000103e17:	c9                   	leaveq $/;"	l
ffff800000103e18	kernel.asm	/^ffff800000103e18:	c3                   	retq   $/;"	l
ffff800000103e19	kernel.asm	/^ffff800000103e19 <ioapicread>:$/;"	l
ffff800000103e19	kernel.asm	/^ffff800000103e19:	55                   	push   %rbp$/;"	l
ffff800000103e1a	kernel.asm	/^ffff800000103e1a:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000103e1d	kernel.asm	/^ffff800000103e1d:	48 83 ec 08          	sub    $0x8,%rsp$/;"	l
ffff800000103e21	kernel.asm	/^ffff800000103e21:	89 7d fc             	mov    %edi,-0x4(%rbp)$/;"	l
ffff800000103e24	kernel.asm	/^ffff800000103e24:	48 b8 d8 82 11 00 00 	movabs $0xffff8000001182d8,%rax$/;"	l
ffff800000103e2b	kernel.asm	/^ffff800000103e2b:	80 ff ff $/;"	l
ffff800000103e2e	kernel.asm	/^ffff800000103e2e:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff800000103e31	kernel.asm	/^ffff800000103e31:	8b 55 fc             	mov    -0x4(%rbp),%edx$/;"	l
ffff800000103e34	kernel.asm	/^ffff800000103e34:	89 10                	mov    %edx,(%rax)$/;"	l
ffff800000103e36	kernel.asm	/^ffff800000103e36:	48 b8 d8 82 11 00 00 	movabs $0xffff8000001182d8,%rax$/;"	l
ffff800000103e3d	kernel.asm	/^ffff800000103e3d:	80 ff ff $/;"	l
ffff800000103e40	kernel.asm	/^ffff800000103e40:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff800000103e43	kernel.asm	/^ffff800000103e43:	8b 40 10             	mov    0x10(%rax),%eax$/;"	l
ffff800000103e46	kernel.asm	/^ffff800000103e46:	c9                   	leaveq $/;"	l
ffff800000103e47	kernel.asm	/^ffff800000103e47:	c3                   	retq   $/;"	l
ffff800000103e48	kernel.asm	/^ffff800000103e48 <ioapicwrite>:$/;"	l
ffff800000103e48	kernel.asm	/^ffff800000103e48:	55                   	push   %rbp$/;"	l
ffff800000103e49	kernel.asm	/^ffff800000103e49:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000103e4c	kernel.asm	/^ffff800000103e4c:	48 83 ec 08          	sub    $0x8,%rsp$/;"	l
ffff800000103e50	kernel.asm	/^ffff800000103e50:	89 7d fc             	mov    %edi,-0x4(%rbp)$/;"	l
ffff800000103e53	kernel.asm	/^ffff800000103e53:	89 75 f8             	mov    %esi,-0x8(%rbp)$/;"	l
ffff800000103e56	kernel.asm	/^ffff800000103e56:	48 b8 d8 82 11 00 00 	movabs $0xffff8000001182d8,%rax$/;"	l
ffff800000103e5d	kernel.asm	/^ffff800000103e5d:	80 ff ff $/;"	l
ffff800000103e60	kernel.asm	/^ffff800000103e60:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff800000103e63	kernel.asm	/^ffff800000103e63:	8b 55 fc             	mov    -0x4(%rbp),%edx$/;"	l
ffff800000103e66	kernel.asm	/^ffff800000103e66:	89 10                	mov    %edx,(%rax)$/;"	l
ffff800000103e68	kernel.asm	/^ffff800000103e68:	48 b8 d8 82 11 00 00 	movabs $0xffff8000001182d8,%rax$/;"	l
ffff800000103e6f	kernel.asm	/^ffff800000103e6f:	80 ff ff $/;"	l
ffff800000103e72	kernel.asm	/^ffff800000103e72:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff800000103e75	kernel.asm	/^ffff800000103e75:	8b 55 f8             	mov    -0x8(%rbp),%edx$/;"	l
ffff800000103e78	kernel.asm	/^ffff800000103e78:	89 50 10             	mov    %edx,0x10(%rax)$/;"	l
ffff800000103e7b	kernel.asm	/^ffff800000103e7b:	90                   	nop$/;"	l
ffff800000103e7c	kernel.asm	/^ffff800000103e7c:	c9                   	leaveq $/;"	l
ffff800000103e7d	kernel.asm	/^ffff800000103e7d:	c3                   	retq   $/;"	l
ffff800000103e7e	kernel.asm	/^ffff800000103e7e <ioapicinit>:$/;"	l
ffff800000103e7e	kernel.asm	/^ffff800000103e7e:	55                   	push   %rbp$/;"	l
ffff800000103e7f	kernel.asm	/^ffff800000103e7f:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000103e82	kernel.asm	/^ffff800000103e82:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff800000103e86	kernel.asm	/^ffff800000103e86:	48 b8 d8 82 11 00 00 	movabs $0xffff8000001182d8,%rax$/;"	l
ffff800000103e8d	kernel.asm	/^ffff800000103e8d:	80 ff ff $/;"	l
ffff800000103e90	kernel.asm	/^ffff800000103e90:	48 b9 00 00 c0 fe 00 	movabs $0xffff8000fec00000,%rcx$/;"	l
ffff800000103e97	kernel.asm	/^ffff800000103e97:	80 ff ff $/;"	l
ffff800000103e9a	kernel.asm	/^ffff800000103e9a:	48 89 08             	mov    %rcx,(%rax)$/;"	l
ffff800000103e9d	kernel.asm	/^ffff800000103e9d:	bf 01 00 00 00       	mov    $0x1,%edi$/;"	l
ffff800000103ea2	kernel.asm	/^ffff800000103ea2:	48 b8 19 3e 10 00 00 	movabs $0xffff800000103e19,%rax$/;"	l
ffff800000103ea9	kernel.asm	/^ffff800000103ea9:	80 ff ff $/;"	l
ffff800000103eac	kernel.asm	/^ffff800000103eac:	ff d0                	callq  *%rax$/;"	l
ffff800000103eae	kernel.asm	/^ffff800000103eae:	c1 e8 10             	shr    $0x10,%eax$/;"	l
ffff800000103eb1	kernel.asm	/^ffff800000103eb1:	25 ff 00 00 00       	and    $0xff,%eax$/;"	l
ffff800000103eb6	kernel.asm	/^ffff800000103eb6:	89 45 f8             	mov    %eax,-0x8(%rbp)$/;"	l
ffff800000103eb9	kernel.asm	/^ffff800000103eb9:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
ffff800000103ebe	kernel.asm	/^ffff800000103ebe:	48 b8 19 3e 10 00 00 	movabs $0xffff800000103e19,%rax$/;"	l
ffff800000103ec5	kernel.asm	/^ffff800000103ec5:	80 ff ff $/;"	l
ffff800000103ec8	kernel.asm	/^ffff800000103ec8:	ff d0                	callq  *%rax$/;"	l
ffff800000103eca	kernel.asm	/^ffff800000103eca:	c1 e8 18             	shr    $0x18,%eax$/;"	l
ffff800000103ecd	kernel.asm	/^ffff800000103ecd:	89 45 f4             	mov    %eax,-0xc(%rbp)$/;"	l
ffff800000103ed0	kernel.asm	/^ffff800000103ed0:	48 b8 44 8c 11 00 00 	movabs $0xffff800000118c44,%rax$/;"	l
ffff800000103ed7	kernel.asm	/^ffff800000103ed7:	80 ff ff $/;"	l
ffff800000103eda	kernel.asm	/^ffff800000103eda:	0f b6 00             	movzbl (%rax),%eax$/;"	l
ffff800000103edd	kernel.asm	/^ffff800000103edd:	0f b6 c0             	movzbl %al,%eax$/;"	l
ffff800000103ee0	kernel.asm	/^ffff800000103ee0:	3b 45 f4             	cmp    -0xc(%rbp),%eax$/;"	l
ffff800000103ee3	kernel.asm	/^ffff800000103ee3:	74 1b                	je     ffff800000103f00 <ioapicinit+0x82>$/;"	l
ffff800000103ee5	kernel.asm	/^ffff800000103ee5:	48 bf d0 c3 10 00 00 	movabs $0xffff80000010c3d0,%rdi$/;"	l
ffff800000103eec	kernel.asm	/^ffff800000103eec:	80 ff ff $/;"	l
ffff800000103eef	kernel.asm	/^ffff800000103eef:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000103ef4	kernel.asm	/^ffff800000103ef4:	48 ba ac 07 10 00 00 	movabs $0xffff8000001007ac,%rdx$/;"	l
ffff800000103efb	kernel.asm	/^ffff800000103efb:	80 ff ff $/;"	l
ffff800000103efe	kernel.asm	/^ffff800000103efe:	ff d2                	callq  *%rdx$/;"	l
ffff800000103f00	kernel.asm	/^ffff800000103f00:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)$/;"	l
ffff800000103f07	kernel.asm	/^ffff800000103f07:	eb 47                	jmp    ffff800000103f50 <ioapicinit+0xd2>$/;"	l
ffff800000103f09	kernel.asm	/^ffff800000103f09:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff800000103f0c	kernel.asm	/^ffff800000103f0c:	83 c0 20             	add    $0x20,%eax$/;"	l
ffff800000103f0f	kernel.asm	/^ffff800000103f0f:	0d 00 00 01 00       	or     $0x10000,%eax$/;"	l
ffff800000103f14	kernel.asm	/^ffff800000103f14:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000103f16	kernel.asm	/^ffff800000103f16:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff800000103f19	kernel.asm	/^ffff800000103f19:	83 c0 08             	add    $0x8,%eax$/;"	l
ffff800000103f1c	kernel.asm	/^ffff800000103f1c:	01 c0                	add    %eax,%eax$/;"	l
ffff800000103f1e	kernel.asm	/^ffff800000103f1e:	89 d6                	mov    %edx,%esi$/;"	l
ffff800000103f20	kernel.asm	/^ffff800000103f20:	89 c7                	mov    %eax,%edi$/;"	l
ffff800000103f22	kernel.asm	/^ffff800000103f22:	48 b8 48 3e 10 00 00 	movabs $0xffff800000103e48,%rax$/;"	l
ffff800000103f29	kernel.asm	/^ffff800000103f29:	80 ff ff $/;"	l
ffff800000103f2c	kernel.asm	/^ffff800000103f2c:	ff d0                	callq  *%rax$/;"	l
ffff800000103f2e	kernel.asm	/^ffff800000103f2e:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff800000103f31	kernel.asm	/^ffff800000103f31:	83 c0 08             	add    $0x8,%eax$/;"	l
ffff800000103f34	kernel.asm	/^ffff800000103f34:	01 c0                	add    %eax,%eax$/;"	l
ffff800000103f36	kernel.asm	/^ffff800000103f36:	83 c0 01             	add    $0x1,%eax$/;"	l
ffff800000103f39	kernel.asm	/^ffff800000103f39:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffff800000103f3e	kernel.asm	/^ffff800000103f3e:	89 c7                	mov    %eax,%edi$/;"	l
ffff800000103f40	kernel.asm	/^ffff800000103f40:	48 b8 48 3e 10 00 00 	movabs $0xffff800000103e48,%rax$/;"	l
ffff800000103f47	kernel.asm	/^ffff800000103f47:	80 ff ff $/;"	l
ffff800000103f4a	kernel.asm	/^ffff800000103f4a:	ff d0                	callq  *%rax$/;"	l
ffff800000103f4c	kernel.asm	/^ffff800000103f4c:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)$/;"	l
ffff800000103f50	kernel.asm	/^ffff800000103f50:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff800000103f53	kernel.asm	/^ffff800000103f53:	3b 45 f8             	cmp    -0x8(%rbp),%eax$/;"	l
ffff800000103f56	kernel.asm	/^ffff800000103f56:	7e b1                	jle    ffff800000103f09 <ioapicinit+0x8b>$/;"	l
ffff800000103f58	kernel.asm	/^ffff800000103f58:	90                   	nop$/;"	l
ffff800000103f59	kernel.asm	/^ffff800000103f59:	c9                   	leaveq $/;"	l
ffff800000103f5a	kernel.asm	/^ffff800000103f5a:	c3                   	retq   $/;"	l
ffff800000103f5b	kernel.asm	/^ffff800000103f5b <ioapicenable>:$/;"	l
ffff800000103f5b	kernel.asm	/^ffff800000103f5b:	55                   	push   %rbp$/;"	l
ffff800000103f5c	kernel.asm	/^ffff800000103f5c:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000103f5f	kernel.asm	/^ffff800000103f5f:	48 83 ec 08          	sub    $0x8,%rsp$/;"	l
ffff800000103f63	kernel.asm	/^ffff800000103f63:	89 7d fc             	mov    %edi,-0x4(%rbp)$/;"	l
ffff800000103f66	kernel.asm	/^ffff800000103f66:	89 75 f8             	mov    %esi,-0x8(%rbp)$/;"	l
ffff800000103f69	kernel.asm	/^ffff800000103f69:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff800000103f6c	kernel.asm	/^ffff800000103f6c:	83 c0 20             	add    $0x20,%eax$/;"	l
ffff800000103f6f	kernel.asm	/^ffff800000103f6f:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000103f71	kernel.asm	/^ffff800000103f71:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff800000103f74	kernel.asm	/^ffff800000103f74:	83 c0 08             	add    $0x8,%eax$/;"	l
ffff800000103f77	kernel.asm	/^ffff800000103f77:	01 c0                	add    %eax,%eax$/;"	l
ffff800000103f79	kernel.asm	/^ffff800000103f79:	89 d6                	mov    %edx,%esi$/;"	l
ffff800000103f7b	kernel.asm	/^ffff800000103f7b:	89 c7                	mov    %eax,%edi$/;"	l
ffff800000103f7d	kernel.asm	/^ffff800000103f7d:	48 b8 48 3e 10 00 00 	movabs $0xffff800000103e48,%rax$/;"	l
ffff800000103f84	kernel.asm	/^ffff800000103f84:	80 ff ff $/;"	l
ffff800000103f87	kernel.asm	/^ffff800000103f87:	ff d0                	callq  *%rax$/;"	l
ffff800000103f89	kernel.asm	/^ffff800000103f89:	8b 45 f8             	mov    -0x8(%rbp),%eax$/;"	l
ffff800000103f8c	kernel.asm	/^ffff800000103f8c:	c1 e0 18             	shl    $0x18,%eax$/;"	l
ffff800000103f8f	kernel.asm	/^ffff800000103f8f:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000103f91	kernel.asm	/^ffff800000103f91:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff800000103f94	kernel.asm	/^ffff800000103f94:	83 c0 08             	add    $0x8,%eax$/;"	l
ffff800000103f97	kernel.asm	/^ffff800000103f97:	01 c0                	add    %eax,%eax$/;"	l
ffff800000103f99	kernel.asm	/^ffff800000103f99:	83 c0 01             	add    $0x1,%eax$/;"	l
ffff800000103f9c	kernel.asm	/^ffff800000103f9c:	89 d6                	mov    %edx,%esi$/;"	l
ffff800000103f9e	kernel.asm	/^ffff800000103f9e:	89 c7                	mov    %eax,%edi$/;"	l
ffff800000103fa0	kernel.asm	/^ffff800000103fa0:	48 b8 48 3e 10 00 00 	movabs $0xffff800000103e48,%rax$/;"	l
ffff800000103fa7	kernel.asm	/^ffff800000103fa7:	80 ff ff $/;"	l
ffff800000103faa	kernel.asm	/^ffff800000103faa:	ff d0                	callq  *%rax$/;"	l
ffff800000103fac	kernel.asm	/^ffff800000103fac:	90                   	nop$/;"	l
ffff800000103fad	kernel.asm	/^ffff800000103fad:	c9                   	leaveq $/;"	l
ffff800000103fae	kernel.asm	/^ffff800000103fae:	c3                   	retq   $/;"	l
ffff800000103faf	kernel.asm	/^ffff800000103faf <kinit1>:$/;"	l
ffff800000103faf	kernel.asm	/^ffff800000103faf:	55                   	push   %rbp$/;"	l
ffff800000103fb0	kernel.asm	/^ffff800000103fb0:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000103fb3	kernel.asm	/^ffff800000103fb3:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff800000103fb7	kernel.asm	/^ffff800000103fb7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)$/;"	l
ffff800000103fbb	kernel.asm	/^ffff800000103fbb:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)$/;"	l
ffff800000103fbf	kernel.asm	/^ffff800000103fbf:	48 be 02 c4 10 00 00 	movabs $0xffff80000010c402,%rsi$/;"	l
ffff800000103fc6	kernel.asm	/^ffff800000103fc6:	80 ff ff $/;"	l
ffff800000103fc9	kernel.asm	/^ffff800000103fc9:	48 bf e0 82 11 00 00 	movabs $0xffff8000001182e0,%rdi$/;"	l
ffff800000103fd0	kernel.asm	/^ffff800000103fd0:	80 ff ff $/;"	l
ffff800000103fd3	kernel.asm	/^ffff800000103fd3:	48 b8 cc 78 10 00 00 	movabs $0xffff8000001078cc,%rax$/;"	l
ffff800000103fda	kernel.asm	/^ffff800000103fda:	80 ff ff $/;"	l
ffff800000103fdd	kernel.asm	/^ffff800000103fdd:	ff d0                	callq  *%rax$/;"	l
ffff800000103fdf	kernel.asm	/^ffff800000103fdf:	48 b8 e0 82 11 00 00 	movabs $0xffff8000001182e0,%rax$/;"	l
ffff800000103fe6	kernel.asm	/^ffff800000103fe6:	80 ff ff $/;"	l
ffff800000103fe9	kernel.asm	/^ffff800000103fe9:	c7 40 68 00 00 00 00 	movl   $0x0,0x68(%rax)$/;"	l
ffff800000103ff0	kernel.asm	/^ffff800000103ff0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
ffff800000103ff4	kernel.asm	/^ffff800000103ff4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000103ff8	kernel.asm	/^ffff800000103ff8:	48 89 d6             	mov    %rdx,%rsi$/;"	l
ffff800000103ffb	kernel.asm	/^ffff800000103ffb:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000103ffe	kernel.asm	/^ffff800000103ffe:	48 b8 4b 40 10 00 00 	movabs $0xffff80000010404b,%rax$/;"	l
ffff800000104005	kernel.asm	/^ffff800000104005:	80 ff ff $/;"	l
ffff800000104008	kernel.asm	/^ffff800000104008:	ff d0                	callq  *%rax$/;"	l
ffff80000010400a	kernel.asm	/^ffff80000010400a:	90                   	nop$/;"	l
ffff80000010400b	kernel.asm	/^ffff80000010400b:	c9                   	leaveq $/;"	l
ffff80000010400c	kernel.asm	/^ffff80000010400c:	c3                   	retq   $/;"	l
ffff80000010400d	kernel.asm	/^ffff80000010400d <kinit2>:$/;"	l
ffff80000010400d	kernel.asm	/^ffff80000010400d:	55                   	push   %rbp$/;"	l
ffff80000010400e	kernel.asm	/^ffff80000010400e:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000104011	kernel.asm	/^ffff800000104011:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff800000104015	kernel.asm	/^ffff800000104015:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)$/;"	l
ffff800000104019	kernel.asm	/^ffff800000104019:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)$/;"	l
ffff80000010401d	kernel.asm	/^ffff80000010401d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
ffff800000104021	kernel.asm	/^ffff800000104021:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000104025	kernel.asm	/^ffff800000104025:	48 89 d6             	mov    %rdx,%rsi$/;"	l
ffff800000104028	kernel.asm	/^ffff800000104028:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010402b	kernel.asm	/^ffff80000010402b:	48 b8 4b 40 10 00 00 	movabs $0xffff80000010404b,%rax$/;"	l
ffff800000104032	kernel.asm	/^ffff800000104032:	80 ff ff $/;"	l
ffff800000104035	kernel.asm	/^ffff800000104035:	ff d0                	callq  *%rax$/;"	l
ffff800000104037	kernel.asm	/^ffff800000104037:	48 b8 e0 82 11 00 00 	movabs $0xffff8000001182e0,%rax$/;"	l
ffff80000010403e	kernel.asm	/^ffff80000010403e:	80 ff ff $/;"	l
ffff800000104041	kernel.asm	/^ffff800000104041:	c7 40 68 01 00 00 00 	movl   $0x1,0x68(%rax)$/;"	l
ffff800000104048	kernel.asm	/^ffff800000104048:	90                   	nop$/;"	l
ffff800000104049	kernel.asm	/^ffff800000104049:	c9                   	leaveq $/;"	l
ffff80000010404a	kernel.asm	/^ffff80000010404a:	c3                   	retq   $/;"	l
ffff80000010404b	kernel.asm	/^ffff80000010404b <freerange>:$/;"	l
ffff80000010404b	kernel.asm	/^ffff80000010404b:	55                   	push   %rbp$/;"	l
ffff80000010404c	kernel.asm	/^ffff80000010404c:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010404f	kernel.asm	/^ffff80000010404f:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ffff800000104053	kernel.asm	/^ffff800000104053:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
ffff800000104057	kernel.asm	/^ffff800000104057:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)$/;"	l
ffff80000010405b	kernel.asm	/^ffff80000010405b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010405f	kernel.asm	/^ffff80000010405f:	48 05 ff 0f 00 00    	add    $0xfff,%rax$/;"	l
ffff800000104065	kernel.asm	/^ffff800000104065:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax$/;"	l
ffff80000010406b	kernel.asm	/^ffff80000010406b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff80000010406f	kernel.asm	/^ffff80000010406f:	eb 1b                	jmp    ffff80000010408c <freerange+0x41>$/;"	l
ffff800000104071	kernel.asm	/^ffff800000104071:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000104075	kernel.asm	/^ffff800000104075:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000104078	kernel.asm	/^ffff800000104078:	48 b8 9f 40 10 00 00 	movabs $0xffff80000010409f,%rax$/;"	l
ffff80000010407f	kernel.asm	/^ffff80000010407f:	80 ff ff $/;"	l
ffff800000104082	kernel.asm	/^ffff800000104082:	ff d0                	callq  *%rax$/;"	l
ffff800000104084	kernel.asm	/^ffff800000104084:	48 81 45 f8 00 10 00 	addq   $0x1000,-0x8(%rbp)$/;"	l
ffff80000010408b	kernel.asm	/^ffff80000010408b:	00 $/;"	l
ffff80000010408c	kernel.asm	/^ffff80000010408c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000104090	kernel.asm	/^ffff800000104090:	48 05 00 10 00 00    	add    $0x1000,%rax$/;"	l
ffff800000104096	kernel.asm	/^ffff800000104096:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax$/;"	l
ffff80000010409a	kernel.asm	/^ffff80000010409a:	76 d5                	jbe    ffff800000104071 <freerange+0x26>$/;"	l
ffff80000010409c	kernel.asm	/^ffff80000010409c:	90                   	nop$/;"	l
ffff80000010409d	kernel.asm	/^ffff80000010409d:	c9                   	leaveq $/;"	l
ffff80000010409e	kernel.asm	/^ffff80000010409e:	c3                   	retq   $/;"	l
ffff80000010409f	kernel.asm	/^ffff80000010409f <kfree>:$/;"	l
ffff80000010409f	kernel.asm	/^ffff80000010409f:	55                   	push   %rbp$/;"	l
ffff8000001040a0	kernel.asm	/^ffff8000001040a0:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff8000001040a3	kernel.asm	/^ffff8000001040a3:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ffff8000001040a7	kernel.asm	/^ffff8000001040a7:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
ffff8000001040ab	kernel.asm	/^ffff8000001040ab:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff8000001040af	kernel.asm	/^ffff8000001040af:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
ffff8000001040b4	kernel.asm	/^ffff8000001040b4:	48 85 c0             	test   %rax,%rax$/;"	l
ffff8000001040b7	kernel.asm	/^ffff8000001040b7:	75 29                	jne    ffff8000001040e2 <kfree+0x43>$/;"	l
ffff8000001040b9	kernel.asm	/^ffff8000001040b9:	48 b8 00 d0 11 00 00 	movabs $0xffff80000011d000,%rax$/;"	l
ffff8000001040c0	kernel.asm	/^ffff8000001040c0:	80 ff ff $/;"	l
ffff8000001040c3	kernel.asm	/^ffff8000001040c3:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)$/;"	l
ffff8000001040c7	kernel.asm	/^ffff8000001040c7:	72 19                	jb     ffff8000001040e2 <kfree+0x43>$/;"	l
ffff8000001040c9	kernel.asm	/^ffff8000001040c9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx$/;"	l
ffff8000001040cd	kernel.asm	/^ffff8000001040cd:	48 b8 00 00 00 00 00 	movabs $0x800000000000,%rax$/;"	l
ffff8000001040d4	kernel.asm	/^ffff8000001040d4:	80 00 00 $/;"	l
ffff8000001040d7	kernel.asm	/^ffff8000001040d7:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff8000001040da	kernel.asm	/^ffff8000001040da:	48 3d ff ff ff 0d    	cmp    $0xdffffff,%rax$/;"	l
ffff8000001040e0	kernel.asm	/^ffff8000001040e0:	76 16                	jbe    ffff8000001040f8 <kfree+0x59>$/;"	l
ffff8000001040e2	kernel.asm	/^ffff8000001040e2:	48 bf 07 c4 10 00 00 	movabs $0xffff80000010c407,%rdi$/;"	l
ffff8000001040e9	kernel.asm	/^ffff8000001040e9:	80 ff ff $/;"	l
ffff8000001040ec	kernel.asm	/^ffff8000001040ec:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff8000001040f3	kernel.asm	/^ffff8000001040f3:	80 ff ff $/;"	l
ffff8000001040f6	kernel.asm	/^ffff8000001040f6:	ff d0                	callq  *%rax$/;"	l
ffff8000001040f8	kernel.asm	/^ffff8000001040f8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff8000001040fc	kernel.asm	/^ffff8000001040fc:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
ffff800000104101	kernel.asm	/^ffff800000104101:	be 01 00 00 00       	mov    $0x1,%esi$/;"	l
ffff800000104106	kernel.asm	/^ffff800000104106:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000104109	kernel.asm	/^ffff800000104109:	48 b8 9d 7c 10 00 00 	movabs $0xffff800000107c9d,%rax$/;"	l
ffff800000104110	kernel.asm	/^ffff800000104110:	80 ff ff $/;"	l
ffff800000104113	kernel.asm	/^ffff800000104113:	ff d0                	callq  *%rax$/;"	l
ffff800000104115	kernel.asm	/^ffff800000104115:	48 b8 e0 82 11 00 00 	movabs $0xffff8000001182e0,%rax$/;"	l
ffff80000010411c	kernel.asm	/^ffff80000010411c:	80 ff ff $/;"	l
ffff80000010411f	kernel.asm	/^ffff80000010411f:	8b 40 68             	mov    0x68(%rax),%eax$/;"	l
ffff800000104122	kernel.asm	/^ffff800000104122:	85 c0                	test   %eax,%eax$/;"	l
ffff800000104124	kernel.asm	/^ffff800000104124:	74 16                	je     ffff80000010413c <kfree+0x9d>$/;"	l
ffff800000104126	kernel.asm	/^ffff800000104126:	48 bf e0 82 11 00 00 	movabs $0xffff8000001182e0,%rdi$/;"	l
ffff80000010412d	kernel.asm	/^ffff80000010412d:	80 ff ff $/;"	l
ffff800000104130	kernel.asm	/^ffff800000104130:	48 b8 01 79 10 00 00 	movabs $0xffff800000107901,%rax$/;"	l
ffff800000104137	kernel.asm	/^ffff800000104137:	80 ff ff $/;"	l
ffff80000010413a	kernel.asm	/^ffff80000010413a:	ff d0                	callq  *%rax$/;"	l
ffff80000010413c	kernel.asm	/^ffff80000010413c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000104140	kernel.asm	/^ffff800000104140:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff800000104144	kernel.asm	/^ffff800000104144:	48 b8 e0 82 11 00 00 	movabs $0xffff8000001182e0,%rax$/;"	l
ffff80000010414b	kernel.asm	/^ffff80000010414b:	80 ff ff $/;"	l
ffff80000010414e	kernel.asm	/^ffff80000010414e:	48 8b 50 70          	mov    0x70(%rax),%rdx$/;"	l
ffff800000104152	kernel.asm	/^ffff800000104152:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000104156	kernel.asm	/^ffff800000104156:	48 89 10             	mov    %rdx,(%rax)$/;"	l
ffff800000104159	kernel.asm	/^ffff800000104159:	48 b8 e0 82 11 00 00 	movabs $0xffff8000001182e0,%rax$/;"	l
ffff800000104160	kernel.asm	/^ffff800000104160:	80 ff ff $/;"	l
ffff800000104163	kernel.asm	/^ffff800000104163:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx$/;"	l
ffff800000104167	kernel.asm	/^ffff800000104167:	48 89 50 70          	mov    %rdx,0x70(%rax)$/;"	l
ffff80000010416b	kernel.asm	/^ffff80000010416b:	48 b8 e0 82 11 00 00 	movabs $0xffff8000001182e0,%rax$/;"	l
ffff800000104172	kernel.asm	/^ffff800000104172:	80 ff ff $/;"	l
ffff800000104175	kernel.asm	/^ffff800000104175:	8b 40 68             	mov    0x68(%rax),%eax$/;"	l
ffff800000104178	kernel.asm	/^ffff800000104178:	85 c0                	test   %eax,%eax$/;"	l
ffff80000010417a	kernel.asm	/^ffff80000010417a:	74 16                	je     ffff800000104192 <kfree+0xf3>$/;"	l
ffff80000010417c	kernel.asm	/^ffff80000010417c:	48 bf e0 82 11 00 00 	movabs $0xffff8000001182e0,%rdi$/;"	l
ffff800000104183	kernel.asm	/^ffff800000104183:	80 ff ff $/;"	l
ffff800000104186	kernel.asm	/^ffff800000104186:	48 b8 9a 79 10 00 00 	movabs $0xffff80000010799a,%rax$/;"	l
ffff80000010418d	kernel.asm	/^ffff80000010418d:	80 ff ff $/;"	l
ffff800000104190	kernel.asm	/^ffff800000104190:	ff d0                	callq  *%rax$/;"	l
ffff800000104192	kernel.asm	/^ffff800000104192:	90                   	nop$/;"	l
ffff800000104193	kernel.asm	/^ffff800000104193:	c9                   	leaveq $/;"	l
ffff800000104194	kernel.asm	/^ffff800000104194:	c3                   	retq   $/;"	l
ffff800000104195	kernel.asm	/^ffff800000104195 <kalloc>:$/;"	l
ffff800000104195	kernel.asm	/^ffff800000104195:	55                   	push   %rbp$/;"	l
ffff800000104196	kernel.asm	/^ffff800000104196:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000104199	kernel.asm	/^ffff800000104199:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff80000010419d	kernel.asm	/^ffff80000010419d:	48 b8 e0 82 11 00 00 	movabs $0xffff8000001182e0,%rax$/;"	l
ffff8000001041a4	kernel.asm	/^ffff8000001041a4:	80 ff ff $/;"	l
ffff8000001041a7	kernel.asm	/^ffff8000001041a7:	8b 40 68             	mov    0x68(%rax),%eax$/;"	l
ffff8000001041aa	kernel.asm	/^ffff8000001041aa:	85 c0                	test   %eax,%eax$/;"	l
ffff8000001041ac	kernel.asm	/^ffff8000001041ac:	74 16                	je     ffff8000001041c4 <kalloc+0x2f>$/;"	l
ffff8000001041ae	kernel.asm	/^ffff8000001041ae:	48 bf e0 82 11 00 00 	movabs $0xffff8000001182e0,%rdi$/;"	l
ffff8000001041b5	kernel.asm	/^ffff8000001041b5:	80 ff ff $/;"	l
ffff8000001041b8	kernel.asm	/^ffff8000001041b8:	48 b8 01 79 10 00 00 	movabs $0xffff800000107901,%rax$/;"	l
ffff8000001041bf	kernel.asm	/^ffff8000001041bf:	80 ff ff $/;"	l
ffff8000001041c2	kernel.asm	/^ffff8000001041c2:	ff d0                	callq  *%rax$/;"	l
ffff8000001041c4	kernel.asm	/^ffff8000001041c4:	48 b8 e0 82 11 00 00 	movabs $0xffff8000001182e0,%rax$/;"	l
ffff8000001041cb	kernel.asm	/^ffff8000001041cb:	80 ff ff $/;"	l
ffff8000001041ce	kernel.asm	/^ffff8000001041ce:	48 8b 40 70          	mov    0x70(%rax),%rax$/;"	l
ffff8000001041d2	kernel.asm	/^ffff8000001041d2:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff8000001041d6	kernel.asm	/^ffff8000001041d6:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)$/;"	l
ffff8000001041db	kernel.asm	/^ffff8000001041db:	74 15                	je     ffff8000001041f2 <kalloc+0x5d>$/;"	l
ffff8000001041dd	kernel.asm	/^ffff8000001041dd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001041e1	kernel.asm	/^ffff8000001041e1:	48 8b 10             	mov    (%rax),%rdx$/;"	l
ffff8000001041e4	kernel.asm	/^ffff8000001041e4:	48 b8 e0 82 11 00 00 	movabs $0xffff8000001182e0,%rax$/;"	l
ffff8000001041eb	kernel.asm	/^ffff8000001041eb:	80 ff ff $/;"	l
ffff8000001041ee	kernel.asm	/^ffff8000001041ee:	48 89 50 70          	mov    %rdx,0x70(%rax)$/;"	l
ffff8000001041f2	kernel.asm	/^ffff8000001041f2:	48 b8 e0 82 11 00 00 	movabs $0xffff8000001182e0,%rax$/;"	l
ffff8000001041f9	kernel.asm	/^ffff8000001041f9:	80 ff ff $/;"	l
ffff8000001041fc	kernel.asm	/^ffff8000001041fc:	8b 40 68             	mov    0x68(%rax),%eax$/;"	l
ffff8000001041ff	kernel.asm	/^ffff8000001041ff:	85 c0                	test   %eax,%eax$/;"	l
ffff800000104201	kernel.asm	/^ffff800000104201:	74 16                	je     ffff800000104219 <kalloc+0x84>$/;"	l
ffff800000104203	kernel.asm	/^ffff800000104203:	48 bf e0 82 11 00 00 	movabs $0xffff8000001182e0,%rdi$/;"	l
ffff80000010420a	kernel.asm	/^ffff80000010420a:	80 ff ff $/;"	l
ffff80000010420d	kernel.asm	/^ffff80000010420d:	48 b8 9a 79 10 00 00 	movabs $0xffff80000010799a,%rax$/;"	l
ffff800000104214	kernel.asm	/^ffff800000104214:	80 ff ff $/;"	l
ffff800000104217	kernel.asm	/^ffff800000104217:	ff d0                	callq  *%rax$/;"	l
ffff800000104219	kernel.asm	/^ffff800000104219:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010421d	kernel.asm	/^ffff80000010421d:	c9                   	leaveq $/;"	l
ffff80000010421e	kernel.asm	/^ffff80000010421e:	c3                   	retq   $/;"	l
ffff80000010421f	kernel.asm	/^ffff80000010421f <kmemfreecount>:$/;"	l
ffff80000010421f	kernel.asm	/^ffff80000010421f:	55                   	push   %rbp$/;"	l
ffff800000104220	kernel.asm	/^ffff800000104220:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000104223	kernel.asm	/^ffff800000104223:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff800000104227	kernel.asm	/^ffff800000104227:	48 b8 e0 82 11 00 00 	movabs $0xffff8000001182e0,%rax$/;"	l
ffff80000010422e	kernel.asm	/^ffff80000010422e:	80 ff ff $/;"	l
ffff800000104231	kernel.asm	/^ffff800000104231:	8b 40 68             	mov    0x68(%rax),%eax$/;"	l
ffff800000104234	kernel.asm	/^ffff800000104234:	85 c0                	test   %eax,%eax$/;"	l
ffff800000104236	kernel.asm	/^ffff800000104236:	74 16                	je     ffff80000010424e <kmemfreecount+0x2f>$/;"	l
ffff800000104238	kernel.asm	/^ffff800000104238:	48 bf e0 82 11 00 00 	movabs $0xffff8000001182e0,%rdi$/;"	l
ffff80000010423f	kernel.asm	/^ffff80000010423f:	80 ff ff $/;"	l
ffff800000104242	kernel.asm	/^ffff800000104242:	48 b8 01 79 10 00 00 	movabs $0xffff800000107901,%rax$/;"	l
ffff800000104249	kernel.asm	/^ffff800000104249:	80 ff ff $/;"	l
ffff80000010424c	kernel.asm	/^ffff80000010424c:	ff d0                	callq  *%rax$/;"	l
ffff80000010424e	kernel.asm	/^ffff80000010424e:	48 b8 e0 82 11 00 00 	movabs $0xffff8000001182e0,%rax$/;"	l
ffff800000104255	kernel.asm	/^ffff800000104255:	80 ff ff $/;"	l
ffff800000104258	kernel.asm	/^ffff800000104258:	48 8b 40 70          	mov    0x70(%rax),%rax$/;"	l
ffff80000010425c	kernel.asm	/^ffff80000010425c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff800000104260	kernel.asm	/^ffff800000104260:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)$/;"	l
ffff800000104267	kernel.asm	/^ffff800000104267:	eb 0f                	jmp    ffff800000104278 <kmemfreecount+0x59>$/;"	l
ffff800000104269	kernel.asm	/^ffff800000104269:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)$/;"	l
ffff80000010426d	kernel.asm	/^ffff80000010426d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000104271	kernel.asm	/^ffff800000104271:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff800000104274	kernel.asm	/^ffff800000104274:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff800000104278	kernel.asm	/^ffff800000104278:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)$/;"	l
ffff80000010427d	kernel.asm	/^ffff80000010427d:	75 ea                	jne    ffff800000104269 <kmemfreecount+0x4a>$/;"	l
ffff80000010427f	kernel.asm	/^ffff80000010427f:	48 b8 e0 82 11 00 00 	movabs $0xffff8000001182e0,%rax$/;"	l
ffff800000104286	kernel.asm	/^ffff800000104286:	80 ff ff $/;"	l
ffff800000104289	kernel.asm	/^ffff800000104289:	8b 40 68             	mov    0x68(%rax),%eax$/;"	l
ffff80000010428c	kernel.asm	/^ffff80000010428c:	85 c0                	test   %eax,%eax$/;"	l
ffff80000010428e	kernel.asm	/^ffff80000010428e:	74 16                	je     ffff8000001042a6 <kmemfreecount+0x87>$/;"	l
ffff800000104290	kernel.asm	/^ffff800000104290:	48 bf e0 82 11 00 00 	movabs $0xffff8000001182e0,%rdi$/;"	l
ffff800000104297	kernel.asm	/^ffff800000104297:	80 ff ff $/;"	l
ffff80000010429a	kernel.asm	/^ffff80000010429a:	48 b8 9a 79 10 00 00 	movabs $0xffff80000010799a,%rax$/;"	l
ffff8000001042a1	kernel.asm	/^ffff8000001042a1:	80 ff ff $/;"	l
ffff8000001042a4	kernel.asm	/^ffff8000001042a4:	ff d0                	callq  *%rax$/;"	l
ffff8000001042a6	kernel.asm	/^ffff8000001042a6:	8b 45 f4             	mov    -0xc(%rbp),%eax$/;"	l
ffff8000001042a9	kernel.asm	/^ffff8000001042a9:	c9                   	leaveq $/;"	l
ffff8000001042aa	kernel.asm	/^ffff8000001042aa:	c3                   	retq   $/;"	l
ffff8000001042ab	kernel.asm	/^ffff8000001042ab <inb>:$/;"	l
ffff8000001042ab	kernel.asm	/^ffff8000001042ab:	55                   	push   %rbp$/;"	l
ffff8000001042ac	kernel.asm	/^ffff8000001042ac:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff8000001042af	kernel.asm	/^ffff8000001042af:	48 83 ec 18          	sub    $0x18,%rsp$/;"	l
ffff8000001042b3	kernel.asm	/^ffff8000001042b3:	89 f8                	mov    %edi,%eax$/;"	l
ffff8000001042b5	kernel.asm	/^ffff8000001042b5:	66 89 45 ec          	mov    %ax,-0x14(%rbp)$/;"	l
ffff8000001042b9	kernel.asm	/^ffff8000001042b9:	0f b7 45 ec          	movzwl -0x14(%rbp),%eax$/;"	l
ffff8000001042bd	kernel.asm	/^ffff8000001042bd:	89 c2                	mov    %eax,%edx$/;"	l
ffff8000001042bf	kernel.asm	/^ffff8000001042bf:	ec                   	in     (%dx),%al$/;"	l
ffff8000001042c0	kernel.asm	/^ffff8000001042c0:	88 45 ff             	mov    %al,-0x1(%rbp)$/;"	l
ffff8000001042c3	kernel.asm	/^ffff8000001042c3:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax$/;"	l
ffff8000001042c7	kernel.asm	/^ffff8000001042c7:	c9                   	leaveq $/;"	l
ffff8000001042c8	kernel.asm	/^ffff8000001042c8:	c3                   	retq   $/;"	l
ffff8000001042c9	kernel.asm	/^ffff8000001042c9 <kbdgetc>:$/;"	l
ffff8000001042c9	kernel.asm	/^ffff8000001042c9:	55                   	push   %rbp$/;"	l
ffff8000001042ca	kernel.asm	/^ffff8000001042ca:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff8000001042cd	kernel.asm	/^ffff8000001042cd:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff8000001042d1	kernel.asm	/^ffff8000001042d1:	bf 64 00 00 00       	mov    $0x64,%edi$/;"	l
ffff8000001042d6	kernel.asm	/^ffff8000001042d6:	48 b8 ab 42 10 00 00 	movabs $0xffff8000001042ab,%rax$/;"	l
ffff8000001042dd	kernel.asm	/^ffff8000001042dd:	80 ff ff $/;"	l
ffff8000001042e0	kernel.asm	/^ffff8000001042e0:	ff d0                	callq  *%rax$/;"	l
ffff8000001042e2	kernel.asm	/^ffff8000001042e2:	0f b6 c0             	movzbl %al,%eax$/;"	l
ffff8000001042e5	kernel.asm	/^ffff8000001042e5:	89 45 f4             	mov    %eax,-0xc(%rbp)$/;"	l
ffff8000001042e8	kernel.asm	/^ffff8000001042e8:	8b 45 f4             	mov    -0xc(%rbp),%eax$/;"	l
ffff8000001042eb	kernel.asm	/^ffff8000001042eb:	83 e0 01             	and    $0x1,%eax$/;"	l
ffff8000001042ee	kernel.asm	/^ffff8000001042ee:	85 c0                	test   %eax,%eax$/;"	l
ffff8000001042f0	kernel.asm	/^ffff8000001042f0:	75 0a                	jne    ffff8000001042fc <kbdgetc+0x33>$/;"	l
ffff8000001042f2	kernel.asm	/^ffff8000001042f2:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff8000001042f7	kernel.asm	/^ffff8000001042f7:	e9 ae 01 00 00       	jmpq   ffff8000001044aa <kbdgetc+0x1e1>$/;"	l
ffff8000001042fc	kernel.asm	/^ffff8000001042fc:	bf 60 00 00 00       	mov    $0x60,%edi$/;"	l
ffff800000104301	kernel.asm	/^ffff800000104301:	48 b8 ab 42 10 00 00 	movabs $0xffff8000001042ab,%rax$/;"	l
ffff800000104308	kernel.asm	/^ffff800000104308:	80 ff ff $/;"	l
ffff80000010430b	kernel.asm	/^ffff80000010430b:	ff d0                	callq  *%rax$/;"	l
ffff80000010430d	kernel.asm	/^ffff80000010430d:	0f b6 c0             	movzbl %al,%eax$/;"	l
ffff800000104310	kernel.asm	/^ffff800000104310:	89 45 fc             	mov    %eax,-0x4(%rbp)$/;"	l
ffff800000104313	kernel.asm	/^ffff800000104313:	81 7d fc e0 00 00 00 	cmpl   $0xe0,-0x4(%rbp)$/;"	l
ffff80000010431a	kernel.asm	/^ffff80000010431a:	75 27                	jne    ffff800000104343 <kbdgetc+0x7a>$/;"	l
ffff80000010431c	kernel.asm	/^ffff80000010431c:	48 b8 58 83 11 00 00 	movabs $0xffff800000118358,%rax$/;"	l
ffff800000104323	kernel.asm	/^ffff800000104323:	80 ff ff $/;"	l
ffff800000104326	kernel.asm	/^ffff800000104326:	8b 00                	mov    (%rax),%eax$/;"	l
ffff800000104328	kernel.asm	/^ffff800000104328:	83 c8 40             	or     $0x40,%eax$/;"	l
ffff80000010432b	kernel.asm	/^ffff80000010432b:	89 c2                	mov    %eax,%edx$/;"	l
ffff80000010432d	kernel.asm	/^ffff80000010432d:	48 b8 58 83 11 00 00 	movabs $0xffff800000118358,%rax$/;"	l
ffff800000104334	kernel.asm	/^ffff800000104334:	80 ff ff $/;"	l
ffff800000104337	kernel.asm	/^ffff800000104337:	89 10                	mov    %edx,(%rax)$/;"	l
ffff800000104339	kernel.asm	/^ffff800000104339:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff80000010433e	kernel.asm	/^ffff80000010433e:	e9 67 01 00 00       	jmpq   ffff8000001044aa <kbdgetc+0x1e1>$/;"	l
ffff800000104343	kernel.asm	/^ffff800000104343:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff800000104346	kernel.asm	/^ffff800000104346:	25 80 00 00 00       	and    $0x80,%eax$/;"	l
ffff80000010434b	kernel.asm	/^ffff80000010434b:	85 c0                	test   %eax,%eax$/;"	l
ffff80000010434d	kernel.asm	/^ffff80000010434d:	74 60                	je     ffff8000001043af <kbdgetc+0xe6>$/;"	l
ffff80000010434f	kernel.asm	/^ffff80000010434f:	48 b8 58 83 11 00 00 	movabs $0xffff800000118358,%rax$/;"	l
ffff800000104356	kernel.asm	/^ffff800000104356:	80 ff ff $/;"	l
ffff800000104359	kernel.asm	/^ffff800000104359:	8b 00                	mov    (%rax),%eax$/;"	l
ffff80000010435b	kernel.asm	/^ffff80000010435b:	83 e0 40             	and    $0x40,%eax$/;"	l
ffff80000010435e	kernel.asm	/^ffff80000010435e:	85 c0                	test   %eax,%eax$/;"	l
ffff800000104360	kernel.asm	/^ffff800000104360:	75 08                	jne    ffff80000010436a <kbdgetc+0xa1>$/;"	l
ffff800000104362	kernel.asm	/^ffff800000104362:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff800000104365	kernel.asm	/^ffff800000104365:	83 e0 7f             	and    $0x7f,%eax$/;"	l
ffff800000104368	kernel.asm	/^ffff800000104368:	eb 03                	jmp    ffff80000010436d <kbdgetc+0xa4>$/;"	l
ffff80000010436a	kernel.asm	/^ffff80000010436a:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff80000010436d	kernel.asm	/^ffff80000010436d:	89 45 fc             	mov    %eax,-0x4(%rbp)$/;"	l
ffff800000104370	kernel.asm	/^ffff800000104370:	48 ba 40 d0 10 00 00 	movabs $0xffff80000010d040,%rdx$/;"	l
ffff800000104377	kernel.asm	/^ffff800000104377:	80 ff ff $/;"	l
ffff80000010437a	kernel.asm	/^ffff80000010437a:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff80000010437d	kernel.asm	/^ffff80000010437d:	0f b6 04 02          	movzbl (%rdx,%rax,1),%eax$/;"	l
ffff800000104381	kernel.asm	/^ffff800000104381:	83 c8 40             	or     $0x40,%eax$/;"	l
ffff800000104384	kernel.asm	/^ffff800000104384:	0f b6 c0             	movzbl %al,%eax$/;"	l
ffff800000104387	kernel.asm	/^ffff800000104387:	f7 d0                	not    %eax$/;"	l
ffff800000104389	kernel.asm	/^ffff800000104389:	89 c2                	mov    %eax,%edx$/;"	l
ffff80000010438b	kernel.asm	/^ffff80000010438b:	48 b8 58 83 11 00 00 	movabs $0xffff800000118358,%rax$/;"	l
ffff800000104392	kernel.asm	/^ffff800000104392:	80 ff ff $/;"	l
ffff800000104395	kernel.asm	/^ffff800000104395:	8b 00                	mov    (%rax),%eax$/;"	l
ffff800000104397	kernel.asm	/^ffff800000104397:	21 c2                	and    %eax,%edx$/;"	l
ffff800000104399	kernel.asm	/^ffff800000104399:	48 b8 58 83 11 00 00 	movabs $0xffff800000118358,%rax$/;"	l
ffff8000001043a0	kernel.asm	/^ffff8000001043a0:	80 ff ff $/;"	l
ffff8000001043a3	kernel.asm	/^ffff8000001043a3:	89 10                	mov    %edx,(%rax)$/;"	l
ffff8000001043a5	kernel.asm	/^ffff8000001043a5:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff8000001043aa	kernel.asm	/^ffff8000001043aa:	e9 fb 00 00 00       	jmpq   ffff8000001044aa <kbdgetc+0x1e1>$/;"	l
ffff8000001043af	kernel.asm	/^ffff8000001043af:	48 b8 58 83 11 00 00 	movabs $0xffff800000118358,%rax$/;"	l
ffff8000001043b6	kernel.asm	/^ffff8000001043b6:	80 ff ff $/;"	l
ffff8000001043b9	kernel.asm	/^ffff8000001043b9:	8b 00                	mov    (%rax),%eax$/;"	l
ffff8000001043bb	kernel.asm	/^ffff8000001043bb:	83 e0 40             	and    $0x40,%eax$/;"	l
ffff8000001043be	kernel.asm	/^ffff8000001043be:	85 c0                	test   %eax,%eax$/;"	l
ffff8000001043c0	kernel.asm	/^ffff8000001043c0:	74 24                	je     ffff8000001043e6 <kbdgetc+0x11d>$/;"	l
ffff8000001043c2	kernel.asm	/^ffff8000001043c2:	81 4d fc 80 00 00 00 	orl    $0x80,-0x4(%rbp)$/;"	l
ffff8000001043c9	kernel.asm	/^ffff8000001043c9:	48 b8 58 83 11 00 00 	movabs $0xffff800000118358,%rax$/;"	l
ffff8000001043d0	kernel.asm	/^ffff8000001043d0:	80 ff ff $/;"	l
ffff8000001043d3	kernel.asm	/^ffff8000001043d3:	8b 00                	mov    (%rax),%eax$/;"	l
ffff8000001043d5	kernel.asm	/^ffff8000001043d5:	83 e0 bf             	and    $0xffffffbf,%eax$/;"	l
ffff8000001043d8	kernel.asm	/^ffff8000001043d8:	89 c2                	mov    %eax,%edx$/;"	l
ffff8000001043da	kernel.asm	/^ffff8000001043da:	48 b8 58 83 11 00 00 	movabs $0xffff800000118358,%rax$/;"	l
ffff8000001043e1	kernel.asm	/^ffff8000001043e1:	80 ff ff $/;"	l
ffff8000001043e4	kernel.asm	/^ffff8000001043e4:	89 10                	mov    %edx,(%rax)$/;"	l
ffff8000001043e6	kernel.asm	/^ffff8000001043e6:	48 ba 40 d0 10 00 00 	movabs $0xffff80000010d040,%rdx$/;"	l
ffff8000001043ed	kernel.asm	/^ffff8000001043ed:	80 ff ff $/;"	l
ffff8000001043f0	kernel.asm	/^ffff8000001043f0:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff8000001043f3	kernel.asm	/^ffff8000001043f3:	0f b6 04 02          	movzbl (%rdx,%rax,1),%eax$/;"	l
ffff8000001043f7	kernel.asm	/^ffff8000001043f7:	0f b6 d0             	movzbl %al,%edx$/;"	l
ffff8000001043fa	kernel.asm	/^ffff8000001043fa:	48 b8 58 83 11 00 00 	movabs $0xffff800000118358,%rax$/;"	l
ffff800000104401	kernel.asm	/^ffff800000104401:	80 ff ff $/;"	l
ffff800000104404	kernel.asm	/^ffff800000104404:	8b 00                	mov    (%rax),%eax$/;"	l
ffff800000104406	kernel.asm	/^ffff800000104406:	09 c2                	or     %eax,%edx$/;"	l
ffff800000104408	kernel.asm	/^ffff800000104408:	48 b8 58 83 11 00 00 	movabs $0xffff800000118358,%rax$/;"	l
ffff80000010440f	kernel.asm	/^ffff80000010440f:	80 ff ff $/;"	l
ffff800000104412	kernel.asm	/^ffff800000104412:	89 10                	mov    %edx,(%rax)$/;"	l
ffff800000104414	kernel.asm	/^ffff800000104414:	48 ba 40 d1 10 00 00 	movabs $0xffff80000010d140,%rdx$/;"	l
ffff80000010441b	kernel.asm	/^ffff80000010441b:	80 ff ff $/;"	l
ffff80000010441e	kernel.asm	/^ffff80000010441e:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff800000104421	kernel.asm	/^ffff800000104421:	0f b6 04 02          	movzbl (%rdx,%rax,1),%eax$/;"	l
ffff800000104425	kernel.asm	/^ffff800000104425:	0f b6 d0             	movzbl %al,%edx$/;"	l
ffff800000104428	kernel.asm	/^ffff800000104428:	48 b8 58 83 11 00 00 	movabs $0xffff800000118358,%rax$/;"	l
ffff80000010442f	kernel.asm	/^ffff80000010442f:	80 ff ff $/;"	l
ffff800000104432	kernel.asm	/^ffff800000104432:	8b 00                	mov    (%rax),%eax$/;"	l
ffff800000104434	kernel.asm	/^ffff800000104434:	31 c2                	xor    %eax,%edx$/;"	l
ffff800000104436	kernel.asm	/^ffff800000104436:	48 b8 58 83 11 00 00 	movabs $0xffff800000118358,%rax$/;"	l
ffff80000010443d	kernel.asm	/^ffff80000010443d:	80 ff ff $/;"	l
ffff800000104440	kernel.asm	/^ffff800000104440:	89 10                	mov    %edx,(%rax)$/;"	l
ffff800000104442	kernel.asm	/^ffff800000104442:	48 b8 58 83 11 00 00 	movabs $0xffff800000118358,%rax$/;"	l
ffff800000104449	kernel.asm	/^ffff800000104449:	80 ff ff $/;"	l
ffff80000010444c	kernel.asm	/^ffff80000010444c:	8b 00                	mov    (%rax),%eax$/;"	l
ffff80000010444e	kernel.asm	/^ffff80000010444e:	83 e0 03             	and    $0x3,%eax$/;"	l
ffff800000104451	kernel.asm	/^ffff800000104451:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000104453	kernel.asm	/^ffff800000104453:	48 b8 40 d5 10 00 00 	movabs $0xffff80000010d540,%rax$/;"	l
ffff80000010445a	kernel.asm	/^ffff80000010445a:	80 ff ff $/;"	l
ffff80000010445d	kernel.asm	/^ffff80000010445d:	89 d2                	mov    %edx,%edx$/;"	l
ffff80000010445f	kernel.asm	/^ffff80000010445f:	48 8b 14 d0          	mov    (%rax,%rdx,8),%rdx$/;"	l
ffff800000104463	kernel.asm	/^ffff800000104463:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff800000104466	kernel.asm	/^ffff800000104466:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff800000104469	kernel.asm	/^ffff800000104469:	0f b6 00             	movzbl (%rax),%eax$/;"	l
ffff80000010446c	kernel.asm	/^ffff80000010446c:	0f b6 c0             	movzbl %al,%eax$/;"	l
ffff80000010446f	kernel.asm	/^ffff80000010446f:	89 45 f8             	mov    %eax,-0x8(%rbp)$/;"	l
ffff800000104472	kernel.asm	/^ffff800000104472:	48 b8 58 83 11 00 00 	movabs $0xffff800000118358,%rax$/;"	l
ffff800000104479	kernel.asm	/^ffff800000104479:	80 ff ff $/;"	l
ffff80000010447c	kernel.asm	/^ffff80000010447c:	8b 00                	mov    (%rax),%eax$/;"	l
ffff80000010447e	kernel.asm	/^ffff80000010447e:	83 e0 08             	and    $0x8,%eax$/;"	l
ffff800000104481	kernel.asm	/^ffff800000104481:	85 c0                	test   %eax,%eax$/;"	l
ffff800000104483	kernel.asm	/^ffff800000104483:	74 22                	je     ffff8000001044a7 <kbdgetc+0x1de>$/;"	l
ffff800000104485	kernel.asm	/^ffff800000104485:	83 7d f8 60          	cmpl   $0x60,-0x8(%rbp)$/;"	l
ffff800000104489	kernel.asm	/^ffff800000104489:	76 0c                	jbe    ffff800000104497 <kbdgetc+0x1ce>$/;"	l
ffff80000010448b	kernel.asm	/^ffff80000010448b:	83 7d f8 7a          	cmpl   $0x7a,-0x8(%rbp)$/;"	l
ffff80000010448f	kernel.asm	/^ffff80000010448f:	77 06                	ja     ffff800000104497 <kbdgetc+0x1ce>$/;"	l
ffff800000104491	kernel.asm	/^ffff800000104491:	83 6d f8 20          	subl   $0x20,-0x8(%rbp)$/;"	l
ffff800000104495	kernel.asm	/^ffff800000104495:	eb 10                	jmp    ffff8000001044a7 <kbdgetc+0x1de>$/;"	l
ffff800000104497	kernel.asm	/^ffff800000104497:	83 7d f8 40          	cmpl   $0x40,-0x8(%rbp)$/;"	l
ffff80000010449b	kernel.asm	/^ffff80000010449b:	76 0a                	jbe    ffff8000001044a7 <kbdgetc+0x1de>$/;"	l
ffff80000010449d	kernel.asm	/^ffff80000010449d:	83 7d f8 5a          	cmpl   $0x5a,-0x8(%rbp)$/;"	l
ffff8000001044a1	kernel.asm	/^ffff8000001044a1:	77 04                	ja     ffff8000001044a7 <kbdgetc+0x1de>$/;"	l
ffff8000001044a3	kernel.asm	/^ffff8000001044a3:	83 45 f8 20          	addl   $0x20,-0x8(%rbp)$/;"	l
ffff8000001044a7	kernel.asm	/^ffff8000001044a7:	8b 45 f8             	mov    -0x8(%rbp),%eax$/;"	l
ffff8000001044aa	kernel.asm	/^ffff8000001044aa:	c9                   	leaveq $/;"	l
ffff8000001044ab	kernel.asm	/^ffff8000001044ab:	c3                   	retq   $/;"	l
ffff8000001044ac	kernel.asm	/^ffff8000001044ac <kbdintr>:$/;"	l
ffff8000001044ac	kernel.asm	/^ffff8000001044ac:	55                   	push   %rbp$/;"	l
ffff8000001044ad	kernel.asm	/^ffff8000001044ad:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff8000001044b0	kernel.asm	/^ffff8000001044b0:	48 bf c9 42 10 00 00 	movabs $0xffff8000001042c9,%rdi$/;"	l
ffff8000001044b7	kernel.asm	/^ffff8000001044b7:	80 ff ff $/;"	l
ffff8000001044ba	kernel.asm	/^ffff8000001044ba:	48 b8 c7 0e 10 00 00 	movabs $0xffff800000100ec7,%rax$/;"	l
ffff8000001044c1	kernel.asm	/^ffff8000001044c1:	80 ff ff $/;"	l
ffff8000001044c4	kernel.asm	/^ffff8000001044c4:	ff d0                	callq  *%rax$/;"	l
ffff8000001044c6	kernel.asm	/^ffff8000001044c6:	90                   	nop$/;"	l
ffff8000001044c7	kernel.asm	/^ffff8000001044c7:	5d                   	pop    %rbp$/;"	l
ffff8000001044c8	kernel.asm	/^ffff8000001044c8:	c3                   	retq   $/;"	l
ffff8000001044c9	kernel.asm	/^ffff8000001044c9 <inb>:$/;"	l
ffff8000001044c9	kernel.asm	/^ffff8000001044c9:	55                   	push   %rbp$/;"	l
ffff8000001044ca	kernel.asm	/^ffff8000001044ca:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff8000001044cd	kernel.asm	/^ffff8000001044cd:	48 83 ec 18          	sub    $0x18,%rsp$/;"	l
ffff8000001044d1	kernel.asm	/^ffff8000001044d1:	89 f8                	mov    %edi,%eax$/;"	l
ffff8000001044d3	kernel.asm	/^ffff8000001044d3:	66 89 45 ec          	mov    %ax,-0x14(%rbp)$/;"	l
ffff8000001044d7	kernel.asm	/^ffff8000001044d7:	0f b7 45 ec          	movzwl -0x14(%rbp),%eax$/;"	l
ffff8000001044db	kernel.asm	/^ffff8000001044db:	89 c2                	mov    %eax,%edx$/;"	l
ffff8000001044dd	kernel.asm	/^ffff8000001044dd:	ec                   	in     (%dx),%al$/;"	l
ffff8000001044de	kernel.asm	/^ffff8000001044de:	88 45 ff             	mov    %al,-0x1(%rbp)$/;"	l
ffff8000001044e1	kernel.asm	/^ffff8000001044e1:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax$/;"	l
ffff8000001044e5	kernel.asm	/^ffff8000001044e5:	c9                   	leaveq $/;"	l
ffff8000001044e6	kernel.asm	/^ffff8000001044e6:	c3                   	retq   $/;"	l
ffff8000001044e7	kernel.asm	/^ffff8000001044e7 <outb>:$/;"	l
ffff8000001044e7	kernel.asm	/^ffff8000001044e7:	55                   	push   %rbp$/;"	l
ffff8000001044e8	kernel.asm	/^ffff8000001044e8:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff8000001044eb	kernel.asm	/^ffff8000001044eb:	48 83 ec 08          	sub    $0x8,%rsp$/;"	l
ffff8000001044ef	kernel.asm	/^ffff8000001044ef:	89 fa                	mov    %edi,%edx$/;"	l
ffff8000001044f1	kernel.asm	/^ffff8000001044f1:	89 f0                	mov    %esi,%eax$/;"	l
ffff8000001044f3	kernel.asm	/^ffff8000001044f3:	66 89 55 fc          	mov    %dx,-0x4(%rbp)$/;"	l
ffff8000001044f7	kernel.asm	/^ffff8000001044f7:	88 45 f8             	mov    %al,-0x8(%rbp)$/;"	l
ffff8000001044fa	kernel.asm	/^ffff8000001044fa:	0f b6 45 f8          	movzbl -0x8(%rbp),%eax$/;"	l
ffff8000001044fe	kernel.asm	/^ffff8000001044fe:	0f b7 55 fc          	movzwl -0x4(%rbp),%edx$/;"	l
ffff800000104502	kernel.asm	/^ffff800000104502:	ee                   	out    %al,(%dx)$/;"	l
ffff800000104503	kernel.asm	/^ffff800000104503:	90                   	nop$/;"	l
ffff800000104504	kernel.asm	/^ffff800000104504:	c9                   	leaveq $/;"	l
ffff800000104505	kernel.asm	/^ffff800000104505:	c3                   	retq   $/;"	l
ffff800000104506	kernel.asm	/^ffff800000104506 <readeflags>:$/;"	l
ffff800000104506	kernel.asm	/^ffff800000104506:	55                   	push   %rbp$/;"	l
ffff800000104507	kernel.asm	/^ffff800000104507:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010450a	kernel.asm	/^ffff80000010450a:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff80000010450e	kernel.asm	/^ffff80000010450e:	9c                   	pushfq $/;"	l
ffff80000010450f	kernel.asm	/^ffff80000010450f:	58                   	pop    %rax$/;"	l
ffff800000104510	kernel.asm	/^ffff800000104510:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff800000104514	kernel.asm	/^ffff800000104514:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000104518	kernel.asm	/^ffff800000104518:	c9                   	leaveq $/;"	l
ffff800000104519	kernel.asm	/^ffff800000104519:	c3                   	retq   $/;"	l
ffff80000010451a	kernel.asm	/^ffff80000010451a <lapicw>:$/;"	l
ffff80000010451a	kernel.asm	/^ffff80000010451a:	55                   	push   %rbp$/;"	l
ffff80000010451b	kernel.asm	/^ffff80000010451b:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010451e	kernel.asm	/^ffff80000010451e:	48 83 ec 08          	sub    $0x8,%rsp$/;"	l
ffff800000104522	kernel.asm	/^ffff800000104522:	89 7d fc             	mov    %edi,-0x4(%rbp)$/;"	l
ffff800000104525	kernel.asm	/^ffff800000104525:	89 75 f8             	mov    %esi,-0x8(%rbp)$/;"	l
ffff800000104528	kernel.asm	/^ffff800000104528:	48 b8 60 83 11 00 00 	movabs $0xffff800000118360,%rax$/;"	l
ffff80000010452f	kernel.asm	/^ffff80000010452f:	80 ff ff $/;"	l
ffff800000104532	kernel.asm	/^ffff800000104532:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff800000104535	kernel.asm	/^ffff800000104535:	8b 55 fc             	mov    -0x4(%rbp),%edx$/;"	l
ffff800000104538	kernel.asm	/^ffff800000104538:	48 63 d2             	movslq %edx,%rdx$/;"	l
ffff80000010453b	kernel.asm	/^ffff80000010453b:	48 c1 e2 02          	shl    $0x2,%rdx$/;"	l
ffff80000010453f	kernel.asm	/^ffff80000010453f:	48 01 c2             	add    %rax,%rdx$/;"	l
ffff800000104542	kernel.asm	/^ffff800000104542:	8b 45 f8             	mov    -0x8(%rbp),%eax$/;"	l
ffff800000104545	kernel.asm	/^ffff800000104545:	89 02                	mov    %eax,(%rdx)$/;"	l
ffff800000104547	kernel.asm	/^ffff800000104547:	48 b8 60 83 11 00 00 	movabs $0xffff800000118360,%rax$/;"	l
ffff80000010454e	kernel.asm	/^ffff80000010454e:	80 ff ff $/;"	l
ffff800000104551	kernel.asm	/^ffff800000104551:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff800000104554	kernel.asm	/^ffff800000104554:	48 83 c0 20          	add    $0x20,%rax$/;"	l
ffff800000104558	kernel.asm	/^ffff800000104558:	8b 00                	mov    (%rax),%eax$/;"	l
ffff80000010455a	kernel.asm	/^ffff80000010455a:	90                   	nop$/;"	l
ffff80000010455b	kernel.asm	/^ffff80000010455b:	c9                   	leaveq $/;"	l
ffff80000010455c	kernel.asm	/^ffff80000010455c:	c3                   	retq   $/;"	l
ffff80000010455d	kernel.asm	/^ffff80000010455d <lapicinit>:$/;"	l
ffff80000010455d	kernel.asm	/^ffff80000010455d:	55                   	push   %rbp$/;"	l
ffff80000010455e	kernel.asm	/^ffff80000010455e:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000104561	kernel.asm	/^ffff800000104561:	48 b8 60 83 11 00 00 	movabs $0xffff800000118360,%rax$/;"	l
ffff800000104568	kernel.asm	/^ffff800000104568:	80 ff ff $/;"	l
ffff80000010456b	kernel.asm	/^ffff80000010456b:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff80000010456e	kernel.asm	/^ffff80000010456e:	48 85 c0             	test   %rax,%rax$/;"	l
ffff800000104571	kernel.asm	/^ffff800000104571:	0f 84 73 01 00 00    	je     ffff8000001046ea <lapicinit+0x18d>$/;"	l
ffff800000104577	kernel.asm	/^ffff800000104577:	be 3f 01 00 00       	mov    $0x13f,%esi$/;"	l
ffff80000010457c	kernel.asm	/^ffff80000010457c:	bf 3c 00 00 00       	mov    $0x3c,%edi$/;"	l
ffff800000104581	kernel.asm	/^ffff800000104581:	48 b8 1a 45 10 00 00 	movabs $0xffff80000010451a,%rax$/;"	l
ffff800000104588	kernel.asm	/^ffff800000104588:	80 ff ff $/;"	l
ffff80000010458b	kernel.asm	/^ffff80000010458b:	ff d0                	callq  *%rax$/;"	l
ffff80000010458d	kernel.asm	/^ffff80000010458d:	be 0b 00 00 00       	mov    $0xb,%esi$/;"	l
ffff800000104592	kernel.asm	/^ffff800000104592:	bf f8 00 00 00       	mov    $0xf8,%edi$/;"	l
ffff800000104597	kernel.asm	/^ffff800000104597:	48 b8 1a 45 10 00 00 	movabs $0xffff80000010451a,%rax$/;"	l
ffff80000010459e	kernel.asm	/^ffff80000010459e:	80 ff ff $/;"	l
ffff8000001045a1	kernel.asm	/^ffff8000001045a1:	ff d0                	callq  *%rax$/;"	l
ffff8000001045a3	kernel.asm	/^ffff8000001045a3:	be 20 00 02 00       	mov    $0x20020,%esi$/;"	l
ffff8000001045a8	kernel.asm	/^ffff8000001045a8:	bf c8 00 00 00       	mov    $0xc8,%edi$/;"	l
ffff8000001045ad	kernel.asm	/^ffff8000001045ad:	48 b8 1a 45 10 00 00 	movabs $0xffff80000010451a,%rax$/;"	l
ffff8000001045b4	kernel.asm	/^ffff8000001045b4:	80 ff ff $/;"	l
ffff8000001045b7	kernel.asm	/^ffff8000001045b7:	ff d0                	callq  *%rax$/;"	l
ffff8000001045b9	kernel.asm	/^ffff8000001045b9:	be 80 96 98 00       	mov    $0x989680,%esi$/;"	l
ffff8000001045be	kernel.asm	/^ffff8000001045be:	bf e0 00 00 00       	mov    $0xe0,%edi$/;"	l
ffff8000001045c3	kernel.asm	/^ffff8000001045c3:	48 b8 1a 45 10 00 00 	movabs $0xffff80000010451a,%rax$/;"	l
ffff8000001045ca	kernel.asm	/^ffff8000001045ca:	80 ff ff $/;"	l
ffff8000001045cd	kernel.asm	/^ffff8000001045cd:	ff d0                	callq  *%rax$/;"	l
ffff8000001045cf	kernel.asm	/^ffff8000001045cf:	be 00 00 01 00       	mov    $0x10000,%esi$/;"	l
ffff8000001045d4	kernel.asm	/^ffff8000001045d4:	bf d4 00 00 00       	mov    $0xd4,%edi$/;"	l
ffff8000001045d9	kernel.asm	/^ffff8000001045d9:	48 b8 1a 45 10 00 00 	movabs $0xffff80000010451a,%rax$/;"	l
ffff8000001045e0	kernel.asm	/^ffff8000001045e0:	80 ff ff $/;"	l
ffff8000001045e3	kernel.asm	/^ffff8000001045e3:	ff d0                	callq  *%rax$/;"	l
ffff8000001045e5	kernel.asm	/^ffff8000001045e5:	be 00 00 01 00       	mov    $0x10000,%esi$/;"	l
ffff8000001045ea	kernel.asm	/^ffff8000001045ea:	bf d8 00 00 00       	mov    $0xd8,%edi$/;"	l
ffff8000001045ef	kernel.asm	/^ffff8000001045ef:	48 b8 1a 45 10 00 00 	movabs $0xffff80000010451a,%rax$/;"	l
ffff8000001045f6	kernel.asm	/^ffff8000001045f6:	80 ff ff $/;"	l
ffff8000001045f9	kernel.asm	/^ffff8000001045f9:	ff d0                	callq  *%rax$/;"	l
ffff8000001045fb	kernel.asm	/^ffff8000001045fb:	48 b8 60 83 11 00 00 	movabs $0xffff800000118360,%rax$/;"	l
ffff800000104602	kernel.asm	/^ffff800000104602:	80 ff ff $/;"	l
ffff800000104605	kernel.asm	/^ffff800000104605:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff800000104608	kernel.asm	/^ffff800000104608:	48 83 c0 30          	add    $0x30,%rax$/;"	l
ffff80000010460c	kernel.asm	/^ffff80000010460c:	8b 00                	mov    (%rax),%eax$/;"	l
ffff80000010460e	kernel.asm	/^ffff80000010460e:	c1 e8 10             	shr    $0x10,%eax$/;"	l
ffff800000104611	kernel.asm	/^ffff800000104611:	0f b6 c0             	movzbl %al,%eax$/;"	l
ffff800000104614	kernel.asm	/^ffff800000104614:	83 f8 03             	cmp    $0x3,%eax$/;"	l
ffff800000104617	kernel.asm	/^ffff800000104617:	76 16                	jbe    ffff80000010462f <lapicinit+0xd2>$/;"	l
ffff800000104619	kernel.asm	/^ffff800000104619:	be 00 00 01 00       	mov    $0x10000,%esi$/;"	l
ffff80000010461e	kernel.asm	/^ffff80000010461e:	bf d0 00 00 00       	mov    $0xd0,%edi$/;"	l
ffff800000104623	kernel.asm	/^ffff800000104623:	48 b8 1a 45 10 00 00 	movabs $0xffff80000010451a,%rax$/;"	l
ffff80000010462a	kernel.asm	/^ffff80000010462a:	80 ff ff $/;"	l
ffff80000010462d	kernel.asm	/^ffff80000010462d:	ff d0                	callq  *%rax$/;"	l
ffff80000010462f	kernel.asm	/^ffff80000010462f:	be 33 00 00 00       	mov    $0x33,%esi$/;"	l
ffff800000104634	kernel.asm	/^ffff800000104634:	bf dc 00 00 00       	mov    $0xdc,%edi$/;"	l
ffff800000104639	kernel.asm	/^ffff800000104639:	48 b8 1a 45 10 00 00 	movabs $0xffff80000010451a,%rax$/;"	l
ffff800000104640	kernel.asm	/^ffff800000104640:	80 ff ff $/;"	l
ffff800000104643	kernel.asm	/^ffff800000104643:	ff d0                	callq  *%rax$/;"	l
ffff800000104645	kernel.asm	/^ffff800000104645:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffff80000010464a	kernel.asm	/^ffff80000010464a:	bf a0 00 00 00       	mov    $0xa0,%edi$/;"	l
ffff80000010464f	kernel.asm	/^ffff80000010464f:	48 b8 1a 45 10 00 00 	movabs $0xffff80000010451a,%rax$/;"	l
ffff800000104656	kernel.asm	/^ffff800000104656:	80 ff ff $/;"	l
ffff800000104659	kernel.asm	/^ffff800000104659:	ff d0                	callq  *%rax$/;"	l
ffff80000010465b	kernel.asm	/^ffff80000010465b:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffff800000104660	kernel.asm	/^ffff800000104660:	bf a0 00 00 00       	mov    $0xa0,%edi$/;"	l
ffff800000104665	kernel.asm	/^ffff800000104665:	48 b8 1a 45 10 00 00 	movabs $0xffff80000010451a,%rax$/;"	l
ffff80000010466c	kernel.asm	/^ffff80000010466c:	80 ff ff $/;"	l
ffff80000010466f	kernel.asm	/^ffff80000010466f:	ff d0                	callq  *%rax$/;"	l
ffff800000104671	kernel.asm	/^ffff800000104671:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffff800000104676	kernel.asm	/^ffff800000104676:	bf 2c 00 00 00       	mov    $0x2c,%edi$/;"	l
ffff80000010467b	kernel.asm	/^ffff80000010467b:	48 b8 1a 45 10 00 00 	movabs $0xffff80000010451a,%rax$/;"	l
ffff800000104682	kernel.asm	/^ffff800000104682:	80 ff ff $/;"	l
ffff800000104685	kernel.asm	/^ffff800000104685:	ff d0                	callq  *%rax$/;"	l
ffff800000104687	kernel.asm	/^ffff800000104687:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffff80000010468c	kernel.asm	/^ffff80000010468c:	bf c4 00 00 00       	mov    $0xc4,%edi$/;"	l
ffff800000104691	kernel.asm	/^ffff800000104691:	48 b8 1a 45 10 00 00 	movabs $0xffff80000010451a,%rax$/;"	l
ffff800000104698	kernel.asm	/^ffff800000104698:	80 ff ff $/;"	l
ffff80000010469b	kernel.asm	/^ffff80000010469b:	ff d0                	callq  *%rax$/;"	l
ffff80000010469d	kernel.asm	/^ffff80000010469d:	be 00 85 08 00       	mov    $0x88500,%esi$/;"	l
ffff8000001046a2	kernel.asm	/^ffff8000001046a2:	bf c0 00 00 00       	mov    $0xc0,%edi$/;"	l
ffff8000001046a7	kernel.asm	/^ffff8000001046a7:	48 b8 1a 45 10 00 00 	movabs $0xffff80000010451a,%rax$/;"	l
ffff8000001046ae	kernel.asm	/^ffff8000001046ae:	80 ff ff $/;"	l
ffff8000001046b1	kernel.asm	/^ffff8000001046b1:	ff d0                	callq  *%rax$/;"	l
ffff8000001046b3	kernel.asm	/^ffff8000001046b3:	90                   	nop$/;"	l
ffff8000001046b4	kernel.asm	/^ffff8000001046b4:	48 b8 60 83 11 00 00 	movabs $0xffff800000118360,%rax$/;"	l
ffff8000001046bb	kernel.asm	/^ffff8000001046bb:	80 ff ff $/;"	l
ffff8000001046be	kernel.asm	/^ffff8000001046be:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff8000001046c1	kernel.asm	/^ffff8000001046c1:	48 05 00 03 00 00    	add    $0x300,%rax$/;"	l
ffff8000001046c7	kernel.asm	/^ffff8000001046c7:	8b 00                	mov    (%rax),%eax$/;"	l
ffff8000001046c9	kernel.asm	/^ffff8000001046c9:	25 00 10 00 00       	and    $0x1000,%eax$/;"	l
ffff8000001046ce	kernel.asm	/^ffff8000001046ce:	85 c0                	test   %eax,%eax$/;"	l
ffff8000001046d0	kernel.asm	/^ffff8000001046d0:	75 e2                	jne    ffff8000001046b4 <lapicinit+0x157>$/;"	l
ffff8000001046d2	kernel.asm	/^ffff8000001046d2:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffff8000001046d7	kernel.asm	/^ffff8000001046d7:	bf 20 00 00 00       	mov    $0x20,%edi$/;"	l
ffff8000001046dc	kernel.asm	/^ffff8000001046dc:	48 b8 1a 45 10 00 00 	movabs $0xffff80000010451a,%rax$/;"	l
ffff8000001046e3	kernel.asm	/^ffff8000001046e3:	80 ff ff $/;"	l
ffff8000001046e6	kernel.asm	/^ffff8000001046e6:	ff d0                	callq  *%rax$/;"	l
ffff8000001046e8	kernel.asm	/^ffff8000001046e8:	eb 01                	jmp    ffff8000001046eb <lapicinit+0x18e>$/;"	l
ffff8000001046ea	kernel.asm	/^ffff8000001046ea:	90                   	nop$/;"	l
ffff8000001046eb	kernel.asm	/^ffff8000001046eb:	5d                   	pop    %rbp$/;"	l
ffff8000001046ec	kernel.asm	/^ffff8000001046ec:	c3                   	retq   $/;"	l
ffff8000001046ed	kernel.asm	/^ffff8000001046ed <cpunum>:$/;"	l
ffff8000001046ed	kernel.asm	/^ffff8000001046ed:	55                   	push   %rbp$/;"	l
ffff8000001046ee	kernel.asm	/^ffff8000001046ee:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff8000001046f1	kernel.asm	/^ffff8000001046f1:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff8000001046f5	kernel.asm	/^ffff8000001046f5:	48 b8 06 45 10 00 00 	movabs $0xffff800000104506,%rax$/;"	l
ffff8000001046fc	kernel.asm	/^ffff8000001046fc:	80 ff ff $/;"	l
ffff8000001046ff	kernel.asm	/^ffff8000001046ff:	ff d0                	callq  *%rax$/;"	l
ffff800000104701	kernel.asm	/^ffff800000104701:	25 00 02 00 00       	and    $0x200,%eax$/;"	l
ffff800000104706	kernel.asm	/^ffff800000104706:	48 85 c0             	test   %rax,%rax$/;"	l
ffff800000104709	kernel.asm	/^ffff800000104709:	74 41                	je     ffff80000010474c <cpunum+0x5f>$/;"	l
ffff80000010470b	kernel.asm	/^ffff80000010470b:	48 b8 68 83 11 00 00 	movabs $0xffff800000118368,%rax$/;"	l
ffff800000104712	kernel.asm	/^ffff800000104712:	80 ff ff $/;"	l
ffff800000104715	kernel.asm	/^ffff800000104715:	8b 00                	mov    (%rax),%eax$/;"	l
ffff800000104717	kernel.asm	/^ffff800000104717:	8d 48 01             	lea    0x1(%rax),%ecx$/;"	l
ffff80000010471a	kernel.asm	/^ffff80000010471a:	48 ba 68 83 11 00 00 	movabs $0xffff800000118368,%rdx$/;"	l
ffff800000104721	kernel.asm	/^ffff800000104721:	80 ff ff $/;"	l
ffff800000104724	kernel.asm	/^ffff800000104724:	89 0a                	mov    %ecx,(%rdx)$/;"	l
ffff800000104726	kernel.asm	/^ffff800000104726:	85 c0                	test   %eax,%eax$/;"	l
ffff800000104728	kernel.asm	/^ffff800000104728:	75 22                	jne    ffff80000010474c <cpunum+0x5f>$/;"	l
ffff80000010472a	kernel.asm	/^ffff80000010472a:	48 8b 45 08          	mov    0x8(%rbp),%rax$/;"	l
ffff80000010472e	kernel.asm	/^ffff80000010472e:	48 89 c6             	mov    %rax,%rsi$/;"	l
ffff800000104731	kernel.asm	/^ffff800000104731:	48 bf 10 c4 10 00 00 	movabs $0xffff80000010c410,%rdi$/;"	l
ffff800000104738	kernel.asm	/^ffff800000104738:	80 ff ff $/;"	l
ffff80000010473b	kernel.asm	/^ffff80000010473b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000104740	kernel.asm	/^ffff800000104740:	48 ba ac 07 10 00 00 	movabs $0xffff8000001007ac,%rdx$/;"	l
ffff800000104747	kernel.asm	/^ffff800000104747:	80 ff ff $/;"	l
ffff80000010474a	kernel.asm	/^ffff80000010474a:	ff d2                	callq  *%rdx$/;"	l
ffff80000010474c	kernel.asm	/^ffff80000010474c:	48 b8 60 83 11 00 00 	movabs $0xffff800000118360,%rax$/;"	l
ffff800000104753	kernel.asm	/^ffff800000104753:	80 ff ff $/;"	l
ffff800000104756	kernel.asm	/^ffff800000104756:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff800000104759	kernel.asm	/^ffff800000104759:	48 85 c0             	test   %rax,%rax$/;"	l
ffff80000010475c	kernel.asm	/^ffff80000010475c:	75 0a                	jne    ffff800000104768 <cpunum+0x7b>$/;"	l
ffff80000010475e	kernel.asm	/^ffff80000010475e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000104763	kernel.asm	/^ffff800000104763:	e9 8b 00 00 00       	jmpq   ffff8000001047f3 <cpunum+0x106>$/;"	l
ffff800000104768	kernel.asm	/^ffff800000104768:	48 b8 60 83 11 00 00 	movabs $0xffff800000118360,%rax$/;"	l
ffff80000010476f	kernel.asm	/^ffff80000010476f:	80 ff ff $/;"	l
ffff800000104772	kernel.asm	/^ffff800000104772:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff800000104775	kernel.asm	/^ffff800000104775:	48 83 c0 20          	add    $0x20,%rax$/;"	l
ffff800000104779	kernel.asm	/^ffff800000104779:	8b 00                	mov    (%rax),%eax$/;"	l
ffff80000010477b	kernel.asm	/^ffff80000010477b:	c1 e8 18             	shr    $0x18,%eax$/;"	l
ffff80000010477e	kernel.asm	/^ffff80000010477e:	89 45 f8             	mov    %eax,-0x8(%rbp)$/;"	l
ffff800000104781	kernel.asm	/^ffff800000104781:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)$/;"	l
ffff800000104788	kernel.asm	/^ffff800000104788:	eb 42                	jmp    ffff8000001047cc <cpunum+0xdf>$/;"	l
ffff80000010478a	kernel.asm	/^ffff80000010478a:	48 b9 80 84 11 00 00 	movabs $0xffff800000118480,%rcx$/;"	l
ffff800000104791	kernel.asm	/^ffff800000104791:	80 ff ff $/;"	l
ffff800000104794	kernel.asm	/^ffff800000104794:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff800000104797	kernel.asm	/^ffff800000104797:	48 98                	cltq   $/;"	l
ffff800000104799	kernel.asm	/^ffff800000104799:	48 89 c2             	mov    %rax,%rdx$/;"	l
ffff80000010479c	kernel.asm	/^ffff80000010479c:	48 8d 04 d5 00 00 00 	lea    0x0(,%rdx,8),%rax$/;"	l
ffff8000001047a3	kernel.asm	/^ffff8000001047a3:	00 $/;"	l
ffff8000001047a4	kernel.asm	/^ffff8000001047a4:	48 89 c2             	mov    %rax,%rdx$/;"	l
ffff8000001047a7	kernel.asm	/^ffff8000001047a7:	48 89 d0             	mov    %rdx,%rax$/;"	l
ffff8000001047aa	kernel.asm	/^ffff8000001047aa:	48 c1 e0 05          	shl    $0x5,%rax$/;"	l
ffff8000001047ae	kernel.asm	/^ffff8000001047ae:	48 29 d0             	sub    %rdx,%rax$/;"	l
ffff8000001047b1	kernel.asm	/^ffff8000001047b1:	48 01 c8             	add    %rcx,%rax$/;"	l
ffff8000001047b4	kernel.asm	/^ffff8000001047b4:	48 83 c0 01          	add    $0x1,%rax$/;"	l
ffff8000001047b8	kernel.asm	/^ffff8000001047b8:	0f b6 00             	movzbl (%rax),%eax$/;"	l
ffff8000001047bb	kernel.asm	/^ffff8000001047bb:	0f b6 c0             	movzbl %al,%eax$/;"	l
ffff8000001047be	kernel.asm	/^ffff8000001047be:	3b 45 f8             	cmp    -0x8(%rbp),%eax$/;"	l
ffff8000001047c1	kernel.asm	/^ffff8000001047c1:	75 05                	jne    ffff8000001047c8 <cpunum+0xdb>$/;"	l
ffff8000001047c3	kernel.asm	/^ffff8000001047c3:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff8000001047c6	kernel.asm	/^ffff8000001047c6:	eb 2b                	jmp    ffff8000001047f3 <cpunum+0x106>$/;"	l
ffff8000001047c8	kernel.asm	/^ffff8000001047c8:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)$/;"	l
ffff8000001047cc	kernel.asm	/^ffff8000001047cc:	48 b8 40 8c 11 00 00 	movabs $0xffff800000118c40,%rax$/;"	l
ffff8000001047d3	kernel.asm	/^ffff8000001047d3:	80 ff ff $/;"	l
ffff8000001047d6	kernel.asm	/^ffff8000001047d6:	8b 00                	mov    (%rax),%eax$/;"	l
ffff8000001047d8	kernel.asm	/^ffff8000001047d8:	39 45 fc             	cmp    %eax,-0x4(%rbp)$/;"	l
ffff8000001047db	kernel.asm	/^ffff8000001047db:	7c ad                	jl     ffff80000010478a <cpunum+0x9d>$/;"	l
ffff8000001047dd	kernel.asm	/^ffff8000001047dd:	48 bf 3c c4 10 00 00 	movabs $0xffff80000010c43c,%rdi$/;"	l
ffff8000001047e4	kernel.asm	/^ffff8000001047e4:	80 ff ff $/;"	l
ffff8000001047e7	kernel.asm	/^ffff8000001047e7:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff8000001047ee	kernel.asm	/^ffff8000001047ee:	80 ff ff $/;"	l
ffff8000001047f1	kernel.asm	/^ffff8000001047f1:	ff d0                	callq  *%rax$/;"	l
ffff8000001047f3	kernel.asm	/^ffff8000001047f3:	c9                   	leaveq $/;"	l
ffff8000001047f4	kernel.asm	/^ffff8000001047f4:	c3                   	retq   $/;"	l
ffff8000001047f5	kernel.asm	/^ffff8000001047f5 <lapiceoi>:$/;"	l
ffff8000001047f5	kernel.asm	/^ffff8000001047f5:	55                   	push   %rbp$/;"	l
ffff8000001047f6	kernel.asm	/^ffff8000001047f6:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff8000001047f9	kernel.asm	/^ffff8000001047f9:	48 b8 60 83 11 00 00 	movabs $0xffff800000118360,%rax$/;"	l
ffff800000104800	kernel.asm	/^ffff800000104800:	80 ff ff $/;"	l
ffff800000104803	kernel.asm	/^ffff800000104803:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff800000104806	kernel.asm	/^ffff800000104806:	48 85 c0             	test   %rax,%rax$/;"	l
ffff800000104809	kernel.asm	/^ffff800000104809:	74 16                	je     ffff800000104821 <lapiceoi+0x2c>$/;"	l
ffff80000010480b	kernel.asm	/^ffff80000010480b:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffff800000104810	kernel.asm	/^ffff800000104810:	bf 2c 00 00 00       	mov    $0x2c,%edi$/;"	l
ffff800000104815	kernel.asm	/^ffff800000104815:	48 b8 1a 45 10 00 00 	movabs $0xffff80000010451a,%rax$/;"	l
ffff80000010481c	kernel.asm	/^ffff80000010481c:	80 ff ff $/;"	l
ffff80000010481f	kernel.asm	/^ffff80000010481f:	ff d0                	callq  *%rax$/;"	l
ffff800000104821	kernel.asm	/^ffff800000104821:	90                   	nop$/;"	l
ffff800000104822	kernel.asm	/^ffff800000104822:	5d                   	pop    %rbp$/;"	l
ffff800000104823	kernel.asm	/^ffff800000104823:	c3                   	retq   $/;"	l
ffff800000104824	kernel.asm	/^ffff800000104824 <microdelay>:$/;"	l
ffff800000104824	kernel.asm	/^ffff800000104824:	55                   	push   %rbp$/;"	l
ffff800000104825	kernel.asm	/^ffff800000104825:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000104828	kernel.asm	/^ffff800000104828:	48 83 ec 08          	sub    $0x8,%rsp$/;"	l
ffff80000010482c	kernel.asm	/^ffff80000010482c:	89 7d fc             	mov    %edi,-0x4(%rbp)$/;"	l
ffff80000010482f	kernel.asm	/^ffff80000010482f:	90                   	nop$/;"	l
ffff800000104830	kernel.asm	/^ffff800000104830:	c9                   	leaveq $/;"	l
ffff800000104831	kernel.asm	/^ffff800000104831:	c3                   	retq   $/;"	l
ffff800000104832	kernel.asm	/^ffff800000104832 <lapicstartap>:$/;"	l
ffff800000104832	kernel.asm	/^ffff800000104832:	55                   	push   %rbp$/;"	l
ffff800000104833	kernel.asm	/^ffff800000104833:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000104836	kernel.asm	/^ffff800000104836:	48 83 ec 18          	sub    $0x18,%rsp$/;"	l
ffff80000010483a	kernel.asm	/^ffff80000010483a:	89 f8                	mov    %edi,%eax$/;"	l
ffff80000010483c	kernel.asm	/^ffff80000010483c:	89 75 e8             	mov    %esi,-0x18(%rbp)$/;"	l
ffff80000010483f	kernel.asm	/^ffff80000010483f:	88 45 ec             	mov    %al,-0x14(%rbp)$/;"	l
ffff800000104842	kernel.asm	/^ffff800000104842:	be 0f 00 00 00       	mov    $0xf,%esi$/;"	l
ffff800000104847	kernel.asm	/^ffff800000104847:	bf 70 00 00 00       	mov    $0x70,%edi$/;"	l
ffff80000010484c	kernel.asm	/^ffff80000010484c:	48 b8 e7 44 10 00 00 	movabs $0xffff8000001044e7,%rax$/;"	l
ffff800000104853	kernel.asm	/^ffff800000104853:	80 ff ff $/;"	l
ffff800000104856	kernel.asm	/^ffff800000104856:	ff d0                	callq  *%rax$/;"	l
ffff800000104858	kernel.asm	/^ffff800000104858:	be 0a 00 00 00       	mov    $0xa,%esi$/;"	l
ffff80000010485d	kernel.asm	/^ffff80000010485d:	bf 71 00 00 00       	mov    $0x71,%edi$/;"	l
ffff800000104862	kernel.asm	/^ffff800000104862:	48 b8 e7 44 10 00 00 	movabs $0xffff8000001044e7,%rax$/;"	l
ffff800000104869	kernel.asm	/^ffff800000104869:	80 ff ff $/;"	l
ffff80000010486c	kernel.asm	/^ffff80000010486c:	ff d0                	callq  *%rax$/;"	l
ffff80000010486e	kernel.asm	/^ffff80000010486e:	48 b8 67 04 00 00 00 	movabs $0xffff800000000467,%rax$/;"	l
ffff800000104875	kernel.asm	/^ffff800000104875:	80 ff ff $/;"	l
ffff800000104878	kernel.asm	/^ffff800000104878:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ffff80000010487c	kernel.asm	/^ffff80000010487c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000104880	kernel.asm	/^ffff800000104880:	66 c7 00 00 00       	movw   $0x0,(%rax)$/;"	l
ffff800000104885	kernel.asm	/^ffff800000104885:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000104889	kernel.asm	/^ffff800000104889:	48 83 c0 02          	add    $0x2,%rax$/;"	l
ffff80000010488d	kernel.asm	/^ffff80000010488d:	8b 55 e8             	mov    -0x18(%rbp),%edx$/;"	l
ffff800000104890	kernel.asm	/^ffff800000104890:	c1 ea 04             	shr    $0x4,%edx$/;"	l
ffff800000104893	kernel.asm	/^ffff800000104893:	66 89 10             	mov    %dx,(%rax)$/;"	l
ffff800000104896	kernel.asm	/^ffff800000104896:	0f b6 45 ec          	movzbl -0x14(%rbp),%eax$/;"	l
ffff80000010489a	kernel.asm	/^ffff80000010489a:	c1 e0 18             	shl    $0x18,%eax$/;"	l
ffff80000010489d	kernel.asm	/^ffff80000010489d:	89 c6                	mov    %eax,%esi$/;"	l
ffff80000010489f	kernel.asm	/^ffff80000010489f:	bf c4 00 00 00       	mov    $0xc4,%edi$/;"	l
ffff8000001048a4	kernel.asm	/^ffff8000001048a4:	48 b8 1a 45 10 00 00 	movabs $0xffff80000010451a,%rax$/;"	l
ffff8000001048ab	kernel.asm	/^ffff8000001048ab:	80 ff ff $/;"	l
ffff8000001048ae	kernel.asm	/^ffff8000001048ae:	ff d0                	callq  *%rax$/;"	l
ffff8000001048b0	kernel.asm	/^ffff8000001048b0:	be 00 c5 00 00       	mov    $0xc500,%esi$/;"	l
ffff8000001048b5	kernel.asm	/^ffff8000001048b5:	bf c0 00 00 00       	mov    $0xc0,%edi$/;"	l
ffff8000001048ba	kernel.asm	/^ffff8000001048ba:	48 b8 1a 45 10 00 00 	movabs $0xffff80000010451a,%rax$/;"	l
ffff8000001048c1	kernel.asm	/^ffff8000001048c1:	80 ff ff $/;"	l
ffff8000001048c4	kernel.asm	/^ffff8000001048c4:	ff d0                	callq  *%rax$/;"	l
ffff8000001048c6	kernel.asm	/^ffff8000001048c6:	bf c8 00 00 00       	mov    $0xc8,%edi$/;"	l
ffff8000001048cb	kernel.asm	/^ffff8000001048cb:	48 b8 24 48 10 00 00 	movabs $0xffff800000104824,%rax$/;"	l
ffff8000001048d2	kernel.asm	/^ffff8000001048d2:	80 ff ff $/;"	l
ffff8000001048d5	kernel.asm	/^ffff8000001048d5:	ff d0                	callq  *%rax$/;"	l
ffff8000001048d7	kernel.asm	/^ffff8000001048d7:	be 00 85 00 00       	mov    $0x8500,%esi$/;"	l
ffff8000001048dc	kernel.asm	/^ffff8000001048dc:	bf c0 00 00 00       	mov    $0xc0,%edi$/;"	l
ffff8000001048e1	kernel.asm	/^ffff8000001048e1:	48 b8 1a 45 10 00 00 	movabs $0xffff80000010451a,%rax$/;"	l
ffff8000001048e8	kernel.asm	/^ffff8000001048e8:	80 ff ff $/;"	l
ffff8000001048eb	kernel.asm	/^ffff8000001048eb:	ff d0                	callq  *%rax$/;"	l
ffff8000001048ed	kernel.asm	/^ffff8000001048ed:	bf 64 00 00 00       	mov    $0x64,%edi$/;"	l
ffff8000001048f2	kernel.asm	/^ffff8000001048f2:	48 b8 24 48 10 00 00 	movabs $0xffff800000104824,%rax$/;"	l
ffff8000001048f9	kernel.asm	/^ffff8000001048f9:	80 ff ff $/;"	l
ffff8000001048fc	kernel.asm	/^ffff8000001048fc:	ff d0                	callq  *%rax$/;"	l
ffff8000001048fe	kernel.asm	/^ffff8000001048fe:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)$/;"	l
ffff800000104905	kernel.asm	/^ffff800000104905:	eb 4b                	jmp    ffff800000104952 <lapicstartap+0x120>$/;"	l
ffff800000104907	kernel.asm	/^ffff800000104907:	0f b6 45 ec          	movzbl -0x14(%rbp),%eax$/;"	l
ffff80000010490b	kernel.asm	/^ffff80000010490b:	c1 e0 18             	shl    $0x18,%eax$/;"	l
ffff80000010490e	kernel.asm	/^ffff80000010490e:	89 c6                	mov    %eax,%esi$/;"	l
ffff800000104910	kernel.asm	/^ffff800000104910:	bf c4 00 00 00       	mov    $0xc4,%edi$/;"	l
ffff800000104915	kernel.asm	/^ffff800000104915:	48 b8 1a 45 10 00 00 	movabs $0xffff80000010451a,%rax$/;"	l
ffff80000010491c	kernel.asm	/^ffff80000010491c:	80 ff ff $/;"	l
ffff80000010491f	kernel.asm	/^ffff80000010491f:	ff d0                	callq  *%rax$/;"	l
ffff800000104921	kernel.asm	/^ffff800000104921:	8b 45 e8             	mov    -0x18(%rbp),%eax$/;"	l
ffff800000104924	kernel.asm	/^ffff800000104924:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
ffff800000104927	kernel.asm	/^ffff800000104927:	80 cc 06             	or     $0x6,%ah$/;"	l
ffff80000010492a	kernel.asm	/^ffff80000010492a:	89 c6                	mov    %eax,%esi$/;"	l
ffff80000010492c	kernel.asm	/^ffff80000010492c:	bf c0 00 00 00       	mov    $0xc0,%edi$/;"	l
ffff800000104931	kernel.asm	/^ffff800000104931:	48 b8 1a 45 10 00 00 	movabs $0xffff80000010451a,%rax$/;"	l
ffff800000104938	kernel.asm	/^ffff800000104938:	80 ff ff $/;"	l
ffff80000010493b	kernel.asm	/^ffff80000010493b:	ff d0                	callq  *%rax$/;"	l
ffff80000010493d	kernel.asm	/^ffff80000010493d:	bf c8 00 00 00       	mov    $0xc8,%edi$/;"	l
ffff800000104942	kernel.asm	/^ffff800000104942:	48 b8 24 48 10 00 00 	movabs $0xffff800000104824,%rax$/;"	l
ffff800000104949	kernel.asm	/^ffff800000104949:	80 ff ff $/;"	l
ffff80000010494c	kernel.asm	/^ffff80000010494c:	ff d0                	callq  *%rax$/;"	l
ffff80000010494e	kernel.asm	/^ffff80000010494e:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)$/;"	l
ffff800000104952	kernel.asm	/^ffff800000104952:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)$/;"	l
ffff800000104956	kernel.asm	/^ffff800000104956:	7e af                	jle    ffff800000104907 <lapicstartap+0xd5>$/;"	l
ffff800000104958	kernel.asm	/^ffff800000104958:	90                   	nop$/;"	l
ffff800000104959	kernel.asm	/^ffff800000104959:	c9                   	leaveq $/;"	l
ffff80000010495a	kernel.asm	/^ffff80000010495a:	c3                   	retq   $/;"	l
ffff80000010495b	kernel.asm	/^ffff80000010495b <cmos_read>:$/;"	l
ffff80000010495b	kernel.asm	/^ffff80000010495b:	55                   	push   %rbp$/;"	l
ffff80000010495c	kernel.asm	/^ffff80000010495c:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010495f	kernel.asm	/^ffff80000010495f:	48 83 ec 08          	sub    $0x8,%rsp$/;"	l
ffff800000104963	kernel.asm	/^ffff800000104963:	89 7d fc             	mov    %edi,-0x4(%rbp)$/;"	l
ffff800000104966	kernel.asm	/^ffff800000104966:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff800000104969	kernel.asm	/^ffff800000104969:	0f b6 c0             	movzbl %al,%eax$/;"	l
ffff80000010496c	kernel.asm	/^ffff80000010496c:	89 c6                	mov    %eax,%esi$/;"	l
ffff80000010496e	kernel.asm	/^ffff80000010496e:	bf 70 00 00 00       	mov    $0x70,%edi$/;"	l
ffff800000104973	kernel.asm	/^ffff800000104973:	48 b8 e7 44 10 00 00 	movabs $0xffff8000001044e7,%rax$/;"	l
ffff80000010497a	kernel.asm	/^ffff80000010497a:	80 ff ff $/;"	l
ffff80000010497d	kernel.asm	/^ffff80000010497d:	ff d0                	callq  *%rax$/;"	l
ffff80000010497f	kernel.asm	/^ffff80000010497f:	bf c8 00 00 00       	mov    $0xc8,%edi$/;"	l
ffff800000104984	kernel.asm	/^ffff800000104984:	48 b8 24 48 10 00 00 	movabs $0xffff800000104824,%rax$/;"	l
ffff80000010498b	kernel.asm	/^ffff80000010498b:	80 ff ff $/;"	l
ffff80000010498e	kernel.asm	/^ffff80000010498e:	ff d0                	callq  *%rax$/;"	l
ffff800000104990	kernel.asm	/^ffff800000104990:	bf 71 00 00 00       	mov    $0x71,%edi$/;"	l
ffff800000104995	kernel.asm	/^ffff800000104995:	48 b8 c9 44 10 00 00 	movabs $0xffff8000001044c9,%rax$/;"	l
ffff80000010499c	kernel.asm	/^ffff80000010499c:	80 ff ff $/;"	l
ffff80000010499f	kernel.asm	/^ffff80000010499f:	ff d0                	callq  *%rax$/;"	l
ffff8000001049a1	kernel.asm	/^ffff8000001049a1:	0f b6 c0             	movzbl %al,%eax$/;"	l
ffff8000001049a4	kernel.asm	/^ffff8000001049a4:	c9                   	leaveq $/;"	l
ffff8000001049a5	kernel.asm	/^ffff8000001049a5:	c3                   	retq   $/;"	l
ffff8000001049a6	kernel.asm	/^ffff8000001049a6 <fill_rtcdate>:$/;"	l
ffff8000001049a6	kernel.asm	/^ffff8000001049a6:	55                   	push   %rbp$/;"	l
ffff8000001049a7	kernel.asm	/^ffff8000001049a7:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff8000001049aa	kernel.asm	/^ffff8000001049aa:	48 83 ec 08          	sub    $0x8,%rsp$/;"	l
ffff8000001049ae	kernel.asm	/^ffff8000001049ae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)$/;"	l
ffff8000001049b2	kernel.asm	/^ffff8000001049b2:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
ffff8000001049b7	kernel.asm	/^ffff8000001049b7:	48 b8 5b 49 10 00 00 	movabs $0xffff80000010495b,%rax$/;"	l
ffff8000001049be	kernel.asm	/^ffff8000001049be:	80 ff ff $/;"	l
ffff8000001049c1	kernel.asm	/^ffff8000001049c1:	ff d0                	callq  *%rax$/;"	l
ffff8000001049c3	kernel.asm	/^ffff8000001049c3:	89 c2                	mov    %eax,%edx$/;"	l
ffff8000001049c5	kernel.asm	/^ffff8000001049c5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001049c9	kernel.asm	/^ffff8000001049c9:	89 10                	mov    %edx,(%rax)$/;"	l
ffff8000001049cb	kernel.asm	/^ffff8000001049cb:	bf 02 00 00 00       	mov    $0x2,%edi$/;"	l
ffff8000001049d0	kernel.asm	/^ffff8000001049d0:	48 b8 5b 49 10 00 00 	movabs $0xffff80000010495b,%rax$/;"	l
ffff8000001049d7	kernel.asm	/^ffff8000001049d7:	80 ff ff $/;"	l
ffff8000001049da	kernel.asm	/^ffff8000001049da:	ff d0                	callq  *%rax$/;"	l
ffff8000001049dc	kernel.asm	/^ffff8000001049dc:	89 c2                	mov    %eax,%edx$/;"	l
ffff8000001049de	kernel.asm	/^ffff8000001049de:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001049e2	kernel.asm	/^ffff8000001049e2:	89 50 04             	mov    %edx,0x4(%rax)$/;"	l
ffff8000001049e5	kernel.asm	/^ffff8000001049e5:	bf 04 00 00 00       	mov    $0x4,%edi$/;"	l
ffff8000001049ea	kernel.asm	/^ffff8000001049ea:	48 b8 5b 49 10 00 00 	movabs $0xffff80000010495b,%rax$/;"	l
ffff8000001049f1	kernel.asm	/^ffff8000001049f1:	80 ff ff $/;"	l
ffff8000001049f4	kernel.asm	/^ffff8000001049f4:	ff d0                	callq  *%rax$/;"	l
ffff8000001049f6	kernel.asm	/^ffff8000001049f6:	89 c2                	mov    %eax,%edx$/;"	l
ffff8000001049f8	kernel.asm	/^ffff8000001049f8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001049fc	kernel.asm	/^ffff8000001049fc:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
ffff8000001049ff	kernel.asm	/^ffff8000001049ff:	bf 07 00 00 00       	mov    $0x7,%edi$/;"	l
ffff800000104a04	kernel.asm	/^ffff800000104a04:	48 b8 5b 49 10 00 00 	movabs $0xffff80000010495b,%rax$/;"	l
ffff800000104a0b	kernel.asm	/^ffff800000104a0b:	80 ff ff $/;"	l
ffff800000104a0e	kernel.asm	/^ffff800000104a0e:	ff d0                	callq  *%rax$/;"	l
ffff800000104a10	kernel.asm	/^ffff800000104a10:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000104a12	kernel.asm	/^ffff800000104a12:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000104a16	kernel.asm	/^ffff800000104a16:	89 50 0c             	mov    %edx,0xc(%rax)$/;"	l
ffff800000104a19	kernel.asm	/^ffff800000104a19:	bf 08 00 00 00       	mov    $0x8,%edi$/;"	l
ffff800000104a1e	kernel.asm	/^ffff800000104a1e:	48 b8 5b 49 10 00 00 	movabs $0xffff80000010495b,%rax$/;"	l
ffff800000104a25	kernel.asm	/^ffff800000104a25:	80 ff ff $/;"	l
ffff800000104a28	kernel.asm	/^ffff800000104a28:	ff d0                	callq  *%rax$/;"	l
ffff800000104a2a	kernel.asm	/^ffff800000104a2a:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000104a2c	kernel.asm	/^ffff800000104a2c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000104a30	kernel.asm	/^ffff800000104a30:	89 50 10             	mov    %edx,0x10(%rax)$/;"	l
ffff800000104a33	kernel.asm	/^ffff800000104a33:	bf 09 00 00 00       	mov    $0x9,%edi$/;"	l
ffff800000104a38	kernel.asm	/^ffff800000104a38:	48 b8 5b 49 10 00 00 	movabs $0xffff80000010495b,%rax$/;"	l
ffff800000104a3f	kernel.asm	/^ffff800000104a3f:	80 ff ff $/;"	l
ffff800000104a42	kernel.asm	/^ffff800000104a42:	ff d0                	callq  *%rax$/;"	l
ffff800000104a44	kernel.asm	/^ffff800000104a44:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000104a46	kernel.asm	/^ffff800000104a46:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000104a4a	kernel.asm	/^ffff800000104a4a:	89 50 14             	mov    %edx,0x14(%rax)$/;"	l
ffff800000104a4d	kernel.asm	/^ffff800000104a4d:	90                   	nop$/;"	l
ffff800000104a4e	kernel.asm	/^ffff800000104a4e:	c9                   	leaveq $/;"	l
ffff800000104a4f	kernel.asm	/^ffff800000104a4f:	c3                   	retq   $/;"	l
ffff800000104a50	kernel.asm	/^ffff800000104a50 <cmostime>:$/;"	l
ffff800000104a50	kernel.asm	/^ffff800000104a50:	55                   	push   %rbp$/;"	l
ffff800000104a51	kernel.asm	/^ffff800000104a51:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000104a54	kernel.asm	/^ffff800000104a54:	48 83 ec 50          	sub    $0x50,%rsp$/;"	l
ffff800000104a58	kernel.asm	/^ffff800000104a58:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)$/;"	l
ffff800000104a5c	kernel.asm	/^ffff800000104a5c:	bf 0b 00 00 00       	mov    $0xb,%edi$/;"	l
ffff800000104a61	kernel.asm	/^ffff800000104a61:	48 b8 5b 49 10 00 00 	movabs $0xffff80000010495b,%rax$/;"	l
ffff800000104a68	kernel.asm	/^ffff800000104a68:	80 ff ff $/;"	l
ffff800000104a6b	kernel.asm	/^ffff800000104a6b:	ff d0                	callq  *%rax$/;"	l
ffff800000104a6d	kernel.asm	/^ffff800000104a6d:	89 45 fc             	mov    %eax,-0x4(%rbp)$/;"	l
ffff800000104a70	kernel.asm	/^ffff800000104a70:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff800000104a73	kernel.asm	/^ffff800000104a73:	83 e0 04             	and    $0x4,%eax$/;"	l
ffff800000104a76	kernel.asm	/^ffff800000104a76:	85 c0                	test   %eax,%eax$/;"	l
ffff800000104a78	kernel.asm	/^ffff800000104a78:	0f 94 c0             	sete   %al$/;"	l
ffff800000104a7b	kernel.asm	/^ffff800000104a7b:	0f b6 c0             	movzbl %al,%eax$/;"	l
ffff800000104a7e	kernel.asm	/^ffff800000104a7e:	89 45 f8             	mov    %eax,-0x8(%rbp)$/;"	l
ffff800000104a81	kernel.asm	/^ffff800000104a81:	48 8d 45 e0          	lea    -0x20(%rbp),%rax$/;"	l
ffff800000104a85	kernel.asm	/^ffff800000104a85:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000104a88	kernel.asm	/^ffff800000104a88:	48 b8 a6 49 10 00 00 	movabs $0xffff8000001049a6,%rax$/;"	l
ffff800000104a8f	kernel.asm	/^ffff800000104a8f:	80 ff ff $/;"	l
ffff800000104a92	kernel.asm	/^ffff800000104a92:	ff d0                	callq  *%rax$/;"	l
ffff800000104a94	kernel.asm	/^ffff800000104a94:	bf 0a 00 00 00       	mov    $0xa,%edi$/;"	l
ffff800000104a99	kernel.asm	/^ffff800000104a99:	48 b8 5b 49 10 00 00 	movabs $0xffff80000010495b,%rax$/;"	l
ffff800000104aa0	kernel.asm	/^ffff800000104aa0:	80 ff ff $/;"	l
ffff800000104aa3	kernel.asm	/^ffff800000104aa3:	ff d0                	callq  *%rax$/;"	l
ffff800000104aa5	kernel.asm	/^ffff800000104aa5:	25 80 00 00 00       	and    $0x80,%eax$/;"	l
ffff800000104aaa	kernel.asm	/^ffff800000104aaa:	85 c0                	test   %eax,%eax$/;"	l
ffff800000104aac	kernel.asm	/^ffff800000104aac:	75 38                	jne    ffff800000104ae6 <cmostime+0x96>$/;"	l
ffff800000104aae	kernel.asm	/^ffff800000104aae:	48 8d 45 c0          	lea    -0x40(%rbp),%rax$/;"	l
ffff800000104ab2	kernel.asm	/^ffff800000104ab2:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000104ab5	kernel.asm	/^ffff800000104ab5:	48 b8 a6 49 10 00 00 	movabs $0xffff8000001049a6,%rax$/;"	l
ffff800000104abc	kernel.asm	/^ffff800000104abc:	80 ff ff $/;"	l
ffff800000104abf	kernel.asm	/^ffff800000104abf:	ff d0                	callq  *%rax$/;"	l
ffff800000104ac1	kernel.asm	/^ffff800000104ac1:	48 8d 4d c0          	lea    -0x40(%rbp),%rcx$/;"	l
ffff800000104ac5	kernel.asm	/^ffff800000104ac5:	48 8d 45 e0          	lea    -0x20(%rbp),%rax$/;"	l
ffff800000104ac9	kernel.asm	/^ffff800000104ac9:	ba 18 00 00 00       	mov    $0x18,%edx$/;"	l
ffff800000104ace	kernel.asm	/^ffff800000104ace:	48 89 ce             	mov    %rcx,%rsi$/;"	l
ffff800000104ad1	kernel.asm	/^ffff800000104ad1:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000104ad4	kernel.asm	/^ffff800000104ad4:	48 b8 2b 7d 10 00 00 	movabs $0xffff800000107d2b,%rax$/;"	l
ffff800000104adb	kernel.asm	/^ffff800000104adb:	80 ff ff $/;"	l
ffff800000104ade	kernel.asm	/^ffff800000104ade:	ff d0                	callq  *%rax$/;"	l
ffff800000104ae0	kernel.asm	/^ffff800000104ae0:	85 c0                	test   %eax,%eax$/;"	l
ffff800000104ae2	kernel.asm	/^ffff800000104ae2:	74 05                	je     ffff800000104ae9 <cmostime+0x99>$/;"	l
ffff800000104ae4	kernel.asm	/^ffff800000104ae4:	eb 9b                	jmp    ffff800000104a81 <cmostime+0x31>$/;"	l
ffff800000104ae6	kernel.asm	/^ffff800000104ae6:	90                   	nop$/;"	l
ffff800000104ae7	kernel.asm	/^ffff800000104ae7:	eb 98                	jmp    ffff800000104a81 <cmostime+0x31>$/;"	l
ffff800000104ae9	kernel.asm	/^ffff800000104ae9:	90                   	nop$/;"	l
ffff800000104aea	kernel.asm	/^ffff800000104aea:	83 7d f8 00          	cmpl   $0x0,-0x8(%rbp)$/;"	l
ffff800000104aee	kernel.asm	/^ffff800000104aee:	0f 84 b4 00 00 00    	je     ffff800000104ba8 <cmostime+0x158>$/;"	l
ffff800000104af4	kernel.asm	/^ffff800000104af4:	8b 45 e0             	mov    -0x20(%rbp),%eax$/;"	l
ffff800000104af7	kernel.asm	/^ffff800000104af7:	c1 e8 04             	shr    $0x4,%eax$/;"	l
ffff800000104afa	kernel.asm	/^ffff800000104afa:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000104afc	kernel.asm	/^ffff800000104afc:	89 d0                	mov    %edx,%eax$/;"	l
ffff800000104afe	kernel.asm	/^ffff800000104afe:	c1 e0 02             	shl    $0x2,%eax$/;"	l
ffff800000104b01	kernel.asm	/^ffff800000104b01:	01 d0                	add    %edx,%eax$/;"	l
ffff800000104b03	kernel.asm	/^ffff800000104b03:	01 c0                	add    %eax,%eax$/;"	l
ffff800000104b05	kernel.asm	/^ffff800000104b05:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000104b07	kernel.asm	/^ffff800000104b07:	8b 45 e0             	mov    -0x20(%rbp),%eax$/;"	l
ffff800000104b0a	kernel.asm	/^ffff800000104b0a:	83 e0 0f             	and    $0xf,%eax$/;"	l
ffff800000104b0d	kernel.asm	/^ffff800000104b0d:	01 d0                	add    %edx,%eax$/;"	l
ffff800000104b0f	kernel.asm	/^ffff800000104b0f:	89 45 e0             	mov    %eax,-0x20(%rbp)$/;"	l
ffff800000104b12	kernel.asm	/^ffff800000104b12:	8b 45 e4             	mov    -0x1c(%rbp),%eax$/;"	l
ffff800000104b15	kernel.asm	/^ffff800000104b15:	c1 e8 04             	shr    $0x4,%eax$/;"	l
ffff800000104b18	kernel.asm	/^ffff800000104b18:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000104b1a	kernel.asm	/^ffff800000104b1a:	89 d0                	mov    %edx,%eax$/;"	l
ffff800000104b1c	kernel.asm	/^ffff800000104b1c:	c1 e0 02             	shl    $0x2,%eax$/;"	l
ffff800000104b1f	kernel.asm	/^ffff800000104b1f:	01 d0                	add    %edx,%eax$/;"	l
ffff800000104b21	kernel.asm	/^ffff800000104b21:	01 c0                	add    %eax,%eax$/;"	l
ffff800000104b23	kernel.asm	/^ffff800000104b23:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000104b25	kernel.asm	/^ffff800000104b25:	8b 45 e4             	mov    -0x1c(%rbp),%eax$/;"	l
ffff800000104b28	kernel.asm	/^ffff800000104b28:	83 e0 0f             	and    $0xf,%eax$/;"	l
ffff800000104b2b	kernel.asm	/^ffff800000104b2b:	01 d0                	add    %edx,%eax$/;"	l
ffff800000104b2d	kernel.asm	/^ffff800000104b2d:	89 45 e4             	mov    %eax,-0x1c(%rbp)$/;"	l
ffff800000104b30	kernel.asm	/^ffff800000104b30:	8b 45 e8             	mov    -0x18(%rbp),%eax$/;"	l
ffff800000104b33	kernel.asm	/^ffff800000104b33:	c1 e8 04             	shr    $0x4,%eax$/;"	l
ffff800000104b36	kernel.asm	/^ffff800000104b36:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000104b38	kernel.asm	/^ffff800000104b38:	89 d0                	mov    %edx,%eax$/;"	l
ffff800000104b3a	kernel.asm	/^ffff800000104b3a:	c1 e0 02             	shl    $0x2,%eax$/;"	l
ffff800000104b3d	kernel.asm	/^ffff800000104b3d:	01 d0                	add    %edx,%eax$/;"	l
ffff800000104b3f	kernel.asm	/^ffff800000104b3f:	01 c0                	add    %eax,%eax$/;"	l
ffff800000104b41	kernel.asm	/^ffff800000104b41:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000104b43	kernel.asm	/^ffff800000104b43:	8b 45 e8             	mov    -0x18(%rbp),%eax$/;"	l
ffff800000104b46	kernel.asm	/^ffff800000104b46:	83 e0 0f             	and    $0xf,%eax$/;"	l
ffff800000104b49	kernel.asm	/^ffff800000104b49:	01 d0                	add    %edx,%eax$/;"	l
ffff800000104b4b	kernel.asm	/^ffff800000104b4b:	89 45 e8             	mov    %eax,-0x18(%rbp)$/;"	l
ffff800000104b4e	kernel.asm	/^ffff800000104b4e:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
ffff800000104b51	kernel.asm	/^ffff800000104b51:	c1 e8 04             	shr    $0x4,%eax$/;"	l
ffff800000104b54	kernel.asm	/^ffff800000104b54:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000104b56	kernel.asm	/^ffff800000104b56:	89 d0                	mov    %edx,%eax$/;"	l
ffff800000104b58	kernel.asm	/^ffff800000104b58:	c1 e0 02             	shl    $0x2,%eax$/;"	l
ffff800000104b5b	kernel.asm	/^ffff800000104b5b:	01 d0                	add    %edx,%eax$/;"	l
ffff800000104b5d	kernel.asm	/^ffff800000104b5d:	01 c0                	add    %eax,%eax$/;"	l
ffff800000104b5f	kernel.asm	/^ffff800000104b5f:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000104b61	kernel.asm	/^ffff800000104b61:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
ffff800000104b64	kernel.asm	/^ffff800000104b64:	83 e0 0f             	and    $0xf,%eax$/;"	l
ffff800000104b67	kernel.asm	/^ffff800000104b67:	01 d0                	add    %edx,%eax$/;"	l
ffff800000104b69	kernel.asm	/^ffff800000104b69:	89 45 ec             	mov    %eax,-0x14(%rbp)$/;"	l
ffff800000104b6c	kernel.asm	/^ffff800000104b6c:	8b 45 f0             	mov    -0x10(%rbp),%eax$/;"	l
ffff800000104b6f	kernel.asm	/^ffff800000104b6f:	c1 e8 04             	shr    $0x4,%eax$/;"	l
ffff800000104b72	kernel.asm	/^ffff800000104b72:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000104b74	kernel.asm	/^ffff800000104b74:	89 d0                	mov    %edx,%eax$/;"	l
ffff800000104b76	kernel.asm	/^ffff800000104b76:	c1 e0 02             	shl    $0x2,%eax$/;"	l
ffff800000104b79	kernel.asm	/^ffff800000104b79:	01 d0                	add    %edx,%eax$/;"	l
ffff800000104b7b	kernel.asm	/^ffff800000104b7b:	01 c0                	add    %eax,%eax$/;"	l
ffff800000104b7d	kernel.asm	/^ffff800000104b7d:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000104b7f	kernel.asm	/^ffff800000104b7f:	8b 45 f0             	mov    -0x10(%rbp),%eax$/;"	l
ffff800000104b82	kernel.asm	/^ffff800000104b82:	83 e0 0f             	and    $0xf,%eax$/;"	l
ffff800000104b85	kernel.asm	/^ffff800000104b85:	01 d0                	add    %edx,%eax$/;"	l
ffff800000104b87	kernel.asm	/^ffff800000104b87:	89 45 f0             	mov    %eax,-0x10(%rbp)$/;"	l
ffff800000104b8a	kernel.asm	/^ffff800000104b8a:	8b 45 f4             	mov    -0xc(%rbp),%eax$/;"	l
ffff800000104b8d	kernel.asm	/^ffff800000104b8d:	c1 e8 04             	shr    $0x4,%eax$/;"	l
ffff800000104b90	kernel.asm	/^ffff800000104b90:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000104b92	kernel.asm	/^ffff800000104b92:	89 d0                	mov    %edx,%eax$/;"	l
ffff800000104b94	kernel.asm	/^ffff800000104b94:	c1 e0 02             	shl    $0x2,%eax$/;"	l
ffff800000104b97	kernel.asm	/^ffff800000104b97:	01 d0                	add    %edx,%eax$/;"	l
ffff800000104b99	kernel.asm	/^ffff800000104b99:	01 c0                	add    %eax,%eax$/;"	l
ffff800000104b9b	kernel.asm	/^ffff800000104b9b:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000104b9d	kernel.asm	/^ffff800000104b9d:	8b 45 f4             	mov    -0xc(%rbp),%eax$/;"	l
ffff800000104ba0	kernel.asm	/^ffff800000104ba0:	83 e0 0f             	and    $0xf,%eax$/;"	l
ffff800000104ba3	kernel.asm	/^ffff800000104ba3:	01 d0                	add    %edx,%eax$/;"	l
ffff800000104ba5	kernel.asm	/^ffff800000104ba5:	89 45 f4             	mov    %eax,-0xc(%rbp)$/;"	l
ffff800000104ba8	kernel.asm	/^ffff800000104ba8:	48 8b 45 b8          	mov    -0x48(%rbp),%rax$/;"	l
ffff800000104bac	kernel.asm	/^ffff800000104bac:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx$/;"	l
ffff800000104bb0	kernel.asm	/^ffff800000104bb0:	48 89 10             	mov    %rdx,(%rax)$/;"	l
ffff800000104bb3	kernel.asm	/^ffff800000104bb3:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx$/;"	l
ffff800000104bb7	kernel.asm	/^ffff800000104bb7:	48 89 50 08          	mov    %rdx,0x8(%rax)$/;"	l
ffff800000104bbb	kernel.asm	/^ffff800000104bbb:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
ffff800000104bbf	kernel.asm	/^ffff800000104bbf:	48 89 50 10          	mov    %rdx,0x10(%rax)$/;"	l
ffff800000104bc3	kernel.asm	/^ffff800000104bc3:	48 8b 45 b8          	mov    -0x48(%rbp),%rax$/;"	l
ffff800000104bc7	kernel.asm	/^ffff800000104bc7:	8b 40 14             	mov    0x14(%rax),%eax$/;"	l
ffff800000104bca	kernel.asm	/^ffff800000104bca:	8d 90 d0 07 00 00    	lea    0x7d0(%rax),%edx$/;"	l
ffff800000104bd0	kernel.asm	/^ffff800000104bd0:	48 8b 45 b8          	mov    -0x48(%rbp),%rax$/;"	l
ffff800000104bd4	kernel.asm	/^ffff800000104bd4:	89 50 14             	mov    %edx,0x14(%rax)$/;"	l
ffff800000104bd7	kernel.asm	/^ffff800000104bd7:	90                   	nop$/;"	l
ffff800000104bd8	kernel.asm	/^ffff800000104bd8:	c9                   	leaveq $/;"	l
ffff800000104bd9	kernel.asm	/^ffff800000104bd9:	c3                   	retq   $/;"	l
ffff800000104bda	kernel.asm	/^ffff800000104bda <initlog>:$/;"	l
ffff800000104bda	kernel.asm	/^ffff800000104bda:	55                   	push   %rbp$/;"	l
ffff800000104bdb	kernel.asm	/^ffff800000104bdb:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000104bde	kernel.asm	/^ffff800000104bde:	48 83 ec 30          	sub    $0x30,%rsp$/;"	l
ffff800000104be2	kernel.asm	/^ffff800000104be2:	89 7d dc             	mov    %edi,-0x24(%rbp)$/;"	l
ffff800000104be5	kernel.asm	/^ffff800000104be5:	48 be 4c c4 10 00 00 	movabs $0xffff80000010c44c,%rsi$/;"	l
ffff800000104bec	kernel.asm	/^ffff800000104bec:	80 ff ff $/;"	l
ffff800000104bef	kernel.asm	/^ffff800000104bef:	48 bf 80 83 11 00 00 	movabs $0xffff800000118380,%rdi$/;"	l
ffff800000104bf6	kernel.asm	/^ffff800000104bf6:	80 ff ff $/;"	l
ffff800000104bf9	kernel.asm	/^ffff800000104bf9:	48 b8 cc 78 10 00 00 	movabs $0xffff8000001078cc,%rax$/;"	l
ffff800000104c00	kernel.asm	/^ffff800000104c00:	80 ff ff $/;"	l
ffff800000104c03	kernel.asm	/^ffff800000104c03:	ff d0                	callq  *%rax$/;"	l
ffff800000104c05	kernel.asm	/^ffff800000104c05:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx$/;"	l
ffff800000104c09	kernel.asm	/^ffff800000104c09:	8b 45 dc             	mov    -0x24(%rbp),%eax$/;"	l
ffff800000104c0c	kernel.asm	/^ffff800000104c0c:	48 89 d6             	mov    %rdx,%rsi$/;"	l
ffff800000104c0f	kernel.asm	/^ffff800000104c0f:	89 c7                	mov    %eax,%edi$/;"	l
ffff800000104c11	kernel.asm	/^ffff800000104c11:	48 b8 e3 1f 10 00 00 	movabs $0xffff800000101fe3,%rax$/;"	l
ffff800000104c18	kernel.asm	/^ffff800000104c18:	80 ff ff $/;"	l
ffff800000104c1b	kernel.asm	/^ffff800000104c1b:	ff d0                	callq  *%rax$/;"	l
ffff800000104c1d	kernel.asm	/^ffff800000104c1d:	8b 45 f0             	mov    -0x10(%rbp),%eax$/;"	l
ffff800000104c20	kernel.asm	/^ffff800000104c20:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000104c22	kernel.asm	/^ffff800000104c22:	48 b8 80 83 11 00 00 	movabs $0xffff800000118380,%rax$/;"	l
ffff800000104c29	kernel.asm	/^ffff800000104c29:	80 ff ff $/;"	l
ffff800000104c2c	kernel.asm	/^ffff800000104c2c:	89 50 68             	mov    %edx,0x68(%rax)$/;"	l
ffff800000104c2f	kernel.asm	/^ffff800000104c2f:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
ffff800000104c32	kernel.asm	/^ffff800000104c32:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000104c34	kernel.asm	/^ffff800000104c34:	48 b8 80 83 11 00 00 	movabs $0xffff800000118380,%rax$/;"	l
ffff800000104c3b	kernel.asm	/^ffff800000104c3b:	80 ff ff $/;"	l
ffff800000104c3e	kernel.asm	/^ffff800000104c3e:	89 50 6c             	mov    %edx,0x6c(%rax)$/;"	l
ffff800000104c41	kernel.asm	/^ffff800000104c41:	48 b8 80 83 11 00 00 	movabs $0xffff800000118380,%rax$/;"	l
ffff800000104c48	kernel.asm	/^ffff800000104c48:	80 ff ff $/;"	l
ffff800000104c4b	kernel.asm	/^ffff800000104c4b:	8b 55 dc             	mov    -0x24(%rbp),%edx$/;"	l
ffff800000104c4e	kernel.asm	/^ffff800000104c4e:	89 50 78             	mov    %edx,0x78(%rax)$/;"	l
ffff800000104c51	kernel.asm	/^ffff800000104c51:	48 b8 e4 4e 10 00 00 	movabs $0xffff800000104ee4,%rax$/;"	l
ffff800000104c58	kernel.asm	/^ffff800000104c58:	80 ff ff $/;"	l
ffff800000104c5b	kernel.asm	/^ffff800000104c5b:	ff d0                	callq  *%rax$/;"	l
ffff800000104c5d	kernel.asm	/^ffff800000104c5d:	90                   	nop$/;"	l
ffff800000104c5e	kernel.asm	/^ffff800000104c5e:	c9                   	leaveq $/;"	l
ffff800000104c5f	kernel.asm	/^ffff800000104c5f:	c3                   	retq   $/;"	l
ffff800000104c60	kernel.asm	/^ffff800000104c60 <install_trans>:$/;"	l
ffff800000104c60	kernel.asm	/^ffff800000104c60:	55                   	push   %rbp$/;"	l
ffff800000104c61	kernel.asm	/^ffff800000104c61:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000104c64	kernel.asm	/^ffff800000104c64:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ffff800000104c68	kernel.asm	/^ffff800000104c68:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)$/;"	l
ffff800000104c6f	kernel.asm	/^ffff800000104c6f:	e9 dc 00 00 00       	jmpq   ffff800000104d50 <install_trans+0xf0>$/;"	l
ffff800000104c74	kernel.asm	/^ffff800000104c74:	48 b8 80 83 11 00 00 	movabs $0xffff800000118380,%rax$/;"	l
ffff800000104c7b	kernel.asm	/^ffff800000104c7b:	80 ff ff $/;"	l
ffff800000104c7e	kernel.asm	/^ffff800000104c7e:	8b 50 68             	mov    0x68(%rax),%edx$/;"	l
ffff800000104c81	kernel.asm	/^ffff800000104c81:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff800000104c84	kernel.asm	/^ffff800000104c84:	01 d0                	add    %edx,%eax$/;"	l
ffff800000104c86	kernel.asm	/^ffff800000104c86:	83 c0 01             	add    $0x1,%eax$/;"	l
ffff800000104c89	kernel.asm	/^ffff800000104c89:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000104c8b	kernel.asm	/^ffff800000104c8b:	48 b8 80 83 11 00 00 	movabs $0xffff800000118380,%rax$/;"	l
ffff800000104c92	kernel.asm	/^ffff800000104c92:	80 ff ff $/;"	l
ffff800000104c95	kernel.asm	/^ffff800000104c95:	8b 40 78             	mov    0x78(%rax),%eax$/;"	l
ffff800000104c98	kernel.asm	/^ffff800000104c98:	89 d6                	mov    %edx,%esi$/;"	l
ffff800000104c9a	kernel.asm	/^ffff800000104c9a:	89 c7                	mov    %eax,%edi$/;"	l
ffff800000104c9c	kernel.asm	/^ffff800000104c9c:	48 b8 f8 03 10 00 00 	movabs $0xffff8000001003f8,%rax$/;"	l
ffff800000104ca3	kernel.asm	/^ffff800000104ca3:	80 ff ff $/;"	l
ffff800000104ca6	kernel.asm	/^ffff800000104ca6:	ff d0                	callq  *%rax$/;"	l
ffff800000104ca8	kernel.asm	/^ffff800000104ca8:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ffff800000104cac	kernel.asm	/^ffff800000104cac:	48 b8 80 83 11 00 00 	movabs $0xffff800000118380,%rax$/;"	l
ffff800000104cb3	kernel.asm	/^ffff800000104cb3:	80 ff ff $/;"	l
ffff800000104cb6	kernel.asm	/^ffff800000104cb6:	8b 55 fc             	mov    -0x4(%rbp),%edx$/;"	l
ffff800000104cb9	kernel.asm	/^ffff800000104cb9:	48 63 d2             	movslq %edx,%rdx$/;"	l
ffff800000104cbc	kernel.asm	/^ffff800000104cbc:	48 83 c2 1c          	add    $0x1c,%rdx$/;"	l
ffff800000104cc0	kernel.asm	/^ffff800000104cc0:	8b 44 90 10          	mov    0x10(%rax,%rdx,4),%eax$/;"	l
ffff800000104cc4	kernel.asm	/^ffff800000104cc4:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000104cc6	kernel.asm	/^ffff800000104cc6:	48 b8 80 83 11 00 00 	movabs $0xffff800000118380,%rax$/;"	l
ffff800000104ccd	kernel.asm	/^ffff800000104ccd:	80 ff ff $/;"	l
ffff800000104cd0	kernel.asm	/^ffff800000104cd0:	8b 40 78             	mov    0x78(%rax),%eax$/;"	l
ffff800000104cd3	kernel.asm	/^ffff800000104cd3:	89 d6                	mov    %edx,%esi$/;"	l
ffff800000104cd5	kernel.asm	/^ffff800000104cd5:	89 c7                	mov    %eax,%edi$/;"	l
ffff800000104cd7	kernel.asm	/^ffff800000104cd7:	48 b8 f8 03 10 00 00 	movabs $0xffff8000001003f8,%rax$/;"	l
ffff800000104cde	kernel.asm	/^ffff800000104cde:	80 ff ff $/;"	l
ffff800000104ce1	kernel.asm	/^ffff800000104ce1:	ff d0                	callq  *%rax$/;"	l
ffff800000104ce3	kernel.asm	/^ffff800000104ce3:	48 89 45 e8          	mov    %rax,-0x18(%rbp)$/;"	l
ffff800000104ce7	kernel.asm	/^ffff800000104ce7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000104ceb	kernel.asm	/^ffff800000104ceb:	48 8d 88 b0 00 00 00 	lea    0xb0(%rax),%rcx$/;"	l
ffff800000104cf2	kernel.asm	/^ffff800000104cf2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000104cf6	kernel.asm	/^ffff800000104cf6:	48 05 b0 00 00 00    	add    $0xb0,%rax$/;"	l
ffff800000104cfc	kernel.asm	/^ffff800000104cfc:	ba 00 02 00 00       	mov    $0x200,%edx$/;"	l
ffff800000104d01	kernel.asm	/^ffff800000104d01:	48 89 ce             	mov    %rcx,%rsi$/;"	l
ffff800000104d04	kernel.asm	/^ffff800000104d04:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000104d07	kernel.asm	/^ffff800000104d07:	48 b8 9a 7d 10 00 00 	movabs $0xffff800000107d9a,%rax$/;"	l
ffff800000104d0e	kernel.asm	/^ffff800000104d0e:	80 ff ff $/;"	l
ffff800000104d11	kernel.asm	/^ffff800000104d11:	ff d0                	callq  *%rax$/;"	l
ffff800000104d13	kernel.asm	/^ffff800000104d13:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000104d17	kernel.asm	/^ffff800000104d17:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000104d1a	kernel.asm	/^ffff800000104d1a:	48 b8 46 04 10 00 00 	movabs $0xffff800000100446,%rax$/;"	l
ffff800000104d21	kernel.asm	/^ffff800000104d21:	80 ff ff $/;"	l
ffff800000104d24	kernel.asm	/^ffff800000104d24:	ff d0                	callq  *%rax$/;"	l
ffff800000104d26	kernel.asm	/^ffff800000104d26:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000104d2a	kernel.asm	/^ffff800000104d2a:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000104d2d	kernel.asm	/^ffff800000104d2d:	48 b8 aa 04 10 00 00 	movabs $0xffff8000001004aa,%rax$/;"	l
ffff800000104d34	kernel.asm	/^ffff800000104d34:	80 ff ff $/;"	l
ffff800000104d37	kernel.asm	/^ffff800000104d37:	ff d0                	callq  *%rax$/;"	l
ffff800000104d39	kernel.asm	/^ffff800000104d39:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000104d3d	kernel.asm	/^ffff800000104d3d:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000104d40	kernel.asm	/^ffff800000104d40:	48 b8 aa 04 10 00 00 	movabs $0xffff8000001004aa,%rax$/;"	l
ffff800000104d47	kernel.asm	/^ffff800000104d47:	80 ff ff $/;"	l
ffff800000104d4a	kernel.asm	/^ffff800000104d4a:	ff d0                	callq  *%rax$/;"	l
ffff800000104d4c	kernel.asm	/^ffff800000104d4c:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)$/;"	l
ffff800000104d50	kernel.asm	/^ffff800000104d50:	48 b8 80 83 11 00 00 	movabs $0xffff800000118380,%rax$/;"	l
ffff800000104d57	kernel.asm	/^ffff800000104d57:	80 ff ff $/;"	l
ffff800000104d5a	kernel.asm	/^ffff800000104d5a:	8b 40 7c             	mov    0x7c(%rax),%eax$/;"	l
ffff800000104d5d	kernel.asm	/^ffff800000104d5d:	3b 45 fc             	cmp    -0x4(%rbp),%eax$/;"	l
ffff800000104d60	kernel.asm	/^ffff800000104d60:	0f 8f 0e ff ff ff    	jg     ffff800000104c74 <install_trans+0x14>$/;"	l
ffff800000104d66	kernel.asm	/^ffff800000104d66:	90                   	nop$/;"	l
ffff800000104d67	kernel.asm	/^ffff800000104d67:	c9                   	leaveq $/;"	l
ffff800000104d68	kernel.asm	/^ffff800000104d68:	c3                   	retq   $/;"	l
ffff800000104d69	kernel.asm	/^ffff800000104d69 <read_head>:$/;"	l
ffff800000104d69	kernel.asm	/^ffff800000104d69:	55                   	push   %rbp$/;"	l
ffff800000104d6a	kernel.asm	/^ffff800000104d6a:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000104d6d	kernel.asm	/^ffff800000104d6d:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ffff800000104d71	kernel.asm	/^ffff800000104d71:	48 b8 80 83 11 00 00 	movabs $0xffff800000118380,%rax$/;"	l
ffff800000104d78	kernel.asm	/^ffff800000104d78:	80 ff ff $/;"	l
ffff800000104d7b	kernel.asm	/^ffff800000104d7b:	8b 40 68             	mov    0x68(%rax),%eax$/;"	l
ffff800000104d7e	kernel.asm	/^ffff800000104d7e:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000104d80	kernel.asm	/^ffff800000104d80:	48 b8 80 83 11 00 00 	movabs $0xffff800000118380,%rax$/;"	l
ffff800000104d87	kernel.asm	/^ffff800000104d87:	80 ff ff $/;"	l
ffff800000104d8a	kernel.asm	/^ffff800000104d8a:	8b 40 78             	mov    0x78(%rax),%eax$/;"	l
ffff800000104d8d	kernel.asm	/^ffff800000104d8d:	89 d6                	mov    %edx,%esi$/;"	l
ffff800000104d8f	kernel.asm	/^ffff800000104d8f:	89 c7                	mov    %eax,%edi$/;"	l
ffff800000104d91	kernel.asm	/^ffff800000104d91:	48 b8 f8 03 10 00 00 	movabs $0xffff8000001003f8,%rax$/;"	l
ffff800000104d98	kernel.asm	/^ffff800000104d98:	80 ff ff $/;"	l
ffff800000104d9b	kernel.asm	/^ffff800000104d9b:	ff d0                	callq  *%rax$/;"	l
ffff800000104d9d	kernel.asm	/^ffff800000104d9d:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ffff800000104da1	kernel.asm	/^ffff800000104da1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000104da5	kernel.asm	/^ffff800000104da5:	48 05 b0 00 00 00    	add    $0xb0,%rax$/;"	l
ffff800000104dab	kernel.asm	/^ffff800000104dab:	48 89 45 e8          	mov    %rax,-0x18(%rbp)$/;"	l
ffff800000104daf	kernel.asm	/^ffff800000104daf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000104db3	kernel.asm	/^ffff800000104db3:	8b 10                	mov    (%rax),%edx$/;"	l
ffff800000104db5	kernel.asm	/^ffff800000104db5:	48 b8 80 83 11 00 00 	movabs $0xffff800000118380,%rax$/;"	l
ffff800000104dbc	kernel.asm	/^ffff800000104dbc:	80 ff ff $/;"	l
ffff800000104dbf	kernel.asm	/^ffff800000104dbf:	89 50 7c             	mov    %edx,0x7c(%rax)$/;"	l
ffff800000104dc2	kernel.asm	/^ffff800000104dc2:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)$/;"	l
ffff800000104dc9	kernel.asm	/^ffff800000104dc9:	eb 2a                	jmp    ffff800000104df5 <read_head+0x8c>$/;"	l
ffff800000104dcb	kernel.asm	/^ffff800000104dcb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000104dcf	kernel.asm	/^ffff800000104dcf:	8b 55 fc             	mov    -0x4(%rbp),%edx$/;"	l
ffff800000104dd2	kernel.asm	/^ffff800000104dd2:	48 63 d2             	movslq %edx,%rdx$/;"	l
ffff800000104dd5	kernel.asm	/^ffff800000104dd5:	8b 54 90 04          	mov    0x4(%rax,%rdx,4),%edx$/;"	l
ffff800000104dd9	kernel.asm	/^ffff800000104dd9:	48 b8 80 83 11 00 00 	movabs $0xffff800000118380,%rax$/;"	l
ffff800000104de0	kernel.asm	/^ffff800000104de0:	80 ff ff $/;"	l
ffff800000104de3	kernel.asm	/^ffff800000104de3:	8b 4d fc             	mov    -0x4(%rbp),%ecx$/;"	l
ffff800000104de6	kernel.asm	/^ffff800000104de6:	48 63 c9             	movslq %ecx,%rcx$/;"	l
ffff800000104de9	kernel.asm	/^ffff800000104de9:	48 83 c1 1c          	add    $0x1c,%rcx$/;"	l
ffff800000104ded	kernel.asm	/^ffff800000104ded:	89 54 88 10          	mov    %edx,0x10(%rax,%rcx,4)$/;"	l
ffff800000104df1	kernel.asm	/^ffff800000104df1:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)$/;"	l
ffff800000104df5	kernel.asm	/^ffff800000104df5:	48 b8 80 83 11 00 00 	movabs $0xffff800000118380,%rax$/;"	l
ffff800000104dfc	kernel.asm	/^ffff800000104dfc:	80 ff ff $/;"	l
ffff800000104dff	kernel.asm	/^ffff800000104dff:	8b 40 7c             	mov    0x7c(%rax),%eax$/;"	l
ffff800000104e02	kernel.asm	/^ffff800000104e02:	3b 45 fc             	cmp    -0x4(%rbp),%eax$/;"	l
ffff800000104e05	kernel.asm	/^ffff800000104e05:	7f c4                	jg     ffff800000104dcb <read_head+0x62>$/;"	l
ffff800000104e07	kernel.asm	/^ffff800000104e07:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000104e0b	kernel.asm	/^ffff800000104e0b:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000104e0e	kernel.asm	/^ffff800000104e0e:	48 b8 aa 04 10 00 00 	movabs $0xffff8000001004aa,%rax$/;"	l
ffff800000104e15	kernel.asm	/^ffff800000104e15:	80 ff ff $/;"	l
ffff800000104e18	kernel.asm	/^ffff800000104e18:	ff d0                	callq  *%rax$/;"	l
ffff800000104e1a	kernel.asm	/^ffff800000104e1a:	90                   	nop$/;"	l
ffff800000104e1b	kernel.asm	/^ffff800000104e1b:	c9                   	leaveq $/;"	l
ffff800000104e1c	kernel.asm	/^ffff800000104e1c:	c3                   	retq   $/;"	l
ffff800000104e1d	kernel.asm	/^ffff800000104e1d <write_head>:$/;"	l
ffff800000104e1d	kernel.asm	/^ffff800000104e1d:	55                   	push   %rbp$/;"	l
ffff800000104e1e	kernel.asm	/^ffff800000104e1e:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000104e21	kernel.asm	/^ffff800000104e21:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ffff800000104e25	kernel.asm	/^ffff800000104e25:	48 b8 80 83 11 00 00 	movabs $0xffff800000118380,%rax$/;"	l
ffff800000104e2c	kernel.asm	/^ffff800000104e2c:	80 ff ff $/;"	l
ffff800000104e2f	kernel.asm	/^ffff800000104e2f:	8b 40 68             	mov    0x68(%rax),%eax$/;"	l
ffff800000104e32	kernel.asm	/^ffff800000104e32:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000104e34	kernel.asm	/^ffff800000104e34:	48 b8 80 83 11 00 00 	movabs $0xffff800000118380,%rax$/;"	l
ffff800000104e3b	kernel.asm	/^ffff800000104e3b:	80 ff ff $/;"	l
ffff800000104e3e	kernel.asm	/^ffff800000104e3e:	8b 40 78             	mov    0x78(%rax),%eax$/;"	l
ffff800000104e41	kernel.asm	/^ffff800000104e41:	89 d6                	mov    %edx,%esi$/;"	l
ffff800000104e43	kernel.asm	/^ffff800000104e43:	89 c7                	mov    %eax,%edi$/;"	l
ffff800000104e45	kernel.asm	/^ffff800000104e45:	48 b8 f8 03 10 00 00 	movabs $0xffff8000001003f8,%rax$/;"	l
ffff800000104e4c	kernel.asm	/^ffff800000104e4c:	80 ff ff $/;"	l
ffff800000104e4f	kernel.asm	/^ffff800000104e4f:	ff d0                	callq  *%rax$/;"	l
ffff800000104e51	kernel.asm	/^ffff800000104e51:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ffff800000104e55	kernel.asm	/^ffff800000104e55:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000104e59	kernel.asm	/^ffff800000104e59:	48 05 b0 00 00 00    	add    $0xb0,%rax$/;"	l
ffff800000104e5f	kernel.asm	/^ffff800000104e5f:	48 89 45 e8          	mov    %rax,-0x18(%rbp)$/;"	l
ffff800000104e63	kernel.asm	/^ffff800000104e63:	48 b8 80 83 11 00 00 	movabs $0xffff800000118380,%rax$/;"	l
ffff800000104e6a	kernel.asm	/^ffff800000104e6a:	80 ff ff $/;"	l
ffff800000104e6d	kernel.asm	/^ffff800000104e6d:	8b 50 7c             	mov    0x7c(%rax),%edx$/;"	l
ffff800000104e70	kernel.asm	/^ffff800000104e70:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000104e74	kernel.asm	/^ffff800000104e74:	89 10                	mov    %edx,(%rax)$/;"	l
ffff800000104e76	kernel.asm	/^ffff800000104e76:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)$/;"	l
ffff800000104e7d	kernel.asm	/^ffff800000104e7d:	eb 2a                	jmp    ffff800000104ea9 <write_head+0x8c>$/;"	l
ffff800000104e7f	kernel.asm	/^ffff800000104e7f:	48 b8 80 83 11 00 00 	movabs $0xffff800000118380,%rax$/;"	l
ffff800000104e86	kernel.asm	/^ffff800000104e86:	80 ff ff $/;"	l
ffff800000104e89	kernel.asm	/^ffff800000104e89:	8b 55 fc             	mov    -0x4(%rbp),%edx$/;"	l
ffff800000104e8c	kernel.asm	/^ffff800000104e8c:	48 63 d2             	movslq %edx,%rdx$/;"	l
ffff800000104e8f	kernel.asm	/^ffff800000104e8f:	48 83 c2 1c          	add    $0x1c,%rdx$/;"	l
ffff800000104e93	kernel.asm	/^ffff800000104e93:	8b 4c 90 10          	mov    0x10(%rax,%rdx,4),%ecx$/;"	l
ffff800000104e97	kernel.asm	/^ffff800000104e97:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000104e9b	kernel.asm	/^ffff800000104e9b:	8b 55 fc             	mov    -0x4(%rbp),%edx$/;"	l
ffff800000104e9e	kernel.asm	/^ffff800000104e9e:	48 63 d2             	movslq %edx,%rdx$/;"	l
ffff800000104ea1	kernel.asm	/^ffff800000104ea1:	89 4c 90 04          	mov    %ecx,0x4(%rax,%rdx,4)$/;"	l
ffff800000104ea5	kernel.asm	/^ffff800000104ea5:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)$/;"	l
ffff800000104ea9	kernel.asm	/^ffff800000104ea9:	48 b8 80 83 11 00 00 	movabs $0xffff800000118380,%rax$/;"	l
ffff800000104eb0	kernel.asm	/^ffff800000104eb0:	80 ff ff $/;"	l
ffff800000104eb3	kernel.asm	/^ffff800000104eb3:	8b 40 7c             	mov    0x7c(%rax),%eax$/;"	l
ffff800000104eb6	kernel.asm	/^ffff800000104eb6:	3b 45 fc             	cmp    -0x4(%rbp),%eax$/;"	l
ffff800000104eb9	kernel.asm	/^ffff800000104eb9:	7f c4                	jg     ffff800000104e7f <write_head+0x62>$/;"	l
ffff800000104ebb	kernel.asm	/^ffff800000104ebb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000104ebf	kernel.asm	/^ffff800000104ebf:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000104ec2	kernel.asm	/^ffff800000104ec2:	48 b8 46 04 10 00 00 	movabs $0xffff800000100446,%rax$/;"	l
ffff800000104ec9	kernel.asm	/^ffff800000104ec9:	80 ff ff $/;"	l
ffff800000104ecc	kernel.asm	/^ffff800000104ecc:	ff d0                	callq  *%rax$/;"	l
ffff800000104ece	kernel.asm	/^ffff800000104ece:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000104ed2	kernel.asm	/^ffff800000104ed2:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000104ed5	kernel.asm	/^ffff800000104ed5:	48 b8 aa 04 10 00 00 	movabs $0xffff8000001004aa,%rax$/;"	l
ffff800000104edc	kernel.asm	/^ffff800000104edc:	80 ff ff $/;"	l
ffff800000104edf	kernel.asm	/^ffff800000104edf:	ff d0                	callq  *%rax$/;"	l
ffff800000104ee1	kernel.asm	/^ffff800000104ee1:	90                   	nop$/;"	l
ffff800000104ee2	kernel.asm	/^ffff800000104ee2:	c9                   	leaveq $/;"	l
ffff800000104ee3	kernel.asm	/^ffff800000104ee3:	c3                   	retq   $/;"	l
ffff800000104ee4	kernel.asm	/^ffff800000104ee4 <recover_from_log>:$/;"	l
ffff800000104ee4	kernel.asm	/^ffff800000104ee4:	55                   	push   %rbp$/;"	l
ffff800000104ee5	kernel.asm	/^ffff800000104ee5:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000104ee8	kernel.asm	/^ffff800000104ee8:	48 b8 69 4d 10 00 00 	movabs $0xffff800000104d69,%rax$/;"	l
ffff800000104eef	kernel.asm	/^ffff800000104eef:	80 ff ff $/;"	l
ffff800000104ef2	kernel.asm	/^ffff800000104ef2:	ff d0                	callq  *%rax$/;"	l
ffff800000104ef4	kernel.asm	/^ffff800000104ef4:	48 b8 60 4c 10 00 00 	movabs $0xffff800000104c60,%rax$/;"	l
ffff800000104efb	kernel.asm	/^ffff800000104efb:	80 ff ff $/;"	l
ffff800000104efe	kernel.asm	/^ffff800000104efe:	ff d0                	callq  *%rax$/;"	l
ffff800000104f00	kernel.asm	/^ffff800000104f00:	48 b8 80 83 11 00 00 	movabs $0xffff800000118380,%rax$/;"	l
ffff800000104f07	kernel.asm	/^ffff800000104f07:	80 ff ff $/;"	l
ffff800000104f0a	kernel.asm	/^ffff800000104f0a:	c7 40 7c 00 00 00 00 	movl   $0x0,0x7c(%rax)$/;"	l
ffff800000104f11	kernel.asm	/^ffff800000104f11:	48 b8 1d 4e 10 00 00 	movabs $0xffff800000104e1d,%rax$/;"	l
ffff800000104f18	kernel.asm	/^ffff800000104f18:	80 ff ff $/;"	l
ffff800000104f1b	kernel.asm	/^ffff800000104f1b:	ff d0                	callq  *%rax$/;"	l
ffff800000104f1d	kernel.asm	/^ffff800000104f1d:	90                   	nop$/;"	l
ffff800000104f1e	kernel.asm	/^ffff800000104f1e:	5d                   	pop    %rbp$/;"	l
ffff800000104f1f	kernel.asm	/^ffff800000104f1f:	c3                   	retq   $/;"	l
ffff800000104f20	kernel.asm	/^ffff800000104f20 <begin_op>:$/;"	l
ffff800000104f20	kernel.asm	/^ffff800000104f20:	55                   	push   %rbp$/;"	l
ffff800000104f21	kernel.asm	/^ffff800000104f21:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000104f24	kernel.asm	/^ffff800000104f24:	48 bf 80 83 11 00 00 	movabs $0xffff800000118380,%rdi$/;"	l
ffff800000104f2b	kernel.asm	/^ffff800000104f2b:	80 ff ff $/;"	l
ffff800000104f2e	kernel.asm	/^ffff800000104f2e:	48 b8 01 79 10 00 00 	movabs $0xffff800000107901,%rax$/;"	l
ffff800000104f35	kernel.asm	/^ffff800000104f35:	80 ff ff $/;"	l
ffff800000104f38	kernel.asm	/^ffff800000104f38:	ff d0                	callq  *%rax$/;"	l
ffff800000104f3a	kernel.asm	/^ffff800000104f3a:	48 b8 80 83 11 00 00 	movabs $0xffff800000118380,%rax$/;"	l
ffff800000104f41	kernel.asm	/^ffff800000104f41:	80 ff ff $/;"	l
ffff800000104f44	kernel.asm	/^ffff800000104f44:	8b 40 74             	mov    0x74(%rax),%eax$/;"	l
ffff800000104f47	kernel.asm	/^ffff800000104f47:	85 c0                	test   %eax,%eax$/;"	l
ffff800000104f49	kernel.asm	/^ffff800000104f49:	74 22                	je     ffff800000104f6d <begin_op+0x4d>$/;"	l
ffff800000104f4b	kernel.asm	/^ffff800000104f4b:	48 be 80 83 11 00 00 	movabs $0xffff800000118380,%rsi$/;"	l
ffff800000104f52	kernel.asm	/^ffff800000104f52:	80 ff ff $/;"	l
ffff800000104f55	kernel.asm	/^ffff800000104f55:	48 bf 80 83 11 00 00 	movabs $0xffff800000118380,%rdi$/;"	l
ffff800000104f5c	kernel.asm	/^ffff800000104f5c:	80 ff ff $/;"	l
ffff800000104f5f	kernel.asm	/^ffff800000104f5f:	48 b8 b1 6d 10 00 00 	movabs $0xffff800000106db1,%rax$/;"	l
ffff800000104f66	kernel.asm	/^ffff800000104f66:	80 ff ff $/;"	l
ffff800000104f69	kernel.asm	/^ffff800000104f69:	ff d0                	callq  *%rax$/;"	l
ffff800000104f6b	kernel.asm	/^ffff800000104f6b:	eb cd                	jmp    ffff800000104f3a <begin_op+0x1a>$/;"	l
ffff800000104f6d	kernel.asm	/^ffff800000104f6d:	48 b8 80 83 11 00 00 	movabs $0xffff800000118380,%rax$/;"	l
ffff800000104f74	kernel.asm	/^ffff800000104f74:	80 ff ff $/;"	l
ffff800000104f77	kernel.asm	/^ffff800000104f77:	8b 48 7c             	mov    0x7c(%rax),%ecx$/;"	l
ffff800000104f7a	kernel.asm	/^ffff800000104f7a:	48 b8 80 83 11 00 00 	movabs $0xffff800000118380,%rax$/;"	l
ffff800000104f81	kernel.asm	/^ffff800000104f81:	80 ff ff $/;"	l
ffff800000104f84	kernel.asm	/^ffff800000104f84:	8b 40 70             	mov    0x70(%rax),%eax$/;"	l
ffff800000104f87	kernel.asm	/^ffff800000104f87:	8d 50 01             	lea    0x1(%rax),%edx$/;"	l
ffff800000104f8a	kernel.asm	/^ffff800000104f8a:	89 d0                	mov    %edx,%eax$/;"	l
ffff800000104f8c	kernel.asm	/^ffff800000104f8c:	c1 e0 02             	shl    $0x2,%eax$/;"	l
ffff800000104f8f	kernel.asm	/^ffff800000104f8f:	01 d0                	add    %edx,%eax$/;"	l
ffff800000104f91	kernel.asm	/^ffff800000104f91:	01 c0                	add    %eax,%eax$/;"	l
ffff800000104f93	kernel.asm	/^ffff800000104f93:	01 c8                	add    %ecx,%eax$/;"	l
ffff800000104f95	kernel.asm	/^ffff800000104f95:	83 f8 1e             	cmp    $0x1e,%eax$/;"	l
ffff800000104f98	kernel.asm	/^ffff800000104f98:	7e 25                	jle    ffff800000104fbf <begin_op+0x9f>$/;"	l
ffff800000104f9a	kernel.asm	/^ffff800000104f9a:	48 be 80 83 11 00 00 	movabs $0xffff800000118380,%rsi$/;"	l
ffff800000104fa1	kernel.asm	/^ffff800000104fa1:	80 ff ff $/;"	l
ffff800000104fa4	kernel.asm	/^ffff800000104fa4:	48 bf 80 83 11 00 00 	movabs $0xffff800000118380,%rdi$/;"	l
ffff800000104fab	kernel.asm	/^ffff800000104fab:	80 ff ff $/;"	l
ffff800000104fae	kernel.asm	/^ffff800000104fae:	48 b8 b1 6d 10 00 00 	movabs $0xffff800000106db1,%rax$/;"	l
ffff800000104fb5	kernel.asm	/^ffff800000104fb5:	80 ff ff $/;"	l
ffff800000104fb8	kernel.asm	/^ffff800000104fb8:	ff d0                	callq  *%rax$/;"	l
ffff800000104fba	kernel.asm	/^ffff800000104fba:	e9 7b ff ff ff       	jmpq   ffff800000104f3a <begin_op+0x1a>$/;"	l
ffff800000104fbf	kernel.asm	/^ffff800000104fbf:	48 b8 80 83 11 00 00 	movabs $0xffff800000118380,%rax$/;"	l
ffff800000104fc6	kernel.asm	/^ffff800000104fc6:	80 ff ff $/;"	l
ffff800000104fc9	kernel.asm	/^ffff800000104fc9:	8b 40 70             	mov    0x70(%rax),%eax$/;"	l
ffff800000104fcc	kernel.asm	/^ffff800000104fcc:	8d 50 01             	lea    0x1(%rax),%edx$/;"	l
ffff800000104fcf	kernel.asm	/^ffff800000104fcf:	48 b8 80 83 11 00 00 	movabs $0xffff800000118380,%rax$/;"	l
ffff800000104fd6	kernel.asm	/^ffff800000104fd6:	80 ff ff $/;"	l
ffff800000104fd9	kernel.asm	/^ffff800000104fd9:	89 50 70             	mov    %edx,0x70(%rax)$/;"	l
ffff800000104fdc	kernel.asm	/^ffff800000104fdc:	48 bf 80 83 11 00 00 	movabs $0xffff800000118380,%rdi$/;"	l
ffff800000104fe3	kernel.asm	/^ffff800000104fe3:	80 ff ff $/;"	l
ffff800000104fe6	kernel.asm	/^ffff800000104fe6:	48 b8 9a 79 10 00 00 	movabs $0xffff80000010799a,%rax$/;"	l
ffff800000104fed	kernel.asm	/^ffff800000104fed:	80 ff ff $/;"	l
ffff800000104ff0	kernel.asm	/^ffff800000104ff0:	ff d0                	callq  *%rax$/;"	l
ffff800000104ff2	kernel.asm	/^ffff800000104ff2:	90                   	nop$/;"	l
ffff800000104ff3	kernel.asm	/^ffff800000104ff3:	90                   	nop$/;"	l
ffff800000104ff4	kernel.asm	/^ffff800000104ff4:	5d                   	pop    %rbp$/;"	l
ffff800000104ff5	kernel.asm	/^ffff800000104ff5:	c3                   	retq   $/;"	l
ffff800000104ff6	kernel.asm	/^ffff800000104ff6 <end_op>:$/;"	l
ffff800000104ff6	kernel.asm	/^ffff800000104ff6:	55                   	push   %rbp$/;"	l
ffff800000104ff7	kernel.asm	/^ffff800000104ff7:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000104ffa	kernel.asm	/^ffff800000104ffa:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff800000104ffe	kernel.asm	/^ffff800000104ffe:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)$/;"	l
ffff800000105005	kernel.asm	/^ffff800000105005:	48 bf 80 83 11 00 00 	movabs $0xffff800000118380,%rdi$/;"	l
ffff80000010500c	kernel.asm	/^ffff80000010500c:	80 ff ff $/;"	l
ffff80000010500f	kernel.asm	/^ffff80000010500f:	48 b8 01 79 10 00 00 	movabs $0xffff800000107901,%rax$/;"	l
ffff800000105016	kernel.asm	/^ffff800000105016:	80 ff ff $/;"	l
ffff800000105019	kernel.asm	/^ffff800000105019:	ff d0                	callq  *%rax$/;"	l
ffff80000010501b	kernel.asm	/^ffff80000010501b:	48 b8 80 83 11 00 00 	movabs $0xffff800000118380,%rax$/;"	l
ffff800000105022	kernel.asm	/^ffff800000105022:	80 ff ff $/;"	l
ffff800000105025	kernel.asm	/^ffff800000105025:	8b 40 70             	mov    0x70(%rax),%eax$/;"	l
ffff800000105028	kernel.asm	/^ffff800000105028:	8d 50 ff             	lea    -0x1(%rax),%edx$/;"	l
ffff80000010502b	kernel.asm	/^ffff80000010502b:	48 b8 80 83 11 00 00 	movabs $0xffff800000118380,%rax$/;"	l
ffff800000105032	kernel.asm	/^ffff800000105032:	80 ff ff $/;"	l
ffff800000105035	kernel.asm	/^ffff800000105035:	89 50 70             	mov    %edx,0x70(%rax)$/;"	l
ffff800000105038	kernel.asm	/^ffff800000105038:	48 b8 80 83 11 00 00 	movabs $0xffff800000118380,%rax$/;"	l
ffff80000010503f	kernel.asm	/^ffff80000010503f:	80 ff ff $/;"	l
ffff800000105042	kernel.asm	/^ffff800000105042:	8b 40 74             	mov    0x74(%rax),%eax$/;"	l
ffff800000105045	kernel.asm	/^ffff800000105045:	85 c0                	test   %eax,%eax$/;"	l
ffff800000105047	kernel.asm	/^ffff800000105047:	74 16                	je     ffff80000010505f <end_op+0x69>$/;"	l
ffff800000105049	kernel.asm	/^ffff800000105049:	48 bf 50 c4 10 00 00 	movabs $0xffff80000010c450,%rdi$/;"	l
ffff800000105050	kernel.asm	/^ffff800000105050:	80 ff ff $/;"	l
ffff800000105053	kernel.asm	/^ffff800000105053:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff80000010505a	kernel.asm	/^ffff80000010505a:	80 ff ff $/;"	l
ffff80000010505d	kernel.asm	/^ffff80000010505d:	ff d0                	callq  *%rax$/;"	l
ffff80000010505f	kernel.asm	/^ffff80000010505f:	48 b8 80 83 11 00 00 	movabs $0xffff800000118380,%rax$/;"	l
ffff800000105066	kernel.asm	/^ffff800000105066:	80 ff ff $/;"	l
ffff800000105069	kernel.asm	/^ffff800000105069:	8b 40 70             	mov    0x70(%rax),%eax$/;"	l
ffff80000010506c	kernel.asm	/^ffff80000010506c:	85 c0                	test   %eax,%eax$/;"	l
ffff80000010506e	kernel.asm	/^ffff80000010506e:	75 1a                	jne    ffff80000010508a <end_op+0x94>$/;"	l
ffff800000105070	kernel.asm	/^ffff800000105070:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%rbp)$/;"	l
ffff800000105077	kernel.asm	/^ffff800000105077:	48 b8 80 83 11 00 00 	movabs $0xffff800000118380,%rax$/;"	l
ffff80000010507e	kernel.asm	/^ffff80000010507e:	80 ff ff $/;"	l
ffff800000105081	kernel.asm	/^ffff800000105081:	c7 40 74 01 00 00 00 	movl   $0x1,0x74(%rax)$/;"	l
ffff800000105088	kernel.asm	/^ffff800000105088:	eb 16                	jmp    ffff8000001050a0 <end_op+0xaa>$/;"	l
ffff80000010508a	kernel.asm	/^ffff80000010508a:	48 bf 80 83 11 00 00 	movabs $0xffff800000118380,%rdi$/;"	l
ffff800000105091	kernel.asm	/^ffff800000105091:	80 ff ff $/;"	l
ffff800000105094	kernel.asm	/^ffff800000105094:	48 b8 19 6f 10 00 00 	movabs $0xffff800000106f19,%rax$/;"	l
ffff80000010509b	kernel.asm	/^ffff80000010509b:	80 ff ff $/;"	l
ffff80000010509e	kernel.asm	/^ffff80000010509e:	ff d0                	callq  *%rax$/;"	l
ffff8000001050a0	kernel.asm	/^ffff8000001050a0:	48 bf 80 83 11 00 00 	movabs $0xffff800000118380,%rdi$/;"	l
ffff8000001050a7	kernel.asm	/^ffff8000001050a7:	80 ff ff $/;"	l
ffff8000001050aa	kernel.asm	/^ffff8000001050aa:	48 b8 9a 79 10 00 00 	movabs $0xffff80000010799a,%rax$/;"	l
ffff8000001050b1	kernel.asm	/^ffff8000001050b1:	80 ff ff $/;"	l
ffff8000001050b4	kernel.asm	/^ffff8000001050b4:	ff d0                	callq  *%rax$/;"	l
ffff8000001050b6	kernel.asm	/^ffff8000001050b6:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)$/;"	l
ffff8000001050ba	kernel.asm	/^ffff8000001050ba:	74 64                	je     ffff800000105120 <end_op+0x12a>$/;"	l
ffff8000001050bc	kernel.asm	/^ffff8000001050bc:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff8000001050c1	kernel.asm	/^ffff8000001050c1:	48 ba 2c 52 10 00 00 	movabs $0xffff80000010522c,%rdx$/;"	l
ffff8000001050c8	kernel.asm	/^ffff8000001050c8:	80 ff ff $/;"	l
ffff8000001050cb	kernel.asm	/^ffff8000001050cb:	ff d2                	callq  *%rdx$/;"	l
ffff8000001050cd	kernel.asm	/^ffff8000001050cd:	48 bf 80 83 11 00 00 	movabs $0xffff800000118380,%rdi$/;"	l
ffff8000001050d4	kernel.asm	/^ffff8000001050d4:	80 ff ff $/;"	l
ffff8000001050d7	kernel.asm	/^ffff8000001050d7:	48 b8 01 79 10 00 00 	movabs $0xffff800000107901,%rax$/;"	l
ffff8000001050de	kernel.asm	/^ffff8000001050de:	80 ff ff $/;"	l
ffff8000001050e1	kernel.asm	/^ffff8000001050e1:	ff d0                	callq  *%rax$/;"	l
ffff8000001050e3	kernel.asm	/^ffff8000001050e3:	48 b8 80 83 11 00 00 	movabs $0xffff800000118380,%rax$/;"	l
ffff8000001050ea	kernel.asm	/^ffff8000001050ea:	80 ff ff $/;"	l
ffff8000001050ed	kernel.asm	/^ffff8000001050ed:	c7 40 74 00 00 00 00 	movl   $0x0,0x74(%rax)$/;"	l
ffff8000001050f4	kernel.asm	/^ffff8000001050f4:	48 bf 80 83 11 00 00 	movabs $0xffff800000118380,%rdi$/;"	l
ffff8000001050fb	kernel.asm	/^ffff8000001050fb:	80 ff ff $/;"	l
ffff8000001050fe	kernel.asm	/^ffff8000001050fe:	48 b8 19 6f 10 00 00 	movabs $0xffff800000106f19,%rax$/;"	l
ffff800000105105	kernel.asm	/^ffff800000105105:	80 ff ff $/;"	l
ffff800000105108	kernel.asm	/^ffff800000105108:	ff d0                	callq  *%rax$/;"	l
ffff80000010510a	kernel.asm	/^ffff80000010510a:	48 bf 80 83 11 00 00 	movabs $0xffff800000118380,%rdi$/;"	l
ffff800000105111	kernel.asm	/^ffff800000105111:	80 ff ff $/;"	l
ffff800000105114	kernel.asm	/^ffff800000105114:	48 b8 9a 79 10 00 00 	movabs $0xffff80000010799a,%rax$/;"	l
ffff80000010511b	kernel.asm	/^ffff80000010511b:	80 ff ff $/;"	l
ffff80000010511e	kernel.asm	/^ffff80000010511e:	ff d0                	callq  *%rax$/;"	l
ffff800000105120	kernel.asm	/^ffff800000105120:	90                   	nop$/;"	l
ffff800000105121	kernel.asm	/^ffff800000105121:	c9                   	leaveq $/;"	l
ffff800000105122	kernel.asm	/^ffff800000105122:	c3                   	retq   $/;"	l
ffff800000105123	kernel.asm	/^ffff800000105123 <write_log>:$/;"	l
ffff800000105123	kernel.asm	/^ffff800000105123:	55                   	push   %rbp$/;"	l
ffff800000105124	kernel.asm	/^ffff800000105124:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000105127	kernel.asm	/^ffff800000105127:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ffff80000010512b	kernel.asm	/^ffff80000010512b:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)$/;"	l
ffff800000105132	kernel.asm	/^ffff800000105132:	e9 dc 00 00 00       	jmpq   ffff800000105213 <write_log+0xf0>$/;"	l
ffff800000105137	kernel.asm	/^ffff800000105137:	48 b8 80 83 11 00 00 	movabs $0xffff800000118380,%rax$/;"	l
ffff80000010513e	kernel.asm	/^ffff80000010513e:	80 ff ff $/;"	l
ffff800000105141	kernel.asm	/^ffff800000105141:	8b 50 68             	mov    0x68(%rax),%edx$/;"	l
ffff800000105144	kernel.asm	/^ffff800000105144:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff800000105147	kernel.asm	/^ffff800000105147:	01 d0                	add    %edx,%eax$/;"	l
ffff800000105149	kernel.asm	/^ffff800000105149:	83 c0 01             	add    $0x1,%eax$/;"	l
ffff80000010514c	kernel.asm	/^ffff80000010514c:	89 c2                	mov    %eax,%edx$/;"	l
ffff80000010514e	kernel.asm	/^ffff80000010514e:	48 b8 80 83 11 00 00 	movabs $0xffff800000118380,%rax$/;"	l
ffff800000105155	kernel.asm	/^ffff800000105155:	80 ff ff $/;"	l
ffff800000105158	kernel.asm	/^ffff800000105158:	8b 40 78             	mov    0x78(%rax),%eax$/;"	l
ffff80000010515b	kernel.asm	/^ffff80000010515b:	89 d6                	mov    %edx,%esi$/;"	l
ffff80000010515d	kernel.asm	/^ffff80000010515d:	89 c7                	mov    %eax,%edi$/;"	l
ffff80000010515f	kernel.asm	/^ffff80000010515f:	48 b8 f8 03 10 00 00 	movabs $0xffff8000001003f8,%rax$/;"	l
ffff800000105166	kernel.asm	/^ffff800000105166:	80 ff ff $/;"	l
ffff800000105169	kernel.asm	/^ffff800000105169:	ff d0                	callq  *%rax$/;"	l
ffff80000010516b	kernel.asm	/^ffff80000010516b:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ffff80000010516f	kernel.asm	/^ffff80000010516f:	48 b8 80 83 11 00 00 	movabs $0xffff800000118380,%rax$/;"	l
ffff800000105176	kernel.asm	/^ffff800000105176:	80 ff ff $/;"	l
ffff800000105179	kernel.asm	/^ffff800000105179:	8b 55 fc             	mov    -0x4(%rbp),%edx$/;"	l
ffff80000010517c	kernel.asm	/^ffff80000010517c:	48 63 d2             	movslq %edx,%rdx$/;"	l
ffff80000010517f	kernel.asm	/^ffff80000010517f:	48 83 c2 1c          	add    $0x1c,%rdx$/;"	l
ffff800000105183	kernel.asm	/^ffff800000105183:	8b 44 90 10          	mov    0x10(%rax,%rdx,4),%eax$/;"	l
ffff800000105187	kernel.asm	/^ffff800000105187:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000105189	kernel.asm	/^ffff800000105189:	48 b8 80 83 11 00 00 	movabs $0xffff800000118380,%rax$/;"	l
ffff800000105190	kernel.asm	/^ffff800000105190:	80 ff ff $/;"	l
ffff800000105193	kernel.asm	/^ffff800000105193:	8b 40 78             	mov    0x78(%rax),%eax$/;"	l
ffff800000105196	kernel.asm	/^ffff800000105196:	89 d6                	mov    %edx,%esi$/;"	l
ffff800000105198	kernel.asm	/^ffff800000105198:	89 c7                	mov    %eax,%edi$/;"	l
ffff80000010519a	kernel.asm	/^ffff80000010519a:	48 b8 f8 03 10 00 00 	movabs $0xffff8000001003f8,%rax$/;"	l
ffff8000001051a1	kernel.asm	/^ffff8000001051a1:	80 ff ff $/;"	l
ffff8000001051a4	kernel.asm	/^ffff8000001051a4:	ff d0                	callq  *%rax$/;"	l
ffff8000001051a6	kernel.asm	/^ffff8000001051a6:	48 89 45 e8          	mov    %rax,-0x18(%rbp)$/;"	l
ffff8000001051aa	kernel.asm	/^ffff8000001051aa:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff8000001051ae	kernel.asm	/^ffff8000001051ae:	48 8d 88 b0 00 00 00 	lea    0xb0(%rax),%rcx$/;"	l
ffff8000001051b5	kernel.asm	/^ffff8000001051b5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff8000001051b9	kernel.asm	/^ffff8000001051b9:	48 05 b0 00 00 00    	add    $0xb0,%rax$/;"	l
ffff8000001051bf	kernel.asm	/^ffff8000001051bf:	ba 00 02 00 00       	mov    $0x200,%edx$/;"	l
ffff8000001051c4	kernel.asm	/^ffff8000001051c4:	48 89 ce             	mov    %rcx,%rsi$/;"	l
ffff8000001051c7	kernel.asm	/^ffff8000001051c7:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001051ca	kernel.asm	/^ffff8000001051ca:	48 b8 9a 7d 10 00 00 	movabs $0xffff800000107d9a,%rax$/;"	l
ffff8000001051d1	kernel.asm	/^ffff8000001051d1:	80 ff ff $/;"	l
ffff8000001051d4	kernel.asm	/^ffff8000001051d4:	ff d0                	callq  *%rax$/;"	l
ffff8000001051d6	kernel.asm	/^ffff8000001051d6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff8000001051da	kernel.asm	/^ffff8000001051da:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001051dd	kernel.asm	/^ffff8000001051dd:	48 b8 46 04 10 00 00 	movabs $0xffff800000100446,%rax$/;"	l
ffff8000001051e4	kernel.asm	/^ffff8000001051e4:	80 ff ff $/;"	l
ffff8000001051e7	kernel.asm	/^ffff8000001051e7:	ff d0                	callq  *%rax$/;"	l
ffff8000001051e9	kernel.asm	/^ffff8000001051e9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff8000001051ed	kernel.asm	/^ffff8000001051ed:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001051f0	kernel.asm	/^ffff8000001051f0:	48 b8 aa 04 10 00 00 	movabs $0xffff8000001004aa,%rax$/;"	l
ffff8000001051f7	kernel.asm	/^ffff8000001051f7:	80 ff ff $/;"	l
ffff8000001051fa	kernel.asm	/^ffff8000001051fa:	ff d0                	callq  *%rax$/;"	l
ffff8000001051fc	kernel.asm	/^ffff8000001051fc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000105200	kernel.asm	/^ffff800000105200:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000105203	kernel.asm	/^ffff800000105203:	48 b8 aa 04 10 00 00 	movabs $0xffff8000001004aa,%rax$/;"	l
ffff80000010520a	kernel.asm	/^ffff80000010520a:	80 ff ff $/;"	l
ffff80000010520d	kernel.asm	/^ffff80000010520d:	ff d0                	callq  *%rax$/;"	l
ffff80000010520f	kernel.asm	/^ffff80000010520f:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)$/;"	l
ffff800000105213	kernel.asm	/^ffff800000105213:	48 b8 80 83 11 00 00 	movabs $0xffff800000118380,%rax$/;"	l
ffff80000010521a	kernel.asm	/^ffff80000010521a:	80 ff ff $/;"	l
ffff80000010521d	kernel.asm	/^ffff80000010521d:	8b 40 7c             	mov    0x7c(%rax),%eax$/;"	l
ffff800000105220	kernel.asm	/^ffff800000105220:	3b 45 fc             	cmp    -0x4(%rbp),%eax$/;"	l
ffff800000105223	kernel.asm	/^ffff800000105223:	0f 8f 0e ff ff ff    	jg     ffff800000105137 <write_log+0x14>$/;"	l
ffff800000105229	kernel.asm	/^ffff800000105229:	90                   	nop$/;"	l
ffff80000010522a	kernel.asm	/^ffff80000010522a:	c9                   	leaveq $/;"	l
ffff80000010522b	kernel.asm	/^ffff80000010522b:	c3                   	retq   $/;"	l
ffff80000010522c	kernel.asm	/^ffff80000010522c <commit>:$/;"	l
ffff80000010522c	kernel.asm	/^ffff80000010522c:	55                   	push   %rbp$/;"	l
ffff80000010522d	kernel.asm	/^ffff80000010522d:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000105230	kernel.asm	/^ffff800000105230:	48 b8 80 83 11 00 00 	movabs $0xffff800000118380,%rax$/;"	l
ffff800000105237	kernel.asm	/^ffff800000105237:	80 ff ff $/;"	l
ffff80000010523a	kernel.asm	/^ffff80000010523a:	8b 40 7c             	mov    0x7c(%rax),%eax$/;"	l
ffff80000010523d	kernel.asm	/^ffff80000010523d:	85 c0                	test   %eax,%eax$/;"	l
ffff80000010523f	kernel.asm	/^ffff80000010523f:	7e 41                	jle    ffff800000105282 <commit+0x56>$/;"	l
ffff800000105241	kernel.asm	/^ffff800000105241:	48 b8 23 51 10 00 00 	movabs $0xffff800000105123,%rax$/;"	l
ffff800000105248	kernel.asm	/^ffff800000105248:	80 ff ff $/;"	l
ffff80000010524b	kernel.asm	/^ffff80000010524b:	ff d0                	callq  *%rax$/;"	l
ffff80000010524d	kernel.asm	/^ffff80000010524d:	48 b8 1d 4e 10 00 00 	movabs $0xffff800000104e1d,%rax$/;"	l
ffff800000105254	kernel.asm	/^ffff800000105254:	80 ff ff $/;"	l
ffff800000105257	kernel.asm	/^ffff800000105257:	ff d0                	callq  *%rax$/;"	l
ffff800000105259	kernel.asm	/^ffff800000105259:	48 b8 60 4c 10 00 00 	movabs $0xffff800000104c60,%rax$/;"	l
ffff800000105260	kernel.asm	/^ffff800000105260:	80 ff ff $/;"	l
ffff800000105263	kernel.asm	/^ffff800000105263:	ff d0                	callq  *%rax$/;"	l
ffff800000105265	kernel.asm	/^ffff800000105265:	48 b8 80 83 11 00 00 	movabs $0xffff800000118380,%rax$/;"	l
ffff80000010526c	kernel.asm	/^ffff80000010526c:	80 ff ff $/;"	l
ffff80000010526f	kernel.asm	/^ffff80000010526f:	c7 40 7c 00 00 00 00 	movl   $0x0,0x7c(%rax)$/;"	l
ffff800000105276	kernel.asm	/^ffff800000105276:	48 b8 1d 4e 10 00 00 	movabs $0xffff800000104e1d,%rax$/;"	l
ffff80000010527d	kernel.asm	/^ffff80000010527d:	80 ff ff $/;"	l
ffff800000105280	kernel.asm	/^ffff800000105280:	ff d0                	callq  *%rax$/;"	l
ffff800000105282	kernel.asm	/^ffff800000105282:	90                   	nop$/;"	l
ffff800000105283	kernel.asm	/^ffff800000105283:	5d                   	pop    %rbp$/;"	l
ffff800000105284	kernel.asm	/^ffff800000105284:	c3                   	retq   $/;"	l
ffff800000105285	kernel.asm	/^ffff800000105285 <log_write>:$/;"	l
ffff800000105285	kernel.asm	/^ffff800000105285:	55                   	push   %rbp$/;"	l
ffff800000105286	kernel.asm	/^ffff800000105286:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000105289	kernel.asm	/^ffff800000105289:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ffff80000010528d	kernel.asm	/^ffff80000010528d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
ffff800000105291	kernel.asm	/^ffff800000105291:	48 b8 80 83 11 00 00 	movabs $0xffff800000118380,%rax$/;"	l
ffff800000105298	kernel.asm	/^ffff800000105298:	80 ff ff $/;"	l
ffff80000010529b	kernel.asm	/^ffff80000010529b:	8b 40 7c             	mov    0x7c(%rax),%eax$/;"	l
ffff80000010529e	kernel.asm	/^ffff80000010529e:	83 f8 1d             	cmp    $0x1d,%eax$/;"	l
ffff8000001052a1	kernel.asm	/^ffff8000001052a1:	7f 21                	jg     ffff8000001052c4 <log_write+0x3f>$/;"	l
ffff8000001052a3	kernel.asm	/^ffff8000001052a3:	48 b8 80 83 11 00 00 	movabs $0xffff800000118380,%rax$/;"	l
ffff8000001052aa	kernel.asm	/^ffff8000001052aa:	80 ff ff $/;"	l
ffff8000001052ad	kernel.asm	/^ffff8000001052ad:	8b 50 7c             	mov    0x7c(%rax),%edx$/;"	l
ffff8000001052b0	kernel.asm	/^ffff8000001052b0:	48 b8 80 83 11 00 00 	movabs $0xffff800000118380,%rax$/;"	l
ffff8000001052b7	kernel.asm	/^ffff8000001052b7:	80 ff ff $/;"	l
ffff8000001052ba	kernel.asm	/^ffff8000001052ba:	8b 40 6c             	mov    0x6c(%rax),%eax$/;"	l
ffff8000001052bd	kernel.asm	/^ffff8000001052bd:	83 e8 01             	sub    $0x1,%eax$/;"	l
ffff8000001052c0	kernel.asm	/^ffff8000001052c0:	39 c2                	cmp    %eax,%edx$/;"	l
ffff8000001052c2	kernel.asm	/^ffff8000001052c2:	7c 16                	jl     ffff8000001052da <log_write+0x55>$/;"	l
ffff8000001052c4	kernel.asm	/^ffff8000001052c4:	48 bf 5f c4 10 00 00 	movabs $0xffff80000010c45f,%rdi$/;"	l
ffff8000001052cb	kernel.asm	/^ffff8000001052cb:	80 ff ff $/;"	l
ffff8000001052ce	kernel.asm	/^ffff8000001052ce:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff8000001052d5	kernel.asm	/^ffff8000001052d5:	80 ff ff $/;"	l
ffff8000001052d8	kernel.asm	/^ffff8000001052d8:	ff d0                	callq  *%rax$/;"	l
ffff8000001052da	kernel.asm	/^ffff8000001052da:	48 b8 80 83 11 00 00 	movabs $0xffff800000118380,%rax$/;"	l
ffff8000001052e1	kernel.asm	/^ffff8000001052e1:	80 ff ff $/;"	l
ffff8000001052e4	kernel.asm	/^ffff8000001052e4:	8b 40 70             	mov    0x70(%rax),%eax$/;"	l
ffff8000001052e7	kernel.asm	/^ffff8000001052e7:	85 c0                	test   %eax,%eax$/;"	l
ffff8000001052e9	kernel.asm	/^ffff8000001052e9:	7f 16                	jg     ffff800000105301 <log_write+0x7c>$/;"	l
ffff8000001052eb	kernel.asm	/^ffff8000001052eb:	48 bf 75 c4 10 00 00 	movabs $0xffff80000010c475,%rdi$/;"	l
ffff8000001052f2	kernel.asm	/^ffff8000001052f2:	80 ff ff $/;"	l
ffff8000001052f5	kernel.asm	/^ffff8000001052f5:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff8000001052fc	kernel.asm	/^ffff8000001052fc:	80 ff ff $/;"	l
ffff8000001052ff	kernel.asm	/^ffff8000001052ff:	ff d0                	callq  *%rax$/;"	l
ffff800000105301	kernel.asm	/^ffff800000105301:	48 bf 80 83 11 00 00 	movabs $0xffff800000118380,%rdi$/;"	l
ffff800000105308	kernel.asm	/^ffff800000105308:	80 ff ff $/;"	l
ffff80000010530b	kernel.asm	/^ffff80000010530b:	48 b8 01 79 10 00 00 	movabs $0xffff800000107901,%rax$/;"	l
ffff800000105312	kernel.asm	/^ffff800000105312:	80 ff ff $/;"	l
ffff800000105315	kernel.asm	/^ffff800000105315:	ff d0                	callq  *%rax$/;"	l
ffff800000105317	kernel.asm	/^ffff800000105317:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)$/;"	l
ffff80000010531e	kernel.asm	/^ffff80000010531e:	eb 29                	jmp    ffff800000105349 <log_write+0xc4>$/;"	l
ffff800000105320	kernel.asm	/^ffff800000105320:	48 b8 80 83 11 00 00 	movabs $0xffff800000118380,%rax$/;"	l
ffff800000105327	kernel.asm	/^ffff800000105327:	80 ff ff $/;"	l
ffff80000010532a	kernel.asm	/^ffff80000010532a:	8b 55 fc             	mov    -0x4(%rbp),%edx$/;"	l
ffff80000010532d	kernel.asm	/^ffff80000010532d:	48 63 d2             	movslq %edx,%rdx$/;"	l
ffff800000105330	kernel.asm	/^ffff800000105330:	48 83 c2 1c          	add    $0x1c,%rdx$/;"	l
ffff800000105334	kernel.asm	/^ffff800000105334:	8b 44 90 10          	mov    0x10(%rax,%rdx,4),%eax$/;"	l
ffff800000105338	kernel.asm	/^ffff800000105338:	89 c2                	mov    %eax,%edx$/;"	l
ffff80000010533a	kernel.asm	/^ffff80000010533a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010533e	kernel.asm	/^ffff80000010533e:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
ffff800000105341	kernel.asm	/^ffff800000105341:	39 c2                	cmp    %eax,%edx$/;"	l
ffff800000105343	kernel.asm	/^ffff800000105343:	74 18                	je     ffff80000010535d <log_write+0xd8>$/;"	l
ffff800000105345	kernel.asm	/^ffff800000105345:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)$/;"	l
ffff800000105349	kernel.asm	/^ffff800000105349:	48 b8 80 83 11 00 00 	movabs $0xffff800000118380,%rax$/;"	l
ffff800000105350	kernel.asm	/^ffff800000105350:	80 ff ff $/;"	l
ffff800000105353	kernel.asm	/^ffff800000105353:	8b 40 7c             	mov    0x7c(%rax),%eax$/;"	l
ffff800000105356	kernel.asm	/^ffff800000105356:	3b 45 fc             	cmp    -0x4(%rbp),%eax$/;"	l
ffff800000105359	kernel.asm	/^ffff800000105359:	7f c5                	jg     ffff800000105320 <log_write+0x9b>$/;"	l
ffff80000010535b	kernel.asm	/^ffff80000010535b:	eb 01                	jmp    ffff80000010535e <log_write+0xd9>$/;"	l
ffff80000010535d	kernel.asm	/^ffff80000010535d:	90                   	nop$/;"	l
ffff80000010535e	kernel.asm	/^ffff80000010535e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000105362	kernel.asm	/^ffff800000105362:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
ffff800000105365	kernel.asm	/^ffff800000105365:	89 c1                	mov    %eax,%ecx$/;"	l
ffff800000105367	kernel.asm	/^ffff800000105367:	48 b8 80 83 11 00 00 	movabs $0xffff800000118380,%rax$/;"	l
ffff80000010536e	kernel.asm	/^ffff80000010536e:	80 ff ff $/;"	l
ffff800000105371	kernel.asm	/^ffff800000105371:	8b 55 fc             	mov    -0x4(%rbp),%edx$/;"	l
ffff800000105374	kernel.asm	/^ffff800000105374:	48 63 d2             	movslq %edx,%rdx$/;"	l
ffff800000105377	kernel.asm	/^ffff800000105377:	48 83 c2 1c          	add    $0x1c,%rdx$/;"	l
ffff80000010537b	kernel.asm	/^ffff80000010537b:	89 4c 90 10          	mov    %ecx,0x10(%rax,%rdx,4)$/;"	l
ffff80000010537f	kernel.asm	/^ffff80000010537f:	48 b8 80 83 11 00 00 	movabs $0xffff800000118380,%rax$/;"	l
ffff800000105386	kernel.asm	/^ffff800000105386:	80 ff ff $/;"	l
ffff800000105389	kernel.asm	/^ffff800000105389:	8b 40 7c             	mov    0x7c(%rax),%eax$/;"	l
ffff80000010538c	kernel.asm	/^ffff80000010538c:	3b 45 fc             	cmp    -0x4(%rbp),%eax$/;"	l
ffff80000010538f	kernel.asm	/^ffff80000010538f:	75 1d                	jne    ffff8000001053ae <log_write+0x129>$/;"	l
ffff800000105391	kernel.asm	/^ffff800000105391:	48 b8 80 83 11 00 00 	movabs $0xffff800000118380,%rax$/;"	l
ffff800000105398	kernel.asm	/^ffff800000105398:	80 ff ff $/;"	l
ffff80000010539b	kernel.asm	/^ffff80000010539b:	8b 40 7c             	mov    0x7c(%rax),%eax$/;"	l
ffff80000010539e	kernel.asm	/^ffff80000010539e:	8d 50 01             	lea    0x1(%rax),%edx$/;"	l
ffff8000001053a1	kernel.asm	/^ffff8000001053a1:	48 b8 80 83 11 00 00 	movabs $0xffff800000118380,%rax$/;"	l
ffff8000001053a8	kernel.asm	/^ffff8000001053a8:	80 ff ff $/;"	l
ffff8000001053ab	kernel.asm	/^ffff8000001053ab:	89 50 7c             	mov    %edx,0x7c(%rax)$/;"	l
ffff8000001053ae	kernel.asm	/^ffff8000001053ae:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff8000001053b2	kernel.asm	/^ffff8000001053b2:	8b 00                	mov    (%rax),%eax$/;"	l
ffff8000001053b4	kernel.asm	/^ffff8000001053b4:	83 c8 04             	or     $0x4,%eax$/;"	l
ffff8000001053b7	kernel.asm	/^ffff8000001053b7:	89 c2                	mov    %eax,%edx$/;"	l
ffff8000001053b9	kernel.asm	/^ffff8000001053b9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff8000001053bd	kernel.asm	/^ffff8000001053bd:	89 10                	mov    %edx,(%rax)$/;"	l
ffff8000001053bf	kernel.asm	/^ffff8000001053bf:	48 bf 80 83 11 00 00 	movabs $0xffff800000118380,%rdi$/;"	l
ffff8000001053c6	kernel.asm	/^ffff8000001053c6:	80 ff ff $/;"	l
ffff8000001053c9	kernel.asm	/^ffff8000001053c9:	48 b8 9a 79 10 00 00 	movabs $0xffff80000010799a,%rax$/;"	l
ffff8000001053d0	kernel.asm	/^ffff8000001053d0:	80 ff ff $/;"	l
ffff8000001053d3	kernel.asm	/^ffff8000001053d3:	ff d0                	callq  *%rax$/;"	l
ffff8000001053d5	kernel.asm	/^ffff8000001053d5:	90                   	nop$/;"	l
ffff8000001053d6	kernel.asm	/^ffff8000001053d6:	c9                   	leaveq $/;"	l
ffff8000001053d7	kernel.asm	/^ffff8000001053d7:	c3                   	retq   $/;"	l
ffff8000001053d8	kernel.asm	/^ffff8000001053d8 <v2p>:$/;"	l
ffff8000001053d8	kernel.asm	/^ffff8000001053d8:	55                   	push   %rbp$/;"	l
ffff8000001053d9	kernel.asm	/^ffff8000001053d9:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff8000001053dc	kernel.asm	/^ffff8000001053dc:	48 83 ec 08          	sub    $0x8,%rsp$/;"	l
ffff8000001053e0	kernel.asm	/^ffff8000001053e0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)$/;"	l
ffff8000001053e4	kernel.asm	/^ffff8000001053e4:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx$/;"	l
ffff8000001053e8	kernel.asm	/^ffff8000001053e8:	48 b8 00 00 00 00 00 	movabs $0x800000000000,%rax$/;"	l
ffff8000001053ef	kernel.asm	/^ffff8000001053ef:	80 00 00 $/;"	l
ffff8000001053f2	kernel.asm	/^ffff8000001053f2:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff8000001053f5	kernel.asm	/^ffff8000001053f5:	c9                   	leaveq $/;"	l
ffff8000001053f6	kernel.asm	/^ffff8000001053f6:	c3                   	retq   $/;"	l
ffff8000001053f7	kernel.asm	/^ffff8000001053f7 <xchg>:$/;"	l
ffff8000001053f7	kernel.asm	/^ffff8000001053f7:	55                   	push   %rbp$/;"	l
ffff8000001053f8	kernel.asm	/^ffff8000001053f8:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff8000001053fb	kernel.asm	/^ffff8000001053fb:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ffff8000001053ff	kernel.asm	/^ffff8000001053ff:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
ffff800000105403	kernel.asm	/^ffff800000105403:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)$/;"	l
ffff800000105407	kernel.asm	/^ffff800000105407:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx$/;"	l
ffff80000010540b	kernel.asm	/^ffff80000010540b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff80000010540f	kernel.asm	/^ffff80000010540f:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx$/;"	l
ffff800000105413	kernel.asm	/^ffff800000105413:	f0 87 02             	lock xchg %eax,(%rdx)$/;"	l
ffff800000105416	kernel.asm	/^ffff800000105416:	89 45 fc             	mov    %eax,-0x4(%rbp)$/;"	l
ffff800000105419	kernel.asm	/^ffff800000105419:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff80000010541c	kernel.asm	/^ffff80000010541c:	c9                   	leaveq $/;"	l
ffff80000010541d	kernel.asm	/^ffff80000010541d:	c3                   	retq   $/;"	l
ffff80000010541e	kernel.asm	/^ffff80000010541e <main>:$/;"	l
ffff80000010541e	kernel.asm	/^ffff80000010541e:	55                   	push   %rbp$/;"	l
ffff80000010541f	kernel.asm	/^ffff80000010541f:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000105422	kernel.asm	/^ffff800000105422:	48 b8 7f a0 10 00 00 	movabs $0xffff80000010a07f,%rax$/;"	l
ffff800000105429	kernel.asm	/^ffff800000105429:	80 ff ff $/;"	l
ffff80000010542c	kernel.asm	/^ffff80000010542c:	ff d0                	callq  *%rax$/;"	l
ffff80000010542e	kernel.asm	/^ffff80000010542e:	48 be 00 00 40 00 00 	movabs $0xffff800000400000,%rsi$/;"	l
ffff800000105435	kernel.asm	/^ffff800000105435:	80 ff ff $/;"	l
ffff800000105438	kernel.asm	/^ffff800000105438:	48 bf 00 d0 11 00 00 	movabs $0xffff80000011d000,%rdi$/;"	l
ffff80000010543f	kernel.asm	/^ffff80000010543f:	80 ff ff $/;"	l
ffff800000105442	kernel.asm	/^ffff800000105442:	48 b8 af 3f 10 00 00 	movabs $0xffff800000103faf,%rax$/;"	l
ffff800000105449	kernel.asm	/^ffff800000105449:	80 ff ff $/;"	l
ffff80000010544c	kernel.asm	/^ffff80000010544c:	ff d0                	callq  *%rax$/;"	l
ffff80000010544e	kernel.asm	/^ffff80000010544e:	48 b8 54 b3 10 00 00 	movabs $0xffff80000010b354,%rax$/;"	l
ffff800000105455	kernel.asm	/^ffff800000105455:	80 ff ff $/;"	l
ffff800000105458	kernel.asm	/^ffff800000105458:	ff d0                	callq  *%rax$/;"	l
ffff80000010545a	kernel.asm	/^ffff80000010545a:	48 b8 1c 5a 10 00 00 	movabs $0xffff800000105a1c,%rax$/;"	l
ffff800000105461	kernel.asm	/^ffff800000105461:	80 ff ff $/;"	l
ffff800000105464	kernel.asm	/^ffff800000105464:	ff d0                	callq  *%rax$/;"	l
ffff800000105466	kernel.asm	/^ffff800000105466:	48 b8 5d 45 10 00 00 	movabs $0xffff80000010455d,%rax$/;"	l
ffff80000010546d	kernel.asm	/^ffff80000010546d:	80 ff ff $/;"	l
ffff800000105470	kernel.asm	/^ffff800000105470:	ff d0                	callq  *%rax$/;"	l
ffff800000105472	kernel.asm	/^ffff800000105472:	48 b8 5c 9b 10 00 00 	movabs $0xffff800000109b5c,%rax$/;"	l
ffff800000105479	kernel.asm	/^ffff800000105479:	80 ff ff $/;"	l
ffff80000010547c	kernel.asm	/^ffff80000010547c:	ff d0                	callq  *%rax$/;"	l
ffff80000010547e	kernel.asm	/^ffff80000010547e:	48 b8 96 ae 10 00 00 	movabs $0xffff80000010ae96,%rax$/;"	l
ffff800000105485	kernel.asm	/^ffff800000105485:	80 ff ff $/;"	l
ffff800000105488	kernel.asm	/^ffff800000105488:	ff d0                	callq  *%rax$/;"	l
ffff80000010548a	kernel.asm	/^ffff80000010548a:	48 b8 ed 46 10 00 00 	movabs $0xffff8000001046ed,%rax$/;"	l
ffff800000105491	kernel.asm	/^ffff800000105491:	80 ff ff $/;"	l
ffff800000105494	kernel.asm	/^ffff800000105494:	ff d0                	callq  *%rax$/;"	l
ffff800000105496	kernel.asm	/^ffff800000105496:	89 c6                	mov    %eax,%esi$/;"	l
ffff800000105498	kernel.asm	/^ffff800000105498:	48 bf 90 c4 10 00 00 	movabs $0xffff80000010c490,%rdi$/;"	l
ffff80000010549f	kernel.asm	/^ffff80000010549f:	80 ff ff $/;"	l
ffff8000001054a2	kernel.asm	/^ffff8000001054a2:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff8000001054a7	kernel.asm	/^ffff8000001054a7:	48 ba ac 07 10 00 00 	movabs $0xffff8000001007ac,%rdx$/;"	l
ffff8000001054ae	kernel.asm	/^ffff8000001054ae:	80 ff ff $/;"	l
ffff8000001054b1	kernel.asm	/^ffff8000001054b1:	ff d2                	callq  *%rdx$/;"	l
ffff8000001054b3	kernel.asm	/^ffff8000001054b3:	48 b8 7e 3e 10 00 00 	movabs $0xffff800000103e7e,%rax$/;"	l
ffff8000001054ba	kernel.asm	/^ffff8000001054ba:	80 ff ff $/;"	l
ffff8000001054bd	kernel.asm	/^ffff8000001054bd:	ff d0                	callq  *%rax$/;"	l
ffff8000001054bf	kernel.asm	/^ffff8000001054bf:	48 b8 bb 13 10 00 00 	movabs $0xffff8000001013bb,%rax$/;"	l
ffff8000001054c6	kernel.asm	/^ffff8000001054c6:	80 ff ff $/;"	l
ffff8000001054c9	kernel.asm	/^ffff8000001054c9:	ff d0                	callq  *%rax$/;"	l
ffff8000001054cb	kernel.asm	/^ffff8000001054cb:	48 b8 83 a1 10 00 00 	movabs $0xffff80000010a183,%rax$/;"	l
ffff8000001054d2	kernel.asm	/^ffff8000001054d2:	80 ff ff $/;"	l
ffff8000001054d5	kernel.asm	/^ffff8000001054d5:	ff d0                	callq  *%rax$/;"	l
ffff8000001054d7	kernel.asm	/^ffff8000001054d7:	48 b8 43 61 10 00 00 	movabs $0xffff800000106143,%rax$/;"	l
ffff8000001054de	kernel.asm	/^ffff8000001054de:	80 ff ff $/;"	l
ffff8000001054e1	kernel.asm	/^ffff8000001054e1:	ff d0                	callq  *%rax$/;"	l
ffff8000001054e3	kernel.asm	/^ffff8000001054e3:	48 b8 53 01 10 00 00 	movabs $0xffff800000100153,%rax$/;"	l
ffff8000001054ea	kernel.asm	/^ffff8000001054ea:	80 ff ff $/;"	l
ffff8000001054ed	kernel.asm	/^ffff8000001054ed:	ff d0                	callq  *%rax$/;"	l
ffff8000001054ef	kernel.asm	/^ffff8000001054ef:	48 b8 7d 1a 10 00 00 	movabs $0xffff800000101a7d,%rax$/;"	l
ffff8000001054f6	kernel.asm	/^ffff8000001054f6:	80 ff ff $/;"	l
ffff8000001054f9	kernel.asm	/^ffff8000001054f9:	ff d0                	callq  *%rax$/;"	l
ffff8000001054fb	kernel.asm	/^ffff8000001054fb:	48 b8 f9 38 10 00 00 	movabs $0xffff8000001038f9,%rax$/;"	l
ffff800000105502	kernel.asm	/^ffff800000105502:	80 ff ff $/;"	l
ffff800000105505	kernel.asm	/^ffff800000105505:	ff d0                	callq  *%rax$/;"	l
ffff800000105507	kernel.asm	/^ffff800000105507:	48 b8 f5 55 10 00 00 	movabs $0xffff8000001055f5,%rax$/;"	l
ffff80000010550e	kernel.asm	/^ffff80000010550e:	80 ff ff $/;"	l
ffff800000105511	kernel.asm	/^ffff800000105511:	ff d0                	callq  *%rax$/;"	l
ffff800000105513	kernel.asm	/^ffff800000105513:	48 be 00 00 00 0e 00 	movabs $0xffff80000e000000,%rsi$/;"	l
ffff80000010551a	kernel.asm	/^ffff80000010551a:	80 ff ff $/;"	l
ffff80000010551d	kernel.asm	/^ffff80000010551d:	48 bf 00 00 40 00 00 	movabs $0xffff800000400000,%rdi$/;"	l
ffff800000105524	kernel.asm	/^ffff800000105524:	80 ff ff $/;"	l
ffff800000105527	kernel.asm	/^ffff800000105527:	48 b8 0d 40 10 00 00 	movabs $0xffff80000010400d,%rax$/;"	l
ffff80000010552e	kernel.asm	/^ffff80000010552e:	80 ff ff $/;"	l
ffff800000105531	kernel.asm	/^ffff800000105531:	ff d0                	callq  *%rax$/;"	l
ffff800000105533	kernel.asm	/^ffff800000105533:	48 b8 e2 62 10 00 00 	movabs $0xffff8000001062e2,%rax$/;"	l
ffff80000010553a	kernel.asm	/^ffff80000010553a:	80 ff ff $/;"	l
ffff80000010553d	kernel.asm	/^ffff80000010553d:	ff d0                	callq  *%rax$/;"	l
ffff80000010553f	kernel.asm	/^ffff80000010553f:	48 b8 7f 55 10 00 00 	movabs $0xffff80000010557f,%rax$/;"	l
ffff800000105546	kernel.asm	/^ffff800000105546:	80 ff ff $/;"	l
ffff800000105549	kernel.asm	/^ffff800000105549:	ff d0                	callq  *%rax$/;"	l
ffff80000010554b	kernel.asm	/^ffff80000010554b <mpenter>:$/;"	l
ffff80000010554b	kernel.asm	/^ffff80000010554b:	55                   	push   %rbp$/;"	l
ffff80000010554c	kernel.asm	/^ffff80000010554c:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010554f	kernel.asm	/^ffff80000010554f:	48 b8 59 b4 10 00 00 	movabs $0xffff80000010b459,%rax$/;"	l
ffff800000105556	kernel.asm	/^ffff800000105556:	80 ff ff $/;"	l
ffff800000105559	kernel.asm	/^ffff800000105559:	ff d0                	callq  *%rax$/;"	l
ffff80000010555b	kernel.asm	/^ffff80000010555b:	48 b8 96 ae 10 00 00 	movabs $0xffff80000010ae96,%rax$/;"	l
ffff800000105562	kernel.asm	/^ffff800000105562:	80 ff ff $/;"	l
ffff800000105565	kernel.asm	/^ffff800000105565:	ff d0                	callq  *%rax$/;"	l
ffff800000105567	kernel.asm	/^ffff800000105567:	48 b8 5d 45 10 00 00 	movabs $0xffff80000010455d,%rax$/;"	l
ffff80000010556e	kernel.asm	/^ffff80000010556e:	80 ff ff $/;"	l
ffff800000105571	kernel.asm	/^ffff800000105571:	ff d0                	callq  *%rax$/;"	l
ffff800000105573	kernel.asm	/^ffff800000105573:	48 b8 7f 55 10 00 00 	movabs $0xffff80000010557f,%rax$/;"	l
ffff80000010557a	kernel.asm	/^ffff80000010557a:	80 ff ff $/;"	l
ffff80000010557d	kernel.asm	/^ffff80000010557d:	ff d0                	callq  *%rax$/;"	l
ffff80000010557f	kernel.asm	/^ffff80000010557f <mpmain>:$/;"	l
ffff80000010557f	kernel.asm	/^ffff80000010557f:	55                   	push   %rbp$/;"	l
ffff800000105580	kernel.asm	/^ffff800000105580:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000105583	kernel.asm	/^ffff800000105583:	48 b8 ed 46 10 00 00 	movabs $0xffff8000001046ed,%rax$/;"	l
ffff80000010558a	kernel.asm	/^ffff80000010558a:	80 ff ff $/;"	l
ffff80000010558d	kernel.asm	/^ffff80000010558d:	ff d0                	callq  *%rax$/;"	l
ffff80000010558f	kernel.asm	/^ffff80000010558f:	89 c6                	mov    %eax,%esi$/;"	l
ffff800000105591	kernel.asm	/^ffff800000105591:	48 bf a7 c4 10 00 00 	movabs $0xffff80000010c4a7,%rdi$/;"	l
ffff800000105598	kernel.asm	/^ffff800000105598:	80 ff ff $/;"	l
ffff80000010559b	kernel.asm	/^ffff80000010559b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff8000001055a0	kernel.asm	/^ffff8000001055a0:	48 ba ac 07 10 00 00 	movabs $0xffff8000001007ac,%rdx$/;"	l
ffff8000001055a7	kernel.asm	/^ffff8000001055a7:	80 ff ff $/;"	l
ffff8000001055aa	kernel.asm	/^ffff8000001055aa:	ff d2                	callq  *%rdx$/;"	l
ffff8000001055ac	kernel.asm	/^ffff8000001055ac:	48 b8 34 9b 10 00 00 	movabs $0xffff800000109b34,%rax$/;"	l
ffff8000001055b3	kernel.asm	/^ffff8000001055b3:	80 ff ff $/;"	l
ffff8000001055b6	kernel.asm	/^ffff8000001055b6:	ff d0                	callq  *%rax$/;"	l
ffff8000001055b8	kernel.asm	/^ffff8000001055b8:	48 b8 22 ae 10 00 00 	movabs $0xffff80000010ae22,%rax$/;"	l
ffff8000001055bf	kernel.asm	/^ffff8000001055bf:	80 ff ff $/;"	l
ffff8000001055c2	kernel.asm	/^ffff8000001055c2:	ff d0                	callq  *%rax$/;"	l
ffff8000001055c4	kernel.asm	/^ffff8000001055c4:	48 c7 c0 f0 ff ff ff 	mov    $0xfffffffffffffff0,%rax$/;"	l
ffff8000001055cb	kernel.asm	/^ffff8000001055cb:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff8000001055cf	kernel.asm	/^ffff8000001055cf:	48 05 e0 00 00 00    	add    $0xe0,%rax$/;"	l
ffff8000001055d5	kernel.asm	/^ffff8000001055d5:	be 01 00 00 00       	mov    $0x1,%esi$/;"	l
ffff8000001055da	kernel.asm	/^ffff8000001055da:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001055dd	kernel.asm	/^ffff8000001055dd:	48 b8 f7 53 10 00 00 	movabs $0xffff8000001053f7,%rax$/;"	l
ffff8000001055e4	kernel.asm	/^ffff8000001055e4:	80 ff ff $/;"	l
ffff8000001055e7	kernel.asm	/^ffff8000001055e7:	ff d0                	callq  *%rax$/;"	l
ffff8000001055e9	kernel.asm	/^ffff8000001055e9:	48 b8 ee 6a 10 00 00 	movabs $0xffff800000106aee,%rax$/;"	l
ffff8000001055f0	kernel.asm	/^ffff8000001055f0:	80 ff ff $/;"	l
ffff8000001055f3	kernel.asm	/^ffff8000001055f3:	ff d0                	callq  *%rax$/;"	l
ffff8000001055f5	kernel.asm	/^ffff8000001055f5 <startothers>:$/;"	l
ffff8000001055f5	kernel.asm	/^ffff8000001055f5:	55                   	push   %rbp$/;"	l
ffff8000001055f6	kernel.asm	/^ffff8000001055f6:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff8000001055f9	kernel.asm	/^ffff8000001055f9:	53                   	push   %rbx$/;"	l
ffff8000001055fa	kernel.asm	/^ffff8000001055fa:	48 83 ec 28          	sub    $0x28,%rsp$/;"	l
ffff8000001055fe	kernel.asm	/^ffff8000001055fe:	48 b8 00 70 00 00 00 	movabs $0xffff800000007000,%rax$/;"	l
ffff800000105605	kernel.asm	/^ffff800000105605:	80 ff ff $/;"	l
ffff800000105608	kernel.asm	/^ffff800000105608:	48 89 45 e0          	mov    %rax,-0x20(%rbp)$/;"	l
ffff80000010560c	kernel.asm	/^ffff80000010560c:	48 b8 72 00 00 00 00 	movabs $0x72,%rax$/;"	l
ffff800000105613	kernel.asm	/^ffff800000105613:	00 00 00 $/;"	l
ffff800000105616	kernel.asm	/^ffff800000105616:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000105618	kernel.asm	/^ffff800000105618:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff80000010561c	kernel.asm	/^ffff80000010561c:	48 be 14 e3 10 00 00 	movabs $0xffff80000010e314,%rsi$/;"	l
ffff800000105623	kernel.asm	/^ffff800000105623:	80 ff ff $/;"	l
ffff800000105626	kernel.asm	/^ffff800000105626:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000105629	kernel.asm	/^ffff800000105629:	48 b8 9a 7d 10 00 00 	movabs $0xffff800000107d9a,%rax$/;"	l
ffff800000105630	kernel.asm	/^ffff800000105630:	80 ff ff $/;"	l
ffff800000105633	kernel.asm	/^ffff800000105633:	ff d0                	callq  *%rax$/;"	l
ffff800000105635	kernel.asm	/^ffff800000105635:	48 b8 80 84 11 00 00 	movabs $0xffff800000118480,%rax$/;"	l
ffff80000010563c	kernel.asm	/^ffff80000010563c:	80 ff ff $/;"	l
ffff80000010563f	kernel.asm	/^ffff80000010563f:	48 89 45 e8          	mov    %rax,-0x18(%rbp)$/;"	l
ffff800000105643	kernel.asm	/^ffff800000105643:	e9 c2 00 00 00       	jmpq   ffff80000010570a <startothers+0x115>$/;"	l
ffff800000105648	kernel.asm	/^ffff800000105648:	48 b8 ed 46 10 00 00 	movabs $0xffff8000001046ed,%rax$/;"	l
ffff80000010564f	kernel.asm	/^ffff80000010564f:	80 ff ff $/;"	l
ffff800000105652	kernel.asm	/^ffff800000105652:	ff d0                	callq  *%rax$/;"	l
ffff800000105654	kernel.asm	/^ffff800000105654:	48 98                	cltq   $/;"	l
ffff800000105656	kernel.asm	/^ffff800000105656:	48 c1 e0 03          	shl    $0x3,%rax$/;"	l
ffff80000010565a	kernel.asm	/^ffff80000010565a:	48 89 c2             	mov    %rax,%rdx$/;"	l
ffff80000010565d	kernel.asm	/^ffff80000010565d:	48 c1 e2 05          	shl    $0x5,%rdx$/;"	l
ffff800000105661	kernel.asm	/^ffff800000105661:	48 29 c2             	sub    %rax,%rdx$/;"	l
ffff800000105664	kernel.asm	/^ffff800000105664:	48 b8 80 84 11 00 00 	movabs $0xffff800000118480,%rax$/;"	l
ffff80000010566b	kernel.asm	/^ffff80000010566b:	80 ff ff $/;"	l
ffff80000010566e	kernel.asm	/^ffff80000010566e:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff800000105671	kernel.asm	/^ffff800000105671:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax$/;"	l
ffff800000105675	kernel.asm	/^ffff800000105675:	0f 84 86 00 00 00    	je     ffff800000105701 <startothers+0x10c>$/;"	l
ffff80000010567b	kernel.asm	/^ffff80000010567b:	48 b8 95 41 10 00 00 	movabs $0xffff800000104195,%rax$/;"	l
ffff800000105682	kernel.asm	/^ffff800000105682:	80 ff ff $/;"	l
ffff800000105685	kernel.asm	/^ffff800000105685:	ff d0                	callq  *%rax$/;"	l
ffff800000105687	kernel.asm	/^ffff800000105687:	48 89 45 d8          	mov    %rax,-0x28(%rbp)$/;"	l
ffff80000010568b	kernel.asm	/^ffff80000010568b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff80000010568f	kernel.asm	/^ffff80000010568f:	48 83 e8 04          	sub    $0x4,%rax$/;"	l
ffff800000105693	kernel.asm	/^ffff800000105693:	c7 00 00 80 00 00    	movl   $0x8000,(%rax)$/;"	l
ffff800000105699	kernel.asm	/^ffff800000105699:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff80000010569d	kernel.asm	/^ffff80000010569d:	48 8d 58 f8          	lea    -0x8(%rax),%rbx$/;"	l
ffff8000001056a1	kernel.asm	/^ffff8000001056a1:	48 bf 49 00 10 00 00 	movabs $0xffff800000100049,%rdi$/;"	l
ffff8000001056a8	kernel.asm	/^ffff8000001056a8:	80 ff ff $/;"	l
ffff8000001056ab	kernel.asm	/^ffff8000001056ab:	48 b8 d8 53 10 00 00 	movabs $0xffff8000001053d8,%rax$/;"	l
ffff8000001056b2	kernel.asm	/^ffff8000001056b2:	80 ff ff $/;"	l
ffff8000001056b5	kernel.asm	/^ffff8000001056b5:	ff d0                	callq  *%rax$/;"	l
ffff8000001056b7	kernel.asm	/^ffff8000001056b7:	89 03                	mov    %eax,(%rbx)$/;"	l
ffff8000001056b9	kernel.asm	/^ffff8000001056b9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff8000001056bd	kernel.asm	/^ffff8000001056bd:	48 83 e8 10          	sub    $0x10,%rax$/;"	l
ffff8000001056c1	kernel.asm	/^ffff8000001056c1:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx$/;"	l
ffff8000001056c5	kernel.asm	/^ffff8000001056c5:	48 81 c2 00 10 00 00 	add    $0x1000,%rdx$/;"	l
ffff8000001056cc	kernel.asm	/^ffff8000001056cc:	48 89 10             	mov    %rdx,(%rax)$/;"	l
ffff8000001056cf	kernel.asm	/^ffff8000001056cf:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff8000001056d3	kernel.asm	/^ffff8000001056d3:	89 c2                	mov    %eax,%edx$/;"	l
ffff8000001056d5	kernel.asm	/^ffff8000001056d5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff8000001056d9	kernel.asm	/^ffff8000001056d9:	0f b6 40 01          	movzbl 0x1(%rax),%eax$/;"	l
ffff8000001056dd	kernel.asm	/^ffff8000001056dd:	0f b6 c0             	movzbl %al,%eax$/;"	l
ffff8000001056e0	kernel.asm	/^ffff8000001056e0:	89 d6                	mov    %edx,%esi$/;"	l
ffff8000001056e2	kernel.asm	/^ffff8000001056e2:	89 c7                	mov    %eax,%edi$/;"	l
ffff8000001056e4	kernel.asm	/^ffff8000001056e4:	48 b8 32 48 10 00 00 	movabs $0xffff800000104832,%rax$/;"	l
ffff8000001056eb	kernel.asm	/^ffff8000001056eb:	80 ff ff $/;"	l
ffff8000001056ee	kernel.asm	/^ffff8000001056ee:	ff d0                	callq  *%rax$/;"	l
ffff8000001056f0	kernel.asm	/^ffff8000001056f0:	90                   	nop$/;"	l
ffff8000001056f1	kernel.asm	/^ffff8000001056f1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff8000001056f5	kernel.asm	/^ffff8000001056f5:	8b 80 e0 00 00 00    	mov    0xe0(%rax),%eax$/;"	l
ffff8000001056fb	kernel.asm	/^ffff8000001056fb:	85 c0                	test   %eax,%eax$/;"	l
ffff8000001056fd	kernel.asm	/^ffff8000001056fd:	74 f2                	je     ffff8000001056f1 <startothers+0xfc>$/;"	l
ffff8000001056ff	kernel.asm	/^ffff8000001056ff:	eb 01                	jmp    ffff800000105702 <startothers+0x10d>$/;"	l
ffff800000105701	kernel.asm	/^ffff800000105701:	90                   	nop$/;"	l
ffff800000105702	kernel.asm	/^ffff800000105702:	48 81 45 e8 f8 00 00 	addq   $0xf8,-0x18(%rbp)$/;"	l
ffff800000105709	kernel.asm	/^ffff800000105709:	00 $/;"	l
ffff80000010570a	kernel.asm	/^ffff80000010570a:	48 b8 40 8c 11 00 00 	movabs $0xffff800000118c40,%rax$/;"	l
ffff800000105711	kernel.asm	/^ffff800000105711:	80 ff ff $/;"	l
ffff800000105714	kernel.asm	/^ffff800000105714:	8b 00                	mov    (%rax),%eax$/;"	l
ffff800000105716	kernel.asm	/^ffff800000105716:	48 98                	cltq   $/;"	l
ffff800000105718	kernel.asm	/^ffff800000105718:	48 c1 e0 03          	shl    $0x3,%rax$/;"	l
ffff80000010571c	kernel.asm	/^ffff80000010571c:	48 89 c2             	mov    %rax,%rdx$/;"	l
ffff80000010571f	kernel.asm	/^ffff80000010571f:	48 c1 e2 05          	shl    $0x5,%rdx$/;"	l
ffff800000105723	kernel.asm	/^ffff800000105723:	48 29 c2             	sub    %rax,%rdx$/;"	l
ffff800000105726	kernel.asm	/^ffff800000105726:	48 b8 80 84 11 00 00 	movabs $0xffff800000118480,%rax$/;"	l
ffff80000010572d	kernel.asm	/^ffff80000010572d:	80 ff ff $/;"	l
ffff800000105730	kernel.asm	/^ffff800000105730:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff800000105733	kernel.asm	/^ffff800000105733:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax$/;"	l
ffff800000105737	kernel.asm	/^ffff800000105737:	0f 87 0b ff ff ff    	ja     ffff800000105648 <startothers+0x53>$/;"	l
ffff80000010573d	kernel.asm	/^ffff80000010573d:	90                   	nop$/;"	l
ffff80000010573e	kernel.asm	/^ffff80000010573e:	48 83 c4 28          	add    $0x28,%rsp$/;"	l
ffff800000105742	kernel.asm	/^ffff800000105742:	5b                   	pop    %rbx$/;"	l
ffff800000105743	kernel.asm	/^ffff800000105743:	5d                   	pop    %rbp$/;"	l
ffff800000105744	kernel.asm	/^ffff800000105744:	c3                   	retq   $/;"	l
ffff800000105745	kernel.asm	/^ffff800000105745 <inb>:$/;"	l
ffff800000105745	kernel.asm	/^ffff800000105745:	55                   	push   %rbp$/;"	l
ffff800000105746	kernel.asm	/^ffff800000105746:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000105749	kernel.asm	/^ffff800000105749:	48 83 ec 18          	sub    $0x18,%rsp$/;"	l
ffff80000010574d	kernel.asm	/^ffff80000010574d:	89 f8                	mov    %edi,%eax$/;"	l
ffff80000010574f	kernel.asm	/^ffff80000010574f:	66 89 45 ec          	mov    %ax,-0x14(%rbp)$/;"	l
ffff800000105753	kernel.asm	/^ffff800000105753:	0f b7 45 ec          	movzwl -0x14(%rbp),%eax$/;"	l
ffff800000105757	kernel.asm	/^ffff800000105757:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000105759	kernel.asm	/^ffff800000105759:	ec                   	in     (%dx),%al$/;"	l
ffff80000010575a	kernel.asm	/^ffff80000010575a:	88 45 ff             	mov    %al,-0x1(%rbp)$/;"	l
ffff80000010575d	kernel.asm	/^ffff80000010575d:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax$/;"	l
ffff800000105761	kernel.asm	/^ffff800000105761:	c9                   	leaveq $/;"	l
ffff800000105762	kernel.asm	/^ffff800000105762:	c3                   	retq   $/;"	l
ffff800000105763	kernel.asm	/^ffff800000105763 <outb>:$/;"	l
ffff800000105763	kernel.asm	/^ffff800000105763:	55                   	push   %rbp$/;"	l
ffff800000105764	kernel.asm	/^ffff800000105764:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000105767	kernel.asm	/^ffff800000105767:	48 83 ec 08          	sub    $0x8,%rsp$/;"	l
ffff80000010576b	kernel.asm	/^ffff80000010576b:	89 fa                	mov    %edi,%edx$/;"	l
ffff80000010576d	kernel.asm	/^ffff80000010576d:	89 f0                	mov    %esi,%eax$/;"	l
ffff80000010576f	kernel.asm	/^ffff80000010576f:	66 89 55 fc          	mov    %dx,-0x4(%rbp)$/;"	l
ffff800000105773	kernel.asm	/^ffff800000105773:	88 45 f8             	mov    %al,-0x8(%rbp)$/;"	l
ffff800000105776	kernel.asm	/^ffff800000105776:	0f b6 45 f8          	movzbl -0x8(%rbp),%eax$/;"	l
ffff80000010577a	kernel.asm	/^ffff80000010577a:	0f b7 55 fc          	movzwl -0x4(%rbp),%edx$/;"	l
ffff80000010577e	kernel.asm	/^ffff80000010577e:	ee                   	out    %al,(%dx)$/;"	l
ffff80000010577f	kernel.asm	/^ffff80000010577f:	90                   	nop$/;"	l
ffff800000105780	kernel.asm	/^ffff800000105780:	c9                   	leaveq $/;"	l
ffff800000105781	kernel.asm	/^ffff800000105781:	c3                   	retq   $/;"	l
ffff800000105782	kernel.asm	/^ffff800000105782 <sum>:$/;"	l
ffff800000105782	kernel.asm	/^ffff800000105782:	55                   	push   %rbp$/;"	l
ffff800000105783	kernel.asm	/^ffff800000105783:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000105786	kernel.asm	/^ffff800000105786:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ffff80000010578a	kernel.asm	/^ffff80000010578a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
ffff80000010578e	kernel.asm	/^ffff80000010578e:	89 75 e4             	mov    %esi,-0x1c(%rbp)$/;"	l
ffff800000105791	kernel.asm	/^ffff800000105791:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)$/;"	l
ffff800000105798	kernel.asm	/^ffff800000105798:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)$/;"	l
ffff80000010579f	kernel.asm	/^ffff80000010579f:	eb 1a                	jmp    ffff8000001057bb <sum+0x39>$/;"	l
ffff8000001057a1	kernel.asm	/^ffff8000001057a1:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff8000001057a4	kernel.asm	/^ffff8000001057a4:	48 63 d0             	movslq %eax,%rdx$/;"	l
ffff8000001057a7	kernel.asm	/^ffff8000001057a7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff8000001057ab	kernel.asm	/^ffff8000001057ab:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff8000001057ae	kernel.asm	/^ffff8000001057ae:	0f b6 00             	movzbl (%rax),%eax$/;"	l
ffff8000001057b1	kernel.asm	/^ffff8000001057b1:	0f b6 c0             	movzbl %al,%eax$/;"	l
ffff8000001057b4	kernel.asm	/^ffff8000001057b4:	01 45 f8             	add    %eax,-0x8(%rbp)$/;"	l
ffff8000001057b7	kernel.asm	/^ffff8000001057b7:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)$/;"	l
ffff8000001057bb	kernel.asm	/^ffff8000001057bb:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff8000001057be	kernel.asm	/^ffff8000001057be:	3b 45 e4             	cmp    -0x1c(%rbp),%eax$/;"	l
ffff8000001057c1	kernel.asm	/^ffff8000001057c1:	7c de                	jl     ffff8000001057a1 <sum+0x1f>$/;"	l
ffff8000001057c3	kernel.asm	/^ffff8000001057c3:	8b 45 f8             	mov    -0x8(%rbp),%eax$/;"	l
ffff8000001057c6	kernel.asm	/^ffff8000001057c6:	c9                   	leaveq $/;"	l
ffff8000001057c7	kernel.asm	/^ffff8000001057c7:	c3                   	retq   $/;"	l
ffff8000001057c8	kernel.asm	/^ffff8000001057c8 <mpsearch1>:$/;"	l
ffff8000001057c8	kernel.asm	/^ffff8000001057c8:	55                   	push   %rbp$/;"	l
ffff8000001057c9	kernel.asm	/^ffff8000001057c9:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff8000001057cc	kernel.asm	/^ffff8000001057cc:	48 83 ec 30          	sub    $0x30,%rsp$/;"	l
ffff8000001057d0	kernel.asm	/^ffff8000001057d0:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)$/;"	l
ffff8000001057d4	kernel.asm	/^ffff8000001057d4:	89 75 d4             	mov    %esi,-0x2c(%rbp)$/;"	l
ffff8000001057d7	kernel.asm	/^ffff8000001057d7:	48 ba 00 00 00 00 00 	movabs $0xffff800000000000,%rdx$/;"	l
ffff8000001057de	kernel.asm	/^ffff8000001057de:	80 ff ff $/;"	l
ffff8000001057e1	kernel.asm	/^ffff8000001057e1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff8000001057e5	kernel.asm	/^ffff8000001057e5:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff8000001057e8	kernel.asm	/^ffff8000001057e8:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ffff8000001057ec	kernel.asm	/^ffff8000001057ec:	8b 45 d4             	mov    -0x2c(%rbp),%eax$/;"	l
ffff8000001057ef	kernel.asm	/^ffff8000001057ef:	48 63 d0             	movslq %eax,%rdx$/;"	l
ffff8000001057f2	kernel.asm	/^ffff8000001057f2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff8000001057f6	kernel.asm	/^ffff8000001057f6:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff8000001057f9	kernel.asm	/^ffff8000001057f9:	48 89 45 e8          	mov    %rax,-0x18(%rbp)$/;"	l
ffff8000001057fd	kernel.asm	/^ffff8000001057fd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000105801	kernel.asm	/^ffff800000105801:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff800000105805	kernel.asm	/^ffff800000105805:	eb 4d                	jmp    ffff800000105854 <mpsearch1+0x8c>$/;"	l
ffff800000105807	kernel.asm	/^ffff800000105807:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010580b	kernel.asm	/^ffff80000010580b:	ba 04 00 00 00       	mov    $0x4,%edx$/;"	l
ffff800000105810	kernel.asm	/^ffff800000105810:	48 be b8 c4 10 00 00 	movabs $0xffff80000010c4b8,%rsi$/;"	l
ffff800000105817	kernel.asm	/^ffff800000105817:	80 ff ff $/;"	l
ffff80000010581a	kernel.asm	/^ffff80000010581a:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010581d	kernel.asm	/^ffff80000010581d:	48 b8 2b 7d 10 00 00 	movabs $0xffff800000107d2b,%rax$/;"	l
ffff800000105824	kernel.asm	/^ffff800000105824:	80 ff ff $/;"	l
ffff800000105827	kernel.asm	/^ffff800000105827:	ff d0                	callq  *%rax$/;"	l
ffff800000105829	kernel.asm	/^ffff800000105829:	85 c0                	test   %eax,%eax$/;"	l
ffff80000010582b	kernel.asm	/^ffff80000010582b:	75 22                	jne    ffff80000010584f <mpsearch1+0x87>$/;"	l
ffff80000010582d	kernel.asm	/^ffff80000010582d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000105831	kernel.asm	/^ffff800000105831:	be 10 00 00 00       	mov    $0x10,%esi$/;"	l
ffff800000105836	kernel.asm	/^ffff800000105836:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000105839	kernel.asm	/^ffff800000105839:	48 b8 82 57 10 00 00 	movabs $0xffff800000105782,%rax$/;"	l
ffff800000105840	kernel.asm	/^ffff800000105840:	80 ff ff $/;"	l
ffff800000105843	kernel.asm	/^ffff800000105843:	ff d0                	callq  *%rax$/;"	l
ffff800000105845	kernel.asm	/^ffff800000105845:	84 c0                	test   %al,%al$/;"	l
ffff800000105847	kernel.asm	/^ffff800000105847:	75 06                	jne    ffff80000010584f <mpsearch1+0x87>$/;"	l
ffff800000105849	kernel.asm	/^ffff800000105849:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010584d	kernel.asm	/^ffff80000010584d:	eb 14                	jmp    ffff800000105863 <mpsearch1+0x9b>$/;"	l
ffff80000010584f	kernel.asm	/^ffff80000010584f:	48 83 45 f8 10       	addq   $0x10,-0x8(%rbp)$/;"	l
ffff800000105854	kernel.asm	/^ffff800000105854:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000105858	kernel.asm	/^ffff800000105858:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax$/;"	l
ffff80000010585c	kernel.asm	/^ffff80000010585c:	72 a9                	jb     ffff800000105807 <mpsearch1+0x3f>$/;"	l
ffff80000010585e	kernel.asm	/^ffff80000010585e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000105863	kernel.asm	/^ffff800000105863:	c9                   	leaveq $/;"	l
ffff800000105864	kernel.asm	/^ffff800000105864:	c3                   	retq   $/;"	l
ffff800000105865	kernel.asm	/^ffff800000105865 <mpsearch>:$/;"	l
ffff800000105865	kernel.asm	/^ffff800000105865:	55                   	push   %rbp$/;"	l
ffff800000105866	kernel.asm	/^ffff800000105866:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000105869	kernel.asm	/^ffff800000105869:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ffff80000010586d	kernel.asm	/^ffff80000010586d:	48 b8 00 04 00 00 00 	movabs $0xffff800000000400,%rax$/;"	l
ffff800000105874	kernel.asm	/^ffff800000105874:	80 ff ff $/;"	l
ffff800000105877	kernel.asm	/^ffff800000105877:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff80000010587b	kernel.asm	/^ffff80000010587b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010587f	kernel.asm	/^ffff80000010587f:	48 83 c0 0f          	add    $0xf,%rax$/;"	l
ffff800000105883	kernel.asm	/^ffff800000105883:	0f b6 00             	movzbl (%rax),%eax$/;"	l
ffff800000105886	kernel.asm	/^ffff800000105886:	0f b6 c0             	movzbl %al,%eax$/;"	l
ffff800000105889	kernel.asm	/^ffff800000105889:	c1 e0 08             	shl    $0x8,%eax$/;"	l
ffff80000010588c	kernel.asm	/^ffff80000010588c:	89 c2                	mov    %eax,%edx$/;"	l
ffff80000010588e	kernel.asm	/^ffff80000010588e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000105892	kernel.asm	/^ffff800000105892:	48 83 c0 0e          	add    $0xe,%rax$/;"	l
ffff800000105896	kernel.asm	/^ffff800000105896:	0f b6 00             	movzbl (%rax),%eax$/;"	l
ffff800000105899	kernel.asm	/^ffff800000105899:	0f b6 c0             	movzbl %al,%eax$/;"	l
ffff80000010589c	kernel.asm	/^ffff80000010589c:	09 d0                	or     %edx,%eax$/;"	l
ffff80000010589e	kernel.asm	/^ffff80000010589e:	c1 e0 04             	shl    $0x4,%eax$/;"	l
ffff8000001058a1	kernel.asm	/^ffff8000001058a1:	89 45 f4             	mov    %eax,-0xc(%rbp)$/;"	l
ffff8000001058a4	kernel.asm	/^ffff8000001058a4:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)$/;"	l
ffff8000001058a8	kernel.asm	/^ffff8000001058a8:	74 28                	je     ffff8000001058d2 <mpsearch+0x6d>$/;"	l
ffff8000001058aa	kernel.asm	/^ffff8000001058aa:	8b 45 f4             	mov    -0xc(%rbp),%eax$/;"	l
ffff8000001058ad	kernel.asm	/^ffff8000001058ad:	be 00 04 00 00       	mov    $0x400,%esi$/;"	l
ffff8000001058b2	kernel.asm	/^ffff8000001058b2:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001058b5	kernel.asm	/^ffff8000001058b5:	48 b8 c8 57 10 00 00 	movabs $0xffff8000001057c8,%rax$/;"	l
ffff8000001058bc	kernel.asm	/^ffff8000001058bc:	80 ff ff $/;"	l
ffff8000001058bf	kernel.asm	/^ffff8000001058bf:	ff d0                	callq  *%rax$/;"	l
ffff8000001058c1	kernel.asm	/^ffff8000001058c1:	48 89 45 e8          	mov    %rax,-0x18(%rbp)$/;"	l
ffff8000001058c5	kernel.asm	/^ffff8000001058c5:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)$/;"	l
ffff8000001058ca	kernel.asm	/^ffff8000001058ca:	74 5e                	je     ffff80000010592a <mpsearch+0xc5>$/;"	l
ffff8000001058cc	kernel.asm	/^ffff8000001058cc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff8000001058d0	kernel.asm	/^ffff8000001058d0:	eb 6e                	jmp    ffff800000105940 <mpsearch+0xdb>$/;"	l
ffff8000001058d2	kernel.asm	/^ffff8000001058d2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001058d6	kernel.asm	/^ffff8000001058d6:	48 83 c0 14          	add    $0x14,%rax$/;"	l
ffff8000001058da	kernel.asm	/^ffff8000001058da:	0f b6 00             	movzbl (%rax),%eax$/;"	l
ffff8000001058dd	kernel.asm	/^ffff8000001058dd:	0f b6 c0             	movzbl %al,%eax$/;"	l
ffff8000001058e0	kernel.asm	/^ffff8000001058e0:	c1 e0 08             	shl    $0x8,%eax$/;"	l
ffff8000001058e3	kernel.asm	/^ffff8000001058e3:	89 c2                	mov    %eax,%edx$/;"	l
ffff8000001058e5	kernel.asm	/^ffff8000001058e5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001058e9	kernel.asm	/^ffff8000001058e9:	48 83 c0 13          	add    $0x13,%rax$/;"	l
ffff8000001058ed	kernel.asm	/^ffff8000001058ed:	0f b6 00             	movzbl (%rax),%eax$/;"	l
ffff8000001058f0	kernel.asm	/^ffff8000001058f0:	0f b6 c0             	movzbl %al,%eax$/;"	l
ffff8000001058f3	kernel.asm	/^ffff8000001058f3:	09 d0                	or     %edx,%eax$/;"	l
ffff8000001058f5	kernel.asm	/^ffff8000001058f5:	c1 e0 0a             	shl    $0xa,%eax$/;"	l
ffff8000001058f8	kernel.asm	/^ffff8000001058f8:	89 45 f4             	mov    %eax,-0xc(%rbp)$/;"	l
ffff8000001058fb	kernel.asm	/^ffff8000001058fb:	8b 45 f4             	mov    -0xc(%rbp),%eax$/;"	l
ffff8000001058fe	kernel.asm	/^ffff8000001058fe:	2d 00 04 00 00       	sub    $0x400,%eax$/;"	l
ffff800000105903	kernel.asm	/^ffff800000105903:	89 c0                	mov    %eax,%eax$/;"	l
ffff800000105905	kernel.asm	/^ffff800000105905:	be 00 04 00 00       	mov    $0x400,%esi$/;"	l
ffff80000010590a	kernel.asm	/^ffff80000010590a:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010590d	kernel.asm	/^ffff80000010590d:	48 b8 c8 57 10 00 00 	movabs $0xffff8000001057c8,%rax$/;"	l
ffff800000105914	kernel.asm	/^ffff800000105914:	80 ff ff $/;"	l
ffff800000105917	kernel.asm	/^ffff800000105917:	ff d0                	callq  *%rax$/;"	l
ffff800000105919	kernel.asm	/^ffff800000105919:	48 89 45 e8          	mov    %rax,-0x18(%rbp)$/;"	l
ffff80000010591d	kernel.asm	/^ffff80000010591d:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)$/;"	l
ffff800000105922	kernel.asm	/^ffff800000105922:	74 06                	je     ffff80000010592a <mpsearch+0xc5>$/;"	l
ffff800000105924	kernel.asm	/^ffff800000105924:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000105928	kernel.asm	/^ffff800000105928:	eb 16                	jmp    ffff800000105940 <mpsearch+0xdb>$/;"	l
ffff80000010592a	kernel.asm	/^ffff80000010592a:	be 00 00 01 00       	mov    $0x10000,%esi$/;"	l
ffff80000010592f	kernel.asm	/^ffff80000010592f:	bf 00 00 0f 00       	mov    $0xf0000,%edi$/;"	l
ffff800000105934	kernel.asm	/^ffff800000105934:	48 b8 c8 57 10 00 00 	movabs $0xffff8000001057c8,%rax$/;"	l
ffff80000010593b	kernel.asm	/^ffff80000010593b:	80 ff ff $/;"	l
ffff80000010593e	kernel.asm	/^ffff80000010593e:	ff d0                	callq  *%rax$/;"	l
ffff800000105940	kernel.asm	/^ffff800000105940:	c9                   	leaveq $/;"	l
ffff800000105941	kernel.asm	/^ffff800000105941:	c3                   	retq   $/;"	l
ffff800000105942	kernel.asm	/^ffff800000105942 <mpconfig>:$/;"	l
ffff800000105942	kernel.asm	/^ffff800000105942:	55                   	push   %rbp$/;"	l
ffff800000105943	kernel.asm	/^ffff800000105943:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000105946	kernel.asm	/^ffff800000105946:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ffff80000010594a	kernel.asm	/^ffff80000010594a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
ffff80000010594e	kernel.asm	/^ffff80000010594e:	48 b8 65 58 10 00 00 	movabs $0xffff800000105865,%rax$/;"	l
ffff800000105955	kernel.asm	/^ffff800000105955:	80 ff ff $/;"	l
ffff800000105958	kernel.asm	/^ffff800000105958:	ff d0                	callq  *%rax$/;"	l
ffff80000010595a	kernel.asm	/^ffff80000010595a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff80000010595e	kernel.asm	/^ffff80000010595e:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)$/;"	l
ffff800000105963	kernel.asm	/^ffff800000105963:	74 0b                	je     ffff800000105970 <mpconfig+0x2e>$/;"	l
ffff800000105965	kernel.asm	/^ffff800000105965:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000105969	kernel.asm	/^ffff800000105969:	8b 40 04             	mov    0x4(%rax),%eax$/;"	l
ffff80000010596c	kernel.asm	/^ffff80000010596c:	85 c0                	test   %eax,%eax$/;"	l
ffff80000010596e	kernel.asm	/^ffff80000010596e:	75 0a                	jne    ffff80000010597a <mpconfig+0x38>$/;"	l
ffff800000105970	kernel.asm	/^ffff800000105970:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000105975	kernel.asm	/^ffff800000105975:	e9 a0 00 00 00       	jmpq   ffff800000105a1a <mpconfig+0xd8>$/;"	l
ffff80000010597a	kernel.asm	/^ffff80000010597a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010597e	kernel.asm	/^ffff80000010597e:	8b 40 04             	mov    0x4(%rax),%eax$/;"	l
ffff800000105981	kernel.asm	/^ffff800000105981:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000105983	kernel.asm	/^ffff800000105983:	48 b8 00 00 00 00 00 	movabs $0xffff800000000000,%rax$/;"	l
ffff80000010598a	kernel.asm	/^ffff80000010598a:	80 ff ff $/;"	l
ffff80000010598d	kernel.asm	/^ffff80000010598d:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff800000105990	kernel.asm	/^ffff800000105990:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ffff800000105994	kernel.asm	/^ffff800000105994:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000105998	kernel.asm	/^ffff800000105998:	ba 04 00 00 00       	mov    $0x4,%edx$/;"	l
ffff80000010599d	kernel.asm	/^ffff80000010599d:	48 be bd c4 10 00 00 	movabs $0xffff80000010c4bd,%rsi$/;"	l
ffff8000001059a4	kernel.asm	/^ffff8000001059a4:	80 ff ff $/;"	l
ffff8000001059a7	kernel.asm	/^ffff8000001059a7:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001059aa	kernel.asm	/^ffff8000001059aa:	48 b8 2b 7d 10 00 00 	movabs $0xffff800000107d2b,%rax$/;"	l
ffff8000001059b1	kernel.asm	/^ffff8000001059b1:	80 ff ff $/;"	l
ffff8000001059b4	kernel.asm	/^ffff8000001059b4:	ff d0                	callq  *%rax$/;"	l
ffff8000001059b6	kernel.asm	/^ffff8000001059b6:	85 c0                	test   %eax,%eax$/;"	l
ffff8000001059b8	kernel.asm	/^ffff8000001059b8:	74 07                	je     ffff8000001059c1 <mpconfig+0x7f>$/;"	l
ffff8000001059ba	kernel.asm	/^ffff8000001059ba:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff8000001059bf	kernel.asm	/^ffff8000001059bf:	eb 59                	jmp    ffff800000105a1a <mpconfig+0xd8>$/;"	l
ffff8000001059c1	kernel.asm	/^ffff8000001059c1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff8000001059c5	kernel.asm	/^ffff8000001059c5:	0f b6 40 06          	movzbl 0x6(%rax),%eax$/;"	l
ffff8000001059c9	kernel.asm	/^ffff8000001059c9:	3c 01                	cmp    $0x1,%al$/;"	l
ffff8000001059cb	kernel.asm	/^ffff8000001059cb:	74 13                	je     ffff8000001059e0 <mpconfig+0x9e>$/;"	l
ffff8000001059cd	kernel.asm	/^ffff8000001059cd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff8000001059d1	kernel.asm	/^ffff8000001059d1:	0f b6 40 06          	movzbl 0x6(%rax),%eax$/;"	l
ffff8000001059d5	kernel.asm	/^ffff8000001059d5:	3c 04                	cmp    $0x4,%al$/;"	l
ffff8000001059d7	kernel.asm	/^ffff8000001059d7:	74 07                	je     ffff8000001059e0 <mpconfig+0x9e>$/;"	l
ffff8000001059d9	kernel.asm	/^ffff8000001059d9:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff8000001059de	kernel.asm	/^ffff8000001059de:	eb 3a                	jmp    ffff800000105a1a <mpconfig+0xd8>$/;"	l
ffff8000001059e0	kernel.asm	/^ffff8000001059e0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff8000001059e4	kernel.asm	/^ffff8000001059e4:	0f b7 40 04          	movzwl 0x4(%rax),%eax$/;"	l
ffff8000001059e8	kernel.asm	/^ffff8000001059e8:	0f b7 d0             	movzwl %ax,%edx$/;"	l
ffff8000001059eb	kernel.asm	/^ffff8000001059eb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff8000001059ef	kernel.asm	/^ffff8000001059ef:	89 d6                	mov    %edx,%esi$/;"	l
ffff8000001059f1	kernel.asm	/^ffff8000001059f1:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001059f4	kernel.asm	/^ffff8000001059f4:	48 b8 82 57 10 00 00 	movabs $0xffff800000105782,%rax$/;"	l
ffff8000001059fb	kernel.asm	/^ffff8000001059fb:	80 ff ff $/;"	l
ffff8000001059fe	kernel.asm	/^ffff8000001059fe:	ff d0                	callq  *%rax$/;"	l
ffff800000105a00	kernel.asm	/^ffff800000105a00:	84 c0                	test   %al,%al$/;"	l
ffff800000105a02	kernel.asm	/^ffff800000105a02:	74 07                	je     ffff800000105a0b <mpconfig+0xc9>$/;"	l
ffff800000105a04	kernel.asm	/^ffff800000105a04:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000105a09	kernel.asm	/^ffff800000105a09:	eb 0f                	jmp    ffff800000105a1a <mpconfig+0xd8>$/;"	l
ffff800000105a0b	kernel.asm	/^ffff800000105a0b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000105a0f	kernel.asm	/^ffff800000105a0f:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx$/;"	l
ffff800000105a13	kernel.asm	/^ffff800000105a13:	48 89 10             	mov    %rdx,(%rax)$/;"	l
ffff800000105a16	kernel.asm	/^ffff800000105a16:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000105a1a	kernel.asm	/^ffff800000105a1a:	c9                   	leaveq $/;"	l
ffff800000105a1b	kernel.asm	/^ffff800000105a1b:	c3                   	retq   $/;"	l
ffff800000105a1c	kernel.asm	/^ffff800000105a1c <mpinit>:$/;"	l
ffff800000105a1c	kernel.asm	/^ffff800000105a1c:	55                   	push   %rbp$/;"	l
ffff800000105a1d	kernel.asm	/^ffff800000105a1d:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000105a20	kernel.asm	/^ffff800000105a20:	48 83 ec 30          	sub    $0x30,%rsp$/;"	l
ffff800000105a24	kernel.asm	/^ffff800000105a24:	48 8d 45 d0          	lea    -0x30(%rbp),%rax$/;"	l
ffff800000105a28	kernel.asm	/^ffff800000105a28:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000105a2b	kernel.asm	/^ffff800000105a2b:	48 b8 42 59 10 00 00 	movabs $0xffff800000105942,%rax$/;"	l
ffff800000105a32	kernel.asm	/^ffff800000105a32:	80 ff ff $/;"	l
ffff800000105a35	kernel.asm	/^ffff800000105a35:	ff d0                	callq  *%rax$/;"	l
ffff800000105a37	kernel.asm	/^ffff800000105a37:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ffff800000105a3b	kernel.asm	/^ffff800000105a3b:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)$/;"	l
ffff800000105a40	kernel.asm	/^ffff800000105a40:	75 20                	jne    ffff800000105a62 <mpinit+0x46>$/;"	l
ffff800000105a42	kernel.asm	/^ffff800000105a42:	48 bf c2 c4 10 00 00 	movabs $0xffff80000010c4c2,%rdi$/;"	l
ffff800000105a49	kernel.asm	/^ffff800000105a49:	80 ff ff $/;"	l
ffff800000105a4c	kernel.asm	/^ffff800000105a4c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000105a51	kernel.asm	/^ffff800000105a51:	48 ba ac 07 10 00 00 	movabs $0xffff8000001007ac,%rdx$/;"	l
ffff800000105a58	kernel.asm	/^ffff800000105a58:	80 ff ff $/;"	l
ffff800000105a5b	kernel.asm	/^ffff800000105a5b:	ff d2                	callq  *%rdx$/;"	l
ffff800000105a5d	kernel.asm	/^ffff800000105a5d:	e9 bc 01 00 00       	jmpq   ffff800000105c1e <mpinit+0x202>$/;"	l
ffff800000105a62	kernel.asm	/^ffff800000105a62:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000105a66	kernel.asm	/^ffff800000105a66:	8b 40 24             	mov    0x24(%rax),%eax$/;"	l
ffff800000105a69	kernel.asm	/^ffff800000105a69:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000105a6b	kernel.asm	/^ffff800000105a6b:	48 b8 00 00 00 00 00 	movabs $0xffff800000000000,%rax$/;"	l
ffff800000105a72	kernel.asm	/^ffff800000105a72:	80 ff ff $/;"	l
ffff800000105a75	kernel.asm	/^ffff800000105a75:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff800000105a78	kernel.asm	/^ffff800000105a78:	48 89 c2             	mov    %rax,%rdx$/;"	l
ffff800000105a7b	kernel.asm	/^ffff800000105a7b:	48 b8 60 83 11 00 00 	movabs $0xffff800000118360,%rax$/;"	l
ffff800000105a82	kernel.asm	/^ffff800000105a82:	80 ff ff $/;"	l
ffff800000105a85	kernel.asm	/^ffff800000105a85:	48 89 10             	mov    %rdx,(%rax)$/;"	l
ffff800000105a88	kernel.asm	/^ffff800000105a88:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000105a8c	kernel.asm	/^ffff800000105a8c:	48 83 c0 2c          	add    $0x2c,%rax$/;"	l
ffff800000105a90	kernel.asm	/^ffff800000105a90:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff800000105a94	kernel.asm	/^ffff800000105a94:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000105a98	kernel.asm	/^ffff800000105a98:	0f b7 40 04          	movzwl 0x4(%rax),%eax$/;"	l
ffff800000105a9c	kernel.asm	/^ffff800000105a9c:	0f b7 d0             	movzwl %ax,%edx$/;"	l
ffff800000105a9f	kernel.asm	/^ffff800000105a9f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000105aa3	kernel.asm	/^ffff800000105aa3:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff800000105aa6	kernel.asm	/^ffff800000105aa6:	48 89 45 e8          	mov    %rax,-0x18(%rbp)$/;"	l
ffff800000105aaa	kernel.asm	/^ffff800000105aaa:	e9 ec 00 00 00       	jmpq   ffff800000105b9b <mpinit+0x17f>$/;"	l
ffff800000105aaf	kernel.asm	/^ffff800000105aaf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000105ab3	kernel.asm	/^ffff800000105ab3:	0f b6 00             	movzbl (%rax),%eax$/;"	l
ffff800000105ab6	kernel.asm	/^ffff800000105ab6:	0f b6 c0             	movzbl %al,%eax$/;"	l
ffff800000105ab9	kernel.asm	/^ffff800000105ab9:	83 f8 04             	cmp    $0x4,%eax$/;"	l
ffff800000105abc	kernel.asm	/^ffff800000105abc:	0f 87 c3 00 00 00    	ja     ffff800000105b85 <mpinit+0x169>$/;"	l
ffff800000105ac2	kernel.asm	/^ffff800000105ac2:	89 c0                	mov    %eax,%eax$/;"	l
ffff800000105ac4	kernel.asm	/^ffff800000105ac4:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx$/;"	l
ffff800000105acb	kernel.asm	/^ffff800000105acb:	00 $/;"	l
ffff800000105acc	kernel.asm	/^ffff800000105acc:	48 b8 18 c5 10 00 00 	movabs $0xffff80000010c518,%rax$/;"	l
ffff800000105ad3	kernel.asm	/^ffff800000105ad3:	80 ff ff $/;"	l
ffff800000105ad6	kernel.asm	/^ffff800000105ad6:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff800000105ad9	kernel.asm	/^ffff800000105ad9:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff800000105adc	kernel.asm	/^ffff800000105adc:	ff e0                	jmpq   *%rax$/;"	l
ffff800000105ade	kernel.asm	/^ffff800000105ade:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000105ae2	kernel.asm	/^ffff800000105ae2:	48 89 45 e0          	mov    %rax,-0x20(%rbp)$/;"	l
ffff800000105ae6	kernel.asm	/^ffff800000105ae6:	48 b8 40 8c 11 00 00 	movabs $0xffff800000118c40,%rax$/;"	l
ffff800000105aed	kernel.asm	/^ffff800000105aed:	80 ff ff $/;"	l
ffff800000105af0	kernel.asm	/^ffff800000105af0:	8b 00                	mov    (%rax),%eax$/;"	l
ffff800000105af2	kernel.asm	/^ffff800000105af2:	83 f8 07             	cmp    $0x7,%eax$/;"	l
ffff800000105af5	kernel.asm	/^ffff800000105af5:	7f 5d                	jg     ffff800000105b54 <mpinit+0x138>$/;"	l
ffff800000105af7	kernel.asm	/^ffff800000105af7:	48 b8 40 8c 11 00 00 	movabs $0xffff800000118c40,%rax$/;"	l
ffff800000105afe	kernel.asm	/^ffff800000105afe:	80 ff ff $/;"	l
ffff800000105b01	kernel.asm	/^ffff800000105b01:	8b 10                	mov    (%rax),%edx$/;"	l
ffff800000105b03	kernel.asm	/^ffff800000105b03:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff800000105b07	kernel.asm	/^ffff800000105b07:	0f b6 48 01          	movzbl 0x1(%rax),%ecx$/;"	l
ffff800000105b0b	kernel.asm	/^ffff800000105b0b:	48 be 80 84 11 00 00 	movabs $0xffff800000118480,%rsi$/;"	l
ffff800000105b12	kernel.asm	/^ffff800000105b12:	80 ff ff $/;"	l
ffff800000105b15	kernel.asm	/^ffff800000105b15:	48 63 c2             	movslq %edx,%rax$/;"	l
ffff800000105b18	kernel.asm	/^ffff800000105b18:	48 89 c2             	mov    %rax,%rdx$/;"	l
ffff800000105b1b	kernel.asm	/^ffff800000105b1b:	48 8d 04 d5 00 00 00 	lea    0x0(,%rdx,8),%rax$/;"	l
ffff800000105b22	kernel.asm	/^ffff800000105b22:	00 $/;"	l
ffff800000105b23	kernel.asm	/^ffff800000105b23:	48 89 c2             	mov    %rax,%rdx$/;"	l
ffff800000105b26	kernel.asm	/^ffff800000105b26:	48 89 d0             	mov    %rdx,%rax$/;"	l
ffff800000105b29	kernel.asm	/^ffff800000105b29:	48 c1 e0 05          	shl    $0x5,%rax$/;"	l
ffff800000105b2d	kernel.asm	/^ffff800000105b2d:	48 29 d0             	sub    %rdx,%rax$/;"	l
ffff800000105b30	kernel.asm	/^ffff800000105b30:	48 01 f0             	add    %rsi,%rax$/;"	l
ffff800000105b33	kernel.asm	/^ffff800000105b33:	48 83 c0 01          	add    $0x1,%rax$/;"	l
ffff800000105b37	kernel.asm	/^ffff800000105b37:	88 08                	mov    %cl,(%rax)$/;"	l
ffff800000105b39	kernel.asm	/^ffff800000105b39:	48 b8 40 8c 11 00 00 	movabs $0xffff800000118c40,%rax$/;"	l
ffff800000105b40	kernel.asm	/^ffff800000105b40:	80 ff ff $/;"	l
ffff800000105b43	kernel.asm	/^ffff800000105b43:	8b 00                	mov    (%rax),%eax$/;"	l
ffff800000105b45	kernel.asm	/^ffff800000105b45:	8d 50 01             	lea    0x1(%rax),%edx$/;"	l
ffff800000105b48	kernel.asm	/^ffff800000105b48:	48 b8 40 8c 11 00 00 	movabs $0xffff800000118c40,%rax$/;"	l
ffff800000105b4f	kernel.asm	/^ffff800000105b4f:	80 ff ff $/;"	l
ffff800000105b52	kernel.asm	/^ffff800000105b52:	89 10                	mov    %edx,(%rax)$/;"	l
ffff800000105b54	kernel.asm	/^ffff800000105b54:	48 83 45 f8 14       	addq   $0x14,-0x8(%rbp)$/;"	l
ffff800000105b59	kernel.asm	/^ffff800000105b59:	eb 40                	jmp    ffff800000105b9b <mpinit+0x17f>$/;"	l
ffff800000105b5b	kernel.asm	/^ffff800000105b5b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000105b5f	kernel.asm	/^ffff800000105b5f:	48 89 45 d8          	mov    %rax,-0x28(%rbp)$/;"	l
ffff800000105b63	kernel.asm	/^ffff800000105b63:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff800000105b67	kernel.asm	/^ffff800000105b67:	0f b6 50 01          	movzbl 0x1(%rax),%edx$/;"	l
ffff800000105b6b	kernel.asm	/^ffff800000105b6b:	48 b8 44 8c 11 00 00 	movabs $0xffff800000118c44,%rax$/;"	l
ffff800000105b72	kernel.asm	/^ffff800000105b72:	80 ff ff $/;"	l
ffff800000105b75	kernel.asm	/^ffff800000105b75:	88 10                	mov    %dl,(%rax)$/;"	l
ffff800000105b77	kernel.asm	/^ffff800000105b77:	48 83 45 f8 08       	addq   $0x8,-0x8(%rbp)$/;"	l
ffff800000105b7c	kernel.asm	/^ffff800000105b7c:	eb 1d                	jmp    ffff800000105b9b <mpinit+0x17f>$/;"	l
ffff800000105b7e	kernel.asm	/^ffff800000105b7e:	48 83 45 f8 08       	addq   $0x8,-0x8(%rbp)$/;"	l
ffff800000105b83	kernel.asm	/^ffff800000105b83:	eb 16                	jmp    ffff800000105b9b <mpinit+0x17f>$/;"	l
ffff800000105b85	kernel.asm	/^ffff800000105b85:	48 bf d8 c4 10 00 00 	movabs $0xffff80000010c4d8,%rdi$/;"	l
ffff800000105b8c	kernel.asm	/^ffff800000105b8c:	80 ff ff $/;"	l
ffff800000105b8f	kernel.asm	/^ffff800000105b8f:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff800000105b96	kernel.asm	/^ffff800000105b96:	80 ff ff $/;"	l
ffff800000105b99	kernel.asm	/^ffff800000105b99:	ff d0                	callq  *%rax$/;"	l
ffff800000105b9b	kernel.asm	/^ffff800000105b9b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000105b9f	kernel.asm	/^ffff800000105b9f:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax$/;"	l
ffff800000105ba3	kernel.asm	/^ffff800000105ba3:	0f 82 06 ff ff ff    	jb     ffff800000105aaf <mpinit+0x93>$/;"	l
ffff800000105ba9	kernel.asm	/^ffff800000105ba9:	48 b8 40 8c 11 00 00 	movabs $0xffff800000118c40,%rax$/;"	l
ffff800000105bb0	kernel.asm	/^ffff800000105bb0:	80 ff ff $/;"	l
ffff800000105bb3	kernel.asm	/^ffff800000105bb3:	8b 00                	mov    (%rax),%eax$/;"	l
ffff800000105bb5	kernel.asm	/^ffff800000105bb5:	89 c6                	mov    %eax,%esi$/;"	l
ffff800000105bb7	kernel.asm	/^ffff800000105bb7:	48 bf f9 c4 10 00 00 	movabs $0xffff80000010c4f9,%rdi$/;"	l
ffff800000105bbe	kernel.asm	/^ffff800000105bbe:	80 ff ff $/;"	l
ffff800000105bc1	kernel.asm	/^ffff800000105bc1:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000105bc6	kernel.asm	/^ffff800000105bc6:	48 ba ac 07 10 00 00 	movabs $0xffff8000001007ac,%rdx$/;"	l
ffff800000105bcd	kernel.asm	/^ffff800000105bcd:	80 ff ff $/;"	l
ffff800000105bd0	kernel.asm	/^ffff800000105bd0:	ff d2                	callq  *%rdx$/;"	l
ffff800000105bd2	kernel.asm	/^ffff800000105bd2:	48 8b 45 d0          	mov    -0x30(%rbp),%rax$/;"	l
ffff800000105bd6	kernel.asm	/^ffff800000105bd6:	0f b6 40 0c          	movzbl 0xc(%rax),%eax$/;"	l
ffff800000105bda	kernel.asm	/^ffff800000105bda:	84 c0                	test   %al,%al$/;"	l
ffff800000105bdc	kernel.asm	/^ffff800000105bdc:	74 40                	je     ffff800000105c1e <mpinit+0x202>$/;"	l
ffff800000105bde	kernel.asm	/^ffff800000105bde:	be 70 00 00 00       	mov    $0x70,%esi$/;"	l
ffff800000105be3	kernel.asm	/^ffff800000105be3:	bf 22 00 00 00       	mov    $0x22,%edi$/;"	l
ffff800000105be8	kernel.asm	/^ffff800000105be8:	48 b8 63 57 10 00 00 	movabs $0xffff800000105763,%rax$/;"	l
ffff800000105bef	kernel.asm	/^ffff800000105bef:	80 ff ff $/;"	l
ffff800000105bf2	kernel.asm	/^ffff800000105bf2:	ff d0                	callq  *%rax$/;"	l
ffff800000105bf4	kernel.asm	/^ffff800000105bf4:	bf 23 00 00 00       	mov    $0x23,%edi$/;"	l
ffff800000105bf9	kernel.asm	/^ffff800000105bf9:	48 b8 45 57 10 00 00 	movabs $0xffff800000105745,%rax$/;"	l
ffff800000105c00	kernel.asm	/^ffff800000105c00:	80 ff ff $/;"	l
ffff800000105c03	kernel.asm	/^ffff800000105c03:	ff d0                	callq  *%rax$/;"	l
ffff800000105c05	kernel.asm	/^ffff800000105c05:	83 c8 01             	or     $0x1,%eax$/;"	l
ffff800000105c08	kernel.asm	/^ffff800000105c08:	0f b6 c0             	movzbl %al,%eax$/;"	l
ffff800000105c0b	kernel.asm	/^ffff800000105c0b:	89 c6                	mov    %eax,%esi$/;"	l
ffff800000105c0d	kernel.asm	/^ffff800000105c0d:	bf 23 00 00 00       	mov    $0x23,%edi$/;"	l
ffff800000105c12	kernel.asm	/^ffff800000105c12:	48 b8 63 57 10 00 00 	movabs $0xffff800000105763,%rax$/;"	l
ffff800000105c19	kernel.asm	/^ffff800000105c19:	80 ff ff $/;"	l
ffff800000105c1c	kernel.asm	/^ffff800000105c1c:	ff d0                	callq  *%rax$/;"	l
ffff800000105c1e	kernel.asm	/^ffff800000105c1e:	c9                   	leaveq $/;"	l
ffff800000105c1f	kernel.asm	/^ffff800000105c1f:	c3                   	retq   $/;"	l
ffff800000105c20	kernel.asm	/^ffff800000105c20 <pipealloc>:$/;"	l
ffff800000105c20	kernel.asm	/^ffff800000105c20:	55                   	push   %rbp$/;"	l
ffff800000105c21	kernel.asm	/^ffff800000105c21:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000105c24	kernel.asm	/^ffff800000105c24:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ffff800000105c28	kernel.asm	/^ffff800000105c28:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
ffff800000105c2c	kernel.asm	/^ffff800000105c2c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)$/;"	l
ffff800000105c30	kernel.asm	/^ffff800000105c30:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)$/;"	l
ffff800000105c37	kernel.asm	/^ffff800000105c37:	00 $/;"	l
ffff800000105c38	kernel.asm	/^ffff800000105c38:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff800000105c3c	kernel.asm	/^ffff800000105c3c:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)$/;"	l
ffff800000105c43	kernel.asm	/^ffff800000105c43:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff800000105c47	kernel.asm	/^ffff800000105c47:	48 8b 10             	mov    (%rax),%rdx$/;"	l
ffff800000105c4a	kernel.asm	/^ffff800000105c4a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000105c4e	kernel.asm	/^ffff800000105c4e:	48 89 10             	mov    %rdx,(%rax)$/;"	l
ffff800000105c51	kernel.asm	/^ffff800000105c51:	48 b8 a4 1a 10 00 00 	movabs $0xffff800000101aa4,%rax$/;"	l
ffff800000105c58	kernel.asm	/^ffff800000105c58:	80 ff ff $/;"	l
ffff800000105c5b	kernel.asm	/^ffff800000105c5b:	ff d0                	callq  *%rax$/;"	l
ffff800000105c5d	kernel.asm	/^ffff800000105c5d:	48 89 c2             	mov    %rax,%rdx$/;"	l
ffff800000105c60	kernel.asm	/^ffff800000105c60:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000105c64	kernel.asm	/^ffff800000105c64:	48 89 10             	mov    %rdx,(%rax)$/;"	l
ffff800000105c67	kernel.asm	/^ffff800000105c67:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000105c6b	kernel.asm	/^ffff800000105c6b:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff800000105c6e	kernel.asm	/^ffff800000105c6e:	48 85 c0             	test   %rax,%rax$/;"	l
ffff800000105c71	kernel.asm	/^ffff800000105c71:	0f 84 02 01 00 00    	je     ffff800000105d79 <pipealloc+0x159>$/;"	l
ffff800000105c77	kernel.asm	/^ffff800000105c77:	48 b8 a4 1a 10 00 00 	movabs $0xffff800000101aa4,%rax$/;"	l
ffff800000105c7e	kernel.asm	/^ffff800000105c7e:	80 ff ff $/;"	l
ffff800000105c81	kernel.asm	/^ffff800000105c81:	ff d0                	callq  *%rax$/;"	l
ffff800000105c83	kernel.asm	/^ffff800000105c83:	48 89 c2             	mov    %rax,%rdx$/;"	l
ffff800000105c86	kernel.asm	/^ffff800000105c86:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff800000105c8a	kernel.asm	/^ffff800000105c8a:	48 89 10             	mov    %rdx,(%rax)$/;"	l
ffff800000105c8d	kernel.asm	/^ffff800000105c8d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff800000105c91	kernel.asm	/^ffff800000105c91:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff800000105c94	kernel.asm	/^ffff800000105c94:	48 85 c0             	test   %rax,%rax$/;"	l
ffff800000105c97	kernel.asm	/^ffff800000105c97:	0f 84 dc 00 00 00    	je     ffff800000105d79 <pipealloc+0x159>$/;"	l
ffff800000105c9d	kernel.asm	/^ffff800000105c9d:	48 b8 95 41 10 00 00 	movabs $0xffff800000104195,%rax$/;"	l
ffff800000105ca4	kernel.asm	/^ffff800000105ca4:	80 ff ff $/;"	l
ffff800000105ca7	kernel.asm	/^ffff800000105ca7:	ff d0                	callq  *%rax$/;"	l
ffff800000105ca9	kernel.asm	/^ffff800000105ca9:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff800000105cad	kernel.asm	/^ffff800000105cad:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)$/;"	l
ffff800000105cb2	kernel.asm	/^ffff800000105cb2:	0f 84 c0 00 00 00    	je     ffff800000105d78 <pipealloc+0x158>$/;"	l
ffff800000105cb8	kernel.asm	/^ffff800000105cb8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000105cbc	kernel.asm	/^ffff800000105cbc:	c7 80 70 02 00 00 01 	movl   $0x1,0x270(%rax)$/;"	l
ffff800000105cc3	kernel.asm	/^ffff800000105cc3:	00 00 00 $/;"	l
ffff800000105cc6	kernel.asm	/^ffff800000105cc6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000105cca	kernel.asm	/^ffff800000105cca:	c7 80 74 02 00 00 01 	movl   $0x1,0x274(%rax)$/;"	l
ffff800000105cd1	kernel.asm	/^ffff800000105cd1:	00 00 00 $/;"	l
ffff800000105cd4	kernel.asm	/^ffff800000105cd4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000105cd8	kernel.asm	/^ffff800000105cd8:	c7 80 6c 02 00 00 00 	movl   $0x0,0x26c(%rax)$/;"	l
ffff800000105cdf	kernel.asm	/^ffff800000105cdf:	00 00 00 $/;"	l
ffff800000105ce2	kernel.asm	/^ffff800000105ce2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000105ce6	kernel.asm	/^ffff800000105ce6:	c7 80 68 02 00 00 00 	movl   $0x0,0x268(%rax)$/;"	l
ffff800000105ced	kernel.asm	/^ffff800000105ced:	00 00 00 $/;"	l
ffff800000105cf0	kernel.asm	/^ffff800000105cf0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000105cf4	kernel.asm	/^ffff800000105cf4:	48 be 40 c5 10 00 00 	movabs $0xffff80000010c540,%rsi$/;"	l
ffff800000105cfb	kernel.asm	/^ffff800000105cfb:	80 ff ff $/;"	l
ffff800000105cfe	kernel.asm	/^ffff800000105cfe:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000105d01	kernel.asm	/^ffff800000105d01:	48 b8 cc 78 10 00 00 	movabs $0xffff8000001078cc,%rax$/;"	l
ffff800000105d08	kernel.asm	/^ffff800000105d08:	80 ff ff $/;"	l
ffff800000105d0b	kernel.asm	/^ffff800000105d0b:	ff d0                	callq  *%rax$/;"	l
ffff800000105d0d	kernel.asm	/^ffff800000105d0d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000105d11	kernel.asm	/^ffff800000105d11:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff800000105d14	kernel.asm	/^ffff800000105d14:	c7 00 01 00 00 00    	movl   $0x1,(%rax)$/;"	l
ffff800000105d1a	kernel.asm	/^ffff800000105d1a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000105d1e	kernel.asm	/^ffff800000105d1e:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff800000105d21	kernel.asm	/^ffff800000105d21:	c6 40 08 01          	movb   $0x1,0x8(%rax)$/;"	l
ffff800000105d25	kernel.asm	/^ffff800000105d25:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000105d29	kernel.asm	/^ffff800000105d29:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff800000105d2c	kernel.asm	/^ffff800000105d2c:	c6 40 09 00          	movb   $0x0,0x9(%rax)$/;"	l
ffff800000105d30	kernel.asm	/^ffff800000105d30:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000105d34	kernel.asm	/^ffff800000105d34:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff800000105d37	kernel.asm	/^ffff800000105d37:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx$/;"	l
ffff800000105d3b	kernel.asm	/^ffff800000105d3b:	48 89 50 10          	mov    %rdx,0x10(%rax)$/;"	l
ffff800000105d3f	kernel.asm	/^ffff800000105d3f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff800000105d43	kernel.asm	/^ffff800000105d43:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff800000105d46	kernel.asm	/^ffff800000105d46:	c7 00 01 00 00 00    	movl   $0x1,(%rax)$/;"	l
ffff800000105d4c	kernel.asm	/^ffff800000105d4c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff800000105d50	kernel.asm	/^ffff800000105d50:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff800000105d53	kernel.asm	/^ffff800000105d53:	c6 40 08 00          	movb   $0x0,0x8(%rax)$/;"	l
ffff800000105d57	kernel.asm	/^ffff800000105d57:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff800000105d5b	kernel.asm	/^ffff800000105d5b:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff800000105d5e	kernel.asm	/^ffff800000105d5e:	c6 40 09 01          	movb   $0x1,0x9(%rax)$/;"	l
ffff800000105d62	kernel.asm	/^ffff800000105d62:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff800000105d66	kernel.asm	/^ffff800000105d66:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff800000105d69	kernel.asm	/^ffff800000105d69:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx$/;"	l
ffff800000105d6d	kernel.asm	/^ffff800000105d6d:	48 89 50 10          	mov    %rdx,0x10(%rax)$/;"	l
ffff800000105d71	kernel.asm	/^ffff800000105d71:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000105d76	kernel.asm	/^ffff800000105d76:	eb 64                	jmp    ffff800000105ddc <pipealloc+0x1bc>$/;"	l
ffff800000105d78	kernel.asm	/^ffff800000105d78:	90                   	nop$/;"	l
ffff800000105d79	kernel.asm	/^ffff800000105d79:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)$/;"	l
ffff800000105d7e	kernel.asm	/^ffff800000105d7e:	74 13                	je     ffff800000105d93 <pipealloc+0x173>$/;"	l
ffff800000105d80	kernel.asm	/^ffff800000105d80:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000105d84	kernel.asm	/^ffff800000105d84:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000105d87	kernel.asm	/^ffff800000105d87:	48 b8 9f 40 10 00 00 	movabs $0xffff80000010409f,%rax$/;"	l
ffff800000105d8e	kernel.asm	/^ffff800000105d8e:	80 ff ff $/;"	l
ffff800000105d91	kernel.asm	/^ffff800000105d91:	ff d0                	callq  *%rax$/;"	l
ffff800000105d93	kernel.asm	/^ffff800000105d93:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000105d97	kernel.asm	/^ffff800000105d97:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff800000105d9a	kernel.asm	/^ffff800000105d9a:	48 85 c0             	test   %rax,%rax$/;"	l
ffff800000105d9d	kernel.asm	/^ffff800000105d9d:	74 16                	je     ffff800000105db5 <pipealloc+0x195>$/;"	l
ffff800000105d9f	kernel.asm	/^ffff800000105d9f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000105da3	kernel.asm	/^ffff800000105da3:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff800000105da6	kernel.asm	/^ffff800000105da6:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000105da9	kernel.asm	/^ffff800000105da9:	48 b8 a6 1b 10 00 00 	movabs $0xffff800000101ba6,%rax$/;"	l
ffff800000105db0	kernel.asm	/^ffff800000105db0:	80 ff ff $/;"	l
ffff800000105db3	kernel.asm	/^ffff800000105db3:	ff d0                	callq  *%rax$/;"	l
ffff800000105db5	kernel.asm	/^ffff800000105db5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff800000105db9	kernel.asm	/^ffff800000105db9:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff800000105dbc	kernel.asm	/^ffff800000105dbc:	48 85 c0             	test   %rax,%rax$/;"	l
ffff800000105dbf	kernel.asm	/^ffff800000105dbf:	74 16                	je     ffff800000105dd7 <pipealloc+0x1b7>$/;"	l
ffff800000105dc1	kernel.asm	/^ffff800000105dc1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff800000105dc5	kernel.asm	/^ffff800000105dc5:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff800000105dc8	kernel.asm	/^ffff800000105dc8:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000105dcb	kernel.asm	/^ffff800000105dcb:	48 b8 a6 1b 10 00 00 	movabs $0xffff800000101ba6,%rax$/;"	l
ffff800000105dd2	kernel.asm	/^ffff800000105dd2:	80 ff ff $/;"	l
ffff800000105dd5	kernel.asm	/^ffff800000105dd5:	ff d0                	callq  *%rax$/;"	l
ffff800000105dd7	kernel.asm	/^ffff800000105dd7:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff800000105ddc	kernel.asm	/^ffff800000105ddc:	c9                   	leaveq $/;"	l
ffff800000105ddd	kernel.asm	/^ffff800000105ddd:	c3                   	retq   $/;"	l
ffff800000105dde	kernel.asm	/^ffff800000105dde <pipeclose>:$/;"	l
ffff800000105dde	kernel.asm	/^ffff800000105dde:	55                   	push   %rbp$/;"	l
ffff800000105ddf	kernel.asm	/^ffff800000105ddf:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000105de2	kernel.asm	/^ffff800000105de2:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff800000105de6	kernel.asm	/^ffff800000105de6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)$/;"	l
ffff800000105dea	kernel.asm	/^ffff800000105dea:	89 75 f4             	mov    %esi,-0xc(%rbp)$/;"	l
ffff800000105ded	kernel.asm	/^ffff800000105ded:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000105df1	kernel.asm	/^ffff800000105df1:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000105df4	kernel.asm	/^ffff800000105df4:	48 b8 01 79 10 00 00 	movabs $0xffff800000107901,%rax$/;"	l
ffff800000105dfb	kernel.asm	/^ffff800000105dfb:	80 ff ff $/;"	l
ffff800000105dfe	kernel.asm	/^ffff800000105dfe:	ff d0                	callq  *%rax$/;"	l
ffff800000105e00	kernel.asm	/^ffff800000105e00:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)$/;"	l
ffff800000105e04	kernel.asm	/^ffff800000105e04:	74 29                	je     ffff800000105e2f <pipeclose+0x51>$/;"	l
ffff800000105e06	kernel.asm	/^ffff800000105e06:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000105e0a	kernel.asm	/^ffff800000105e0a:	c7 80 74 02 00 00 00 	movl   $0x0,0x274(%rax)$/;"	l
ffff800000105e11	kernel.asm	/^ffff800000105e11:	00 00 00 $/;"	l
ffff800000105e14	kernel.asm	/^ffff800000105e14:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000105e18	kernel.asm	/^ffff800000105e18:	48 05 68 02 00 00    	add    $0x268,%rax$/;"	l
ffff800000105e1e	kernel.asm	/^ffff800000105e1e:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000105e21	kernel.asm	/^ffff800000105e21:	48 b8 19 6f 10 00 00 	movabs $0xffff800000106f19,%rax$/;"	l
ffff800000105e28	kernel.asm	/^ffff800000105e28:	80 ff ff $/;"	l
ffff800000105e2b	kernel.asm	/^ffff800000105e2b:	ff d0                	callq  *%rax$/;"	l
ffff800000105e2d	kernel.asm	/^ffff800000105e2d:	eb 27                	jmp    ffff800000105e56 <pipeclose+0x78>$/;"	l
ffff800000105e2f	kernel.asm	/^ffff800000105e2f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000105e33	kernel.asm	/^ffff800000105e33:	c7 80 70 02 00 00 00 	movl   $0x0,0x270(%rax)$/;"	l
ffff800000105e3a	kernel.asm	/^ffff800000105e3a:	00 00 00 $/;"	l
ffff800000105e3d	kernel.asm	/^ffff800000105e3d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000105e41	kernel.asm	/^ffff800000105e41:	48 05 6c 02 00 00    	add    $0x26c,%rax$/;"	l
ffff800000105e47	kernel.asm	/^ffff800000105e47:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000105e4a	kernel.asm	/^ffff800000105e4a:	48 b8 19 6f 10 00 00 	movabs $0xffff800000106f19,%rax$/;"	l
ffff800000105e51	kernel.asm	/^ffff800000105e51:	80 ff ff $/;"	l
ffff800000105e54	kernel.asm	/^ffff800000105e54:	ff d0                	callq  *%rax$/;"	l
ffff800000105e56	kernel.asm	/^ffff800000105e56:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000105e5a	kernel.asm	/^ffff800000105e5a:	8b 80 70 02 00 00    	mov    0x270(%rax),%eax$/;"	l
ffff800000105e60	kernel.asm	/^ffff800000105e60:	85 c0                	test   %eax,%eax$/;"	l
ffff800000105e62	kernel.asm	/^ffff800000105e62:	75 36                	jne    ffff800000105e9a <pipeclose+0xbc>$/;"	l
ffff800000105e64	kernel.asm	/^ffff800000105e64:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000105e68	kernel.asm	/^ffff800000105e68:	8b 80 74 02 00 00    	mov    0x274(%rax),%eax$/;"	l
ffff800000105e6e	kernel.asm	/^ffff800000105e6e:	85 c0                	test   %eax,%eax$/;"	l
ffff800000105e70	kernel.asm	/^ffff800000105e70:	75 28                	jne    ffff800000105e9a <pipeclose+0xbc>$/;"	l
ffff800000105e72	kernel.asm	/^ffff800000105e72:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000105e76	kernel.asm	/^ffff800000105e76:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000105e79	kernel.asm	/^ffff800000105e79:	48 b8 9a 79 10 00 00 	movabs $0xffff80000010799a,%rax$/;"	l
ffff800000105e80	kernel.asm	/^ffff800000105e80:	80 ff ff $/;"	l
ffff800000105e83	kernel.asm	/^ffff800000105e83:	ff d0                	callq  *%rax$/;"	l
ffff800000105e85	kernel.asm	/^ffff800000105e85:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000105e89	kernel.asm	/^ffff800000105e89:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000105e8c	kernel.asm	/^ffff800000105e8c:	48 b8 9f 40 10 00 00 	movabs $0xffff80000010409f,%rax$/;"	l
ffff800000105e93	kernel.asm	/^ffff800000105e93:	80 ff ff $/;"	l
ffff800000105e96	kernel.asm	/^ffff800000105e96:	ff d0                	callq  *%rax$/;"	l
ffff800000105e98	kernel.asm	/^ffff800000105e98:	eb 13                	jmp    ffff800000105ead <pipeclose+0xcf>$/;"	l
ffff800000105e9a	kernel.asm	/^ffff800000105e9a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000105e9e	kernel.asm	/^ffff800000105e9e:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000105ea1	kernel.asm	/^ffff800000105ea1:	48 b8 9a 79 10 00 00 	movabs $0xffff80000010799a,%rax$/;"	l
ffff800000105ea8	kernel.asm	/^ffff800000105ea8:	80 ff ff $/;"	l
ffff800000105eab	kernel.asm	/^ffff800000105eab:	ff d0                	callq  *%rax$/;"	l
ffff800000105ead	kernel.asm	/^ffff800000105ead:	90                   	nop$/;"	l
ffff800000105eae	kernel.asm	/^ffff800000105eae:	c9                   	leaveq $/;"	l
ffff800000105eaf	kernel.asm	/^ffff800000105eaf:	c3                   	retq   $/;"	l
ffff800000105eb0	kernel.asm	/^ffff800000105eb0 <pipewrite>:$/;"	l
ffff800000105eb0	kernel.asm	/^ffff800000105eb0:	55                   	push   %rbp$/;"	l
ffff800000105eb1	kernel.asm	/^ffff800000105eb1:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000105eb4	kernel.asm	/^ffff800000105eb4:	48 83 ec 30          	sub    $0x30,%rsp$/;"	l
ffff800000105eb8	kernel.asm	/^ffff800000105eb8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
ffff800000105ebc	kernel.asm	/^ffff800000105ebc:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)$/;"	l
ffff800000105ec0	kernel.asm	/^ffff800000105ec0:	89 55 dc             	mov    %edx,-0x24(%rbp)$/;"	l
ffff800000105ec3	kernel.asm	/^ffff800000105ec3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000105ec7	kernel.asm	/^ffff800000105ec7:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000105eca	kernel.asm	/^ffff800000105eca:	48 b8 01 79 10 00 00 	movabs $0xffff800000107901,%rax$/;"	l
ffff800000105ed1	kernel.asm	/^ffff800000105ed1:	80 ff ff $/;"	l
ffff800000105ed4	kernel.asm	/^ffff800000105ed4:	ff d0                	callq  *%rax$/;"	l
ffff800000105ed6	kernel.asm	/^ffff800000105ed6:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)$/;"	l
ffff800000105edd	kernel.asm	/^ffff800000105edd:	e9 d4 00 00 00       	jmpq   ffff800000105fb6 <pipewrite+0x106>$/;"	l
ffff800000105ee2	kernel.asm	/^ffff800000105ee2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000105ee6	kernel.asm	/^ffff800000105ee6:	8b 80 70 02 00 00    	mov    0x270(%rax),%eax$/;"	l
ffff800000105eec	kernel.asm	/^ffff800000105eec:	85 c0                	test   %eax,%eax$/;"	l
ffff800000105eee	kernel.asm	/^ffff800000105eee:	74 12                	je     ffff800000105f02 <pipewrite+0x52>$/;"	l
ffff800000105ef0	kernel.asm	/^ffff800000105ef0:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000105ef7	kernel.asm	/^ffff800000105ef7:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000105efb	kernel.asm	/^ffff800000105efb:	8b 40 40             	mov    0x40(%rax),%eax$/;"	l
ffff800000105efe	kernel.asm	/^ffff800000105efe:	85 c0                	test   %eax,%eax$/;"	l
ffff800000105f00	kernel.asm	/^ffff800000105f00:	74 1d                	je     ffff800000105f1f <pipewrite+0x6f>$/;"	l
ffff800000105f02	kernel.asm	/^ffff800000105f02:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000105f06	kernel.asm	/^ffff800000105f06:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000105f09	kernel.asm	/^ffff800000105f09:	48 b8 9a 79 10 00 00 	movabs $0xffff80000010799a,%rax$/;"	l
ffff800000105f10	kernel.asm	/^ffff800000105f10:	80 ff ff $/;"	l
ffff800000105f13	kernel.asm	/^ffff800000105f13:	ff d0                	callq  *%rax$/;"	l
ffff800000105f15	kernel.asm	/^ffff800000105f15:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff800000105f1a	kernel.asm	/^ffff800000105f1a:	e9 ce 00 00 00       	jmpq   ffff800000105fed <pipewrite+0x13d>$/;"	l
ffff800000105f1f	kernel.asm	/^ffff800000105f1f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000105f23	kernel.asm	/^ffff800000105f23:	48 05 68 02 00 00    	add    $0x268,%rax$/;"	l
ffff800000105f29	kernel.asm	/^ffff800000105f29:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000105f2c	kernel.asm	/^ffff800000105f2c:	48 b8 19 6f 10 00 00 	movabs $0xffff800000106f19,%rax$/;"	l
ffff800000105f33	kernel.asm	/^ffff800000105f33:	80 ff ff $/;"	l
ffff800000105f36	kernel.asm	/^ffff800000105f36:	ff d0                	callq  *%rax$/;"	l
ffff800000105f38	kernel.asm	/^ffff800000105f38:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000105f3c	kernel.asm	/^ffff800000105f3c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx$/;"	l
ffff800000105f40	kernel.asm	/^ffff800000105f40:	48 81 c2 6c 02 00 00 	add    $0x26c,%rdx$/;"	l
ffff800000105f47	kernel.asm	/^ffff800000105f47:	48 89 c6             	mov    %rax,%rsi$/;"	l
ffff800000105f4a	kernel.asm	/^ffff800000105f4a:	48 89 d7             	mov    %rdx,%rdi$/;"	l
ffff800000105f4d	kernel.asm	/^ffff800000105f4d:	48 b8 b1 6d 10 00 00 	movabs $0xffff800000106db1,%rax$/;"	l
ffff800000105f54	kernel.asm	/^ffff800000105f54:	80 ff ff $/;"	l
ffff800000105f57	kernel.asm	/^ffff800000105f57:	ff d0                	callq  *%rax$/;"	l
ffff800000105f59	kernel.asm	/^ffff800000105f59:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000105f5d	kernel.asm	/^ffff800000105f5d:	8b 90 6c 02 00 00    	mov    0x26c(%rax),%edx$/;"	l
ffff800000105f63	kernel.asm	/^ffff800000105f63:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000105f67	kernel.asm	/^ffff800000105f67:	8b 80 68 02 00 00    	mov    0x268(%rax),%eax$/;"	l
ffff800000105f6d	kernel.asm	/^ffff800000105f6d:	05 00 02 00 00       	add    $0x200,%eax$/;"	l
ffff800000105f72	kernel.asm	/^ffff800000105f72:	39 c2                	cmp    %eax,%edx$/;"	l
ffff800000105f74	kernel.asm	/^ffff800000105f74:	0f 84 68 ff ff ff    	je     ffff800000105ee2 <pipewrite+0x32>$/;"	l
ffff800000105f7a	kernel.asm	/^ffff800000105f7a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000105f7e	kernel.asm	/^ffff800000105f7e:	8b 80 6c 02 00 00    	mov    0x26c(%rax),%eax$/;"	l
ffff800000105f84	kernel.asm	/^ffff800000105f84:	8d 48 01             	lea    0x1(%rax),%ecx$/;"	l
ffff800000105f87	kernel.asm	/^ffff800000105f87:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx$/;"	l
ffff800000105f8b	kernel.asm	/^ffff800000105f8b:	89 8a 6c 02 00 00    	mov    %ecx,0x26c(%rdx)$/;"	l
ffff800000105f91	kernel.asm	/^ffff800000105f91:	25 ff 01 00 00       	and    $0x1ff,%eax$/;"	l
ffff800000105f96	kernel.asm	/^ffff800000105f96:	89 c1                	mov    %eax,%ecx$/;"	l
ffff800000105f98	kernel.asm	/^ffff800000105f98:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff800000105f9b	kernel.asm	/^ffff800000105f9b:	48 63 d0             	movslq %eax,%rdx$/;"	l
ffff800000105f9e	kernel.asm	/^ffff800000105f9e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff800000105fa2	kernel.asm	/^ffff800000105fa2:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff800000105fa5	kernel.asm	/^ffff800000105fa5:	0f b6 10             	movzbl (%rax),%edx$/;"	l
ffff800000105fa8	kernel.asm	/^ffff800000105fa8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000105fac	kernel.asm	/^ffff800000105fac:	89 c9                	mov    %ecx,%ecx$/;"	l
ffff800000105fae	kernel.asm	/^ffff800000105fae:	88 54 08 68          	mov    %dl,0x68(%rax,%rcx,1)$/;"	l
ffff800000105fb2	kernel.asm	/^ffff800000105fb2:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)$/;"	l
ffff800000105fb6	kernel.asm	/^ffff800000105fb6:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff800000105fb9	kernel.asm	/^ffff800000105fb9:	3b 45 dc             	cmp    -0x24(%rbp),%eax$/;"	l
ffff800000105fbc	kernel.asm	/^ffff800000105fbc:	7c 9b                	jl     ffff800000105f59 <pipewrite+0xa9>$/;"	l
ffff800000105fbe	kernel.asm	/^ffff800000105fbe:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000105fc2	kernel.asm	/^ffff800000105fc2:	48 05 68 02 00 00    	add    $0x268,%rax$/;"	l
ffff800000105fc8	kernel.asm	/^ffff800000105fc8:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000105fcb	kernel.asm	/^ffff800000105fcb:	48 b8 19 6f 10 00 00 	movabs $0xffff800000106f19,%rax$/;"	l
ffff800000105fd2	kernel.asm	/^ffff800000105fd2:	80 ff ff $/;"	l
ffff800000105fd5	kernel.asm	/^ffff800000105fd5:	ff d0                	callq  *%rax$/;"	l
ffff800000105fd7	kernel.asm	/^ffff800000105fd7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000105fdb	kernel.asm	/^ffff800000105fdb:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000105fde	kernel.asm	/^ffff800000105fde:	48 b8 9a 79 10 00 00 	movabs $0xffff80000010799a,%rax$/;"	l
ffff800000105fe5	kernel.asm	/^ffff800000105fe5:	80 ff ff $/;"	l
ffff800000105fe8	kernel.asm	/^ffff800000105fe8:	ff d0                	callq  *%rax$/;"	l
ffff800000105fea	kernel.asm	/^ffff800000105fea:	8b 45 dc             	mov    -0x24(%rbp),%eax$/;"	l
ffff800000105fed	kernel.asm	/^ffff800000105fed:	c9                   	leaveq $/;"	l
ffff800000105fee	kernel.asm	/^ffff800000105fee:	c3                   	retq   $/;"	l
ffff800000105fef	kernel.asm	/^ffff800000105fef <piperead>:$/;"	l
ffff800000105fef	kernel.asm	/^ffff800000105fef:	55                   	push   %rbp$/;"	l
ffff800000105ff0	kernel.asm	/^ffff800000105ff0:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000105ff3	kernel.asm	/^ffff800000105ff3:	48 83 ec 30          	sub    $0x30,%rsp$/;"	l
ffff800000105ff7	kernel.asm	/^ffff800000105ff7:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
ffff800000105ffb	kernel.asm	/^ffff800000105ffb:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)$/;"	l
ffff800000105fff	kernel.asm	/^ffff800000105fff:	89 55 dc             	mov    %edx,-0x24(%rbp)$/;"	l
ffff800000106002	kernel.asm	/^ffff800000106002:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000106006	kernel.asm	/^ffff800000106006:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000106009	kernel.asm	/^ffff800000106009:	48 b8 01 79 10 00 00 	movabs $0xffff800000107901,%rax$/;"	l
ffff800000106010	kernel.asm	/^ffff800000106010:	80 ff ff $/;"	l
ffff800000106013	kernel.asm	/^ffff800000106013:	ff d0                	callq  *%rax$/;"	l
ffff800000106015	kernel.asm	/^ffff800000106015:	eb 50                	jmp    ffff800000106067 <piperead+0x78>$/;"	l
ffff800000106017	kernel.asm	/^ffff800000106017:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff80000010601e	kernel.asm	/^ffff80000010601e:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000106022	kernel.asm	/^ffff800000106022:	8b 40 40             	mov    0x40(%rax),%eax$/;"	l
ffff800000106025	kernel.asm	/^ffff800000106025:	85 c0                	test   %eax,%eax$/;"	l
ffff800000106027	kernel.asm	/^ffff800000106027:	74 1d                	je     ffff800000106046 <piperead+0x57>$/;"	l
ffff800000106029	kernel.asm	/^ffff800000106029:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010602d	kernel.asm	/^ffff80000010602d:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000106030	kernel.asm	/^ffff800000106030:	48 b8 9a 79 10 00 00 	movabs $0xffff80000010799a,%rax$/;"	l
ffff800000106037	kernel.asm	/^ffff800000106037:	80 ff ff $/;"	l
ffff80000010603a	kernel.asm	/^ffff80000010603a:	ff d0                	callq  *%rax$/;"	l
ffff80000010603c	kernel.asm	/^ffff80000010603c:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff800000106041	kernel.asm	/^ffff800000106041:	e9 df 00 00 00       	jmpq   ffff800000106125 <piperead+0x136>$/;"	l
ffff800000106046	kernel.asm	/^ffff800000106046:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010604a	kernel.asm	/^ffff80000010604a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx$/;"	l
ffff80000010604e	kernel.asm	/^ffff80000010604e:	48 81 c2 68 02 00 00 	add    $0x268,%rdx$/;"	l
ffff800000106055	kernel.asm	/^ffff800000106055:	48 89 c6             	mov    %rax,%rsi$/;"	l
ffff800000106058	kernel.asm	/^ffff800000106058:	48 89 d7             	mov    %rdx,%rdi$/;"	l
ffff80000010605b	kernel.asm	/^ffff80000010605b:	48 b8 b1 6d 10 00 00 	movabs $0xffff800000106db1,%rax$/;"	l
ffff800000106062	kernel.asm	/^ffff800000106062:	80 ff ff $/;"	l
ffff800000106065	kernel.asm	/^ffff800000106065:	ff d0                	callq  *%rax$/;"	l
ffff800000106067	kernel.asm	/^ffff800000106067:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010606b	kernel.asm	/^ffff80000010606b:	8b 90 68 02 00 00    	mov    0x268(%rax),%edx$/;"	l
ffff800000106071	kernel.asm	/^ffff800000106071:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000106075	kernel.asm	/^ffff800000106075:	8b 80 6c 02 00 00    	mov    0x26c(%rax),%eax$/;"	l
ffff80000010607b	kernel.asm	/^ffff80000010607b:	39 c2                	cmp    %eax,%edx$/;"	l
ffff80000010607d	kernel.asm	/^ffff80000010607d:	75 0e                	jne    ffff80000010608d <piperead+0x9e>$/;"	l
ffff80000010607f	kernel.asm	/^ffff80000010607f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000106083	kernel.asm	/^ffff800000106083:	8b 80 74 02 00 00    	mov    0x274(%rax),%eax$/;"	l
ffff800000106089	kernel.asm	/^ffff800000106089:	85 c0                	test   %eax,%eax$/;"	l
ffff80000010608b	kernel.asm	/^ffff80000010608b:	75 8a                	jne    ffff800000106017 <piperead+0x28>$/;"	l
ffff80000010608d	kernel.asm	/^ffff80000010608d:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)$/;"	l
ffff800000106094	kernel.asm	/^ffff800000106094:	eb 55                	jmp    ffff8000001060eb <piperead+0xfc>$/;"	l
ffff800000106096	kernel.asm	/^ffff800000106096:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010609a	kernel.asm	/^ffff80000010609a:	8b 90 68 02 00 00    	mov    0x268(%rax),%edx$/;"	l
ffff8000001060a0	kernel.asm	/^ffff8000001060a0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff8000001060a4	kernel.asm	/^ffff8000001060a4:	8b 80 6c 02 00 00    	mov    0x26c(%rax),%eax$/;"	l
ffff8000001060aa	kernel.asm	/^ffff8000001060aa:	39 c2                	cmp    %eax,%edx$/;"	l
ffff8000001060ac	kernel.asm	/^ffff8000001060ac:	74 47                	je     ffff8000001060f5 <piperead+0x106>$/;"	l
ffff8000001060ae	kernel.asm	/^ffff8000001060ae:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff8000001060b1	kernel.asm	/^ffff8000001060b1:	48 63 d0             	movslq %eax,%rdx$/;"	l
ffff8000001060b4	kernel.asm	/^ffff8000001060b4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff8000001060b8	kernel.asm	/^ffff8000001060b8:	48 8d 34 02          	lea    (%rdx,%rax,1),%rsi$/;"	l
ffff8000001060bc	kernel.asm	/^ffff8000001060bc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff8000001060c0	kernel.asm	/^ffff8000001060c0:	8b 80 68 02 00 00    	mov    0x268(%rax),%eax$/;"	l
ffff8000001060c6	kernel.asm	/^ffff8000001060c6:	8d 48 01             	lea    0x1(%rax),%ecx$/;"	l
ffff8000001060c9	kernel.asm	/^ffff8000001060c9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx$/;"	l
ffff8000001060cd	kernel.asm	/^ffff8000001060cd:	89 8a 68 02 00 00    	mov    %ecx,0x268(%rdx)$/;"	l
ffff8000001060d3	kernel.asm	/^ffff8000001060d3:	25 ff 01 00 00       	and    $0x1ff,%eax$/;"	l
ffff8000001060d8	kernel.asm	/^ffff8000001060d8:	89 c2                	mov    %eax,%edx$/;"	l
ffff8000001060da	kernel.asm	/^ffff8000001060da:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff8000001060de	kernel.asm	/^ffff8000001060de:	89 d2                	mov    %edx,%edx$/;"	l
ffff8000001060e0	kernel.asm	/^ffff8000001060e0:	0f b6 44 10 68       	movzbl 0x68(%rax,%rdx,1),%eax$/;"	l
ffff8000001060e5	kernel.asm	/^ffff8000001060e5:	88 06                	mov    %al,(%rsi)$/;"	l
ffff8000001060e7	kernel.asm	/^ffff8000001060e7:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)$/;"	l
ffff8000001060eb	kernel.asm	/^ffff8000001060eb:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff8000001060ee	kernel.asm	/^ffff8000001060ee:	3b 45 dc             	cmp    -0x24(%rbp),%eax$/;"	l
ffff8000001060f1	kernel.asm	/^ffff8000001060f1:	7c a3                	jl     ffff800000106096 <piperead+0xa7>$/;"	l
ffff8000001060f3	kernel.asm	/^ffff8000001060f3:	eb 01                	jmp    ffff8000001060f6 <piperead+0x107>$/;"	l
ffff8000001060f5	kernel.asm	/^ffff8000001060f5:	90                   	nop$/;"	l
ffff8000001060f6	kernel.asm	/^ffff8000001060f6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff8000001060fa	kernel.asm	/^ffff8000001060fa:	48 05 6c 02 00 00    	add    $0x26c,%rax$/;"	l
ffff800000106100	kernel.asm	/^ffff800000106100:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000106103	kernel.asm	/^ffff800000106103:	48 b8 19 6f 10 00 00 	movabs $0xffff800000106f19,%rax$/;"	l
ffff80000010610a	kernel.asm	/^ffff80000010610a:	80 ff ff $/;"	l
ffff80000010610d	kernel.asm	/^ffff80000010610d:	ff d0                	callq  *%rax$/;"	l
ffff80000010610f	kernel.asm	/^ffff80000010610f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000106113	kernel.asm	/^ffff800000106113:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000106116	kernel.asm	/^ffff800000106116:	48 b8 9a 79 10 00 00 	movabs $0xffff80000010799a,%rax$/;"	l
ffff80000010611d	kernel.asm	/^ffff80000010611d:	80 ff ff $/;"	l
ffff800000106120	kernel.asm	/^ffff800000106120:	ff d0                	callq  *%rax$/;"	l
ffff800000106122	kernel.asm	/^ffff800000106122:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff800000106125	kernel.asm	/^ffff800000106125:	c9                   	leaveq $/;"	l
ffff800000106126	kernel.asm	/^ffff800000106126:	c3                   	retq   $/;"	l
ffff800000106127	kernel.asm	/^ffff800000106127 <readeflags>:$/;"	l
ffff800000106127	kernel.asm	/^ffff800000106127:	55                   	push   %rbp$/;"	l
ffff800000106128	kernel.asm	/^ffff800000106128:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010612b	kernel.asm	/^ffff80000010612b:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff80000010612f	kernel.asm	/^ffff80000010612f:	9c                   	pushfq $/;"	l
ffff800000106130	kernel.asm	/^ffff800000106130:	58                   	pop    %rax$/;"	l
ffff800000106131	kernel.asm	/^ffff800000106131:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff800000106135	kernel.asm	/^ffff800000106135:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000106139	kernel.asm	/^ffff800000106139:	c9                   	leaveq $/;"	l
ffff80000010613a	kernel.asm	/^ffff80000010613a:	c3                   	retq   $/;"	l
ffff80000010613b	kernel.asm	/^ffff80000010613b <sti>:$/;"	l
ffff80000010613b	kernel.asm	/^ffff80000010613b:	55                   	push   %rbp$/;"	l
ffff80000010613c	kernel.asm	/^ffff80000010613c:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010613f	kernel.asm	/^ffff80000010613f:	fb                   	sti    $/;"	l
ffff800000106140	kernel.asm	/^ffff800000106140:	90                   	nop$/;"	l
ffff800000106141	kernel.asm	/^ffff800000106141:	5d                   	pop    %rbp$/;"	l
ffff800000106142	kernel.asm	/^ffff800000106142:	c3                   	retq   $/;"	l
ffff800000106143	kernel.asm	/^ffff800000106143 <pinit>:$/;"	l
ffff800000106143	kernel.asm	/^ffff800000106143:	55                   	push   %rbp$/;"	l
ffff800000106144	kernel.asm	/^ffff800000106144:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000106147	kernel.asm	/^ffff800000106147:	48 be 45 c5 10 00 00 	movabs $0xffff80000010c545,%rsi$/;"	l
ffff80000010614e	kernel.asm	/^ffff80000010614e:	80 ff ff $/;"	l
ffff800000106151	kernel.asm	/^ffff800000106151:	48 bf 60 8c 11 00 00 	movabs $0xffff800000118c60,%rdi$/;"	l
ffff800000106158	kernel.asm	/^ffff800000106158:	80 ff ff $/;"	l
ffff80000010615b	kernel.asm	/^ffff80000010615b:	48 b8 cc 78 10 00 00 	movabs $0xffff8000001078cc,%rax$/;"	l
ffff800000106162	kernel.asm	/^ffff800000106162:	80 ff ff $/;"	l
ffff800000106165	kernel.asm	/^ffff800000106165:	ff d0                	callq  *%rax$/;"	l
ffff800000106167	kernel.asm	/^ffff800000106167:	90                   	nop$/;"	l
ffff800000106168	kernel.asm	/^ffff800000106168:	5d                   	pop    %rbp$/;"	l
ffff800000106169	kernel.asm	/^ffff800000106169:	c3                   	retq   $/;"	l
ffff80000010616a	kernel.asm	/^ffff80000010616a <allocproc>:$/;"	l
ffff80000010616a	kernel.asm	/^ffff80000010616a:	55                   	push   %rbp$/;"	l
ffff80000010616b	kernel.asm	/^ffff80000010616b:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010616e	kernel.asm	/^ffff80000010616e:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff800000106172	kernel.asm	/^ffff800000106172:	48 bf 60 8c 11 00 00 	movabs $0xffff800000118c60,%rdi$/;"	l
ffff800000106179	kernel.asm	/^ffff800000106179:	80 ff ff $/;"	l
ffff80000010617c	kernel.asm	/^ffff80000010617c:	48 b8 01 79 10 00 00 	movabs $0xffff800000107901,%rax$/;"	l
ffff800000106183	kernel.asm	/^ffff800000106183:	80 ff ff $/;"	l
ffff800000106186	kernel.asm	/^ffff800000106186:	ff d0                	callq  *%rax$/;"	l
ffff800000106188	kernel.asm	/^ffff800000106188:	48 b8 c8 8c 11 00 00 	movabs $0xffff800000118cc8,%rax$/;"	l
ffff80000010618f	kernel.asm	/^ffff80000010618f:	80 ff ff $/;"	l
ffff800000106192	kernel.asm	/^ffff800000106192:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff800000106196	kernel.asm	/^ffff800000106196:	eb 13                	jmp    ffff8000001061ab <allocproc+0x41>$/;"	l
ffff800000106198	kernel.asm	/^ffff800000106198:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010619c	kernel.asm	/^ffff80000010619c:	8b 40 18             	mov    0x18(%rax),%eax$/;"	l
ffff80000010619f	kernel.asm	/^ffff80000010619f:	85 c0                	test   %eax,%eax$/;"	l
ffff8000001061a1	kernel.asm	/^ffff8000001061a1:	74 38                	je     ffff8000001061db <allocproc+0x71>$/;"	l
ffff8000001061a3	kernel.asm	/^ffff8000001061a3:	48 81 45 f8 e0 00 00 	addq   $0xe0,-0x8(%rbp)$/;"	l
ffff8000001061aa	kernel.asm	/^ffff8000001061aa:	00 $/;"	l
ffff8000001061ab	kernel.asm	/^ffff8000001061ab:	48 b8 c8 c4 11 00 00 	movabs $0xffff80000011c4c8,%rax$/;"	l
ffff8000001061b2	kernel.asm	/^ffff8000001061b2:	80 ff ff $/;"	l
ffff8000001061b5	kernel.asm	/^ffff8000001061b5:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)$/;"	l
ffff8000001061b9	kernel.asm	/^ffff8000001061b9:	72 dd                	jb     ffff800000106198 <allocproc+0x2e>$/;"	l
ffff8000001061bb	kernel.asm	/^ffff8000001061bb:	48 bf 60 8c 11 00 00 	movabs $0xffff800000118c60,%rdi$/;"	l
ffff8000001061c2	kernel.asm	/^ffff8000001061c2:	80 ff ff $/;"	l
ffff8000001061c5	kernel.asm	/^ffff8000001061c5:	48 b8 9a 79 10 00 00 	movabs $0xffff80000010799a,%rax$/;"	l
ffff8000001061cc	kernel.asm	/^ffff8000001061cc:	80 ff ff $/;"	l
ffff8000001061cf	kernel.asm	/^ffff8000001061cf:	ff d0                	callq  *%rax$/;"	l
ffff8000001061d1	kernel.asm	/^ffff8000001061d1:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff8000001061d6	kernel.asm	/^ffff8000001061d6:	e9 05 01 00 00       	jmpq   ffff8000001062e0 <allocproc+0x176>$/;"	l
ffff8000001061db	kernel.asm	/^ffff8000001061db:	90                   	nop$/;"	l
ffff8000001061dc	kernel.asm	/^ffff8000001061dc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001061e0	kernel.asm	/^ffff8000001061e0:	c7 40 18 01 00 00 00 	movl   $0x1,0x18(%rax)$/;"	l
ffff8000001061e7	kernel.asm	/^ffff8000001061e7:	48 b8 60 d5 10 00 00 	movabs $0xffff80000010d560,%rax$/;"	l
ffff8000001061ee	kernel.asm	/^ffff8000001061ee:	80 ff ff $/;"	l
ffff8000001061f1	kernel.asm	/^ffff8000001061f1:	8b 00                	mov    (%rax),%eax$/;"	l
ffff8000001061f3	kernel.asm	/^ffff8000001061f3:	8d 48 01             	lea    0x1(%rax),%ecx$/;"	l
ffff8000001061f6	kernel.asm	/^ffff8000001061f6:	48 ba 60 d5 10 00 00 	movabs $0xffff80000010d560,%rdx$/;"	l
ffff8000001061fd	kernel.asm	/^ffff8000001061fd:	80 ff ff $/;"	l
ffff800000106200	kernel.asm	/^ffff800000106200:	89 0a                	mov    %ecx,(%rdx)$/;"	l
ffff800000106202	kernel.asm	/^ffff800000106202:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx$/;"	l
ffff800000106206	kernel.asm	/^ffff800000106206:	89 42 1c             	mov    %eax,0x1c(%rdx)$/;"	l
ffff800000106209	kernel.asm	/^ffff800000106209:	48 bf 60 8c 11 00 00 	movabs $0xffff800000118c60,%rdi$/;"	l
ffff800000106210	kernel.asm	/^ffff800000106210:	80 ff ff $/;"	l
ffff800000106213	kernel.asm	/^ffff800000106213:	48 b8 9a 79 10 00 00 	movabs $0xffff80000010799a,%rax$/;"	l
ffff80000010621a	kernel.asm	/^ffff80000010621a:	80 ff ff $/;"	l
ffff80000010621d	kernel.asm	/^ffff80000010621d:	ff d0                	callq  *%rax$/;"	l
ffff80000010621f	kernel.asm	/^ffff80000010621f:	48 b8 95 41 10 00 00 	movabs $0xffff800000104195,%rax$/;"	l
ffff800000106226	kernel.asm	/^ffff800000106226:	80 ff ff $/;"	l
ffff800000106229	kernel.asm	/^ffff800000106229:	ff d0                	callq  *%rax$/;"	l
ffff80000010622b	kernel.asm	/^ffff80000010622b:	48 89 c2             	mov    %rax,%rdx$/;"	l
ffff80000010622e	kernel.asm	/^ffff80000010622e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000106232	kernel.asm	/^ffff800000106232:	48 89 50 10          	mov    %rdx,0x10(%rax)$/;"	l
ffff800000106236	kernel.asm	/^ffff800000106236:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010623a	kernel.asm	/^ffff80000010623a:	48 8b 40 10          	mov    0x10(%rax),%rax$/;"	l
ffff80000010623e	kernel.asm	/^ffff80000010623e:	48 85 c0             	test   %rax,%rax$/;"	l
ffff800000106241	kernel.asm	/^ffff800000106241:	75 15                	jne    ffff800000106258 <allocproc+0xee>$/;"	l
ffff800000106243	kernel.asm	/^ffff800000106243:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000106247	kernel.asm	/^ffff800000106247:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%rax)$/;"	l
ffff80000010624e	kernel.asm	/^ffff80000010624e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000106253	kernel.asm	/^ffff800000106253:	e9 88 00 00 00       	jmpq   ffff8000001062e0 <allocproc+0x176>$/;"	l
ffff800000106258	kernel.asm	/^ffff800000106258:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010625c	kernel.asm	/^ffff80000010625c:	48 8b 40 10          	mov    0x10(%rax),%rax$/;"	l
ffff800000106260	kernel.asm	/^ffff800000106260:	48 05 00 10 00 00    	add    $0x1000,%rax$/;"	l
ffff800000106266	kernel.asm	/^ffff800000106266:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ffff80000010626a	kernel.asm	/^ffff80000010626a:	48 81 6d f0 b0 00 00 	subq   $0xb0,-0x10(%rbp)$/;"	l
ffff800000106271	kernel.asm	/^ffff800000106271:	00 $/;"	l
ffff800000106272	kernel.asm	/^ffff800000106272:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000106276	kernel.asm	/^ffff800000106276:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
ffff80000010627a	kernel.asm	/^ffff80000010627a:	48 89 50 28          	mov    %rdx,0x28(%rax)$/;"	l
ffff80000010627e	kernel.asm	/^ffff80000010627e:	48 83 6d f0 08       	subq   $0x8,-0x10(%rbp)$/;"	l
ffff800000106283	kernel.asm	/^ffff800000106283:	48 ba b9 99 10 00 00 	movabs $0xffff8000001099b9,%rdx$/;"	l
ffff80000010628a	kernel.asm	/^ffff80000010628a:	80 ff ff $/;"	l
ffff80000010628d	kernel.asm	/^ffff80000010628d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000106291	kernel.asm	/^ffff800000106291:	48 89 10             	mov    %rdx,(%rax)$/;"	l
ffff800000106294	kernel.asm	/^ffff800000106294:	48 83 6d f0 40       	subq   $0x40,-0x10(%rbp)$/;"	l
ffff800000106299	kernel.asm	/^ffff800000106299:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010629d	kernel.asm	/^ffff80000010629d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
ffff8000001062a1	kernel.asm	/^ffff8000001062a1:	48 89 50 30          	mov    %rdx,0x30(%rax)$/;"	l
ffff8000001062a5	kernel.asm	/^ffff8000001062a5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001062a9	kernel.asm	/^ffff8000001062a9:	48 8b 40 30          	mov    0x30(%rax),%rax$/;"	l
ffff8000001062ad	kernel.asm	/^ffff8000001062ad:	ba 40 00 00 00       	mov    $0x40,%edx$/;"	l
ffff8000001062b2	kernel.asm	/^ffff8000001062b2:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffff8000001062b7	kernel.asm	/^ffff8000001062b7:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001062ba	kernel.asm	/^ffff8000001062ba:	48 b8 9d 7c 10 00 00 	movabs $0xffff800000107c9d,%rax$/;"	l
ffff8000001062c1	kernel.asm	/^ffff8000001062c1:	80 ff ff $/;"	l
ffff8000001062c4	kernel.asm	/^ffff8000001062c4:	ff d0                	callq  *%rax$/;"	l
ffff8000001062c6	kernel.asm	/^ffff8000001062c6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001062ca	kernel.asm	/^ffff8000001062ca:	48 8b 40 30          	mov    0x30(%rax),%rax$/;"	l
ffff8000001062ce	kernel.asm	/^ffff8000001062ce:	48 ba 52 6d 10 00 00 	movabs $0xffff800000106d52,%rdx$/;"	l
ffff8000001062d5	kernel.asm	/^ffff8000001062d5:	80 ff ff $/;"	l
ffff8000001062d8	kernel.asm	/^ffff8000001062d8:	48 89 50 38          	mov    %rdx,0x38(%rax)$/;"	l
ffff8000001062dc	kernel.asm	/^ffff8000001062dc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001062e0	kernel.asm	/^ffff8000001062e0:	c9                   	leaveq $/;"	l
ffff8000001062e1	kernel.asm	/^ffff8000001062e1:	c3                   	retq   $/;"	l
ffff8000001062e2	kernel.asm	/^ffff8000001062e2 <userinit>:$/;"	l
ffff8000001062e2	kernel.asm	/^ffff8000001062e2:	55                   	push   %rbp$/;"	l
ffff8000001062e3	kernel.asm	/^ffff8000001062e3:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff8000001062e6	kernel.asm	/^ffff8000001062e6:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff8000001062ea	kernel.asm	/^ffff8000001062ea:	48 b8 6a 61 10 00 00 	movabs $0xffff80000010616a,%rax$/;"	l
ffff8000001062f1	kernel.asm	/^ffff8000001062f1:	80 ff ff $/;"	l
ffff8000001062f4	kernel.asm	/^ffff8000001062f4:	ff d0                	callq  *%rax$/;"	l
ffff8000001062f6	kernel.asm	/^ffff8000001062f6:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff8000001062fa	kernel.asm	/^ffff8000001062fa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001062fe	kernel.asm	/^ffff8000001062fe:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx$/;"	l
ffff800000106302	kernel.asm	/^ffff800000106302:	48 89 50 20          	mov    %rdx,0x20(%rax)$/;"	l
ffff800000106306	kernel.asm	/^ffff800000106306:	48 b8 c8 c4 11 00 00 	movabs $0xffff80000011c4c8,%rax$/;"	l
ffff80000010630d	kernel.asm	/^ffff80000010630d:	80 ff ff $/;"	l
ffff800000106310	kernel.asm	/^ffff800000106310:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx$/;"	l
ffff800000106314	kernel.asm	/^ffff800000106314:	48 89 10             	mov    %rdx,(%rax)$/;"	l
ffff800000106317	kernel.asm	/^ffff800000106317:	48 b8 e5 b2 10 00 00 	movabs $0xffff80000010b2e5,%rax$/;"	l
ffff80000010631e	kernel.asm	/^ffff80000010631e:	80 ff ff $/;"	l
ffff800000106321	kernel.asm	/^ffff800000106321:	ff d0                	callq  *%rax$/;"	l
ffff800000106323	kernel.asm	/^ffff800000106323:	48 89 c2             	mov    %rax,%rdx$/;"	l
ffff800000106326	kernel.asm	/^ffff800000106326:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010632a	kernel.asm	/^ffff80000010632a:	48 89 50 08          	mov    %rdx,0x8(%rax)$/;"	l
ffff80000010632e	kernel.asm	/^ffff80000010632e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000106332	kernel.asm	/^ffff800000106332:	48 8b 40 08          	mov    0x8(%rax),%rax$/;"	l
ffff800000106336	kernel.asm	/^ffff800000106336:	48 85 c0             	test   %rax,%rax$/;"	l
ffff800000106339	kernel.asm	/^ffff800000106339:	75 16                	jne    ffff800000106351 <userinit+0x6f>$/;"	l
ffff80000010633b	kernel.asm	/^ffff80000010633b:	48 bf 4c c5 10 00 00 	movabs $0xffff80000010c54c,%rdi$/;"	l
ffff800000106342	kernel.asm	/^ffff800000106342:	80 ff ff $/;"	l
ffff800000106345	kernel.asm	/^ffff800000106345:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff80000010634c	kernel.asm	/^ffff80000010634c:	80 ff ff $/;"	l
ffff80000010634f	kernel.asm	/^ffff80000010634f:	ff d0                	callq  *%rax$/;"	l
ffff800000106351	kernel.asm	/^ffff800000106351:	48 b8 3c 00 00 00 00 	movabs $0x3c,%rax$/;"	l
ffff800000106358	kernel.asm	/^ffff800000106358:	00 00 00 $/;"	l
ffff80000010635b	kernel.asm	/^ffff80000010635b:	89 c2                	mov    %eax,%edx$/;"	l
ffff80000010635d	kernel.asm	/^ffff80000010635d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000106361	kernel.asm	/^ffff800000106361:	48 8b 40 08          	mov    0x8(%rax),%rax$/;"	l
ffff800000106365	kernel.asm	/^ffff800000106365:	48 be d8 e2 10 00 00 	movabs $0xffff80000010e2d8,%rsi$/;"	l
ffff80000010636c	kernel.asm	/^ffff80000010636c:	80 ff ff $/;"	l
ffff80000010636f	kernel.asm	/^ffff80000010636f:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000106372	kernel.asm	/^ffff800000106372:	48 b8 65 b8 10 00 00 	movabs $0xffff80000010b865,%rax$/;"	l
ffff800000106379	kernel.asm	/^ffff800000106379:	80 ff ff $/;"	l
ffff80000010637c	kernel.asm	/^ffff80000010637c:	ff d0                	callq  *%rax$/;"	l
ffff80000010637e	kernel.asm	/^ffff80000010637e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000106382	kernel.asm	/^ffff800000106382:	48 c7 00 00 10 00 00 	movq   $0x1000,(%rax)$/;"	l
ffff800000106389	kernel.asm	/^ffff800000106389:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010638d	kernel.asm	/^ffff80000010638d:	48 8b 40 28          	mov    0x28(%rax),%rax$/;"	l
ffff800000106391	kernel.asm	/^ffff800000106391:	ba b0 00 00 00       	mov    $0xb0,%edx$/;"	l
ffff800000106396	kernel.asm	/^ffff800000106396:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffff80000010639b	kernel.asm	/^ffff80000010639b:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010639e	kernel.asm	/^ffff80000010639e:	48 b8 9d 7c 10 00 00 	movabs $0xffff800000107c9d,%rax$/;"	l
ffff8000001063a5	kernel.asm	/^ffff8000001063a5:	80 ff ff $/;"	l
ffff8000001063a8	kernel.asm	/^ffff8000001063a8:	ff d0                	callq  *%rax$/;"	l
ffff8000001063aa	kernel.asm	/^ffff8000001063aa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001063ae	kernel.asm	/^ffff8000001063ae:	48 8b 40 28          	mov    0x28(%rax),%rax$/;"	l
ffff8000001063b2	kernel.asm	/^ffff8000001063b2:	48 c7 80 90 00 00 00 	movq   $0x2b,0x90(%rax)$/;"	l
ffff8000001063b9	kernel.asm	/^ffff8000001063b9:	2b 00 00 00 $/;"	l
ffff8000001063bd	kernel.asm	/^ffff8000001063bd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001063c1	kernel.asm	/^ffff8000001063c1:	48 8b 40 28          	mov    0x28(%rax),%rax$/;"	l
ffff8000001063c5	kernel.asm	/^ffff8000001063c5:	48 c7 80 a8 00 00 00 	movq   $0x23,0xa8(%rax)$/;"	l
ffff8000001063cc	kernel.asm	/^ffff8000001063cc:	23 00 00 00 $/;"	l
ffff8000001063d0	kernel.asm	/^ffff8000001063d0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001063d4	kernel.asm	/^ffff8000001063d4:	48 8b 40 28          	mov    0x28(%rax),%rax$/;"	l
ffff8000001063d8	kernel.asm	/^ffff8000001063d8:	48 c7 40 50 00 02 00 	movq   $0x200,0x50(%rax)$/;"	l
ffff8000001063df	kernel.asm	/^ffff8000001063df:	00 $/;"	l
ffff8000001063e0	kernel.asm	/^ffff8000001063e0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001063e4	kernel.asm	/^ffff8000001063e4:	48 8b 40 28          	mov    0x28(%rax),%rax$/;"	l
ffff8000001063e8	kernel.asm	/^ffff8000001063e8:	48 c7 80 a0 00 00 00 	movq   $0x1000,0xa0(%rax)$/;"	l
ffff8000001063ef	kernel.asm	/^ffff8000001063ef:	00 10 00 00 $/;"	l
ffff8000001063f3	kernel.asm	/^ffff8000001063f3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001063f7	kernel.asm	/^ffff8000001063f7:	48 8b 40 28          	mov    0x28(%rax),%rax$/;"	l
ffff8000001063fb	kernel.asm	/^ffff8000001063fb:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)$/;"	l
ffff800000106402	kernel.asm	/^ffff800000106402:	00 $/;"	l
ffff800000106403	kernel.asm	/^ffff800000106403:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000106407	kernel.asm	/^ffff800000106407:	48 05 d0 00 00 00    	add    $0xd0,%rax$/;"	l
ffff80000010640d	kernel.asm	/^ffff80000010640d:	ba 10 00 00 00       	mov    $0x10,%edx$/;"	l
ffff800000106412	kernel.asm	/^ffff800000106412:	48 be 65 c5 10 00 00 	movabs $0xffff80000010c565,%rsi$/;"	l
ffff800000106419	kernel.asm	/^ffff800000106419:	80 ff ff $/;"	l
ffff80000010641c	kernel.asm	/^ffff80000010641c:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010641f	kernel.asm	/^ffff80000010641f:	48 b8 4d 7f 10 00 00 	movabs $0xffff800000107f4d,%rax$/;"	l
ffff800000106426	kernel.asm	/^ffff800000106426:	80 ff ff $/;"	l
ffff800000106429	kernel.asm	/^ffff800000106429:	ff d0                	callq  *%rax$/;"	l
ffff80000010642b	kernel.asm	/^ffff80000010642b:	48 bf 6e c5 10 00 00 	movabs $0xffff80000010c56e,%rdi$/;"	l
ffff800000106432	kernel.asm	/^ffff800000106432:	80 ff ff $/;"	l
ffff800000106435	kernel.asm	/^ffff800000106435:	48 b8 b0 37 10 00 00 	movabs $0xffff8000001037b0,%rax$/;"	l
ffff80000010643c	kernel.asm	/^ffff80000010643c:	80 ff ff $/;"	l
ffff80000010643f	kernel.asm	/^ffff80000010643f:	ff d0                	callq  *%rax$/;"	l
ffff800000106441	kernel.asm	/^ffff800000106441:	48 89 c2             	mov    %rax,%rdx$/;"	l
ffff800000106444	kernel.asm	/^ffff800000106444:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000106448	kernel.asm	/^ffff800000106448:	48 89 90 c8 00 00 00 	mov    %rdx,0xc8(%rax)$/;"	l
ffff80000010644f	kernel.asm	/^ffff80000010644f:	48 bf 60 8c 11 00 00 	movabs $0xffff800000118c60,%rdi$/;"	l
ffff800000106456	kernel.asm	/^ffff800000106456:	80 ff ff $/;"	l
ffff800000106459	kernel.asm	/^ffff800000106459:	48 b8 01 79 10 00 00 	movabs $0xffff800000107901,%rax$/;"	l
ffff800000106460	kernel.asm	/^ffff800000106460:	80 ff ff $/;"	l
ffff800000106463	kernel.asm	/^ffff800000106463:	ff d0                	callq  *%rax$/;"	l
ffff800000106465	kernel.asm	/^ffff800000106465:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000106469	kernel.asm	/^ffff800000106469:	c7 40 18 03 00 00 00 	movl   $0x3,0x18(%rax)$/;"	l
ffff800000106470	kernel.asm	/^ffff800000106470:	48 bf 60 8c 11 00 00 	movabs $0xffff800000118c60,%rdi$/;"	l
ffff800000106477	kernel.asm	/^ffff800000106477:	80 ff ff $/;"	l
ffff80000010647a	kernel.asm	/^ffff80000010647a:	48 b8 9a 79 10 00 00 	movabs $0xffff80000010799a,%rax$/;"	l
ffff800000106481	kernel.asm	/^ffff800000106481:	80 ff ff $/;"	l
ffff800000106484	kernel.asm	/^ffff800000106484:	ff d0                	callq  *%rax$/;"	l
ffff800000106486	kernel.asm	/^ffff800000106486:	90                   	nop$/;"	l
ffff800000106487	kernel.asm	/^ffff800000106487:	c9                   	leaveq $/;"	l
ffff800000106488	kernel.asm	/^ffff800000106488:	c3                   	retq   $/;"	l
ffff800000106489	kernel.asm	/^ffff800000106489 <growproc>:$/;"	l
ffff800000106489	kernel.asm	/^ffff800000106489:	55                   	push   %rbp$/;"	l
ffff80000010648a	kernel.asm	/^ffff80000010648a:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010648d	kernel.asm	/^ffff80000010648d:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ffff800000106491	kernel.asm	/^ffff800000106491:	89 7d ec             	mov    %edi,-0x14(%rbp)$/;"	l
ffff800000106494	kernel.asm	/^ffff800000106494:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff80000010649b	kernel.asm	/^ffff80000010649b:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff80000010649f	kernel.asm	/^ffff80000010649f:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff8000001064a2	kernel.asm	/^ffff8000001064a2:	89 45 fc             	mov    %eax,-0x4(%rbp)$/;"	l
ffff8000001064a5	kernel.asm	/^ffff8000001064a5:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)$/;"	l
ffff8000001064a9	kernel.asm	/^ffff8000001064a9:	7e 3b                	jle    ffff8000001064e6 <growproc+0x5d>$/;"	l
ffff8000001064ab	kernel.asm	/^ffff8000001064ab:	8b 55 ec             	mov    -0x14(%rbp),%edx$/;"	l
ffff8000001064ae	kernel.asm	/^ffff8000001064ae:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff8000001064b1	kernel.asm	/^ffff8000001064b1:	01 c2                	add    %eax,%edx$/;"	l
ffff8000001064b3	kernel.asm	/^ffff8000001064b3:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff8000001064ba	kernel.asm	/^ffff8000001064ba:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff8000001064be	kernel.asm	/^ffff8000001064be:	48 8b 40 08          	mov    0x8(%rax),%rax$/;"	l
ffff8000001064c2	kernel.asm	/^ffff8000001064c2:	8b 4d fc             	mov    -0x4(%rbp),%ecx$/;"	l
ffff8000001064c5	kernel.asm	/^ffff8000001064c5:	89 ce                	mov    %ecx,%esi$/;"	l
ffff8000001064c7	kernel.asm	/^ffff8000001064c7:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001064ca	kernel.asm	/^ffff8000001064ca:	48 b8 3f ba 10 00 00 	movabs $0xffff80000010ba3f,%rax$/;"	l
ffff8000001064d1	kernel.asm	/^ffff8000001064d1:	80 ff ff $/;"	l
ffff8000001064d4	kernel.asm	/^ffff8000001064d4:	ff d0                	callq  *%rax$/;"	l
ffff8000001064d6	kernel.asm	/^ffff8000001064d6:	89 45 fc             	mov    %eax,-0x4(%rbp)$/;"	l
ffff8000001064d9	kernel.asm	/^ffff8000001064d9:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)$/;"	l
ffff8000001064dd	kernel.asm	/^ffff8000001064dd:	75 4b                	jne    ffff80000010652a <growproc+0xa1>$/;"	l
ffff8000001064df	kernel.asm	/^ffff8000001064df:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff8000001064e4	kernel.asm	/^ffff8000001064e4:	eb 74                	jmp    ffff80000010655a <growproc+0xd1>$/;"	l
ffff8000001064e6	kernel.asm	/^ffff8000001064e6:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)$/;"	l
ffff8000001064ea	kernel.asm	/^ffff8000001064ea:	79 3e                	jns    ffff80000010652a <growproc+0xa1>$/;"	l
ffff8000001064ec	kernel.asm	/^ffff8000001064ec:	8b 55 ec             	mov    -0x14(%rbp),%edx$/;"	l
ffff8000001064ef	kernel.asm	/^ffff8000001064ef:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff8000001064f2	kernel.asm	/^ffff8000001064f2:	01 d0                	add    %edx,%eax$/;"	l
ffff8000001064f4	kernel.asm	/^ffff8000001064f4:	89 c2                	mov    %eax,%edx$/;"	l
ffff8000001064f6	kernel.asm	/^ffff8000001064f6:	8b 4d fc             	mov    -0x4(%rbp),%ecx$/;"	l
ffff8000001064f9	kernel.asm	/^ffff8000001064f9:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000106500	kernel.asm	/^ffff800000106500:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000106504	kernel.asm	/^ffff800000106504:	48 8b 40 08          	mov    0x8(%rax),%rax$/;"	l
ffff800000106508	kernel.asm	/^ffff800000106508:	48 89 ce             	mov    %rcx,%rsi$/;"	l
ffff80000010650b	kernel.asm	/^ffff80000010650b:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010650e	kernel.asm	/^ffff80000010650e:	48 b8 93 bb 10 00 00 	movabs $0xffff80000010bb93,%rax$/;"	l
ffff800000106515	kernel.asm	/^ffff800000106515:	80 ff ff $/;"	l
ffff800000106518	kernel.asm	/^ffff800000106518:	ff d0                	callq  *%rax$/;"	l
ffff80000010651a	kernel.asm	/^ffff80000010651a:	89 45 fc             	mov    %eax,-0x4(%rbp)$/;"	l
ffff80000010651d	kernel.asm	/^ffff80000010651d:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)$/;"	l
ffff800000106521	kernel.asm	/^ffff800000106521:	75 07                	jne    ffff80000010652a <growproc+0xa1>$/;"	l
ffff800000106523	kernel.asm	/^ffff800000106523:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff800000106528	kernel.asm	/^ffff800000106528:	eb 30                	jmp    ffff80000010655a <growproc+0xd1>$/;"	l
ffff80000010652a	kernel.asm	/^ffff80000010652a:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000106531	kernel.asm	/^ffff800000106531:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000106535	kernel.asm	/^ffff800000106535:	8b 55 fc             	mov    -0x4(%rbp),%edx$/;"	l
ffff800000106538	kernel.asm	/^ffff800000106538:	48 89 10             	mov    %rdx,(%rax)$/;"	l
ffff80000010653b	kernel.asm	/^ffff80000010653b:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000106542	kernel.asm	/^ffff800000106542:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000106546	kernel.asm	/^ffff800000106546:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000106549	kernel.asm	/^ffff800000106549:	48 b8 8b b4 10 00 00 	movabs $0xffff80000010b48b,%rax$/;"	l
ffff800000106550	kernel.asm	/^ffff800000106550:	80 ff ff $/;"	l
ffff800000106553	kernel.asm	/^ffff800000106553:	ff d0                	callq  *%rax$/;"	l
ffff800000106555	kernel.asm	/^ffff800000106555:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff80000010655a	kernel.asm	/^ffff80000010655a:	c9                   	leaveq $/;"	l
ffff80000010655b	kernel.asm	/^ffff80000010655b:	c3                   	retq   $/;"	l
ffff80000010655c	kernel.asm	/^ffff80000010655c <fork>:$/;"	l
ffff80000010655c	kernel.asm	/^ffff80000010655c:	55                   	push   %rbp$/;"	l
ffff80000010655d	kernel.asm	/^ffff80000010655d:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000106560	kernel.asm	/^ffff800000106560:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ffff800000106564	kernel.asm	/^ffff800000106564:	48 b8 6a 61 10 00 00 	movabs $0xffff80000010616a,%rax$/;"	l
ffff80000010656b	kernel.asm	/^ffff80000010656b:	80 ff ff $/;"	l
ffff80000010656e	kernel.asm	/^ffff80000010656e:	ff d0                	callq  *%rax$/;"	l
ffff800000106570	kernel.asm	/^ffff800000106570:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ffff800000106574	kernel.asm	/^ffff800000106574:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)$/;"	l
ffff800000106579	kernel.asm	/^ffff800000106579:	75 0a                	jne    ffff800000106585 <fork+0x29>$/;"	l
ffff80000010657b	kernel.asm	/^ffff80000010657b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff800000106580	kernel.asm	/^ffff800000106580:	e9 f6 01 00 00       	jmpq   ffff80000010677b <fork+0x21f>$/;"	l
ffff800000106585	kernel.asm	/^ffff800000106585:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff80000010658c	kernel.asm	/^ffff80000010658c:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000106590	kernel.asm	/^ffff800000106590:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff800000106593	kernel.asm	/^ffff800000106593:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000106595	kernel.asm	/^ffff800000106595:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff80000010659c	kernel.asm	/^ffff80000010659c:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff8000001065a0	kernel.asm	/^ffff8000001065a0:	48 8b 40 08          	mov    0x8(%rax),%rax$/;"	l
ffff8000001065a4	kernel.asm	/^ffff8000001065a4:	89 d6                	mov    %edx,%esi$/;"	l
ffff8000001065a6	kernel.asm	/^ffff8000001065a6:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001065a9	kernel.asm	/^ffff8000001065a9:	48 b8 25 bf 10 00 00 	movabs $0xffff80000010bf25,%rax$/;"	l
ffff8000001065b0	kernel.asm	/^ffff8000001065b0:	80 ff ff $/;"	l
ffff8000001065b3	kernel.asm	/^ffff8000001065b3:	ff d0                	callq  *%rax$/;"	l
ffff8000001065b5	kernel.asm	/^ffff8000001065b5:	48 89 c2             	mov    %rax,%rdx$/;"	l
ffff8000001065b8	kernel.asm	/^ffff8000001065b8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff8000001065bc	kernel.asm	/^ffff8000001065bc:	48 89 50 08          	mov    %rdx,0x8(%rax)$/;"	l
ffff8000001065c0	kernel.asm	/^ffff8000001065c0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff8000001065c4	kernel.asm	/^ffff8000001065c4:	48 8b 40 08          	mov    0x8(%rax),%rax$/;"	l
ffff8000001065c8	kernel.asm	/^ffff8000001065c8:	48 85 c0             	test   %rax,%rax$/;"	l
ffff8000001065cb	kernel.asm	/^ffff8000001065cb:	75 38                	jne    ffff800000106605 <fork+0xa9>$/;"	l
ffff8000001065cd	kernel.asm	/^ffff8000001065cd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff8000001065d1	kernel.asm	/^ffff8000001065d1:	48 8b 40 10          	mov    0x10(%rax),%rax$/;"	l
ffff8000001065d5	kernel.asm	/^ffff8000001065d5:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001065d8	kernel.asm	/^ffff8000001065d8:	48 b8 9f 40 10 00 00 	movabs $0xffff80000010409f,%rax$/;"	l
ffff8000001065df	kernel.asm	/^ffff8000001065df:	80 ff ff $/;"	l
ffff8000001065e2	kernel.asm	/^ffff8000001065e2:	ff d0                	callq  *%rax$/;"	l
ffff8000001065e4	kernel.asm	/^ffff8000001065e4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff8000001065e8	kernel.asm	/^ffff8000001065e8:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)$/;"	l
ffff8000001065ef	kernel.asm	/^ffff8000001065ef:	00 $/;"	l
ffff8000001065f0	kernel.asm	/^ffff8000001065f0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff8000001065f4	kernel.asm	/^ffff8000001065f4:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%rax)$/;"	l
ffff8000001065fb	kernel.asm	/^ffff8000001065fb:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff800000106600	kernel.asm	/^ffff800000106600:	e9 76 01 00 00       	jmpq   ffff80000010677b <fork+0x21f>$/;"	l
ffff800000106605	kernel.asm	/^ffff800000106605:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff80000010660c	kernel.asm	/^ffff80000010660c:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000106610	kernel.asm	/^ffff800000106610:	48 8b 10             	mov    (%rax),%rdx$/;"	l
ffff800000106613	kernel.asm	/^ffff800000106613:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000106617	kernel.asm	/^ffff800000106617:	48 89 10             	mov    %rdx,(%rax)$/;"	l
ffff80000010661a	kernel.asm	/^ffff80000010661a:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000106621	kernel.asm	/^ffff800000106621:	64 48 8b 10          	mov    %fs:(%rax),%rdx$/;"	l
ffff800000106625	kernel.asm	/^ffff800000106625:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000106629	kernel.asm	/^ffff800000106629:	48 89 50 20          	mov    %rdx,0x20(%rax)$/;"	l
ffff80000010662d	kernel.asm	/^ffff80000010662d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000106631	kernel.asm	/^ffff800000106631:	48 8b 50 28          	mov    0x28(%rax),%rdx$/;"	l
ffff800000106635	kernel.asm	/^ffff800000106635:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff80000010663c	kernel.asm	/^ffff80000010663c:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000106640	kernel.asm	/^ffff800000106640:	48 8b 40 28          	mov    0x28(%rax),%rax$/;"	l
ffff800000106644	kernel.asm	/^ffff800000106644:	48 89 c6             	mov    %rax,%rsi$/;"	l
ffff800000106647	kernel.asm	/^ffff800000106647:	b8 16 00 00 00       	mov    $0x16,%eax$/;"	l
ffff80000010664c	kernel.asm	/^ffff80000010664c:	48 89 d7             	mov    %rdx,%rdi$/;"	l
ffff80000010664f	kernel.asm	/^ffff80000010664f:	48 89 c1             	mov    %rax,%rcx$/;"	l
ffff800000106652	kernel.asm	/^ffff800000106652:	f3 48 a5             	rep movsq %ds:(%rsi),%es:(%rdi)$/;"	l
ffff800000106655	kernel.asm	/^ffff800000106655:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000106659	kernel.asm	/^ffff800000106659:	48 8b 40 28          	mov    0x28(%rax),%rax$/;"	l
ffff80000010665d	kernel.asm	/^ffff80000010665d:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)$/;"	l
ffff800000106664	kernel.asm	/^ffff800000106664:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)$/;"	l
ffff80000010666b	kernel.asm	/^ffff80000010666b:	eb 62                	jmp    ffff8000001066cf <fork+0x173>$/;"	l
ffff80000010666d	kernel.asm	/^ffff80000010666d:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000106674	kernel.asm	/^ffff800000106674:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000106678	kernel.asm	/^ffff800000106678:	8b 55 fc             	mov    -0x4(%rbp),%edx$/;"	l
ffff80000010667b	kernel.asm	/^ffff80000010667b:	48 63 d2             	movslq %edx,%rdx$/;"	l
ffff80000010667e	kernel.asm	/^ffff80000010667e:	48 83 c2 08          	add    $0x8,%rdx$/;"	l
ffff800000106682	kernel.asm	/^ffff800000106682:	48 8b 44 d0 08       	mov    0x8(%rax,%rdx,8),%rax$/;"	l
ffff800000106687	kernel.asm	/^ffff800000106687:	48 85 c0             	test   %rax,%rax$/;"	l
ffff80000010668a	kernel.asm	/^ffff80000010668a:	74 3f                	je     ffff8000001066cb <fork+0x16f>$/;"	l
ffff80000010668c	kernel.asm	/^ffff80000010668c:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000106693	kernel.asm	/^ffff800000106693:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000106697	kernel.asm	/^ffff800000106697:	8b 55 fc             	mov    -0x4(%rbp),%edx$/;"	l
ffff80000010669a	kernel.asm	/^ffff80000010669a:	48 63 d2             	movslq %edx,%rdx$/;"	l
ffff80000010669d	kernel.asm	/^ffff80000010669d:	48 83 c2 08          	add    $0x8,%rdx$/;"	l
ffff8000001066a1	kernel.asm	/^ffff8000001066a1:	48 8b 44 d0 08       	mov    0x8(%rax,%rdx,8),%rax$/;"	l
ffff8000001066a6	kernel.asm	/^ffff8000001066a6:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001066a9	kernel.asm	/^ffff8000001066a9:	48 b8 36 1b 10 00 00 	movabs $0xffff800000101b36,%rax$/;"	l
ffff8000001066b0	kernel.asm	/^ffff8000001066b0:	80 ff ff $/;"	l
ffff8000001066b3	kernel.asm	/^ffff8000001066b3:	ff d0                	callq  *%rax$/;"	l
ffff8000001066b5	kernel.asm	/^ffff8000001066b5:	48 89 c1             	mov    %rax,%rcx$/;"	l
ffff8000001066b8	kernel.asm	/^ffff8000001066b8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff8000001066bc	kernel.asm	/^ffff8000001066bc:	8b 55 fc             	mov    -0x4(%rbp),%edx$/;"	l
ffff8000001066bf	kernel.asm	/^ffff8000001066bf:	48 63 d2             	movslq %edx,%rdx$/;"	l
ffff8000001066c2	kernel.asm	/^ffff8000001066c2:	48 83 c2 08          	add    $0x8,%rdx$/;"	l
ffff8000001066c6	kernel.asm	/^ffff8000001066c6:	48 89 4c d0 08       	mov    %rcx,0x8(%rax,%rdx,8)$/;"	l
ffff8000001066cb	kernel.asm	/^ffff8000001066cb:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)$/;"	l
ffff8000001066cf	kernel.asm	/^ffff8000001066cf:	83 7d fc 0f          	cmpl   $0xf,-0x4(%rbp)$/;"	l
ffff8000001066d3	kernel.asm	/^ffff8000001066d3:	7e 98                	jle    ffff80000010666d <fork+0x111>$/;"	l
ffff8000001066d5	kernel.asm	/^ffff8000001066d5:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff8000001066dc	kernel.asm	/^ffff8000001066dc:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff8000001066e0	kernel.asm	/^ffff8000001066e0:	48 8b 80 c8 00 00 00 	mov    0xc8(%rax),%rax$/;"	l
ffff8000001066e7	kernel.asm	/^ffff8000001066e7:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001066ea	kernel.asm	/^ffff8000001066ea:	48 b8 ce 27 10 00 00 	movabs $0xffff8000001027ce,%rax$/;"	l
ffff8000001066f1	kernel.asm	/^ffff8000001066f1:	80 ff ff $/;"	l
ffff8000001066f4	kernel.asm	/^ffff8000001066f4:	ff d0                	callq  *%rax$/;"	l
ffff8000001066f6	kernel.asm	/^ffff8000001066f6:	48 89 c2             	mov    %rax,%rdx$/;"	l
ffff8000001066f9	kernel.asm	/^ffff8000001066f9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff8000001066fd	kernel.asm	/^ffff8000001066fd:	48 89 90 c8 00 00 00 	mov    %rdx,0xc8(%rax)$/;"	l
ffff800000106704	kernel.asm	/^ffff800000106704:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff80000010670b	kernel.asm	/^ffff80000010670b:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff80000010670f	kernel.asm	/^ffff80000010670f:	48 8d 88 d0 00 00 00 	lea    0xd0(%rax),%rcx$/;"	l
ffff800000106716	kernel.asm	/^ffff800000106716:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff80000010671a	kernel.asm	/^ffff80000010671a:	48 05 d0 00 00 00    	add    $0xd0,%rax$/;"	l
ffff800000106720	kernel.asm	/^ffff800000106720:	ba 10 00 00 00       	mov    $0x10,%edx$/;"	l
ffff800000106725	kernel.asm	/^ffff800000106725:	48 89 ce             	mov    %rcx,%rsi$/;"	l
ffff800000106728	kernel.asm	/^ffff800000106728:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010672b	kernel.asm	/^ffff80000010672b:	48 b8 4d 7f 10 00 00 	movabs $0xffff800000107f4d,%rax$/;"	l
ffff800000106732	kernel.asm	/^ffff800000106732:	80 ff ff $/;"	l
ffff800000106735	kernel.asm	/^ffff800000106735:	ff d0                	callq  *%rax$/;"	l
ffff800000106737	kernel.asm	/^ffff800000106737:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff80000010673b	kernel.asm	/^ffff80000010673b:	8b 40 1c             	mov    0x1c(%rax),%eax$/;"	l
ffff80000010673e	kernel.asm	/^ffff80000010673e:	89 45 ec             	mov    %eax,-0x14(%rbp)$/;"	l
ffff800000106741	kernel.asm	/^ffff800000106741:	48 bf 60 8c 11 00 00 	movabs $0xffff800000118c60,%rdi$/;"	l
ffff800000106748	kernel.asm	/^ffff800000106748:	80 ff ff $/;"	l
ffff80000010674b	kernel.asm	/^ffff80000010674b:	48 b8 01 79 10 00 00 	movabs $0xffff800000107901,%rax$/;"	l
ffff800000106752	kernel.asm	/^ffff800000106752:	80 ff ff $/;"	l
ffff800000106755	kernel.asm	/^ffff800000106755:	ff d0                	callq  *%rax$/;"	l
ffff800000106757	kernel.asm	/^ffff800000106757:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff80000010675b	kernel.asm	/^ffff80000010675b:	c7 40 18 03 00 00 00 	movl   $0x3,0x18(%rax)$/;"	l
ffff800000106762	kernel.asm	/^ffff800000106762:	48 bf 60 8c 11 00 00 	movabs $0xffff800000118c60,%rdi$/;"	l
ffff800000106769	kernel.asm	/^ffff800000106769:	80 ff ff $/;"	l
ffff80000010676c	kernel.asm	/^ffff80000010676c:	48 b8 9a 79 10 00 00 	movabs $0xffff80000010799a,%rax$/;"	l
ffff800000106773	kernel.asm	/^ffff800000106773:	80 ff ff $/;"	l
ffff800000106776	kernel.asm	/^ffff800000106776:	ff d0                	callq  *%rax$/;"	l
ffff800000106778	kernel.asm	/^ffff800000106778:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
ffff80000010677b	kernel.asm	/^ffff80000010677b:	c9                   	leaveq $/;"	l
ffff80000010677c	kernel.asm	/^ffff80000010677c:	c3                   	retq   $/;"	l
ffff80000010677d	kernel.asm	/^ffff80000010677d <exit>:$/;"	l
ffff80000010677d	kernel.asm	/^ffff80000010677d:	55                   	push   %rbp$/;"	l
ffff80000010677e	kernel.asm	/^ffff80000010677e:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000106781	kernel.asm	/^ffff800000106781:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff800000106785	kernel.asm	/^ffff800000106785:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff80000010678c	kernel.asm	/^ffff80000010678c:	64 48 8b 10          	mov    %fs:(%rax),%rdx$/;"	l
ffff800000106790	kernel.asm	/^ffff800000106790:	48 b8 c8 c4 11 00 00 	movabs $0xffff80000011c4c8,%rax$/;"	l
ffff800000106797	kernel.asm	/^ffff800000106797:	80 ff ff $/;"	l
ffff80000010679a	kernel.asm	/^ffff80000010679a:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff80000010679d	kernel.asm	/^ffff80000010679d:	48 39 c2             	cmp    %rax,%rdx$/;"	l
ffff8000001067a0	kernel.asm	/^ffff8000001067a0:	75 16                	jne    ffff8000001067b8 <exit+0x3b>$/;"	l
ffff8000001067a2	kernel.asm	/^ffff8000001067a2:	48 bf 70 c5 10 00 00 	movabs $0xffff80000010c570,%rdi$/;"	l
ffff8000001067a9	kernel.asm	/^ffff8000001067a9:	80 ff ff $/;"	l
ffff8000001067ac	kernel.asm	/^ffff8000001067ac:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff8000001067b3	kernel.asm	/^ffff8000001067b3:	80 ff ff $/;"	l
ffff8000001067b6	kernel.asm	/^ffff8000001067b6:	ff d0                	callq  *%rax$/;"	l
ffff8000001067b8	kernel.asm	/^ffff8000001067b8:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)$/;"	l
ffff8000001067bf	kernel.asm	/^ffff8000001067bf:	eb 6a                	jmp    ffff80000010682b <exit+0xae>$/;"	l
ffff8000001067c1	kernel.asm	/^ffff8000001067c1:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff8000001067c8	kernel.asm	/^ffff8000001067c8:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff8000001067cc	kernel.asm	/^ffff8000001067cc:	8b 55 f4             	mov    -0xc(%rbp),%edx$/;"	l
ffff8000001067cf	kernel.asm	/^ffff8000001067cf:	48 63 d2             	movslq %edx,%rdx$/;"	l
ffff8000001067d2	kernel.asm	/^ffff8000001067d2:	48 83 c2 08          	add    $0x8,%rdx$/;"	l
ffff8000001067d6	kernel.asm	/^ffff8000001067d6:	48 8b 44 d0 08       	mov    0x8(%rax,%rdx,8),%rax$/;"	l
ffff8000001067db	kernel.asm	/^ffff8000001067db:	48 85 c0             	test   %rax,%rax$/;"	l
ffff8000001067de	kernel.asm	/^ffff8000001067de:	74 47                	je     ffff800000106827 <exit+0xaa>$/;"	l
ffff8000001067e0	kernel.asm	/^ffff8000001067e0:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff8000001067e7	kernel.asm	/^ffff8000001067e7:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff8000001067eb	kernel.asm	/^ffff8000001067eb:	8b 55 f4             	mov    -0xc(%rbp),%edx$/;"	l
ffff8000001067ee	kernel.asm	/^ffff8000001067ee:	48 63 d2             	movslq %edx,%rdx$/;"	l
ffff8000001067f1	kernel.asm	/^ffff8000001067f1:	48 83 c2 08          	add    $0x8,%rdx$/;"	l
ffff8000001067f5	kernel.asm	/^ffff8000001067f5:	48 8b 44 d0 08       	mov    0x8(%rax,%rdx,8),%rax$/;"	l
ffff8000001067fa	kernel.asm	/^ffff8000001067fa:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001067fd	kernel.asm	/^ffff8000001067fd:	48 b8 a6 1b 10 00 00 	movabs $0xffff800000101ba6,%rax$/;"	l
ffff800000106804	kernel.asm	/^ffff800000106804:	80 ff ff $/;"	l
ffff800000106807	kernel.asm	/^ffff800000106807:	ff d0                	callq  *%rax$/;"	l
ffff800000106809	kernel.asm	/^ffff800000106809:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000106810	kernel.asm	/^ffff800000106810:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000106814	kernel.asm	/^ffff800000106814:	8b 55 f4             	mov    -0xc(%rbp),%edx$/;"	l
ffff800000106817	kernel.asm	/^ffff800000106817:	48 63 d2             	movslq %edx,%rdx$/;"	l
ffff80000010681a	kernel.asm	/^ffff80000010681a:	48 83 c2 08          	add    $0x8,%rdx$/;"	l
ffff80000010681e	kernel.asm	/^ffff80000010681e:	48 c7 44 d0 08 00 00 	movq   $0x0,0x8(%rax,%rdx,8)$/;"	l
ffff800000106825	kernel.asm	/^ffff800000106825:	00 00 $/;"	l
ffff800000106827	kernel.asm	/^ffff800000106827:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)$/;"	l
ffff80000010682b	kernel.asm	/^ffff80000010682b:	83 7d f4 0f          	cmpl   $0xf,-0xc(%rbp)$/;"	l
ffff80000010682f	kernel.asm	/^ffff80000010682f:	7e 90                	jle    ffff8000001067c1 <exit+0x44>$/;"	l
ffff800000106831	kernel.asm	/^ffff800000106831:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000106836	kernel.asm	/^ffff800000106836:	48 ba 20 4f 10 00 00 	movabs $0xffff800000104f20,%rdx$/;"	l
ffff80000010683d	kernel.asm	/^ffff80000010683d:	80 ff ff $/;"	l
ffff800000106840	kernel.asm	/^ffff800000106840:	ff d2                	callq  *%rdx$/;"	l
ffff800000106842	kernel.asm	/^ffff800000106842:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000106849	kernel.asm	/^ffff800000106849:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff80000010684d	kernel.asm	/^ffff80000010684d:	48 8b 80 c8 00 00 00 	mov    0xc8(%rax),%rax$/;"	l
ffff800000106854	kernel.asm	/^ffff800000106854:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000106857	kernel.asm	/^ffff800000106857:	48 b8 39 2a 10 00 00 	movabs $0xffff800000102a39,%rax$/;"	l
ffff80000010685e	kernel.asm	/^ffff80000010685e:	80 ff ff $/;"	l
ffff800000106861	kernel.asm	/^ffff800000106861:	ff d0                	callq  *%rax$/;"	l
ffff800000106863	kernel.asm	/^ffff800000106863:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000106868	kernel.asm	/^ffff800000106868:	48 ba f6 4f 10 00 00 	movabs $0xffff800000104ff6,%rdx$/;"	l
ffff80000010686f	kernel.asm	/^ffff80000010686f:	80 ff ff $/;"	l
ffff800000106872	kernel.asm	/^ffff800000106872:	ff d2                	callq  *%rdx$/;"	l
ffff800000106874	kernel.asm	/^ffff800000106874:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff80000010687b	kernel.asm	/^ffff80000010687b:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff80000010687f	kernel.asm	/^ffff80000010687f:	48 c7 80 c8 00 00 00 	movq   $0x0,0xc8(%rax)$/;"	l
ffff800000106886	kernel.asm	/^ffff800000106886:	00 00 00 00 $/;"	l
ffff80000010688a	kernel.asm	/^ffff80000010688a:	48 bf 60 8c 11 00 00 	movabs $0xffff800000118c60,%rdi$/;"	l
ffff800000106891	kernel.asm	/^ffff800000106891:	80 ff ff $/;"	l
ffff800000106894	kernel.asm	/^ffff800000106894:	48 b8 01 79 10 00 00 	movabs $0xffff800000107901,%rax$/;"	l
ffff80000010689b	kernel.asm	/^ffff80000010689b:	80 ff ff $/;"	l
ffff80000010689e	kernel.asm	/^ffff80000010689e:	ff d0                	callq  *%rax$/;"	l
ffff8000001068a0	kernel.asm	/^ffff8000001068a0:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff8000001068a7	kernel.asm	/^ffff8000001068a7:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff8000001068ab	kernel.asm	/^ffff8000001068ab:	48 8b 40 20          	mov    0x20(%rax),%rax$/;"	l
ffff8000001068af	kernel.asm	/^ffff8000001068af:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001068b2	kernel.asm	/^ffff8000001068b2:	48 b8 bd 6e 10 00 00 	movabs $0xffff800000106ebd,%rax$/;"	l
ffff8000001068b9	kernel.asm	/^ffff8000001068b9:	80 ff ff $/;"	l
ffff8000001068bc	kernel.asm	/^ffff8000001068bc:	ff d0                	callq  *%rax$/;"	l
ffff8000001068be	kernel.asm	/^ffff8000001068be:	48 b8 c8 8c 11 00 00 	movabs $0xffff800000118cc8,%rax$/;"	l
ffff8000001068c5	kernel.asm	/^ffff8000001068c5:	80 ff ff $/;"	l
ffff8000001068c8	kernel.asm	/^ffff8000001068c8:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff8000001068cc	kernel.asm	/^ffff8000001068cc:	eb 5d                	jmp    ffff80000010692b <exit+0x1ae>$/;"	l
ffff8000001068ce	kernel.asm	/^ffff8000001068ce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001068d2	kernel.asm	/^ffff8000001068d2:	48 8b 50 20          	mov    0x20(%rax),%rdx$/;"	l
ffff8000001068d6	kernel.asm	/^ffff8000001068d6:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff8000001068dd	kernel.asm	/^ffff8000001068dd:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff8000001068e1	kernel.asm	/^ffff8000001068e1:	48 39 c2             	cmp    %rax,%rdx$/;"	l
ffff8000001068e4	kernel.asm	/^ffff8000001068e4:	75 3d                	jne    ffff800000106923 <exit+0x1a6>$/;"	l
ffff8000001068e6	kernel.asm	/^ffff8000001068e6:	48 b8 c8 c4 11 00 00 	movabs $0xffff80000011c4c8,%rax$/;"	l
ffff8000001068ed	kernel.asm	/^ffff8000001068ed:	80 ff ff $/;"	l
ffff8000001068f0	kernel.asm	/^ffff8000001068f0:	48 8b 10             	mov    (%rax),%rdx$/;"	l
ffff8000001068f3	kernel.asm	/^ffff8000001068f3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001068f7	kernel.asm	/^ffff8000001068f7:	48 89 50 20          	mov    %rdx,0x20(%rax)$/;"	l
ffff8000001068fb	kernel.asm	/^ffff8000001068fb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001068ff	kernel.asm	/^ffff8000001068ff:	8b 40 18             	mov    0x18(%rax),%eax$/;"	l
ffff800000106902	kernel.asm	/^ffff800000106902:	83 f8 05             	cmp    $0x5,%eax$/;"	l
ffff800000106905	kernel.asm	/^ffff800000106905:	75 1c                	jne    ffff800000106923 <exit+0x1a6>$/;"	l
ffff800000106907	kernel.asm	/^ffff800000106907:	48 b8 c8 c4 11 00 00 	movabs $0xffff80000011c4c8,%rax$/;"	l
ffff80000010690e	kernel.asm	/^ffff80000010690e:	80 ff ff $/;"	l
ffff800000106911	kernel.asm	/^ffff800000106911:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff800000106914	kernel.asm	/^ffff800000106914:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000106917	kernel.asm	/^ffff800000106917:	48 b8 bd 6e 10 00 00 	movabs $0xffff800000106ebd,%rax$/;"	l
ffff80000010691e	kernel.asm	/^ffff80000010691e:	80 ff ff $/;"	l
ffff800000106921	kernel.asm	/^ffff800000106921:	ff d0                	callq  *%rax$/;"	l
ffff800000106923	kernel.asm	/^ffff800000106923:	48 81 45 f8 e0 00 00 	addq   $0xe0,-0x8(%rbp)$/;"	l
ffff80000010692a	kernel.asm	/^ffff80000010692a:	00 $/;"	l
ffff80000010692b	kernel.asm	/^ffff80000010692b:	48 b8 c8 c4 11 00 00 	movabs $0xffff80000011c4c8,%rax$/;"	l
ffff800000106932	kernel.asm	/^ffff800000106932:	80 ff ff $/;"	l
ffff800000106935	kernel.asm	/^ffff800000106935:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)$/;"	l
ffff800000106939	kernel.asm	/^ffff800000106939:	72 93                	jb     ffff8000001068ce <exit+0x151>$/;"	l
ffff80000010693b	kernel.asm	/^ffff80000010693b:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000106942	kernel.asm	/^ffff800000106942:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000106946	kernel.asm	/^ffff800000106946:	c7 40 18 05 00 00 00 	movl   $0x5,0x18(%rax)$/;"	l
ffff80000010694d	kernel.asm	/^ffff80000010694d:	48 b8 ed 6b 10 00 00 	movabs $0xffff800000106bed,%rax$/;"	l
ffff800000106954	kernel.asm	/^ffff800000106954:	80 ff ff $/;"	l
ffff800000106957	kernel.asm	/^ffff800000106957:	ff d0                	callq  *%rax$/;"	l
ffff800000106959	kernel.asm	/^ffff800000106959:	48 bf 7d c5 10 00 00 	movabs $0xffff80000010c57d,%rdi$/;"	l
ffff800000106960	kernel.asm	/^ffff800000106960:	80 ff ff $/;"	l
ffff800000106963	kernel.asm	/^ffff800000106963:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff80000010696a	kernel.asm	/^ffff80000010696a:	80 ff ff $/;"	l
ffff80000010696d	kernel.asm	/^ffff80000010696d:	ff d0                	callq  *%rax$/;"	l
ffff80000010696f	kernel.asm	/^ffff80000010696f <wait>:$/;"	l
ffff80000010696f	kernel.asm	/^ffff80000010696f:	55                   	push   %rbp$/;"	l
ffff800000106970	kernel.asm	/^ffff800000106970:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000106973	kernel.asm	/^ffff800000106973:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff800000106977	kernel.asm	/^ffff800000106977:	48 bf 60 8c 11 00 00 	movabs $0xffff800000118c60,%rdi$/;"	l
ffff80000010697e	kernel.asm	/^ffff80000010697e:	80 ff ff $/;"	l
ffff800000106981	kernel.asm	/^ffff800000106981:	48 b8 01 79 10 00 00 	movabs $0xffff800000107901,%rax$/;"	l
ffff800000106988	kernel.asm	/^ffff800000106988:	80 ff ff $/;"	l
ffff80000010698b	kernel.asm	/^ffff80000010698b:	ff d0                	callq  *%rax$/;"	l
ffff80000010698d	kernel.asm	/^ffff80000010698d:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)$/;"	l
ffff800000106994	kernel.asm	/^ffff800000106994:	48 b8 c8 8c 11 00 00 	movabs $0xffff800000118cc8,%rax$/;"	l
ffff80000010699b	kernel.asm	/^ffff80000010699b:	80 ff ff $/;"	l
ffff80000010699e	kernel.asm	/^ffff80000010699e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff8000001069a2	kernel.asm	/^ffff8000001069a2:	e9 d3 00 00 00       	jmpq   ffff800000106a7a <wait+0x10b>$/;"	l
ffff8000001069a7	kernel.asm	/^ffff8000001069a7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001069ab	kernel.asm	/^ffff8000001069ab:	48 8b 50 20          	mov    0x20(%rax),%rdx$/;"	l
ffff8000001069af	kernel.asm	/^ffff8000001069af:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff8000001069b6	kernel.asm	/^ffff8000001069b6:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff8000001069ba	kernel.asm	/^ffff8000001069ba:	48 39 c2             	cmp    %rax,%rdx$/;"	l
ffff8000001069bd	kernel.asm	/^ffff8000001069bd:	0f 85 ae 00 00 00    	jne    ffff800000106a71 <wait+0x102>$/;"	l
ffff8000001069c3	kernel.asm	/^ffff8000001069c3:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%rbp)$/;"	l
ffff8000001069ca	kernel.asm	/^ffff8000001069ca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001069ce	kernel.asm	/^ffff8000001069ce:	8b 40 18             	mov    0x18(%rax),%eax$/;"	l
ffff8000001069d1	kernel.asm	/^ffff8000001069d1:	83 f8 05             	cmp    $0x5,%eax$/;"	l
ffff8000001069d4	kernel.asm	/^ffff8000001069d4:	0f 85 98 00 00 00    	jne    ffff800000106a72 <wait+0x103>$/;"	l
ffff8000001069da	kernel.asm	/^ffff8000001069da:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001069de	kernel.asm	/^ffff8000001069de:	8b 40 1c             	mov    0x1c(%rax),%eax$/;"	l
ffff8000001069e1	kernel.asm	/^ffff8000001069e1:	89 45 f0             	mov    %eax,-0x10(%rbp)$/;"	l
ffff8000001069e4	kernel.asm	/^ffff8000001069e4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001069e8	kernel.asm	/^ffff8000001069e8:	48 8b 40 10          	mov    0x10(%rax),%rax$/;"	l
ffff8000001069ec	kernel.asm	/^ffff8000001069ec:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001069ef	kernel.asm	/^ffff8000001069ef:	48 b8 9f 40 10 00 00 	movabs $0xffff80000010409f,%rax$/;"	l
ffff8000001069f6	kernel.asm	/^ffff8000001069f6:	80 ff ff $/;"	l
ffff8000001069f9	kernel.asm	/^ffff8000001069f9:	ff d0                	callq  *%rax$/;"	l
ffff8000001069fb	kernel.asm	/^ffff8000001069fb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001069ff	kernel.asm	/^ffff8000001069ff:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)$/;"	l
ffff800000106a06	kernel.asm	/^ffff800000106a06:	00 $/;"	l
ffff800000106a07	kernel.asm	/^ffff800000106a07:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000106a0b	kernel.asm	/^ffff800000106a0b:	48 8b 40 08          	mov    0x8(%rax),%rax$/;"	l
ffff800000106a0f	kernel.asm	/^ffff800000106a0f:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000106a12	kernel.asm	/^ffff800000106a12:	48 b8 89 bc 10 00 00 	movabs $0xffff80000010bc89,%rax$/;"	l
ffff800000106a19	kernel.asm	/^ffff800000106a19:	80 ff ff $/;"	l
ffff800000106a1c	kernel.asm	/^ffff800000106a1c:	ff d0                	callq  *%rax$/;"	l
ffff800000106a1e	kernel.asm	/^ffff800000106a1e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000106a22	kernel.asm	/^ffff800000106a22:	c7 40 1c 00 00 00 00 	movl   $0x0,0x1c(%rax)$/;"	l
ffff800000106a29	kernel.asm	/^ffff800000106a29:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000106a2d	kernel.asm	/^ffff800000106a2d:	48 c7 40 20 00 00 00 	movq   $0x0,0x20(%rax)$/;"	l
ffff800000106a34	kernel.asm	/^ffff800000106a34:	00 $/;"	l
ffff800000106a35	kernel.asm	/^ffff800000106a35:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000106a39	kernel.asm	/^ffff800000106a39:	c6 80 d0 00 00 00 00 	movb   $0x0,0xd0(%rax)$/;"	l
ffff800000106a40	kernel.asm	/^ffff800000106a40:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000106a44	kernel.asm	/^ffff800000106a44:	c7 40 40 00 00 00 00 	movl   $0x0,0x40(%rax)$/;"	l
ffff800000106a4b	kernel.asm	/^ffff800000106a4b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000106a4f	kernel.asm	/^ffff800000106a4f:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%rax)$/;"	l
ffff800000106a56	kernel.asm	/^ffff800000106a56:	48 bf 60 8c 11 00 00 	movabs $0xffff800000118c60,%rdi$/;"	l
ffff800000106a5d	kernel.asm	/^ffff800000106a5d:	80 ff ff $/;"	l
ffff800000106a60	kernel.asm	/^ffff800000106a60:	48 b8 9a 79 10 00 00 	movabs $0xffff80000010799a,%rax$/;"	l
ffff800000106a67	kernel.asm	/^ffff800000106a67:	80 ff ff $/;"	l
ffff800000106a6a	kernel.asm	/^ffff800000106a6a:	ff d0                	callq  *%rax$/;"	l
ffff800000106a6c	kernel.asm	/^ffff800000106a6c:	8b 45 f0             	mov    -0x10(%rbp),%eax$/;"	l
ffff800000106a6f	kernel.asm	/^ffff800000106a6f:	eb 7b                	jmp    ffff800000106aec <wait+0x17d>$/;"	l
ffff800000106a71	kernel.asm	/^ffff800000106a71:	90                   	nop$/;"	l
ffff800000106a72	kernel.asm	/^ffff800000106a72:	48 81 45 f8 e0 00 00 	addq   $0xe0,-0x8(%rbp)$/;"	l
ffff800000106a79	kernel.asm	/^ffff800000106a79:	00 $/;"	l
ffff800000106a7a	kernel.asm	/^ffff800000106a7a:	48 b8 c8 c4 11 00 00 	movabs $0xffff80000011c4c8,%rax$/;"	l
ffff800000106a81	kernel.asm	/^ffff800000106a81:	80 ff ff $/;"	l
ffff800000106a84	kernel.asm	/^ffff800000106a84:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)$/;"	l
ffff800000106a88	kernel.asm	/^ffff800000106a88:	0f 82 19 ff ff ff    	jb     ffff8000001069a7 <wait+0x38>$/;"	l
ffff800000106a8e	kernel.asm	/^ffff800000106a8e:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)$/;"	l
ffff800000106a92	kernel.asm	/^ffff800000106a92:	74 12                	je     ffff800000106aa6 <wait+0x137>$/;"	l
ffff800000106a94	kernel.asm	/^ffff800000106a94:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000106a9b	kernel.asm	/^ffff800000106a9b:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000106a9f	kernel.asm	/^ffff800000106a9f:	8b 40 40             	mov    0x40(%rax),%eax$/;"	l
ffff800000106aa2	kernel.asm	/^ffff800000106aa2:	85 c0                	test   %eax,%eax$/;"	l
ffff800000106aa4	kernel.asm	/^ffff800000106aa4:	74 1d                	je     ffff800000106ac3 <wait+0x154>$/;"	l
ffff800000106aa6	kernel.asm	/^ffff800000106aa6:	48 bf 60 8c 11 00 00 	movabs $0xffff800000118c60,%rdi$/;"	l
ffff800000106aad	kernel.asm	/^ffff800000106aad:	80 ff ff $/;"	l
ffff800000106ab0	kernel.asm	/^ffff800000106ab0:	48 b8 9a 79 10 00 00 	movabs $0xffff80000010799a,%rax$/;"	l
ffff800000106ab7	kernel.asm	/^ffff800000106ab7:	80 ff ff $/;"	l
ffff800000106aba	kernel.asm	/^ffff800000106aba:	ff d0                	callq  *%rax$/;"	l
ffff800000106abc	kernel.asm	/^ffff800000106abc:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff800000106ac1	kernel.asm	/^ffff800000106ac1:	eb 29                	jmp    ffff800000106aec <wait+0x17d>$/;"	l
ffff800000106ac3	kernel.asm	/^ffff800000106ac3:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000106aca	kernel.asm	/^ffff800000106aca:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000106ace	kernel.asm	/^ffff800000106ace:	48 be 60 8c 11 00 00 	movabs $0xffff800000118c60,%rsi$/;"	l
ffff800000106ad5	kernel.asm	/^ffff800000106ad5:	80 ff ff $/;"	l
ffff800000106ad8	kernel.asm	/^ffff800000106ad8:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000106adb	kernel.asm	/^ffff800000106adb:	48 b8 b1 6d 10 00 00 	movabs $0xffff800000106db1,%rax$/;"	l
ffff800000106ae2	kernel.asm	/^ffff800000106ae2:	80 ff ff $/;"	l
ffff800000106ae5	kernel.asm	/^ffff800000106ae5:	ff d0                	callq  *%rax$/;"	l
ffff800000106ae7	kernel.asm	/^ffff800000106ae7:	e9 a1 fe ff ff       	jmpq   ffff80000010698d <wait+0x1e>$/;"	l
ffff800000106aec	kernel.asm	/^ffff800000106aec:	c9                   	leaveq $/;"	l
ffff800000106aed	kernel.asm	/^ffff800000106aed:	c3                   	retq   $/;"	l
ffff800000106aee	kernel.asm	/^ffff800000106aee <scheduler>:$/;"	l
ffff800000106aee	kernel.asm	/^ffff800000106aee:	55                   	push   %rbp$/;"	l
ffff800000106aef	kernel.asm	/^ffff800000106aef:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000106af2	kernel.asm	/^ffff800000106af2:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff800000106af6	kernel.asm	/^ffff800000106af6:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)$/;"	l
ffff800000106afd	kernel.asm	/^ffff800000106afd:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)$/;"	l
ffff800000106b01	kernel.asm	/^ffff800000106b01:	48 b8 3b 61 10 00 00 	movabs $0xffff80000010613b,%rax$/;"	l
ffff800000106b08	kernel.asm	/^ffff800000106b08:	80 ff ff $/;"	l
ffff800000106b0b	kernel.asm	/^ffff800000106b0b:	ff d0                	callq  *%rax$/;"	l
ffff800000106b0d	kernel.asm	/^ffff800000106b0d:	48 bf 60 8c 11 00 00 	movabs $0xffff800000118c60,%rdi$/;"	l
ffff800000106b14	kernel.asm	/^ffff800000106b14:	80 ff ff $/;"	l
ffff800000106b17	kernel.asm	/^ffff800000106b17:	48 b8 01 79 10 00 00 	movabs $0xffff800000107901,%rax$/;"	l
ffff800000106b1e	kernel.asm	/^ffff800000106b1e:	80 ff ff $/;"	l
ffff800000106b21	kernel.asm	/^ffff800000106b21:	ff d0                	callq  *%rax$/;"	l
ffff800000106b23	kernel.asm	/^ffff800000106b23:	48 b8 c8 8c 11 00 00 	movabs $0xffff800000118cc8,%rax$/;"	l
ffff800000106b2a	kernel.asm	/^ffff800000106b2a:	80 ff ff $/;"	l
ffff800000106b2d	kernel.asm	/^ffff800000106b2d:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ffff800000106b31	kernel.asm	/^ffff800000106b31:	e9 88 00 00 00       	jmpq   ffff800000106bbe <scheduler+0xd0>$/;"	l
ffff800000106b36	kernel.asm	/^ffff800000106b36:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000106b3a	kernel.asm	/^ffff800000106b3a:	8b 40 18             	mov    0x18(%rax),%eax$/;"	l
ffff800000106b3d	kernel.asm	/^ffff800000106b3d:	83 f8 03             	cmp    $0x3,%eax$/;"	l
ffff800000106b40	kernel.asm	/^ffff800000106b40:	75 73                	jne    ffff800000106bb5 <scheduler+0xc7>$/;"	l
ffff800000106b42	kernel.asm	/^ffff800000106b42:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000106b49	kernel.asm	/^ffff800000106b49:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
ffff800000106b4d	kernel.asm	/^ffff800000106b4d:	64 48 89 10          	mov    %rdx,%fs:(%rax)$/;"	l
ffff800000106b51	kernel.asm	/^ffff800000106b51:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000106b55	kernel.asm	/^ffff800000106b55:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000106b58	kernel.asm	/^ffff800000106b58:	48 b8 8b b4 10 00 00 	movabs $0xffff80000010b48b,%rax$/;"	l
ffff800000106b5f	kernel.asm	/^ffff800000106b5f:	80 ff ff $/;"	l
ffff800000106b62	kernel.asm	/^ffff800000106b62:	ff d0                	callq  *%rax$/;"	l
ffff800000106b64	kernel.asm	/^ffff800000106b64:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000106b68	kernel.asm	/^ffff800000106b68:	c7 40 18 04 00 00 00 	movl   $0x4,0x18(%rax)$/;"	l
ffff800000106b6f	kernel.asm	/^ffff800000106b6f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000106b73	kernel.asm	/^ffff800000106b73:	48 8b 40 30          	mov    0x30(%rax),%rax$/;"	l
ffff800000106b77	kernel.asm	/^ffff800000106b77:	48 c7 c2 f0 ff ff ff 	mov    $0xfffffffffffffff0,%rdx$/;"	l
ffff800000106b7e	kernel.asm	/^ffff800000106b7e:	64 48 8b 12          	mov    %fs:(%rdx),%rdx$/;"	l
ffff800000106b82	kernel.asm	/^ffff800000106b82:	48 83 c2 08          	add    $0x8,%rdx$/;"	l
ffff800000106b86	kernel.asm	/^ffff800000106b86:	48 89 c6             	mov    %rax,%rsi$/;"	l
ffff800000106b89	kernel.asm	/^ffff800000106b89:	48 89 d7             	mov    %rdx,%rdi$/;"	l
ffff800000106b8c	kernel.asm	/^ffff800000106b8c:	48 b8 e1 7f 10 00 00 	movabs $0xffff800000107fe1,%rax$/;"	l
ffff800000106b93	kernel.asm	/^ffff800000106b93:	80 ff ff $/;"	l
ffff800000106b96	kernel.asm	/^ffff800000106b96:	ff d0                	callq  *%rax$/;"	l
ffff800000106b98	kernel.asm	/^ffff800000106b98:	48 b8 59 b4 10 00 00 	movabs $0xffff80000010b459,%rax$/;"	l
ffff800000106b9f	kernel.asm	/^ffff800000106b9f:	80 ff ff $/;"	l
ffff800000106ba2	kernel.asm	/^ffff800000106ba2:	ff d0                	callq  *%rax$/;"	l
ffff800000106ba4	kernel.asm	/^ffff800000106ba4:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000106bab	kernel.asm	/^ffff800000106bab:	64 48 c7 00 00 00 00 	movq   $0x0,%fs:(%rax)$/;"	l
ffff800000106bb2	kernel.asm	/^ffff800000106bb2:	00 $/;"	l
ffff800000106bb3	kernel.asm	/^ffff800000106bb3:	eb 01                	jmp    ffff800000106bb6 <scheduler+0xc8>$/;"	l
ffff800000106bb5	kernel.asm	/^ffff800000106bb5:	90                   	nop$/;"	l
ffff800000106bb6	kernel.asm	/^ffff800000106bb6:	48 81 45 f0 e0 00 00 	addq   $0xe0,-0x10(%rbp)$/;"	l
ffff800000106bbd	kernel.asm	/^ffff800000106bbd:	00 $/;"	l
ffff800000106bbe	kernel.asm	/^ffff800000106bbe:	48 b8 c8 c4 11 00 00 	movabs $0xffff80000011c4c8,%rax$/;"	l
ffff800000106bc5	kernel.asm	/^ffff800000106bc5:	80 ff ff $/;"	l
ffff800000106bc8	kernel.asm	/^ffff800000106bc8:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)$/;"	l
ffff800000106bcc	kernel.asm	/^ffff800000106bcc:	0f 82 64 ff ff ff    	jb     ffff800000106b36 <scheduler+0x48>$/;"	l
ffff800000106bd2	kernel.asm	/^ffff800000106bd2:	48 bf 60 8c 11 00 00 	movabs $0xffff800000118c60,%rdi$/;"	l
ffff800000106bd9	kernel.asm	/^ffff800000106bd9:	80 ff ff $/;"	l
ffff800000106bdc	kernel.asm	/^ffff800000106bdc:	48 b8 9a 79 10 00 00 	movabs $0xffff80000010799a,%rax$/;"	l
ffff800000106be3	kernel.asm	/^ffff800000106be3:	80 ff ff $/;"	l
ffff800000106be6	kernel.asm	/^ffff800000106be6:	ff d0                	callq  *%rax$/;"	l
ffff800000106be8	kernel.asm	/^ffff800000106be8:	e9 10 ff ff ff       	jmpq   ffff800000106afd <scheduler+0xf>$/;"	l
ffff800000106bed	kernel.asm	/^ffff800000106bed <sched>:$/;"	l
ffff800000106bed	kernel.asm	/^ffff800000106bed:	55                   	push   %rbp$/;"	l
ffff800000106bee	kernel.asm	/^ffff800000106bee:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000106bf1	kernel.asm	/^ffff800000106bf1:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff800000106bf5	kernel.asm	/^ffff800000106bf5:	48 bf 60 8c 11 00 00 	movabs $0xffff800000118c60,%rdi$/;"	l
ffff800000106bfc	kernel.asm	/^ffff800000106bfc:	80 ff ff $/;"	l
ffff800000106bff	kernel.asm	/^ffff800000106bff:	48 b8 d8 7a 10 00 00 	movabs $0xffff800000107ad8,%rax$/;"	l
ffff800000106c06	kernel.asm	/^ffff800000106c06:	80 ff ff $/;"	l
ffff800000106c09	kernel.asm	/^ffff800000106c09:	ff d0                	callq  *%rax$/;"	l
ffff800000106c0b	kernel.asm	/^ffff800000106c0b:	85 c0                	test   %eax,%eax$/;"	l
ffff800000106c0d	kernel.asm	/^ffff800000106c0d:	75 16                	jne    ffff800000106c25 <sched+0x38>$/;"	l
ffff800000106c0f	kernel.asm	/^ffff800000106c0f:	48 bf 89 c5 10 00 00 	movabs $0xffff80000010c589,%rdi$/;"	l
ffff800000106c16	kernel.asm	/^ffff800000106c16:	80 ff ff $/;"	l
ffff800000106c19	kernel.asm	/^ffff800000106c19:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff800000106c20	kernel.asm	/^ffff800000106c20:	80 ff ff $/;"	l
ffff800000106c23	kernel.asm	/^ffff800000106c23:	ff d0                	callq  *%rax$/;"	l
ffff800000106c25	kernel.asm	/^ffff800000106c25:	48 c7 c0 f0 ff ff ff 	mov    $0xfffffffffffffff0,%rax$/;"	l
ffff800000106c2c	kernel.asm	/^ffff800000106c2c:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000106c30	kernel.asm	/^ffff800000106c30:	8b 80 e4 00 00 00    	mov    0xe4(%rax),%eax$/;"	l
ffff800000106c36	kernel.asm	/^ffff800000106c36:	83 f8 01             	cmp    $0x1,%eax$/;"	l
ffff800000106c39	kernel.asm	/^ffff800000106c39:	74 16                	je     ffff800000106c51 <sched+0x64>$/;"	l
ffff800000106c3b	kernel.asm	/^ffff800000106c3b:	48 bf 9b c5 10 00 00 	movabs $0xffff80000010c59b,%rdi$/;"	l
ffff800000106c42	kernel.asm	/^ffff800000106c42:	80 ff ff $/;"	l
ffff800000106c45	kernel.asm	/^ffff800000106c45:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff800000106c4c	kernel.asm	/^ffff800000106c4c:	80 ff ff $/;"	l
ffff800000106c4f	kernel.asm	/^ffff800000106c4f:	ff d0                	callq  *%rax$/;"	l
ffff800000106c51	kernel.asm	/^ffff800000106c51:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000106c58	kernel.asm	/^ffff800000106c58:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000106c5c	kernel.asm	/^ffff800000106c5c:	8b 40 18             	mov    0x18(%rax),%eax$/;"	l
ffff800000106c5f	kernel.asm	/^ffff800000106c5f:	83 f8 04             	cmp    $0x4,%eax$/;"	l
ffff800000106c62	kernel.asm	/^ffff800000106c62:	75 16                	jne    ffff800000106c7a <sched+0x8d>$/;"	l
ffff800000106c64	kernel.asm	/^ffff800000106c64:	48 bf a7 c5 10 00 00 	movabs $0xffff80000010c5a7,%rdi$/;"	l
ffff800000106c6b	kernel.asm	/^ffff800000106c6b:	80 ff ff $/;"	l
ffff800000106c6e	kernel.asm	/^ffff800000106c6e:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff800000106c75	kernel.asm	/^ffff800000106c75:	80 ff ff $/;"	l
ffff800000106c78	kernel.asm	/^ffff800000106c78:	ff d0                	callq  *%rax$/;"	l
ffff800000106c7a	kernel.asm	/^ffff800000106c7a:	48 b8 27 61 10 00 00 	movabs $0xffff800000106127,%rax$/;"	l
ffff800000106c81	kernel.asm	/^ffff800000106c81:	80 ff ff $/;"	l
ffff800000106c84	kernel.asm	/^ffff800000106c84:	ff d0                	callq  *%rax$/;"	l
ffff800000106c86	kernel.asm	/^ffff800000106c86:	25 00 02 00 00       	and    $0x200,%eax$/;"	l
ffff800000106c8b	kernel.asm	/^ffff800000106c8b:	48 85 c0             	test   %rax,%rax$/;"	l
ffff800000106c8e	kernel.asm	/^ffff800000106c8e:	74 16                	je     ffff800000106ca6 <sched+0xb9>$/;"	l
ffff800000106c90	kernel.asm	/^ffff800000106c90:	48 bf b5 c5 10 00 00 	movabs $0xffff80000010c5b5,%rdi$/;"	l
ffff800000106c97	kernel.asm	/^ffff800000106c97:	80 ff ff $/;"	l
ffff800000106c9a	kernel.asm	/^ffff800000106c9a:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff800000106ca1	kernel.asm	/^ffff800000106ca1:	80 ff ff $/;"	l
ffff800000106ca4	kernel.asm	/^ffff800000106ca4:	ff d0                	callq  *%rax$/;"	l
ffff800000106ca6	kernel.asm	/^ffff800000106ca6:	48 c7 c0 f0 ff ff ff 	mov    $0xfffffffffffffff0,%rax$/;"	l
ffff800000106cad	kernel.asm	/^ffff800000106cad:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000106cb1	kernel.asm	/^ffff800000106cb1:	8b 80 e8 00 00 00    	mov    0xe8(%rax),%eax$/;"	l
ffff800000106cb7	kernel.asm	/^ffff800000106cb7:	89 45 fc             	mov    %eax,-0x4(%rbp)$/;"	l
ffff800000106cba	kernel.asm	/^ffff800000106cba:	48 c7 c0 f0 ff ff ff 	mov    $0xfffffffffffffff0,%rax$/;"	l
ffff800000106cc1	kernel.asm	/^ffff800000106cc1:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000106cc5	kernel.asm	/^ffff800000106cc5:	48 8b 40 08          	mov    0x8(%rax),%rax$/;"	l
ffff800000106cc9	kernel.asm	/^ffff800000106cc9:	48 c7 c2 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rdx$/;"	l
ffff800000106cd0	kernel.asm	/^ffff800000106cd0:	64 48 8b 12          	mov    %fs:(%rdx),%rdx$/;"	l
ffff800000106cd4	kernel.asm	/^ffff800000106cd4:	48 83 c2 30          	add    $0x30,%rdx$/;"	l
ffff800000106cd8	kernel.asm	/^ffff800000106cd8:	48 89 c6             	mov    %rax,%rsi$/;"	l
ffff800000106cdb	kernel.asm	/^ffff800000106cdb:	48 89 d7             	mov    %rdx,%rdi$/;"	l
ffff800000106cde	kernel.asm	/^ffff800000106cde:	48 b8 e1 7f 10 00 00 	movabs $0xffff800000107fe1,%rax$/;"	l
ffff800000106ce5	kernel.asm	/^ffff800000106ce5:	80 ff ff $/;"	l
ffff800000106ce8	kernel.asm	/^ffff800000106ce8:	ff d0                	callq  *%rax$/;"	l
ffff800000106cea	kernel.asm	/^ffff800000106cea:	48 c7 c0 f0 ff ff ff 	mov    $0xfffffffffffffff0,%rax$/;"	l
ffff800000106cf1	kernel.asm	/^ffff800000106cf1:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000106cf5	kernel.asm	/^ffff800000106cf5:	8b 55 fc             	mov    -0x4(%rbp),%edx$/;"	l
ffff800000106cf8	kernel.asm	/^ffff800000106cf8:	89 90 e8 00 00 00    	mov    %edx,0xe8(%rax)$/;"	l
ffff800000106cfe	kernel.asm	/^ffff800000106cfe:	90                   	nop$/;"	l
ffff800000106cff	kernel.asm	/^ffff800000106cff:	c9                   	leaveq $/;"	l
ffff800000106d00	kernel.asm	/^ffff800000106d00:	c3                   	retq   $/;"	l
ffff800000106d01	kernel.asm	/^ffff800000106d01 <yield>:$/;"	l
ffff800000106d01	kernel.asm	/^ffff800000106d01:	55                   	push   %rbp$/;"	l
ffff800000106d02	kernel.asm	/^ffff800000106d02:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000106d05	kernel.asm	/^ffff800000106d05:	48 bf 60 8c 11 00 00 	movabs $0xffff800000118c60,%rdi$/;"	l
ffff800000106d0c	kernel.asm	/^ffff800000106d0c:	80 ff ff $/;"	l
ffff800000106d0f	kernel.asm	/^ffff800000106d0f:	48 b8 01 79 10 00 00 	movabs $0xffff800000107901,%rax$/;"	l
ffff800000106d16	kernel.asm	/^ffff800000106d16:	80 ff ff $/;"	l
ffff800000106d19	kernel.asm	/^ffff800000106d19:	ff d0                	callq  *%rax$/;"	l
ffff800000106d1b	kernel.asm	/^ffff800000106d1b:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000106d22	kernel.asm	/^ffff800000106d22:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000106d26	kernel.asm	/^ffff800000106d26:	c7 40 18 03 00 00 00 	movl   $0x3,0x18(%rax)$/;"	l
ffff800000106d2d	kernel.asm	/^ffff800000106d2d:	48 b8 ed 6b 10 00 00 	movabs $0xffff800000106bed,%rax$/;"	l
ffff800000106d34	kernel.asm	/^ffff800000106d34:	80 ff ff $/;"	l
ffff800000106d37	kernel.asm	/^ffff800000106d37:	ff d0                	callq  *%rax$/;"	l
ffff800000106d39	kernel.asm	/^ffff800000106d39:	48 bf 60 8c 11 00 00 	movabs $0xffff800000118c60,%rdi$/;"	l
ffff800000106d40	kernel.asm	/^ffff800000106d40:	80 ff ff $/;"	l
ffff800000106d43	kernel.asm	/^ffff800000106d43:	48 b8 9a 79 10 00 00 	movabs $0xffff80000010799a,%rax$/;"	l
ffff800000106d4a	kernel.asm	/^ffff800000106d4a:	80 ff ff $/;"	l
ffff800000106d4d	kernel.asm	/^ffff800000106d4d:	ff d0                	callq  *%rax$/;"	l
ffff800000106d4f	kernel.asm	/^ffff800000106d4f:	90                   	nop$/;"	l
ffff800000106d50	kernel.asm	/^ffff800000106d50:	5d                   	pop    %rbp$/;"	l
ffff800000106d51	kernel.asm	/^ffff800000106d51:	c3                   	retq   $/;"	l
ffff800000106d52	kernel.asm	/^ffff800000106d52 <forkret>:$/;"	l
ffff800000106d52	kernel.asm	/^ffff800000106d52:	55                   	push   %rbp$/;"	l
ffff800000106d53	kernel.asm	/^ffff800000106d53:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000106d56	kernel.asm	/^ffff800000106d56:	48 bf 60 8c 11 00 00 	movabs $0xffff800000118c60,%rdi$/;"	l
ffff800000106d5d	kernel.asm	/^ffff800000106d5d:	80 ff ff $/;"	l
ffff800000106d60	kernel.asm	/^ffff800000106d60:	48 b8 9a 79 10 00 00 	movabs $0xffff80000010799a,%rax$/;"	l
ffff800000106d67	kernel.asm	/^ffff800000106d67:	80 ff ff $/;"	l
ffff800000106d6a	kernel.asm	/^ffff800000106d6a:	ff d0                	callq  *%rax$/;"	l
ffff800000106d6c	kernel.asm	/^ffff800000106d6c:	48 b8 64 d5 10 00 00 	movabs $0xffff80000010d564,%rax$/;"	l
ffff800000106d73	kernel.asm	/^ffff800000106d73:	80 ff ff $/;"	l
ffff800000106d76	kernel.asm	/^ffff800000106d76:	8b 00                	mov    (%rax),%eax$/;"	l
ffff800000106d78	kernel.asm	/^ffff800000106d78:	85 c0                	test   %eax,%eax$/;"	l
ffff800000106d7a	kernel.asm	/^ffff800000106d7a:	74 32                	je     ffff800000106dae <forkret+0x5c>$/;"	l
ffff800000106d7c	kernel.asm	/^ffff800000106d7c:	48 b8 64 d5 10 00 00 	movabs $0xffff80000010d564,%rax$/;"	l
ffff800000106d83	kernel.asm	/^ffff800000106d83:	80 ff ff $/;"	l
ffff800000106d86	kernel.asm	/^ffff800000106d86:	c7 00 00 00 00 00    	movl   $0x0,(%rax)$/;"	l
ffff800000106d8c	kernel.asm	/^ffff800000106d8c:	bf 01 00 00 00       	mov    $0x1,%edi$/;"	l
ffff800000106d91	kernel.asm	/^ffff800000106d91:	48 b8 78 23 10 00 00 	movabs $0xffff800000102378,%rax$/;"	l
ffff800000106d98	kernel.asm	/^ffff800000106d98:	80 ff ff $/;"	l
ffff800000106d9b	kernel.asm	/^ffff800000106d9b:	ff d0                	callq  *%rax$/;"	l
ffff800000106d9d	kernel.asm	/^ffff800000106d9d:	bf 01 00 00 00       	mov    $0x1,%edi$/;"	l
ffff800000106da2	kernel.asm	/^ffff800000106da2:	48 b8 da 4b 10 00 00 	movabs $0xffff800000104bda,%rax$/;"	l
ffff800000106da9	kernel.asm	/^ffff800000106da9:	80 ff ff $/;"	l
ffff800000106dac	kernel.asm	/^ffff800000106dac:	ff d0                	callq  *%rax$/;"	l
ffff800000106dae	kernel.asm	/^ffff800000106dae:	90                   	nop$/;"	l
ffff800000106daf	kernel.asm	/^ffff800000106daf:	5d                   	pop    %rbp$/;"	l
ffff800000106db0	kernel.asm	/^ffff800000106db0:	c3                   	retq   $/;"	l
ffff800000106db1	kernel.asm	/^ffff800000106db1 <sleep>:$/;"	l
ffff800000106db1	kernel.asm	/^ffff800000106db1:	55                   	push   %rbp$/;"	l
ffff800000106db2	kernel.asm	/^ffff800000106db2:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000106db5	kernel.asm	/^ffff800000106db5:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff800000106db9	kernel.asm	/^ffff800000106db9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)$/;"	l
ffff800000106dbd	kernel.asm	/^ffff800000106dbd:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)$/;"	l
ffff800000106dc1	kernel.asm	/^ffff800000106dc1:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000106dc8	kernel.asm	/^ffff800000106dc8:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000106dcc	kernel.asm	/^ffff800000106dcc:	48 85 c0             	test   %rax,%rax$/;"	l
ffff800000106dcf	kernel.asm	/^ffff800000106dcf:	75 16                	jne    ffff800000106de7 <sleep+0x36>$/;"	l
ffff800000106dd1	kernel.asm	/^ffff800000106dd1:	48 bf c9 c5 10 00 00 	movabs $0xffff80000010c5c9,%rdi$/;"	l
ffff800000106dd8	kernel.asm	/^ffff800000106dd8:	80 ff ff $/;"	l
ffff800000106ddb	kernel.asm	/^ffff800000106ddb:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff800000106de2	kernel.asm	/^ffff800000106de2:	80 ff ff $/;"	l
ffff800000106de5	kernel.asm	/^ffff800000106de5:	ff d0                	callq  *%rax$/;"	l
ffff800000106de7	kernel.asm	/^ffff800000106de7:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)$/;"	l
ffff800000106dec	kernel.asm	/^ffff800000106dec:	75 16                	jne    ffff800000106e04 <sleep+0x53>$/;"	l
ffff800000106dee	kernel.asm	/^ffff800000106dee:	48 bf cf c5 10 00 00 	movabs $0xffff80000010c5cf,%rdi$/;"	l
ffff800000106df5	kernel.asm	/^ffff800000106df5:	80 ff ff $/;"	l
ffff800000106df8	kernel.asm	/^ffff800000106df8:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff800000106dff	kernel.asm	/^ffff800000106dff:	80 ff ff $/;"	l
ffff800000106e02	kernel.asm	/^ffff800000106e02:	ff d0                	callq  *%rax$/;"	l
ffff800000106e04	kernel.asm	/^ffff800000106e04:	48 b8 60 8c 11 00 00 	movabs $0xffff800000118c60,%rax$/;"	l
ffff800000106e0b	kernel.asm	/^ffff800000106e0b:	80 ff ff $/;"	l
ffff800000106e0e	kernel.asm	/^ffff800000106e0e:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)$/;"	l
ffff800000106e12	kernel.asm	/^ffff800000106e12:	74 29                	je     ffff800000106e3d <sleep+0x8c>$/;"	l
ffff800000106e14	kernel.asm	/^ffff800000106e14:	48 bf 60 8c 11 00 00 	movabs $0xffff800000118c60,%rdi$/;"	l
ffff800000106e1b	kernel.asm	/^ffff800000106e1b:	80 ff ff $/;"	l
ffff800000106e1e	kernel.asm	/^ffff800000106e1e:	48 b8 01 79 10 00 00 	movabs $0xffff800000107901,%rax$/;"	l
ffff800000106e25	kernel.asm	/^ffff800000106e25:	80 ff ff $/;"	l
ffff800000106e28	kernel.asm	/^ffff800000106e28:	ff d0                	callq  *%rax$/;"	l
ffff800000106e2a	kernel.asm	/^ffff800000106e2a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000106e2e	kernel.asm	/^ffff800000106e2e:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000106e31	kernel.asm	/^ffff800000106e31:	48 b8 9a 79 10 00 00 	movabs $0xffff80000010799a,%rax$/;"	l
ffff800000106e38	kernel.asm	/^ffff800000106e38:	80 ff ff $/;"	l
ffff800000106e3b	kernel.asm	/^ffff800000106e3b:	ff d0                	callq  *%rax$/;"	l
ffff800000106e3d	kernel.asm	/^ffff800000106e3d:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000106e44	kernel.asm	/^ffff800000106e44:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000106e48	kernel.asm	/^ffff800000106e48:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx$/;"	l
ffff800000106e4c	kernel.asm	/^ffff800000106e4c:	48 89 50 38          	mov    %rdx,0x38(%rax)$/;"	l
ffff800000106e50	kernel.asm	/^ffff800000106e50:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000106e57	kernel.asm	/^ffff800000106e57:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000106e5b	kernel.asm	/^ffff800000106e5b:	c7 40 18 02 00 00 00 	movl   $0x2,0x18(%rax)$/;"	l
ffff800000106e62	kernel.asm	/^ffff800000106e62:	48 b8 ed 6b 10 00 00 	movabs $0xffff800000106bed,%rax$/;"	l
ffff800000106e69	kernel.asm	/^ffff800000106e69:	80 ff ff $/;"	l
ffff800000106e6c	kernel.asm	/^ffff800000106e6c:	ff d0                	callq  *%rax$/;"	l
ffff800000106e6e	kernel.asm	/^ffff800000106e6e:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000106e75	kernel.asm	/^ffff800000106e75:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000106e79	kernel.asm	/^ffff800000106e79:	48 c7 40 38 00 00 00 	movq   $0x0,0x38(%rax)$/;"	l
ffff800000106e80	kernel.asm	/^ffff800000106e80:	00 $/;"	l
ffff800000106e81	kernel.asm	/^ffff800000106e81:	48 b8 60 8c 11 00 00 	movabs $0xffff800000118c60,%rax$/;"	l
ffff800000106e88	kernel.asm	/^ffff800000106e88:	80 ff ff $/;"	l
ffff800000106e8b	kernel.asm	/^ffff800000106e8b:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)$/;"	l
ffff800000106e8f	kernel.asm	/^ffff800000106e8f:	74 29                	je     ffff800000106eba <sleep+0x109>$/;"	l
ffff800000106e91	kernel.asm	/^ffff800000106e91:	48 bf 60 8c 11 00 00 	movabs $0xffff800000118c60,%rdi$/;"	l
ffff800000106e98	kernel.asm	/^ffff800000106e98:	80 ff ff $/;"	l
ffff800000106e9b	kernel.asm	/^ffff800000106e9b:	48 b8 9a 79 10 00 00 	movabs $0xffff80000010799a,%rax$/;"	l
ffff800000106ea2	kernel.asm	/^ffff800000106ea2:	80 ff ff $/;"	l
ffff800000106ea5	kernel.asm	/^ffff800000106ea5:	ff d0                	callq  *%rax$/;"	l
ffff800000106ea7	kernel.asm	/^ffff800000106ea7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000106eab	kernel.asm	/^ffff800000106eab:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000106eae	kernel.asm	/^ffff800000106eae:	48 b8 01 79 10 00 00 	movabs $0xffff800000107901,%rax$/;"	l
ffff800000106eb5	kernel.asm	/^ffff800000106eb5:	80 ff ff $/;"	l
ffff800000106eb8	kernel.asm	/^ffff800000106eb8:	ff d0                	callq  *%rax$/;"	l
ffff800000106eba	kernel.asm	/^ffff800000106eba:	90                   	nop$/;"	l
ffff800000106ebb	kernel.asm	/^ffff800000106ebb:	c9                   	leaveq $/;"	l
ffff800000106ebc	kernel.asm	/^ffff800000106ebc:	c3                   	retq   $/;"	l
ffff800000106ebd	kernel.asm	/^ffff800000106ebd <wakeup1>:$/;"	l
ffff800000106ebd	kernel.asm	/^ffff800000106ebd:	55                   	push   %rbp$/;"	l
ffff800000106ebe	kernel.asm	/^ffff800000106ebe:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000106ec1	kernel.asm	/^ffff800000106ec1:	48 83 ec 18          	sub    $0x18,%rsp$/;"	l
ffff800000106ec5	kernel.asm	/^ffff800000106ec5:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
ffff800000106ec9	kernel.asm	/^ffff800000106ec9:	48 b8 c8 8c 11 00 00 	movabs $0xffff800000118cc8,%rax$/;"	l
ffff800000106ed0	kernel.asm	/^ffff800000106ed0:	80 ff ff $/;"	l
ffff800000106ed3	kernel.asm	/^ffff800000106ed3:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff800000106ed7	kernel.asm	/^ffff800000106ed7:	eb 2d                	jmp    ffff800000106f06 <wakeup1+0x49>$/;"	l
ffff800000106ed9	kernel.asm	/^ffff800000106ed9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000106edd	kernel.asm	/^ffff800000106edd:	8b 40 18             	mov    0x18(%rax),%eax$/;"	l
ffff800000106ee0	kernel.asm	/^ffff800000106ee0:	83 f8 02             	cmp    $0x2,%eax$/;"	l
ffff800000106ee3	kernel.asm	/^ffff800000106ee3:	75 19                	jne    ffff800000106efe <wakeup1+0x41>$/;"	l
ffff800000106ee5	kernel.asm	/^ffff800000106ee5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000106ee9	kernel.asm	/^ffff800000106ee9:	48 8b 40 38          	mov    0x38(%rax),%rax$/;"	l
ffff800000106eed	kernel.asm	/^ffff800000106eed:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax$/;"	l
ffff800000106ef1	kernel.asm	/^ffff800000106ef1:	75 0b                	jne    ffff800000106efe <wakeup1+0x41>$/;"	l
ffff800000106ef3	kernel.asm	/^ffff800000106ef3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000106ef7	kernel.asm	/^ffff800000106ef7:	c7 40 18 03 00 00 00 	movl   $0x3,0x18(%rax)$/;"	l
ffff800000106efe	kernel.asm	/^ffff800000106efe:	48 81 45 f8 e0 00 00 	addq   $0xe0,-0x8(%rbp)$/;"	l
ffff800000106f05	kernel.asm	/^ffff800000106f05:	00 $/;"	l
ffff800000106f06	kernel.asm	/^ffff800000106f06:	48 b8 c8 c4 11 00 00 	movabs $0xffff80000011c4c8,%rax$/;"	l
ffff800000106f0d	kernel.asm	/^ffff800000106f0d:	80 ff ff $/;"	l
ffff800000106f10	kernel.asm	/^ffff800000106f10:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)$/;"	l
ffff800000106f14	kernel.asm	/^ffff800000106f14:	72 c3                	jb     ffff800000106ed9 <wakeup1+0x1c>$/;"	l
ffff800000106f16	kernel.asm	/^ffff800000106f16:	90                   	nop$/;"	l
ffff800000106f17	kernel.asm	/^ffff800000106f17:	c9                   	leaveq $/;"	l
ffff800000106f18	kernel.asm	/^ffff800000106f18:	c3                   	retq   $/;"	l
ffff800000106f19	kernel.asm	/^ffff800000106f19 <wakeup>:$/;"	l
ffff800000106f19	kernel.asm	/^ffff800000106f19:	55                   	push   %rbp$/;"	l
ffff800000106f1a	kernel.asm	/^ffff800000106f1a:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000106f1d	kernel.asm	/^ffff800000106f1d:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff800000106f21	kernel.asm	/^ffff800000106f21:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)$/;"	l
ffff800000106f25	kernel.asm	/^ffff800000106f25:	48 bf 60 8c 11 00 00 	movabs $0xffff800000118c60,%rdi$/;"	l
ffff800000106f2c	kernel.asm	/^ffff800000106f2c:	80 ff ff $/;"	l
ffff800000106f2f	kernel.asm	/^ffff800000106f2f:	48 b8 01 79 10 00 00 	movabs $0xffff800000107901,%rax$/;"	l
ffff800000106f36	kernel.asm	/^ffff800000106f36:	80 ff ff $/;"	l
ffff800000106f39	kernel.asm	/^ffff800000106f39:	ff d0                	callq  *%rax$/;"	l
ffff800000106f3b	kernel.asm	/^ffff800000106f3b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000106f3f	kernel.asm	/^ffff800000106f3f:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000106f42	kernel.asm	/^ffff800000106f42:	48 b8 bd 6e 10 00 00 	movabs $0xffff800000106ebd,%rax$/;"	l
ffff800000106f49	kernel.asm	/^ffff800000106f49:	80 ff ff $/;"	l
ffff800000106f4c	kernel.asm	/^ffff800000106f4c:	ff d0                	callq  *%rax$/;"	l
ffff800000106f4e	kernel.asm	/^ffff800000106f4e:	48 bf 60 8c 11 00 00 	movabs $0xffff800000118c60,%rdi$/;"	l
ffff800000106f55	kernel.asm	/^ffff800000106f55:	80 ff ff $/;"	l
ffff800000106f58	kernel.asm	/^ffff800000106f58:	48 b8 9a 79 10 00 00 	movabs $0xffff80000010799a,%rax$/;"	l
ffff800000106f5f	kernel.asm	/^ffff800000106f5f:	80 ff ff $/;"	l
ffff800000106f62	kernel.asm	/^ffff800000106f62:	ff d0                	callq  *%rax$/;"	l
ffff800000106f64	kernel.asm	/^ffff800000106f64:	90                   	nop$/;"	l
ffff800000106f65	kernel.asm	/^ffff800000106f65:	c9                   	leaveq $/;"	l
ffff800000106f66	kernel.asm	/^ffff800000106f66:	c3                   	retq   $/;"	l
ffff800000106f67	kernel.asm	/^ffff800000106f67 <kill>:$/;"	l
ffff800000106f67	kernel.asm	/^ffff800000106f67:	55                   	push   %rbp$/;"	l
ffff800000106f68	kernel.asm	/^ffff800000106f68:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000106f6b	kernel.asm	/^ffff800000106f6b:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ffff800000106f6f	kernel.asm	/^ffff800000106f6f:	89 7d ec             	mov    %edi,-0x14(%rbp)$/;"	l
ffff800000106f72	kernel.asm	/^ffff800000106f72:	48 bf 60 8c 11 00 00 	movabs $0xffff800000118c60,%rdi$/;"	l
ffff800000106f79	kernel.asm	/^ffff800000106f79:	80 ff ff $/;"	l
ffff800000106f7c	kernel.asm	/^ffff800000106f7c:	48 b8 01 79 10 00 00 	movabs $0xffff800000107901,%rax$/;"	l
ffff800000106f83	kernel.asm	/^ffff800000106f83:	80 ff ff $/;"	l
ffff800000106f86	kernel.asm	/^ffff800000106f86:	ff d0                	callq  *%rax$/;"	l
ffff800000106f88	kernel.asm	/^ffff800000106f88:	48 b8 c8 8c 11 00 00 	movabs $0xffff800000118cc8,%rax$/;"	l
ffff800000106f8f	kernel.asm	/^ffff800000106f8f:	80 ff ff $/;"	l
ffff800000106f92	kernel.asm	/^ffff800000106f92:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff800000106f96	kernel.asm	/^ffff800000106f96:	eb 53                	jmp    ffff800000106feb <kill+0x84>$/;"	l
ffff800000106f98	kernel.asm	/^ffff800000106f98:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000106f9c	kernel.asm	/^ffff800000106f9c:	8b 40 1c             	mov    0x1c(%rax),%eax$/;"	l
ffff800000106f9f	kernel.asm	/^ffff800000106f9f:	3b 45 ec             	cmp    -0x14(%rbp),%eax$/;"	l
ffff800000106fa2	kernel.asm	/^ffff800000106fa2:	75 3f                	jne    ffff800000106fe3 <kill+0x7c>$/;"	l
ffff800000106fa4	kernel.asm	/^ffff800000106fa4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000106fa8	kernel.asm	/^ffff800000106fa8:	c7 40 40 01 00 00 00 	movl   $0x1,0x40(%rax)$/;"	l
ffff800000106faf	kernel.asm	/^ffff800000106faf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000106fb3	kernel.asm	/^ffff800000106fb3:	8b 40 18             	mov    0x18(%rax),%eax$/;"	l
ffff800000106fb6	kernel.asm	/^ffff800000106fb6:	83 f8 02             	cmp    $0x2,%eax$/;"	l
ffff800000106fb9	kernel.asm	/^ffff800000106fb9:	75 0b                	jne    ffff800000106fc6 <kill+0x5f>$/;"	l
ffff800000106fbb	kernel.asm	/^ffff800000106fbb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000106fbf	kernel.asm	/^ffff800000106fbf:	c7 40 18 03 00 00 00 	movl   $0x3,0x18(%rax)$/;"	l
ffff800000106fc6	kernel.asm	/^ffff800000106fc6:	48 bf 60 8c 11 00 00 	movabs $0xffff800000118c60,%rdi$/;"	l
ffff800000106fcd	kernel.asm	/^ffff800000106fcd:	80 ff ff $/;"	l
ffff800000106fd0	kernel.asm	/^ffff800000106fd0:	48 b8 9a 79 10 00 00 	movabs $0xffff80000010799a,%rax$/;"	l
ffff800000106fd7	kernel.asm	/^ffff800000106fd7:	80 ff ff $/;"	l
ffff800000106fda	kernel.asm	/^ffff800000106fda:	ff d0                	callq  *%rax$/;"	l
ffff800000106fdc	kernel.asm	/^ffff800000106fdc:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000106fe1	kernel.asm	/^ffff800000106fe1:	eb 33                	jmp    ffff800000107016 <kill+0xaf>$/;"	l
ffff800000106fe3	kernel.asm	/^ffff800000106fe3:	48 81 45 f8 e0 00 00 	addq   $0xe0,-0x8(%rbp)$/;"	l
ffff800000106fea	kernel.asm	/^ffff800000106fea:	00 $/;"	l
ffff800000106feb	kernel.asm	/^ffff800000106feb:	48 b8 c8 c4 11 00 00 	movabs $0xffff80000011c4c8,%rax$/;"	l
ffff800000106ff2	kernel.asm	/^ffff800000106ff2:	80 ff ff $/;"	l
ffff800000106ff5	kernel.asm	/^ffff800000106ff5:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)$/;"	l
ffff800000106ff9	kernel.asm	/^ffff800000106ff9:	72 9d                	jb     ffff800000106f98 <kill+0x31>$/;"	l
ffff800000106ffb	kernel.asm	/^ffff800000106ffb:	48 bf 60 8c 11 00 00 	movabs $0xffff800000118c60,%rdi$/;"	l
ffff800000107002	kernel.asm	/^ffff800000107002:	80 ff ff $/;"	l
ffff800000107005	kernel.asm	/^ffff800000107005:	48 b8 9a 79 10 00 00 	movabs $0xffff80000010799a,%rax$/;"	l
ffff80000010700c	kernel.asm	/^ffff80000010700c:	80 ff ff $/;"	l
ffff80000010700f	kernel.asm	/^ffff80000010700f:	ff d0                	callq  *%rax$/;"	l
ffff800000107011	kernel.asm	/^ffff800000107011:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff800000107016	kernel.asm	/^ffff800000107016:	c9                   	leaveq $/;"	l
ffff800000107017	kernel.asm	/^ffff800000107017:	c3                   	retq   $/;"	l
ffff800000107018	kernel.asm	/^ffff800000107018 <procdump>:$/;"	l
ffff800000107018	kernel.asm	/^ffff800000107018:	55                   	push   %rbp$/;"	l
ffff800000107019	kernel.asm	/^ffff800000107019:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010701c	kernel.asm	/^ffff80000010701c:	48 83 ec 70          	sub    $0x70,%rsp$/;"	l
ffff800000107020	kernel.asm	/^ffff800000107020:	48 b8 c8 8c 11 00 00 	movabs $0xffff800000118cc8,%rax$/;"	l
ffff800000107027	kernel.asm	/^ffff800000107027:	80 ff ff $/;"	l
ffff80000010702a	kernel.asm	/^ffff80000010702a:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ffff80000010702e	kernel.asm	/^ffff80000010702e:	e9 3b 01 00 00       	jmpq   ffff80000010716e <procdump+0x156>$/;"	l
ffff800000107033	kernel.asm	/^ffff800000107033:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000107037	kernel.asm	/^ffff800000107037:	8b 40 18             	mov    0x18(%rax),%eax$/;"	l
ffff80000010703a	kernel.asm	/^ffff80000010703a:	85 c0                	test   %eax,%eax$/;"	l
ffff80000010703c	kernel.asm	/^ffff80000010703c:	0f 84 23 01 00 00    	je     ffff800000107165 <procdump+0x14d>$/;"	l
ffff800000107042	kernel.asm	/^ffff800000107042:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000107046	kernel.asm	/^ffff800000107046:	8b 40 18             	mov    0x18(%rax),%eax$/;"	l
ffff800000107049	kernel.asm	/^ffff800000107049:	83 f8 05             	cmp    $0x5,%eax$/;"	l
ffff80000010704c	kernel.asm	/^ffff80000010704c:	77 39                	ja     ffff800000107087 <procdump+0x6f>$/;"	l
ffff80000010704e	kernel.asm	/^ffff80000010704e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000107052	kernel.asm	/^ffff800000107052:	8b 50 18             	mov    0x18(%rax),%edx$/;"	l
ffff800000107055	kernel.asm	/^ffff800000107055:	48 b8 80 d5 10 00 00 	movabs $0xffff80000010d580,%rax$/;"	l
ffff80000010705c	kernel.asm	/^ffff80000010705c:	80 ff ff $/;"	l
ffff80000010705f	kernel.asm	/^ffff80000010705f:	89 d2                	mov    %edx,%edx$/;"	l
ffff800000107061	kernel.asm	/^ffff800000107061:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax$/;"	l
ffff800000107065	kernel.asm	/^ffff800000107065:	48 85 c0             	test   %rax,%rax$/;"	l
ffff800000107068	kernel.asm	/^ffff800000107068:	74 1d                	je     ffff800000107087 <procdump+0x6f>$/;"	l
ffff80000010706a	kernel.asm	/^ffff80000010706a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff80000010706e	kernel.asm	/^ffff80000010706e:	8b 50 18             	mov    0x18(%rax),%edx$/;"	l
ffff800000107071	kernel.asm	/^ffff800000107071:	48 b8 80 d5 10 00 00 	movabs $0xffff80000010d580,%rax$/;"	l
ffff800000107078	kernel.asm	/^ffff800000107078:	80 ff ff $/;"	l
ffff80000010707b	kernel.asm	/^ffff80000010707b:	89 d2                	mov    %edx,%edx$/;"	l
ffff80000010707d	kernel.asm	/^ffff80000010707d:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax$/;"	l
ffff800000107081	kernel.asm	/^ffff800000107081:	48 89 45 e8          	mov    %rax,-0x18(%rbp)$/;"	l
ffff800000107085	kernel.asm	/^ffff800000107085:	eb 0e                	jmp    ffff800000107095 <procdump+0x7d>$/;"	l
ffff800000107087	kernel.asm	/^ffff800000107087:	48 b8 e0 c5 10 00 00 	movabs $0xffff80000010c5e0,%rax$/;"	l
ffff80000010708e	kernel.asm	/^ffff80000010708e:	80 ff ff $/;"	l
ffff800000107091	kernel.asm	/^ffff800000107091:	48 89 45 e8          	mov    %rax,-0x18(%rbp)$/;"	l
ffff800000107095	kernel.asm	/^ffff800000107095:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000107099	kernel.asm	/^ffff800000107099:	48 8d 88 d0 00 00 00 	lea    0xd0(%rax),%rcx$/;"	l
ffff8000001070a0	kernel.asm	/^ffff8000001070a0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff8000001070a4	kernel.asm	/^ffff8000001070a4:	8b 40 1c             	mov    0x1c(%rax),%eax$/;"	l
ffff8000001070a7	kernel.asm	/^ffff8000001070a7:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx$/;"	l
ffff8000001070ab	kernel.asm	/^ffff8000001070ab:	89 c6                	mov    %eax,%esi$/;"	l
ffff8000001070ad	kernel.asm	/^ffff8000001070ad:	48 bf e4 c5 10 00 00 	movabs $0xffff80000010c5e4,%rdi$/;"	l
ffff8000001070b4	kernel.asm	/^ffff8000001070b4:	80 ff ff $/;"	l
ffff8000001070b7	kernel.asm	/^ffff8000001070b7:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff8000001070bc	kernel.asm	/^ffff8000001070bc:	49 b8 ac 07 10 00 00 	movabs $0xffff8000001007ac,%r8$/;"	l
ffff8000001070c3	kernel.asm	/^ffff8000001070c3:	80 ff ff $/;"	l
ffff8000001070c6	kernel.asm	/^ffff8000001070c6:	41 ff d0             	callq  *%r8$/;"	l
ffff8000001070c9	kernel.asm	/^ffff8000001070c9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff8000001070cd	kernel.asm	/^ffff8000001070cd:	8b 40 18             	mov    0x18(%rax),%eax$/;"	l
ffff8000001070d0	kernel.asm	/^ffff8000001070d0:	83 f8 02             	cmp    $0x2,%eax$/;"	l
ffff8000001070d3	kernel.asm	/^ffff8000001070d3:	75 73                	jne    ffff800000107148 <procdump+0x130>$/;"	l
ffff8000001070d5	kernel.asm	/^ffff8000001070d5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff8000001070d9	kernel.asm	/^ffff8000001070d9:	48 8b 40 30          	mov    0x30(%rax),%rax$/;"	l
ffff8000001070dd	kernel.asm	/^ffff8000001070dd:	48 8b 40 30          	mov    0x30(%rax),%rax$/;"	l
ffff8000001070e1	kernel.asm	/^ffff8000001070e1:	48 83 c0 10          	add    $0x10,%rax$/;"	l
ffff8000001070e5	kernel.asm	/^ffff8000001070e5:	48 89 c2             	mov    %rax,%rdx$/;"	l
ffff8000001070e8	kernel.asm	/^ffff8000001070e8:	48 8d 45 90          	lea    -0x70(%rbp),%rax$/;"	l
ffff8000001070ec	kernel.asm	/^ffff8000001070ec:	48 89 c6             	mov    %rax,%rsi$/;"	l
ffff8000001070ef	kernel.asm	/^ffff8000001070ef:	48 89 d7             	mov    %rdx,%rdi$/;"	l
ffff8000001070f2	kernel.asm	/^ffff8000001070f2:	48 b8 3f 7a 10 00 00 	movabs $0xffff800000107a3f,%rax$/;"	l
ffff8000001070f9	kernel.asm	/^ffff8000001070f9:	80 ff ff $/;"	l
ffff8000001070fc	kernel.asm	/^ffff8000001070fc:	ff d0                	callq  *%rax$/;"	l
ffff8000001070fe	kernel.asm	/^ffff8000001070fe:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)$/;"	l
ffff800000107105	kernel.asm	/^ffff800000107105:	eb 2c                	jmp    ffff800000107133 <procdump+0x11b>$/;"	l
ffff800000107107	kernel.asm	/^ffff800000107107:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff80000010710a	kernel.asm	/^ffff80000010710a:	48 98                	cltq   $/;"	l
ffff80000010710c	kernel.asm	/^ffff80000010710c:	48 8b 44 c5 90       	mov    -0x70(%rbp,%rax,8),%rax$/;"	l
ffff800000107111	kernel.asm	/^ffff800000107111:	48 89 c6             	mov    %rax,%rsi$/;"	l
ffff800000107114	kernel.asm	/^ffff800000107114:	48 bf ed c5 10 00 00 	movabs $0xffff80000010c5ed,%rdi$/;"	l
ffff80000010711b	kernel.asm	/^ffff80000010711b:	80 ff ff $/;"	l
ffff80000010711e	kernel.asm	/^ffff80000010711e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000107123	kernel.asm	/^ffff800000107123:	48 ba ac 07 10 00 00 	movabs $0xffff8000001007ac,%rdx$/;"	l
ffff80000010712a	kernel.asm	/^ffff80000010712a:	80 ff ff $/;"	l
ffff80000010712d	kernel.asm	/^ffff80000010712d:	ff d2                	callq  *%rdx$/;"	l
ffff80000010712f	kernel.asm	/^ffff80000010712f:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)$/;"	l
ffff800000107133	kernel.asm	/^ffff800000107133:	83 7d fc 09          	cmpl   $0x9,-0x4(%rbp)$/;"	l
ffff800000107137	kernel.asm	/^ffff800000107137:	7f 0f                	jg     ffff800000107148 <procdump+0x130>$/;"	l
ffff800000107139	kernel.asm	/^ffff800000107139:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff80000010713c	kernel.asm	/^ffff80000010713c:	48 98                	cltq   $/;"	l
ffff80000010713e	kernel.asm	/^ffff80000010713e:	48 8b 44 c5 90       	mov    -0x70(%rbp,%rax,8),%rax$/;"	l
ffff800000107143	kernel.asm	/^ffff800000107143:	48 85 c0             	test   %rax,%rax$/;"	l
ffff800000107146	kernel.asm	/^ffff800000107146:	75 bf                	jne    ffff800000107107 <procdump+0xef>$/;"	l
ffff800000107148	kernel.asm	/^ffff800000107148:	48 bf f1 c5 10 00 00 	movabs $0xffff80000010c5f1,%rdi$/;"	l
ffff80000010714f	kernel.asm	/^ffff80000010714f:	80 ff ff $/;"	l
ffff800000107152	kernel.asm	/^ffff800000107152:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000107157	kernel.asm	/^ffff800000107157:	48 ba ac 07 10 00 00 	movabs $0xffff8000001007ac,%rdx$/;"	l
ffff80000010715e	kernel.asm	/^ffff80000010715e:	80 ff ff $/;"	l
ffff800000107161	kernel.asm	/^ffff800000107161:	ff d2                	callq  *%rdx$/;"	l
ffff800000107163	kernel.asm	/^ffff800000107163:	eb 01                	jmp    ffff800000107166 <procdump+0x14e>$/;"	l
ffff800000107165	kernel.asm	/^ffff800000107165:	90                   	nop$/;"	l
ffff800000107166	kernel.asm	/^ffff800000107166:	48 81 45 f0 e0 00 00 	addq   $0xe0,-0x10(%rbp)$/;"	l
ffff80000010716d	kernel.asm	/^ffff80000010716d:	00 $/;"	l
ffff80000010716e	kernel.asm	/^ffff80000010716e:	48 b8 c8 c4 11 00 00 	movabs $0xffff80000011c4c8,%rax$/;"	l
ffff800000107175	kernel.asm	/^ffff800000107175:	80 ff ff $/;"	l
ffff800000107178	kernel.asm	/^ffff800000107178:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)$/;"	l
ffff80000010717c	kernel.asm	/^ffff80000010717c:	0f 82 b1 fe ff ff    	jb     ffff800000107033 <procdump+0x1b>$/;"	l
ffff800000107182	kernel.asm	/^ffff800000107182:	90                   	nop$/;"	l
ffff800000107183	kernel.asm	/^ffff800000107183:	c9                   	leaveq $/;"	l
ffff800000107184	kernel.asm	/^ffff800000107184:	c3                   	retq   $/;"	l
ffff800000107185	kernel.asm	/^ffff800000107185 <procfs_ipopulate>:$/;"	l
ffff800000107185	kernel.asm	/^ffff800000107185:	55                   	push   %rbp$/;"	l
ffff800000107186	kernel.asm	/^ffff800000107186:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000107189	kernel.asm	/^ffff800000107189:	48 83 ec 08          	sub    $0x8,%rsp$/;"	l
ffff80000010718d	kernel.asm	/^ffff80000010718d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)$/;"	l
ffff800000107191	kernel.asm	/^ffff800000107191:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000107195	kernel.asm	/^ffff800000107195:	c7 80 a8 00 00 00 00 	movl   $0x0,0xa8(%rax)$/;"	l
ffff80000010719c	kernel.asm	/^ffff80000010719c:	00 00 00 $/;"	l
ffff80000010719f	kernel.asm	/^ffff80000010719f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001071a3	kernel.asm	/^ffff8000001071a3:	8b 80 90 00 00 00    	mov    0x90(%rax),%eax$/;"	l
ffff8000001071a9	kernel.asm	/^ffff8000001071a9:	83 c8 02             	or     $0x2,%eax$/;"	l
ffff8000001071ac	kernel.asm	/^ffff8000001071ac:	89 c2                	mov    %eax,%edx$/;"	l
ffff8000001071ae	kernel.asm	/^ffff8000001071ae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001071b2	kernel.asm	/^ffff8000001071b2:	89 90 90 00 00 00    	mov    %edx,0x90(%rax)$/;"	l
ffff8000001071b8	kernel.asm	/^ffff8000001071b8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001071bc	kernel.asm	/^ffff8000001071bc:	8b 40 04             	mov    0x4(%rax),%eax$/;"	l
ffff8000001071bf	kernel.asm	/^ffff8000001071bf:	3d 0f 27 00 00       	cmp    $0x270f,%eax$/;"	l
ffff8000001071c4	kernel.asm	/^ffff8000001071c4:	77 07                	ja     ffff8000001071cd <procfs_ipopulate+0x48>$/;"	l
ffff8000001071c6	kernel.asm	/^ffff8000001071c6:	ba 01 00 00 00       	mov    $0x1,%edx$/;"	l
ffff8000001071cb	kernel.asm	/^ffff8000001071cb:	eb 05                	jmp    ffff8000001071d2 <procfs_ipopulate+0x4d>$/;"	l
ffff8000001071cd	kernel.asm	/^ffff8000001071cd:	ba 64 00 00 00       	mov    $0x64,%edx$/;"	l
ffff8000001071d2	kernel.asm	/^ffff8000001071d2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001071d6	kernel.asm	/^ffff8000001071d6:	66 89 90 a0 00 00 00 	mov    %dx,0xa0(%rax)$/;"	l
ffff8000001071dd	kernel.asm	/^ffff8000001071dd:	90                   	nop$/;"	l
ffff8000001071de	kernel.asm	/^ffff8000001071de:	c9                   	leaveq $/;"	l
ffff8000001071df	kernel.asm	/^ffff8000001071df:	c3                   	retq   $/;"	l
ffff8000001071e0	kernel.asm	/^ffff8000001071e0 <procfs_iupdate>:$/;"	l
ffff8000001071e0	kernel.asm	/^ffff8000001071e0:	55                   	push   %rbp$/;"	l
ffff8000001071e1	kernel.asm	/^ffff8000001071e1:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff8000001071e4	kernel.asm	/^ffff8000001071e4:	48 83 ec 08          	sub    $0x8,%rsp$/;"	l
ffff8000001071e8	kernel.asm	/^ffff8000001071e8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)$/;"	l
ffff8000001071ec	kernel.asm	/^ffff8000001071ec:	90                   	nop$/;"	l
ffff8000001071ed	kernel.asm	/^ffff8000001071ed:	c9                   	leaveq $/;"	l
ffff8000001071ee	kernel.asm	/^ffff8000001071ee:	c3                   	retq   $/;"	l
ffff8000001071ef	kernel.asm	/^ffff8000001071ef <procfs_writei>:$/;"	l
ffff8000001071ef	kernel.asm	/^ffff8000001071ef:	55                   	push   %rbp$/;"	l
ffff8000001071f0	kernel.asm	/^ffff8000001071f0:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff8000001071f3	kernel.asm	/^ffff8000001071f3:	48 83 ec 18          	sub    $0x18,%rsp$/;"	l
ffff8000001071f7	kernel.asm	/^ffff8000001071f7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)$/;"	l
ffff8000001071fb	kernel.asm	/^ffff8000001071fb:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)$/;"	l
ffff8000001071ff	kernel.asm	/^ffff8000001071ff:	89 55 ec             	mov    %edx,-0x14(%rbp)$/;"	l
ffff800000107202	kernel.asm	/^ffff800000107202:	89 4d e8             	mov    %ecx,-0x18(%rbp)$/;"	l
ffff800000107205	kernel.asm	/^ffff800000107205:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff80000010720a	kernel.asm	/^ffff80000010720a:	c9                   	leaveq $/;"	l
ffff80000010720b	kernel.asm	/^ffff80000010720b:	c3                   	retq   $/;"	l
ffff80000010720c	kernel.asm	/^ffff80000010720c <sprintuint>:$/;"	l
ffff80000010720c	kernel.asm	/^ffff80000010720c:	55                   	push   %rbp$/;"	l
ffff80000010720d	kernel.asm	/^ffff80000010720d:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000107210	kernel.asm	/^ffff800000107210:	48 83 ec 40          	sub    $0x40,%rsp$/;"	l
ffff800000107214	kernel.asm	/^ffff800000107214:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)$/;"	l
ffff800000107218	kernel.asm	/^ffff800000107218:	89 75 c4             	mov    %esi,-0x3c(%rbp)$/;"	l
ffff80000010721b	kernel.asm	/^ffff80000010721b:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)$/;"	l
ffff800000107222	kernel.asm	/^ffff800000107222:	83 7d c4 00          	cmpl   $0x0,-0x3c(%rbp)$/;"	l
ffff800000107226	kernel.asm	/^ffff800000107226:	75 54                	jne    ffff80000010727c <sprintuint+0x70>$/;"	l
ffff800000107228	kernel.asm	/^ffff800000107228:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
ffff80000010722c	kernel.asm	/^ffff80000010722c:	c6 00 30             	movb   $0x30,(%rax)$/;"	l
ffff80000010722f	kernel.asm	/^ffff80000010722f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
ffff800000107233	kernel.asm	/^ffff800000107233:	48 83 c0 01          	add    $0x1,%rax$/;"	l
ffff800000107237	kernel.asm	/^ffff800000107237:	c6 00 00             	movb   $0x0,(%rax)$/;"	l
ffff80000010723a	kernel.asm	/^ffff80000010723a:	e9 86 00 00 00       	jmpq   ffff8000001072c5 <sprintuint+0xb9>$/;"	l
ffff80000010723f	kernel.asm	/^ffff80000010723f:	8b 75 fc             	mov    -0x4(%rbp),%esi$/;"	l
ffff800000107242	kernel.asm	/^ffff800000107242:	8d 46 01             	lea    0x1(%rsi),%eax$/;"	l
ffff800000107245	kernel.asm	/^ffff800000107245:	89 45 fc             	mov    %eax,-0x4(%rbp)$/;"	l
ffff800000107248	kernel.asm	/^ffff800000107248:	8b 4d c4             	mov    -0x3c(%rbp),%ecx$/;"	l
ffff80000010724b	kernel.asm	/^ffff80000010724b:	ba cd cc cc cc       	mov    $0xcccccccd,%edx$/;"	l
ffff800000107250	kernel.asm	/^ffff800000107250:	89 c8                	mov    %ecx,%eax$/;"	l
ffff800000107252	kernel.asm	/^ffff800000107252:	f7 e2                	mul    %edx$/;"	l
ffff800000107254	kernel.asm	/^ffff800000107254:	c1 ea 03             	shr    $0x3,%edx$/;"	l
ffff800000107257	kernel.asm	/^ffff800000107257:	89 d0                	mov    %edx,%eax$/;"	l
ffff800000107259	kernel.asm	/^ffff800000107259:	c1 e0 02             	shl    $0x2,%eax$/;"	l
ffff80000010725c	kernel.asm	/^ffff80000010725c:	01 d0                	add    %edx,%eax$/;"	l
ffff80000010725e	kernel.asm	/^ffff80000010725e:	01 c0                	add    %eax,%eax$/;"	l
ffff800000107260	kernel.asm	/^ffff800000107260:	29 c1                	sub    %eax,%ecx$/;"	l
ffff800000107262	kernel.asm	/^ffff800000107262:	89 ca                	mov    %ecx,%edx$/;"	l
ffff800000107264	kernel.asm	/^ffff800000107264:	89 f0                	mov    %esi,%eax$/;"	l
ffff800000107266	kernel.asm	/^ffff800000107266:	89 54 85 d0          	mov    %edx,-0x30(%rbp,%rax,4)$/;"	l
ffff80000010726a	kernel.asm	/^ffff80000010726a:	8b 45 c4             	mov    -0x3c(%rbp),%eax$/;"	l
ffff80000010726d	kernel.asm	/^ffff80000010726d:	ba cd cc cc cc       	mov    $0xcccccccd,%edx$/;"	l
ffff800000107272	kernel.asm	/^ffff800000107272:	f7 e2                	mul    %edx$/;"	l
ffff800000107274	kernel.asm	/^ffff800000107274:	89 d0                	mov    %edx,%eax$/;"	l
ffff800000107276	kernel.asm	/^ffff800000107276:	c1 e8 03             	shr    $0x3,%eax$/;"	l
ffff800000107279	kernel.asm	/^ffff800000107279:	89 45 c4             	mov    %eax,-0x3c(%rbp)$/;"	l
ffff80000010727c	kernel.asm	/^ffff80000010727c:	83 7d c4 00          	cmpl   $0x0,-0x3c(%rbp)$/;"	l
ffff800000107280	kernel.asm	/^ffff800000107280:	75 bd                	jne    ffff80000010723f <sprintuint+0x33>$/;"	l
ffff800000107282	kernel.asm	/^ffff800000107282:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)$/;"	l
ffff800000107289	kernel.asm	/^ffff800000107289:	eb 27                	jmp    ffff8000001072b2 <sprintuint+0xa6>$/;"	l
ffff80000010728b	kernel.asm	/^ffff80000010728b:	8b 45 f8             	mov    -0x8(%rbp),%eax$/;"	l
ffff80000010728e	kernel.asm	/^ffff80000010728e:	8d 50 01             	lea    0x1(%rax),%edx$/;"	l
ffff800000107291	kernel.asm	/^ffff800000107291:	89 55 f8             	mov    %edx,-0x8(%rbp)$/;"	l
ffff800000107294	kernel.asm	/^ffff800000107294:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000107296	kernel.asm	/^ffff800000107296:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
ffff80000010729a	kernel.asm	/^ffff80000010729a:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff80000010729d	kernel.asm	/^ffff80000010729d:	8b 55 fc             	mov    -0x4(%rbp),%edx$/;"	l
ffff8000001072a0	kernel.asm	/^ffff8000001072a0:	83 ea 01             	sub    $0x1,%edx$/;"	l
ffff8000001072a3	kernel.asm	/^ffff8000001072a3:	89 d2                	mov    %edx,%edx$/;"	l
ffff8000001072a5	kernel.asm	/^ffff8000001072a5:	8b 54 95 d0          	mov    -0x30(%rbp,%rdx,4),%edx$/;"	l
ffff8000001072a9	kernel.asm	/^ffff8000001072a9:	83 c2 30             	add    $0x30,%edx$/;"	l
ffff8000001072ac	kernel.asm	/^ffff8000001072ac:	88 10                	mov    %dl,(%rax)$/;"	l
ffff8000001072ae	kernel.asm	/^ffff8000001072ae:	83 6d fc 01          	subl   $0x1,-0x4(%rbp)$/;"	l
ffff8000001072b2	kernel.asm	/^ffff8000001072b2:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)$/;"	l
ffff8000001072b6	kernel.asm	/^ffff8000001072b6:	75 d3                	jne    ffff80000010728b <sprintuint+0x7f>$/;"	l
ffff8000001072b8	kernel.asm	/^ffff8000001072b8:	8b 55 f8             	mov    -0x8(%rbp),%edx$/;"	l
ffff8000001072bb	kernel.asm	/^ffff8000001072bb:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
ffff8000001072bf	kernel.asm	/^ffff8000001072bf:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff8000001072c2	kernel.asm	/^ffff8000001072c2:	c6 00 00             	movb   $0x0,(%rax)$/;"	l
ffff8000001072c5	kernel.asm	/^ffff8000001072c5:	c9                   	leaveq $/;"	l
ffff8000001072c6	kernel.asm	/^ffff8000001072c6:	c3                   	retq   $/;"	l
ffff8000001072c7	kernel.asm	/^ffff8000001072c7 <sprintx32>:$/;"	l
ffff8000001072c7	kernel.asm	/^ffff8000001072c7:	55                   	push   %rbp$/;"	l
ffff8000001072c8	kernel.asm	/^ffff8000001072c8:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff8000001072cb	kernel.asm	/^ffff8000001072cb:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ffff8000001072cf	kernel.asm	/^ffff8000001072cf:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
ffff8000001072d3	kernel.asm	/^ffff8000001072d3:	89 75 e4             	mov    %esi,-0x1c(%rbp)$/;"	l
ffff8000001072d6	kernel.asm	/^ffff8000001072d6:	8b 45 e4             	mov    -0x1c(%rbp),%eax$/;"	l
ffff8000001072d9	kernel.asm	/^ffff8000001072d9:	c1 e8 1c             	shr    $0x1c,%eax$/;"	l
ffff8000001072dc	kernel.asm	/^ffff8000001072dc:	89 c2                	mov    %eax,%edx$/;"	l
ffff8000001072de	kernel.asm	/^ffff8000001072de:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff8000001072e2	kernel.asm	/^ffff8000001072e2:	88 10                	mov    %dl,(%rax)$/;"	l
ffff8000001072e4	kernel.asm	/^ffff8000001072e4:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)$/;"	l
ffff8000001072eb	kernel.asm	/^ffff8000001072eb:	eb 41                	jmp    ffff80000010732e <sprintx32+0x67>$/;"	l
ffff8000001072ed	kernel.asm	/^ffff8000001072ed:	b8 07 00 00 00       	mov    $0x7,%eax$/;"	l
ffff8000001072f2	kernel.asm	/^ffff8000001072f2:	2b 45 fc             	sub    -0x4(%rbp),%eax$/;"	l
ffff8000001072f5	kernel.asm	/^ffff8000001072f5:	c1 e0 02             	shl    $0x2,%eax$/;"	l
ffff8000001072f8	kernel.asm	/^ffff8000001072f8:	8b 55 e4             	mov    -0x1c(%rbp),%edx$/;"	l
ffff8000001072fb	kernel.asm	/^ffff8000001072fb:	89 c1                	mov    %eax,%ecx$/;"	l
ffff8000001072fd	kernel.asm	/^ffff8000001072fd:	d3 ea                	shr    %cl,%edx$/;"	d
ffff8000001072ff	kernel.asm	/^ffff8000001072ff:	89 d0                	mov    %edx,%eax$/;"	l
ffff800000107301	kernel.asm	/^ffff800000107301:	83 e0 0f             	and    $0xf,%eax$/;"	l
ffff800000107304	kernel.asm	/^ffff800000107304:	89 45 f8             	mov    %eax,-0x8(%rbp)$/;"	l
ffff800000107307	kernel.asm	/^ffff800000107307:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff80000010730a	kernel.asm	/^ffff80000010730a:	48 63 d0             	movslq %eax,%rdx$/;"	l
ffff80000010730d	kernel.asm	/^ffff80000010730d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000107311	kernel.asm	/^ffff800000107311:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff800000107314	kernel.asm	/^ffff800000107314:	83 7d f8 09          	cmpl   $0x9,-0x8(%rbp)$/;"	l
ffff800000107318	kernel.asm	/^ffff800000107318:	77 08                	ja     ffff800000107322 <sprintx32+0x5b>$/;"	l
ffff80000010731a	kernel.asm	/^ffff80000010731a:	8b 55 f8             	mov    -0x8(%rbp),%edx$/;"	l
ffff80000010731d	kernel.asm	/^ffff80000010731d:	83 c2 30             	add    $0x30,%edx$/;"	l
ffff800000107320	kernel.asm	/^ffff800000107320:	eb 06                	jmp    ffff800000107328 <sprintx32+0x61>$/;"	l
ffff800000107322	kernel.asm	/^ffff800000107322:	8b 55 f8             	mov    -0x8(%rbp),%edx$/;"	l
ffff800000107325	kernel.asm	/^ffff800000107325:	83 c2 57             	add    $0x57,%edx$/;"	l
ffff800000107328	kernel.asm	/^ffff800000107328:	88 10                	mov    %dl,(%rax)$/;"	l
ffff80000010732a	kernel.asm	/^ffff80000010732a:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)$/;"	l
ffff80000010732e	kernel.asm	/^ffff80000010732e:	83 7d fc 07          	cmpl   $0x7,-0x4(%rbp)$/;"	l
ffff800000107332	kernel.asm	/^ffff800000107332:	7e b9                	jle    ffff8000001072ed <sprintx32+0x26>$/;"	l
ffff800000107334	kernel.asm	/^ffff800000107334:	90                   	nop$/;"	l
ffff800000107335	kernel.asm	/^ffff800000107335:	c9                   	leaveq $/;"	l
ffff800000107336	kernel.asm	/^ffff800000107336:	c3                   	retq   $/;"	l
ffff800000107337	kernel.asm	/^ffff800000107337 <updateprocfiles>:$/;"	l
ffff800000107337	kernel.asm	/^ffff800000107337:	55                   	push   %rbp$/;"	l
ffff800000107338	kernel.asm	/^ffff800000107338:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010733b	kernel.asm	/^ffff80000010733b:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff80000010733f	kernel.asm	/^ffff80000010733f:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)$/;"	l
ffff800000107346	kernel.asm	/^ffff800000107346:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)$/;"	l
ffff80000010734d	kernel.asm	/^ffff80000010734d:	48 bf 60 8c 11 00 00 	movabs $0xffff800000118c60,%rdi$/;"	l
ffff800000107354	kernel.asm	/^ffff800000107354:	80 ff ff $/;"	l
ffff800000107357	kernel.asm	/^ffff800000107357:	48 b8 01 79 10 00 00 	movabs $0xffff800000107901,%rax$/;"	l
ffff80000010735e	kernel.asm	/^ffff80000010735e:	80 ff ff $/;"	l
ffff800000107361	kernel.asm	/^ffff800000107361:	ff d0                	callq  *%rax$/;"	l
ffff800000107363	kernel.asm	/^ffff800000107363:	e9 01 01 00 00       	jmpq   ffff800000107469 <updateprocfiles+0x132>$/;"	l
ffff800000107368	kernel.asm	/^ffff800000107368:	48 b9 60 8c 11 00 00 	movabs $0xffff800000118c60,%rcx$/;"	l
ffff80000010736f	kernel.asm	/^ffff80000010736f:	80 ff ff $/;"	l
ffff800000107372	kernel.asm	/^ffff800000107372:	8b 45 f8             	mov    -0x8(%rbp),%eax$/;"	l
ffff800000107375	kernel.asm	/^ffff800000107375:	48 98                	cltq   $/;"	l
ffff800000107377	kernel.asm	/^ffff800000107377:	48 89 c2             	mov    %rax,%rdx$/;"	l
ffff80000010737a	kernel.asm	/^ffff80000010737a:	48 89 d0             	mov    %rdx,%rax$/;"	l
ffff80000010737d	kernel.asm	/^ffff80000010737d:	48 c1 e0 05          	shl    $0x5,%rax$/;"	l
ffff800000107381	kernel.asm	/^ffff800000107381:	48 89 c2             	mov    %rax,%rdx$/;"	l
ffff800000107384	kernel.asm	/^ffff800000107384:	48 8d 04 d5 00 00 00 	lea    0x0(,%rdx,8),%rax$/;"	l
ffff80000010738b	kernel.asm	/^ffff80000010738b:	00 $/;"	l
ffff80000010738c	kernel.asm	/^ffff80000010738c:	48 29 d0             	sub    %rdx,%rax$/;"	l
ffff80000010738f	kernel.asm	/^ffff80000010738f:	48 01 c8             	add    %rcx,%rax$/;"	l
ffff800000107392	kernel.asm	/^ffff800000107392:	48 83 e8 80          	sub    $0xffffffffffffff80,%rax$/;"	l
ffff800000107396	kernel.asm	/^ffff800000107396:	8b 00                	mov    (%rax),%eax$/;"	l
ffff800000107398	kernel.asm	/^ffff800000107398:	85 c0                	test   %eax,%eax$/;"	l
ffff80000010739a	kernel.asm	/^ffff80000010739a:	0f 84 c5 00 00 00    	je     ffff800000107465 <updateprocfiles+0x12e>$/;"	l
ffff8000001073a0	kernel.asm	/^ffff8000001073a0:	48 b9 60 8c 11 00 00 	movabs $0xffff800000118c60,%rcx$/;"	l
ffff8000001073a7	kernel.asm	/^ffff8000001073a7:	80 ff ff $/;"	l
ffff8000001073aa	kernel.asm	/^ffff8000001073aa:	8b 45 f8             	mov    -0x8(%rbp),%eax$/;"	l
ffff8000001073ad	kernel.asm	/^ffff8000001073ad:	48 98                	cltq   $/;"	l
ffff8000001073af	kernel.asm	/^ffff8000001073af:	48 89 c2             	mov    %rax,%rdx$/;"	l
ffff8000001073b2	kernel.asm	/^ffff8000001073b2:	48 89 d0             	mov    %rdx,%rax$/;"	l
ffff8000001073b5	kernel.asm	/^ffff8000001073b5:	48 c1 e0 05          	shl    $0x5,%rax$/;"	l
ffff8000001073b9	kernel.asm	/^ffff8000001073b9:	48 89 c2             	mov    %rax,%rdx$/;"	l
ffff8000001073bc	kernel.asm	/^ffff8000001073bc:	48 8d 04 d5 00 00 00 	lea    0x0(,%rdx,8),%rax$/;"	l
ffff8000001073c3	kernel.asm	/^ffff8000001073c3:	00 $/;"	l
ffff8000001073c4	kernel.asm	/^ffff8000001073c4:	48 29 d0             	sub    %rdx,%rax$/;"	l
ffff8000001073c7	kernel.asm	/^ffff8000001073c7:	48 01 c8             	add    %rcx,%rax$/;"	l
ffff8000001073ca	kernel.asm	/^ffff8000001073ca:	48 83 e8 80          	sub    $0xffffffffffffff80,%rax$/;"	l
ffff8000001073ce	kernel.asm	/^ffff8000001073ce:	8b 00                	mov    (%rax),%eax$/;"	l
ffff8000001073d0	kernel.asm	/^ffff8000001073d0:	83 f8 05             	cmp    $0x5,%eax$/;"	l
ffff8000001073d3	kernel.asm	/^ffff8000001073d3:	0f 84 8c 00 00 00    	je     ffff800000107465 <updateprocfiles+0x12e>$/;"	l
ffff8000001073d9	kernel.asm	/^ffff8000001073d9:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff8000001073dc	kernel.asm	/^ffff8000001073dc:	8d 48 02             	lea    0x2(%rax),%ecx$/;"	l
ffff8000001073df	kernel.asm	/^ffff8000001073df:	8b 45 f8             	mov    -0x8(%rbp),%eax$/;"	l
ffff8000001073e2	kernel.asm	/^ffff8000001073e2:	8d 50 01             	lea    0x1(%rax),%edx$/;"	l
ffff8000001073e5	kernel.asm	/^ffff8000001073e5:	48 b8 c0 d5 10 00 00 	movabs $0xffff80000010d5c0,%rax$/;"	l
ffff8000001073ec	kernel.asm	/^ffff8000001073ec:	80 ff ff $/;"	l
ffff8000001073ef	kernel.asm	/^ffff8000001073ef:	48 63 c9             	movslq %ecx,%rcx$/;"	l
ffff8000001073f2	kernel.asm	/^ffff8000001073f2:	48 c1 e1 04          	shl    $0x4,%rcx$/;"	l
ffff8000001073f6	kernel.asm	/^ffff8000001073f6:	48 01 c8             	add    %rcx,%rax$/;"	l
ffff8000001073f9	kernel.asm	/^ffff8000001073f9:	66 89 10             	mov    %dx,(%rax)$/;"	l
ffff8000001073fc	kernel.asm	/^ffff8000001073fc:	48 b9 60 8c 11 00 00 	movabs $0xffff800000118c60,%rcx$/;"	l
ffff800000107403	kernel.asm	/^ffff800000107403:	80 ff ff $/;"	l
ffff800000107406	kernel.asm	/^ffff800000107406:	8b 45 f8             	mov    -0x8(%rbp),%eax$/;"	l
ffff800000107409	kernel.asm	/^ffff800000107409:	48 98                	cltq   $/;"	l
ffff80000010740b	kernel.asm	/^ffff80000010740b:	48 89 c2             	mov    %rax,%rdx$/;"	l
ffff80000010740e	kernel.asm	/^ffff80000010740e:	48 89 d0             	mov    %rdx,%rax$/;"	l
ffff800000107411	kernel.asm	/^ffff800000107411:	48 c1 e0 05          	shl    $0x5,%rax$/;"	l
ffff800000107415	kernel.asm	/^ffff800000107415:	48 89 c2             	mov    %rax,%rdx$/;"	l
ffff800000107418	kernel.asm	/^ffff800000107418:	48 8d 04 d5 00 00 00 	lea    0x0(,%rdx,8),%rax$/;"	l
ffff80000010741f	kernel.asm	/^ffff80000010741f:	00 $/;"	l
ffff800000107420	kernel.asm	/^ffff800000107420:	48 29 d0             	sub    %rdx,%rax$/;"	l
ffff800000107423	kernel.asm	/^ffff800000107423:	48 01 c8             	add    %rcx,%rax$/;"	l
ffff800000107426	kernel.asm	/^ffff800000107426:	48 05 84 00 00 00    	add    $0x84,%rax$/;"	l
ffff80000010742c	kernel.asm	/^ffff80000010742c:	8b 00                	mov    (%rax),%eax$/;"	l
ffff80000010742e	kernel.asm	/^ffff80000010742e:	89 c1                	mov    %eax,%ecx$/;"	l
ffff800000107430	kernel.asm	/^ffff800000107430:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff800000107433	kernel.asm	/^ffff800000107433:	83 c0 02             	add    $0x2,%eax$/;"	l
ffff800000107436	kernel.asm	/^ffff800000107436:	48 98                	cltq   $/;"	l
ffff800000107438	kernel.asm	/^ffff800000107438:	48 c1 e0 04          	shl    $0x4,%rax$/;"	l
ffff80000010743c	kernel.asm	/^ffff80000010743c:	48 89 c2             	mov    %rax,%rdx$/;"	l
ffff80000010743f	kernel.asm	/^ffff80000010743f:	48 b8 c0 d5 10 00 00 	movabs $0xffff80000010d5c0,%rax$/;"	l
ffff800000107446	kernel.asm	/^ffff800000107446:	80 ff ff $/;"	l
ffff800000107449	kernel.asm	/^ffff800000107449:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff80000010744c	kernel.asm	/^ffff80000010744c:	48 83 c0 02          	add    $0x2,%rax$/;"	l
ffff800000107450	kernel.asm	/^ffff800000107450:	89 ce                	mov    %ecx,%esi$/;"	l
ffff800000107452	kernel.asm	/^ffff800000107452:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000107455	kernel.asm	/^ffff800000107455:	48 b8 0c 72 10 00 00 	movabs $0xffff80000010720c,%rax$/;"	l
ffff80000010745c	kernel.asm	/^ffff80000010745c:	80 ff ff $/;"	l
ffff80000010745f	kernel.asm	/^ffff80000010745f:	ff d0                	callq  *%rax$/;"	l
ffff800000107461	kernel.asm	/^ffff800000107461:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)$/;"	l
ffff800000107465	kernel.asm	/^ffff800000107465:	83 45 f8 01          	addl   $0x1,-0x8(%rbp)$/;"	l
ffff800000107469	kernel.asm	/^ffff800000107469:	83 7d f8 3f          	cmpl   $0x3f,-0x8(%rbp)$/;"	l
ffff80000010746d	kernel.asm	/^ffff80000010746d:	0f 8e f5 fe ff ff    	jle    ffff800000107368 <updateprocfiles+0x31>$/;"	l
ffff800000107473	kernel.asm	/^ffff800000107473:	48 bf 60 8c 11 00 00 	movabs $0xffff800000118c60,%rdi$/;"	l
ffff80000010747a	kernel.asm	/^ffff80000010747a:	80 ff ff $/;"	l
ffff80000010747d	kernel.asm	/^ffff80000010747d:	48 b8 9a 79 10 00 00 	movabs $0xffff80000010799a,%rax$/;"	l
ffff800000107484	kernel.asm	/^ffff800000107484:	80 ff ff $/;"	l
ffff800000107487	kernel.asm	/^ffff800000107487:	ff d0                	callq  *%rax$/;"	l
ffff800000107489	kernel.asm	/^ffff800000107489:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff80000010748c	kernel.asm	/^ffff80000010748c:	83 c0 02             	add    $0x2,%eax$/;"	l
ffff80000010748f	kernel.asm	/^ffff80000010748f:	c9                   	leaveq $/;"	l
ffff800000107490	kernel.asm	/^ffff800000107490:	c3                   	retq   $/;"	l
ffff800000107491	kernel.asm	/^ffff800000107491 <readi_helper>:$/;"	l
ffff800000107491	kernel.asm	/^ffff800000107491:	55                   	push   %rbp$/;"	l
ffff800000107492	kernel.asm	/^ffff800000107492:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000107495	kernel.asm	/^ffff800000107495:	48 83 ec 30          	sub    $0x30,%rsp$/;"	l
ffff800000107499	kernel.asm	/^ffff800000107499:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
ffff80000010749d	kernel.asm	/^ffff80000010749d:	89 75 e4             	mov    %esi,-0x1c(%rbp)$/;"	l
ffff8000001074a0	kernel.asm	/^ffff8000001074a0:	89 55 e0             	mov    %edx,-0x20(%rbp)$/;"	l
ffff8000001074a3	kernel.asm	/^ffff8000001074a3:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)$/;"	l
ffff8000001074a7	kernel.asm	/^ffff8000001074a7:	44 89 45 d4          	mov    %r8d,-0x2c(%rbp)$/;"	l
ffff8000001074ab	kernel.asm	/^ffff8000001074ab:	8b 45 e4             	mov    -0x1c(%rbp),%eax$/;"	l
ffff8000001074ae	kernel.asm	/^ffff8000001074ae:	3b 45 d4             	cmp    -0x2c(%rbp),%eax$/;"	l
ffff8000001074b1	kernel.asm	/^ffff8000001074b1:	76 07                	jbe    ffff8000001074ba <readi_helper+0x29>$/;"	l
ffff8000001074b3	kernel.asm	/^ffff8000001074b3:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff8000001074b8	kernel.asm	/^ffff8000001074b8:	eb 47                	jmp    ffff800000107501 <readi_helper+0x70>$/;"	l
ffff8000001074ba	kernel.asm	/^ffff8000001074ba:	8b 55 e4             	mov    -0x1c(%rbp),%edx$/;"	l
ffff8000001074bd	kernel.asm	/^ffff8000001074bd:	8b 45 e0             	mov    -0x20(%rbp),%eax$/;"	l
ffff8000001074c0	kernel.asm	/^ffff8000001074c0:	01 d0                	add    %edx,%eax$/;"	l
ffff8000001074c2	kernel.asm	/^ffff8000001074c2:	89 45 fc             	mov    %eax,-0x4(%rbp)$/;"	l
ffff8000001074c5	kernel.asm	/^ffff8000001074c5:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff8000001074c8	kernel.asm	/^ffff8000001074c8:	3b 45 d4             	cmp    -0x2c(%rbp),%eax$/;"	l
ffff8000001074cb	kernel.asm	/^ffff8000001074cb:	76 06                	jbe    ffff8000001074d3 <readi_helper+0x42>$/;"	l
ffff8000001074cd	kernel.asm	/^ffff8000001074cd:	8b 45 d4             	mov    -0x2c(%rbp),%eax$/;"	l
ffff8000001074d0	kernel.asm	/^ffff8000001074d0:	89 45 fc             	mov    %eax,-0x4(%rbp)$/;"	l
ffff8000001074d3	kernel.asm	/^ffff8000001074d3:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff8000001074d6	kernel.asm	/^ffff8000001074d6:	2b 45 e4             	sub    -0x1c(%rbp),%eax$/;"	l
ffff8000001074d9	kernel.asm	/^ffff8000001074d9:	89 c2                	mov    %eax,%edx$/;"	l
ffff8000001074db	kernel.asm	/^ffff8000001074db:	8b 4d e4             	mov    -0x1c(%rbp),%ecx$/;"	l
ffff8000001074de	kernel.asm	/^ffff8000001074de:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff8000001074e2	kernel.asm	/^ffff8000001074e2:	48 01 c1             	add    %rax,%rcx$/;"	l
ffff8000001074e5	kernel.asm	/^ffff8000001074e5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff8000001074e9	kernel.asm	/^ffff8000001074e9:	48 89 ce             	mov    %rcx,%rsi$/;"	l
ffff8000001074ec	kernel.asm	/^ffff8000001074ec:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001074ef	kernel.asm	/^ffff8000001074ef:	48 b8 9a 7d 10 00 00 	movabs $0xffff800000107d9a,%rax$/;"	l
ffff8000001074f6	kernel.asm	/^ffff8000001074f6:	80 ff ff $/;"	l
ffff8000001074f9	kernel.asm	/^ffff8000001074f9:	ff d0                	callq  *%rax$/;"	l
ffff8000001074fb	kernel.asm	/^ffff8000001074fb:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff8000001074fe	kernel.asm	/^ffff8000001074fe:	2b 45 e4             	sub    -0x1c(%rbp),%eax$/;"	l
ffff800000107501	kernel.asm	/^ffff800000107501:	c9                   	leaveq $/;"	l
ffff800000107502	kernel.asm	/^ffff800000107502:	c3                   	retq   $/;"	l
ffff800000107503	kernel.asm	/^ffff800000107503 <procfs_readi>:$/;"	l
ffff800000107503	kernel.asm	/^ffff800000107503:	55                   	push   %rbp$/;"	l
ffff800000107504	kernel.asm	/^ffff800000107504:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000107507	kernel.asm	/^ffff800000107507:	48 83 ec 50          	sub    $0x50,%rsp$/;"	l
ffff80000010750b	kernel.asm	/^ffff80000010750b:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)$/;"	l
ffff80000010750f	kernel.asm	/^ffff80000010750f:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)$/;"	l
ffff800000107513	kernel.asm	/^ffff800000107513:	89 55 bc             	mov    %edx,-0x44(%rbp)$/;"	l
ffff800000107516	kernel.asm	/^ffff800000107516:	89 4d b8             	mov    %ecx,-0x48(%rbp)$/;"	l
ffff800000107519	kernel.asm	/^ffff800000107519:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff80000010751e	kernel.asm	/^ffff80000010751e:	48 ba 37 73 10 00 00 	movabs $0xffff800000107337,%rdx$/;"	l
ffff800000107525	kernel.asm	/^ffff800000107525:	80 ff ff $/;"	l
ffff800000107528	kernel.asm	/^ffff800000107528:	ff d2                	callq  *%rdx$/;"	l
ffff80000010752a	kernel.asm	/^ffff80000010752a:	c1 e0 04             	shl    $0x4,%eax$/;"	l
ffff80000010752d	kernel.asm	/^ffff80000010752d:	89 45 fc             	mov    %eax,-0x4(%rbp)$/;"	l
ffff800000107530	kernel.asm	/^ffff800000107530:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
ffff800000107534	kernel.asm	/^ffff800000107534:	8b 80 94 00 00 00    	mov    0x94(%rax),%eax$/;"	l
ffff80000010753a	kernel.asm	/^ffff80000010753a:	83 f8 02             	cmp    $0x2,%eax$/;"	l
ffff80000010753d	kernel.asm	/^ffff80000010753d:	75 2e                	jne    ffff80000010756d <procfs_readi+0x6a>$/;"	l
ffff80000010753f	kernel.asm	/^ffff80000010753f:	8b 4d fc             	mov    -0x4(%rbp),%ecx$/;"	l
ffff800000107542	kernel.asm	/^ffff800000107542:	8b 55 b8             	mov    -0x48(%rbp),%edx$/;"	l
ffff800000107545	kernel.asm	/^ffff800000107545:	8b 75 bc             	mov    -0x44(%rbp),%esi$/;"	l
ffff800000107548	kernel.asm	/^ffff800000107548:	48 8b 45 c0          	mov    -0x40(%rbp),%rax$/;"	l
ffff80000010754c	kernel.asm	/^ffff80000010754c:	41 89 c8             	mov    %ecx,%r8d$/;"	l
ffff80000010754f	kernel.asm	/^ffff80000010754f:	48 b9 c0 d5 10 00 00 	movabs $0xffff80000010d5c0,%rcx$/;"	l
ffff800000107556	kernel.asm	/^ffff800000107556:	80 ff ff $/;"	l
ffff800000107559	kernel.asm	/^ffff800000107559:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010755c	kernel.asm	/^ffff80000010755c:	48 b8 91 74 10 00 00 	movabs $0xffff800000107491,%rax$/;"	l
ffff800000107563	kernel.asm	/^ffff800000107563:	80 ff ff $/;"	l
ffff800000107566	kernel.asm	/^ffff800000107566:	ff d0                	callq  *%rax$/;"	l
ffff800000107568	kernel.asm	/^ffff800000107568:	e9 f2 00 00 00       	jmpq   ffff80000010765f <procfs_readi+0x15c>$/;"	l
ffff80000010756d	kernel.asm	/^ffff80000010756d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
ffff800000107571	kernel.asm	/^ffff800000107571:	0f b7 80 a0 00 00 00 	movzwl 0xa0(%rax),%eax$/;"	l
ffff800000107578	kernel.asm	/^ffff800000107578:	66 83 f8 01          	cmp    $0x1,%ax$/;"	l
ffff80000010757c	kernel.asm	/^ffff80000010757c:	75 0a                	jne    ffff800000107588 <procfs_readi+0x85>$/;"	l
ffff80000010757e	kernel.asm	/^ffff80000010757e:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff800000107583	kernel.asm	/^ffff800000107583:	e9 d7 00 00 00       	jmpq   ffff80000010765f <procfs_readi+0x15c>$/;"	l
ffff800000107588	kernel.asm	/^ffff800000107588:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
ffff80000010758c	kernel.asm	/^ffff80000010758c:	8b 40 04             	mov    0x4(%rax),%eax$/;"	l
ffff80000010758f	kernel.asm	/^ffff80000010758f:	3d 11 27 00 00       	cmp    $0x2711,%eax$/;"	l
ffff800000107594	kernel.asm	/^ffff800000107594:	74 12                	je     ffff8000001075a8 <procfs_readi+0xa5>$/;"	l
ffff800000107596	kernel.asm	/^ffff800000107596:	3d 12 27 00 00       	cmp    $0x2712,%eax$/;"	l
ffff80000010759b	kernel.asm	/^ffff80000010759b:	74 6a                	je     ffff800000107607 <procfs_readi+0x104>$/;"	l
ffff80000010759d	kernel.asm	/^ffff80000010759d:	90                   	nop$/;"	l
ffff80000010759e	kernel.asm	/^ffff80000010759e:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff8000001075a3	kernel.asm	/^ffff8000001075a3:	e9 b7 00 00 00       	jmpq   ffff80000010765f <procfs_readi+0x15c>$/;"	l
ffff8000001075a8	kernel.asm	/^ffff8000001075a8:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff8000001075ad	kernel.asm	/^ffff8000001075ad:	48 ba 1f 42 10 00 00 	movabs $0xffff80000010421f,%rdx$/;"	l
ffff8000001075b4	kernel.asm	/^ffff8000001075b4:	80 ff ff $/;"	l
ffff8000001075b7	kernel.asm	/^ffff8000001075b7:	ff d2                	callq  *%rdx$/;"	l
ffff8000001075b9	kernel.asm	/^ffff8000001075b9:	89 c2                	mov    %eax,%edx$/;"	l
ffff8000001075bb	kernel.asm	/^ffff8000001075bb:	48 8d 45 d0          	lea    -0x30(%rbp),%rax$/;"	l
ffff8000001075bf	kernel.asm	/^ffff8000001075bf:	89 d6                	mov    %edx,%esi$/;"	l
ffff8000001075c1	kernel.asm	/^ffff8000001075c1:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001075c4	kernel.asm	/^ffff8000001075c4:	48 b8 0c 72 10 00 00 	movabs $0xffff80000010720c,%rax$/;"	l
ffff8000001075cb	kernel.asm	/^ffff8000001075cb:	80 ff ff $/;"	l
ffff8000001075ce	kernel.asm	/^ffff8000001075ce:	ff d0                	callq  *%rax$/;"	l
ffff8000001075d0	kernel.asm	/^ffff8000001075d0:	48 8d 45 d0          	lea    -0x30(%rbp),%rax$/;"	l
ffff8000001075d4	kernel.asm	/^ffff8000001075d4:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001075d7	kernel.asm	/^ffff8000001075d7:	48 b8 af 7f 10 00 00 	movabs $0xffff800000107faf,%rax$/;"	l
ffff8000001075de	kernel.asm	/^ffff8000001075de:	80 ff ff $/;"	l
ffff8000001075e1	kernel.asm	/^ffff8000001075e1:	ff d0                	callq  *%rax$/;"	l
ffff8000001075e3	kernel.asm	/^ffff8000001075e3:	89 c7                	mov    %eax,%edi$/;"	l
ffff8000001075e5	kernel.asm	/^ffff8000001075e5:	48 8d 4d d0          	lea    -0x30(%rbp),%rcx$/;"	l
ffff8000001075e9	kernel.asm	/^ffff8000001075e9:	8b 55 b8             	mov    -0x48(%rbp),%edx$/;"	l
ffff8000001075ec	kernel.asm	/^ffff8000001075ec:	8b 75 bc             	mov    -0x44(%rbp),%esi$/;"	l
ffff8000001075ef	kernel.asm	/^ffff8000001075ef:	48 8b 45 c0          	mov    -0x40(%rbp),%rax$/;"	l
ffff8000001075f3	kernel.asm	/^ffff8000001075f3:	41 89 f8             	mov    %edi,%r8d$/;"	l
ffff8000001075f6	kernel.asm	/^ffff8000001075f6:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001075f9	kernel.asm	/^ffff8000001075f9:	48 b8 91 74 10 00 00 	movabs $0xffff800000107491,%rax$/;"	l
ffff800000107600	kernel.asm	/^ffff800000107600:	80 ff ff $/;"	l
ffff800000107603	kernel.asm	/^ffff800000107603:	ff d0                	callq  *%rax$/;"	l
ffff800000107605	kernel.asm	/^ffff800000107605:	eb 58                	jmp    ffff80000010765f <procfs_readi+0x15c>$/;"	l
ffff800000107607	kernel.asm	/^ffff800000107607:	48 b8 40 8c 11 00 00 	movabs $0xffff800000118c40,%rax$/;"	l
ffff80000010760e	kernel.asm	/^ffff80000010760e:	80 ff ff $/;"	l
ffff800000107611	kernel.asm	/^ffff800000107611:	8b 00                	mov    (%rax),%eax$/;"	l
ffff800000107613	kernel.asm	/^ffff800000107613:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000107615	kernel.asm	/^ffff800000107615:	48 8d 45 d0          	lea    -0x30(%rbp),%rax$/;"	l
ffff800000107619	kernel.asm	/^ffff800000107619:	89 d6                	mov    %edx,%esi$/;"	l
ffff80000010761b	kernel.asm	/^ffff80000010761b:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010761e	kernel.asm	/^ffff80000010761e:	48 b8 0c 72 10 00 00 	movabs $0xffff80000010720c,%rax$/;"	l
ffff800000107625	kernel.asm	/^ffff800000107625:	80 ff ff $/;"	l
ffff800000107628	kernel.asm	/^ffff800000107628:	ff d0                	callq  *%rax$/;"	l
ffff80000010762a	kernel.asm	/^ffff80000010762a:	48 8d 45 d0          	lea    -0x30(%rbp),%rax$/;"	l
ffff80000010762e	kernel.asm	/^ffff80000010762e:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000107631	kernel.asm	/^ffff800000107631:	48 b8 af 7f 10 00 00 	movabs $0xffff800000107faf,%rax$/;"	l
ffff800000107638	kernel.asm	/^ffff800000107638:	80 ff ff $/;"	l
ffff80000010763b	kernel.asm	/^ffff80000010763b:	ff d0                	callq  *%rax$/;"	l
ffff80000010763d	kernel.asm	/^ffff80000010763d:	89 c7                	mov    %eax,%edi$/;"	l
ffff80000010763f	kernel.asm	/^ffff80000010763f:	48 8d 4d d0          	lea    -0x30(%rbp),%rcx$/;"	l
ffff800000107643	kernel.asm	/^ffff800000107643:	8b 55 b8             	mov    -0x48(%rbp),%edx$/;"	l
ffff800000107646	kernel.asm	/^ffff800000107646:	8b 75 bc             	mov    -0x44(%rbp),%esi$/;"	l
ffff800000107649	kernel.asm	/^ffff800000107649:	48 8b 45 c0          	mov    -0x40(%rbp),%rax$/;"	l
ffff80000010764d	kernel.asm	/^ffff80000010764d:	41 89 f8             	mov    %edi,%r8d$/;"	l
ffff800000107650	kernel.asm	/^ffff800000107650:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000107653	kernel.asm	/^ffff800000107653:	48 b8 91 74 10 00 00 	movabs $0xffff800000107491,%rax$/;"	l
ffff80000010765a	kernel.asm	/^ffff80000010765a:	80 ff ff $/;"	l
ffff80000010765d	kernel.asm	/^ffff80000010765d:	ff d0                	callq  *%rax$/;"	l
ffff80000010765f	kernel.asm	/^ffff80000010765f:	c9                   	leaveq $/;"	l
ffff800000107660	kernel.asm	/^ffff800000107660:	c3                   	retq   $/;"	l
ffff800000107661	kernel.asm	/^ffff800000107661 <procfsinit>:$/;"	l
ffff800000107661	kernel.asm	/^ffff800000107661:	55                   	push   %rbp$/;"	l
ffff800000107662	kernel.asm	/^ffff800000107662:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000107665	kernel.asm	/^ffff800000107665:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ffff800000107669	kernel.asm	/^ffff800000107669:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
ffff80000010766d	kernel.asm	/^ffff80000010766d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000107672	kernel.asm	/^ffff800000107672:	48 ba 20 4f 10 00 00 	movabs $0xffff800000104f20,%rdx$/;"	l
ffff800000107679	kernel.asm	/^ffff800000107679:	80 ff ff $/;"	l
ffff80000010767c	kernel.asm	/^ffff80000010767c:	ff d2                	callq  *%rdx$/;"	l
ffff80000010767e	kernel.asm	/^ffff80000010767e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000107682	kernel.asm	/^ffff800000107682:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000107685	kernel.asm	/^ffff800000107685:	48 b8 b0 37 10 00 00 	movabs $0xffff8000001037b0,%rax$/;"	l
ffff80000010768c	kernel.asm	/^ffff80000010768c:	80 ff ff $/;"	l
ffff80000010768f	kernel.asm	/^ffff80000010768f:	ff d0                	callq  *%rax$/;"	l
ffff800000107691	kernel.asm	/^ffff800000107691:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff800000107695	kernel.asm	/^ffff800000107695:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)$/;"	l
ffff80000010769a	kernel.asm	/^ffff80000010769a:	74 49                	je     ffff8000001076e5 <procfsinit+0x84>$/;"	l
ffff80000010769c	kernel.asm	/^ffff80000010769c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001076a0	kernel.asm	/^ffff8000001076a0:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001076a3	kernel.asm	/^ffff8000001076a3:	48 b8 1d 28 10 00 00 	movabs $0xffff80000010281d,%rax$/;"	l
ffff8000001076aa	kernel.asm	/^ffff8000001076aa:	80 ff ff $/;"	l
ffff8000001076ad	kernel.asm	/^ffff8000001076ad:	ff d0                	callq  *%rax$/;"	l
ffff8000001076af	kernel.asm	/^ffff8000001076af:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001076b3	kernel.asm	/^ffff8000001076b3:	48 b9 00 da 10 00 00 	movabs $0xffff80000010da00,%rcx$/;"	l
ffff8000001076ba	kernel.asm	/^ffff8000001076ba:	80 ff ff $/;"	l
ffff8000001076bd	kernel.asm	/^ffff8000001076bd:	48 89 88 98 00 00 00 	mov    %rcx,0x98(%rax)$/;"	l
ffff8000001076c4	kernel.asm	/^ffff8000001076c4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001076c8	kernel.asm	/^ffff8000001076c8:	c7 80 94 00 00 00 02 	movl   $0x2,0x94(%rax)$/;"	l
ffff8000001076cf	kernel.asm	/^ffff8000001076cf:	00 00 00 $/;"	l
ffff8000001076d2	kernel.asm	/^ffff8000001076d2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001076d6	kernel.asm	/^ffff8000001076d6:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001076d9	kernel.asm	/^ffff8000001076d9:	48 b8 d0 29 10 00 00 	movabs $0xffff8000001029d0,%rax$/;"	l
ffff8000001076e0	kernel.asm	/^ffff8000001076e0:	80 ff ff $/;"	l
ffff8000001076e3	kernel.asm	/^ffff8000001076e3:	ff d0                	callq  *%rax$/;"	l
ffff8000001076e5	kernel.asm	/^ffff8000001076e5:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff8000001076ea	kernel.asm	/^ffff8000001076ea:	48 ba f6 4f 10 00 00 	movabs $0xffff800000104ff6,%rdx$/;"	l
ffff8000001076f1	kernel.asm	/^ffff8000001076f1:	80 ff ff $/;"	l
ffff8000001076f4	kernel.asm	/^ffff8000001076f4:	ff d2                	callq  *%rdx$/;"	l
ffff8000001076f6	kernel.asm	/^ffff8000001076f6:	90                   	nop$/;"	l
ffff8000001076f7	kernel.asm	/^ffff8000001076f7:	c9                   	leaveq $/;"	l
ffff8000001076f8	kernel.asm	/^ffff8000001076f8:	c3                   	retq   $/;"	l
ffff8000001076f9	kernel.asm	/^ffff8000001076f9 <initsleeplock>:$/;"	l
ffff8000001076f9	kernel.asm	/^ffff8000001076f9:	55                   	push   %rbp$/;"	l
ffff8000001076fa	kernel.asm	/^ffff8000001076fa:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff8000001076fd	kernel.asm	/^ffff8000001076fd:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff800000107701	kernel.asm	/^ffff800000107701:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)$/;"	l
ffff800000107705	kernel.asm	/^ffff800000107705:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)$/;"	l
ffff800000107709	kernel.asm	/^ffff800000107709:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010770d	kernel.asm	/^ffff80000010770d:	48 83 c0 08          	add    $0x8,%rax$/;"	l
ffff800000107711	kernel.asm	/^ffff800000107711:	48 be 1d c6 10 00 00 	movabs $0xffff80000010c61d,%rsi$/;"	l
ffff800000107718	kernel.asm	/^ffff800000107718:	80 ff ff $/;"	l
ffff80000010771b	kernel.asm	/^ffff80000010771b:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010771e	kernel.asm	/^ffff80000010771e:	48 b8 cc 78 10 00 00 	movabs $0xffff8000001078cc,%rax$/;"	l
ffff800000107725	kernel.asm	/^ffff800000107725:	80 ff ff $/;"	l
ffff800000107728	kernel.asm	/^ffff800000107728:	ff d0                	callq  *%rax$/;"	l
ffff80000010772a	kernel.asm	/^ffff80000010772a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010772e	kernel.asm	/^ffff80000010772e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
ffff800000107732	kernel.asm	/^ffff800000107732:	48 89 50 70          	mov    %rdx,0x70(%rax)$/;"	l
ffff800000107736	kernel.asm	/^ffff800000107736:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010773a	kernel.asm	/^ffff80000010773a:	c7 00 00 00 00 00    	movl   $0x0,(%rax)$/;"	l
ffff800000107740	kernel.asm	/^ffff800000107740:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000107744	kernel.asm	/^ffff800000107744:	c7 40 78 00 00 00 00 	movl   $0x0,0x78(%rax)$/;"	l
ffff80000010774b	kernel.asm	/^ffff80000010774b:	90                   	nop$/;"	l
ffff80000010774c	kernel.asm	/^ffff80000010774c:	c9                   	leaveq $/;"	l
ffff80000010774d	kernel.asm	/^ffff80000010774d:	c3                   	retq   $/;"	l
ffff80000010774e	kernel.asm	/^ffff80000010774e <acquiresleep>:$/;"	l
ffff80000010774e	kernel.asm	/^ffff80000010774e:	55                   	push   %rbp$/;"	l
ffff80000010774f	kernel.asm	/^ffff80000010774f:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000107752	kernel.asm	/^ffff800000107752:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff800000107756	kernel.asm	/^ffff800000107756:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)$/;"	l
ffff80000010775a	kernel.asm	/^ffff80000010775a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010775e	kernel.asm	/^ffff80000010775e:	48 83 c0 08          	add    $0x8,%rax$/;"	l
ffff800000107762	kernel.asm	/^ffff800000107762:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000107765	kernel.asm	/^ffff800000107765:	48 b8 01 79 10 00 00 	movabs $0xffff800000107901,%rax$/;"	l
ffff80000010776c	kernel.asm	/^ffff80000010776c:	80 ff ff $/;"	l
ffff80000010776f	kernel.asm	/^ffff80000010776f:	ff d0                	callq  *%rax$/;"	l
ffff800000107771	kernel.asm	/^ffff800000107771:	eb 1e                	jmp    ffff800000107791 <acquiresleep+0x43>$/;"	l
ffff800000107773	kernel.asm	/^ffff800000107773:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000107777	kernel.asm	/^ffff800000107777:	48 8d 50 08          	lea    0x8(%rax),%rdx$/;"	l
ffff80000010777b	kernel.asm	/^ffff80000010777b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010777f	kernel.asm	/^ffff80000010777f:	48 89 d6             	mov    %rdx,%rsi$/;"	l
ffff800000107782	kernel.asm	/^ffff800000107782:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000107785	kernel.asm	/^ffff800000107785:	48 b8 b1 6d 10 00 00 	movabs $0xffff800000106db1,%rax$/;"	l
ffff80000010778c	kernel.asm	/^ffff80000010778c:	80 ff ff $/;"	l
ffff80000010778f	kernel.asm	/^ffff80000010778f:	ff d0                	callq  *%rax$/;"	l
ffff800000107791	kernel.asm	/^ffff800000107791:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000107795	kernel.asm	/^ffff800000107795:	8b 00                	mov    (%rax),%eax$/;"	l
ffff800000107797	kernel.asm	/^ffff800000107797:	85 c0                	test   %eax,%eax$/;"	l
ffff800000107799	kernel.asm	/^ffff800000107799:	75 d8                	jne    ffff800000107773 <acquiresleep+0x25>$/;"	l
ffff80000010779b	kernel.asm	/^ffff80000010779b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010779f	kernel.asm	/^ffff80000010779f:	c7 00 01 00 00 00    	movl   $0x1,(%rax)$/;"	l
ffff8000001077a5	kernel.asm	/^ffff8000001077a5:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff8000001077ac	kernel.asm	/^ffff8000001077ac:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff8000001077b0	kernel.asm	/^ffff8000001077b0:	8b 50 1c             	mov    0x1c(%rax),%edx$/;"	l
ffff8000001077b3	kernel.asm	/^ffff8000001077b3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001077b7	kernel.asm	/^ffff8000001077b7:	89 50 78             	mov    %edx,0x78(%rax)$/;"	l
ffff8000001077ba	kernel.asm	/^ffff8000001077ba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001077be	kernel.asm	/^ffff8000001077be:	48 83 c0 08          	add    $0x8,%rax$/;"	l
ffff8000001077c2	kernel.asm	/^ffff8000001077c2:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001077c5	kernel.asm	/^ffff8000001077c5:	48 b8 9a 79 10 00 00 	movabs $0xffff80000010799a,%rax$/;"	l
ffff8000001077cc	kernel.asm	/^ffff8000001077cc:	80 ff ff $/;"	l
ffff8000001077cf	kernel.asm	/^ffff8000001077cf:	ff d0                	callq  *%rax$/;"	l
ffff8000001077d1	kernel.asm	/^ffff8000001077d1:	90                   	nop$/;"	l
ffff8000001077d2	kernel.asm	/^ffff8000001077d2:	c9                   	leaveq $/;"	l
ffff8000001077d3	kernel.asm	/^ffff8000001077d3:	c3                   	retq   $/;"	l
ffff8000001077d4	kernel.asm	/^ffff8000001077d4 <releasesleep>:$/;"	l
ffff8000001077d4	kernel.asm	/^ffff8000001077d4:	55                   	push   %rbp$/;"	l
ffff8000001077d5	kernel.asm	/^ffff8000001077d5:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff8000001077d8	kernel.asm	/^ffff8000001077d8:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff8000001077dc	kernel.asm	/^ffff8000001077dc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)$/;"	l
ffff8000001077e0	kernel.asm	/^ffff8000001077e0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001077e4	kernel.asm	/^ffff8000001077e4:	48 83 c0 08          	add    $0x8,%rax$/;"	l
ffff8000001077e8	kernel.asm	/^ffff8000001077e8:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001077eb	kernel.asm	/^ffff8000001077eb:	48 b8 01 79 10 00 00 	movabs $0xffff800000107901,%rax$/;"	l
ffff8000001077f2	kernel.asm	/^ffff8000001077f2:	80 ff ff $/;"	l
ffff8000001077f5	kernel.asm	/^ffff8000001077f5:	ff d0                	callq  *%rax$/;"	l
ffff8000001077f7	kernel.asm	/^ffff8000001077f7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001077fb	kernel.asm	/^ffff8000001077fb:	c7 00 00 00 00 00    	movl   $0x0,(%rax)$/;"	l
ffff800000107801	kernel.asm	/^ffff800000107801:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000107805	kernel.asm	/^ffff800000107805:	c7 40 78 00 00 00 00 	movl   $0x0,0x78(%rax)$/;"	l
ffff80000010780c	kernel.asm	/^ffff80000010780c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000107810	kernel.asm	/^ffff800000107810:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000107813	kernel.asm	/^ffff800000107813:	48 b8 19 6f 10 00 00 	movabs $0xffff800000106f19,%rax$/;"	l
ffff80000010781a	kernel.asm	/^ffff80000010781a:	80 ff ff $/;"	l
ffff80000010781d	kernel.asm	/^ffff80000010781d:	ff d0                	callq  *%rax$/;"	l
ffff80000010781f	kernel.asm	/^ffff80000010781f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000107823	kernel.asm	/^ffff800000107823:	48 83 c0 08          	add    $0x8,%rax$/;"	l
ffff800000107827	kernel.asm	/^ffff800000107827:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010782a	kernel.asm	/^ffff80000010782a:	48 b8 9a 79 10 00 00 	movabs $0xffff80000010799a,%rax$/;"	l
ffff800000107831	kernel.asm	/^ffff800000107831:	80 ff ff $/;"	l
ffff800000107834	kernel.asm	/^ffff800000107834:	ff d0                	callq  *%rax$/;"	l
ffff800000107836	kernel.asm	/^ffff800000107836:	90                   	nop$/;"	l
ffff800000107837	kernel.asm	/^ffff800000107837:	c9                   	leaveq $/;"	l
ffff800000107838	kernel.asm	/^ffff800000107838:	c3                   	retq   $/;"	l
ffff800000107839	kernel.asm	/^ffff800000107839 <holdingsleep>:$/;"	l
ffff800000107839	kernel.asm	/^ffff800000107839:	55                   	push   %rbp$/;"	l
ffff80000010783a	kernel.asm	/^ffff80000010783a:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010783d	kernel.asm	/^ffff80000010783d:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ffff800000107841	kernel.asm	/^ffff800000107841:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
ffff800000107845	kernel.asm	/^ffff800000107845:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000107849	kernel.asm	/^ffff800000107849:	48 83 c0 08          	add    $0x8,%rax$/;"	l
ffff80000010784d	kernel.asm	/^ffff80000010784d:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000107850	kernel.asm	/^ffff800000107850:	48 b8 01 79 10 00 00 	movabs $0xffff800000107901,%rax$/;"	l
ffff800000107857	kernel.asm	/^ffff800000107857:	80 ff ff $/;"	l
ffff80000010785a	kernel.asm	/^ffff80000010785a:	ff d0                	callq  *%rax$/;"	l
ffff80000010785c	kernel.asm	/^ffff80000010785c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000107860	kernel.asm	/^ffff800000107860:	8b 00                	mov    (%rax),%eax$/;"	l
ffff800000107862	kernel.asm	/^ffff800000107862:	89 45 fc             	mov    %eax,-0x4(%rbp)$/;"	l
ffff800000107865	kernel.asm	/^ffff800000107865:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000107869	kernel.asm	/^ffff800000107869:	48 83 c0 08          	add    $0x8,%rax$/;"	l
ffff80000010786d	kernel.asm	/^ffff80000010786d:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000107870	kernel.asm	/^ffff800000107870:	48 b8 9a 79 10 00 00 	movabs $0xffff80000010799a,%rax$/;"	l
ffff800000107877	kernel.asm	/^ffff800000107877:	80 ff ff $/;"	l
ffff80000010787a	kernel.asm	/^ffff80000010787a:	ff d0                	callq  *%rax$/;"	l
ffff80000010787c	kernel.asm	/^ffff80000010787c:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff80000010787f	kernel.asm	/^ffff80000010787f:	c9                   	leaveq $/;"	l
ffff800000107880	kernel.asm	/^ffff800000107880:	c3                   	retq   $/;"	l
ffff800000107881	kernel.asm	/^ffff800000107881 <readeflags>:$/;"	l
ffff800000107881	kernel.asm	/^ffff800000107881:	55                   	push   %rbp$/;"	l
ffff800000107882	kernel.asm	/^ffff800000107882:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000107885	kernel.asm	/^ffff800000107885:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff800000107889	kernel.asm	/^ffff800000107889:	9c                   	pushfq $/;"	l
ffff80000010788a	kernel.asm	/^ffff80000010788a:	58                   	pop    %rax$/;"	l
ffff80000010788b	kernel.asm	/^ffff80000010788b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff80000010788f	kernel.asm	/^ffff80000010788f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000107893	kernel.asm	/^ffff800000107893:	c9                   	leaveq $/;"	l
ffff800000107894	kernel.asm	/^ffff800000107894:	c3                   	retq   $/;"	l
ffff800000107895	kernel.asm	/^ffff800000107895 <cli>:$/;"	l
ffff800000107895	kernel.asm	/^ffff800000107895:	55                   	push   %rbp$/;"	l
ffff800000107896	kernel.asm	/^ffff800000107896:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000107899	kernel.asm	/^ffff800000107899:	fa                   	cli    $/;"	l
ffff80000010789a	kernel.asm	/^ffff80000010789a:	90                   	nop$/;"	l
ffff80000010789b	kernel.asm	/^ffff80000010789b:	5d                   	pop    %rbp$/;"	l
ffff80000010789c	kernel.asm	/^ffff80000010789c:	c3                   	retq   $/;"	l
ffff80000010789d	kernel.asm	/^ffff80000010789d <sti>:$/;"	l
ffff80000010789d	kernel.asm	/^ffff80000010789d:	55                   	push   %rbp$/;"	l
ffff80000010789e	kernel.asm	/^ffff80000010789e:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff8000001078a1	kernel.asm	/^ffff8000001078a1:	fb                   	sti    $/;"	l
ffff8000001078a2	kernel.asm	/^ffff8000001078a2:	90                   	nop$/;"	l
ffff8000001078a3	kernel.asm	/^ffff8000001078a3:	5d                   	pop    %rbp$/;"	l
ffff8000001078a4	kernel.asm	/^ffff8000001078a4:	c3                   	retq   $/;"	l
ffff8000001078a5	kernel.asm	/^ffff8000001078a5 <xchg>:$/;"	l
ffff8000001078a5	kernel.asm	/^ffff8000001078a5:	55                   	push   %rbp$/;"	l
ffff8000001078a6	kernel.asm	/^ffff8000001078a6:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff8000001078a9	kernel.asm	/^ffff8000001078a9:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ffff8000001078ad	kernel.asm	/^ffff8000001078ad:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
ffff8000001078b1	kernel.asm	/^ffff8000001078b1:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)$/;"	l
ffff8000001078b5	kernel.asm	/^ffff8000001078b5:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx$/;"	l
ffff8000001078b9	kernel.asm	/^ffff8000001078b9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff8000001078bd	kernel.asm	/^ffff8000001078bd:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx$/;"	l
ffff8000001078c1	kernel.asm	/^ffff8000001078c1:	f0 87 02             	lock xchg %eax,(%rdx)$/;"	l
ffff8000001078c4	kernel.asm	/^ffff8000001078c4:	89 45 fc             	mov    %eax,-0x4(%rbp)$/;"	l
ffff8000001078c7	kernel.asm	/^ffff8000001078c7:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff8000001078ca	kernel.asm	/^ffff8000001078ca:	c9                   	leaveq $/;"	l
ffff8000001078cb	kernel.asm	/^ffff8000001078cb:	c3                   	retq   $/;"	l
ffff8000001078cc	kernel.asm	/^ffff8000001078cc <initlock>:$/;"	l
ffff8000001078cc	kernel.asm	/^ffff8000001078cc:	55                   	push   %rbp$/;"	l
ffff8000001078cd	kernel.asm	/^ffff8000001078cd:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff8000001078d0	kernel.asm	/^ffff8000001078d0:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff8000001078d4	kernel.asm	/^ffff8000001078d4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)$/;"	l
ffff8000001078d8	kernel.asm	/^ffff8000001078d8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)$/;"	l
ffff8000001078dc	kernel.asm	/^ffff8000001078dc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001078e0	kernel.asm	/^ffff8000001078e0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
ffff8000001078e4	kernel.asm	/^ffff8000001078e4:	48 89 50 08          	mov    %rdx,0x8(%rax)$/;"	l
ffff8000001078e8	kernel.asm	/^ffff8000001078e8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001078ec	kernel.asm	/^ffff8000001078ec:	c7 00 00 00 00 00    	movl   $0x0,(%rax)$/;"	l
ffff8000001078f2	kernel.asm	/^ffff8000001078f2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001078f6	kernel.asm	/^ffff8000001078f6:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)$/;"	l
ffff8000001078fd	kernel.asm	/^ffff8000001078fd:	00 $/;"	l
ffff8000001078fe	kernel.asm	/^ffff8000001078fe:	90                   	nop$/;"	l
ffff8000001078ff	kernel.asm	/^ffff8000001078ff:	c9                   	leaveq $/;"	l
ffff800000107900	kernel.asm	/^ffff800000107900:	c3                   	retq   $/;"	l
ffff800000107901	kernel.asm	/^ffff800000107901 <acquire>:$/;"	l
ffff800000107901	kernel.asm	/^ffff800000107901:	55                   	push   %rbp$/;"	l
ffff800000107902	kernel.asm	/^ffff800000107902:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000107905	kernel.asm	/^ffff800000107905:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff800000107909	kernel.asm	/^ffff800000107909:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)$/;"	l
ffff80000010790d	kernel.asm	/^ffff80000010790d:	48 b8 14 7b 10 00 00 	movabs $0xffff800000107b14,%rax$/;"	l
ffff800000107914	kernel.asm	/^ffff800000107914:	80 ff ff $/;"	l
ffff800000107917	kernel.asm	/^ffff800000107917:	ff d0                	callq  *%rax$/;"	l
ffff800000107919	kernel.asm	/^ffff800000107919:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010791d	kernel.asm	/^ffff80000010791d:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000107920	kernel.asm	/^ffff800000107920:	48 b8 d8 7a 10 00 00 	movabs $0xffff800000107ad8,%rax$/;"	l
ffff800000107927	kernel.asm	/^ffff800000107927:	80 ff ff $/;"	l
ffff80000010792a	kernel.asm	/^ffff80000010792a:	ff d0                	callq  *%rax$/;"	l
ffff80000010792c	kernel.asm	/^ffff80000010792c:	85 c0                	test   %eax,%eax$/;"	l
ffff80000010792e	kernel.asm	/^ffff80000010792e:	74 16                	je     ffff800000107946 <acquire+0x45>$/;"	l
ffff800000107930	kernel.asm	/^ffff800000107930:	48 bf 28 c6 10 00 00 	movabs $0xffff80000010c628,%rdi$/;"	l
ffff800000107937	kernel.asm	/^ffff800000107937:	80 ff ff $/;"	l
ffff80000010793a	kernel.asm	/^ffff80000010793a:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff800000107941	kernel.asm	/^ffff800000107941:	80 ff ff $/;"	l
ffff800000107944	kernel.asm	/^ffff800000107944:	ff d0                	callq  *%rax$/;"	l
ffff800000107946	kernel.asm	/^ffff800000107946:	90                   	nop$/;"	l
ffff800000107947	kernel.asm	/^ffff800000107947:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010794b	kernel.asm	/^ffff80000010794b:	be 01 00 00 00       	mov    $0x1,%esi$/;"	l
ffff800000107950	kernel.asm	/^ffff800000107950:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000107953	kernel.asm	/^ffff800000107953:	48 b8 a5 78 10 00 00 	movabs $0xffff8000001078a5,%rax$/;"	l
ffff80000010795a	kernel.asm	/^ffff80000010795a:	80 ff ff $/;"	l
ffff80000010795d	kernel.asm	/^ffff80000010795d:	ff d0                	callq  *%rax$/;"	l
ffff80000010795f	kernel.asm	/^ffff80000010795f:	85 c0                	test   %eax,%eax$/;"	l
ffff800000107961	kernel.asm	/^ffff800000107961:	75 e4                	jne    ffff800000107947 <acquire+0x46>$/;"	l
ffff800000107963	kernel.asm	/^ffff800000107963:	0f ae f0             	mfence $/;"	l
ffff800000107966	kernel.asm	/^ffff800000107966:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010796a	kernel.asm	/^ffff80000010796a:	48 c7 c2 f0 ff ff ff 	mov    $0xfffffffffffffff0,%rdx$/;"	l
ffff800000107971	kernel.asm	/^ffff800000107971:	64 48 8b 12          	mov    %fs:(%rdx),%rdx$/;"	l
ffff800000107975	kernel.asm	/^ffff800000107975:	48 89 50 10          	mov    %rdx,0x10(%rax)$/;"	l
ffff800000107979	kernel.asm	/^ffff800000107979:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010797d	kernel.asm	/^ffff80000010797d:	48 8d 50 18          	lea    0x18(%rax),%rdx$/;"	l
ffff800000107981	kernel.asm	/^ffff800000107981:	48 8d 45 f8          	lea    -0x8(%rbp),%rax$/;"	l
ffff800000107985	kernel.asm	/^ffff800000107985:	48 89 d6             	mov    %rdx,%rsi$/;"	l
ffff800000107988	kernel.asm	/^ffff800000107988:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010798b	kernel.asm	/^ffff80000010798b:	48 b8 0b 7a 10 00 00 	movabs $0xffff800000107a0b,%rax$/;"	l
ffff800000107992	kernel.asm	/^ffff800000107992:	80 ff ff $/;"	l
ffff800000107995	kernel.asm	/^ffff800000107995:	ff d0                	callq  *%rax$/;"	l
ffff800000107997	kernel.asm	/^ffff800000107997:	90                   	nop$/;"	l
ffff800000107998	kernel.asm	/^ffff800000107998:	c9                   	leaveq $/;"	l
ffff800000107999	kernel.asm	/^ffff800000107999:	c3                   	retq   $/;"	l
ffff80000010799a	kernel.asm	/^ffff80000010799a <release>:$/;"	l
ffff80000010799a	kernel.asm	/^ffff80000010799a:	55                   	push   %rbp$/;"	l
ffff80000010799b	kernel.asm	/^ffff80000010799b:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010799e	kernel.asm	/^ffff80000010799e:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff8000001079a2	kernel.asm	/^ffff8000001079a2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)$/;"	l
ffff8000001079a6	kernel.asm	/^ffff8000001079a6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001079aa	kernel.asm	/^ffff8000001079aa:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001079ad	kernel.asm	/^ffff8000001079ad:	48 b8 d8 7a 10 00 00 	movabs $0xffff800000107ad8,%rax$/;"	l
ffff8000001079b4	kernel.asm	/^ffff8000001079b4:	80 ff ff $/;"	l
ffff8000001079b7	kernel.asm	/^ffff8000001079b7:	ff d0                	callq  *%rax$/;"	l
ffff8000001079b9	kernel.asm	/^ffff8000001079b9:	85 c0                	test   %eax,%eax$/;"	l
ffff8000001079bb	kernel.asm	/^ffff8000001079bb:	75 16                	jne    ffff8000001079d3 <release+0x39>$/;"	l
ffff8000001079bd	kernel.asm	/^ffff8000001079bd:	48 bf 30 c6 10 00 00 	movabs $0xffff80000010c630,%rdi$/;"	l
ffff8000001079c4	kernel.asm	/^ffff8000001079c4:	80 ff ff $/;"	l
ffff8000001079c7	kernel.asm	/^ffff8000001079c7:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff8000001079ce	kernel.asm	/^ffff8000001079ce:	80 ff ff $/;"	l
ffff8000001079d1	kernel.asm	/^ffff8000001079d1:	ff d0                	callq  *%rax$/;"	l
ffff8000001079d3	kernel.asm	/^ffff8000001079d3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001079d7	kernel.asm	/^ffff8000001079d7:	48 c7 40 18 00 00 00 	movq   $0x0,0x18(%rax)$/;"	l
ffff8000001079de	kernel.asm	/^ffff8000001079de:	00 $/;"	l
ffff8000001079df	kernel.asm	/^ffff8000001079df:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001079e3	kernel.asm	/^ffff8000001079e3:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)$/;"	l
ffff8000001079ea	kernel.asm	/^ffff8000001079ea:	00 $/;"	l
ffff8000001079eb	kernel.asm	/^ffff8000001079eb:	0f ae f0             	mfence $/;"	l
ffff8000001079ee	kernel.asm	/^ffff8000001079ee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001079f2	kernel.asm	/^ffff8000001079f2:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx$/;"	l
ffff8000001079f6	kernel.asm	/^ffff8000001079f6:	c7 00 00 00 00 00    	movl   $0x0,(%rax)$/;"	l
ffff8000001079fc	kernel.asm	/^ffff8000001079fc:	48 b8 8e 7b 10 00 00 	movabs $0xffff800000107b8e,%rax$/;"	l
ffff800000107a03	kernel.asm	/^ffff800000107a03:	80 ff ff $/;"	l
ffff800000107a06	kernel.asm	/^ffff800000107a06:	ff d0                	callq  *%rax$/;"	l
ffff800000107a08	kernel.asm	/^ffff800000107a08:	90                   	nop$/;"	l
ffff800000107a09	kernel.asm	/^ffff800000107a09:	c9                   	leaveq $/;"	l
ffff800000107a0a	kernel.asm	/^ffff800000107a0a:	c3                   	retq   $/;"	l
ffff800000107a0b	kernel.asm	/^ffff800000107a0b <getcallerpcs>:$/;"	l
ffff800000107a0b	kernel.asm	/^ffff800000107a0b:	55                   	push   %rbp$/;"	l
ffff800000107a0c	kernel.asm	/^ffff800000107a0c:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000107a0f	kernel.asm	/^ffff800000107a0f:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ffff800000107a13	kernel.asm	/^ffff800000107a13:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
ffff800000107a17	kernel.asm	/^ffff800000107a17:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)$/;"	l
ffff800000107a1b	kernel.asm	/^ffff800000107a1b:	48 89 e8             	mov    %rbp,%rax$/;"	l
ffff800000107a1e	kernel.asm	/^ffff800000107a1e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff800000107a22	kernel.asm	/^ffff800000107a22:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx$/;"	l
ffff800000107a26	kernel.asm	/^ffff800000107a26:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000107a2a	kernel.asm	/^ffff800000107a2a:	48 89 d6             	mov    %rdx,%rsi$/;"	l
ffff800000107a2d	kernel.asm	/^ffff800000107a2d:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000107a30	kernel.asm	/^ffff800000107a30:	48 b8 3f 7a 10 00 00 	movabs $0xffff800000107a3f,%rax$/;"	l
ffff800000107a37	kernel.asm	/^ffff800000107a37:	80 ff ff $/;"	l
ffff800000107a3a	kernel.asm	/^ffff800000107a3a:	ff d0                	callq  *%rax$/;"	l
ffff800000107a3c	kernel.asm	/^ffff800000107a3c:	90                   	nop$/;"	l
ffff800000107a3d	kernel.asm	/^ffff800000107a3d:	c9                   	leaveq $/;"	l
ffff800000107a3e	kernel.asm	/^ffff800000107a3e:	c3                   	retq   $/;"	l
ffff800000107a3f	kernel.asm	/^ffff800000107a3f <getstackpcs>:$/;"	l
ffff800000107a3f	kernel.asm	/^ffff800000107a3f:	55                   	push   %rbp$/;"	l
ffff800000107a40	kernel.asm	/^ffff800000107a40:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000107a43	kernel.asm	/^ffff800000107a43:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ffff800000107a47	kernel.asm	/^ffff800000107a47:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
ffff800000107a4b	kernel.asm	/^ffff800000107a4b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)$/;"	l
ffff800000107a4f	kernel.asm	/^ffff800000107a4f:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)$/;"	l
ffff800000107a56	kernel.asm	/^ffff800000107a56:	eb 50                	jmp    ffff800000107aa8 <getstackpcs+0x69>$/;"	l
ffff800000107a58	kernel.asm	/^ffff800000107a58:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)$/;"	l
ffff800000107a5d	kernel.asm	/^ffff800000107a5d:	74 70                	je     ffff800000107acf <getstackpcs+0x90>$/;"	l
ffff800000107a5f	kernel.asm	/^ffff800000107a5f:	48 b8 ff ff ff ff ff 	movabs $0xffff7fffffffffff,%rax$/;"	l
ffff800000107a66	kernel.asm	/^ffff800000107a66:	7f ff ff $/;"	l
ffff800000107a69	kernel.asm	/^ffff800000107a69:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)$/;"	l
ffff800000107a6d	kernel.asm	/^ffff800000107a6d:	76 60                	jbe    ffff800000107acf <getstackpcs+0x90>$/;"	l
ffff800000107a6f	kernel.asm	/^ffff800000107a6f:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff800000107a74	kernel.asm	/^ffff800000107a74:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)$/;"	l
ffff800000107a78	kernel.asm	/^ffff800000107a78:	74 55                	je     ffff800000107acf <getstackpcs+0x90>$/;"	l
ffff800000107a7a	kernel.asm	/^ffff800000107a7a:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff800000107a7d	kernel.asm	/^ffff800000107a7d:	48 98                	cltq   $/;"	l
ffff800000107a7f	kernel.asm	/^ffff800000107a7f:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx$/;"	l
ffff800000107a86	kernel.asm	/^ffff800000107a86:	00 $/;"	l
ffff800000107a87	kernel.asm	/^ffff800000107a87:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff800000107a8b	kernel.asm	/^ffff800000107a8b:	48 01 c2             	add    %rax,%rdx$/;"	l
ffff800000107a8e	kernel.asm	/^ffff800000107a8e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000107a92	kernel.asm	/^ffff800000107a92:	48 8b 40 08          	mov    0x8(%rax),%rax$/;"	l
ffff800000107a96	kernel.asm	/^ffff800000107a96:	48 89 02             	mov    %rax,(%rdx)$/;"	l
ffff800000107a99	kernel.asm	/^ffff800000107a99:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000107a9d	kernel.asm	/^ffff800000107a9d:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff800000107aa0	kernel.asm	/^ffff800000107aa0:	48 89 45 e8          	mov    %rax,-0x18(%rbp)$/;"	l
ffff800000107aa4	kernel.asm	/^ffff800000107aa4:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)$/;"	l
ffff800000107aa8	kernel.asm	/^ffff800000107aa8:	83 7d fc 09          	cmpl   $0x9,-0x4(%rbp)$/;"	l
ffff800000107aac	kernel.asm	/^ffff800000107aac:	7e aa                	jle    ffff800000107a58 <getstackpcs+0x19>$/;"	l
ffff800000107aae	kernel.asm	/^ffff800000107aae:	eb 1f                	jmp    ffff800000107acf <getstackpcs+0x90>$/;"	l
ffff800000107ab0	kernel.asm	/^ffff800000107ab0:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff800000107ab3	kernel.asm	/^ffff800000107ab3:	48 98                	cltq   $/;"	l
ffff800000107ab5	kernel.asm	/^ffff800000107ab5:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx$/;"	l
ffff800000107abc	kernel.asm	/^ffff800000107abc:	00 $/;"	l
ffff800000107abd	kernel.asm	/^ffff800000107abd:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff800000107ac1	kernel.asm	/^ffff800000107ac1:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff800000107ac4	kernel.asm	/^ffff800000107ac4:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)$/;"	l
ffff800000107acb	kernel.asm	/^ffff800000107acb:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)$/;"	l
ffff800000107acf	kernel.asm	/^ffff800000107acf:	83 7d fc 09          	cmpl   $0x9,-0x4(%rbp)$/;"	l
ffff800000107ad3	kernel.asm	/^ffff800000107ad3:	7e db                	jle    ffff800000107ab0 <getstackpcs+0x71>$/;"	l
ffff800000107ad5	kernel.asm	/^ffff800000107ad5:	90                   	nop$/;"	l
ffff800000107ad6	kernel.asm	/^ffff800000107ad6:	c9                   	leaveq $/;"	l
ffff800000107ad7	kernel.asm	/^ffff800000107ad7:	c3                   	retq   $/;"	l
ffff800000107ad8	kernel.asm	/^ffff800000107ad8 <holding>:$/;"	l
ffff800000107ad8	kernel.asm	/^ffff800000107ad8:	55                   	push   %rbp$/;"	l
ffff800000107ad9	kernel.asm	/^ffff800000107ad9:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000107adc	kernel.asm	/^ffff800000107adc:	48 83 ec 08          	sub    $0x8,%rsp$/;"	l
ffff800000107ae0	kernel.asm	/^ffff800000107ae0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)$/;"	l
ffff800000107ae4	kernel.asm	/^ffff800000107ae4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000107ae8	kernel.asm	/^ffff800000107ae8:	8b 00                	mov    (%rax),%eax$/;"	l
ffff800000107aea	kernel.asm	/^ffff800000107aea:	85 c0                	test   %eax,%eax$/;"	l
ffff800000107aec	kernel.asm	/^ffff800000107aec:	74 1f                	je     ffff800000107b0d <holding+0x35>$/;"	l
ffff800000107aee	kernel.asm	/^ffff800000107aee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000107af2	kernel.asm	/^ffff800000107af2:	48 8b 50 10          	mov    0x10(%rax),%rdx$/;"	l
ffff800000107af6	kernel.asm	/^ffff800000107af6:	48 c7 c0 f0 ff ff ff 	mov    $0xfffffffffffffff0,%rax$/;"	l
ffff800000107afd	kernel.asm	/^ffff800000107afd:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000107b01	kernel.asm	/^ffff800000107b01:	48 39 c2             	cmp    %rax,%rdx$/;"	l
ffff800000107b04	kernel.asm	/^ffff800000107b04:	75 07                	jne    ffff800000107b0d <holding+0x35>$/;"	l
ffff800000107b06	kernel.asm	/^ffff800000107b06:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
ffff800000107b0b	kernel.asm	/^ffff800000107b0b:	eb 05                	jmp    ffff800000107b12 <holding+0x3a>$/;"	l
ffff800000107b0d	kernel.asm	/^ffff800000107b0d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000107b12	kernel.asm	/^ffff800000107b12:	c9                   	leaveq $/;"	l
ffff800000107b13	kernel.asm	/^ffff800000107b13:	c3                   	retq   $/;"	l
ffff800000107b14	kernel.asm	/^ffff800000107b14 <pushcli>:$/;"	l
ffff800000107b14	kernel.asm	/^ffff800000107b14:	55                   	push   %rbp$/;"	l
ffff800000107b15	kernel.asm	/^ffff800000107b15:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000107b18	kernel.asm	/^ffff800000107b18:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff800000107b1c	kernel.asm	/^ffff800000107b1c:	48 b8 81 78 10 00 00 	movabs $0xffff800000107881,%rax$/;"	l
ffff800000107b23	kernel.asm	/^ffff800000107b23:	80 ff ff $/;"	l
ffff800000107b26	kernel.asm	/^ffff800000107b26:	ff d0                	callq  *%rax$/;"	l
ffff800000107b28	kernel.asm	/^ffff800000107b28:	89 45 fc             	mov    %eax,-0x4(%rbp)$/;"	l
ffff800000107b2b	kernel.asm	/^ffff800000107b2b:	48 b8 95 78 10 00 00 	movabs $0xffff800000107895,%rax$/;"	l
ffff800000107b32	kernel.asm	/^ffff800000107b32:	80 ff ff $/;"	l
ffff800000107b35	kernel.asm	/^ffff800000107b35:	ff d0                	callq  *%rax$/;"	l
ffff800000107b37	kernel.asm	/^ffff800000107b37:	48 c7 c0 f0 ff ff ff 	mov    $0xfffffffffffffff0,%rax$/;"	l
ffff800000107b3e	kernel.asm	/^ffff800000107b3e:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000107b42	kernel.asm	/^ffff800000107b42:	8b 80 e4 00 00 00    	mov    0xe4(%rax),%eax$/;"	l
ffff800000107b48	kernel.asm	/^ffff800000107b48:	85 c0                	test   %eax,%eax$/;"	l
ffff800000107b4a	kernel.asm	/^ffff800000107b4a:	75 1a                	jne    ffff800000107b66 <pushcli+0x52>$/;"	l
ffff800000107b4c	kernel.asm	/^ffff800000107b4c:	48 c7 c0 f0 ff ff ff 	mov    $0xfffffffffffffff0,%rax$/;"	l
ffff800000107b53	kernel.asm	/^ffff800000107b53:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000107b57	kernel.asm	/^ffff800000107b57:	8b 55 fc             	mov    -0x4(%rbp),%edx$/;"	l
ffff800000107b5a	kernel.asm	/^ffff800000107b5a:	81 e2 00 02 00 00    	and    $0x200,%edx$/;"	l
ffff800000107b60	kernel.asm	/^ffff800000107b60:	89 90 e8 00 00 00    	mov    %edx,0xe8(%rax)$/;"	l
ffff800000107b66	kernel.asm	/^ffff800000107b66:	48 c7 c0 f0 ff ff ff 	mov    $0xfffffffffffffff0,%rax$/;"	l
ffff800000107b6d	kernel.asm	/^ffff800000107b6d:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000107b71	kernel.asm	/^ffff800000107b71:	48 c7 c2 f0 ff ff ff 	mov    $0xfffffffffffffff0,%rdx$/;"	l
ffff800000107b78	kernel.asm	/^ffff800000107b78:	64 48 8b 12          	mov    %fs:(%rdx),%rdx$/;"	l
ffff800000107b7c	kernel.asm	/^ffff800000107b7c:	8b 92 e4 00 00 00    	mov    0xe4(%rdx),%edx$/;"	l
ffff800000107b82	kernel.asm	/^ffff800000107b82:	83 c2 01             	add    $0x1,%edx$/;"	l
ffff800000107b85	kernel.asm	/^ffff800000107b85:	89 90 e4 00 00 00    	mov    %edx,0xe4(%rax)$/;"	l
ffff800000107b8b	kernel.asm	/^ffff800000107b8b:	90                   	nop$/;"	l
ffff800000107b8c	kernel.asm	/^ffff800000107b8c:	c9                   	leaveq $/;"	l
ffff800000107b8d	kernel.asm	/^ffff800000107b8d:	c3                   	retq   $/;"	l
ffff800000107b8e	kernel.asm	/^ffff800000107b8e <popcli>:$/;"	l
ffff800000107b8e	kernel.asm	/^ffff800000107b8e:	55                   	push   %rbp$/;"	l
ffff800000107b8f	kernel.asm	/^ffff800000107b8f:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000107b92	kernel.asm	/^ffff800000107b92:	48 b8 81 78 10 00 00 	movabs $0xffff800000107881,%rax$/;"	l
ffff800000107b99	kernel.asm	/^ffff800000107b99:	80 ff ff $/;"	l
ffff800000107b9c	kernel.asm	/^ffff800000107b9c:	ff d0                	callq  *%rax$/;"	l
ffff800000107b9e	kernel.asm	/^ffff800000107b9e:	25 00 02 00 00       	and    $0x200,%eax$/;"	l
ffff800000107ba3	kernel.asm	/^ffff800000107ba3:	48 85 c0             	test   %rax,%rax$/;"	l
ffff800000107ba6	kernel.asm	/^ffff800000107ba6:	74 16                	je     ffff800000107bbe <popcli+0x30>$/;"	l
ffff800000107ba8	kernel.asm	/^ffff800000107ba8:	48 bf 38 c6 10 00 00 	movabs $0xffff80000010c638,%rdi$/;"	l
ffff800000107baf	kernel.asm	/^ffff800000107baf:	80 ff ff $/;"	l
ffff800000107bb2	kernel.asm	/^ffff800000107bb2:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff800000107bb9	kernel.asm	/^ffff800000107bb9:	80 ff ff $/;"	l
ffff800000107bbc	kernel.asm	/^ffff800000107bbc:	ff d0                	callq  *%rax$/;"	l
ffff800000107bbe	kernel.asm	/^ffff800000107bbe:	48 c7 c0 f0 ff ff ff 	mov    $0xfffffffffffffff0,%rax$/;"	l
ffff800000107bc5	kernel.asm	/^ffff800000107bc5:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000107bc9	kernel.asm	/^ffff800000107bc9:	8b 90 e4 00 00 00    	mov    0xe4(%rax),%edx$/;"	l
ffff800000107bcf	kernel.asm	/^ffff800000107bcf:	83 ea 01             	sub    $0x1,%edx$/;"	l
ffff800000107bd2	kernel.asm	/^ffff800000107bd2:	89 90 e4 00 00 00    	mov    %edx,0xe4(%rax)$/;"	l
ffff800000107bd8	kernel.asm	/^ffff800000107bd8:	8b 80 e4 00 00 00    	mov    0xe4(%rax),%eax$/;"	l
ffff800000107bde	kernel.asm	/^ffff800000107bde:	85 c0                	test   %eax,%eax$/;"	l
ffff800000107be0	kernel.asm	/^ffff800000107be0:	79 16                	jns    ffff800000107bf8 <popcli+0x6a>$/;"	l
ffff800000107be2	kernel.asm	/^ffff800000107be2:	48 bf 4f c6 10 00 00 	movabs $0xffff80000010c64f,%rdi$/;"	l
ffff800000107be9	kernel.asm	/^ffff800000107be9:	80 ff ff $/;"	l
ffff800000107bec	kernel.asm	/^ffff800000107bec:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff800000107bf3	kernel.asm	/^ffff800000107bf3:	80 ff ff $/;"	l
ffff800000107bf6	kernel.asm	/^ffff800000107bf6:	ff d0                	callq  *%rax$/;"	l
ffff800000107bf8	kernel.asm	/^ffff800000107bf8:	48 c7 c0 f0 ff ff ff 	mov    $0xfffffffffffffff0,%rax$/;"	l
ffff800000107bff	kernel.asm	/^ffff800000107bff:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000107c03	kernel.asm	/^ffff800000107c03:	8b 80 e4 00 00 00    	mov    0xe4(%rax),%eax$/;"	l
ffff800000107c09	kernel.asm	/^ffff800000107c09:	85 c0                	test   %eax,%eax$/;"	l
ffff800000107c0b	kernel.asm	/^ffff800000107c0b:	75 21                	jne    ffff800000107c2e <popcli+0xa0>$/;"	l
ffff800000107c0d	kernel.asm	/^ffff800000107c0d:	48 c7 c0 f0 ff ff ff 	mov    $0xfffffffffffffff0,%rax$/;"	l
ffff800000107c14	kernel.asm	/^ffff800000107c14:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000107c18	kernel.asm	/^ffff800000107c18:	8b 80 e8 00 00 00    	mov    0xe8(%rax),%eax$/;"	l
ffff800000107c1e	kernel.asm	/^ffff800000107c1e:	85 c0                	test   %eax,%eax$/;"	l
ffff800000107c20	kernel.asm	/^ffff800000107c20:	74 0c                	je     ffff800000107c2e <popcli+0xa0>$/;"	l
ffff800000107c22	kernel.asm	/^ffff800000107c22:	48 b8 9d 78 10 00 00 	movabs $0xffff80000010789d,%rax$/;"	l
ffff800000107c29	kernel.asm	/^ffff800000107c29:	80 ff ff $/;"	l
ffff800000107c2c	kernel.asm	/^ffff800000107c2c:	ff d0                	callq  *%rax$/;"	l
ffff800000107c2e	kernel.asm	/^ffff800000107c2e:	90                   	nop$/;"	l
ffff800000107c2f	kernel.asm	/^ffff800000107c2f:	5d                   	pop    %rbp$/;"	l
ffff800000107c30	kernel.asm	/^ffff800000107c30:	c3                   	retq   $/;"	l
ffff800000107c31	kernel.asm	/^ffff800000107c31 <stosb>:$/;"	l
ffff800000107c31	kernel.asm	/^ffff800000107c31:	55                   	push   %rbp$/;"	l
ffff800000107c32	kernel.asm	/^ffff800000107c32:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000107c35	kernel.asm	/^ffff800000107c35:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff800000107c39	kernel.asm	/^ffff800000107c39:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)$/;"	l
ffff800000107c3d	kernel.asm	/^ffff800000107c3d:	89 75 f4             	mov    %esi,-0xc(%rbp)$/;"	l
ffff800000107c40	kernel.asm	/^ffff800000107c40:	89 55 f0             	mov    %edx,-0x10(%rbp)$/;"	l
ffff800000107c43	kernel.asm	/^ffff800000107c43:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx$/;"	l
ffff800000107c47	kernel.asm	/^ffff800000107c47:	8b 55 f0             	mov    -0x10(%rbp),%edx$/;"	l
ffff800000107c4a	kernel.asm	/^ffff800000107c4a:	8b 45 f4             	mov    -0xc(%rbp),%eax$/;"	l
ffff800000107c4d	kernel.asm	/^ffff800000107c4d:	48 89 ce             	mov    %rcx,%rsi$/;"	l
ffff800000107c50	kernel.asm	/^ffff800000107c50:	48 89 f7             	mov    %rsi,%rdi$/;"	l
ffff800000107c53	kernel.asm	/^ffff800000107c53:	89 d1                	mov    %edx,%ecx$/;"	l
ffff800000107c55	kernel.asm	/^ffff800000107c55:	fc                   	cld    $/;"	l
ffff800000107c56	kernel.asm	/^ffff800000107c56:	f3 aa                	rep stos %al,%es:(%rdi)$/;"	l
ffff800000107c58	kernel.asm	/^ffff800000107c58:	89 ca                	mov    %ecx,%edx$/;"	l
ffff800000107c5a	kernel.asm	/^ffff800000107c5a:	48 89 fe             	mov    %rdi,%rsi$/;"	l
ffff800000107c5d	kernel.asm	/^ffff800000107c5d:	48 89 75 f8          	mov    %rsi,-0x8(%rbp)$/;"	l
ffff800000107c61	kernel.asm	/^ffff800000107c61:	89 55 f0             	mov    %edx,-0x10(%rbp)$/;"	l
ffff800000107c64	kernel.asm	/^ffff800000107c64:	90                   	nop$/;"	l
ffff800000107c65	kernel.asm	/^ffff800000107c65:	c9                   	leaveq $/;"	l
ffff800000107c66	kernel.asm	/^ffff800000107c66:	c3                   	retq   $/;"	l
ffff800000107c67	kernel.asm	/^ffff800000107c67 <stosl>:$/;"	l
ffff800000107c67	kernel.asm	/^ffff800000107c67:	55                   	push   %rbp$/;"	l
ffff800000107c68	kernel.asm	/^ffff800000107c68:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000107c6b	kernel.asm	/^ffff800000107c6b:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff800000107c6f	kernel.asm	/^ffff800000107c6f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)$/;"	l
ffff800000107c73	kernel.asm	/^ffff800000107c73:	89 75 f4             	mov    %esi,-0xc(%rbp)$/;"	l
ffff800000107c76	kernel.asm	/^ffff800000107c76:	89 55 f0             	mov    %edx,-0x10(%rbp)$/;"	l
ffff800000107c79	kernel.asm	/^ffff800000107c79:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx$/;"	l
ffff800000107c7d	kernel.asm	/^ffff800000107c7d:	8b 55 f0             	mov    -0x10(%rbp),%edx$/;"	l
ffff800000107c80	kernel.asm	/^ffff800000107c80:	8b 45 f4             	mov    -0xc(%rbp),%eax$/;"	l
ffff800000107c83	kernel.asm	/^ffff800000107c83:	48 89 ce             	mov    %rcx,%rsi$/;"	l
ffff800000107c86	kernel.asm	/^ffff800000107c86:	48 89 f7             	mov    %rsi,%rdi$/;"	l
ffff800000107c89	kernel.asm	/^ffff800000107c89:	89 d1                	mov    %edx,%ecx$/;"	l
ffff800000107c8b	kernel.asm	/^ffff800000107c8b:	fc                   	cld    $/;"	l
ffff800000107c8c	kernel.asm	/^ffff800000107c8c:	f3 ab                	rep stos %eax,%es:(%rdi)$/;"	l
ffff800000107c8e	kernel.asm	/^ffff800000107c8e:	89 ca                	mov    %ecx,%edx$/;"	l
ffff800000107c90	kernel.asm	/^ffff800000107c90:	48 89 fe             	mov    %rdi,%rsi$/;"	l
ffff800000107c93	kernel.asm	/^ffff800000107c93:	48 89 75 f8          	mov    %rsi,-0x8(%rbp)$/;"	l
ffff800000107c97	kernel.asm	/^ffff800000107c97:	89 55 f0             	mov    %edx,-0x10(%rbp)$/;"	l
ffff800000107c9a	kernel.asm	/^ffff800000107c9a:	90                   	nop$/;"	l
ffff800000107c9b	kernel.asm	/^ffff800000107c9b:	c9                   	leaveq $/;"	l
ffff800000107c9c	kernel.asm	/^ffff800000107c9c:	c3                   	retq   $/;"	l
ffff800000107c9d	kernel.asm	/^ffff800000107c9d <memset>:$/;"	l
ffff800000107c9d	kernel.asm	/^ffff800000107c9d:	55                   	push   %rbp$/;"	l
ffff800000107c9e	kernel.asm	/^ffff800000107c9e:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000107ca1	kernel.asm	/^ffff800000107ca1:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff800000107ca5	kernel.asm	/^ffff800000107ca5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)$/;"	l
ffff800000107ca9	kernel.asm	/^ffff800000107ca9:	89 75 f4             	mov    %esi,-0xc(%rbp)$/;"	l
ffff800000107cac	kernel.asm	/^ffff800000107cac:	89 55 f0             	mov    %edx,-0x10(%rbp)$/;"	l
ffff800000107caf	kernel.asm	/^ffff800000107caf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000107cb3	kernel.asm	/^ffff800000107cb3:	83 e0 03             	and    $0x3,%eax$/;"	l
ffff800000107cb6	kernel.asm	/^ffff800000107cb6:	48 85 c0             	test   %rax,%rax$/;"	l
ffff800000107cb9	kernel.asm	/^ffff800000107cb9:	75 4f                	jne    ffff800000107d0a <memset+0x6d>$/;"	l
ffff800000107cbb	kernel.asm	/^ffff800000107cbb:	8b 45 f0             	mov    -0x10(%rbp),%eax$/;"	l
ffff800000107cbe	kernel.asm	/^ffff800000107cbe:	83 e0 03             	and    $0x3,%eax$/;"	l
ffff800000107cc1	kernel.asm	/^ffff800000107cc1:	85 c0                	test   %eax,%eax$/;"	l
ffff800000107cc3	kernel.asm	/^ffff800000107cc3:	75 45                	jne    ffff800000107d0a <memset+0x6d>$/;"	l
ffff800000107cc5	kernel.asm	/^ffff800000107cc5:	81 65 f4 ff 00 00 00 	andl   $0xff,-0xc(%rbp)$/;"	l
ffff800000107ccc	kernel.asm	/^ffff800000107ccc:	8b 45 f0             	mov    -0x10(%rbp),%eax$/;"	l
ffff800000107ccf	kernel.asm	/^ffff800000107ccf:	c1 e8 02             	shr    $0x2,%eax$/;"	l
ffff800000107cd2	kernel.asm	/^ffff800000107cd2:	89 c6                	mov    %eax,%esi$/;"	l
ffff800000107cd4	kernel.asm	/^ffff800000107cd4:	8b 45 f4             	mov    -0xc(%rbp),%eax$/;"	l
ffff800000107cd7	kernel.asm	/^ffff800000107cd7:	c1 e0 18             	shl    $0x18,%eax$/;"	l
ffff800000107cda	kernel.asm	/^ffff800000107cda:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000107cdc	kernel.asm	/^ffff800000107cdc:	8b 45 f4             	mov    -0xc(%rbp),%eax$/;"	l
ffff800000107cdf	kernel.asm	/^ffff800000107cdf:	c1 e0 10             	shl    $0x10,%eax$/;"	l
ffff800000107ce2	kernel.asm	/^ffff800000107ce2:	09 c2                	or     %eax,%edx$/;"	l
ffff800000107ce4	kernel.asm	/^ffff800000107ce4:	8b 45 f4             	mov    -0xc(%rbp),%eax$/;"	l
ffff800000107ce7	kernel.asm	/^ffff800000107ce7:	c1 e0 08             	shl    $0x8,%eax$/;"	l
ffff800000107cea	kernel.asm	/^ffff800000107cea:	09 d0                	or     %edx,%eax$/;"	l
ffff800000107cec	kernel.asm	/^ffff800000107cec:	0b 45 f4             	or     -0xc(%rbp),%eax$/;"	l
ffff800000107cef	kernel.asm	/^ffff800000107cef:	89 c1                	mov    %eax,%ecx$/;"	l
ffff800000107cf1	kernel.asm	/^ffff800000107cf1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000107cf5	kernel.asm	/^ffff800000107cf5:	89 f2                	mov    %esi,%edx$/;"	l
ffff800000107cf7	kernel.asm	/^ffff800000107cf7:	89 ce                	mov    %ecx,%esi$/;"	l
ffff800000107cf9	kernel.asm	/^ffff800000107cf9:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000107cfc	kernel.asm	/^ffff800000107cfc:	48 b8 67 7c 10 00 00 	movabs $0xffff800000107c67,%rax$/;"	l
ffff800000107d03	kernel.asm	/^ffff800000107d03:	80 ff ff $/;"	l
ffff800000107d06	kernel.asm	/^ffff800000107d06:	ff d0                	callq  *%rax$/;"	l
ffff800000107d08	kernel.asm	/^ffff800000107d08:	eb 1b                	jmp    ffff800000107d25 <memset+0x88>$/;"	l
ffff800000107d0a	kernel.asm	/^ffff800000107d0a:	8b 55 f0             	mov    -0x10(%rbp),%edx$/;"	l
ffff800000107d0d	kernel.asm	/^ffff800000107d0d:	8b 4d f4             	mov    -0xc(%rbp),%ecx$/;"	l
ffff800000107d10	kernel.asm	/^ffff800000107d10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000107d14	kernel.asm	/^ffff800000107d14:	89 ce                	mov    %ecx,%esi$/;"	l
ffff800000107d16	kernel.asm	/^ffff800000107d16:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000107d19	kernel.asm	/^ffff800000107d19:	48 b8 31 7c 10 00 00 	movabs $0xffff800000107c31,%rax$/;"	l
ffff800000107d20	kernel.asm	/^ffff800000107d20:	80 ff ff $/;"	l
ffff800000107d23	kernel.asm	/^ffff800000107d23:	ff d0                	callq  *%rax$/;"	l
ffff800000107d25	kernel.asm	/^ffff800000107d25:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000107d29	kernel.asm	/^ffff800000107d29:	c9                   	leaveq $/;"	l
ffff800000107d2a	kernel.asm	/^ffff800000107d2a:	c3                   	retq   $/;"	l
ffff800000107d2b	kernel.asm	/^ffff800000107d2b <memcmp>:$/;"	l
ffff800000107d2b	kernel.asm	/^ffff800000107d2b:	55                   	push   %rbp$/;"	l
ffff800000107d2c	kernel.asm	/^ffff800000107d2c:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000107d2f	kernel.asm	/^ffff800000107d2f:	48 83 ec 28          	sub    $0x28,%rsp$/;"	l
ffff800000107d33	kernel.asm	/^ffff800000107d33:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
ffff800000107d37	kernel.asm	/^ffff800000107d37:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)$/;"	l
ffff800000107d3b	kernel.asm	/^ffff800000107d3b:	89 55 dc             	mov    %edx,-0x24(%rbp)$/;"	l
ffff800000107d3e	kernel.asm	/^ffff800000107d3e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000107d42	kernel.asm	/^ffff800000107d42:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff800000107d46	kernel.asm	/^ffff800000107d46:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff800000107d4a	kernel.asm	/^ffff800000107d4a:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ffff800000107d4e	kernel.asm	/^ffff800000107d4e:	eb 36                	jmp    ffff800000107d86 <memcmp+0x5b>$/;"	l
ffff800000107d50	kernel.asm	/^ffff800000107d50:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000107d54	kernel.asm	/^ffff800000107d54:	0f b6 10             	movzbl (%rax),%edx$/;"	l
ffff800000107d57	kernel.asm	/^ffff800000107d57:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000107d5b	kernel.asm	/^ffff800000107d5b:	0f b6 00             	movzbl (%rax),%eax$/;"	l
ffff800000107d5e	kernel.asm	/^ffff800000107d5e:	38 c2                	cmp    %al,%dl$/;"	l
ffff800000107d60	kernel.asm	/^ffff800000107d60:	74 1a                	je     ffff800000107d7c <memcmp+0x51>$/;"	l
ffff800000107d62	kernel.asm	/^ffff800000107d62:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000107d66	kernel.asm	/^ffff800000107d66:	0f b6 00             	movzbl (%rax),%eax$/;"	l
ffff800000107d69	kernel.asm	/^ffff800000107d69:	0f b6 d0             	movzbl %al,%edx$/;"	l
ffff800000107d6c	kernel.asm	/^ffff800000107d6c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000107d70	kernel.asm	/^ffff800000107d70:	0f b6 00             	movzbl (%rax),%eax$/;"	l
ffff800000107d73	kernel.asm	/^ffff800000107d73:	0f b6 c0             	movzbl %al,%eax$/;"	l
ffff800000107d76	kernel.asm	/^ffff800000107d76:	29 c2                	sub    %eax,%edx$/;"	l
ffff800000107d78	kernel.asm	/^ffff800000107d78:	89 d0                	mov    %edx,%eax$/;"	l
ffff800000107d7a	kernel.asm	/^ffff800000107d7a:	eb 1c                	jmp    ffff800000107d98 <memcmp+0x6d>$/;"	l
ffff800000107d7c	kernel.asm	/^ffff800000107d7c:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)$/;"	l
ffff800000107d81	kernel.asm	/^ffff800000107d81:	48 83 45 f0 01       	addq   $0x1,-0x10(%rbp)$/;"	l
ffff800000107d86	kernel.asm	/^ffff800000107d86:	8b 45 dc             	mov    -0x24(%rbp),%eax$/;"	l
ffff800000107d89	kernel.asm	/^ffff800000107d89:	8d 50 ff             	lea    -0x1(%rax),%edx$/;"	l
ffff800000107d8c	kernel.asm	/^ffff800000107d8c:	89 55 dc             	mov    %edx,-0x24(%rbp)$/;"	l
ffff800000107d8f	kernel.asm	/^ffff800000107d8f:	85 c0                	test   %eax,%eax$/;"	l
ffff800000107d91	kernel.asm	/^ffff800000107d91:	75 bd                	jne    ffff800000107d50 <memcmp+0x25>$/;"	l
ffff800000107d93	kernel.asm	/^ffff800000107d93:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000107d98	kernel.asm	/^ffff800000107d98:	c9                   	leaveq $/;"	l
ffff800000107d99	kernel.asm	/^ffff800000107d99:	c3                   	retq   $/;"	l
ffff800000107d9a	kernel.asm	/^ffff800000107d9a <memmove>:$/;"	l
ffff800000107d9a	kernel.asm	/^ffff800000107d9a:	55                   	push   %rbp$/;"	l
ffff800000107d9b	kernel.asm	/^ffff800000107d9b:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000107d9e	kernel.asm	/^ffff800000107d9e:	48 83 ec 28          	sub    $0x28,%rsp$/;"	l
ffff800000107da2	kernel.asm	/^ffff800000107da2:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
ffff800000107da6	kernel.asm	/^ffff800000107da6:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)$/;"	l
ffff800000107daa	kernel.asm	/^ffff800000107daa:	89 55 dc             	mov    %edx,-0x24(%rbp)$/;"	l
ffff800000107dad	kernel.asm	/^ffff800000107dad:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff800000107db1	kernel.asm	/^ffff800000107db1:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff800000107db5	kernel.asm	/^ffff800000107db5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000107db9	kernel.asm	/^ffff800000107db9:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ffff800000107dbd	kernel.asm	/^ffff800000107dbd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000107dc1	kernel.asm	/^ffff800000107dc1:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax$/;"	l
ffff800000107dc5	kernel.asm	/^ffff800000107dc5:	73 63                	jae    ffff800000107e2a <memmove+0x90>$/;"	l
ffff800000107dc7	kernel.asm	/^ffff800000107dc7:	8b 55 dc             	mov    -0x24(%rbp),%edx$/;"	l
ffff800000107dca	kernel.asm	/^ffff800000107dca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000107dce	kernel.asm	/^ffff800000107dce:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff800000107dd1	kernel.asm	/^ffff800000107dd1:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax$/;"	l
ffff800000107dd5	kernel.asm	/^ffff800000107dd5:	76 53                	jbe    ffff800000107e2a <memmove+0x90>$/;"	l
ffff800000107dd7	kernel.asm	/^ffff800000107dd7:	8b 45 dc             	mov    -0x24(%rbp),%eax$/;"	l
ffff800000107dda	kernel.asm	/^ffff800000107dda:	48 01 45 f8          	add    %rax,-0x8(%rbp)$/;"	l
ffff800000107dde	kernel.asm	/^ffff800000107dde:	8b 45 dc             	mov    -0x24(%rbp),%eax$/;"	l
ffff800000107de1	kernel.asm	/^ffff800000107de1:	48 01 45 f0          	add    %rax,-0x10(%rbp)$/;"	l
ffff800000107de5	kernel.asm	/^ffff800000107de5:	eb 17                	jmp    ffff800000107dfe <memmove+0x64>$/;"	l
ffff800000107de7	kernel.asm	/^ffff800000107de7:	48 83 6d f0 01       	subq   $0x1,-0x10(%rbp)$/;"	l
ffff800000107dec	kernel.asm	/^ffff800000107dec:	48 83 6d f8 01       	subq   $0x1,-0x8(%rbp)$/;"	l
ffff800000107df1	kernel.asm	/^ffff800000107df1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000107df5	kernel.asm	/^ffff800000107df5:	0f b6 10             	movzbl (%rax),%edx$/;"	l
ffff800000107df8	kernel.asm	/^ffff800000107df8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000107dfc	kernel.asm	/^ffff800000107dfc:	88 10                	mov    %dl,(%rax)$/;"	l
ffff800000107dfe	kernel.asm	/^ffff800000107dfe:	8b 45 dc             	mov    -0x24(%rbp),%eax$/;"	l
ffff800000107e01	kernel.asm	/^ffff800000107e01:	8d 50 ff             	lea    -0x1(%rax),%edx$/;"	l
ffff800000107e04	kernel.asm	/^ffff800000107e04:	89 55 dc             	mov    %edx,-0x24(%rbp)$/;"	l
ffff800000107e07	kernel.asm	/^ffff800000107e07:	85 c0                	test   %eax,%eax$/;"	l
ffff800000107e09	kernel.asm	/^ffff800000107e09:	75 dc                	jne    ffff800000107de7 <memmove+0x4d>$/;"	l
ffff800000107e0b	kernel.asm	/^ffff800000107e0b:	eb 2a                	jmp    ffff800000107e37 <memmove+0x9d>$/;"	l
ffff800000107e0d	kernel.asm	/^ffff800000107e0d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000107e11	kernel.asm	/^ffff800000107e11:	48 8d 50 01          	lea    0x1(%rax),%rdx$/;"	l
ffff800000107e15	kernel.asm	/^ffff800000107e15:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)$/;"	l
ffff800000107e19	kernel.asm	/^ffff800000107e19:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx$/;"	l
ffff800000107e1d	kernel.asm	/^ffff800000107e1d:	48 8d 4a 01          	lea    0x1(%rdx),%rcx$/;"	l
ffff800000107e21	kernel.asm	/^ffff800000107e21:	48 89 4d f8          	mov    %rcx,-0x8(%rbp)$/;"	l
ffff800000107e25	kernel.asm	/^ffff800000107e25:	0f b6 12             	movzbl (%rdx),%edx$/;"	l
ffff800000107e28	kernel.asm	/^ffff800000107e28:	88 10                	mov    %dl,(%rax)$/;"	l
ffff800000107e2a	kernel.asm	/^ffff800000107e2a:	8b 45 dc             	mov    -0x24(%rbp),%eax$/;"	l
ffff800000107e2d	kernel.asm	/^ffff800000107e2d:	8d 50 ff             	lea    -0x1(%rax),%edx$/;"	l
ffff800000107e30	kernel.asm	/^ffff800000107e30:	89 55 dc             	mov    %edx,-0x24(%rbp)$/;"	l
ffff800000107e33	kernel.asm	/^ffff800000107e33:	85 c0                	test   %eax,%eax$/;"	l
ffff800000107e35	kernel.asm	/^ffff800000107e35:	75 d6                	jne    ffff800000107e0d <memmove+0x73>$/;"	l
ffff800000107e37	kernel.asm	/^ffff800000107e37:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000107e3b	kernel.asm	/^ffff800000107e3b:	c9                   	leaveq $/;"	l
ffff800000107e3c	kernel.asm	/^ffff800000107e3c:	c3                   	retq   $/;"	l
ffff800000107e3d	kernel.asm	/^ffff800000107e3d <memcpy>:$/;"	l
ffff800000107e3d	kernel.asm	/^ffff800000107e3d:	55                   	push   %rbp$/;"	l
ffff800000107e3e	kernel.asm	/^ffff800000107e3e:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000107e41	kernel.asm	/^ffff800000107e41:	48 83 ec 18          	sub    $0x18,%rsp$/;"	l
ffff800000107e45	kernel.asm	/^ffff800000107e45:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)$/;"	l
ffff800000107e49	kernel.asm	/^ffff800000107e49:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)$/;"	l
ffff800000107e4d	kernel.asm	/^ffff800000107e4d:	89 55 ec             	mov    %edx,-0x14(%rbp)$/;"	l
ffff800000107e50	kernel.asm	/^ffff800000107e50:	8b 55 ec             	mov    -0x14(%rbp),%edx$/;"	l
ffff800000107e53	kernel.asm	/^ffff800000107e53:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx$/;"	l
ffff800000107e57	kernel.asm	/^ffff800000107e57:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000107e5b	kernel.asm	/^ffff800000107e5b:	48 89 ce             	mov    %rcx,%rsi$/;"	l
ffff800000107e5e	kernel.asm	/^ffff800000107e5e:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000107e61	kernel.asm	/^ffff800000107e61:	48 b8 9a 7d 10 00 00 	movabs $0xffff800000107d9a,%rax$/;"	l
ffff800000107e68	kernel.asm	/^ffff800000107e68:	80 ff ff $/;"	l
ffff800000107e6b	kernel.asm	/^ffff800000107e6b:	ff d0                	callq  *%rax$/;"	l
ffff800000107e6d	kernel.asm	/^ffff800000107e6d:	c9                   	leaveq $/;"	l
ffff800000107e6e	kernel.asm	/^ffff800000107e6e:	c3                   	retq   $/;"	l
ffff800000107e6f	kernel.asm	/^ffff800000107e6f <strncmp>:$/;"	l
ffff800000107e6f	kernel.asm	/^ffff800000107e6f:	55                   	push   %rbp$/;"	l
ffff800000107e70	kernel.asm	/^ffff800000107e70:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000107e73	kernel.asm	/^ffff800000107e73:	48 83 ec 18          	sub    $0x18,%rsp$/;"	l
ffff800000107e77	kernel.asm	/^ffff800000107e77:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)$/;"	l
ffff800000107e7b	kernel.asm	/^ffff800000107e7b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)$/;"	l
ffff800000107e7f	kernel.asm	/^ffff800000107e7f:	89 55 ec             	mov    %edx,-0x14(%rbp)$/;"	l
ffff800000107e82	kernel.asm	/^ffff800000107e82:	eb 0e                	jmp    ffff800000107e92 <strncmp+0x23>$/;"	l
ffff800000107e84	kernel.asm	/^ffff800000107e84:	83 6d ec 01          	subl   $0x1,-0x14(%rbp)$/;"	l
ffff800000107e88	kernel.asm	/^ffff800000107e88:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)$/;"	l
ffff800000107e8d	kernel.asm	/^ffff800000107e8d:	48 83 45 f0 01       	addq   $0x1,-0x10(%rbp)$/;"	l
ffff800000107e92	kernel.asm	/^ffff800000107e92:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)$/;"	l
ffff800000107e96	kernel.asm	/^ffff800000107e96:	74 1d                	je     ffff800000107eb5 <strncmp+0x46>$/;"	l
ffff800000107e98	kernel.asm	/^ffff800000107e98:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000107e9c	kernel.asm	/^ffff800000107e9c:	0f b6 00             	movzbl (%rax),%eax$/;"	l
ffff800000107e9f	kernel.asm	/^ffff800000107e9f:	84 c0                	test   %al,%al$/;"	l
ffff800000107ea1	kernel.asm	/^ffff800000107ea1:	74 12                	je     ffff800000107eb5 <strncmp+0x46>$/;"	l
ffff800000107ea3	kernel.asm	/^ffff800000107ea3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000107ea7	kernel.asm	/^ffff800000107ea7:	0f b6 10             	movzbl (%rax),%edx$/;"	l
ffff800000107eaa	kernel.asm	/^ffff800000107eaa:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000107eae	kernel.asm	/^ffff800000107eae:	0f b6 00             	movzbl (%rax),%eax$/;"	l
ffff800000107eb1	kernel.asm	/^ffff800000107eb1:	38 c2                	cmp    %al,%dl$/;"	l
ffff800000107eb3	kernel.asm	/^ffff800000107eb3:	74 cf                	je     ffff800000107e84 <strncmp+0x15>$/;"	l
ffff800000107eb5	kernel.asm	/^ffff800000107eb5:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)$/;"	l
ffff800000107eb9	kernel.asm	/^ffff800000107eb9:	75 07                	jne    ffff800000107ec2 <strncmp+0x53>$/;"	l
ffff800000107ebb	kernel.asm	/^ffff800000107ebb:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000107ec0	kernel.asm	/^ffff800000107ec0:	eb 18                	jmp    ffff800000107eda <strncmp+0x6b>$/;"	l
ffff800000107ec2	kernel.asm	/^ffff800000107ec2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000107ec6	kernel.asm	/^ffff800000107ec6:	0f b6 00             	movzbl (%rax),%eax$/;"	l
ffff800000107ec9	kernel.asm	/^ffff800000107ec9:	0f b6 d0             	movzbl %al,%edx$/;"	l
ffff800000107ecc	kernel.asm	/^ffff800000107ecc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000107ed0	kernel.asm	/^ffff800000107ed0:	0f b6 00             	movzbl (%rax),%eax$/;"	l
ffff800000107ed3	kernel.asm	/^ffff800000107ed3:	0f b6 c0             	movzbl %al,%eax$/;"	l
ffff800000107ed6	kernel.asm	/^ffff800000107ed6:	29 c2                	sub    %eax,%edx$/;"	l
ffff800000107ed8	kernel.asm	/^ffff800000107ed8:	89 d0                	mov    %edx,%eax$/;"	l
ffff800000107eda	kernel.asm	/^ffff800000107eda:	c9                   	leaveq $/;"	l
ffff800000107edb	kernel.asm	/^ffff800000107edb:	c3                   	retq   $/;"	l
ffff800000107edc	kernel.asm	/^ffff800000107edc <strncpy>:$/;"	l
ffff800000107edc	kernel.asm	/^ffff800000107edc:	55                   	push   %rbp$/;"	l
ffff800000107edd	kernel.asm	/^ffff800000107edd:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000107ee0	kernel.asm	/^ffff800000107ee0:	48 83 ec 28          	sub    $0x28,%rsp$/;"	l
ffff800000107ee4	kernel.asm	/^ffff800000107ee4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
ffff800000107ee8	kernel.asm	/^ffff800000107ee8:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)$/;"	l
ffff800000107eec	kernel.asm	/^ffff800000107eec:	89 55 dc             	mov    %edx,-0x24(%rbp)$/;"	l
ffff800000107eef	kernel.asm	/^ffff800000107eef:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000107ef3	kernel.asm	/^ffff800000107ef3:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff800000107ef7	kernel.asm	/^ffff800000107ef7:	90                   	nop$/;"	l
ffff800000107ef8	kernel.asm	/^ffff800000107ef8:	8b 45 dc             	mov    -0x24(%rbp),%eax$/;"	l
ffff800000107efb	kernel.asm	/^ffff800000107efb:	8d 50 ff             	lea    -0x1(%rax),%edx$/;"	l
ffff800000107efe	kernel.asm	/^ffff800000107efe:	89 55 dc             	mov    %edx,-0x24(%rbp)$/;"	l
ffff800000107f01	kernel.asm	/^ffff800000107f01:	85 c0                	test   %eax,%eax$/;"	l
ffff800000107f03	kernel.asm	/^ffff800000107f03:	7e 35                	jle    ffff800000107f3a <strncpy+0x5e>$/;"	l
ffff800000107f05	kernel.asm	/^ffff800000107f05:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000107f09	kernel.asm	/^ffff800000107f09:	48 8d 50 01          	lea    0x1(%rax),%rdx$/;"	l
ffff800000107f0d	kernel.asm	/^ffff800000107f0d:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)$/;"	l
ffff800000107f11	kernel.asm	/^ffff800000107f11:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx$/;"	l
ffff800000107f15	kernel.asm	/^ffff800000107f15:	48 8d 4a 01          	lea    0x1(%rdx),%rcx$/;"	l
ffff800000107f19	kernel.asm	/^ffff800000107f19:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)$/;"	l
ffff800000107f1d	kernel.asm	/^ffff800000107f1d:	0f b6 12             	movzbl (%rdx),%edx$/;"	l
ffff800000107f20	kernel.asm	/^ffff800000107f20:	88 10                	mov    %dl,(%rax)$/;"	l
ffff800000107f22	kernel.asm	/^ffff800000107f22:	0f b6 00             	movzbl (%rax),%eax$/;"	l
ffff800000107f25	kernel.asm	/^ffff800000107f25:	84 c0                	test   %al,%al$/;"	l
ffff800000107f27	kernel.asm	/^ffff800000107f27:	75 cf                	jne    ffff800000107ef8 <strncpy+0x1c>$/;"	l
ffff800000107f29	kernel.asm	/^ffff800000107f29:	eb 0f                	jmp    ffff800000107f3a <strncpy+0x5e>$/;"	l
ffff800000107f2b	kernel.asm	/^ffff800000107f2b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000107f2f	kernel.asm	/^ffff800000107f2f:	48 8d 50 01          	lea    0x1(%rax),%rdx$/;"	l
ffff800000107f33	kernel.asm	/^ffff800000107f33:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)$/;"	l
ffff800000107f37	kernel.asm	/^ffff800000107f37:	c6 00 00             	movb   $0x0,(%rax)$/;"	l
ffff800000107f3a	kernel.asm	/^ffff800000107f3a:	8b 45 dc             	mov    -0x24(%rbp),%eax$/;"	l
ffff800000107f3d	kernel.asm	/^ffff800000107f3d:	8d 50 ff             	lea    -0x1(%rax),%edx$/;"	l
ffff800000107f40	kernel.asm	/^ffff800000107f40:	89 55 dc             	mov    %edx,-0x24(%rbp)$/;"	l
ffff800000107f43	kernel.asm	/^ffff800000107f43:	85 c0                	test   %eax,%eax$/;"	l
ffff800000107f45	kernel.asm	/^ffff800000107f45:	7f e4                	jg     ffff800000107f2b <strncpy+0x4f>$/;"	l
ffff800000107f47	kernel.asm	/^ffff800000107f47:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000107f4b	kernel.asm	/^ffff800000107f4b:	c9                   	leaveq $/;"	l
ffff800000107f4c	kernel.asm	/^ffff800000107f4c:	c3                   	retq   $/;"	l
ffff800000107f4d	kernel.asm	/^ffff800000107f4d <safestrcpy>:$/;"	l
ffff800000107f4d	kernel.asm	/^ffff800000107f4d:	55                   	push   %rbp$/;"	l
ffff800000107f4e	kernel.asm	/^ffff800000107f4e:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000107f51	kernel.asm	/^ffff800000107f51:	48 83 ec 28          	sub    $0x28,%rsp$/;"	l
ffff800000107f55	kernel.asm	/^ffff800000107f55:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
ffff800000107f59	kernel.asm	/^ffff800000107f59:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)$/;"	l
ffff800000107f5d	kernel.asm	/^ffff800000107f5d:	89 55 dc             	mov    %edx,-0x24(%rbp)$/;"	l
ffff800000107f60	kernel.asm	/^ffff800000107f60:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000107f64	kernel.asm	/^ffff800000107f64:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff800000107f68	kernel.asm	/^ffff800000107f68:	83 7d dc 00          	cmpl   $0x0,-0x24(%rbp)$/;"	l
ffff800000107f6c	kernel.asm	/^ffff800000107f6c:	7f 06                	jg     ffff800000107f74 <safestrcpy+0x27>$/;"	l
ffff800000107f6e	kernel.asm	/^ffff800000107f6e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000107f72	kernel.asm	/^ffff800000107f72:	eb 39                	jmp    ffff800000107fad <safestrcpy+0x60>$/;"	l
ffff800000107f74	kernel.asm	/^ffff800000107f74:	83 6d dc 01          	subl   $0x1,-0x24(%rbp)$/;"	l
ffff800000107f78	kernel.asm	/^ffff800000107f78:	83 7d dc 00          	cmpl   $0x0,-0x24(%rbp)$/;"	l
ffff800000107f7c	kernel.asm	/^ffff800000107f7c:	7e 24                	jle    ffff800000107fa2 <safestrcpy+0x55>$/;"	l
ffff800000107f7e	kernel.asm	/^ffff800000107f7e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000107f82	kernel.asm	/^ffff800000107f82:	48 8d 50 01          	lea    0x1(%rax),%rdx$/;"	l
ffff800000107f86	kernel.asm	/^ffff800000107f86:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)$/;"	l
ffff800000107f8a	kernel.asm	/^ffff800000107f8a:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx$/;"	l
ffff800000107f8e	kernel.asm	/^ffff800000107f8e:	48 8d 4a 01          	lea    0x1(%rdx),%rcx$/;"	l
ffff800000107f92	kernel.asm	/^ffff800000107f92:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)$/;"	l
ffff800000107f96	kernel.asm	/^ffff800000107f96:	0f b6 12             	movzbl (%rdx),%edx$/;"	l
ffff800000107f99	kernel.asm	/^ffff800000107f99:	88 10                	mov    %dl,(%rax)$/;"	l
ffff800000107f9b	kernel.asm	/^ffff800000107f9b:	0f b6 00             	movzbl (%rax),%eax$/;"	l
ffff800000107f9e	kernel.asm	/^ffff800000107f9e:	84 c0                	test   %al,%al$/;"	l
ffff800000107fa0	kernel.asm	/^ffff800000107fa0:	75 d2                	jne    ffff800000107f74 <safestrcpy+0x27>$/;"	l
ffff800000107fa2	kernel.asm	/^ffff800000107fa2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000107fa6	kernel.asm	/^ffff800000107fa6:	c6 00 00             	movb   $0x0,(%rax)$/;"	l
ffff800000107fa9	kernel.asm	/^ffff800000107fa9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000107fad	kernel.asm	/^ffff800000107fad:	c9                   	leaveq $/;"	l
ffff800000107fae	kernel.asm	/^ffff800000107fae:	c3                   	retq   $/;"	l
ffff800000107faf	kernel.asm	/^ffff800000107faf <strlen>:$/;"	l
ffff800000107faf	kernel.asm	/^ffff800000107faf:	55                   	push   %rbp$/;"	l
ffff800000107fb0	kernel.asm	/^ffff800000107fb0:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000107fb3	kernel.asm	/^ffff800000107fb3:	48 83 ec 18          	sub    $0x18,%rsp$/;"	l
ffff800000107fb7	kernel.asm	/^ffff800000107fb7:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
ffff800000107fbb	kernel.asm	/^ffff800000107fbb:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)$/;"	l
ffff800000107fc2	kernel.asm	/^ffff800000107fc2:	eb 04                	jmp    ffff800000107fc8 <strlen+0x19>$/;"	l
ffff800000107fc4	kernel.asm	/^ffff800000107fc4:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)$/;"	l
ffff800000107fc8	kernel.asm	/^ffff800000107fc8:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff800000107fcb	kernel.asm	/^ffff800000107fcb:	48 63 d0             	movslq %eax,%rdx$/;"	l
ffff800000107fce	kernel.asm	/^ffff800000107fce:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000107fd2	kernel.asm	/^ffff800000107fd2:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff800000107fd5	kernel.asm	/^ffff800000107fd5:	0f b6 00             	movzbl (%rax),%eax$/;"	l
ffff800000107fd8	kernel.asm	/^ffff800000107fd8:	84 c0                	test   %al,%al$/;"	l
ffff800000107fda	kernel.asm	/^ffff800000107fda:	75 e8                	jne    ffff800000107fc4 <strlen+0x15>$/;"	l
ffff800000107fdc	kernel.asm	/^ffff800000107fdc:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff800000107fdf	kernel.asm	/^ffff800000107fdf:	c9                   	leaveq $/;"	l
ffff800000107fe0	kernel.asm	/^ffff800000107fe0:	c3                   	retq   $/;"	l
ffff800000107fe1	kernel.asm	/^ffff800000107fe1 <swtch>:$/;"	l
ffff800000107fe1	kernel.asm	/^ffff800000107fe1:	55                   	push   %rbp$/;"	l
ffff800000107fe2	kernel.asm	/^ffff800000107fe2:	53                   	push   %rbx$/;"	l
ffff800000107fe3	kernel.asm	/^ffff800000107fe3:	41 53                	push   %r11$/;"	l
ffff800000107fe5	kernel.asm	/^ffff800000107fe5:	41 54                	push   %r12$/;"	l
ffff800000107fe7	kernel.asm	/^ffff800000107fe7:	41 55                	push   %r13$/;"	l
ffff800000107fe9	kernel.asm	/^ffff800000107fe9:	41 56                	push   %r14$/;"	l
ffff800000107feb	kernel.asm	/^ffff800000107feb:	41 57                	push   %r15$/;"	l
ffff800000107fed	kernel.asm	/^ffff800000107fed:	48 89 27             	mov    %rsp,(%rdi)$/;"	l
ffff800000107ff0	kernel.asm	/^ffff800000107ff0:	48 89 f4             	mov    %rsi,%rsp$/;"	l
ffff800000107ff3	kernel.asm	/^ffff800000107ff3:	41 5f                	pop    %r15$/;"	l
ffff800000107ff5	kernel.asm	/^ffff800000107ff5:	41 5e                	pop    %r14$/;"	l
ffff800000107ff7	kernel.asm	/^ffff800000107ff7:	41 5d                	pop    %r13$/;"	l
ffff800000107ff9	kernel.asm	/^ffff800000107ff9:	41 5c                	pop    %r12$/;"	l
ffff800000107ffb	kernel.asm	/^ffff800000107ffb:	41 5b                	pop    %r11$/;"	l
ffff800000107ffd	kernel.asm	/^ffff800000107ffd:	5b                   	pop    %rbx$/;"	l
ffff800000107ffe	kernel.asm	/^ffff800000107ffe:	5d                   	pop    %rbp$/;"	l
ffff800000107fff	kernel.asm	/^ffff800000107fff:	c3                   	retq   $/;"	l
ffff800000108000	kernel.asm	/^ffff800000108000 <fetchint>:$/;"	l
ffff800000108000	kernel.asm	/^ffff800000108000:	55                   	push   %rbp$/;"	l
ffff800000108001	kernel.asm	/^ffff800000108001:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000108004	kernel.asm	/^ffff800000108004:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff800000108008	kernel.asm	/^ffff800000108008:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)$/;"	l
ffff80000010800c	kernel.asm	/^ffff80000010800c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)$/;"	l
ffff800000108010	kernel.asm	/^ffff800000108010:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000108017	kernel.asm	/^ffff800000108017:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff80000010801b	kernel.asm	/^ffff80000010801b:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff80000010801e	kernel.asm	/^ffff80000010801e:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax$/;"	l
ffff800000108022	kernel.asm	/^ffff800000108022:	76 1b                	jbe    ffff80000010803f <fetchint+0x3f>$/;"	l
ffff800000108024	kernel.asm	/^ffff800000108024:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000108028	kernel.asm	/^ffff800000108028:	48 8d 50 04          	lea    0x4(%rax),%rdx$/;"	l
ffff80000010802c	kernel.asm	/^ffff80000010802c:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000108033	kernel.asm	/^ffff800000108033:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000108037	kernel.asm	/^ffff800000108037:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff80000010803a	kernel.asm	/^ffff80000010803a:	48 39 c2             	cmp    %rax,%rdx$/;"	l
ffff80000010803d	kernel.asm	/^ffff80000010803d:	76 07                	jbe    ffff800000108046 <fetchint+0x46>$/;"	l
ffff80000010803f	kernel.asm	/^ffff80000010803f:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff800000108044	kernel.asm	/^ffff800000108044:	eb 11                	jmp    ffff800000108057 <fetchint+0x57>$/;"	l
ffff800000108046	kernel.asm	/^ffff800000108046:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010804a	kernel.asm	/^ffff80000010804a:	8b 10                	mov    (%rax),%edx$/;"	l
ffff80000010804c	kernel.asm	/^ffff80000010804c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000108050	kernel.asm	/^ffff800000108050:	89 10                	mov    %edx,(%rax)$/;"	l
ffff800000108052	kernel.asm	/^ffff800000108052:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000108057	kernel.asm	/^ffff800000108057:	c9                   	leaveq $/;"	l
ffff800000108058	kernel.asm	/^ffff800000108058:	c3                   	retq   $/;"	l
ffff800000108059	kernel.asm	/^ffff800000108059 <fetchaddr>:$/;"	l
ffff800000108059	kernel.asm	/^ffff800000108059:	55                   	push   %rbp$/;"	l
ffff80000010805a	kernel.asm	/^ffff80000010805a:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010805d	kernel.asm	/^ffff80000010805d:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff800000108061	kernel.asm	/^ffff800000108061:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)$/;"	l
ffff800000108065	kernel.asm	/^ffff800000108065:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)$/;"	l
ffff800000108069	kernel.asm	/^ffff800000108069:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000108070	kernel.asm	/^ffff800000108070:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000108074	kernel.asm	/^ffff800000108074:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff800000108077	kernel.asm	/^ffff800000108077:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax$/;"	l
ffff80000010807b	kernel.asm	/^ffff80000010807b:	76 1b                	jbe    ffff800000108098 <fetchaddr+0x3f>$/;"	l
ffff80000010807d	kernel.asm	/^ffff80000010807d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000108081	kernel.asm	/^ffff800000108081:	48 8d 50 08          	lea    0x8(%rax),%rdx$/;"	l
ffff800000108085	kernel.asm	/^ffff800000108085:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff80000010808c	kernel.asm	/^ffff80000010808c:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000108090	kernel.asm	/^ffff800000108090:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff800000108093	kernel.asm	/^ffff800000108093:	48 39 c2             	cmp    %rax,%rdx$/;"	l
ffff800000108096	kernel.asm	/^ffff800000108096:	76 07                	jbe    ffff80000010809f <fetchaddr+0x46>$/;"	l
ffff800000108098	kernel.asm	/^ffff800000108098:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff80000010809d	kernel.asm	/^ffff80000010809d:	eb 13                	jmp    ffff8000001080b2 <fetchaddr+0x59>$/;"	l
ffff80000010809f	kernel.asm	/^ffff80000010809f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001080a3	kernel.asm	/^ffff8000001080a3:	48 8b 10             	mov    (%rax),%rdx$/;"	l
ffff8000001080a6	kernel.asm	/^ffff8000001080a6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff8000001080aa	kernel.asm	/^ffff8000001080aa:	48 89 10             	mov    %rdx,(%rax)$/;"	l
ffff8000001080ad	kernel.asm	/^ffff8000001080ad:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff8000001080b2	kernel.asm	/^ffff8000001080b2:	c9                   	leaveq $/;"	l
ffff8000001080b3	kernel.asm	/^ffff8000001080b3:	c3                   	retq   $/;"	l
ffff8000001080b4	kernel.asm	/^ffff8000001080b4 <fetchstr>:$/;"	l
ffff8000001080b4	kernel.asm	/^ffff8000001080b4:	55                   	push   %rbp$/;"	l
ffff8000001080b5	kernel.asm	/^ffff8000001080b5:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff8000001080b8	kernel.asm	/^ffff8000001080b8:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ffff8000001080bc	kernel.asm	/^ffff8000001080bc:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
ffff8000001080c0	kernel.asm	/^ffff8000001080c0:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)$/;"	l
ffff8000001080c4	kernel.asm	/^ffff8000001080c4:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff8000001080cb	kernel.asm	/^ffff8000001080cb:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff8000001080cf	kernel.asm	/^ffff8000001080cf:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff8000001080d2	kernel.asm	/^ffff8000001080d2:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax$/;"	l
ffff8000001080d6	kernel.asm	/^ffff8000001080d6:	77 07                	ja     ffff8000001080df <fetchstr+0x2b>$/;"	l
ffff8000001080d8	kernel.asm	/^ffff8000001080d8:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff8000001080dd	kernel.asm	/^ffff8000001080dd:	eb 5c                	jmp    ffff80000010813b <fetchstr+0x87>$/;"	l
ffff8000001080df	kernel.asm	/^ffff8000001080df:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx$/;"	l
ffff8000001080e3	kernel.asm	/^ffff8000001080e3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff8000001080e7	kernel.asm	/^ffff8000001080e7:	48 89 10             	mov    %rdx,(%rax)$/;"	l
ffff8000001080ea	kernel.asm	/^ffff8000001080ea:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff8000001080f1	kernel.asm	/^ffff8000001080f1:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff8000001080f5	kernel.asm	/^ffff8000001080f5:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff8000001080f8	kernel.asm	/^ffff8000001080f8:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ffff8000001080fc	kernel.asm	/^ffff8000001080fc:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff800000108100	kernel.asm	/^ffff800000108100:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff800000108103	kernel.asm	/^ffff800000108103:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff800000108107	kernel.asm	/^ffff800000108107:	eb 23                	jmp    ffff80000010812c <fetchstr+0x78>$/;"	l
ffff800000108109	kernel.asm	/^ffff800000108109:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010810d	kernel.asm	/^ffff80000010810d:	0f b6 00             	movzbl (%rax),%eax$/;"	l
ffff800000108110	kernel.asm	/^ffff800000108110:	84 c0                	test   %al,%al$/;"	l
ffff800000108112	kernel.asm	/^ffff800000108112:	75 13                	jne    ffff800000108127 <fetchstr+0x73>$/;"	l
ffff800000108114	kernel.asm	/^ffff800000108114:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx$/;"	l
ffff800000108118	kernel.asm	/^ffff800000108118:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff80000010811c	kernel.asm	/^ffff80000010811c:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff80000010811f	kernel.asm	/^ffff80000010811f:	48 29 c2             	sub    %rax,%rdx$/;"	l
ffff800000108122	kernel.asm	/^ffff800000108122:	48 89 d0             	mov    %rdx,%rax$/;"	l
ffff800000108125	kernel.asm	/^ffff800000108125:	eb 14                	jmp    ffff80000010813b <fetchstr+0x87>$/;"	l
ffff800000108127	kernel.asm	/^ffff800000108127:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)$/;"	l
ffff80000010812c	kernel.asm	/^ffff80000010812c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000108130	kernel.asm	/^ffff800000108130:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax$/;"	l
ffff800000108134	kernel.asm	/^ffff800000108134:	72 d3                	jb     ffff800000108109 <fetchstr+0x55>$/;"	l
ffff800000108136	kernel.asm	/^ffff800000108136:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff80000010813b	kernel.asm	/^ffff80000010813b:	c9                   	leaveq $/;"	l
ffff80000010813c	kernel.asm	/^ffff80000010813c:	c3                   	retq   $/;"	l
ffff80000010813d	kernel.asm	/^ffff80000010813d <fetcharg>:$/;"	l
ffff80000010813d	kernel.asm	/^ffff80000010813d:	55                   	push   %rbp$/;"	l
ffff80000010813e	kernel.asm	/^ffff80000010813e:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000108141	kernel.asm	/^ffff800000108141:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff800000108145	kernel.asm	/^ffff800000108145:	89 7d fc             	mov    %edi,-0x4(%rbp)$/;"	l
ffff800000108148	kernel.asm	/^ffff800000108148:	83 7d fc 05          	cmpl   $0x5,-0x4(%rbp)$/;"	l
ffff80000010814c	kernel.asm	/^ffff80000010814c:	0f 87 9b 00 00 00    	ja     ffff8000001081ed <fetcharg+0xb0>$/;"	l
ffff800000108152	kernel.asm	/^ffff800000108152:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff800000108155	kernel.asm	/^ffff800000108155:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx$/;"	l
ffff80000010815c	kernel.asm	/^ffff80000010815c:	00 $/;"	l
ffff80000010815d	kernel.asm	/^ffff80000010815d:	48 b8 68 c6 10 00 00 	movabs $0xffff80000010c668,%rax$/;"	l
ffff800000108164	kernel.asm	/^ffff800000108164:	80 ff ff $/;"	l
ffff800000108167	kernel.asm	/^ffff800000108167:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff80000010816a	kernel.asm	/^ffff80000010816a:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff80000010816d	kernel.asm	/^ffff80000010816d:	ff e0                	jmpq   *%rax$/;"	l
ffff80000010816f	kernel.asm	/^ffff80000010816f:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000108176	kernel.asm	/^ffff800000108176:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff80000010817a	kernel.asm	/^ffff80000010817a:	48 8b 40 28          	mov    0x28(%rax),%rax$/;"	l
ffff80000010817e	kernel.asm	/^ffff80000010817e:	48 8b 40 30          	mov    0x30(%rax),%rax$/;"	l
ffff800000108182	kernel.asm	/^ffff800000108182:	eb 7f                	jmp    ffff800000108203 <fetcharg+0xc6>$/;"	l
ffff800000108184	kernel.asm	/^ffff800000108184:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff80000010818b	kernel.asm	/^ffff80000010818b:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff80000010818f	kernel.asm	/^ffff80000010818f:	48 8b 40 28          	mov    0x28(%rax),%rax$/;"	l
ffff800000108193	kernel.asm	/^ffff800000108193:	48 8b 40 28          	mov    0x28(%rax),%rax$/;"	l
ffff800000108197	kernel.asm	/^ffff800000108197:	eb 6a                	jmp    ffff800000108203 <fetcharg+0xc6>$/;"	l
ffff800000108199	kernel.asm	/^ffff800000108199:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff8000001081a0	kernel.asm	/^ffff8000001081a0:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff8000001081a4	kernel.asm	/^ffff8000001081a4:	48 8b 40 28          	mov    0x28(%rax),%rax$/;"	l
ffff8000001081a8	kernel.asm	/^ffff8000001081a8:	48 8b 40 18          	mov    0x18(%rax),%rax$/;"	l
ffff8000001081ac	kernel.asm	/^ffff8000001081ac:	eb 55                	jmp    ffff800000108203 <fetcharg+0xc6>$/;"	l
ffff8000001081ae	kernel.asm	/^ffff8000001081ae:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff8000001081b5	kernel.asm	/^ffff8000001081b5:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff8000001081b9	kernel.asm	/^ffff8000001081b9:	48 8b 40 28          	mov    0x28(%rax),%rax$/;"	l
ffff8000001081bd	kernel.asm	/^ffff8000001081bd:	48 8b 40 48          	mov    0x48(%rax),%rax$/;"	l
ffff8000001081c1	kernel.asm	/^ffff8000001081c1:	eb 40                	jmp    ffff800000108203 <fetcharg+0xc6>$/;"	l
ffff8000001081c3	kernel.asm	/^ffff8000001081c3:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff8000001081ca	kernel.asm	/^ffff8000001081ca:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff8000001081ce	kernel.asm	/^ffff8000001081ce:	48 8b 40 28          	mov    0x28(%rax),%rax$/;"	l
ffff8000001081d2	kernel.asm	/^ffff8000001081d2:	48 8b 40 38          	mov    0x38(%rax),%rax$/;"	l
ffff8000001081d6	kernel.asm	/^ffff8000001081d6:	eb 2b                	jmp    ffff800000108203 <fetcharg+0xc6>$/;"	l
ffff8000001081d8	kernel.asm	/^ffff8000001081d8:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff8000001081df	kernel.asm	/^ffff8000001081df:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff8000001081e3	kernel.asm	/^ffff8000001081e3:	48 8b 40 28          	mov    0x28(%rax),%rax$/;"	l
ffff8000001081e7	kernel.asm	/^ffff8000001081e7:	48 8b 40 40          	mov    0x40(%rax),%rax$/;"	l
ffff8000001081eb	kernel.asm	/^ffff8000001081eb:	eb 16                	jmp    ffff800000108203 <fetcharg+0xc6>$/;"	l
ffff8000001081ed	kernel.asm	/^ffff8000001081ed:	48 bf 58 c6 10 00 00 	movabs $0xffff80000010c658,%rdi$/;"	l
ffff8000001081f4	kernel.asm	/^ffff8000001081f4:	80 ff ff $/;"	l
ffff8000001081f7	kernel.asm	/^ffff8000001081f7:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff8000001081fe	kernel.asm	/^ffff8000001081fe:	80 ff ff $/;"	l
ffff800000108201	kernel.asm	/^ffff800000108201:	ff d0                	callq  *%rax$/;"	l
ffff800000108203	kernel.asm	/^ffff800000108203:	c9                   	leaveq $/;"	l
ffff800000108204	kernel.asm	/^ffff800000108204:	c3                   	retq   $/;"	l
ffff800000108205	kernel.asm	/^ffff800000108205 <argint>:$/;"	l
ffff800000108205	kernel.asm	/^ffff800000108205:	55                   	push   %rbp$/;"	l
ffff800000108206	kernel.asm	/^ffff800000108206:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000108209	kernel.asm	/^ffff800000108209:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff80000010820d	kernel.asm	/^ffff80000010820d:	89 7d fc             	mov    %edi,-0x4(%rbp)$/;"	l
ffff800000108210	kernel.asm	/^ffff800000108210:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)$/;"	l
ffff800000108214	kernel.asm	/^ffff800000108214:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff800000108217	kernel.asm	/^ffff800000108217:	89 c7                	mov    %eax,%edi$/;"	l
ffff800000108219	kernel.asm	/^ffff800000108219:	48 b8 3d 81 10 00 00 	movabs $0xffff80000010813d,%rax$/;"	l
ffff800000108220	kernel.asm	/^ffff800000108220:	80 ff ff $/;"	l
ffff800000108223	kernel.asm	/^ffff800000108223:	ff d0                	callq  *%rax$/;"	l
ffff800000108225	kernel.asm	/^ffff800000108225:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000108227	kernel.asm	/^ffff800000108227:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff80000010822b	kernel.asm	/^ffff80000010822b:	89 10                	mov    %edx,(%rax)$/;"	l
ffff80000010822d	kernel.asm	/^ffff80000010822d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000108232	kernel.asm	/^ffff800000108232:	c9                   	leaveq $/;"	l
ffff800000108233	kernel.asm	/^ffff800000108233:	c3                   	retq   $/;"	l
ffff800000108234	kernel.asm	/^ffff800000108234 <argaddr>:$/;"	l
ffff800000108234	kernel.asm	/^ffff800000108234:	55                   	push   %rbp$/;"	l
ffff800000108235	kernel.asm	/^ffff800000108235:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000108238	kernel.asm	/^ffff800000108238:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff80000010823c	kernel.asm	/^ffff80000010823c:	89 7d fc             	mov    %edi,-0x4(%rbp)$/;"	l
ffff80000010823f	kernel.asm	/^ffff80000010823f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)$/;"	l
ffff800000108243	kernel.asm	/^ffff800000108243:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff800000108246	kernel.asm	/^ffff800000108246:	89 c7                	mov    %eax,%edi$/;"	l
ffff800000108248	kernel.asm	/^ffff800000108248:	48 b8 3d 81 10 00 00 	movabs $0xffff80000010813d,%rax$/;"	l
ffff80000010824f	kernel.asm	/^ffff80000010824f:	80 ff ff $/;"	l
ffff800000108252	kernel.asm	/^ffff800000108252:	ff d0                	callq  *%rax$/;"	l
ffff800000108254	kernel.asm	/^ffff800000108254:	48 89 c2             	mov    %rax,%rdx$/;"	l
ffff800000108257	kernel.asm	/^ffff800000108257:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff80000010825b	kernel.asm	/^ffff80000010825b:	48 89 10             	mov    %rdx,(%rax)$/;"	l
ffff80000010825e	kernel.asm	/^ffff80000010825e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000108263	kernel.asm	/^ffff800000108263:	c9                   	leaveq $/;"	l
ffff800000108264	kernel.asm	/^ffff800000108264:	c3                   	retq   $/;"	l
ffff800000108265	kernel.asm	/^ffff800000108265 <argptr>:$/;"	l
ffff800000108265	kernel.asm	/^ffff800000108265:	55                   	push   %rbp$/;"	l
ffff800000108266	kernel.asm	/^ffff800000108266:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000108269	kernel.asm	/^ffff800000108269:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ffff80000010826d	kernel.asm	/^ffff80000010826d:	89 7d ec             	mov    %edi,-0x14(%rbp)$/;"	l
ffff800000108270	kernel.asm	/^ffff800000108270:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)$/;"	l
ffff800000108274	kernel.asm	/^ffff800000108274:	89 55 e8             	mov    %edx,-0x18(%rbp)$/;"	l
ffff800000108277	kernel.asm	/^ffff800000108277:	48 8d 55 f8          	lea    -0x8(%rbp),%rdx$/;"	l
ffff80000010827b	kernel.asm	/^ffff80000010827b:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
ffff80000010827e	kernel.asm	/^ffff80000010827e:	48 89 d6             	mov    %rdx,%rsi$/;"	l
ffff800000108281	kernel.asm	/^ffff800000108281:	89 c7                	mov    %eax,%edi$/;"	l
ffff800000108283	kernel.asm	/^ffff800000108283:	48 b8 34 82 10 00 00 	movabs $0xffff800000108234,%rax$/;"	l
ffff80000010828a	kernel.asm	/^ffff80000010828a:	80 ff ff $/;"	l
ffff80000010828d	kernel.asm	/^ffff80000010828d:	ff d0                	callq  *%rax$/;"	l
ffff80000010828f	kernel.asm	/^ffff80000010828f:	85 c0                	test   %eax,%eax$/;"	l
ffff800000108291	kernel.asm	/^ffff800000108291:	79 07                	jns    ffff80000010829a <argptr+0x35>$/;"	l
ffff800000108293	kernel.asm	/^ffff800000108293:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff800000108298	kernel.asm	/^ffff800000108298:	eb 59                	jmp    ffff8000001082f3 <argptr+0x8e>$/;"	l
ffff80000010829a	kernel.asm	/^ffff80000010829a:	83 7d e8 00          	cmpl   $0x0,-0x18(%rbp)$/;"	l
ffff80000010829e	kernel.asm	/^ffff80000010829e:	78 39                	js     ffff8000001082d9 <argptr+0x74>$/;"	l
ffff8000001082a0	kernel.asm	/^ffff8000001082a0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001082a4	kernel.asm	/^ffff8000001082a4:	89 c2                	mov    %eax,%edx$/;"	l
ffff8000001082a6	kernel.asm	/^ffff8000001082a6:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff8000001082ad	kernel.asm	/^ffff8000001082ad:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff8000001082b1	kernel.asm	/^ffff8000001082b1:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff8000001082b4	kernel.asm	/^ffff8000001082b4:	48 39 c2             	cmp    %rax,%rdx$/;"	l
ffff8000001082b7	kernel.asm	/^ffff8000001082b7:	73 20                	jae    ffff8000001082d9 <argptr+0x74>$/;"	l
ffff8000001082b9	kernel.asm	/^ffff8000001082b9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001082bd	kernel.asm	/^ffff8000001082bd:	89 c2                	mov    %eax,%edx$/;"	l
ffff8000001082bf	kernel.asm	/^ffff8000001082bf:	8b 45 e8             	mov    -0x18(%rbp),%eax$/;"	l
ffff8000001082c2	kernel.asm	/^ffff8000001082c2:	01 d0                	add    %edx,%eax$/;"	l
ffff8000001082c4	kernel.asm	/^ffff8000001082c4:	89 c2                	mov    %eax,%edx$/;"	l
ffff8000001082c6	kernel.asm	/^ffff8000001082c6:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff8000001082cd	kernel.asm	/^ffff8000001082cd:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff8000001082d1	kernel.asm	/^ffff8000001082d1:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff8000001082d4	kernel.asm	/^ffff8000001082d4:	48 39 c2             	cmp    %rax,%rdx$/;"	l
ffff8000001082d7	kernel.asm	/^ffff8000001082d7:	76 07                	jbe    ffff8000001082e0 <argptr+0x7b>$/;"	l
ffff8000001082d9	kernel.asm	/^ffff8000001082d9:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff8000001082de	kernel.asm	/^ffff8000001082de:	eb 13                	jmp    ffff8000001082f3 <argptr+0x8e>$/;"	l
ffff8000001082e0	kernel.asm	/^ffff8000001082e0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001082e4	kernel.asm	/^ffff8000001082e4:	48 89 c2             	mov    %rax,%rdx$/;"	l
ffff8000001082e7	kernel.asm	/^ffff8000001082e7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff8000001082eb	kernel.asm	/^ffff8000001082eb:	48 89 10             	mov    %rdx,(%rax)$/;"	l
ffff8000001082ee	kernel.asm	/^ffff8000001082ee:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff8000001082f3	kernel.asm	/^ffff8000001082f3:	c9                   	leaveq $/;"	l
ffff8000001082f4	kernel.asm	/^ffff8000001082f4:	c3                   	retq   $/;"	l
ffff8000001082f5	kernel.asm	/^ffff8000001082f5 <argstr>:$/;"	l
ffff8000001082f5	kernel.asm	/^ffff8000001082f5:	55                   	push   %rbp$/;"	l
ffff8000001082f6	kernel.asm	/^ffff8000001082f6:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff8000001082f9	kernel.asm	/^ffff8000001082f9:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ffff8000001082fd	kernel.asm	/^ffff8000001082fd:	89 7d ec             	mov    %edi,-0x14(%rbp)$/;"	l
ffff800000108300	kernel.asm	/^ffff800000108300:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)$/;"	l
ffff800000108304	kernel.asm	/^ffff800000108304:	48 8d 55 fc          	lea    -0x4(%rbp),%rdx$/;"	l
ffff800000108308	kernel.asm	/^ffff800000108308:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
ffff80000010830b	kernel.asm	/^ffff80000010830b:	48 89 d6             	mov    %rdx,%rsi$/;"	l
ffff80000010830e	kernel.asm	/^ffff80000010830e:	89 c7                	mov    %eax,%edi$/;"	l
ffff800000108310	kernel.asm	/^ffff800000108310:	48 b8 05 82 10 00 00 	movabs $0xffff800000108205,%rax$/;"	l
ffff800000108317	kernel.asm	/^ffff800000108317:	80 ff ff $/;"	l
ffff80000010831a	kernel.asm	/^ffff80000010831a:	ff d0                	callq  *%rax$/;"	l
ffff80000010831c	kernel.asm	/^ffff80000010831c:	85 c0                	test   %eax,%eax$/;"	l
ffff80000010831e	kernel.asm	/^ffff80000010831e:	79 07                	jns    ffff800000108327 <argstr+0x32>$/;"	l
ffff800000108320	kernel.asm	/^ffff800000108320:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff800000108325	kernel.asm	/^ffff800000108325:	eb 1b                	jmp    ffff800000108342 <argstr+0x4d>$/;"	l
ffff800000108327	kernel.asm	/^ffff800000108327:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff80000010832a	kernel.asm	/^ffff80000010832a:	48 98                	cltq   $/;"	l
ffff80000010832c	kernel.asm	/^ffff80000010832c:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx$/;"	l
ffff800000108330	kernel.asm	/^ffff800000108330:	48 89 d6             	mov    %rdx,%rsi$/;"	l
ffff800000108333	kernel.asm	/^ffff800000108333:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000108336	kernel.asm	/^ffff800000108336:	48 b8 b4 80 10 00 00 	movabs $0xffff8000001080b4,%rax$/;"	l
ffff80000010833d	kernel.asm	/^ffff80000010833d:	80 ff ff $/;"	l
ffff800000108340	kernel.asm	/^ffff800000108340:	ff d0                	callq  *%rax$/;"	l
ffff800000108342	kernel.asm	/^ffff800000108342:	c9                   	leaveq $/;"	l
ffff800000108343	kernel.asm	/^ffff800000108343:	c3                   	retq   $/;"	l
ffff800000108344	kernel.asm	/^ffff800000108344 <syscall>:$/;"	l
ffff800000108344	kernel.asm	/^ffff800000108344:	55                   	push   %rbp$/;"	l
ffff800000108345	kernel.asm	/^ffff800000108345:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000108348	kernel.asm	/^ffff800000108348:	53                   	push   %rbx$/;"	l
ffff800000108349	kernel.asm	/^ffff800000108349:	48 83 ec 18          	sub    $0x18,%rsp$/;"	l
ffff80000010834d	kernel.asm	/^ffff80000010834d:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000108354	kernel.asm	/^ffff800000108354:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000108358	kernel.asm	/^ffff800000108358:	48 8b 40 28          	mov    0x28(%rax),%rax$/;"	l
ffff80000010835c	kernel.asm	/^ffff80000010835c:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff80000010835f	kernel.asm	/^ffff80000010835f:	89 45 ec             	mov    %eax,-0x14(%rbp)$/;"	l
ffff800000108362	kernel.asm	/^ffff800000108362:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)$/;"	l
ffff800000108366	kernel.asm	/^ffff800000108366:	7e 4b                	jle    ffff8000001083b3 <syscall+0x6f>$/;"	l
ffff800000108368	kernel.asm	/^ffff800000108368:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
ffff80000010836b	kernel.asm	/^ffff80000010836b:	83 f8 16             	cmp    $0x16,%eax$/;"	l
ffff80000010836e	kernel.asm	/^ffff80000010836e:	77 43                	ja     ffff8000001083b3 <syscall+0x6f>$/;"	l
ffff800000108370	kernel.asm	/^ffff800000108370:	48 b8 20 da 10 00 00 	movabs $0xffff80000010da20,%rax$/;"	l
ffff800000108377	kernel.asm	/^ffff800000108377:	80 ff ff $/;"	l
ffff80000010837a	kernel.asm	/^ffff80000010837a:	8b 55 ec             	mov    -0x14(%rbp),%edx$/;"	l
ffff80000010837d	kernel.asm	/^ffff80000010837d:	48 63 d2             	movslq %edx,%rdx$/;"	l
ffff800000108380	kernel.asm	/^ffff800000108380:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax$/;"	l
ffff800000108384	kernel.asm	/^ffff800000108384:	48 85 c0             	test   %rax,%rax$/;"	l
ffff800000108387	kernel.asm	/^ffff800000108387:	74 2a                	je     ffff8000001083b3 <syscall+0x6f>$/;"	l
ffff800000108389	kernel.asm	/^ffff800000108389:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000108390	kernel.asm	/^ffff800000108390:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000108394	kernel.asm	/^ffff800000108394:	48 8b 58 28          	mov    0x28(%rax),%rbx$/;"	l
ffff800000108398	kernel.asm	/^ffff800000108398:	48 b8 20 da 10 00 00 	movabs $0xffff80000010da20,%rax$/;"	l
ffff80000010839f	kernel.asm	/^ffff80000010839f:	80 ff ff $/;"	l
ffff8000001083a2	kernel.asm	/^ffff8000001083a2:	8b 55 ec             	mov    -0x14(%rbp),%edx$/;"	l
ffff8000001083a5	kernel.asm	/^ffff8000001083a5:	48 63 d2             	movslq %edx,%rdx$/;"	l
ffff8000001083a8	kernel.asm	/^ffff8000001083a8:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax$/;"	l
ffff8000001083ac	kernel.asm	/^ffff8000001083ac:	ff d0                	callq  *%rax$/;"	l
ffff8000001083ae	kernel.asm	/^ffff8000001083ae:	48 89 03             	mov    %rax,(%rbx)$/;"	l
ffff8000001083b1	kernel.asm	/^ffff8000001083b1:	eb 5c                	jmp    ffff80000010840f <syscall+0xcb>$/;"	l
ffff8000001083b3	kernel.asm	/^ffff8000001083b3:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff8000001083ba	kernel.asm	/^ffff8000001083ba:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff8000001083be	kernel.asm	/^ffff8000001083be:	48 8d b0 d0 00 00 00 	lea    0xd0(%rax),%rsi$/;"	l
ffff8000001083c5	kernel.asm	/^ffff8000001083c5:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff8000001083cc	kernel.asm	/^ffff8000001083cc:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff8000001083d0	kernel.asm	/^ffff8000001083d0:	8b 40 1c             	mov    0x1c(%rax),%eax$/;"	l
ffff8000001083d3	kernel.asm	/^ffff8000001083d3:	8b 55 ec             	mov    -0x14(%rbp),%edx$/;"	l
ffff8000001083d6	kernel.asm	/^ffff8000001083d6:	89 d1                	mov    %edx,%ecx$/;"	l
ffff8000001083d8	kernel.asm	/^ffff8000001083d8:	48 89 f2             	mov    %rsi,%rdx$/;"	l
ffff8000001083db	kernel.asm	/^ffff8000001083db:	89 c6                	mov    %eax,%esi$/;"	l
ffff8000001083dd	kernel.asm	/^ffff8000001083dd:	48 bf 98 c6 10 00 00 	movabs $0xffff80000010c698,%rdi$/;"	l
ffff8000001083e4	kernel.asm	/^ffff8000001083e4:	80 ff ff $/;"	l
ffff8000001083e7	kernel.asm	/^ffff8000001083e7:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff8000001083ec	kernel.asm	/^ffff8000001083ec:	49 b8 ac 07 10 00 00 	movabs $0xffff8000001007ac,%r8$/;"	l
ffff8000001083f3	kernel.asm	/^ffff8000001083f3:	80 ff ff $/;"	l
ffff8000001083f6	kernel.asm	/^ffff8000001083f6:	41 ff d0             	callq  *%r8$/;"	l
ffff8000001083f9	kernel.asm	/^ffff8000001083f9:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000108400	kernel.asm	/^ffff800000108400:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000108404	kernel.asm	/^ffff800000108404:	48 8b 40 28          	mov    0x28(%rax),%rax$/;"	l
ffff800000108408	kernel.asm	/^ffff800000108408:	48 c7 00 ff ff ff ff 	movq   $0xffffffffffffffff,(%rax)$/;"	l
ffff80000010840f	kernel.asm	/^ffff80000010840f:	90                   	nop$/;"	l
ffff800000108410	kernel.asm	/^ffff800000108410:	48 83 c4 18          	add    $0x18,%rsp$/;"	l
ffff800000108414	kernel.asm	/^ffff800000108414:	5b                   	pop    %rbx$/;"	l
ffff800000108415	kernel.asm	/^ffff800000108415:	5d                   	pop    %rbp$/;"	l
ffff800000108416	kernel.asm	/^ffff800000108416:	c3                   	retq   $/;"	l
ffff800000108417	kernel.asm	/^ffff800000108417 <argfd>:$/;"	l
ffff800000108417	kernel.asm	/^ffff800000108417:	55                   	push   %rbp$/;"	l
ffff800000108418	kernel.asm	/^ffff800000108418:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010841b	kernel.asm	/^ffff80000010841b:	48 83 ec 30          	sub    $0x30,%rsp$/;"	l
ffff80000010841f	kernel.asm	/^ffff80000010841f:	89 7d ec             	mov    %edi,-0x14(%rbp)$/;"	l
ffff800000108422	kernel.asm	/^ffff800000108422:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)$/;"	l
ffff800000108426	kernel.asm	/^ffff800000108426:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)$/;"	l
ffff80000010842a	kernel.asm	/^ffff80000010842a:	48 8d 55 f4          	lea    -0xc(%rbp),%rdx$/;"	l
ffff80000010842e	kernel.asm	/^ffff80000010842e:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
ffff800000108431	kernel.asm	/^ffff800000108431:	48 89 d6             	mov    %rdx,%rsi$/;"	l
ffff800000108434	kernel.asm	/^ffff800000108434:	89 c7                	mov    %eax,%edi$/;"	l
ffff800000108436	kernel.asm	/^ffff800000108436:	48 b8 05 82 10 00 00 	movabs $0xffff800000108205,%rax$/;"	l
ffff80000010843d	kernel.asm	/^ffff80000010843d:	80 ff ff $/;"	l
ffff800000108440	kernel.asm	/^ffff800000108440:	ff d0                	callq  *%rax$/;"	l
ffff800000108442	kernel.asm	/^ffff800000108442:	85 c0                	test   %eax,%eax$/;"	l
ffff800000108444	kernel.asm	/^ffff800000108444:	79 07                	jns    ffff80000010844d <argfd+0x36>$/;"	l
ffff800000108446	kernel.asm	/^ffff800000108446:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff80000010844b	kernel.asm	/^ffff80000010844b:	eb 62                	jmp    ffff8000001084af <argfd+0x98>$/;"	l
ffff80000010844d	kernel.asm	/^ffff80000010844d:	8b 45 f4             	mov    -0xc(%rbp),%eax$/;"	l
ffff800000108450	kernel.asm	/^ffff800000108450:	85 c0                	test   %eax,%eax$/;"	l
ffff800000108452	kernel.asm	/^ffff800000108452:	78 2d                	js     ffff800000108481 <argfd+0x6a>$/;"	l
ffff800000108454	kernel.asm	/^ffff800000108454:	8b 45 f4             	mov    -0xc(%rbp),%eax$/;"	l
ffff800000108457	kernel.asm	/^ffff800000108457:	83 f8 0f             	cmp    $0xf,%eax$/;"	l
ffff80000010845a	kernel.asm	/^ffff80000010845a:	7f 25                	jg     ffff800000108481 <argfd+0x6a>$/;"	l
ffff80000010845c	kernel.asm	/^ffff80000010845c:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000108463	kernel.asm	/^ffff800000108463:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000108467	kernel.asm	/^ffff800000108467:	8b 55 f4             	mov    -0xc(%rbp),%edx$/;"	l
ffff80000010846a	kernel.asm	/^ffff80000010846a:	48 63 d2             	movslq %edx,%rdx$/;"	l
ffff80000010846d	kernel.asm	/^ffff80000010846d:	48 83 c2 08          	add    $0x8,%rdx$/;"	l
ffff800000108471	kernel.asm	/^ffff800000108471:	48 8b 44 d0 08       	mov    0x8(%rax,%rdx,8),%rax$/;"	l
ffff800000108476	kernel.asm	/^ffff800000108476:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff80000010847a	kernel.asm	/^ffff80000010847a:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)$/;"	l
ffff80000010847f	kernel.asm	/^ffff80000010847f:	75 07                	jne    ffff800000108488 <argfd+0x71>$/;"	l
ffff800000108481	kernel.asm	/^ffff800000108481:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff800000108486	kernel.asm	/^ffff800000108486:	eb 27                	jmp    ffff8000001084af <argfd+0x98>$/;"	l
ffff800000108488	kernel.asm	/^ffff800000108488:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)$/;"	l
ffff80000010848d	kernel.asm	/^ffff80000010848d:	74 09                	je     ffff800000108498 <argfd+0x81>$/;"	l
ffff80000010848f	kernel.asm	/^ffff80000010848f:	8b 55 f4             	mov    -0xc(%rbp),%edx$/;"	l
ffff800000108492	kernel.asm	/^ffff800000108492:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff800000108496	kernel.asm	/^ffff800000108496:	89 10                	mov    %edx,(%rax)$/;"	l
ffff800000108498	kernel.asm	/^ffff800000108498:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)$/;"	l
ffff80000010849d	kernel.asm	/^ffff80000010849d:	74 0b                	je     ffff8000001084aa <argfd+0x93>$/;"	l
ffff80000010849f	kernel.asm	/^ffff80000010849f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff8000001084a3	kernel.asm	/^ffff8000001084a3:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx$/;"	l
ffff8000001084a7	kernel.asm	/^ffff8000001084a7:	48 89 10             	mov    %rdx,(%rax)$/;"	l
ffff8000001084aa	kernel.asm	/^ffff8000001084aa:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff8000001084af	kernel.asm	/^ffff8000001084af:	c9                   	leaveq $/;"	l
ffff8000001084b0	kernel.asm	/^ffff8000001084b0:	c3                   	retq   $/;"	l
ffff8000001084b1	kernel.asm	/^ffff8000001084b1 <fdalloc>:$/;"	l
ffff8000001084b1	kernel.asm	/^ffff8000001084b1:	55                   	push   %rbp$/;"	l
ffff8000001084b2	kernel.asm	/^ffff8000001084b2:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff8000001084b5	kernel.asm	/^ffff8000001084b5:	48 83 ec 18          	sub    $0x18,%rsp$/;"	l
ffff8000001084b9	kernel.asm	/^ffff8000001084b9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
ffff8000001084bd	kernel.asm	/^ffff8000001084bd:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)$/;"	l
ffff8000001084c4	kernel.asm	/^ffff8000001084c4:	eb 46                	jmp    ffff80000010850c <fdalloc+0x5b>$/;"	l
ffff8000001084c6	kernel.asm	/^ffff8000001084c6:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff8000001084cd	kernel.asm	/^ffff8000001084cd:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff8000001084d1	kernel.asm	/^ffff8000001084d1:	8b 55 fc             	mov    -0x4(%rbp),%edx$/;"	l
ffff8000001084d4	kernel.asm	/^ffff8000001084d4:	48 63 d2             	movslq %edx,%rdx$/;"	l
ffff8000001084d7	kernel.asm	/^ffff8000001084d7:	48 83 c2 08          	add    $0x8,%rdx$/;"	l
ffff8000001084db	kernel.asm	/^ffff8000001084db:	48 8b 44 d0 08       	mov    0x8(%rax,%rdx,8),%rax$/;"	l
ffff8000001084e0	kernel.asm	/^ffff8000001084e0:	48 85 c0             	test   %rax,%rax$/;"	l
ffff8000001084e3	kernel.asm	/^ffff8000001084e3:	75 23                	jne    ffff800000108508 <fdalloc+0x57>$/;"	l
ffff8000001084e5	kernel.asm	/^ffff8000001084e5:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff8000001084ec	kernel.asm	/^ffff8000001084ec:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff8000001084f0	kernel.asm	/^ffff8000001084f0:	8b 55 fc             	mov    -0x4(%rbp),%edx$/;"	l
ffff8000001084f3	kernel.asm	/^ffff8000001084f3:	48 63 d2             	movslq %edx,%rdx$/;"	l
ffff8000001084f6	kernel.asm	/^ffff8000001084f6:	48 8d 4a 08          	lea    0x8(%rdx),%rcx$/;"	l
ffff8000001084fa	kernel.asm	/^ffff8000001084fa:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx$/;"	l
ffff8000001084fe	kernel.asm	/^ffff8000001084fe:	48 89 54 c8 08       	mov    %rdx,0x8(%rax,%rcx,8)$/;"	l
ffff800000108503	kernel.asm	/^ffff800000108503:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff800000108506	kernel.asm	/^ffff800000108506:	eb 0f                	jmp    ffff800000108517 <fdalloc+0x66>$/;"	l
ffff800000108508	kernel.asm	/^ffff800000108508:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)$/;"	l
ffff80000010850c	kernel.asm	/^ffff80000010850c:	83 7d fc 0f          	cmpl   $0xf,-0x4(%rbp)$/;"	l
ffff800000108510	kernel.asm	/^ffff800000108510:	7e b4                	jle    ffff8000001084c6 <fdalloc+0x15>$/;"	l
ffff800000108512	kernel.asm	/^ffff800000108512:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff800000108517	kernel.asm	/^ffff800000108517:	c9                   	leaveq $/;"	l
ffff800000108518	kernel.asm	/^ffff800000108518:	c3                   	retq   $/;"	l
ffff800000108519	kernel.asm	/^ffff800000108519 <sys_dup>:$/;"	l
ffff800000108519	kernel.asm	/^ffff800000108519:	55                   	push   %rbp$/;"	l
ffff80000010851a	kernel.asm	/^ffff80000010851a:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010851d	kernel.asm	/^ffff80000010851d:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff800000108521	kernel.asm	/^ffff800000108521:	48 8d 45 f0          	lea    -0x10(%rbp),%rax$/;"	l
ffff800000108525	kernel.asm	/^ffff800000108525:	48 89 c2             	mov    %rax,%rdx$/;"	l
ffff800000108528	kernel.asm	/^ffff800000108528:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffff80000010852d	kernel.asm	/^ffff80000010852d:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
ffff800000108532	kernel.asm	/^ffff800000108532:	48 b8 17 84 10 00 00 	movabs $0xffff800000108417,%rax$/;"	l
ffff800000108539	kernel.asm	/^ffff800000108539:	80 ff ff $/;"	l
ffff80000010853c	kernel.asm	/^ffff80000010853c:	ff d0                	callq  *%rax$/;"	l
ffff80000010853e	kernel.asm	/^ffff80000010853e:	85 c0                	test   %eax,%eax$/;"	l
ffff800000108540	kernel.asm	/^ffff800000108540:	79 07                	jns    ffff800000108549 <sys_dup+0x30>$/;"	l
ffff800000108542	kernel.asm	/^ffff800000108542:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff800000108547	kernel.asm	/^ffff800000108547:	eb 39                	jmp    ffff800000108582 <sys_dup+0x69>$/;"	l
ffff800000108549	kernel.asm	/^ffff800000108549:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff80000010854d	kernel.asm	/^ffff80000010854d:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000108550	kernel.asm	/^ffff800000108550:	48 b8 b1 84 10 00 00 	movabs $0xffff8000001084b1,%rax$/;"	l
ffff800000108557	kernel.asm	/^ffff800000108557:	80 ff ff $/;"	l
ffff80000010855a	kernel.asm	/^ffff80000010855a:	ff d0                	callq  *%rax$/;"	l
ffff80000010855c	kernel.asm	/^ffff80000010855c:	89 45 fc             	mov    %eax,-0x4(%rbp)$/;"	l
ffff80000010855f	kernel.asm	/^ffff80000010855f:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)$/;"	l
ffff800000108563	kernel.asm	/^ffff800000108563:	79 07                	jns    ffff80000010856c <sys_dup+0x53>$/;"	l
ffff800000108565	kernel.asm	/^ffff800000108565:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff80000010856a	kernel.asm	/^ffff80000010856a:	eb 16                	jmp    ffff800000108582 <sys_dup+0x69>$/;"	l
ffff80000010856c	kernel.asm	/^ffff80000010856c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000108570	kernel.asm	/^ffff800000108570:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000108573	kernel.asm	/^ffff800000108573:	48 b8 36 1b 10 00 00 	movabs $0xffff800000101b36,%rax$/;"	l
ffff80000010857a	kernel.asm	/^ffff80000010857a:	80 ff ff $/;"	l
ffff80000010857d	kernel.asm	/^ffff80000010857d:	ff d0                	callq  *%rax$/;"	l
ffff80000010857f	kernel.asm	/^ffff80000010857f:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff800000108582	kernel.asm	/^ffff800000108582:	c9                   	leaveq $/;"	l
ffff800000108583	kernel.asm	/^ffff800000108583:	c3                   	retq   $/;"	l
ffff800000108584	kernel.asm	/^ffff800000108584 <sys_read>:$/;"	l
ffff800000108584	kernel.asm	/^ffff800000108584:	55                   	push   %rbp$/;"	l
ffff800000108585	kernel.asm	/^ffff800000108585:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000108588	kernel.asm	/^ffff800000108588:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ffff80000010858c	kernel.asm	/^ffff80000010858c:	48 8d 45 f8          	lea    -0x8(%rbp),%rax$/;"	l
ffff800000108590	kernel.asm	/^ffff800000108590:	48 89 c2             	mov    %rax,%rdx$/;"	l
ffff800000108593	kernel.asm	/^ffff800000108593:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffff800000108598	kernel.asm	/^ffff800000108598:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
ffff80000010859d	kernel.asm	/^ffff80000010859d:	48 b8 17 84 10 00 00 	movabs $0xffff800000108417,%rax$/;"	l
ffff8000001085a4	kernel.asm	/^ffff8000001085a4:	80 ff ff $/;"	l
ffff8000001085a7	kernel.asm	/^ffff8000001085a7:	ff d0                	callq  *%rax$/;"	l
ffff8000001085a9	kernel.asm	/^ffff8000001085a9:	85 c0                	test   %eax,%eax$/;"	l
ffff8000001085ab	kernel.asm	/^ffff8000001085ab:	78 3b                	js     ffff8000001085e8 <sys_read+0x64>$/;"	l
ffff8000001085ad	kernel.asm	/^ffff8000001085ad:	48 8d 45 f4          	lea    -0xc(%rbp),%rax$/;"	l
ffff8000001085b1	kernel.asm	/^ffff8000001085b1:	48 89 c6             	mov    %rax,%rsi$/;"	l
ffff8000001085b4	kernel.asm	/^ffff8000001085b4:	bf 02 00 00 00       	mov    $0x2,%edi$/;"	l
ffff8000001085b9	kernel.asm	/^ffff8000001085b9:	48 b8 05 82 10 00 00 	movabs $0xffff800000108205,%rax$/;"	l
ffff8000001085c0	kernel.asm	/^ffff8000001085c0:	80 ff ff $/;"	l
ffff8000001085c3	kernel.asm	/^ffff8000001085c3:	ff d0                	callq  *%rax$/;"	l
ffff8000001085c5	kernel.asm	/^ffff8000001085c5:	85 c0                	test   %eax,%eax$/;"	l
ffff8000001085c7	kernel.asm	/^ffff8000001085c7:	78 1f                	js     ffff8000001085e8 <sys_read+0x64>$/;"	l
ffff8000001085c9	kernel.asm	/^ffff8000001085c9:	8b 55 f4             	mov    -0xc(%rbp),%edx$/;"	l
ffff8000001085cc	kernel.asm	/^ffff8000001085cc:	48 8d 45 e8          	lea    -0x18(%rbp),%rax$/;"	l
ffff8000001085d0	kernel.asm	/^ffff8000001085d0:	48 89 c6             	mov    %rax,%rsi$/;"	l
ffff8000001085d3	kernel.asm	/^ffff8000001085d3:	bf 01 00 00 00       	mov    $0x1,%edi$/;"	l
ffff8000001085d8	kernel.asm	/^ffff8000001085d8:	48 b8 65 82 10 00 00 	movabs $0xffff800000108265,%rax$/;"	l
ffff8000001085df	kernel.asm	/^ffff8000001085df:	80 ff ff $/;"	l
ffff8000001085e2	kernel.asm	/^ffff8000001085e2:	ff d0                	callq  *%rax$/;"	l
ffff8000001085e4	kernel.asm	/^ffff8000001085e4:	85 c0                	test   %eax,%eax$/;"	l
ffff8000001085e6	kernel.asm	/^ffff8000001085e6:	79 07                	jns    ffff8000001085ef <sys_read+0x6b>$/;"	l
ffff8000001085e8	kernel.asm	/^ffff8000001085e8:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff8000001085ed	kernel.asm	/^ffff8000001085ed:	eb 1d                	jmp    ffff80000010860c <sys_read+0x88>$/;"	l
ffff8000001085ef	kernel.asm	/^ffff8000001085ef:	8b 55 f4             	mov    -0xc(%rbp),%edx$/;"	l
ffff8000001085f2	kernel.asm	/^ffff8000001085f2:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx$/;"	l
ffff8000001085f6	kernel.asm	/^ffff8000001085f6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001085fa	kernel.asm	/^ffff8000001085fa:	48 89 ce             	mov    %rcx,%rsi$/;"	l
ffff8000001085fd	kernel.asm	/^ffff8000001085fd:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000108600	kernel.asm	/^ffff800000108600:	48 b8 50 1d 10 00 00 	movabs $0xffff800000101d50,%rax$/;"	l
ffff800000108607	kernel.asm	/^ffff800000108607:	80 ff ff $/;"	l
ffff80000010860a	kernel.asm	/^ffff80000010860a:	ff d0                	callq  *%rax$/;"	l
ffff80000010860c	kernel.asm	/^ffff80000010860c:	c9                   	leaveq $/;"	l
ffff80000010860d	kernel.asm	/^ffff80000010860d:	c3                   	retq   $/;"	l
ffff80000010860e	kernel.asm	/^ffff80000010860e <sys_write>:$/;"	l
ffff80000010860e	kernel.asm	/^ffff80000010860e:	55                   	push   %rbp$/;"	l
ffff80000010860f	kernel.asm	/^ffff80000010860f:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000108612	kernel.asm	/^ffff800000108612:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ffff800000108616	kernel.asm	/^ffff800000108616:	48 8d 45 f8          	lea    -0x8(%rbp),%rax$/;"	l
ffff80000010861a	kernel.asm	/^ffff80000010861a:	48 89 c2             	mov    %rax,%rdx$/;"	l
ffff80000010861d	kernel.asm	/^ffff80000010861d:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffff800000108622	kernel.asm	/^ffff800000108622:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
ffff800000108627	kernel.asm	/^ffff800000108627:	48 b8 17 84 10 00 00 	movabs $0xffff800000108417,%rax$/;"	l
ffff80000010862e	kernel.asm	/^ffff80000010862e:	80 ff ff $/;"	l
ffff800000108631	kernel.asm	/^ffff800000108631:	ff d0                	callq  *%rax$/;"	l
ffff800000108633	kernel.asm	/^ffff800000108633:	85 c0                	test   %eax,%eax$/;"	l
ffff800000108635	kernel.asm	/^ffff800000108635:	78 3b                	js     ffff800000108672 <sys_write+0x64>$/;"	l
ffff800000108637	kernel.asm	/^ffff800000108637:	48 8d 45 f4          	lea    -0xc(%rbp),%rax$/;"	l
ffff80000010863b	kernel.asm	/^ffff80000010863b:	48 89 c6             	mov    %rax,%rsi$/;"	l
ffff80000010863e	kernel.asm	/^ffff80000010863e:	bf 02 00 00 00       	mov    $0x2,%edi$/;"	l
ffff800000108643	kernel.asm	/^ffff800000108643:	48 b8 05 82 10 00 00 	movabs $0xffff800000108205,%rax$/;"	l
ffff80000010864a	kernel.asm	/^ffff80000010864a:	80 ff ff $/;"	l
ffff80000010864d	kernel.asm	/^ffff80000010864d:	ff d0                	callq  *%rax$/;"	l
ffff80000010864f	kernel.asm	/^ffff80000010864f:	85 c0                	test   %eax,%eax$/;"	l
ffff800000108651	kernel.asm	/^ffff800000108651:	78 1f                	js     ffff800000108672 <sys_write+0x64>$/;"	l
ffff800000108653	kernel.asm	/^ffff800000108653:	8b 55 f4             	mov    -0xc(%rbp),%edx$/;"	l
ffff800000108656	kernel.asm	/^ffff800000108656:	48 8d 45 e8          	lea    -0x18(%rbp),%rax$/;"	l
ffff80000010865a	kernel.asm	/^ffff80000010865a:	48 89 c6             	mov    %rax,%rsi$/;"	l
ffff80000010865d	kernel.asm	/^ffff80000010865d:	bf 01 00 00 00       	mov    $0x1,%edi$/;"	l
ffff800000108662	kernel.asm	/^ffff800000108662:	48 b8 65 82 10 00 00 	movabs $0xffff800000108265,%rax$/;"	l
ffff800000108669	kernel.asm	/^ffff800000108669:	80 ff ff $/;"	l
ffff80000010866c	kernel.asm	/^ffff80000010866c:	ff d0                	callq  *%rax$/;"	l
ffff80000010866e	kernel.asm	/^ffff80000010866e:	85 c0                	test   %eax,%eax$/;"	l
ffff800000108670	kernel.asm	/^ffff800000108670:	79 07                	jns    ffff800000108679 <sys_write+0x6b>$/;"	l
ffff800000108672	kernel.asm	/^ffff800000108672:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff800000108677	kernel.asm	/^ffff800000108677:	eb 1d                	jmp    ffff800000108696 <sys_write+0x88>$/;"	l
ffff800000108679	kernel.asm	/^ffff800000108679:	8b 55 f4             	mov    -0xc(%rbp),%edx$/;"	l
ffff80000010867c	kernel.asm	/^ffff80000010867c:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx$/;"	l
ffff800000108680	kernel.asm	/^ffff800000108680:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000108684	kernel.asm	/^ffff800000108684:	48 89 ce             	mov    %rcx,%rsi$/;"	l
ffff800000108687	kernel.asm	/^ffff800000108687:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010868a	kernel.asm	/^ffff80000010868a:	48 b8 47 1e 10 00 00 	movabs $0xffff800000101e47,%rax$/;"	l
ffff800000108691	kernel.asm	/^ffff800000108691:	80 ff ff $/;"	l
ffff800000108694	kernel.asm	/^ffff800000108694:	ff d0                	callq  *%rax$/;"	l
ffff800000108696	kernel.asm	/^ffff800000108696:	c9                   	leaveq $/;"	l
ffff800000108697	kernel.asm	/^ffff800000108697:	c3                   	retq   $/;"	l
ffff800000108698	kernel.asm	/^ffff800000108698 <sys_close>:$/;"	l
ffff800000108698	kernel.asm	/^ffff800000108698:	55                   	push   %rbp$/;"	l
ffff800000108699	kernel.asm	/^ffff800000108699:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010869c	kernel.asm	/^ffff80000010869c:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff8000001086a0	kernel.asm	/^ffff8000001086a0:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx$/;"	l
ffff8000001086a4	kernel.asm	/^ffff8000001086a4:	48 8d 45 fc          	lea    -0x4(%rbp),%rax$/;"	l
ffff8000001086a8	kernel.asm	/^ffff8000001086a8:	48 89 c6             	mov    %rax,%rsi$/;"	l
ffff8000001086ab	kernel.asm	/^ffff8000001086ab:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
ffff8000001086b0	kernel.asm	/^ffff8000001086b0:	48 b8 17 84 10 00 00 	movabs $0xffff800000108417,%rax$/;"	l
ffff8000001086b7	kernel.asm	/^ffff8000001086b7:	80 ff ff $/;"	l
ffff8000001086ba	kernel.asm	/^ffff8000001086ba:	ff d0                	callq  *%rax$/;"	l
ffff8000001086bc	kernel.asm	/^ffff8000001086bc:	85 c0                	test   %eax,%eax$/;"	l
ffff8000001086be	kernel.asm	/^ffff8000001086be:	79 07                	jns    ffff8000001086c7 <sys_close+0x2f>$/;"	l
ffff8000001086c0	kernel.asm	/^ffff8000001086c0:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff8000001086c5	kernel.asm	/^ffff8000001086c5:	eb 36                	jmp    ffff8000001086fd <sys_close+0x65>$/;"	l
ffff8000001086c7	kernel.asm	/^ffff8000001086c7:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff8000001086ce	kernel.asm	/^ffff8000001086ce:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff8000001086d2	kernel.asm	/^ffff8000001086d2:	8b 55 fc             	mov    -0x4(%rbp),%edx$/;"	l
ffff8000001086d5	kernel.asm	/^ffff8000001086d5:	48 63 d2             	movslq %edx,%rdx$/;"	l
ffff8000001086d8	kernel.asm	/^ffff8000001086d8:	48 83 c2 08          	add    $0x8,%rdx$/;"	l
ffff8000001086dc	kernel.asm	/^ffff8000001086dc:	48 c7 44 d0 08 00 00 	movq   $0x0,0x8(%rax,%rdx,8)$/;"	l
ffff8000001086e3	kernel.asm	/^ffff8000001086e3:	00 00 $/;"	l
ffff8000001086e5	kernel.asm	/^ffff8000001086e5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff8000001086e9	kernel.asm	/^ffff8000001086e9:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001086ec	kernel.asm	/^ffff8000001086ec:	48 b8 a6 1b 10 00 00 	movabs $0xffff800000101ba6,%rax$/;"	l
ffff8000001086f3	kernel.asm	/^ffff8000001086f3:	80 ff ff $/;"	l
ffff8000001086f6	kernel.asm	/^ffff8000001086f6:	ff d0                	callq  *%rax$/;"	l
ffff8000001086f8	kernel.asm	/^ffff8000001086f8:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff8000001086fd	kernel.asm	/^ffff8000001086fd:	c9                   	leaveq $/;"	l
ffff8000001086fe	kernel.asm	/^ffff8000001086fe:	c3                   	retq   $/;"	l
ffff8000001086ff	kernel.asm	/^ffff8000001086ff <sys_fstat>:$/;"	l
ffff8000001086ff	kernel.asm	/^ffff8000001086ff:	55                   	push   %rbp$/;"	l
ffff800000108700	kernel.asm	/^ffff800000108700:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000108703	kernel.asm	/^ffff800000108703:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff800000108707	kernel.asm	/^ffff800000108707:	48 8d 45 f8          	lea    -0x8(%rbp),%rax$/;"	l
ffff80000010870b	kernel.asm	/^ffff80000010870b:	48 89 c2             	mov    %rax,%rdx$/;"	l
ffff80000010870e	kernel.asm	/^ffff80000010870e:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffff800000108713	kernel.asm	/^ffff800000108713:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
ffff800000108718	kernel.asm	/^ffff800000108718:	48 b8 17 84 10 00 00 	movabs $0xffff800000108417,%rax$/;"	l
ffff80000010871f	kernel.asm	/^ffff80000010871f:	80 ff ff $/;"	l
ffff800000108722	kernel.asm	/^ffff800000108722:	ff d0                	callq  *%rax$/;"	l
ffff800000108724	kernel.asm	/^ffff800000108724:	85 c0                	test   %eax,%eax$/;"	l
ffff800000108726	kernel.asm	/^ffff800000108726:	78 21                	js     ffff800000108749 <sys_fstat+0x4a>$/;"	l
ffff800000108728	kernel.asm	/^ffff800000108728:	48 8d 45 f0          	lea    -0x10(%rbp),%rax$/;"	l
ffff80000010872c	kernel.asm	/^ffff80000010872c:	ba 14 00 00 00       	mov    $0x14,%edx$/;"	l
ffff800000108731	kernel.asm	/^ffff800000108731:	48 89 c6             	mov    %rax,%rsi$/;"	l
ffff800000108734	kernel.asm	/^ffff800000108734:	bf 01 00 00 00       	mov    $0x1,%edi$/;"	l
ffff800000108739	kernel.asm	/^ffff800000108739:	48 b8 65 82 10 00 00 	movabs $0xffff800000108265,%rax$/;"	l
ffff800000108740	kernel.asm	/^ffff800000108740:	80 ff ff $/;"	l
ffff800000108743	kernel.asm	/^ffff800000108743:	ff d0                	callq  *%rax$/;"	l
ffff800000108745	kernel.asm	/^ffff800000108745:	85 c0                	test   %eax,%eax$/;"	l
ffff800000108747	kernel.asm	/^ffff800000108747:	79 07                	jns    ffff800000108750 <sys_fstat+0x51>$/;"	l
ffff800000108749	kernel.asm	/^ffff800000108749:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff80000010874e	kernel.asm	/^ffff80000010874e:	eb 1a                	jmp    ffff80000010876a <sys_fstat+0x6b>$/;"	l
ffff800000108750	kernel.asm	/^ffff800000108750:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
ffff800000108754	kernel.asm	/^ffff800000108754:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000108758	kernel.asm	/^ffff800000108758:	48 89 d6             	mov    %rdx,%rsi$/;"	l
ffff80000010875b	kernel.asm	/^ffff80000010875b:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010875e	kernel.asm	/^ffff80000010875e:	48 b8 db 1c 10 00 00 	movabs $0xffff800000101cdb,%rax$/;"	l
ffff800000108765	kernel.asm	/^ffff800000108765:	80 ff ff $/;"	l
ffff800000108768	kernel.asm	/^ffff800000108768:	ff d0                	callq  *%rax$/;"	l
ffff80000010876a	kernel.asm	/^ffff80000010876a:	c9                   	leaveq $/;"	l
ffff80000010876b	kernel.asm	/^ffff80000010876b:	c3                   	retq   $/;"	l
ffff80000010876c	kernel.asm	/^ffff80000010876c <sys_link>:$/;"	l
ffff80000010876c	kernel.asm	/^ffff80000010876c:	55                   	push   %rbp$/;"	l
ffff80000010876d	kernel.asm	/^ffff80000010876d:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000108770	kernel.asm	/^ffff800000108770:	48 83 ec 30          	sub    $0x30,%rsp$/;"	l
ffff800000108774	kernel.asm	/^ffff800000108774:	48 8d 45 d0          	lea    -0x30(%rbp),%rax$/;"	l
ffff800000108778	kernel.asm	/^ffff800000108778:	48 89 c6             	mov    %rax,%rsi$/;"	l
ffff80000010877b	kernel.asm	/^ffff80000010877b:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
ffff800000108780	kernel.asm	/^ffff800000108780:	48 b8 f5 82 10 00 00 	movabs $0xffff8000001082f5,%rax$/;"	l
ffff800000108787	kernel.asm	/^ffff800000108787:	80 ff ff $/;"	l
ffff80000010878a	kernel.asm	/^ffff80000010878a:	ff d0                	callq  *%rax$/;"	l
ffff80000010878c	kernel.asm	/^ffff80000010878c:	85 c0                	test   %eax,%eax$/;"	l
ffff80000010878e	kernel.asm	/^ffff80000010878e:	78 1c                	js     ffff8000001087ac <sys_link+0x40>$/;"	l
ffff800000108790	kernel.asm	/^ffff800000108790:	48 8d 45 d8          	lea    -0x28(%rbp),%rax$/;"	l
ffff800000108794	kernel.asm	/^ffff800000108794:	48 89 c6             	mov    %rax,%rsi$/;"	l
ffff800000108797	kernel.asm	/^ffff800000108797:	bf 01 00 00 00       	mov    $0x1,%edi$/;"	l
ffff80000010879c	kernel.asm	/^ffff80000010879c:	48 b8 f5 82 10 00 00 	movabs $0xffff8000001082f5,%rax$/;"	l
ffff8000001087a3	kernel.asm	/^ffff8000001087a3:	80 ff ff $/;"	l
ffff8000001087a6	kernel.asm	/^ffff8000001087a6:	ff d0                	callq  *%rax$/;"	l
ffff8000001087a8	kernel.asm	/^ffff8000001087a8:	85 c0                	test   %eax,%eax$/;"	l
ffff8000001087aa	kernel.asm	/^ffff8000001087aa:	79 0a                	jns    ffff8000001087b6 <sys_link+0x4a>$/;"	l
ffff8000001087ac	kernel.asm	/^ffff8000001087ac:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff8000001087b1	kernel.asm	/^ffff8000001087b1:	e9 16 02 00 00       	jmpq   ffff8000001089cc <sys_link+0x260>$/;"	l
ffff8000001087b6	kernel.asm	/^ffff8000001087b6:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff8000001087bb	kernel.asm	/^ffff8000001087bb:	48 ba 20 4f 10 00 00 	movabs $0xffff800000104f20,%rdx$/;"	l
ffff8000001087c2	kernel.asm	/^ffff8000001087c2:	80 ff ff $/;"	l
ffff8000001087c5	kernel.asm	/^ffff8000001087c5:	ff d2                	callq  *%rdx$/;"	l
ffff8000001087c7	kernel.asm	/^ffff8000001087c7:	48 8b 45 d0          	mov    -0x30(%rbp),%rax$/;"	l
ffff8000001087cb	kernel.asm	/^ffff8000001087cb:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001087ce	kernel.asm	/^ffff8000001087ce:	48 b8 b0 37 10 00 00 	movabs $0xffff8000001037b0,%rax$/;"	l
ffff8000001087d5	kernel.asm	/^ffff8000001087d5:	80 ff ff $/;"	l
ffff8000001087d8	kernel.asm	/^ffff8000001087d8:	ff d0                	callq  *%rax$/;"	l
ffff8000001087da	kernel.asm	/^ffff8000001087da:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff8000001087de	kernel.asm	/^ffff8000001087de:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)$/;"	l
ffff8000001087e3	kernel.asm	/^ffff8000001087e3:	75 1b                	jne    ffff800000108800 <sys_link+0x94>$/;"	l
ffff8000001087e5	kernel.asm	/^ffff8000001087e5:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff8000001087ea	kernel.asm	/^ffff8000001087ea:	48 ba f6 4f 10 00 00 	movabs $0xffff800000104ff6,%rdx$/;"	l
ffff8000001087f1	kernel.asm	/^ffff8000001087f1:	80 ff ff $/;"	l
ffff8000001087f4	kernel.asm	/^ffff8000001087f4:	ff d2                	callq  *%rdx$/;"	l
ffff8000001087f6	kernel.asm	/^ffff8000001087f6:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff8000001087fb	kernel.asm	/^ffff8000001087fb:	e9 cc 01 00 00       	jmpq   ffff8000001089cc <sys_link+0x260>$/;"	l
ffff800000108800	kernel.asm	/^ffff800000108800:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000108804	kernel.asm	/^ffff800000108804:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000108807	kernel.asm	/^ffff800000108807:	48 b8 1d 28 10 00 00 	movabs $0xffff80000010281d,%rax$/;"	l
ffff80000010880e	kernel.asm	/^ffff80000010880e:	80 ff ff $/;"	l
ffff800000108811	kernel.asm	/^ffff800000108811:	ff d0                	callq  *%rax$/;"	l
ffff800000108813	kernel.asm	/^ffff800000108813:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000108817	kernel.asm	/^ffff800000108817:	0f b7 80 a0 00 00 00 	movzwl 0xa0(%rax),%eax$/;"	l
ffff80000010881e	kernel.asm	/^ffff80000010881e:	66 83 f8 01          	cmp    $0x1,%ax$/;"	l
ffff800000108822	kernel.asm	/^ffff800000108822:	75 2e                	jne    ffff800000108852 <sys_link+0xe6>$/;"	l
ffff800000108824	kernel.asm	/^ffff800000108824:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000108828	kernel.asm	/^ffff800000108828:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010882b	kernel.asm	/^ffff80000010882b:	48 b8 2c 2b 10 00 00 	movabs $0xffff800000102b2c,%rax$/;"	l
ffff800000108832	kernel.asm	/^ffff800000108832:	80 ff ff $/;"	l
ffff800000108835	kernel.asm	/^ffff800000108835:	ff d0                	callq  *%rax$/;"	l
ffff800000108837	kernel.asm	/^ffff800000108837:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff80000010883c	kernel.asm	/^ffff80000010883c:	48 ba f6 4f 10 00 00 	movabs $0xffff800000104ff6,%rdx$/;"	l
ffff800000108843	kernel.asm	/^ffff800000108843:	80 ff ff $/;"	l
ffff800000108846	kernel.asm	/^ffff800000108846:	ff d2                	callq  *%rdx$/;"	l
ffff800000108848	kernel.asm	/^ffff800000108848:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff80000010884d	kernel.asm	/^ffff80000010884d:	e9 7a 01 00 00       	jmpq   ffff8000001089cc <sys_link+0x260>$/;"	l
ffff800000108852	kernel.asm	/^ffff800000108852:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000108856	kernel.asm	/^ffff800000108856:	0f b7 80 a6 00 00 00 	movzwl 0xa6(%rax),%eax$/;"	l
ffff80000010885d	kernel.asm	/^ffff80000010885d:	83 c0 01             	add    $0x1,%eax$/;"	l
ffff800000108860	kernel.asm	/^ffff800000108860:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000108862	kernel.asm	/^ffff800000108862:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000108866	kernel.asm	/^ffff800000108866:	66 89 90 a6 00 00 00 	mov    %dx,0xa6(%rax)$/;"	l
ffff80000010886d	kernel.asm	/^ffff80000010886d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000108871	kernel.asm	/^ffff800000108871:	48 8b 80 98 00 00 00 	mov    0x98(%rax),%rax$/;"	l
ffff800000108878	kernel.asm	/^ffff800000108878:	48 8b 40 08          	mov    0x8(%rax),%rax$/;"	l
ffff80000010887c	kernel.asm	/^ffff80000010887c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx$/;"	l
ffff800000108880	kernel.asm	/^ffff800000108880:	48 89 d7             	mov    %rdx,%rdi$/;"	l
ffff800000108883	kernel.asm	/^ffff800000108883:	ff d0                	callq  *%rax$/;"	l
ffff800000108885	kernel.asm	/^ffff800000108885:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000108889	kernel.asm	/^ffff800000108889:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010888c	kernel.asm	/^ffff80000010888c:	48 b8 d0 29 10 00 00 	movabs $0xffff8000001029d0,%rax$/;"	l
ffff800000108893	kernel.asm	/^ffff800000108893:	80 ff ff $/;"	l
ffff800000108896	kernel.asm	/^ffff800000108896:	ff d0                	callq  *%rax$/;"	l
ffff800000108898	kernel.asm	/^ffff800000108898:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff80000010889c	kernel.asm	/^ffff80000010889c:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx$/;"	l
ffff8000001088a0	kernel.asm	/^ffff8000001088a0:	48 89 d6             	mov    %rdx,%rsi$/;"	l
ffff8000001088a3	kernel.asm	/^ffff8000001088a3:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001088a6	kernel.asm	/^ffff8000001088a6:	48 b8 da 37 10 00 00 	movabs $0xffff8000001037da,%rax$/;"	l
ffff8000001088ad	kernel.asm	/^ffff8000001088ad:	80 ff ff $/;"	l
ffff8000001088b0	kernel.asm	/^ffff8000001088b0:	ff d0                	callq  *%rax$/;"	l
ffff8000001088b2	kernel.asm	/^ffff8000001088b2:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ffff8000001088b6	kernel.asm	/^ffff8000001088b6:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)$/;"	l
ffff8000001088bb	kernel.asm	/^ffff8000001088bb:	0f 84 9b 00 00 00    	je     ffff80000010895c <sys_link+0x1f0>$/;"	l
ffff8000001088c1	kernel.asm	/^ffff8000001088c1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff8000001088c5	kernel.asm	/^ffff8000001088c5:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001088c8	kernel.asm	/^ffff8000001088c8:	48 b8 1d 28 10 00 00 	movabs $0xffff80000010281d,%rax$/;"	l
ffff8000001088cf	kernel.asm	/^ffff8000001088cf:	80 ff ff $/;"	l
ffff8000001088d2	kernel.asm	/^ffff8000001088d2:	ff d0                	callq  *%rax$/;"	l
ffff8000001088d4	kernel.asm	/^ffff8000001088d4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff8000001088d8	kernel.asm	/^ffff8000001088d8:	8b 10                	mov    (%rax),%edx$/;"	l
ffff8000001088da	kernel.asm	/^ffff8000001088da:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001088de	kernel.asm	/^ffff8000001088de:	8b 00                	mov    (%rax),%eax$/;"	l
ffff8000001088e0	kernel.asm	/^ffff8000001088e0:	39 c2                	cmp    %eax,%edx$/;"	l
ffff8000001088e2	kernel.asm	/^ffff8000001088e2:	75 25                	jne    ffff800000108909 <sys_link+0x19d>$/;"	l
ffff8000001088e4	kernel.asm	/^ffff8000001088e4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001088e8	kernel.asm	/^ffff8000001088e8:	8b 50 04             	mov    0x4(%rax),%edx$/;"	l
ffff8000001088eb	kernel.asm	/^ffff8000001088eb:	48 8d 4d e0          	lea    -0x20(%rbp),%rcx$/;"	l
ffff8000001088ef	kernel.asm	/^ffff8000001088ef:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff8000001088f3	kernel.asm	/^ffff8000001088f3:	48 89 ce             	mov    %rcx,%rsi$/;"	l
ffff8000001088f6	kernel.asm	/^ffff8000001088f6:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001088f9	kernel.asm	/^ffff8000001088f9:	48 b8 1d 34 10 00 00 	movabs $0xffff80000010341d,%rax$/;"	l
ffff800000108900	kernel.asm	/^ffff800000108900:	80 ff ff $/;"	l
ffff800000108903	kernel.asm	/^ffff800000108903:	ff d0                	callq  *%rax$/;"	l
ffff800000108905	kernel.asm	/^ffff800000108905:	85 c0                	test   %eax,%eax$/;"	l
ffff800000108907	kernel.asm	/^ffff800000108907:	79 15                	jns    ffff80000010891e <sys_link+0x1b2>$/;"	l
ffff800000108909	kernel.asm	/^ffff800000108909:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff80000010890d	kernel.asm	/^ffff80000010890d:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000108910	kernel.asm	/^ffff800000108910:	48 b8 2c 2b 10 00 00 	movabs $0xffff800000102b2c,%rax$/;"	l
ffff800000108917	kernel.asm	/^ffff800000108917:	80 ff ff $/;"	l
ffff80000010891a	kernel.asm	/^ffff80000010891a:	ff d0                	callq  *%rax$/;"	l
ffff80000010891c	kernel.asm	/^ffff80000010891c:	eb 3f                	jmp    ffff80000010895d <sys_link+0x1f1>$/;"	l
ffff80000010891e	kernel.asm	/^ffff80000010891e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000108922	kernel.asm	/^ffff800000108922:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000108925	kernel.asm	/^ffff800000108925:	48 b8 2c 2b 10 00 00 	movabs $0xffff800000102b2c,%rax$/;"	l
ffff80000010892c	kernel.asm	/^ffff80000010892c:	80 ff ff $/;"	l
ffff80000010892f	kernel.asm	/^ffff80000010892f:	ff d0                	callq  *%rax$/;"	l
ffff800000108931	kernel.asm	/^ffff800000108931:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000108935	kernel.asm	/^ffff800000108935:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000108938	kernel.asm	/^ffff800000108938:	48 b8 39 2a 10 00 00 	movabs $0xffff800000102a39,%rax$/;"	l
ffff80000010893f	kernel.asm	/^ffff80000010893f:	80 ff ff $/;"	l
ffff800000108942	kernel.asm	/^ffff800000108942:	ff d0                	callq  *%rax$/;"	l
ffff800000108944	kernel.asm	/^ffff800000108944:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000108949	kernel.asm	/^ffff800000108949:	48 ba f6 4f 10 00 00 	movabs $0xffff800000104ff6,%rdx$/;"	l
ffff800000108950	kernel.asm	/^ffff800000108950:	80 ff ff $/;"	l
ffff800000108953	kernel.asm	/^ffff800000108953:	ff d2                	callq  *%rdx$/;"	l
ffff800000108955	kernel.asm	/^ffff800000108955:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff80000010895a	kernel.asm	/^ffff80000010895a:	eb 70                	jmp    ffff8000001089cc <sys_link+0x260>$/;"	l
ffff80000010895c	kernel.asm	/^ffff80000010895c:	90                   	nop$/;"	l
ffff80000010895d	kernel.asm	/^ffff80000010895d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000108961	kernel.asm	/^ffff800000108961:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000108964	kernel.asm	/^ffff800000108964:	48 b8 1d 28 10 00 00 	movabs $0xffff80000010281d,%rax$/;"	l
ffff80000010896b	kernel.asm	/^ffff80000010896b:	80 ff ff $/;"	l
ffff80000010896e	kernel.asm	/^ffff80000010896e:	ff d0                	callq  *%rax$/;"	l
ffff800000108970	kernel.asm	/^ffff800000108970:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000108974	kernel.asm	/^ffff800000108974:	0f b7 80 a6 00 00 00 	movzwl 0xa6(%rax),%eax$/;"	l
ffff80000010897b	kernel.asm	/^ffff80000010897b:	83 e8 01             	sub    $0x1,%eax$/;"	l
ffff80000010897e	kernel.asm	/^ffff80000010897e:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000108980	kernel.asm	/^ffff800000108980:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000108984	kernel.asm	/^ffff800000108984:	66 89 90 a6 00 00 00 	mov    %dx,0xa6(%rax)$/;"	l
ffff80000010898b	kernel.asm	/^ffff80000010898b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010898f	kernel.asm	/^ffff80000010898f:	48 8b 80 98 00 00 00 	mov    0x98(%rax),%rax$/;"	l
ffff800000108996	kernel.asm	/^ffff800000108996:	48 8b 40 08          	mov    0x8(%rax),%rax$/;"	l
ffff80000010899a	kernel.asm	/^ffff80000010899a:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx$/;"	l
ffff80000010899e	kernel.asm	/^ffff80000010899e:	48 89 d7             	mov    %rdx,%rdi$/;"	l
ffff8000001089a1	kernel.asm	/^ffff8000001089a1:	ff d0                	callq  *%rax$/;"	l
ffff8000001089a3	kernel.asm	/^ffff8000001089a3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001089a7	kernel.asm	/^ffff8000001089a7:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001089aa	kernel.asm	/^ffff8000001089aa:	48 b8 2c 2b 10 00 00 	movabs $0xffff800000102b2c,%rax$/;"	l
ffff8000001089b1	kernel.asm	/^ffff8000001089b1:	80 ff ff $/;"	l
ffff8000001089b4	kernel.asm	/^ffff8000001089b4:	ff d0                	callq  *%rax$/;"	l
ffff8000001089b6	kernel.asm	/^ffff8000001089b6:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff8000001089bb	kernel.asm	/^ffff8000001089bb:	48 ba f6 4f 10 00 00 	movabs $0xffff800000104ff6,%rdx$/;"	l
ffff8000001089c2	kernel.asm	/^ffff8000001089c2:	80 ff ff $/;"	l
ffff8000001089c5	kernel.asm	/^ffff8000001089c5:	ff d2                	callq  *%rdx$/;"	l
ffff8000001089c7	kernel.asm	/^ffff8000001089c7:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff8000001089cc	kernel.asm	/^ffff8000001089cc:	c9                   	leaveq $/;"	l
ffff8000001089cd	kernel.asm	/^ffff8000001089cd:	c3                   	retq   $/;"	l
ffff8000001089ce	kernel.asm	/^ffff8000001089ce <isdirempty>:$/;"	l
ffff8000001089ce	kernel.asm	/^ffff8000001089ce:	55                   	push   %rbp$/;"	l
ffff8000001089cf	kernel.asm	/^ffff8000001089cf:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff8000001089d2	kernel.asm	/^ffff8000001089d2:	48 83 ec 30          	sub    $0x30,%rsp$/;"	l
ffff8000001089d6	kernel.asm	/^ffff8000001089d6:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)$/;"	l
ffff8000001089da	kernel.asm	/^ffff8000001089da:	c7 45 fc 20 00 00 00 	movl   $0x20,-0x4(%rbp)$/;"	l
ffff8000001089e1	kernel.asm	/^ffff8000001089e1:	eb 55                	jmp    ffff800000108a38 <isdirempty+0x6a>$/;"	l
ffff8000001089e3	kernel.asm	/^ffff8000001089e3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff8000001089e7	kernel.asm	/^ffff8000001089e7:	48 8b 80 98 00 00 00 	mov    0x98(%rax),%rax$/;"	l
ffff8000001089ee	kernel.asm	/^ffff8000001089ee:	48 8b 40 10          	mov    0x10(%rax),%rax$/;"	l
ffff8000001089f2	kernel.asm	/^ffff8000001089f2:	8b 55 fc             	mov    -0x4(%rbp),%edx$/;"	l
ffff8000001089f5	kernel.asm	/^ffff8000001089f5:	48 8d 75 e0          	lea    -0x20(%rbp),%rsi$/;"	l
ffff8000001089f9	kernel.asm	/^ffff8000001089f9:	48 8b 7d d8          	mov    -0x28(%rbp),%rdi$/;"	l
ffff8000001089fd	kernel.asm	/^ffff8000001089fd:	b9 10 00 00 00       	mov    $0x10,%ecx$/;"	l
ffff800000108a02	kernel.asm	/^ffff800000108a02:	ff d0                	callq  *%rax$/;"	l
ffff800000108a04	kernel.asm	/^ffff800000108a04:	83 f8 10             	cmp    $0x10,%eax$/;"	l
ffff800000108a07	kernel.asm	/^ffff800000108a07:	74 16                	je     ffff800000108a1f <isdirempty+0x51>$/;"	l
ffff800000108a09	kernel.asm	/^ffff800000108a09:	48 bf b4 c6 10 00 00 	movabs $0xffff80000010c6b4,%rdi$/;"	l
ffff800000108a10	kernel.asm	/^ffff800000108a10:	80 ff ff $/;"	l
ffff800000108a13	kernel.asm	/^ffff800000108a13:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff800000108a1a	kernel.asm	/^ffff800000108a1a:	80 ff ff $/;"	l
ffff800000108a1d	kernel.asm	/^ffff800000108a1d:	ff d0                	callq  *%rax$/;"	l
ffff800000108a1f	kernel.asm	/^ffff800000108a1f:	0f b7 45 e0          	movzwl -0x20(%rbp),%eax$/;"	l
ffff800000108a23	kernel.asm	/^ffff800000108a23:	66 85 c0             	test   %ax,%ax$/;"	l
ffff800000108a26	kernel.asm	/^ffff800000108a26:	74 07                	je     ffff800000108a2f <isdirempty+0x61>$/;"	l
ffff800000108a28	kernel.asm	/^ffff800000108a28:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000108a2d	kernel.asm	/^ffff800000108a2d:	eb 1f                	jmp    ffff800000108a4e <isdirempty+0x80>$/;"	l
ffff800000108a2f	kernel.asm	/^ffff800000108a2f:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff800000108a32	kernel.asm	/^ffff800000108a32:	83 c0 10             	add    $0x10,%eax$/;"	l
ffff800000108a35	kernel.asm	/^ffff800000108a35:	89 45 fc             	mov    %eax,-0x4(%rbp)$/;"	l
ffff800000108a38	kernel.asm	/^ffff800000108a38:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff800000108a3c	kernel.asm	/^ffff800000108a3c:	8b 90 a8 00 00 00    	mov    0xa8(%rax),%edx$/;"	l
ffff800000108a42	kernel.asm	/^ffff800000108a42:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff800000108a45	kernel.asm	/^ffff800000108a45:	39 c2                	cmp    %eax,%edx$/;"	l
ffff800000108a47	kernel.asm	/^ffff800000108a47:	77 9a                	ja     ffff8000001089e3 <isdirempty+0x15>$/;"	l
ffff800000108a49	kernel.asm	/^ffff800000108a49:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
ffff800000108a4e	kernel.asm	/^ffff800000108a4e:	c9                   	leaveq $/;"	l
ffff800000108a4f	kernel.asm	/^ffff800000108a4f:	c3                   	retq   $/;"	l
ffff800000108a50	kernel.asm	/^ffff800000108a50 <sys_unlink>:$/;"	l
ffff800000108a50	kernel.asm	/^ffff800000108a50:	55                   	push   %rbp$/;"	l
ffff800000108a51	kernel.asm	/^ffff800000108a51:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000108a54	kernel.asm	/^ffff800000108a54:	48 83 ec 40          	sub    $0x40,%rsp$/;"	l
ffff800000108a58	kernel.asm	/^ffff800000108a58:	48 8d 45 c8          	lea    -0x38(%rbp),%rax$/;"	l
ffff800000108a5c	kernel.asm	/^ffff800000108a5c:	48 89 c6             	mov    %rax,%rsi$/;"	l
ffff800000108a5f	kernel.asm	/^ffff800000108a5f:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
ffff800000108a64	kernel.asm	/^ffff800000108a64:	48 b8 f5 82 10 00 00 	movabs $0xffff8000001082f5,%rax$/;"	l
ffff800000108a6b	kernel.asm	/^ffff800000108a6b:	80 ff ff $/;"	l
ffff800000108a6e	kernel.asm	/^ffff800000108a6e:	ff d0                	callq  *%rax$/;"	l
ffff800000108a70	kernel.asm	/^ffff800000108a70:	85 c0                	test   %eax,%eax$/;"	l
ffff800000108a72	kernel.asm	/^ffff800000108a72:	79 0a                	jns    ffff800000108a7e <sys_unlink+0x2e>$/;"	l
ffff800000108a74	kernel.asm	/^ffff800000108a74:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff800000108a79	kernel.asm	/^ffff800000108a79:	e9 8c 02 00 00       	jmpq   ffff800000108d0a <sys_unlink+0x2ba>$/;"	l
ffff800000108a7e	kernel.asm	/^ffff800000108a7e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000108a83	kernel.asm	/^ffff800000108a83:	48 ba 20 4f 10 00 00 	movabs $0xffff800000104f20,%rdx$/;"	l
ffff800000108a8a	kernel.asm	/^ffff800000108a8a:	80 ff ff $/;"	l
ffff800000108a8d	kernel.asm	/^ffff800000108a8d:	ff d2                	callq  *%rdx$/;"	l
ffff800000108a8f	kernel.asm	/^ffff800000108a8f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
ffff800000108a93	kernel.asm	/^ffff800000108a93:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx$/;"	l
ffff800000108a97	kernel.asm	/^ffff800000108a97:	48 89 d6             	mov    %rdx,%rsi$/;"	l
ffff800000108a9a	kernel.asm	/^ffff800000108a9a:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000108a9d	kernel.asm	/^ffff800000108a9d:	48 b8 da 37 10 00 00 	movabs $0xffff8000001037da,%rax$/;"	l
ffff800000108aa4	kernel.asm	/^ffff800000108aa4:	80 ff ff $/;"	l
ffff800000108aa7	kernel.asm	/^ffff800000108aa7:	ff d0                	callq  *%rax$/;"	l
ffff800000108aa9	kernel.asm	/^ffff800000108aa9:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff800000108aad	kernel.asm	/^ffff800000108aad:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)$/;"	l
ffff800000108ab2	kernel.asm	/^ffff800000108ab2:	75 1b                	jne    ffff800000108acf <sys_unlink+0x7f>$/;"	l
ffff800000108ab4	kernel.asm	/^ffff800000108ab4:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000108ab9	kernel.asm	/^ffff800000108ab9:	48 ba f6 4f 10 00 00 	movabs $0xffff800000104ff6,%rdx$/;"	l
ffff800000108ac0	kernel.asm	/^ffff800000108ac0:	80 ff ff $/;"	l
ffff800000108ac3	kernel.asm	/^ffff800000108ac3:	ff d2                	callq  *%rdx$/;"	l
ffff800000108ac5	kernel.asm	/^ffff800000108ac5:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff800000108aca	kernel.asm	/^ffff800000108aca:	e9 3b 02 00 00       	jmpq   ffff800000108d0a <sys_unlink+0x2ba>$/;"	l
ffff800000108acf	kernel.asm	/^ffff800000108acf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000108ad3	kernel.asm	/^ffff800000108ad3:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000108ad6	kernel.asm	/^ffff800000108ad6:	48 b8 1d 28 10 00 00 	movabs $0xffff80000010281d,%rax$/;"	l
ffff800000108add	kernel.asm	/^ffff800000108add:	80 ff ff $/;"	l
ffff800000108ae0	kernel.asm	/^ffff800000108ae0:	ff d0                	callq  *%rax$/;"	l
ffff800000108ae2	kernel.asm	/^ffff800000108ae2:	48 8d 45 d0          	lea    -0x30(%rbp),%rax$/;"	l
ffff800000108ae6	kernel.asm	/^ffff800000108ae6:	48 be c6 c6 10 00 00 	movabs $0xffff80000010c6c6,%rsi$/;"	l
ffff800000108aed	kernel.asm	/^ffff800000108aed:	80 ff ff $/;"	l
ffff800000108af0	kernel.asm	/^ffff800000108af0:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000108af3	kernel.asm	/^ffff800000108af3:	48 b8 8c 32 10 00 00 	movabs $0xffff80000010328c,%rax$/;"	l
ffff800000108afa	kernel.asm	/^ffff800000108afa:	80 ff ff $/;"	l
ffff800000108afd	kernel.asm	/^ffff800000108afd:	ff d0                	callq  *%rax$/;"	l
ffff800000108aff	kernel.asm	/^ffff800000108aff:	85 c0                	test   %eax,%eax$/;"	l
ffff800000108b01	kernel.asm	/^ffff800000108b01:	0f 84 da 01 00 00    	je     ffff800000108ce1 <sys_unlink+0x291>$/;"	l
ffff800000108b07	kernel.asm	/^ffff800000108b07:	48 8d 45 d0          	lea    -0x30(%rbp),%rax$/;"	l
ffff800000108b0b	kernel.asm	/^ffff800000108b0b:	48 be c8 c6 10 00 00 	movabs $0xffff80000010c6c8,%rsi$/;"	l
ffff800000108b12	kernel.asm	/^ffff800000108b12:	80 ff ff $/;"	l
ffff800000108b15	kernel.asm	/^ffff800000108b15:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000108b18	kernel.asm	/^ffff800000108b18:	48 b8 8c 32 10 00 00 	movabs $0xffff80000010328c,%rax$/;"	l
ffff800000108b1f	kernel.asm	/^ffff800000108b1f:	80 ff ff $/;"	l
ffff800000108b22	kernel.asm	/^ffff800000108b22:	ff d0                	callq  *%rax$/;"	l
ffff800000108b24	kernel.asm	/^ffff800000108b24:	85 c0                	test   %eax,%eax$/;"	l
ffff800000108b26	kernel.asm	/^ffff800000108b26:	0f 84 b5 01 00 00    	je     ffff800000108ce1 <sys_unlink+0x291>$/;"	l
ffff800000108b2c	kernel.asm	/^ffff800000108b2c:	48 8d 55 c4          	lea    -0x3c(%rbp),%rdx$/;"	l
ffff800000108b30	kernel.asm	/^ffff800000108b30:	48 8d 4d d0          	lea    -0x30(%rbp),%rcx$/;"	l
ffff800000108b34	kernel.asm	/^ffff800000108b34:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000108b38	kernel.asm	/^ffff800000108b38:	48 89 ce             	mov    %rcx,%rsi$/;"	l
ffff800000108b3b	kernel.asm	/^ffff800000108b3b:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000108b3e	kernel.asm	/^ffff800000108b3e:	48 b8 bd 32 10 00 00 	movabs $0xffff8000001032bd,%rax$/;"	l
ffff800000108b45	kernel.asm	/^ffff800000108b45:	80 ff ff $/;"	l
ffff800000108b48	kernel.asm	/^ffff800000108b48:	ff d0                	callq  *%rax$/;"	l
ffff800000108b4a	kernel.asm	/^ffff800000108b4a:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ffff800000108b4e	kernel.asm	/^ffff800000108b4e:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)$/;"	l
ffff800000108b53	kernel.asm	/^ffff800000108b53:	0f 84 87 01 00 00    	je     ffff800000108ce0 <sys_unlink+0x290>$/;"	l
ffff800000108b59	kernel.asm	/^ffff800000108b59:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000108b5d	kernel.asm	/^ffff800000108b5d:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000108b60	kernel.asm	/^ffff800000108b60:	48 b8 1d 28 10 00 00 	movabs $0xffff80000010281d,%rax$/;"	l
ffff800000108b67	kernel.asm	/^ffff800000108b67:	80 ff ff $/;"	l
ffff800000108b6a	kernel.asm	/^ffff800000108b6a:	ff d0                	callq  *%rax$/;"	l
ffff800000108b6c	kernel.asm	/^ffff800000108b6c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000108b70	kernel.asm	/^ffff800000108b70:	0f b7 80 a6 00 00 00 	movzwl 0xa6(%rax),%eax$/;"	l
ffff800000108b77	kernel.asm	/^ffff800000108b77:	66 85 c0             	test   %ax,%ax$/;"	l
ffff800000108b7a	kernel.asm	/^ffff800000108b7a:	7f 16                	jg     ffff800000108b92 <sys_unlink+0x142>$/;"	l
ffff800000108b7c	kernel.asm	/^ffff800000108b7c:	48 bf cb c6 10 00 00 	movabs $0xffff80000010c6cb,%rdi$/;"	l
ffff800000108b83	kernel.asm	/^ffff800000108b83:	80 ff ff $/;"	l
ffff800000108b86	kernel.asm	/^ffff800000108b86:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff800000108b8d	kernel.asm	/^ffff800000108b8d:	80 ff ff $/;"	l
ffff800000108b90	kernel.asm	/^ffff800000108b90:	ff d0                	callq  *%rax$/;"	l
ffff800000108b92	kernel.asm	/^ffff800000108b92:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000108b96	kernel.asm	/^ffff800000108b96:	0f b7 80 a0 00 00 00 	movzwl 0xa0(%rax),%eax$/;"	l
ffff800000108b9d	kernel.asm	/^ffff800000108b9d:	66 83 f8 01          	cmp    $0x1,%ax$/;"	l
ffff800000108ba1	kernel.asm	/^ffff800000108ba1:	75 2f                	jne    ffff800000108bd2 <sys_unlink+0x182>$/;"	l
ffff800000108ba3	kernel.asm	/^ffff800000108ba3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000108ba7	kernel.asm	/^ffff800000108ba7:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000108baa	kernel.asm	/^ffff800000108baa:	48 b8 ce 89 10 00 00 	movabs $0xffff8000001089ce,%rax$/;"	l
ffff800000108bb1	kernel.asm	/^ffff800000108bb1:	80 ff ff $/;"	l
ffff800000108bb4	kernel.asm	/^ffff800000108bb4:	ff d0                	callq  *%rax$/;"	l
ffff800000108bb6	kernel.asm	/^ffff800000108bb6:	85 c0                	test   %eax,%eax$/;"	l
ffff800000108bb8	kernel.asm	/^ffff800000108bb8:	75 18                	jne    ffff800000108bd2 <sys_unlink+0x182>$/;"	l
ffff800000108bba	kernel.asm	/^ffff800000108bba:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000108bbe	kernel.asm	/^ffff800000108bbe:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000108bc1	kernel.asm	/^ffff800000108bc1:	48 b8 2c 2b 10 00 00 	movabs $0xffff800000102b2c,%rax$/;"	l
ffff800000108bc8	kernel.asm	/^ffff800000108bc8:	80 ff ff $/;"	l
ffff800000108bcb	kernel.asm	/^ffff800000108bcb:	ff d0                	callq  *%rax$/;"	l
ffff800000108bcd	kernel.asm	/^ffff800000108bcd:	e9 0f 01 00 00       	jmpq   ffff800000108ce1 <sys_unlink+0x291>$/;"	l
ffff800000108bd2	kernel.asm	/^ffff800000108bd2:	48 8d 45 e0          	lea    -0x20(%rbp),%rax$/;"	l
ffff800000108bd6	kernel.asm	/^ffff800000108bd6:	ba 10 00 00 00       	mov    $0x10,%edx$/;"	l
ffff800000108bdb	kernel.asm	/^ffff800000108bdb:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffff800000108be0	kernel.asm	/^ffff800000108be0:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000108be3	kernel.asm	/^ffff800000108be3:	48 b8 9d 7c 10 00 00 	movabs $0xffff800000107c9d,%rax$/;"	l
ffff800000108bea	kernel.asm	/^ffff800000108bea:	80 ff ff $/;"	l
ffff800000108bed	kernel.asm	/^ffff800000108bed:	ff d0                	callq  *%rax$/;"	l
ffff800000108bef	kernel.asm	/^ffff800000108bef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000108bf3	kernel.asm	/^ffff800000108bf3:	48 8b 80 98 00 00 00 	mov    0x98(%rax),%rax$/;"	l
ffff800000108bfa	kernel.asm	/^ffff800000108bfa:	48 8b 40 18          	mov    0x18(%rax),%rax$/;"	l
ffff800000108bfe	kernel.asm	/^ffff800000108bfe:	8b 55 c4             	mov    -0x3c(%rbp),%edx$/;"	l
ffff800000108c01	kernel.asm	/^ffff800000108c01:	48 8d 75 e0          	lea    -0x20(%rbp),%rsi$/;"	l
ffff800000108c05	kernel.asm	/^ffff800000108c05:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi$/;"	l
ffff800000108c09	kernel.asm	/^ffff800000108c09:	b9 10 00 00 00       	mov    $0x10,%ecx$/;"	l
ffff800000108c0e	kernel.asm	/^ffff800000108c0e:	ff d0                	callq  *%rax$/;"	l
ffff800000108c10	kernel.asm	/^ffff800000108c10:	83 f8 10             	cmp    $0x10,%eax$/;"	l
ffff800000108c13	kernel.asm	/^ffff800000108c13:	74 16                	je     ffff800000108c2b <sys_unlink+0x1db>$/;"	l
ffff800000108c15	kernel.asm	/^ffff800000108c15:	48 bf dd c6 10 00 00 	movabs $0xffff80000010c6dd,%rdi$/;"	l
ffff800000108c1c	kernel.asm	/^ffff800000108c1c:	80 ff ff $/;"	l
ffff800000108c1f	kernel.asm	/^ffff800000108c1f:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff800000108c26	kernel.asm	/^ffff800000108c26:	80 ff ff $/;"	l
ffff800000108c29	kernel.asm	/^ffff800000108c29:	ff d0                	callq  *%rax$/;"	l
ffff800000108c2b	kernel.asm	/^ffff800000108c2b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000108c2f	kernel.asm	/^ffff800000108c2f:	0f b7 80 a0 00 00 00 	movzwl 0xa0(%rax),%eax$/;"	l
ffff800000108c36	kernel.asm	/^ffff800000108c36:	66 83 f8 01          	cmp    $0x1,%ax$/;"	l
ffff800000108c3a	kernel.asm	/^ffff800000108c3a:	75 33                	jne    ffff800000108c6f <sys_unlink+0x21f>$/;"	l
ffff800000108c3c	kernel.asm	/^ffff800000108c3c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000108c40	kernel.asm	/^ffff800000108c40:	0f b7 80 a6 00 00 00 	movzwl 0xa6(%rax),%eax$/;"	l
ffff800000108c47	kernel.asm	/^ffff800000108c47:	83 e8 01             	sub    $0x1,%eax$/;"	l
ffff800000108c4a	kernel.asm	/^ffff800000108c4a:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000108c4c	kernel.asm	/^ffff800000108c4c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000108c50	kernel.asm	/^ffff800000108c50:	66 89 90 a6 00 00 00 	mov    %dx,0xa6(%rax)$/;"	l
ffff800000108c57	kernel.asm	/^ffff800000108c57:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000108c5b	kernel.asm	/^ffff800000108c5b:	48 8b 80 98 00 00 00 	mov    0x98(%rax),%rax$/;"	l
ffff800000108c62	kernel.asm	/^ffff800000108c62:	48 8b 40 08          	mov    0x8(%rax),%rax$/;"	l
ffff800000108c66	kernel.asm	/^ffff800000108c66:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx$/;"	l
ffff800000108c6a	kernel.asm	/^ffff800000108c6a:	48 89 d7             	mov    %rdx,%rdi$/;"	l
ffff800000108c6d	kernel.asm	/^ffff800000108c6d:	ff d0                	callq  *%rax$/;"	l
ffff800000108c6f	kernel.asm	/^ffff800000108c6f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000108c73	kernel.asm	/^ffff800000108c73:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000108c76	kernel.asm	/^ffff800000108c76:	48 b8 2c 2b 10 00 00 	movabs $0xffff800000102b2c,%rax$/;"	l
ffff800000108c7d	kernel.asm	/^ffff800000108c7d:	80 ff ff $/;"	l
ffff800000108c80	kernel.asm	/^ffff800000108c80:	ff d0                	callq  *%rax$/;"	l
ffff800000108c82	kernel.asm	/^ffff800000108c82:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000108c86	kernel.asm	/^ffff800000108c86:	0f b7 80 a6 00 00 00 	movzwl 0xa6(%rax),%eax$/;"	l
ffff800000108c8d	kernel.asm	/^ffff800000108c8d:	83 e8 01             	sub    $0x1,%eax$/;"	l
ffff800000108c90	kernel.asm	/^ffff800000108c90:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000108c92	kernel.asm	/^ffff800000108c92:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000108c96	kernel.asm	/^ffff800000108c96:	66 89 90 a6 00 00 00 	mov    %dx,0xa6(%rax)$/;"	l
ffff800000108c9d	kernel.asm	/^ffff800000108c9d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000108ca1	kernel.asm	/^ffff800000108ca1:	48 8b 80 98 00 00 00 	mov    0x98(%rax),%rax$/;"	l
ffff800000108ca8	kernel.asm	/^ffff800000108ca8:	48 8b 40 08          	mov    0x8(%rax),%rax$/;"	l
ffff800000108cac	kernel.asm	/^ffff800000108cac:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
ffff800000108cb0	kernel.asm	/^ffff800000108cb0:	48 89 d7             	mov    %rdx,%rdi$/;"	l
ffff800000108cb3	kernel.asm	/^ffff800000108cb3:	ff d0                	callq  *%rax$/;"	l
ffff800000108cb5	kernel.asm	/^ffff800000108cb5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000108cb9	kernel.asm	/^ffff800000108cb9:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000108cbc	kernel.asm	/^ffff800000108cbc:	48 b8 2c 2b 10 00 00 	movabs $0xffff800000102b2c,%rax$/;"	l
ffff800000108cc3	kernel.asm	/^ffff800000108cc3:	80 ff ff $/;"	l
ffff800000108cc6	kernel.asm	/^ffff800000108cc6:	ff d0                	callq  *%rax$/;"	l
ffff800000108cc8	kernel.asm	/^ffff800000108cc8:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000108ccd	kernel.asm	/^ffff800000108ccd:	48 ba f6 4f 10 00 00 	movabs $0xffff800000104ff6,%rdx$/;"	l
ffff800000108cd4	kernel.asm	/^ffff800000108cd4:	80 ff ff $/;"	l
ffff800000108cd7	kernel.asm	/^ffff800000108cd7:	ff d2                	callq  *%rdx$/;"	l
ffff800000108cd9	kernel.asm	/^ffff800000108cd9:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000108cde	kernel.asm	/^ffff800000108cde:	eb 2a                	jmp    ffff800000108d0a <sys_unlink+0x2ba>$/;"	l
ffff800000108ce0	kernel.asm	/^ffff800000108ce0:	90                   	nop$/;"	l
ffff800000108ce1	kernel.asm	/^ffff800000108ce1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000108ce5	kernel.asm	/^ffff800000108ce5:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000108ce8	kernel.asm	/^ffff800000108ce8:	48 b8 2c 2b 10 00 00 	movabs $0xffff800000102b2c,%rax$/;"	l
ffff800000108cef	kernel.asm	/^ffff800000108cef:	80 ff ff $/;"	l
ffff800000108cf2	kernel.asm	/^ffff800000108cf2:	ff d0                	callq  *%rax$/;"	l
ffff800000108cf4	kernel.asm	/^ffff800000108cf4:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000108cf9	kernel.asm	/^ffff800000108cf9:	48 ba f6 4f 10 00 00 	movabs $0xffff800000104ff6,%rdx$/;"	l
ffff800000108d00	kernel.asm	/^ffff800000108d00:	80 ff ff $/;"	l
ffff800000108d03	kernel.asm	/^ffff800000108d03:	ff d2                	callq  *%rdx$/;"	l
ffff800000108d05	kernel.asm	/^ffff800000108d05:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff800000108d0a	kernel.asm	/^ffff800000108d0a:	c9                   	leaveq $/;"	l
ffff800000108d0b	kernel.asm	/^ffff800000108d0b:	c3                   	retq   $/;"	l
ffff800000108d0c	kernel.asm	/^ffff800000108d0c <create>:$/;"	l
ffff800000108d0c	kernel.asm	/^ffff800000108d0c:	55                   	push   %rbp$/;"	l
ffff800000108d0d	kernel.asm	/^ffff800000108d0d:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000108d10	kernel.asm	/^ffff800000108d10:	48 83 ec 50          	sub    $0x50,%rsp$/;"	l
ffff800000108d14	kernel.asm	/^ffff800000108d14:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)$/;"	l
ffff800000108d18	kernel.asm	/^ffff800000108d18:	89 c8                	mov    %ecx,%eax$/;"	l
ffff800000108d1a	kernel.asm	/^ffff800000108d1a:	66 89 75 c4          	mov    %si,-0x3c(%rbp)$/;"	l
ffff800000108d1e	kernel.asm	/^ffff800000108d1e:	66 89 55 c0          	mov    %dx,-0x40(%rbp)$/;"	l
ffff800000108d22	kernel.asm	/^ffff800000108d22:	66 89 45 bc          	mov    %ax,-0x44(%rbp)$/;"	l
ffff800000108d26	kernel.asm	/^ffff800000108d26:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx$/;"	l
ffff800000108d2a	kernel.asm	/^ffff800000108d2a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
ffff800000108d2e	kernel.asm	/^ffff800000108d2e:	48 89 d6             	mov    %rdx,%rsi$/;"	l
ffff800000108d31	kernel.asm	/^ffff800000108d31:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000108d34	kernel.asm	/^ffff800000108d34:	48 b8 da 37 10 00 00 	movabs $0xffff8000001037da,%rax$/;"	l
ffff800000108d3b	kernel.asm	/^ffff800000108d3b:	80 ff ff $/;"	l
ffff800000108d3e	kernel.asm	/^ffff800000108d3e:	ff d0                	callq  *%rax$/;"	l
ffff800000108d40	kernel.asm	/^ffff800000108d40:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff800000108d44	kernel.asm	/^ffff800000108d44:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)$/;"	l
ffff800000108d49	kernel.asm	/^ffff800000108d49:	75 0a                	jne    ffff800000108d55 <create+0x49>$/;"	l
ffff800000108d4b	kernel.asm	/^ffff800000108d4b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000108d50	kernel.asm	/^ffff800000108d50:	e9 2b 02 00 00       	jmpq   ffff800000108f80 <create+0x274>$/;"	l
ffff800000108d55	kernel.asm	/^ffff800000108d55:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000108d59	kernel.asm	/^ffff800000108d59:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000108d5c	kernel.asm	/^ffff800000108d5c:	48 b8 1d 28 10 00 00 	movabs $0xffff80000010281d,%rax$/;"	l
ffff800000108d63	kernel.asm	/^ffff800000108d63:	80 ff ff $/;"	l
ffff800000108d66	kernel.asm	/^ffff800000108d66:	ff d0                	callq  *%rax$/;"	l
ffff800000108d68	kernel.asm	/^ffff800000108d68:	48 8d 55 ec          	lea    -0x14(%rbp),%rdx$/;"	l
ffff800000108d6c	kernel.asm	/^ffff800000108d6c:	48 8d 4d d0          	lea    -0x30(%rbp),%rcx$/;"	l
ffff800000108d70	kernel.asm	/^ffff800000108d70:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000108d74	kernel.asm	/^ffff800000108d74:	48 89 ce             	mov    %rcx,%rsi$/;"	l
ffff800000108d77	kernel.asm	/^ffff800000108d77:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000108d7a	kernel.asm	/^ffff800000108d7a:	48 b8 bd 32 10 00 00 	movabs $0xffff8000001032bd,%rax$/;"	l
ffff800000108d81	kernel.asm	/^ffff800000108d81:	80 ff ff $/;"	l
ffff800000108d84	kernel.asm	/^ffff800000108d84:	ff d0                	callq  *%rax$/;"	l
ffff800000108d86	kernel.asm	/^ffff800000108d86:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ffff800000108d8a	kernel.asm	/^ffff800000108d8a:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)$/;"	l
ffff800000108d8f	kernel.asm	/^ffff800000108d8f:	74 64                	je     ffff800000108df5 <create+0xe9>$/;"	l
ffff800000108d91	kernel.asm	/^ffff800000108d91:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000108d95	kernel.asm	/^ffff800000108d95:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000108d98	kernel.asm	/^ffff800000108d98:	48 b8 2c 2b 10 00 00 	movabs $0xffff800000102b2c,%rax$/;"	l
ffff800000108d9f	kernel.asm	/^ffff800000108d9f:	80 ff ff $/;"	l
ffff800000108da2	kernel.asm	/^ffff800000108da2:	ff d0                	callq  *%rax$/;"	l
ffff800000108da4	kernel.asm	/^ffff800000108da4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000108da8	kernel.asm	/^ffff800000108da8:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000108dab	kernel.asm	/^ffff800000108dab:	48 b8 1d 28 10 00 00 	movabs $0xffff80000010281d,%rax$/;"	l
ffff800000108db2	kernel.asm	/^ffff800000108db2:	80 ff ff $/;"	l
ffff800000108db5	kernel.asm	/^ffff800000108db5:	ff d0                	callq  *%rax$/;"	l
ffff800000108db7	kernel.asm	/^ffff800000108db7:	66 83 7d c4 02       	cmpw   $0x2,-0x3c(%rbp)$/;"	l
ffff800000108dbc	kernel.asm	/^ffff800000108dbc:	75 1a                	jne    ffff800000108dd8 <create+0xcc>$/;"	l
ffff800000108dbe	kernel.asm	/^ffff800000108dbe:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000108dc2	kernel.asm	/^ffff800000108dc2:	0f b7 80 a0 00 00 00 	movzwl 0xa0(%rax),%eax$/;"	l
ffff800000108dc9	kernel.asm	/^ffff800000108dc9:	66 83 f8 02          	cmp    $0x2,%ax$/;"	l
ffff800000108dcd	kernel.asm	/^ffff800000108dcd:	75 09                	jne    ffff800000108dd8 <create+0xcc>$/;"	l
ffff800000108dcf	kernel.asm	/^ffff800000108dcf:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000108dd3	kernel.asm	/^ffff800000108dd3:	e9 a8 01 00 00       	jmpq   ffff800000108f80 <create+0x274>$/;"	l
ffff800000108dd8	kernel.asm	/^ffff800000108dd8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000108ddc	kernel.asm	/^ffff800000108ddc:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000108ddf	kernel.asm	/^ffff800000108ddf:	48 b8 2c 2b 10 00 00 	movabs $0xffff800000102b2c,%rax$/;"	l
ffff800000108de6	kernel.asm	/^ffff800000108de6:	80 ff ff $/;"	l
ffff800000108de9	kernel.asm	/^ffff800000108de9:	ff d0                	callq  *%rax$/;"	l
ffff800000108deb	kernel.asm	/^ffff800000108deb:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000108df0	kernel.asm	/^ffff800000108df0:	e9 8b 01 00 00       	jmpq   ffff800000108f80 <create+0x274>$/;"	l
ffff800000108df5	kernel.asm	/^ffff800000108df5:	0f bf 4d c4          	movswl -0x3c(%rbp),%ecx$/;"	l
ffff800000108df9	kernel.asm	/^ffff800000108df9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000108dfd	kernel.asm	/^ffff800000108dfd:	8b 00                	mov    (%rax),%eax$/;"	l
ffff800000108dff	kernel.asm	/^ffff800000108dff:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx$/;"	l
ffff800000108e03	kernel.asm	/^ffff800000108e03:	89 ce                	mov    %ecx,%esi$/;"	l
ffff800000108e05	kernel.asm	/^ffff800000108e05:	89 c7                	mov    %eax,%edi$/;"	l
ffff800000108e07	kernel.asm	/^ffff800000108e07:	48 b8 26 24 10 00 00 	movabs $0xffff800000102426,%rax$/;"	l
ffff800000108e0e	kernel.asm	/^ffff800000108e0e:	80 ff ff $/;"	l
ffff800000108e11	kernel.asm	/^ffff800000108e11:	ff d0                	callq  *%rax$/;"	l
ffff800000108e13	kernel.asm	/^ffff800000108e13:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ffff800000108e17	kernel.asm	/^ffff800000108e17:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)$/;"	l
ffff800000108e1c	kernel.asm	/^ffff800000108e1c:	75 16                	jne    ffff800000108e34 <create+0x128>$/;"	l
ffff800000108e1e	kernel.asm	/^ffff800000108e1e:	48 bf ec c6 10 00 00 	movabs $0xffff80000010c6ec,%rdi$/;"	l
ffff800000108e25	kernel.asm	/^ffff800000108e25:	80 ff ff $/;"	l
ffff800000108e28	kernel.asm	/^ffff800000108e28:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff800000108e2f	kernel.asm	/^ffff800000108e2f:	80 ff ff $/;"	l
ffff800000108e32	kernel.asm	/^ffff800000108e32:	ff d0                	callq  *%rax$/;"	l
ffff800000108e34	kernel.asm	/^ffff800000108e34:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000108e38	kernel.asm	/^ffff800000108e38:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000108e3b	kernel.asm	/^ffff800000108e3b:	48 b8 1d 28 10 00 00 	movabs $0xffff80000010281d,%rax$/;"	l
ffff800000108e42	kernel.asm	/^ffff800000108e42:	80 ff ff $/;"	l
ffff800000108e45	kernel.asm	/^ffff800000108e45:	ff d0                	callq  *%rax$/;"	l
ffff800000108e47	kernel.asm	/^ffff800000108e47:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000108e4b	kernel.asm	/^ffff800000108e4b:	0f b7 55 c0          	movzwl -0x40(%rbp),%edx$/;"	l
ffff800000108e4f	kernel.asm	/^ffff800000108e4f:	66 89 90 a2 00 00 00 	mov    %dx,0xa2(%rax)$/;"	l
ffff800000108e56	kernel.asm	/^ffff800000108e56:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000108e5a	kernel.asm	/^ffff800000108e5a:	0f b7 55 bc          	movzwl -0x44(%rbp),%edx$/;"	l
ffff800000108e5e	kernel.asm	/^ffff800000108e5e:	66 89 90 a4 00 00 00 	mov    %dx,0xa4(%rax)$/;"	l
ffff800000108e65	kernel.asm	/^ffff800000108e65:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000108e69	kernel.asm	/^ffff800000108e69:	66 c7 80 a6 00 00 00 	movw   $0x1,0xa6(%rax)$/;"	l
ffff800000108e70	kernel.asm	/^ffff800000108e70:	01 00 $/;"	l
ffff800000108e72	kernel.asm	/^ffff800000108e72:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000108e76	kernel.asm	/^ffff800000108e76:	48 8b 80 98 00 00 00 	mov    0x98(%rax),%rax$/;"	l
ffff800000108e7d	kernel.asm	/^ffff800000108e7d:	48 8b 40 08          	mov    0x8(%rax),%rax$/;"	l
ffff800000108e81	kernel.asm	/^ffff800000108e81:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
ffff800000108e85	kernel.asm	/^ffff800000108e85:	48 89 d7             	mov    %rdx,%rdi$/;"	l
ffff800000108e88	kernel.asm	/^ffff800000108e88:	ff d0                	callq  *%rax$/;"	l
ffff800000108e8a	kernel.asm	/^ffff800000108e8a:	66 83 7d c4 01       	cmpw   $0x1,-0x3c(%rbp)$/;"	l
ffff800000108e8f	kernel.asm	/^ffff800000108e8f:	0f 85 99 00 00 00    	jne    ffff800000108f2e <create+0x222>$/;"	l
ffff800000108e95	kernel.asm	/^ffff800000108e95:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000108e99	kernel.asm	/^ffff800000108e99:	0f b7 80 a6 00 00 00 	movzwl 0xa6(%rax),%eax$/;"	l
ffff800000108ea0	kernel.asm	/^ffff800000108ea0:	83 c0 01             	add    $0x1,%eax$/;"	l
ffff800000108ea3	kernel.asm	/^ffff800000108ea3:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000108ea5	kernel.asm	/^ffff800000108ea5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000108ea9	kernel.asm	/^ffff800000108ea9:	66 89 90 a6 00 00 00 	mov    %dx,0xa6(%rax)$/;"	l
ffff800000108eb0	kernel.asm	/^ffff800000108eb0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000108eb4	kernel.asm	/^ffff800000108eb4:	48 8b 80 98 00 00 00 	mov    0x98(%rax),%rax$/;"	l
ffff800000108ebb	kernel.asm	/^ffff800000108ebb:	48 8b 40 08          	mov    0x8(%rax),%rax$/;"	l
ffff800000108ebf	kernel.asm	/^ffff800000108ebf:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx$/;"	l
ffff800000108ec3	kernel.asm	/^ffff800000108ec3:	48 89 d7             	mov    %rdx,%rdi$/;"	l
ffff800000108ec6	kernel.asm	/^ffff800000108ec6:	ff d0                	callq  *%rax$/;"	l
ffff800000108ec8	kernel.asm	/^ffff800000108ec8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000108ecc	kernel.asm	/^ffff800000108ecc:	8b 50 04             	mov    0x4(%rax),%edx$/;"	l
ffff800000108ecf	kernel.asm	/^ffff800000108ecf:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000108ed3	kernel.asm	/^ffff800000108ed3:	48 be c6 c6 10 00 00 	movabs $0xffff80000010c6c6,%rsi$/;"	l
ffff800000108eda	kernel.asm	/^ffff800000108eda:	80 ff ff $/;"	l
ffff800000108edd	kernel.asm	/^ffff800000108edd:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000108ee0	kernel.asm	/^ffff800000108ee0:	48 b8 1d 34 10 00 00 	movabs $0xffff80000010341d,%rax$/;"	l
ffff800000108ee7	kernel.asm	/^ffff800000108ee7:	80 ff ff $/;"	l
ffff800000108eea	kernel.asm	/^ffff800000108eea:	ff d0                	callq  *%rax$/;"	l
ffff800000108eec	kernel.asm	/^ffff800000108eec:	85 c0                	test   %eax,%eax$/;"	l
ffff800000108eee	kernel.asm	/^ffff800000108eee:	78 28                	js     ffff800000108f18 <create+0x20c>$/;"	l
ffff800000108ef0	kernel.asm	/^ffff800000108ef0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000108ef4	kernel.asm	/^ffff800000108ef4:	8b 50 04             	mov    0x4(%rax),%edx$/;"	l
ffff800000108ef7	kernel.asm	/^ffff800000108ef7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000108efb	kernel.asm	/^ffff800000108efb:	48 be c8 c6 10 00 00 	movabs $0xffff80000010c6c8,%rsi$/;"	l
ffff800000108f02	kernel.asm	/^ffff800000108f02:	80 ff ff $/;"	l
ffff800000108f05	kernel.asm	/^ffff800000108f05:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000108f08	kernel.asm	/^ffff800000108f08:	48 b8 1d 34 10 00 00 	movabs $0xffff80000010341d,%rax$/;"	l
ffff800000108f0f	kernel.asm	/^ffff800000108f0f:	80 ff ff $/;"	l
ffff800000108f12	kernel.asm	/^ffff800000108f12:	ff d0                	callq  *%rax$/;"	l
ffff800000108f14	kernel.asm	/^ffff800000108f14:	85 c0                	test   %eax,%eax$/;"	l
ffff800000108f16	kernel.asm	/^ffff800000108f16:	79 16                	jns    ffff800000108f2e <create+0x222>$/;"	l
ffff800000108f18	kernel.asm	/^ffff800000108f18:	48 bf fb c6 10 00 00 	movabs $0xffff80000010c6fb,%rdi$/;"	l
ffff800000108f1f	kernel.asm	/^ffff800000108f1f:	80 ff ff $/;"	l
ffff800000108f22	kernel.asm	/^ffff800000108f22:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff800000108f29	kernel.asm	/^ffff800000108f29:	80 ff ff $/;"	l
ffff800000108f2c	kernel.asm	/^ffff800000108f2c:	ff d0                	callq  *%rax$/;"	l
ffff800000108f2e	kernel.asm	/^ffff800000108f2e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000108f32	kernel.asm	/^ffff800000108f32:	8b 50 04             	mov    0x4(%rax),%edx$/;"	l
ffff800000108f35	kernel.asm	/^ffff800000108f35:	48 8d 4d d0          	lea    -0x30(%rbp),%rcx$/;"	l
ffff800000108f39	kernel.asm	/^ffff800000108f39:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000108f3d	kernel.asm	/^ffff800000108f3d:	48 89 ce             	mov    %rcx,%rsi$/;"	l
ffff800000108f40	kernel.asm	/^ffff800000108f40:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000108f43	kernel.asm	/^ffff800000108f43:	48 b8 1d 34 10 00 00 	movabs $0xffff80000010341d,%rax$/;"	l
ffff800000108f4a	kernel.asm	/^ffff800000108f4a:	80 ff ff $/;"	l
ffff800000108f4d	kernel.asm	/^ffff800000108f4d:	ff d0                	callq  *%rax$/;"	l
ffff800000108f4f	kernel.asm	/^ffff800000108f4f:	85 c0                	test   %eax,%eax$/;"	l
ffff800000108f51	kernel.asm	/^ffff800000108f51:	79 16                	jns    ffff800000108f69 <create+0x25d>$/;"	l
ffff800000108f53	kernel.asm	/^ffff800000108f53:	48 bf 07 c7 10 00 00 	movabs $0xffff80000010c707,%rdi$/;"	l
ffff800000108f5a	kernel.asm	/^ffff800000108f5a:	80 ff ff $/;"	l
ffff800000108f5d	kernel.asm	/^ffff800000108f5d:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff800000108f64	kernel.asm	/^ffff800000108f64:	80 ff ff $/;"	l
ffff800000108f67	kernel.asm	/^ffff800000108f67:	ff d0                	callq  *%rax$/;"	l
ffff800000108f69	kernel.asm	/^ffff800000108f69:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000108f6d	kernel.asm	/^ffff800000108f6d:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000108f70	kernel.asm	/^ffff800000108f70:	48 b8 2c 2b 10 00 00 	movabs $0xffff800000102b2c,%rax$/;"	l
ffff800000108f77	kernel.asm	/^ffff800000108f77:	80 ff ff $/;"	l
ffff800000108f7a	kernel.asm	/^ffff800000108f7a:	ff d0                	callq  *%rax$/;"	l
ffff800000108f7c	kernel.asm	/^ffff800000108f7c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000108f80	kernel.asm	/^ffff800000108f80:	c9                   	leaveq $/;"	l
ffff800000108f81	kernel.asm	/^ffff800000108f81:	c3                   	retq   $/;"	l
ffff800000108f82	kernel.asm	/^ffff800000108f82 <sys_open>:$/;"	l
ffff800000108f82	kernel.asm	/^ffff800000108f82:	55                   	push   %rbp$/;"	l
ffff800000108f83	kernel.asm	/^ffff800000108f83:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000108f86	kernel.asm	/^ffff800000108f86:	48 83 ec 30          	sub    $0x30,%rsp$/;"	l
ffff800000108f8a	kernel.asm	/^ffff800000108f8a:	48 8d 45 e0          	lea    -0x20(%rbp),%rax$/;"	l
ffff800000108f8e	kernel.asm	/^ffff800000108f8e:	48 89 c6             	mov    %rax,%rsi$/;"	l
ffff800000108f91	kernel.asm	/^ffff800000108f91:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
ffff800000108f96	kernel.asm	/^ffff800000108f96:	48 b8 f5 82 10 00 00 	movabs $0xffff8000001082f5,%rax$/;"	l
ffff800000108f9d	kernel.asm	/^ffff800000108f9d:	80 ff ff $/;"	l
ffff800000108fa0	kernel.asm	/^ffff800000108fa0:	ff d0                	callq  *%rax$/;"	l
ffff800000108fa2	kernel.asm	/^ffff800000108fa2:	85 c0                	test   %eax,%eax$/;"	l
ffff800000108fa4	kernel.asm	/^ffff800000108fa4:	78 1c                	js     ffff800000108fc2 <sys_open+0x40>$/;"	l
ffff800000108fa6	kernel.asm	/^ffff800000108fa6:	48 8d 45 dc          	lea    -0x24(%rbp),%rax$/;"	l
ffff800000108faa	kernel.asm	/^ffff800000108faa:	48 89 c6             	mov    %rax,%rsi$/;"	l
ffff800000108fad	kernel.asm	/^ffff800000108fad:	bf 01 00 00 00       	mov    $0x1,%edi$/;"	l
ffff800000108fb2	kernel.asm	/^ffff800000108fb2:	48 b8 05 82 10 00 00 	movabs $0xffff800000108205,%rax$/;"	l
ffff800000108fb9	kernel.asm	/^ffff800000108fb9:	80 ff ff $/;"	l
ffff800000108fbc	kernel.asm	/^ffff800000108fbc:	ff d0                	callq  *%rax$/;"	l
ffff800000108fbe	kernel.asm	/^ffff800000108fbe:	85 c0                	test   %eax,%eax$/;"	l
ffff800000108fc0	kernel.asm	/^ffff800000108fc0:	79 0a                	jns    ffff800000108fcc <sys_open+0x4a>$/;"	l
ffff800000108fc2	kernel.asm	/^ffff800000108fc2:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff800000108fc7	kernel.asm	/^ffff800000108fc7:	e9 fb 01 00 00       	jmpq   ffff8000001091c7 <sys_open+0x245>$/;"	l
ffff800000108fcc	kernel.asm	/^ffff800000108fcc:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000108fd1	kernel.asm	/^ffff800000108fd1:	48 ba 20 4f 10 00 00 	movabs $0xffff800000104f20,%rdx$/;"	l
ffff800000108fd8	kernel.asm	/^ffff800000108fd8:	80 ff ff $/;"	l
ffff800000108fdb	kernel.asm	/^ffff800000108fdb:	ff d2                	callq  *%rdx$/;"	l
ffff800000108fdd	kernel.asm	/^ffff800000108fdd:	8b 45 dc             	mov    -0x24(%rbp),%eax$/;"	l
ffff800000108fe0	kernel.asm	/^ffff800000108fe0:	25 00 02 00 00       	and    $0x200,%eax$/;"	l
ffff800000108fe5	kernel.asm	/^ffff800000108fe5:	85 c0                	test   %eax,%eax$/;"	l
ffff800000108fe7	kernel.asm	/^ffff800000108fe7:	74 4c                	je     ffff800000109035 <sys_open+0xb3>$/;"	l
ffff800000108fe9	kernel.asm	/^ffff800000108fe9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff800000108fed	kernel.asm	/^ffff800000108fed:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
ffff800000108ff2	kernel.asm	/^ffff800000108ff2:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
ffff800000108ff7	kernel.asm	/^ffff800000108ff7:	be 02 00 00 00       	mov    $0x2,%esi$/;"	l
ffff800000108ffc	kernel.asm	/^ffff800000108ffc:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000108fff	kernel.asm	/^ffff800000108fff:	48 b8 0c 8d 10 00 00 	movabs $0xffff800000108d0c,%rax$/;"	l
ffff800000109006	kernel.asm	/^ffff800000109006:	80 ff ff $/;"	l
ffff800000109009	kernel.asm	/^ffff800000109009:	ff d0                	callq  *%rax$/;"	l
ffff80000010900b	kernel.asm	/^ffff80000010900b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff80000010900f	kernel.asm	/^ffff80000010900f:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)$/;"	l
ffff800000109014	kernel.asm	/^ffff800000109014:	0f 85 ad 00 00 00    	jne    ffff8000001090c7 <sys_open+0x145>$/;"	l
ffff80000010901a	kernel.asm	/^ffff80000010901a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff80000010901f	kernel.asm	/^ffff80000010901f:	48 ba f6 4f 10 00 00 	movabs $0xffff800000104ff6,%rdx$/;"	l
ffff800000109026	kernel.asm	/^ffff800000109026:	80 ff ff $/;"	l
ffff800000109029	kernel.asm	/^ffff800000109029:	ff d2                	callq  *%rdx$/;"	l
ffff80000010902b	kernel.asm	/^ffff80000010902b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff800000109030	kernel.asm	/^ffff800000109030:	e9 92 01 00 00       	jmpq   ffff8000001091c7 <sys_open+0x245>$/;"	l
ffff800000109035	kernel.asm	/^ffff800000109035:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff800000109039	kernel.asm	/^ffff800000109039:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010903c	kernel.asm	/^ffff80000010903c:	48 b8 b0 37 10 00 00 	movabs $0xffff8000001037b0,%rax$/;"	l
ffff800000109043	kernel.asm	/^ffff800000109043:	80 ff ff $/;"	l
ffff800000109046	kernel.asm	/^ffff800000109046:	ff d0                	callq  *%rax$/;"	l
ffff800000109048	kernel.asm	/^ffff800000109048:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff80000010904c	kernel.asm	/^ffff80000010904c:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)$/;"	l
ffff800000109051	kernel.asm	/^ffff800000109051:	75 1b                	jne    ffff80000010906e <sys_open+0xec>$/;"	l
ffff800000109053	kernel.asm	/^ffff800000109053:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000109058	kernel.asm	/^ffff800000109058:	48 ba f6 4f 10 00 00 	movabs $0xffff800000104ff6,%rdx$/;"	l
ffff80000010905f	kernel.asm	/^ffff80000010905f:	80 ff ff $/;"	l
ffff800000109062	kernel.asm	/^ffff800000109062:	ff d2                	callq  *%rdx$/;"	l
ffff800000109064	kernel.asm	/^ffff800000109064:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff800000109069	kernel.asm	/^ffff800000109069:	e9 59 01 00 00       	jmpq   ffff8000001091c7 <sys_open+0x245>$/;"	l
ffff80000010906e	kernel.asm	/^ffff80000010906e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000109072	kernel.asm	/^ffff800000109072:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000109075	kernel.asm	/^ffff800000109075:	48 b8 1d 28 10 00 00 	movabs $0xffff80000010281d,%rax$/;"	l
ffff80000010907c	kernel.asm	/^ffff80000010907c:	80 ff ff $/;"	l
ffff80000010907f	kernel.asm	/^ffff80000010907f:	ff d0                	callq  *%rax$/;"	l
ffff800000109081	kernel.asm	/^ffff800000109081:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000109085	kernel.asm	/^ffff800000109085:	0f b7 80 a0 00 00 00 	movzwl 0xa0(%rax),%eax$/;"	l
ffff80000010908c	kernel.asm	/^ffff80000010908c:	66 83 f8 01          	cmp    $0x1,%ax$/;"	l
ffff800000109090	kernel.asm	/^ffff800000109090:	75 35                	jne    ffff8000001090c7 <sys_open+0x145>$/;"	l
ffff800000109092	kernel.asm	/^ffff800000109092:	8b 45 dc             	mov    -0x24(%rbp),%eax$/;"	l
ffff800000109095	kernel.asm	/^ffff800000109095:	85 c0                	test   %eax,%eax$/;"	l
ffff800000109097	kernel.asm	/^ffff800000109097:	74 2e                	je     ffff8000001090c7 <sys_open+0x145>$/;"	l
ffff800000109099	kernel.asm	/^ffff800000109099:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010909d	kernel.asm	/^ffff80000010909d:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001090a0	kernel.asm	/^ffff8000001090a0:	48 b8 2c 2b 10 00 00 	movabs $0xffff800000102b2c,%rax$/;"	l
ffff8000001090a7	kernel.asm	/^ffff8000001090a7:	80 ff ff $/;"	l
ffff8000001090aa	kernel.asm	/^ffff8000001090aa:	ff d0                	callq  *%rax$/;"	l
ffff8000001090ac	kernel.asm	/^ffff8000001090ac:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff8000001090b1	kernel.asm	/^ffff8000001090b1:	48 ba f6 4f 10 00 00 	movabs $0xffff800000104ff6,%rdx$/;"	l
ffff8000001090b8	kernel.asm	/^ffff8000001090b8:	80 ff ff $/;"	l
ffff8000001090bb	kernel.asm	/^ffff8000001090bb:	ff d2                	callq  *%rdx$/;"	l
ffff8000001090bd	kernel.asm	/^ffff8000001090bd:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff8000001090c2	kernel.asm	/^ffff8000001090c2:	e9 00 01 00 00       	jmpq   ffff8000001091c7 <sys_open+0x245>$/;"	l
ffff8000001090c7	kernel.asm	/^ffff8000001090c7:	48 b8 a4 1a 10 00 00 	movabs $0xffff800000101aa4,%rax$/;"	l
ffff8000001090ce	kernel.asm	/^ffff8000001090ce:	80 ff ff $/;"	l
ffff8000001090d1	kernel.asm	/^ffff8000001090d1:	ff d0                	callq  *%rax$/;"	l
ffff8000001090d3	kernel.asm	/^ffff8000001090d3:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ffff8000001090d7	kernel.asm	/^ffff8000001090d7:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)$/;"	l
ffff8000001090dc	kernel.asm	/^ffff8000001090dc:	74 1c                	je     ffff8000001090fa <sys_open+0x178>$/;"	l
ffff8000001090de	kernel.asm	/^ffff8000001090de:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff8000001090e2	kernel.asm	/^ffff8000001090e2:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001090e5	kernel.asm	/^ffff8000001090e5:	48 b8 b1 84 10 00 00 	movabs $0xffff8000001084b1,%rax$/;"	l
ffff8000001090ec	kernel.asm	/^ffff8000001090ec:	80 ff ff $/;"	l
ffff8000001090ef	kernel.asm	/^ffff8000001090ef:	ff d0                	callq  *%rax$/;"	l
ffff8000001090f1	kernel.asm	/^ffff8000001090f1:	89 45 ec             	mov    %eax,-0x14(%rbp)$/;"	l
ffff8000001090f4	kernel.asm	/^ffff8000001090f4:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)$/;"	l
ffff8000001090f8	kernel.asm	/^ffff8000001090f8:	79 48                	jns    ffff800000109142 <sys_open+0x1c0>$/;"	l
ffff8000001090fa	kernel.asm	/^ffff8000001090fa:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)$/;"	l
ffff8000001090ff	kernel.asm	/^ffff8000001090ff:	74 13                	je     ffff800000109114 <sys_open+0x192>$/;"	l
ffff800000109101	kernel.asm	/^ffff800000109101:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000109105	kernel.asm	/^ffff800000109105:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000109108	kernel.asm	/^ffff800000109108:	48 b8 a6 1b 10 00 00 	movabs $0xffff800000101ba6,%rax$/;"	l
ffff80000010910f	kernel.asm	/^ffff80000010910f:	80 ff ff $/;"	l
ffff800000109112	kernel.asm	/^ffff800000109112:	ff d0                	callq  *%rax$/;"	l
ffff800000109114	kernel.asm	/^ffff800000109114:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000109118	kernel.asm	/^ffff800000109118:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010911b	kernel.asm	/^ffff80000010911b:	48 b8 2c 2b 10 00 00 	movabs $0xffff800000102b2c,%rax$/;"	l
ffff800000109122	kernel.asm	/^ffff800000109122:	80 ff ff $/;"	l
ffff800000109125	kernel.asm	/^ffff800000109125:	ff d0                	callq  *%rax$/;"	l
ffff800000109127	kernel.asm	/^ffff800000109127:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff80000010912c	kernel.asm	/^ffff80000010912c:	48 ba f6 4f 10 00 00 	movabs $0xffff800000104ff6,%rdx$/;"	l
ffff800000109133	kernel.asm	/^ffff800000109133:	80 ff ff $/;"	l
ffff800000109136	kernel.asm	/^ffff800000109136:	ff d2                	callq  *%rdx$/;"	l
ffff800000109138	kernel.asm	/^ffff800000109138:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff80000010913d	kernel.asm	/^ffff80000010913d:	e9 85 00 00 00       	jmpq   ffff8000001091c7 <sys_open+0x245>$/;"	l
ffff800000109142	kernel.asm	/^ffff800000109142:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000109146	kernel.asm	/^ffff800000109146:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000109149	kernel.asm	/^ffff800000109149:	48 b8 d0 29 10 00 00 	movabs $0xffff8000001029d0,%rax$/;"	l
ffff800000109150	kernel.asm	/^ffff800000109150:	80 ff ff $/;"	l
ffff800000109153	kernel.asm	/^ffff800000109153:	ff d0                	callq  *%rax$/;"	l
ffff800000109155	kernel.asm	/^ffff800000109155:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff80000010915a	kernel.asm	/^ffff80000010915a:	48 ba f6 4f 10 00 00 	movabs $0xffff800000104ff6,%rdx$/;"	l
ffff800000109161	kernel.asm	/^ffff800000109161:	80 ff ff $/;"	l
ffff800000109164	kernel.asm	/^ffff800000109164:	ff d2                	callq  *%rdx$/;"	l
ffff800000109166	kernel.asm	/^ffff800000109166:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff80000010916a	kernel.asm	/^ffff80000010916a:	c7 00 02 00 00 00    	movl   $0x2,(%rax)$/;"	l
ffff800000109170	kernel.asm	/^ffff800000109170:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000109174	kernel.asm	/^ffff800000109174:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx$/;"	l
ffff800000109178	kernel.asm	/^ffff800000109178:	48 89 50 18          	mov    %rdx,0x18(%rax)$/;"	l
ffff80000010917c	kernel.asm	/^ffff80000010917c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000109180	kernel.asm	/^ffff800000109180:	c7 40 20 00 00 00 00 	movl   $0x0,0x20(%rax)$/;"	l
ffff800000109187	kernel.asm	/^ffff800000109187:	8b 45 dc             	mov    -0x24(%rbp),%eax$/;"	l
ffff80000010918a	kernel.asm	/^ffff80000010918a:	83 e0 01             	and    $0x1,%eax$/;"	l
ffff80000010918d	kernel.asm	/^ffff80000010918d:	85 c0                	test   %eax,%eax$/;"	l
ffff80000010918f	kernel.asm	/^ffff80000010918f:	0f 94 c0             	sete   %al$/;"	l
ffff800000109192	kernel.asm	/^ffff800000109192:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000109194	kernel.asm	/^ffff800000109194:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000109198	kernel.asm	/^ffff800000109198:	88 50 08             	mov    %dl,0x8(%rax)$/;"	l
ffff80000010919b	kernel.asm	/^ffff80000010919b:	8b 45 dc             	mov    -0x24(%rbp),%eax$/;"	l
ffff80000010919e	kernel.asm	/^ffff80000010919e:	83 e0 01             	and    $0x1,%eax$/;"	l
ffff8000001091a1	kernel.asm	/^ffff8000001091a1:	85 c0                	test   %eax,%eax$/;"	l
ffff8000001091a3	kernel.asm	/^ffff8000001091a3:	75 0a                	jne    ffff8000001091af <sys_open+0x22d>$/;"	l
ffff8000001091a5	kernel.asm	/^ffff8000001091a5:	8b 45 dc             	mov    -0x24(%rbp),%eax$/;"	l
ffff8000001091a8	kernel.asm	/^ffff8000001091a8:	83 e0 02             	and    $0x2,%eax$/;"	l
ffff8000001091ab	kernel.asm	/^ffff8000001091ab:	85 c0                	test   %eax,%eax$/;"	l
ffff8000001091ad	kernel.asm	/^ffff8000001091ad:	74 07                	je     ffff8000001091b6 <sys_open+0x234>$/;"	l
ffff8000001091af	kernel.asm	/^ffff8000001091af:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
ffff8000001091b4	kernel.asm	/^ffff8000001091b4:	eb 05                	jmp    ffff8000001091bb <sys_open+0x239>$/;"	l
ffff8000001091b6	kernel.asm	/^ffff8000001091b6:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff8000001091bb	kernel.asm	/^ffff8000001091bb:	89 c2                	mov    %eax,%edx$/;"	l
ffff8000001091bd	kernel.asm	/^ffff8000001091bd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff8000001091c1	kernel.asm	/^ffff8000001091c1:	88 50 09             	mov    %dl,0x9(%rax)$/;"	l
ffff8000001091c4	kernel.asm	/^ffff8000001091c4:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
ffff8000001091c7	kernel.asm	/^ffff8000001091c7:	c9                   	leaveq $/;"	l
ffff8000001091c8	kernel.asm	/^ffff8000001091c8:	c3                   	retq   $/;"	l
ffff8000001091c9	kernel.asm	/^ffff8000001091c9 <sys_mkdir>:$/;"	l
ffff8000001091c9	kernel.asm	/^ffff8000001091c9:	55                   	push   %rbp$/;"	l
ffff8000001091ca	kernel.asm	/^ffff8000001091ca:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff8000001091cd	kernel.asm	/^ffff8000001091cd:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff8000001091d1	kernel.asm	/^ffff8000001091d1:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff8000001091d6	kernel.asm	/^ffff8000001091d6:	48 ba 20 4f 10 00 00 	movabs $0xffff800000104f20,%rdx$/;"	l
ffff8000001091dd	kernel.asm	/^ffff8000001091dd:	80 ff ff $/;"	l
ffff8000001091e0	kernel.asm	/^ffff8000001091e0:	ff d2                	callq  *%rdx$/;"	l
ffff8000001091e2	kernel.asm	/^ffff8000001091e2:	48 8d 45 f0          	lea    -0x10(%rbp),%rax$/;"	l
ffff8000001091e6	kernel.asm	/^ffff8000001091e6:	48 89 c6             	mov    %rax,%rsi$/;"	l
ffff8000001091e9	kernel.asm	/^ffff8000001091e9:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
ffff8000001091ee	kernel.asm	/^ffff8000001091ee:	48 b8 f5 82 10 00 00 	movabs $0xffff8000001082f5,%rax$/;"	l
ffff8000001091f5	kernel.asm	/^ffff8000001091f5:	80 ff ff $/;"	l
ffff8000001091f8	kernel.asm	/^ffff8000001091f8:	ff d0                	callq  *%rax$/;"	l
ffff8000001091fa	kernel.asm	/^ffff8000001091fa:	85 c0                	test   %eax,%eax$/;"	l
ffff8000001091fc	kernel.asm	/^ffff8000001091fc:	78 2d                	js     ffff80000010922b <sys_mkdir+0x62>$/;"	l
ffff8000001091fe	kernel.asm	/^ffff8000001091fe:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000109202	kernel.asm	/^ffff800000109202:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
ffff800000109207	kernel.asm	/^ffff800000109207:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
ffff80000010920c	kernel.asm	/^ffff80000010920c:	be 01 00 00 00       	mov    $0x1,%esi$/;"	l
ffff800000109211	kernel.asm	/^ffff800000109211:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000109214	kernel.asm	/^ffff800000109214:	48 b8 0c 8d 10 00 00 	movabs $0xffff800000108d0c,%rax$/;"	l
ffff80000010921b	kernel.asm	/^ffff80000010921b:	80 ff ff $/;"	l
ffff80000010921e	kernel.asm	/^ffff80000010921e:	ff d0                	callq  *%rax$/;"	l
ffff800000109220	kernel.asm	/^ffff800000109220:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff800000109224	kernel.asm	/^ffff800000109224:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)$/;"	l
ffff800000109229	kernel.asm	/^ffff800000109229:	75 18                	jne    ffff800000109243 <sys_mkdir+0x7a>$/;"	l
ffff80000010922b	kernel.asm	/^ffff80000010922b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000109230	kernel.asm	/^ffff800000109230:	48 ba f6 4f 10 00 00 	movabs $0xffff800000104ff6,%rdx$/;"	l
ffff800000109237	kernel.asm	/^ffff800000109237:	80 ff ff $/;"	l
ffff80000010923a	kernel.asm	/^ffff80000010923a:	ff d2                	callq  *%rdx$/;"	l
ffff80000010923c	kernel.asm	/^ffff80000010923c:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff800000109241	kernel.asm	/^ffff800000109241:	eb 29                	jmp    ffff80000010926c <sys_mkdir+0xa3>$/;"	l
ffff800000109243	kernel.asm	/^ffff800000109243:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000109247	kernel.asm	/^ffff800000109247:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010924a	kernel.asm	/^ffff80000010924a:	48 b8 2c 2b 10 00 00 	movabs $0xffff800000102b2c,%rax$/;"	l
ffff800000109251	kernel.asm	/^ffff800000109251:	80 ff ff $/;"	l
ffff800000109254	kernel.asm	/^ffff800000109254:	ff d0                	callq  *%rax$/;"	l
ffff800000109256	kernel.asm	/^ffff800000109256:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff80000010925b	kernel.asm	/^ffff80000010925b:	48 ba f6 4f 10 00 00 	movabs $0xffff800000104ff6,%rdx$/;"	l
ffff800000109262	kernel.asm	/^ffff800000109262:	80 ff ff $/;"	l
ffff800000109265	kernel.asm	/^ffff800000109265:	ff d2                	callq  *%rdx$/;"	l
ffff800000109267	kernel.asm	/^ffff800000109267:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff80000010926c	kernel.asm	/^ffff80000010926c:	c9                   	leaveq $/;"	l
ffff80000010926d	kernel.asm	/^ffff80000010926d:	c3                   	retq   $/;"	l
ffff80000010926e	kernel.asm	/^ffff80000010926e <sys_mknod>:$/;"	l
ffff80000010926e	kernel.asm	/^ffff80000010926e:	55                   	push   %rbp$/;"	l
ffff80000010926f	kernel.asm	/^ffff80000010926f:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000109272	kernel.asm	/^ffff800000109272:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ffff800000109276	kernel.asm	/^ffff800000109276:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff80000010927b	kernel.asm	/^ffff80000010927b:	48 ba 20 4f 10 00 00 	movabs $0xffff800000104f20,%rdx$/;"	l
ffff800000109282	kernel.asm	/^ffff800000109282:	80 ff ff $/;"	l
ffff800000109285	kernel.asm	/^ffff800000109285:	ff d2                	callq  *%rdx$/;"	l
ffff800000109287	kernel.asm	/^ffff800000109287:	48 8d 45 f0          	lea    -0x10(%rbp),%rax$/;"	l
ffff80000010928b	kernel.asm	/^ffff80000010928b:	48 89 c6             	mov    %rax,%rsi$/;"	l
ffff80000010928e	kernel.asm	/^ffff80000010928e:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
ffff800000109293	kernel.asm	/^ffff800000109293:	48 b8 f5 82 10 00 00 	movabs $0xffff8000001082f5,%rax$/;"	l
ffff80000010929a	kernel.asm	/^ffff80000010929a:	80 ff ff $/;"	l
ffff80000010929d	kernel.asm	/^ffff80000010929d:	ff d0                	callq  *%rax$/;"	l
ffff80000010929f	kernel.asm	/^ffff80000010929f:	85 c0                	test   %eax,%eax$/;"	l
ffff8000001092a1	kernel.asm	/^ffff8000001092a1:	78 67                	js     ffff80000010930a <sys_mknod+0x9c>$/;"	l
ffff8000001092a3	kernel.asm	/^ffff8000001092a3:	48 8d 45 ec          	lea    -0x14(%rbp),%rax$/;"	l
ffff8000001092a7	kernel.asm	/^ffff8000001092a7:	48 89 c6             	mov    %rax,%rsi$/;"	l
ffff8000001092aa	kernel.asm	/^ffff8000001092aa:	bf 01 00 00 00       	mov    $0x1,%edi$/;"	l
ffff8000001092af	kernel.asm	/^ffff8000001092af:	48 b8 05 82 10 00 00 	movabs $0xffff800000108205,%rax$/;"	l
ffff8000001092b6	kernel.asm	/^ffff8000001092b6:	80 ff ff $/;"	l
ffff8000001092b9	kernel.asm	/^ffff8000001092b9:	ff d0                	callq  *%rax$/;"	l
ffff8000001092bb	kernel.asm	/^ffff8000001092bb:	85 c0                	test   %eax,%eax$/;"	l
ffff8000001092bd	kernel.asm	/^ffff8000001092bd:	78 4b                	js     ffff80000010930a <sys_mknod+0x9c>$/;"	l
ffff8000001092bf	kernel.asm	/^ffff8000001092bf:	48 8d 45 e8          	lea    -0x18(%rbp),%rax$/;"	l
ffff8000001092c3	kernel.asm	/^ffff8000001092c3:	48 89 c6             	mov    %rax,%rsi$/;"	l
ffff8000001092c6	kernel.asm	/^ffff8000001092c6:	bf 02 00 00 00       	mov    $0x2,%edi$/;"	l
ffff8000001092cb	kernel.asm	/^ffff8000001092cb:	48 b8 05 82 10 00 00 	movabs $0xffff800000108205,%rax$/;"	l
ffff8000001092d2	kernel.asm	/^ffff8000001092d2:	80 ff ff $/;"	l
ffff8000001092d5	kernel.asm	/^ffff8000001092d5:	ff d0                	callq  *%rax$/;"	l
ffff8000001092d7	kernel.asm	/^ffff8000001092d7:	85 c0                	test   %eax,%eax$/;"	l
ffff8000001092d9	kernel.asm	/^ffff8000001092d9:	78 2f                	js     ffff80000010930a <sys_mknod+0x9c>$/;"	l
ffff8000001092db	kernel.asm	/^ffff8000001092db:	8b 45 e8             	mov    -0x18(%rbp),%eax$/;"	l
ffff8000001092de	kernel.asm	/^ffff8000001092de:	0f bf c8             	movswl %ax,%ecx$/;"	l
ffff8000001092e1	kernel.asm	/^ffff8000001092e1:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
ffff8000001092e4	kernel.asm	/^ffff8000001092e4:	0f bf d0             	movswl %ax,%edx$/;"	l
ffff8000001092e7	kernel.asm	/^ffff8000001092e7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff8000001092eb	kernel.asm	/^ffff8000001092eb:	be 03 00 00 00       	mov    $0x3,%esi$/;"	l
ffff8000001092f0	kernel.asm	/^ffff8000001092f0:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001092f3	kernel.asm	/^ffff8000001092f3:	48 b8 0c 8d 10 00 00 	movabs $0xffff800000108d0c,%rax$/;"	l
ffff8000001092fa	kernel.asm	/^ffff8000001092fa:	80 ff ff $/;"	l
ffff8000001092fd	kernel.asm	/^ffff8000001092fd:	ff d0                	callq  *%rax$/;"	l
ffff8000001092ff	kernel.asm	/^ffff8000001092ff:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff800000109303	kernel.asm	/^ffff800000109303:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)$/;"	l
ffff800000109308	kernel.asm	/^ffff800000109308:	75 18                	jne    ffff800000109322 <sys_mknod+0xb4>$/;"	l
ffff80000010930a	kernel.asm	/^ffff80000010930a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff80000010930f	kernel.asm	/^ffff80000010930f:	48 ba f6 4f 10 00 00 	movabs $0xffff800000104ff6,%rdx$/;"	l
ffff800000109316	kernel.asm	/^ffff800000109316:	80 ff ff $/;"	l
ffff800000109319	kernel.asm	/^ffff800000109319:	ff d2                	callq  *%rdx$/;"	l
ffff80000010931b	kernel.asm	/^ffff80000010931b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff800000109320	kernel.asm	/^ffff800000109320:	eb 29                	jmp    ffff80000010934b <sys_mknod+0xdd>$/;"	l
ffff800000109322	kernel.asm	/^ffff800000109322:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000109326	kernel.asm	/^ffff800000109326:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000109329	kernel.asm	/^ffff800000109329:	48 b8 2c 2b 10 00 00 	movabs $0xffff800000102b2c,%rax$/;"	l
ffff800000109330	kernel.asm	/^ffff800000109330:	80 ff ff $/;"	l
ffff800000109333	kernel.asm	/^ffff800000109333:	ff d0                	callq  *%rax$/;"	l
ffff800000109335	kernel.asm	/^ffff800000109335:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff80000010933a	kernel.asm	/^ffff80000010933a:	48 ba f6 4f 10 00 00 	movabs $0xffff800000104ff6,%rdx$/;"	l
ffff800000109341	kernel.asm	/^ffff800000109341:	80 ff ff $/;"	l
ffff800000109344	kernel.asm	/^ffff800000109344:	ff d2                	callq  *%rdx$/;"	l
ffff800000109346	kernel.asm	/^ffff800000109346:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff80000010934b	kernel.asm	/^ffff80000010934b:	c9                   	leaveq $/;"	l
ffff80000010934c	kernel.asm	/^ffff80000010934c:	c3                   	retq   $/;"	l
ffff80000010934d	kernel.asm	/^ffff80000010934d <sys_chdir>:$/;"	l
ffff80000010934d	kernel.asm	/^ffff80000010934d:	55                   	push   %rbp$/;"	l
ffff80000010934e	kernel.asm	/^ffff80000010934e:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000109351	kernel.asm	/^ffff800000109351:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff800000109355	kernel.asm	/^ffff800000109355:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff80000010935a	kernel.asm	/^ffff80000010935a:	48 ba 20 4f 10 00 00 	movabs $0xffff800000104f20,%rdx$/;"	l
ffff800000109361	kernel.asm	/^ffff800000109361:	80 ff ff $/;"	l
ffff800000109364	kernel.asm	/^ffff800000109364:	ff d2                	callq  *%rdx$/;"	l
ffff800000109366	kernel.asm	/^ffff800000109366:	48 8d 45 f0          	lea    -0x10(%rbp),%rax$/;"	l
ffff80000010936a	kernel.asm	/^ffff80000010936a:	48 89 c6             	mov    %rax,%rsi$/;"	l
ffff80000010936d	kernel.asm	/^ffff80000010936d:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
ffff800000109372	kernel.asm	/^ffff800000109372:	48 b8 f5 82 10 00 00 	movabs $0xffff8000001082f5,%rax$/;"	l
ffff800000109379	kernel.asm	/^ffff800000109379:	80 ff ff $/;"	l
ffff80000010937c	kernel.asm	/^ffff80000010937c:	ff d0                	callq  *%rax$/;"	l
ffff80000010937e	kernel.asm	/^ffff80000010937e:	85 c0                	test   %eax,%eax$/;"	l
ffff800000109380	kernel.asm	/^ffff800000109380:	78 1e                	js     ffff8000001093a0 <sys_chdir+0x53>$/;"	l
ffff800000109382	kernel.asm	/^ffff800000109382:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000109386	kernel.asm	/^ffff800000109386:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000109389	kernel.asm	/^ffff800000109389:	48 b8 b0 37 10 00 00 	movabs $0xffff8000001037b0,%rax$/;"	l
ffff800000109390	kernel.asm	/^ffff800000109390:	80 ff ff $/;"	l
ffff800000109393	kernel.asm	/^ffff800000109393:	ff d0                	callq  *%rax$/;"	l
ffff800000109395	kernel.asm	/^ffff800000109395:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff800000109399	kernel.asm	/^ffff800000109399:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)$/;"	l
ffff80000010939e	kernel.asm	/^ffff80000010939e:	75 1b                	jne    ffff8000001093bb <sys_chdir+0x6e>$/;"	l
ffff8000001093a0	kernel.asm	/^ffff8000001093a0:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff8000001093a5	kernel.asm	/^ffff8000001093a5:	48 ba f6 4f 10 00 00 	movabs $0xffff800000104ff6,%rdx$/;"	l
ffff8000001093ac	kernel.asm	/^ffff8000001093ac:	80 ff ff $/;"	l
ffff8000001093af	kernel.asm	/^ffff8000001093af:	ff d2                	callq  *%rdx$/;"	l
ffff8000001093b1	kernel.asm	/^ffff8000001093b1:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff8000001093b6	kernel.asm	/^ffff8000001093b6:	e9 af 00 00 00       	jmpq   ffff80000010946a <sys_chdir+0x11d>$/;"	l
ffff8000001093bb	kernel.asm	/^ffff8000001093bb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001093bf	kernel.asm	/^ffff8000001093bf:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001093c2	kernel.asm	/^ffff8000001093c2:	48 b8 1d 28 10 00 00 	movabs $0xffff80000010281d,%rax$/;"	l
ffff8000001093c9	kernel.asm	/^ffff8000001093c9:	80 ff ff $/;"	l
ffff8000001093cc	kernel.asm	/^ffff8000001093cc:	ff d0                	callq  *%rax$/;"	l
ffff8000001093ce	kernel.asm	/^ffff8000001093ce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001093d2	kernel.asm	/^ffff8000001093d2:	0f b7 80 a0 00 00 00 	movzwl 0xa0(%rax),%eax$/;"	l
ffff8000001093d9	kernel.asm	/^ffff8000001093d9:	66 83 f8 01          	cmp    $0x1,%ax$/;"	l
ffff8000001093dd	kernel.asm	/^ffff8000001093dd:	74 2b                	je     ffff80000010940a <sys_chdir+0xbd>$/;"	l
ffff8000001093df	kernel.asm	/^ffff8000001093df:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001093e3	kernel.asm	/^ffff8000001093e3:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001093e6	kernel.asm	/^ffff8000001093e6:	48 b8 2c 2b 10 00 00 	movabs $0xffff800000102b2c,%rax$/;"	l
ffff8000001093ed	kernel.asm	/^ffff8000001093ed:	80 ff ff $/;"	l
ffff8000001093f0	kernel.asm	/^ffff8000001093f0:	ff d0                	callq  *%rax$/;"	l
ffff8000001093f2	kernel.asm	/^ffff8000001093f2:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff8000001093f7	kernel.asm	/^ffff8000001093f7:	48 ba f6 4f 10 00 00 	movabs $0xffff800000104ff6,%rdx$/;"	l
ffff8000001093fe	kernel.asm	/^ffff8000001093fe:	80 ff ff $/;"	l
ffff800000109401	kernel.asm	/^ffff800000109401:	ff d2                	callq  *%rdx$/;"	l
ffff800000109403	kernel.asm	/^ffff800000109403:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff800000109408	kernel.asm	/^ffff800000109408:	eb 60                	jmp    ffff80000010946a <sys_chdir+0x11d>$/;"	l
ffff80000010940a	kernel.asm	/^ffff80000010940a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010940e	kernel.asm	/^ffff80000010940e:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000109411	kernel.asm	/^ffff800000109411:	48 b8 d0 29 10 00 00 	movabs $0xffff8000001029d0,%rax$/;"	l
ffff800000109418	kernel.asm	/^ffff800000109418:	80 ff ff $/;"	l
ffff80000010941b	kernel.asm	/^ffff80000010941b:	ff d0                	callq  *%rax$/;"	l
ffff80000010941d	kernel.asm	/^ffff80000010941d:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000109424	kernel.asm	/^ffff800000109424:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000109428	kernel.asm	/^ffff800000109428:	48 8b 80 c8 00 00 00 	mov    0xc8(%rax),%rax$/;"	l
ffff80000010942f	kernel.asm	/^ffff80000010942f:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000109432	kernel.asm	/^ffff800000109432:	48 b8 39 2a 10 00 00 	movabs $0xffff800000102a39,%rax$/;"	l
ffff800000109439	kernel.asm	/^ffff800000109439:	80 ff ff $/;"	l
ffff80000010943c	kernel.asm	/^ffff80000010943c:	ff d0                	callq  *%rax$/;"	l
ffff80000010943e	kernel.asm	/^ffff80000010943e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000109443	kernel.asm	/^ffff800000109443:	48 ba f6 4f 10 00 00 	movabs $0xffff800000104ff6,%rdx$/;"	l
ffff80000010944a	kernel.asm	/^ffff80000010944a:	80 ff ff $/;"	l
ffff80000010944d	kernel.asm	/^ffff80000010944d:	ff d2                	callq  *%rdx$/;"	l
ffff80000010944f	kernel.asm	/^ffff80000010944f:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000109456	kernel.asm	/^ffff800000109456:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff80000010945a	kernel.asm	/^ffff80000010945a:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx$/;"	l
ffff80000010945e	kernel.asm	/^ffff80000010945e:	48 89 90 c8 00 00 00 	mov    %rdx,0xc8(%rax)$/;"	l
ffff800000109465	kernel.asm	/^ffff800000109465:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff80000010946a	kernel.asm	/^ffff80000010946a:	c9                   	leaveq $/;"	l
ffff80000010946b	kernel.asm	/^ffff80000010946b:	c3                   	retq   $/;"	l
ffff80000010946c	kernel.asm	/^ffff80000010946c <sys_exec>:$/;"	l
ffff80000010946c	kernel.asm	/^ffff80000010946c:	55                   	push   %rbp$/;"	l
ffff80000010946d	kernel.asm	/^ffff80000010946d:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000109470	kernel.asm	/^ffff800000109470:	48 81 ec 20 01 00 00 	sub    $0x120,%rsp$/;"	l
ffff800000109477	kernel.asm	/^ffff800000109477:	48 8d 45 f0          	lea    -0x10(%rbp),%rax$/;"	l
ffff80000010947b	kernel.asm	/^ffff80000010947b:	48 89 c6             	mov    %rax,%rsi$/;"	l
ffff80000010947e	kernel.asm	/^ffff80000010947e:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
ffff800000109483	kernel.asm	/^ffff800000109483:	48 b8 f5 82 10 00 00 	movabs $0xffff8000001082f5,%rax$/;"	l
ffff80000010948a	kernel.asm	/^ffff80000010948a:	80 ff ff $/;"	l
ffff80000010948d	kernel.asm	/^ffff80000010948d:	ff d0                	callq  *%rax$/;"	l
ffff80000010948f	kernel.asm	/^ffff80000010948f:	85 c0                	test   %eax,%eax$/;"	l
ffff800000109491	kernel.asm	/^ffff800000109491:	78 1f                	js     ffff8000001094b2 <sys_exec+0x46>$/;"	l
ffff800000109493	kernel.asm	/^ffff800000109493:	48 8d 85 e8 fe ff ff 	lea    -0x118(%rbp),%rax$/;"	l
ffff80000010949a	kernel.asm	/^ffff80000010949a:	48 89 c6             	mov    %rax,%rsi$/;"	l
ffff80000010949d	kernel.asm	/^ffff80000010949d:	bf 01 00 00 00       	mov    $0x1,%edi$/;"	l
ffff8000001094a2	kernel.asm	/^ffff8000001094a2:	48 b8 34 82 10 00 00 	movabs $0xffff800000108234,%rax$/;"	l
ffff8000001094a9	kernel.asm	/^ffff8000001094a9:	80 ff ff $/;"	l
ffff8000001094ac	kernel.asm	/^ffff8000001094ac:	ff d0                	callq  *%rax$/;"	l
ffff8000001094ae	kernel.asm	/^ffff8000001094ae:	85 c0                	test   %eax,%eax$/;"	l
ffff8000001094b0	kernel.asm	/^ffff8000001094b0:	79 0a                	jns    ffff8000001094bc <sys_exec+0x50>$/;"	l
ffff8000001094b2	kernel.asm	/^ffff8000001094b2:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff8000001094b7	kernel.asm	/^ffff8000001094b7:	e9 f2 00 00 00       	jmpq   ffff8000001095ae <sys_exec+0x142>$/;"	l
ffff8000001094bc	kernel.asm	/^ffff8000001094bc:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax$/;"	l
ffff8000001094c3	kernel.asm	/^ffff8000001094c3:	ba 00 01 00 00       	mov    $0x100,%edx$/;"	l
ffff8000001094c8	kernel.asm	/^ffff8000001094c8:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffff8000001094cd	kernel.asm	/^ffff8000001094cd:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001094d0	kernel.asm	/^ffff8000001094d0:	48 b8 9d 7c 10 00 00 	movabs $0xffff800000107c9d,%rax$/;"	l
ffff8000001094d7	kernel.asm	/^ffff8000001094d7:	80 ff ff $/;"	l
ffff8000001094da	kernel.asm	/^ffff8000001094da:	ff d0                	callq  *%rax$/;"	l
ffff8000001094dc	kernel.asm	/^ffff8000001094dc:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)$/;"	l
ffff8000001094e3	kernel.asm	/^ffff8000001094e3:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff8000001094e6	kernel.asm	/^ffff8000001094e6:	83 f8 1f             	cmp    $0x1f,%eax$/;"	l
ffff8000001094e9	kernel.asm	/^ffff8000001094e9:	76 0a                	jbe    ffff8000001094f5 <sys_exec+0x89>$/;"	l
ffff8000001094eb	kernel.asm	/^ffff8000001094eb:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff8000001094f0	kernel.asm	/^ffff8000001094f0:	e9 b9 00 00 00       	jmpq   ffff8000001095ae <sys_exec+0x142>$/;"	l
ffff8000001094f5	kernel.asm	/^ffff8000001094f5:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff8000001094f8	kernel.asm	/^ffff8000001094f8:	48 98                	cltq   $/;"	l
ffff8000001094fa	kernel.asm	/^ffff8000001094fa:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx$/;"	l
ffff800000109501	kernel.asm	/^ffff800000109501:	00 $/;"	l
ffff800000109502	kernel.asm	/^ffff800000109502:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax$/;"	l
ffff800000109509	kernel.asm	/^ffff800000109509:	48 01 c2             	add    %rax,%rdx$/;"	l
ffff80000010950c	kernel.asm	/^ffff80000010950c:	48 8d 85 e0 fe ff ff 	lea    -0x120(%rbp),%rax$/;"	l
ffff800000109513	kernel.asm	/^ffff800000109513:	48 89 c6             	mov    %rax,%rsi$/;"	l
ffff800000109516	kernel.asm	/^ffff800000109516:	48 89 d7             	mov    %rdx,%rdi$/;"	l
ffff800000109519	kernel.asm	/^ffff800000109519:	48 b8 59 80 10 00 00 	movabs $0xffff800000108059,%rax$/;"	l
ffff800000109520	kernel.asm	/^ffff800000109520:	80 ff ff $/;"	l
ffff800000109523	kernel.asm	/^ffff800000109523:	ff d0                	callq  *%rax$/;"	l
ffff800000109525	kernel.asm	/^ffff800000109525:	85 c0                	test   %eax,%eax$/;"	l
ffff800000109527	kernel.asm	/^ffff800000109527:	79 07                	jns    ffff800000109530 <sys_exec+0xc4>$/;"	l
ffff800000109529	kernel.asm	/^ffff800000109529:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff80000010952e	kernel.asm	/^ffff80000010952e:	eb 7e                	jmp    ffff8000001095ae <sys_exec+0x142>$/;"	l
ffff800000109530	kernel.asm	/^ffff800000109530:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax$/;"	l
ffff800000109537	kernel.asm	/^ffff800000109537:	48 85 c0             	test   %rax,%rax$/;"	l
ffff80000010953a	kernel.asm	/^ffff80000010953a:	75 31                	jne    ffff80000010956d <sys_exec+0x101>$/;"	l
ffff80000010953c	kernel.asm	/^ffff80000010953c:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff80000010953f	kernel.asm	/^ffff80000010953f:	48 98                	cltq   $/;"	l
ffff800000109541	kernel.asm	/^ffff800000109541:	48 c7 84 c5 f0 fe ff 	movq   $0x0,-0x110(%rbp,%rax,8)$/;"	l
ffff800000109548	kernel.asm	/^ffff800000109548:	ff 00 00 00 00 $/;"	l
ffff80000010954d	kernel.asm	/^ffff80000010954d:	90                   	nop$/;"	l
ffff80000010954e	kernel.asm	/^ffff80000010954e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000109552	kernel.asm	/^ffff800000109552:	48 8d 95 f0 fe ff ff 	lea    -0x110(%rbp),%rdx$/;"	l
ffff800000109559	kernel.asm	/^ffff800000109559:	48 89 d6             	mov    %rdx,%rsi$/;"	l
ffff80000010955c	kernel.asm	/^ffff80000010955c:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010955f	kernel.asm	/^ffff80000010955f:	48 b8 59 14 10 00 00 	movabs $0xffff800000101459,%rax$/;"	l
ffff800000109566	kernel.asm	/^ffff800000109566:	80 ff ff $/;"	l
ffff800000109569	kernel.asm	/^ffff800000109569:	ff d0                	callq  *%rax$/;"	l
ffff80000010956b	kernel.asm	/^ffff80000010956b:	eb 41                	jmp    ffff8000001095ae <sys_exec+0x142>$/;"	l
ffff80000010956d	kernel.asm	/^ffff80000010956d:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax$/;"	l
ffff800000109574	kernel.asm	/^ffff800000109574:	8b 55 fc             	mov    -0x4(%rbp),%edx$/;"	l
ffff800000109577	kernel.asm	/^ffff800000109577:	48 63 d2             	movslq %edx,%rdx$/;"	l
ffff80000010957a	kernel.asm	/^ffff80000010957a:	48 c1 e2 03          	shl    $0x3,%rdx$/;"	l
ffff80000010957e	kernel.asm	/^ffff80000010957e:	48 01 c2             	add    %rax,%rdx$/;"	l
ffff800000109581	kernel.asm	/^ffff800000109581:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax$/;"	l
ffff800000109588	kernel.asm	/^ffff800000109588:	48 89 d6             	mov    %rdx,%rsi$/;"	l
ffff80000010958b	kernel.asm	/^ffff80000010958b:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010958e	kernel.asm	/^ffff80000010958e:	48 b8 b4 80 10 00 00 	movabs $0xffff8000001080b4,%rax$/;"	l
ffff800000109595	kernel.asm	/^ffff800000109595:	80 ff ff $/;"	l
ffff800000109598	kernel.asm	/^ffff800000109598:	ff d0                	callq  *%rax$/;"	l
ffff80000010959a	kernel.asm	/^ffff80000010959a:	85 c0                	test   %eax,%eax$/;"	l
ffff80000010959c	kernel.asm	/^ffff80000010959c:	79 07                	jns    ffff8000001095a5 <sys_exec+0x139>$/;"	l
ffff80000010959e	kernel.asm	/^ffff80000010959e:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff8000001095a3	kernel.asm	/^ffff8000001095a3:	eb 09                	jmp    ffff8000001095ae <sys_exec+0x142>$/;"	l
ffff8000001095a5	kernel.asm	/^ffff8000001095a5:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)$/;"	l
ffff8000001095a9	kernel.asm	/^ffff8000001095a9:	e9 35 ff ff ff       	jmpq   ffff8000001094e3 <sys_exec+0x77>$/;"	l
ffff8000001095ae	kernel.asm	/^ffff8000001095ae:	c9                   	leaveq $/;"	l
ffff8000001095af	kernel.asm	/^ffff8000001095af:	c3                   	retq   $/;"	l
ffff8000001095b0	kernel.asm	/^ffff8000001095b0 <sys_pipe>:$/;"	l
ffff8000001095b0	kernel.asm	/^ffff8000001095b0:	55                   	push   %rbp$/;"	l
ffff8000001095b1	kernel.asm	/^ffff8000001095b1:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff8000001095b4	kernel.asm	/^ffff8000001095b4:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ffff8000001095b8	kernel.asm	/^ffff8000001095b8:	48 8d 45 f0          	lea    -0x10(%rbp),%rax$/;"	l
ffff8000001095bc	kernel.asm	/^ffff8000001095bc:	ba 08 00 00 00       	mov    $0x8,%edx$/;"	l
ffff8000001095c1	kernel.asm	/^ffff8000001095c1:	48 89 c6             	mov    %rax,%rsi$/;"	l
ffff8000001095c4	kernel.asm	/^ffff8000001095c4:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
ffff8000001095c9	kernel.asm	/^ffff8000001095c9:	48 b8 65 82 10 00 00 	movabs $0xffff800000108265,%rax$/;"	l
ffff8000001095d0	kernel.asm	/^ffff8000001095d0:	80 ff ff $/;"	l
ffff8000001095d3	kernel.asm	/^ffff8000001095d3:	ff d0                	callq  *%rax$/;"	l
ffff8000001095d5	kernel.asm	/^ffff8000001095d5:	85 c0                	test   %eax,%eax$/;"	l
ffff8000001095d7	kernel.asm	/^ffff8000001095d7:	79 0a                	jns    ffff8000001095e3 <sys_pipe+0x33>$/;"	l
ffff8000001095d9	kernel.asm	/^ffff8000001095d9:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff8000001095de	kernel.asm	/^ffff8000001095de:	e9 d3 00 00 00       	jmpq   ffff8000001096b6 <sys_pipe+0x106>$/;"	l
ffff8000001095e3	kernel.asm	/^ffff8000001095e3:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx$/;"	l
ffff8000001095e7	kernel.asm	/^ffff8000001095e7:	48 8d 45 e8          	lea    -0x18(%rbp),%rax$/;"	l
ffff8000001095eb	kernel.asm	/^ffff8000001095eb:	48 89 d6             	mov    %rdx,%rsi$/;"	l
ffff8000001095ee	kernel.asm	/^ffff8000001095ee:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001095f1	kernel.asm	/^ffff8000001095f1:	48 b8 20 5c 10 00 00 	movabs $0xffff800000105c20,%rax$/;"	l
ffff8000001095f8	kernel.asm	/^ffff8000001095f8:	80 ff ff $/;"	l
ffff8000001095fb	kernel.asm	/^ffff8000001095fb:	ff d0                	callq  *%rax$/;"	l
ffff8000001095fd	kernel.asm	/^ffff8000001095fd:	85 c0                	test   %eax,%eax$/;"	l
ffff8000001095ff	kernel.asm	/^ffff8000001095ff:	79 0a                	jns    ffff80000010960b <sys_pipe+0x5b>$/;"	l
ffff800000109601	kernel.asm	/^ffff800000109601:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff800000109606	kernel.asm	/^ffff800000109606:	e9 ab 00 00 00       	jmpq   ffff8000001096b6 <sys_pipe+0x106>$/;"	l
ffff80000010960b	kernel.asm	/^ffff80000010960b:	c7 45 fc ff ff ff ff 	movl   $0xffffffff,-0x4(%rbp)$/;"	l
ffff800000109612	kernel.asm	/^ffff800000109612:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000109616	kernel.asm	/^ffff800000109616:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000109619	kernel.asm	/^ffff800000109619:	48 b8 b1 84 10 00 00 	movabs $0xffff8000001084b1,%rax$/;"	l
ffff800000109620	kernel.asm	/^ffff800000109620:	80 ff ff $/;"	l
ffff800000109623	kernel.asm	/^ffff800000109623:	ff d0                	callq  *%rax$/;"	l
ffff800000109625	kernel.asm	/^ffff800000109625:	89 45 fc             	mov    %eax,-0x4(%rbp)$/;"	l
ffff800000109628	kernel.asm	/^ffff800000109628:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)$/;"	l
ffff80000010962c	kernel.asm	/^ffff80000010962c:	78 1c                	js     ffff80000010964a <sys_pipe+0x9a>$/;"	l
ffff80000010962e	kernel.asm	/^ffff80000010962e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff800000109632	kernel.asm	/^ffff800000109632:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000109635	kernel.asm	/^ffff800000109635:	48 b8 b1 84 10 00 00 	movabs $0xffff8000001084b1,%rax$/;"	l
ffff80000010963c	kernel.asm	/^ffff80000010963c:	80 ff ff $/;"	l
ffff80000010963f	kernel.asm	/^ffff80000010963f:	ff d0                	callq  *%rax$/;"	l
ffff800000109641	kernel.asm	/^ffff800000109641:	89 45 f8             	mov    %eax,-0x8(%rbp)$/;"	l
ffff800000109644	kernel.asm	/^ffff800000109644:	83 7d f8 00          	cmpl   $0x0,-0x8(%rbp)$/;"	l
ffff800000109648	kernel.asm	/^ffff800000109648:	79 51                	jns    ffff80000010969b <sys_pipe+0xeb>$/;"	l
ffff80000010964a	kernel.asm	/^ffff80000010964a:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)$/;"	l
ffff80000010964e	kernel.asm	/^ffff80000010964e:	78 1e                	js     ffff80000010966e <sys_pipe+0xbe>$/;"	l
ffff800000109650	kernel.asm	/^ffff800000109650:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000109657	kernel.asm	/^ffff800000109657:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff80000010965b	kernel.asm	/^ffff80000010965b:	8b 55 fc             	mov    -0x4(%rbp),%edx$/;"	l
ffff80000010965e	kernel.asm	/^ffff80000010965e:	48 63 d2             	movslq %edx,%rdx$/;"	l
ffff800000109661	kernel.asm	/^ffff800000109661:	48 83 c2 08          	add    $0x8,%rdx$/;"	l
ffff800000109665	kernel.asm	/^ffff800000109665:	48 c7 44 d0 08 00 00 	movq   $0x0,0x8(%rax,%rdx,8)$/;"	l
ffff80000010966c	kernel.asm	/^ffff80000010966c:	00 00 $/;"	l
ffff80000010966e	kernel.asm	/^ffff80000010966e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000109672	kernel.asm	/^ffff800000109672:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000109675	kernel.asm	/^ffff800000109675:	48 b8 a6 1b 10 00 00 	movabs $0xffff800000101ba6,%rax$/;"	l
ffff80000010967c	kernel.asm	/^ffff80000010967c:	80 ff ff $/;"	l
ffff80000010967f	kernel.asm	/^ffff80000010967f:	ff d0                	callq  *%rax$/;"	l
ffff800000109681	kernel.asm	/^ffff800000109681:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff800000109685	kernel.asm	/^ffff800000109685:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000109688	kernel.asm	/^ffff800000109688:	48 b8 a6 1b 10 00 00 	movabs $0xffff800000101ba6,%rax$/;"	l
ffff80000010968f	kernel.asm	/^ffff80000010968f:	80 ff ff $/;"	l
ffff800000109692	kernel.asm	/^ffff800000109692:	ff d0                	callq  *%rax$/;"	l
ffff800000109694	kernel.asm	/^ffff800000109694:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff800000109699	kernel.asm	/^ffff800000109699:	eb 1b                	jmp    ffff8000001096b6 <sys_pipe+0x106>$/;"	l
ffff80000010969b	kernel.asm	/^ffff80000010969b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff80000010969f	kernel.asm	/^ffff80000010969f:	8b 55 fc             	mov    -0x4(%rbp),%edx$/;"	l
ffff8000001096a2	kernel.asm	/^ffff8000001096a2:	89 10                	mov    %edx,(%rax)$/;"	l
ffff8000001096a4	kernel.asm	/^ffff8000001096a4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff8000001096a8	kernel.asm	/^ffff8000001096a8:	48 8d 50 04          	lea    0x4(%rax),%rdx$/;"	l
ffff8000001096ac	kernel.asm	/^ffff8000001096ac:	8b 45 f8             	mov    -0x8(%rbp),%eax$/;"	l
ffff8000001096af	kernel.asm	/^ffff8000001096af:	89 02                	mov    %eax,(%rdx)$/;"	l
ffff8000001096b1	kernel.asm	/^ffff8000001096b1:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff8000001096b6	kernel.asm	/^ffff8000001096b6:	c9                   	leaveq $/;"	l
ffff8000001096b7	kernel.asm	/^ffff8000001096b7:	c3                   	retq   $/;"	l
ffff8000001096b8	kernel.asm	/^ffff8000001096b8 <sys_fork>:$/;"	l
ffff8000001096b8	kernel.asm	/^ffff8000001096b8:	55                   	push   %rbp$/;"	l
ffff8000001096b9	kernel.asm	/^ffff8000001096b9:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff8000001096bc	kernel.asm	/^ffff8000001096bc:	48 b8 5c 65 10 00 00 	movabs $0xffff80000010655c,%rax$/;"	l
ffff8000001096c3	kernel.asm	/^ffff8000001096c3:	80 ff ff $/;"	l
ffff8000001096c6	kernel.asm	/^ffff8000001096c6:	ff d0                	callq  *%rax$/;"	l
ffff8000001096c8	kernel.asm	/^ffff8000001096c8:	5d                   	pop    %rbp$/;"	l
ffff8000001096c9	kernel.asm	/^ffff8000001096c9:	c3                   	retq   $/;"	l
ffff8000001096ca	kernel.asm	/^ffff8000001096ca <sys_exit>:$/;"	l
ffff8000001096ca	kernel.asm	/^ffff8000001096ca:	55                   	push   %rbp$/;"	l
ffff8000001096cb	kernel.asm	/^ffff8000001096cb:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff8000001096ce	kernel.asm	/^ffff8000001096ce:	48 b8 7d 67 10 00 00 	movabs $0xffff80000010677d,%rax$/;"	l
ffff8000001096d5	kernel.asm	/^ffff8000001096d5:	80 ff ff $/;"	l
ffff8000001096d8	kernel.asm	/^ffff8000001096d8:	ff d0                	callq  *%rax$/;"	l
ffff8000001096da	kernel.asm	/^ffff8000001096da:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff8000001096df	kernel.asm	/^ffff8000001096df:	5d                   	pop    %rbp$/;"	l
ffff8000001096e0	kernel.asm	/^ffff8000001096e0:	c3                   	retq   $/;"	l
ffff8000001096e1	kernel.asm	/^ffff8000001096e1 <sys_wait>:$/;"	l
ffff8000001096e1	kernel.asm	/^ffff8000001096e1:	55                   	push   %rbp$/;"	l
ffff8000001096e2	kernel.asm	/^ffff8000001096e2:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff8000001096e5	kernel.asm	/^ffff8000001096e5:	48 b8 6f 69 10 00 00 	movabs $0xffff80000010696f,%rax$/;"	l
ffff8000001096ec	kernel.asm	/^ffff8000001096ec:	80 ff ff $/;"	l
ffff8000001096ef	kernel.asm	/^ffff8000001096ef:	ff d0                	callq  *%rax$/;"	l
ffff8000001096f1	kernel.asm	/^ffff8000001096f1:	5d                   	pop    %rbp$/;"	l
ffff8000001096f2	kernel.asm	/^ffff8000001096f2:	c3                   	retq   $/;"	l
ffff8000001096f3	kernel.asm	/^ffff8000001096f3 <sys_kill>:$/;"	l
ffff8000001096f3	kernel.asm	/^ffff8000001096f3:	55                   	push   %rbp$/;"	l
ffff8000001096f4	kernel.asm	/^ffff8000001096f4:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff8000001096f7	kernel.asm	/^ffff8000001096f7:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff8000001096fb	kernel.asm	/^ffff8000001096fb:	48 8d 45 fc          	lea    -0x4(%rbp),%rax$/;"	l
ffff8000001096ff	kernel.asm	/^ffff8000001096ff:	48 89 c6             	mov    %rax,%rsi$/;"	l
ffff800000109702	kernel.asm	/^ffff800000109702:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
ffff800000109707	kernel.asm	/^ffff800000109707:	48 b8 05 82 10 00 00 	movabs $0xffff800000108205,%rax$/;"	l
ffff80000010970e	kernel.asm	/^ffff80000010970e:	80 ff ff $/;"	l
ffff800000109711	kernel.asm	/^ffff800000109711:	ff d0                	callq  *%rax$/;"	l
ffff800000109713	kernel.asm	/^ffff800000109713:	85 c0                	test   %eax,%eax$/;"	l
ffff800000109715	kernel.asm	/^ffff800000109715:	79 07                	jns    ffff80000010971e <sys_kill+0x2b>$/;"	l
ffff800000109717	kernel.asm	/^ffff800000109717:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff80000010971c	kernel.asm	/^ffff80000010971c:	eb 11                	jmp    ffff80000010972f <sys_kill+0x3c>$/;"	l
ffff80000010971e	kernel.asm	/^ffff80000010971e:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff800000109721	kernel.asm	/^ffff800000109721:	89 c7                	mov    %eax,%edi$/;"	l
ffff800000109723	kernel.asm	/^ffff800000109723:	48 b8 67 6f 10 00 00 	movabs $0xffff800000106f67,%rax$/;"	l
ffff80000010972a	kernel.asm	/^ffff80000010972a:	80 ff ff $/;"	l
ffff80000010972d	kernel.asm	/^ffff80000010972d:	ff d0                	callq  *%rax$/;"	l
ffff80000010972f	kernel.asm	/^ffff80000010972f:	c9                   	leaveq $/;"	l
ffff800000109730	kernel.asm	/^ffff800000109730:	c3                   	retq   $/;"	l
ffff800000109731	kernel.asm	/^ffff800000109731 <sys_getpid>:$/;"	l
ffff800000109731	kernel.asm	/^ffff800000109731:	55                   	push   %rbp$/;"	l
ffff800000109732	kernel.asm	/^ffff800000109732:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000109735	kernel.asm	/^ffff800000109735:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff80000010973c	kernel.asm	/^ffff80000010973c:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000109740	kernel.asm	/^ffff800000109740:	8b 40 1c             	mov    0x1c(%rax),%eax$/;"	l
ffff800000109743	kernel.asm	/^ffff800000109743:	5d                   	pop    %rbp$/;"	l
ffff800000109744	kernel.asm	/^ffff800000109744:	c3                   	retq   $/;"	l
ffff800000109745	kernel.asm	/^ffff800000109745 <sys_sbrk>:$/;"	l
ffff800000109745	kernel.asm	/^ffff800000109745:	55                   	push   %rbp$/;"	l
ffff800000109746	kernel.asm	/^ffff800000109746:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000109749	kernel.asm	/^ffff800000109749:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff80000010974d	kernel.asm	/^ffff80000010974d:	48 8d 45 f8          	lea    -0x8(%rbp),%rax$/;"	l
ffff800000109751	kernel.asm	/^ffff800000109751:	48 89 c6             	mov    %rax,%rsi$/;"	l
ffff800000109754	kernel.asm	/^ffff800000109754:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
ffff800000109759	kernel.asm	/^ffff800000109759:	48 b8 05 82 10 00 00 	movabs $0xffff800000108205,%rax$/;"	l
ffff800000109760	kernel.asm	/^ffff800000109760:	80 ff ff $/;"	l
ffff800000109763	kernel.asm	/^ffff800000109763:	ff d0                	callq  *%rax$/;"	l
ffff800000109765	kernel.asm	/^ffff800000109765:	85 c0                	test   %eax,%eax$/;"	l
ffff800000109767	kernel.asm	/^ffff800000109767:	79 07                	jns    ffff800000109770 <sys_sbrk+0x2b>$/;"	l
ffff800000109769	kernel.asm	/^ffff800000109769:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff80000010976e	kernel.asm	/^ffff80000010976e:	eb 30                	jmp    ffff8000001097a0 <sys_sbrk+0x5b>$/;"	l
ffff800000109770	kernel.asm	/^ffff800000109770:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000109777	kernel.asm	/^ffff800000109777:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff80000010977b	kernel.asm	/^ffff80000010977b:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff80000010977e	kernel.asm	/^ffff80000010977e:	89 45 fc             	mov    %eax,-0x4(%rbp)$/;"	l
ffff800000109781	kernel.asm	/^ffff800000109781:	8b 45 f8             	mov    -0x8(%rbp),%eax$/;"	l
ffff800000109784	kernel.asm	/^ffff800000109784:	89 c7                	mov    %eax,%edi$/;"	l
ffff800000109786	kernel.asm	/^ffff800000109786:	48 b8 89 64 10 00 00 	movabs $0xffff800000106489,%rax$/;"	l
ffff80000010978d	kernel.asm	/^ffff80000010978d:	80 ff ff $/;"	l
ffff800000109790	kernel.asm	/^ffff800000109790:	ff d0                	callq  *%rax$/;"	l
ffff800000109792	kernel.asm	/^ffff800000109792:	85 c0                	test   %eax,%eax$/;"	l
ffff800000109794	kernel.asm	/^ffff800000109794:	79 07                	jns    ffff80000010979d <sys_sbrk+0x58>$/;"	l
ffff800000109796	kernel.asm	/^ffff800000109796:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff80000010979b	kernel.asm	/^ffff80000010979b:	eb 03                	jmp    ffff8000001097a0 <sys_sbrk+0x5b>$/;"	l
ffff80000010979d	kernel.asm	/^ffff80000010979d:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff8000001097a0	kernel.asm	/^ffff8000001097a0:	c9                   	leaveq $/;"	l
ffff8000001097a1	kernel.asm	/^ffff8000001097a1:	c3                   	retq   $/;"	l
ffff8000001097a2	kernel.asm	/^ffff8000001097a2 <sys_sleep>:$/;"	l
ffff8000001097a2	kernel.asm	/^ffff8000001097a2:	55                   	push   %rbp$/;"	l
ffff8000001097a3	kernel.asm	/^ffff8000001097a3:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff8000001097a6	kernel.asm	/^ffff8000001097a6:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff8000001097aa	kernel.asm	/^ffff8000001097aa:	48 8d 45 f8          	lea    -0x8(%rbp),%rax$/;"	l
ffff8000001097ae	kernel.asm	/^ffff8000001097ae:	48 89 c6             	mov    %rax,%rsi$/;"	l
ffff8000001097b1	kernel.asm	/^ffff8000001097b1:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
ffff8000001097b6	kernel.asm	/^ffff8000001097b6:	48 b8 05 82 10 00 00 	movabs $0xffff800000108205,%rax$/;"	l
ffff8000001097bd	kernel.asm	/^ffff8000001097bd:	80 ff ff $/;"	l
ffff8000001097c0	kernel.asm	/^ffff8000001097c0:	ff d0                	callq  *%rax$/;"	l
ffff8000001097c2	kernel.asm	/^ffff8000001097c2:	85 c0                	test   %eax,%eax$/;"	l
ffff8000001097c4	kernel.asm	/^ffff8000001097c4:	79 0a                	jns    ffff8000001097d0 <sys_sleep+0x2e>$/;"	l
ffff8000001097c6	kernel.asm	/^ffff8000001097c6:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff8000001097cb	kernel.asm	/^ffff8000001097cb:	e9 a7 00 00 00       	jmpq   ffff800000109877 <sys_sleep+0xd5>$/;"	l
ffff8000001097d0	kernel.asm	/^ffff8000001097d0:	48 bf 00 c5 11 00 00 	movabs $0xffff80000011c500,%rdi$/;"	l
ffff8000001097d7	kernel.asm	/^ffff8000001097d7:	80 ff ff $/;"	l
ffff8000001097da	kernel.asm	/^ffff8000001097da:	48 b8 01 79 10 00 00 	movabs $0xffff800000107901,%rax$/;"	l
ffff8000001097e1	kernel.asm	/^ffff8000001097e1:	80 ff ff $/;"	l
ffff8000001097e4	kernel.asm	/^ffff8000001097e4:	ff d0                	callq  *%rax$/;"	l
ffff8000001097e6	kernel.asm	/^ffff8000001097e6:	48 b8 68 c5 11 00 00 	movabs $0xffff80000011c568,%rax$/;"	l
ffff8000001097ed	kernel.asm	/^ffff8000001097ed:	80 ff ff $/;"	l
ffff8000001097f0	kernel.asm	/^ffff8000001097f0:	8b 00                	mov    (%rax),%eax$/;"	l
ffff8000001097f2	kernel.asm	/^ffff8000001097f2:	89 45 fc             	mov    %eax,-0x4(%rbp)$/;"	l
ffff8000001097f5	kernel.asm	/^ffff8000001097f5:	eb 4f                	jmp    ffff800000109846 <sys_sleep+0xa4>$/;"	l
ffff8000001097f7	kernel.asm	/^ffff8000001097f7:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff8000001097fe	kernel.asm	/^ffff8000001097fe:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000109802	kernel.asm	/^ffff800000109802:	8b 40 40             	mov    0x40(%rax),%eax$/;"	l
ffff800000109805	kernel.asm	/^ffff800000109805:	85 c0                	test   %eax,%eax$/;"	l
ffff800000109807	kernel.asm	/^ffff800000109807:	74 1d                	je     ffff800000109826 <sys_sleep+0x84>$/;"	l
ffff800000109809	kernel.asm	/^ffff800000109809:	48 bf 00 c5 11 00 00 	movabs $0xffff80000011c500,%rdi$/;"	l
ffff800000109810	kernel.asm	/^ffff800000109810:	80 ff ff $/;"	l
ffff800000109813	kernel.asm	/^ffff800000109813:	48 b8 9a 79 10 00 00 	movabs $0xffff80000010799a,%rax$/;"	l
ffff80000010981a	kernel.asm	/^ffff80000010981a:	80 ff ff $/;"	l
ffff80000010981d	kernel.asm	/^ffff80000010981d:	ff d0                	callq  *%rax$/;"	l
ffff80000010981f	kernel.asm	/^ffff80000010981f:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff800000109824	kernel.asm	/^ffff800000109824:	eb 51                	jmp    ffff800000109877 <sys_sleep+0xd5>$/;"	l
ffff800000109826	kernel.asm	/^ffff800000109826:	48 be 00 c5 11 00 00 	movabs $0xffff80000011c500,%rsi$/;"	l
ffff80000010982d	kernel.asm	/^ffff80000010982d:	80 ff ff $/;"	l
ffff800000109830	kernel.asm	/^ffff800000109830:	48 bf 68 c5 11 00 00 	movabs $0xffff80000011c568,%rdi$/;"	l
ffff800000109837	kernel.asm	/^ffff800000109837:	80 ff ff $/;"	l
ffff80000010983a	kernel.asm	/^ffff80000010983a:	48 b8 b1 6d 10 00 00 	movabs $0xffff800000106db1,%rax$/;"	l
ffff800000109841	kernel.asm	/^ffff800000109841:	80 ff ff $/;"	l
ffff800000109844	kernel.asm	/^ffff800000109844:	ff d0                	callq  *%rax$/;"	l
ffff800000109846	kernel.asm	/^ffff800000109846:	48 b8 68 c5 11 00 00 	movabs $0xffff80000011c568,%rax$/;"	l
ffff80000010984d	kernel.asm	/^ffff80000010984d:	80 ff ff $/;"	l
ffff800000109850	kernel.asm	/^ffff800000109850:	8b 00                	mov    (%rax),%eax$/;"	l
ffff800000109852	kernel.asm	/^ffff800000109852:	2b 45 fc             	sub    -0x4(%rbp),%eax$/;"	l
ffff800000109855	kernel.asm	/^ffff800000109855:	8b 55 f8             	mov    -0x8(%rbp),%edx$/;"	l
ffff800000109858	kernel.asm	/^ffff800000109858:	39 d0                	cmp    %edx,%eax$/;"	l
ffff80000010985a	kernel.asm	/^ffff80000010985a:	72 9b                	jb     ffff8000001097f7 <sys_sleep+0x55>$/;"	l
ffff80000010985c	kernel.asm	/^ffff80000010985c:	48 bf 00 c5 11 00 00 	movabs $0xffff80000011c500,%rdi$/;"	l
ffff800000109863	kernel.asm	/^ffff800000109863:	80 ff ff $/;"	l
ffff800000109866	kernel.asm	/^ffff800000109866:	48 b8 9a 79 10 00 00 	movabs $0xffff80000010799a,%rax$/;"	l
ffff80000010986d	kernel.asm	/^ffff80000010986d:	80 ff ff $/;"	l
ffff800000109870	kernel.asm	/^ffff800000109870:	ff d0                	callq  *%rax$/;"	l
ffff800000109872	kernel.asm	/^ffff800000109872:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000109877	kernel.asm	/^ffff800000109877:	c9                   	leaveq $/;"	l
ffff800000109878	kernel.asm	/^ffff800000109878:	c3                   	retq   $/;"	l
ffff800000109879	kernel.asm	/^ffff800000109879 <sys_uptime>:$/;"	l
ffff800000109879	kernel.asm	/^ffff800000109879:	55                   	push   %rbp$/;"	l
ffff80000010987a	kernel.asm	/^ffff80000010987a:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010987d	kernel.asm	/^ffff80000010987d:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff800000109881	kernel.asm	/^ffff800000109881:	48 bf 00 c5 11 00 00 	movabs $0xffff80000011c500,%rdi$/;"	l
ffff800000109888	kernel.asm	/^ffff800000109888:	80 ff ff $/;"	l
ffff80000010988b	kernel.asm	/^ffff80000010988b:	48 b8 01 79 10 00 00 	movabs $0xffff800000107901,%rax$/;"	l
ffff800000109892	kernel.asm	/^ffff800000109892:	80 ff ff $/;"	l
ffff800000109895	kernel.asm	/^ffff800000109895:	ff d0                	callq  *%rax$/;"	l
ffff800000109897	kernel.asm	/^ffff800000109897:	48 b8 68 c5 11 00 00 	movabs $0xffff80000011c568,%rax$/;"	l
ffff80000010989e	kernel.asm	/^ffff80000010989e:	80 ff ff $/;"	l
ffff8000001098a1	kernel.asm	/^ffff8000001098a1:	8b 00                	mov    (%rax),%eax$/;"	l
ffff8000001098a3	kernel.asm	/^ffff8000001098a3:	89 45 fc             	mov    %eax,-0x4(%rbp)$/;"	l
ffff8000001098a6	kernel.asm	/^ffff8000001098a6:	48 bf 00 c5 11 00 00 	movabs $0xffff80000011c500,%rdi$/;"	l
ffff8000001098ad	kernel.asm	/^ffff8000001098ad:	80 ff ff $/;"	l
ffff8000001098b0	kernel.asm	/^ffff8000001098b0:	48 b8 9a 79 10 00 00 	movabs $0xffff80000010799a,%rax$/;"	l
ffff8000001098b7	kernel.asm	/^ffff8000001098b7:	80 ff ff $/;"	l
ffff8000001098ba	kernel.asm	/^ffff8000001098ba:	ff d0                	callq  *%rax$/;"	l
ffff8000001098bc	kernel.asm	/^ffff8000001098bc:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff8000001098bf	kernel.asm	/^ffff8000001098bf:	c9                   	leaveq $/;"	l
ffff8000001098c0	kernel.asm	/^ffff8000001098c0:	c3                   	retq   $/;"	l
ffff8000001098c1	kernel.asm	/^ffff8000001098c1 <sys_mount>:$/;"	l
ffff8000001098c1	kernel.asm	/^ffff8000001098c1:	55                   	push   %rbp$/;"	l
ffff8000001098c2	kernel.asm	/^ffff8000001098c2:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff8000001098c5	kernel.asm	/^ffff8000001098c5:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff8000001098c9	kernel.asm	/^ffff8000001098c9:	48 8d 45 f8          	lea    -0x8(%rbp),%rax$/;"	l
ffff8000001098cd	kernel.asm	/^ffff8000001098cd:	ba 20 00 00 00       	mov    $0x20,%edx$/;"	l
ffff8000001098d2	kernel.asm	/^ffff8000001098d2:	48 89 c6             	mov    %rax,%rsi$/;"	l
ffff8000001098d5	kernel.asm	/^ffff8000001098d5:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
ffff8000001098da	kernel.asm	/^ffff8000001098da:	48 b8 65 82 10 00 00 	movabs $0xffff800000108265,%rax$/;"	l
ffff8000001098e1	kernel.asm	/^ffff8000001098e1:	80 ff ff $/;"	l
ffff8000001098e4	kernel.asm	/^ffff8000001098e4:	ff d0                	callq  *%rax$/;"	l
ffff8000001098e6	kernel.asm	/^ffff8000001098e6:	85 c0                	test   %eax,%eax$/;"	l
ffff8000001098e8	kernel.asm	/^ffff8000001098e8:	78 21                	js     ffff80000010990b <sys_mount+0x4a>$/;"	l
ffff8000001098ea	kernel.asm	/^ffff8000001098ea:	48 8d 45 f0          	lea    -0x10(%rbp),%rax$/;"	l
ffff8000001098ee	kernel.asm	/^ffff8000001098ee:	ba 08 00 00 00       	mov    $0x8,%edx$/;"	l
ffff8000001098f3	kernel.asm	/^ffff8000001098f3:	48 89 c6             	mov    %rax,%rsi$/;"	l
ffff8000001098f6	kernel.asm	/^ffff8000001098f6:	bf 01 00 00 00       	mov    $0x1,%edi$/;"	l
ffff8000001098fb	kernel.asm	/^ffff8000001098fb:	48 b8 65 82 10 00 00 	movabs $0xffff800000108265,%rax$/;"	l
ffff800000109902	kernel.asm	/^ffff800000109902:	80 ff ff $/;"	l
ffff800000109905	kernel.asm	/^ffff800000109905:	ff d0                	callq  *%rax$/;"	l
ffff800000109907	kernel.asm	/^ffff800000109907:	85 c0                	test   %eax,%eax$/;"	l
ffff800000109909	kernel.asm	/^ffff800000109909:	74 07                	je     ffff800000109912 <sys_mount+0x51>$/;"	l
ffff80000010990b	kernel.asm	/^ffff80000010990b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff800000109910	kernel.asm	/^ffff800000109910:	eb 4a                	jmp    ffff80000010995c <sys_mount+0x9b>$/;"	l
ffff800000109912	kernel.asm	/^ffff800000109912:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000109916	kernel.asm	/^ffff800000109916:	ba 07 00 00 00       	mov    $0x7,%edx$/;"	l
ffff80000010991b	kernel.asm	/^ffff80000010991b:	48 be 17 c7 10 00 00 	movabs $0xffff80000010c717,%rsi$/;"	l
ffff800000109922	kernel.asm	/^ffff800000109922:	80 ff ff $/;"	l
ffff800000109925	kernel.asm	/^ffff800000109925:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000109928	kernel.asm	/^ffff800000109928:	48 b8 2b 7d 10 00 00 	movabs $0xffff800000107d2b,%rax$/;"	l
ffff80000010992f	kernel.asm	/^ffff80000010992f:	80 ff ff $/;"	l
ffff800000109932	kernel.asm	/^ffff800000109932:	ff d0                	callq  *%rax$/;"	l
ffff800000109934	kernel.asm	/^ffff800000109934:	85 c0                	test   %eax,%eax$/;"	l
ffff800000109936	kernel.asm	/^ffff800000109936:	75 1f                	jne    ffff800000109957 <sys_mount+0x96>$/;"	l
ffff800000109938	kernel.asm	/^ffff800000109938:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010993c	kernel.asm	/^ffff80000010993c:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010993f	kernel.asm	/^ffff80000010993f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000109944	kernel.asm	/^ffff800000109944:	48 ba 61 76 10 00 00 	movabs $0xffff800000107661,%rdx$/;"	l
ffff80000010994b	kernel.asm	/^ffff80000010994b:	80 ff ff $/;"	l
ffff80000010994e	kernel.asm	/^ffff80000010994e:	ff d2                	callq  *%rdx$/;"	l
ffff800000109950	kernel.asm	/^ffff800000109950:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000109955	kernel.asm	/^ffff800000109955:	eb 05                	jmp    ffff80000010995c <sys_mount+0x9b>$/;"	l
ffff800000109957	kernel.asm	/^ffff800000109957:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff80000010995c	kernel.asm	/^ffff80000010995c:	c9                   	leaveq $/;"	l
ffff80000010995d	kernel.asm	/^ffff80000010995d:	c3                   	retq   $/;"	l
ffff80000010995e	kernel.asm	/^ffff80000010995e <alltraps>:$/;"	l
ffff80000010995e	kernel.asm	/^ffff80000010995e:	41 57                	push   %r15$/;"	l
ffff800000109960	kernel.asm	/^ffff800000109960:	41 56                	push   %r14$/;"	l
ffff800000109962	kernel.asm	/^ffff800000109962:	41 55                	push   %r13$/;"	l
ffff800000109964	kernel.asm	/^ffff800000109964:	41 54                	push   %r12$/;"	l
ffff800000109966	kernel.asm	/^ffff800000109966:	41 53                	push   %r11$/;"	l
ffff800000109968	kernel.asm	/^ffff800000109968:	41 52                	push   %r10$/;"	l
ffff80000010996a	kernel.asm	/^ffff80000010996a:	41 51                	push   %r9$/;"	l
ffff80000010996c	kernel.asm	/^ffff80000010996c:	41 50                	push   %r8$/;"	l
ffff80000010996e	kernel.asm	/^ffff80000010996e:	57                   	push   %rdi$/;"	l
ffff80000010996f	kernel.asm	/^ffff80000010996f:	56                   	push   %rsi$/;"	l
ffff800000109970	kernel.asm	/^ffff800000109970:	55                   	push   %rbp$/;"	l
ffff800000109971	kernel.asm	/^ffff800000109971:	52                   	push   %rdx$/;"	l
ffff800000109972	kernel.asm	/^ffff800000109972:	51                   	push   %rcx$/;"	l
ffff800000109973	kernel.asm	/^ffff800000109973:	53                   	push   %rbx$/;"	l
ffff800000109974	kernel.asm	/^ffff800000109974:	50                   	push   %rax$/;"	l
ffff800000109975	kernel.asm	/^ffff800000109975:	48 89 e7             	mov    %rsp,%rdi$/;"	l
ffff800000109978	kernel.asm	/^ffff800000109978:	e8 bd 02 00 00       	callq  ffff800000109c3a <trap>$/;"	l
ffff80000010997d	kernel.asm	/^ffff80000010997d <trapret>:$/;"	l
ffff80000010997d	kernel.asm	/^ffff80000010997d:	58                   	pop    %rax$/;"	l
ffff80000010997e	kernel.asm	/^ffff80000010997e:	5b                   	pop    %rbx$/;"	l
ffff80000010997f	kernel.asm	/^ffff80000010997f:	59                   	pop    %rcx$/;"	l
ffff800000109980	kernel.asm	/^ffff800000109980:	5a                   	pop    %rdx$/;"	l
ffff800000109981	kernel.asm	/^ffff800000109981:	5d                   	pop    %rbp$/;"	l
ffff800000109982	kernel.asm	/^ffff800000109982:	5e                   	pop    %rsi$/;"	l
ffff800000109983	kernel.asm	/^ffff800000109983:	5f                   	pop    %rdi$/;"	l
ffff800000109984	kernel.asm	/^ffff800000109984:	41 58                	pop    %r8$/;"	l
ffff800000109986	kernel.asm	/^ffff800000109986:	41 59                	pop    %r9$/;"	l
ffff800000109988	kernel.asm	/^ffff800000109988:	41 5a                	pop    %r10$/;"	l
ffff80000010998a	kernel.asm	/^ffff80000010998a:	41 5b                	pop    %r11$/;"	l
ffff80000010998c	kernel.asm	/^ffff80000010998c:	41 5c                	pop    %r12$/;"	l
ffff80000010998e	kernel.asm	/^ffff80000010998e:	41 5d                	pop    %r13$/;"	l
ffff800000109990	kernel.asm	/^ffff800000109990:	41 5e                	pop    %r14$/;"	l
ffff800000109992	kernel.asm	/^ffff800000109992:	41 5f                	pop    %r15$/;"	l
ffff800000109994	kernel.asm	/^ffff800000109994:	48 83 c4 10          	add    $0x10,%rsp$/;"	l
ffff800000109998	kernel.asm	/^ffff800000109998:	48 cf                	iretq  $/;"	l
ffff80000010999a	kernel.asm	/^ffff80000010999a <syscall_trap>:$/;"	l
ffff80000010999a	kernel.asm	/^ffff80000010999a:	41 57                	push   %r15$/;"	l
ffff80000010999c	kernel.asm	/^ffff80000010999c:	41 56                	push   %r14$/;"	l
ffff80000010999e	kernel.asm	/^ffff80000010999e:	41 55                	push   %r13$/;"	l
ffff8000001099a0	kernel.asm	/^ffff8000001099a0:	41 54                	push   %r12$/;"	l
ffff8000001099a2	kernel.asm	/^ffff8000001099a2:	41 53                	push   %r11$/;"	l
ffff8000001099a4	kernel.asm	/^ffff8000001099a4:	41 52                	push   %r10$/;"	l
ffff8000001099a6	kernel.asm	/^ffff8000001099a6:	41 51                	push   %r9$/;"	l
ffff8000001099a8	kernel.asm	/^ffff8000001099a8:	41 50                	push   %r8$/;"	l
ffff8000001099aa	kernel.asm	/^ffff8000001099aa:	57                   	push   %rdi$/;"	l
ffff8000001099ab	kernel.asm	/^ffff8000001099ab:	56                   	push   %rsi$/;"	l
ffff8000001099ac	kernel.asm	/^ffff8000001099ac:	55                   	push   %rbp$/;"	l
ffff8000001099ad	kernel.asm	/^ffff8000001099ad:	52                   	push   %rdx$/;"	l
ffff8000001099ae	kernel.asm	/^ffff8000001099ae:	51                   	push   %rcx$/;"	l
ffff8000001099af	kernel.asm	/^ffff8000001099af:	53                   	push   %rbx$/;"	l
ffff8000001099b0	kernel.asm	/^ffff8000001099b0:	50                   	push   %rax$/;"	l
ffff8000001099b1	kernel.asm	/^ffff8000001099b1:	48 89 e7             	mov    %rsp,%rdi$/;"	l
ffff8000001099b4	kernel.asm	/^ffff8000001099b4:	e8 81 02 00 00       	callq  ffff800000109c3a <trap>$/;"	l
ffff8000001099b9	kernel.asm	/^ffff8000001099b9 <syscall_trapret>:$/;"	l
ffff8000001099b9	kernel.asm	/^ffff8000001099b9:	58                   	pop    %rax$/;"	l
ffff8000001099ba	kernel.asm	/^ffff8000001099ba:	5b                   	pop    %rbx$/;"	l
ffff8000001099bb	kernel.asm	/^ffff8000001099bb:	59                   	pop    %rcx$/;"	l
ffff8000001099bc	kernel.asm	/^ffff8000001099bc:	5a                   	pop    %rdx$/;"	l
ffff8000001099bd	kernel.asm	/^ffff8000001099bd:	5d                   	pop    %rbp$/;"	l
ffff8000001099be	kernel.asm	/^ffff8000001099be:	5e                   	pop    %rsi$/;"	l
ffff8000001099bf	kernel.asm	/^ffff8000001099bf:	5f                   	pop    %rdi$/;"	l
ffff8000001099c0	kernel.asm	/^ffff8000001099c0:	41 58                	pop    %r8$/;"	l
ffff8000001099c2	kernel.asm	/^ffff8000001099c2:	41 59                	pop    %r9$/;"	l
ffff8000001099c4	kernel.asm	/^ffff8000001099c4:	41 5a                	pop    %r10$/;"	l
ffff8000001099c6	kernel.asm	/^ffff8000001099c6:	41 5b                	pop    %r11$/;"	l
ffff8000001099c8	kernel.asm	/^ffff8000001099c8:	41 5c                	pop    %r12$/;"	l
ffff8000001099ca	kernel.asm	/^ffff8000001099ca:	41 5d                	pop    %r13$/;"	l
ffff8000001099cc	kernel.asm	/^ffff8000001099cc:	41 5e                	pop    %r14$/;"	l
ffff8000001099ce	kernel.asm	/^ffff8000001099ce:	41 5f                	pop    %r15$/;"	l
ffff8000001099d0	kernel.asm	/^ffff8000001099d0:	48 83 c4 28          	add    $0x28,%rsp$/;"	l
ffff8000001099d4	kernel.asm	/^ffff8000001099d4:	fa                   	cli    $/;"	l
ffff8000001099d5	kernel.asm	/^ffff8000001099d5:	48 8b 24 24          	mov    (%rsp),%rsp$/;"	l
ffff8000001099d9	kernel.asm	/^ffff8000001099d9:	48 0f 07             	sysretq $/;"	l
ffff8000001099dc	kernel.asm	/^ffff8000001099dc <lidt>:$/;"	l
ffff8000001099dc	kernel.asm	/^ffff8000001099dc:	55                   	push   %rbp$/;"	l
ffff8000001099dd	kernel.asm	/^ffff8000001099dd:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff8000001099e0	kernel.asm	/^ffff8000001099e0:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ffff8000001099e4	kernel.asm	/^ffff8000001099e4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
ffff8000001099e8	kernel.asm	/^ffff8000001099e8:	89 75 e4             	mov    %esi,-0x1c(%rbp)$/;"	l
ffff8000001099eb	kernel.asm	/^ffff8000001099eb:	8b 45 e4             	mov    -0x1c(%rbp),%eax$/;"	l
ffff8000001099ee	kernel.asm	/^ffff8000001099ee:	83 e8 01             	sub    $0x1,%eax$/;"	l
ffff8000001099f1	kernel.asm	/^ffff8000001099f1:	66 89 45 f0          	mov    %ax,-0x10(%rbp)$/;"	l
ffff8000001099f5	kernel.asm	/^ffff8000001099f5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff8000001099f9	kernel.asm	/^ffff8000001099f9:	66 89 45 f2          	mov    %ax,-0xe(%rbp)$/;"	l
ffff8000001099fd	kernel.asm	/^ffff8000001099fd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000109a01	kernel.asm	/^ffff800000109a01:	48 c1 e8 10          	shr    $0x10,%rax$/;"	l
ffff800000109a05	kernel.asm	/^ffff800000109a05:	66 89 45 f4          	mov    %ax,-0xc(%rbp)$/;"	l
ffff800000109a09	kernel.asm	/^ffff800000109a09:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000109a0d	kernel.asm	/^ffff800000109a0d:	48 c1 e8 20          	shr    $0x20,%rax$/;"	l
ffff800000109a11	kernel.asm	/^ffff800000109a11:	66 89 45 f6          	mov    %ax,-0xa(%rbp)$/;"	l
ffff800000109a15	kernel.asm	/^ffff800000109a15:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000109a19	kernel.asm	/^ffff800000109a19:	48 c1 e8 30          	shr    $0x30,%rax$/;"	l
ffff800000109a1d	kernel.asm	/^ffff800000109a1d:	66 89 45 f8          	mov    %ax,-0x8(%rbp)$/;"	l
ffff800000109a21	kernel.asm	/^ffff800000109a21:	48 8d 45 f0          	lea    -0x10(%rbp),%rax$/;"	l
ffff800000109a25	kernel.asm	/^ffff800000109a25:	0f 01 18             	lidt   (%rax)$/;"	l
ffff800000109a28	kernel.asm	/^ffff800000109a28:	90                   	nop$/;"	l
ffff800000109a29	kernel.asm	/^ffff800000109a29:	c9                   	leaveq $/;"	l
ffff800000109a2a	kernel.asm	/^ffff800000109a2a:	c3                   	retq   $/;"	l
ffff800000109a2b	kernel.asm	/^ffff800000109a2b <rcr2>:$/;"	l
ffff800000109a2b	kernel.asm	/^ffff800000109a2b:	55                   	push   %rbp$/;"	l
ffff800000109a2c	kernel.asm	/^ffff800000109a2c:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000109a2f	kernel.asm	/^ffff800000109a2f:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff800000109a33	kernel.asm	/^ffff800000109a33:	0f 20 d0             	mov    %cr2,%rax$/;"	l
ffff800000109a36	kernel.asm	/^ffff800000109a36:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff800000109a3a	kernel.asm	/^ffff800000109a3a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000109a3e	kernel.asm	/^ffff800000109a3e:	c9                   	leaveq $/;"	l
ffff800000109a3f	kernel.asm	/^ffff800000109a3f:	c3                   	retq   $/;"	l
ffff800000109a40	kernel.asm	/^ffff800000109a40 <mkgate>:$/;"	l
ffff800000109a40	kernel.asm	/^ffff800000109a40:	55                   	push   %rbp$/;"	l
ffff800000109a41	kernel.asm	/^ffff800000109a41:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000109a44	kernel.asm	/^ffff800000109a44:	48 83 ec 30          	sub    $0x30,%rsp$/;"	l
ffff800000109a48	kernel.asm	/^ffff800000109a48:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
ffff800000109a4c	kernel.asm	/^ffff800000109a4c:	89 75 e4             	mov    %esi,-0x1c(%rbp)$/;"	l
ffff800000109a4f	kernel.asm	/^ffff800000109a4f:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)$/;"	l
ffff800000109a53	kernel.asm	/^ffff800000109a53:	89 4d e0             	mov    %ecx,-0x20(%rbp)$/;"	l
ffff800000109a56	kernel.asm	/^ffff800000109a56:	44 89 45 d4          	mov    %r8d,-0x2c(%rbp)$/;"	l
ffff800000109a5a	kernel.asm	/^ffff800000109a5a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff800000109a5e	kernel.asm	/^ffff800000109a5e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff800000109a62	kernel.asm	/^ffff800000109a62:	c1 65 e4 02          	shll   $0x2,-0x1c(%rbp)$/;"	l
ffff800000109a66	kernel.asm	/^ffff800000109a66:	8b 45 e4             	mov    -0x1c(%rbp),%eax$/;"	l
ffff800000109a69	kernel.asm	/^ffff800000109a69:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx$/;"	l
ffff800000109a70	kernel.asm	/^ffff800000109a70:	00 $/;"	l
ffff800000109a71	kernel.asm	/^ffff800000109a71:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000109a75	kernel.asm	/^ffff800000109a75:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff800000109a78	kernel.asm	/^ffff800000109a78:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx$/;"	l
ffff800000109a7c	kernel.asm	/^ffff800000109a7c:	0f b7 d2             	movzwl %dx,%edx$/;"	l
ffff800000109a7f	kernel.asm	/^ffff800000109a7f:	81 ca 00 00 08 00    	or     $0x80000,%edx$/;"	l
ffff800000109a85	kernel.asm	/^ffff800000109a85:	89 10                	mov    %edx,(%rax)$/;"	l
ffff800000109a87	kernel.asm	/^ffff800000109a87:	8b 45 e4             	mov    -0x1c(%rbp),%eax$/;"	l
ffff800000109a8a	kernel.asm	/^ffff800000109a8a:	83 c0 01             	add    $0x1,%eax$/;"	l
ffff800000109a8d	kernel.asm	/^ffff800000109a8d:	89 c0                	mov    %eax,%eax$/;"	l
ffff800000109a8f	kernel.asm	/^ffff800000109a8f:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx$/;"	l
ffff800000109a96	kernel.asm	/^ffff800000109a96:	00 $/;"	l
ffff800000109a97	kernel.asm	/^ffff800000109a97:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000109a9b	kernel.asm	/^ffff800000109a9b:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff800000109a9e	kernel.asm	/^ffff800000109a9e:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx$/;"	l
ffff800000109aa2	kernel.asm	/^ffff800000109aa2:	89 d1                	mov    %edx,%ecx$/;"	l
ffff800000109aa4	kernel.asm	/^ffff800000109aa4:	66 b9 00 00          	mov    $0x0,%cx$/;"	l
ffff800000109aa8	kernel.asm	/^ffff800000109aa8:	8b 55 e0             	mov    -0x20(%rbp),%edx$/;"	l
ffff800000109aab	kernel.asm	/^ffff800000109aab:	83 e2 03             	and    $0x3,%edx$/;"	l
ffff800000109aae	kernel.asm	/^ffff800000109aae:	c1 e2 0d             	shl    $0xd,%edx$/;"	l
ffff800000109ab1	kernel.asm	/^ffff800000109ab1:	09 ca                	or     %ecx,%edx$/;"	l
ffff800000109ab3	kernel.asm	/^ffff800000109ab3:	80 ce 8e             	or     $0x8e,%dh$/;"	l
ffff800000109ab6	kernel.asm	/^ffff800000109ab6:	89 10                	mov    %edx,(%rax)$/;"	l
ffff800000109ab8	kernel.asm	/^ffff800000109ab8:	83 7d d4 00          	cmpl   $0x0,-0x2c(%rbp)$/;"	l
ffff800000109abc	kernel.asm	/^ffff800000109abc:	74 35                	je     ffff800000109af3 <mkgate+0xb3>$/;"	l
ffff800000109abe	kernel.asm	/^ffff800000109abe:	8b 45 e4             	mov    -0x1c(%rbp),%eax$/;"	l
ffff800000109ac1	kernel.asm	/^ffff800000109ac1:	83 c0 01             	add    $0x1,%eax$/;"	l
ffff800000109ac4	kernel.asm	/^ffff800000109ac4:	89 c0                	mov    %eax,%eax$/;"	l
ffff800000109ac6	kernel.asm	/^ffff800000109ac6:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx$/;"	l
ffff800000109acd	kernel.asm	/^ffff800000109acd:	00 $/;"	l
ffff800000109ace	kernel.asm	/^ffff800000109ace:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000109ad2	kernel.asm	/^ffff800000109ad2:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff800000109ad5	kernel.asm	/^ffff800000109ad5:	8b 55 e4             	mov    -0x1c(%rbp),%edx$/;"	l
ffff800000109ad8	kernel.asm	/^ffff800000109ad8:	83 c2 01             	add    $0x1,%edx$/;"	l
ffff800000109adb	kernel.asm	/^ffff800000109adb:	89 d2                	mov    %edx,%edx$/;"	l
ffff800000109add	kernel.asm	/^ffff800000109add:	48 8d 0c 95 00 00 00 	lea    0x0(,%rdx,4),%rcx$/;"	l
ffff800000109ae4	kernel.asm	/^ffff800000109ae4:	00 $/;"	l
ffff800000109ae5	kernel.asm	/^ffff800000109ae5:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx$/;"	l
ffff800000109ae9	kernel.asm	/^ffff800000109ae9:	48 01 ca             	add    %rcx,%rdx$/;"	l
ffff800000109aec	kernel.asm	/^ffff800000109aec:	8b 12                	mov    (%rdx),%edx$/;"	l
ffff800000109aee	kernel.asm	/^ffff800000109aee:	80 ce 01             	or     $0x1,%dh$/;"	l
ffff800000109af1	kernel.asm	/^ffff800000109af1:	89 10                	mov    %edx,(%rax)$/;"	l
ffff800000109af3	kernel.asm	/^ffff800000109af3:	8b 45 e4             	mov    -0x1c(%rbp),%eax$/;"	l
ffff800000109af6	kernel.asm	/^ffff800000109af6:	83 c0 02             	add    $0x2,%eax$/;"	l
ffff800000109af9	kernel.asm	/^ffff800000109af9:	89 c0                	mov    %eax,%eax$/;"	l
ffff800000109afb	kernel.asm	/^ffff800000109afb:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx$/;"	l
ffff800000109b02	kernel.asm	/^ffff800000109b02:	00 $/;"	l
ffff800000109b03	kernel.asm	/^ffff800000109b03:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000109b07	kernel.asm	/^ffff800000109b07:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff800000109b0a	kernel.asm	/^ffff800000109b0a:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx$/;"	l
ffff800000109b0e	kernel.asm	/^ffff800000109b0e:	48 c1 ea 20          	shr    $0x20,%rdx$/;"	l
ffff800000109b12	kernel.asm	/^ffff800000109b12:	89 10                	mov    %edx,(%rax)$/;"	l
ffff800000109b14	kernel.asm	/^ffff800000109b14:	8b 45 e4             	mov    -0x1c(%rbp),%eax$/;"	l
ffff800000109b17	kernel.asm	/^ffff800000109b17:	83 c0 03             	add    $0x3,%eax$/;"	l
ffff800000109b1a	kernel.asm	/^ffff800000109b1a:	89 c0                	mov    %eax,%eax$/;"	l
ffff800000109b1c	kernel.asm	/^ffff800000109b1c:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx$/;"	l
ffff800000109b23	kernel.asm	/^ffff800000109b23:	00 $/;"	l
ffff800000109b24	kernel.asm	/^ffff800000109b24:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000109b28	kernel.asm	/^ffff800000109b28:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff800000109b2b	kernel.asm	/^ffff800000109b2b:	c7 00 00 00 00 00    	movl   $0x0,(%rax)$/;"	l
ffff800000109b31	kernel.asm	/^ffff800000109b31:	90                   	nop$/;"	l
ffff800000109b32	kernel.asm	/^ffff800000109b32:	c9                   	leaveq $/;"	l
ffff800000109b33	kernel.asm	/^ffff800000109b33:	c3                   	retq   $/;"	l
ffff800000109b34	kernel.asm	/^ffff800000109b34 <idtinit>:$/;"	l
ffff800000109b34	kernel.asm	/^ffff800000109b34:	55                   	push   %rbp$/;"	l
ffff800000109b35	kernel.asm	/^ffff800000109b35:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000109b38	kernel.asm	/^ffff800000109b38:	48 b8 e0 c4 11 00 00 	movabs $0xffff80000011c4e0,%rax$/;"	l
ffff800000109b3f	kernel.asm	/^ffff800000109b3f:	80 ff ff $/;"	l
ffff800000109b42	kernel.asm	/^ffff800000109b42:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff800000109b45	kernel.asm	/^ffff800000109b45:	be 00 10 00 00       	mov    $0x1000,%esi$/;"	l
ffff800000109b4a	kernel.asm	/^ffff800000109b4a:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000109b4d	kernel.asm	/^ffff800000109b4d:	48 b8 dc 99 10 00 00 	movabs $0xffff8000001099dc,%rax$/;"	l
ffff800000109b54	kernel.asm	/^ffff800000109b54:	80 ff ff $/;"	l
ffff800000109b57	kernel.asm	/^ffff800000109b57:	ff d0                	callq  *%rax$/;"	l
ffff800000109b59	kernel.asm	/^ffff800000109b59:	90                   	nop$/;"	l
ffff800000109b5a	kernel.asm	/^ffff800000109b5a:	5d                   	pop    %rbp$/;"	l
ffff800000109b5b	kernel.asm	/^ffff800000109b5b:	c3                   	retq   $/;"	l
ffff800000109b5c	kernel.asm	/^ffff800000109b5c <tvinit>:$/;"	l
ffff800000109b5c	kernel.asm	/^ffff800000109b5c:	55                   	push   %rbp$/;"	l
ffff800000109b5d	kernel.asm	/^ffff800000109b5d:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000109b60	kernel.asm	/^ffff800000109b60:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff800000109b64	kernel.asm	/^ffff800000109b64:	48 b8 95 41 10 00 00 	movabs $0xffff800000104195,%rax$/;"	l
ffff800000109b6b	kernel.asm	/^ffff800000109b6b:	80 ff ff $/;"	l
ffff800000109b6e	kernel.asm	/^ffff800000109b6e:	ff d0                	callq  *%rax$/;"	l
ffff800000109b70	kernel.asm	/^ffff800000109b70:	48 89 c2             	mov    %rax,%rdx$/;"	l
ffff800000109b73	kernel.asm	/^ffff800000109b73:	48 b8 e0 c4 11 00 00 	movabs $0xffff80000011c4e0,%rax$/;"	l
ffff800000109b7a	kernel.asm	/^ffff800000109b7a:	80 ff ff $/;"	l
ffff800000109b7d	kernel.asm	/^ffff800000109b7d:	48 89 10             	mov    %rdx,(%rax)$/;"	l
ffff800000109b80	kernel.asm	/^ffff800000109b80:	48 b8 e0 c4 11 00 00 	movabs $0xffff80000011c4e0,%rax$/;"	l
ffff800000109b87	kernel.asm	/^ffff800000109b87:	80 ff ff $/;"	l
ffff800000109b8a	kernel.asm	/^ffff800000109b8a:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff800000109b8d	kernel.asm	/^ffff800000109b8d:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
ffff800000109b92	kernel.asm	/^ffff800000109b92:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffff800000109b97	kernel.asm	/^ffff800000109b97:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000109b9a	kernel.asm	/^ffff800000109b9a:	48 b8 9d 7c 10 00 00 	movabs $0xffff800000107c9d,%rax$/;"	l
ffff800000109ba1	kernel.asm	/^ffff800000109ba1:	80 ff ff $/;"	l
ffff800000109ba4	kernel.asm	/^ffff800000109ba4:	ff d0                	callq  *%rax$/;"	l
ffff800000109ba6	kernel.asm	/^ffff800000109ba6:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)$/;"	l
ffff800000109bad	kernel.asm	/^ffff800000109bad:	eb 42                	jmp    ffff800000109bf1 <tvinit+0x95>$/;"	l
ffff800000109baf	kernel.asm	/^ffff800000109baf:	48 b8 d8 da 10 00 00 	movabs $0xffff80000010dad8,%rax$/;"	l
ffff800000109bb6	kernel.asm	/^ffff800000109bb6:	80 ff ff $/;"	l
ffff800000109bb9	kernel.asm	/^ffff800000109bb9:	8b 55 fc             	mov    -0x4(%rbp),%edx$/;"	l
ffff800000109bbc	kernel.asm	/^ffff800000109bbc:	48 63 d2             	movslq %edx,%rdx$/;"	l
ffff800000109bbf	kernel.asm	/^ffff800000109bbf:	48 8b 14 d0          	mov    (%rax,%rdx,8),%rdx$/;"	l
ffff800000109bc3	kernel.asm	/^ffff800000109bc3:	8b 75 fc             	mov    -0x4(%rbp),%esi$/;"	l
ffff800000109bc6	kernel.asm	/^ffff800000109bc6:	48 b8 e0 c4 11 00 00 	movabs $0xffff80000011c4e0,%rax$/;"	l
ffff800000109bcd	kernel.asm	/^ffff800000109bcd:	80 ff ff $/;"	l
ffff800000109bd0	kernel.asm	/^ffff800000109bd0:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff800000109bd3	kernel.asm	/^ffff800000109bd3:	41 b8 00 00 00 00    	mov    $0x0,%r8d$/;"	l
ffff800000109bd9	kernel.asm	/^ffff800000109bd9:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
ffff800000109bde	kernel.asm	/^ffff800000109bde:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000109be1	kernel.asm	/^ffff800000109be1:	48 b8 40 9a 10 00 00 	movabs $0xffff800000109a40,%rax$/;"	l
ffff800000109be8	kernel.asm	/^ffff800000109be8:	80 ff ff $/;"	l
ffff800000109beb	kernel.asm	/^ffff800000109beb:	ff d0                	callq  *%rax$/;"	l
ffff800000109bed	kernel.asm	/^ffff800000109bed:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)$/;"	l
ffff800000109bf1	kernel.asm	/^ffff800000109bf1:	81 7d fc ff 00 00 00 	cmpl   $0xff,-0x4(%rbp)$/;"	l
ffff800000109bf8	kernel.asm	/^ffff800000109bf8:	7e b5                	jle    ffff800000109baf <tvinit+0x53>$/;"	l
ffff800000109bfa	kernel.asm	/^ffff800000109bfa:	48 b8 d8 da 10 00 00 	movabs $0xffff80000010dad8,%rax$/;"	l
ffff800000109c01	kernel.asm	/^ffff800000109c01:	80 ff ff $/;"	l
ffff800000109c04	kernel.asm	/^ffff800000109c04:	48 8b 90 00 02 00 00 	mov    0x200(%rax),%rdx$/;"	l
ffff800000109c0b	kernel.asm	/^ffff800000109c0b:	48 b8 e0 c4 11 00 00 	movabs $0xffff80000011c4e0,%rax$/;"	l
ffff800000109c12	kernel.asm	/^ffff800000109c12:	80 ff ff $/;"	l
ffff800000109c15	kernel.asm	/^ffff800000109c15:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff800000109c18	kernel.asm	/^ffff800000109c18:	41 b8 01 00 00 00    	mov    $0x1,%r8d$/;"	l
ffff800000109c1e	kernel.asm	/^ffff800000109c1e:	b9 03 00 00 00       	mov    $0x3,%ecx$/;"	l
ffff800000109c23	kernel.asm	/^ffff800000109c23:	be 40 00 00 00       	mov    $0x40,%esi$/;"	l
ffff800000109c28	kernel.asm	/^ffff800000109c28:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000109c2b	kernel.asm	/^ffff800000109c2b:	48 b8 40 9a 10 00 00 	movabs $0xffff800000109a40,%rax$/;"	l
ffff800000109c32	kernel.asm	/^ffff800000109c32:	80 ff ff $/;"	l
ffff800000109c35	kernel.asm	/^ffff800000109c35:	ff d0                	callq  *%rax$/;"	l
ffff800000109c37	kernel.asm	/^ffff800000109c37:	90                   	nop$/;"	l
ffff800000109c38	kernel.asm	/^ffff800000109c38:	c9                   	leaveq $/;"	l
ffff800000109c39	kernel.asm	/^ffff800000109c39:	c3                   	retq   $/;"	l
ffff800000109c3a	kernel.asm	/^ffff800000109c3a <trap>:$/;"	l
ffff800000109c3a	kernel.asm	/^ffff800000109c3a:	55                   	push   %rbp$/;"	l
ffff800000109c3b	kernel.asm	/^ffff800000109c3b:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000109c3e	kernel.asm	/^ffff800000109c3e:	41 54                	push   %r12$/;"	l
ffff800000109c40	kernel.asm	/^ffff800000109c40:	53                   	push   %rbx$/;"	l
ffff800000109c41	kernel.asm	/^ffff800000109c41:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff800000109c45	kernel.asm	/^ffff800000109c45:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
ffff800000109c49	kernel.asm	/^ffff800000109c49:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000109c4d	kernel.asm	/^ffff800000109c4d:	48 8b 40 78          	mov    0x78(%rax),%rax$/;"	l
ffff800000109c51	kernel.asm	/^ffff800000109c51:	48 83 f8 40          	cmp    $0x40,%rax$/;"	l
ffff800000109c55	kernel.asm	/^ffff800000109c55:	75 64                	jne    ffff800000109cbb <trap+0x81>$/;"	l
ffff800000109c57	kernel.asm	/^ffff800000109c57:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000109c5e	kernel.asm	/^ffff800000109c5e:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000109c62	kernel.asm	/^ffff800000109c62:	8b 40 40             	mov    0x40(%rax),%eax$/;"	l
ffff800000109c65	kernel.asm	/^ffff800000109c65:	85 c0                	test   %eax,%eax$/;"	l
ffff800000109c67	kernel.asm	/^ffff800000109c67:	74 0c                	je     ffff800000109c75 <trap+0x3b>$/;"	l
ffff800000109c69	kernel.asm	/^ffff800000109c69:	48 b8 7d 67 10 00 00 	movabs $0xffff80000010677d,%rax$/;"	l
ffff800000109c70	kernel.asm	/^ffff800000109c70:	80 ff ff $/;"	l
ffff800000109c73	kernel.asm	/^ffff800000109c73:	ff d0                	callq  *%rax$/;"	l
ffff800000109c75	kernel.asm	/^ffff800000109c75:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000109c7c	kernel.asm	/^ffff800000109c7c:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000109c80	kernel.asm	/^ffff800000109c80:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx$/;"	l
ffff800000109c84	kernel.asm	/^ffff800000109c84:	48 89 50 28          	mov    %rdx,0x28(%rax)$/;"	l
ffff800000109c88	kernel.asm	/^ffff800000109c88:	48 b8 44 83 10 00 00 	movabs $0xffff800000108344,%rax$/;"	l
ffff800000109c8f	kernel.asm	/^ffff800000109c8f:	80 ff ff $/;"	l
ffff800000109c92	kernel.asm	/^ffff800000109c92:	ff d0                	callq  *%rax$/;"	l
ffff800000109c94	kernel.asm	/^ffff800000109c94:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000109c9b	kernel.asm	/^ffff800000109c9b:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000109c9f	kernel.asm	/^ffff800000109c9f:	8b 40 40             	mov    0x40(%rax),%eax$/;"	l
ffff800000109ca2	kernel.asm	/^ffff800000109ca2:	85 c0                	test   %eax,%eax$/;"	l
ffff800000109ca4	kernel.asm	/^ffff800000109ca4:	0f 84 8e 03 00 00    	je     ffff80000010a038 <trap+0x3fe>$/;"	l
ffff800000109caa	kernel.asm	/^ffff800000109caa:	48 b8 7d 67 10 00 00 	movabs $0xffff80000010677d,%rax$/;"	l
ffff800000109cb1	kernel.asm	/^ffff800000109cb1:	80 ff ff $/;"	l
ffff800000109cb4	kernel.asm	/^ffff800000109cb4:	ff d0                	callq  *%rax$/;"	l
ffff800000109cb6	kernel.asm	/^ffff800000109cb6:	e9 7d 03 00 00       	jmpq   ffff80000010a038 <trap+0x3fe>$/;"	l
ffff800000109cbb	kernel.asm	/^ffff800000109cbb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000109cbf	kernel.asm	/^ffff800000109cbf:	48 8b 40 78          	mov    0x78(%rax),%rax$/;"	l
ffff800000109cc3	kernel.asm	/^ffff800000109cc3:	48 83 e8 20          	sub    $0x20,%rax$/;"	l
ffff800000109cc7	kernel.asm	/^ffff800000109cc7:	48 83 f8 1f          	cmp    $0x1f,%rax$/;"	l
ffff800000109ccb	kernel.asm	/^ffff800000109ccb:	0f 87 46 01 00 00    	ja     ffff800000109e17 <trap+0x1dd>$/;"	l
ffff800000109cd1	kernel.asm	/^ffff800000109cd1:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx$/;"	l
ffff800000109cd8	kernel.asm	/^ffff800000109cd8:	00 $/;"	l
ffff800000109cd9	kernel.asm	/^ffff800000109cd9:	48 b8 d8 c7 10 00 00 	movabs $0xffff80000010c7d8,%rax$/;"	l
ffff800000109ce0	kernel.asm	/^ffff800000109ce0:	80 ff ff $/;"	l
ffff800000109ce3	kernel.asm	/^ffff800000109ce3:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff800000109ce6	kernel.asm	/^ffff800000109ce6:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff800000109ce9	kernel.asm	/^ffff800000109ce9:	ff e0                	jmpq   *%rax$/;"	l
ffff800000109ceb	kernel.asm	/^ffff800000109ceb:	48 b8 ed 46 10 00 00 	movabs $0xffff8000001046ed,%rax$/;"	l
ffff800000109cf2	kernel.asm	/^ffff800000109cf2:	80 ff ff $/;"	l
ffff800000109cf5	kernel.asm	/^ffff800000109cf5:	ff d0                	callq  *%rax$/;"	l
ffff800000109cf7	kernel.asm	/^ffff800000109cf7:	85 c0                	test   %eax,%eax$/;"	l
ffff800000109cf9	kernel.asm	/^ffff800000109cf9:	75 5d                	jne    ffff800000109d58 <trap+0x11e>$/;"	l
ffff800000109cfb	kernel.asm	/^ffff800000109cfb:	48 bf 00 c5 11 00 00 	movabs $0xffff80000011c500,%rdi$/;"	l
ffff800000109d02	kernel.asm	/^ffff800000109d02:	80 ff ff $/;"	l
ffff800000109d05	kernel.asm	/^ffff800000109d05:	48 b8 01 79 10 00 00 	movabs $0xffff800000107901,%rax$/;"	l
ffff800000109d0c	kernel.asm	/^ffff800000109d0c:	80 ff ff $/;"	l
ffff800000109d0f	kernel.asm	/^ffff800000109d0f:	ff d0                	callq  *%rax$/;"	l
ffff800000109d11	kernel.asm	/^ffff800000109d11:	48 b8 68 c5 11 00 00 	movabs $0xffff80000011c568,%rax$/;"	l
ffff800000109d18	kernel.asm	/^ffff800000109d18:	80 ff ff $/;"	l
ffff800000109d1b	kernel.asm	/^ffff800000109d1b:	8b 00                	mov    (%rax),%eax$/;"	l
ffff800000109d1d	kernel.asm	/^ffff800000109d1d:	8d 50 01             	lea    0x1(%rax),%edx$/;"	l
ffff800000109d20	kernel.asm	/^ffff800000109d20:	48 b8 68 c5 11 00 00 	movabs $0xffff80000011c568,%rax$/;"	l
ffff800000109d27	kernel.asm	/^ffff800000109d27:	80 ff ff $/;"	l
ffff800000109d2a	kernel.asm	/^ffff800000109d2a:	89 10                	mov    %edx,(%rax)$/;"	l
ffff800000109d2c	kernel.asm	/^ffff800000109d2c:	48 bf 68 c5 11 00 00 	movabs $0xffff80000011c568,%rdi$/;"	l
ffff800000109d33	kernel.asm	/^ffff800000109d33:	80 ff ff $/;"	l
ffff800000109d36	kernel.asm	/^ffff800000109d36:	48 b8 19 6f 10 00 00 	movabs $0xffff800000106f19,%rax$/;"	l
ffff800000109d3d	kernel.asm	/^ffff800000109d3d:	80 ff ff $/;"	l
ffff800000109d40	kernel.asm	/^ffff800000109d40:	ff d0                	callq  *%rax$/;"	l
ffff800000109d42	kernel.asm	/^ffff800000109d42:	48 bf 00 c5 11 00 00 	movabs $0xffff80000011c500,%rdi$/;"	l
ffff800000109d49	kernel.asm	/^ffff800000109d49:	80 ff ff $/;"	l
ffff800000109d4c	kernel.asm	/^ffff800000109d4c:	48 b8 9a 79 10 00 00 	movabs $0xffff80000010799a,%rax$/;"	l
ffff800000109d53	kernel.asm	/^ffff800000109d53:	80 ff ff $/;"	l
ffff800000109d56	kernel.asm	/^ffff800000109d56:	ff d0                	callq  *%rax$/;"	l
ffff800000109d58	kernel.asm	/^ffff800000109d58:	48 b8 f5 47 10 00 00 	movabs $0xffff8000001047f5,%rax$/;"	l
ffff800000109d5f	kernel.asm	/^ffff800000109d5f:	80 ff ff $/;"	l
ffff800000109d62	kernel.asm	/^ffff800000109d62:	ff d0                	callq  *%rax$/;"	l
ffff800000109d64	kernel.asm	/^ffff800000109d64:	e9 0c 02 00 00       	jmpq   ffff800000109f75 <trap+0x33b>$/;"	l
ffff800000109d69	kernel.asm	/^ffff800000109d69:	48 b8 95 3b 10 00 00 	movabs $0xffff800000103b95,%rax$/;"	l
ffff800000109d70	kernel.asm	/^ffff800000109d70:	80 ff ff $/;"	l
ffff800000109d73	kernel.asm	/^ffff800000109d73:	ff d0                	callq  *%rax$/;"	l
ffff800000109d75	kernel.asm	/^ffff800000109d75:	48 b8 f5 47 10 00 00 	movabs $0xffff8000001047f5,%rax$/;"	l
ffff800000109d7c	kernel.asm	/^ffff800000109d7c:	80 ff ff $/;"	l
ffff800000109d7f	kernel.asm	/^ffff800000109d7f:	ff d0                	callq  *%rax$/;"	l
ffff800000109d81	kernel.asm	/^ffff800000109d81:	e9 ef 01 00 00       	jmpq   ffff800000109f75 <trap+0x33b>$/;"	l
ffff800000109d86	kernel.asm	/^ffff800000109d86:	48 b8 ac 44 10 00 00 	movabs $0xffff8000001044ac,%rax$/;"	l
ffff800000109d8d	kernel.asm	/^ffff800000109d8d:	80 ff ff $/;"	l
ffff800000109d90	kernel.asm	/^ffff800000109d90:	ff d0                	callq  *%rax$/;"	l
ffff800000109d92	kernel.asm	/^ffff800000109d92:	48 b8 f5 47 10 00 00 	movabs $0xffff8000001047f5,%rax$/;"	l
ffff800000109d99	kernel.asm	/^ffff800000109d99:	80 ff ff $/;"	l
ffff800000109d9c	kernel.asm	/^ffff800000109d9c:	ff d0                	callq  *%rax$/;"	l
ffff800000109d9e	kernel.asm	/^ffff800000109d9e:	e9 d2 01 00 00       	jmpq   ffff800000109f75 <trap+0x33b>$/;"	l
ffff800000109da3	kernel.asm	/^ffff800000109da3:	48 b8 9f a2 10 00 00 	movabs $0xffff80000010a29f,%rax$/;"	l
ffff800000109daa	kernel.asm	/^ffff800000109daa:	80 ff ff $/;"	l
ffff800000109dad	kernel.asm	/^ffff800000109dad:	ff d0                	callq  *%rax$/;"	l
ffff800000109daf	kernel.asm	/^ffff800000109daf:	48 b8 f5 47 10 00 00 	movabs $0xffff8000001047f5,%rax$/;"	l
ffff800000109db6	kernel.asm	/^ffff800000109db6:	80 ff ff $/;"	l
ffff800000109db9	kernel.asm	/^ffff800000109db9:	ff d0                	callq  *%rax$/;"	l
ffff800000109dbb	kernel.asm	/^ffff800000109dbb:	e9 b5 01 00 00       	jmpq   ffff800000109f75 <trap+0x33b>$/;"	l
ffff800000109dc0	kernel.asm	/^ffff800000109dc0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000109dc4	kernel.asm	/^ffff800000109dc4:	4c 8b a0 88 00 00 00 	mov    0x88(%rax),%r12$/;"	l
ffff800000109dcb	kernel.asm	/^ffff800000109dcb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000109dcf	kernel.asm	/^ffff800000109dcf:	48 8b 98 90 00 00 00 	mov    0x90(%rax),%rbx$/;"	l
ffff800000109dd6	kernel.asm	/^ffff800000109dd6:	48 b8 ed 46 10 00 00 	movabs $0xffff8000001046ed,%rax$/;"	l
ffff800000109ddd	kernel.asm	/^ffff800000109ddd:	80 ff ff $/;"	l
ffff800000109de0	kernel.asm	/^ffff800000109de0:	ff d0                	callq  *%rax$/;"	l
ffff800000109de2	kernel.asm	/^ffff800000109de2:	4c 89 e1             	mov    %r12,%rcx$/;"	l
ffff800000109de5	kernel.asm	/^ffff800000109de5:	48 89 da             	mov    %rbx,%rdx$/;"	l
ffff800000109de8	kernel.asm	/^ffff800000109de8:	89 c6                	mov    %eax,%esi$/;"	l
ffff800000109dea	kernel.asm	/^ffff800000109dea:	48 bf 20 c7 10 00 00 	movabs $0xffff80000010c720,%rdi$/;"	l
ffff800000109df1	kernel.asm	/^ffff800000109df1:	80 ff ff $/;"	l
ffff800000109df4	kernel.asm	/^ffff800000109df4:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000109df9	kernel.asm	/^ffff800000109df9:	49 b8 ac 07 10 00 00 	movabs $0xffff8000001007ac,%r8$/;"	l
ffff800000109e00	kernel.asm	/^ffff800000109e00:	80 ff ff $/;"	l
ffff800000109e03	kernel.asm	/^ffff800000109e03:	41 ff d0             	callq  *%r8$/;"	l
ffff800000109e06	kernel.asm	/^ffff800000109e06:	48 b8 f5 47 10 00 00 	movabs $0xffff8000001047f5,%rax$/;"	l
ffff800000109e0d	kernel.asm	/^ffff800000109e0d:	80 ff ff $/;"	l
ffff800000109e10	kernel.asm	/^ffff800000109e10:	ff d0                	callq  *%rax$/;"	l
ffff800000109e12	kernel.asm	/^ffff800000109e12:	e9 5e 01 00 00       	jmpq   ffff800000109f75 <trap+0x33b>$/;"	l
ffff800000109e17	kernel.asm	/^ffff800000109e17:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000109e1e	kernel.asm	/^ffff800000109e1e:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000109e22	kernel.asm	/^ffff800000109e22:	48 85 c0             	test   %rax,%rax$/;"	l
ffff800000109e25	kernel.asm	/^ffff800000109e25:	74 17                	je     ffff800000109e3e <trap+0x204>$/;"	l
ffff800000109e27	kernel.asm	/^ffff800000109e27:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000109e2b	kernel.asm	/^ffff800000109e2b:	48 8b 80 90 00 00 00 	mov    0x90(%rax),%rax$/;"	l
ffff800000109e32	kernel.asm	/^ffff800000109e32:	83 e0 03             	and    $0x3,%eax$/;"	l
ffff800000109e35	kernel.asm	/^ffff800000109e35:	48 85 c0             	test   %rax,%rax$/;"	l
ffff800000109e38	kernel.asm	/^ffff800000109e38:	0f 85 96 00 00 00    	jne    ffff800000109ed4 <trap+0x29a>$/;"	l
ffff800000109e3e	kernel.asm	/^ffff800000109e3e:	48 b8 2b 9a 10 00 00 	movabs $0xffff800000109a2b,%rax$/;"	l
ffff800000109e45	kernel.asm	/^ffff800000109e45:	80 ff ff $/;"	l
ffff800000109e48	kernel.asm	/^ffff800000109e48:	ff d0                	callq  *%rax$/;"	l
ffff800000109e4a	kernel.asm	/^ffff800000109e4a:	49 89 c4             	mov    %rax,%r12$/;"	l
ffff800000109e4d	kernel.asm	/^ffff800000109e4d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000109e51	kernel.asm	/^ffff800000109e51:	48 8b 98 88 00 00 00 	mov    0x88(%rax),%rbx$/;"	l
ffff800000109e58	kernel.asm	/^ffff800000109e58:	48 b8 ed 46 10 00 00 	movabs $0xffff8000001046ed,%rax$/;"	l
ffff800000109e5f	kernel.asm	/^ffff800000109e5f:	80 ff ff $/;"	l
ffff800000109e62	kernel.asm	/^ffff800000109e62:	ff d0                	callq  *%rax$/;"	l
ffff800000109e64	kernel.asm	/^ffff800000109e64:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000109e66	kernel.asm	/^ffff800000109e66:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000109e6a	kernel.asm	/^ffff800000109e6a:	48 8b 40 78          	mov    0x78(%rax),%rax$/;"	l
ffff800000109e6e	kernel.asm	/^ffff800000109e6e:	4d 89 e0             	mov    %r12,%r8$/;"	l
ffff800000109e71	kernel.asm	/^ffff800000109e71:	48 89 d9             	mov    %rbx,%rcx$/;"	l
ffff800000109e74	kernel.asm	/^ffff800000109e74:	48 89 c6             	mov    %rax,%rsi$/;"	l
ffff800000109e77	kernel.asm	/^ffff800000109e77:	48 bf 48 c7 10 00 00 	movabs $0xffff80000010c748,%rdi$/;"	l
ffff800000109e7e	kernel.asm	/^ffff800000109e7e:	80 ff ff $/;"	l
ffff800000109e81	kernel.asm	/^ffff800000109e81:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000109e86	kernel.asm	/^ffff800000109e86:	49 b9 ac 07 10 00 00 	movabs $0xffff8000001007ac,%r9$/;"	l
ffff800000109e8d	kernel.asm	/^ffff800000109e8d:	80 ff ff $/;"	l
ffff800000109e90	kernel.asm	/^ffff800000109e90:	41 ff d1             	callq  *%r9$/;"	l
ffff800000109e93	kernel.asm	/^ffff800000109e93:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000109e9a	kernel.asm	/^ffff800000109e9a:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000109e9e	kernel.asm	/^ffff800000109e9e:	8b 40 1c             	mov    0x1c(%rax),%eax$/;"	l
ffff800000109ea1	kernel.asm	/^ffff800000109ea1:	89 c6                	mov    %eax,%esi$/;"	l
ffff800000109ea3	kernel.asm	/^ffff800000109ea3:	48 bf 7a c7 10 00 00 	movabs $0xffff80000010c77a,%rdi$/;"	l
ffff800000109eaa	kernel.asm	/^ffff800000109eaa:	80 ff ff $/;"	l
ffff800000109ead	kernel.asm	/^ffff800000109ead:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000109eb2	kernel.asm	/^ffff800000109eb2:	48 ba ac 07 10 00 00 	movabs $0xffff8000001007ac,%rdx$/;"	l
ffff800000109eb9	kernel.asm	/^ffff800000109eb9:	80 ff ff $/;"	l
ffff800000109ebc	kernel.asm	/^ffff800000109ebc:	ff d2                	callq  *%rdx$/;"	l
ffff800000109ebe	kernel.asm	/^ffff800000109ebe:	48 bf 87 c7 10 00 00 	movabs $0xffff80000010c787,%rdi$/;"	l
ffff800000109ec5	kernel.asm	/^ffff800000109ec5:	80 ff ff $/;"	l
ffff800000109ec8	kernel.asm	/^ffff800000109ec8:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff800000109ecf	kernel.asm	/^ffff800000109ecf:	80 ff ff $/;"	l
ffff800000109ed2	kernel.asm	/^ffff800000109ed2:	ff d0                	callq  *%rax$/;"	l
ffff800000109ed4	kernel.asm	/^ffff800000109ed4:	48 b8 2b 9a 10 00 00 	movabs $0xffff800000109a2b,%rax$/;"	l
ffff800000109edb	kernel.asm	/^ffff800000109edb:	80 ff ff $/;"	l
ffff800000109ede	kernel.asm	/^ffff800000109ede:	ff d0                	callq  *%rax$/;"	l
ffff800000109ee0	kernel.asm	/^ffff800000109ee0:	49 89 c4             	mov    %rax,%r12$/;"	l
ffff800000109ee3	kernel.asm	/^ffff800000109ee3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000109ee7	kernel.asm	/^ffff800000109ee7:	48 8b 98 88 00 00 00 	mov    0x88(%rax),%rbx$/;"	l
ffff800000109eee	kernel.asm	/^ffff800000109eee:	48 b8 ed 46 10 00 00 	movabs $0xffff8000001046ed,%rax$/;"	l
ffff800000109ef5	kernel.asm	/^ffff800000109ef5:	80 ff ff $/;"	l
ffff800000109ef8	kernel.asm	/^ffff800000109ef8:	ff d0                	callq  *%rax$/;"	l
ffff800000109efa	kernel.asm	/^ffff800000109efa:	89 c7                	mov    %eax,%edi$/;"	l
ffff800000109efc	kernel.asm	/^ffff800000109efc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000109f00	kernel.asm	/^ffff800000109f00:	48 8b 88 80 00 00 00 	mov    0x80(%rax),%rcx$/;"	l
ffff800000109f07	kernel.asm	/^ffff800000109f07:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000109f0b	kernel.asm	/^ffff800000109f0b:	48 8b 50 78          	mov    0x78(%rax),%rdx$/;"	l
ffff800000109f0f	kernel.asm	/^ffff800000109f0f:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000109f16	kernel.asm	/^ffff800000109f16:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000109f1a	kernel.asm	/^ffff800000109f1a:	48 8d b0 d0 00 00 00 	lea    0xd0(%rax),%rsi$/;"	l
ffff800000109f21	kernel.asm	/^ffff800000109f21:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000109f28	kernel.asm	/^ffff800000109f28:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000109f2c	kernel.asm	/^ffff800000109f2c:	8b 40 1c             	mov    0x1c(%rax),%eax$/;"	l
ffff800000109f2f	kernel.asm	/^ffff800000109f2f:	41 54                	push   %r12$/;"	l
ffff800000109f31	kernel.asm	/^ffff800000109f31:	53                   	push   %rbx$/;"	l
ffff800000109f32	kernel.asm	/^ffff800000109f32:	41 89 f9             	mov    %edi,%r9d$/;"	l
ffff800000109f35	kernel.asm	/^ffff800000109f35:	49 89 c8             	mov    %rcx,%r8$/;"	l
ffff800000109f38	kernel.asm	/^ffff800000109f38:	48 89 d1             	mov    %rdx,%rcx$/;"	l
ffff800000109f3b	kernel.asm	/^ffff800000109f3b:	48 89 f2             	mov    %rsi,%rdx$/;"	l
ffff800000109f3e	kernel.asm	/^ffff800000109f3e:	89 c6                	mov    %eax,%esi$/;"	l
ffff800000109f40	kernel.asm	/^ffff800000109f40:	48 bf 90 c7 10 00 00 	movabs $0xffff80000010c790,%rdi$/;"	l
ffff800000109f47	kernel.asm	/^ffff800000109f47:	80 ff ff $/;"	l
ffff800000109f4a	kernel.asm	/^ffff800000109f4a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000109f4f	kernel.asm	/^ffff800000109f4f:	49 ba ac 07 10 00 00 	movabs $0xffff8000001007ac,%r10$/;"	l
ffff800000109f56	kernel.asm	/^ffff800000109f56:	80 ff ff $/;"	l
ffff800000109f59	kernel.asm	/^ffff800000109f59:	41 ff d2             	callq  *%r10$/;"	l
ffff800000109f5c	kernel.asm	/^ffff800000109f5c:	48 83 c4 10          	add    $0x10,%rsp$/;"	l
ffff800000109f60	kernel.asm	/^ffff800000109f60:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000109f67	kernel.asm	/^ffff800000109f67:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000109f6b	kernel.asm	/^ffff800000109f6b:	c7 40 40 01 00 00 00 	movl   $0x1,0x40(%rax)$/;"	l
ffff800000109f72	kernel.asm	/^ffff800000109f72:	eb 01                	jmp    ffff800000109f75 <trap+0x33b>$/;"	l
ffff800000109f74	kernel.asm	/^ffff800000109f74:	90                   	nop$/;"	l
ffff800000109f75	kernel.asm	/^ffff800000109f75:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000109f7c	kernel.asm	/^ffff800000109f7c:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000109f80	kernel.asm	/^ffff800000109f80:	48 85 c0             	test   %rax,%rax$/;"	l
ffff800000109f83	kernel.asm	/^ffff800000109f83:	74 32                	je     ffff800000109fb7 <trap+0x37d>$/;"	l
ffff800000109f85	kernel.asm	/^ffff800000109f85:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000109f8c	kernel.asm	/^ffff800000109f8c:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000109f90	kernel.asm	/^ffff800000109f90:	8b 40 40             	mov    0x40(%rax),%eax$/;"	l
ffff800000109f93	kernel.asm	/^ffff800000109f93:	85 c0                	test   %eax,%eax$/;"	l
ffff800000109f95	kernel.asm	/^ffff800000109f95:	74 20                	je     ffff800000109fb7 <trap+0x37d>$/;"	l
ffff800000109f97	kernel.asm	/^ffff800000109f97:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000109f9b	kernel.asm	/^ffff800000109f9b:	48 8b 80 90 00 00 00 	mov    0x90(%rax),%rax$/;"	l
ffff800000109fa2	kernel.asm	/^ffff800000109fa2:	83 e0 03             	and    $0x3,%eax$/;"	l
ffff800000109fa5	kernel.asm	/^ffff800000109fa5:	48 83 f8 03          	cmp    $0x3,%rax$/;"	l
ffff800000109fa9	kernel.asm	/^ffff800000109fa9:	75 0c                	jne    ffff800000109fb7 <trap+0x37d>$/;"	l
ffff800000109fab	kernel.asm	/^ffff800000109fab:	48 b8 7d 67 10 00 00 	movabs $0xffff80000010677d,%rax$/;"	l
ffff800000109fb2	kernel.asm	/^ffff800000109fb2:	80 ff ff $/;"	l
ffff800000109fb5	kernel.asm	/^ffff800000109fb5:	ff d0                	callq  *%rax$/;"	l
ffff800000109fb7	kernel.asm	/^ffff800000109fb7:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000109fbe	kernel.asm	/^ffff800000109fbe:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000109fc2	kernel.asm	/^ffff800000109fc2:	48 85 c0             	test   %rax,%rax$/;"	l
ffff800000109fc5	kernel.asm	/^ffff800000109fc5:	74 2d                	je     ffff800000109ff4 <trap+0x3ba>$/;"	l
ffff800000109fc7	kernel.asm	/^ffff800000109fc7:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000109fce	kernel.asm	/^ffff800000109fce:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000109fd2	kernel.asm	/^ffff800000109fd2:	8b 40 18             	mov    0x18(%rax),%eax$/;"	l
ffff800000109fd5	kernel.asm	/^ffff800000109fd5:	83 f8 04             	cmp    $0x4,%eax$/;"	l
ffff800000109fd8	kernel.asm	/^ffff800000109fd8:	75 1a                	jne    ffff800000109ff4 <trap+0x3ba>$/;"	l
ffff800000109fda	kernel.asm	/^ffff800000109fda:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000109fde	kernel.asm	/^ffff800000109fde:	48 8b 40 78          	mov    0x78(%rax),%rax$/;"	l
ffff800000109fe2	kernel.asm	/^ffff800000109fe2:	48 83 f8 20          	cmp    $0x20,%rax$/;"	l
ffff800000109fe6	kernel.asm	/^ffff800000109fe6:	75 0c                	jne    ffff800000109ff4 <trap+0x3ba>$/;"	l
ffff800000109fe8	kernel.asm	/^ffff800000109fe8:	48 b8 01 6d 10 00 00 	movabs $0xffff800000106d01,%rax$/;"	l
ffff800000109fef	kernel.asm	/^ffff800000109fef:	80 ff ff $/;"	l
ffff800000109ff2	kernel.asm	/^ffff800000109ff2:	ff d0                	callq  *%rax$/;"	l
ffff800000109ff4	kernel.asm	/^ffff800000109ff4:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000109ffb	kernel.asm	/^ffff800000109ffb:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000109fff	kernel.asm	/^ffff800000109fff:	48 85 c0             	test   %rax,%rax$/;"	l
ffff80000010a002	kernel.asm	/^ffff80000010a002:	74 35                	je     ffff80000010a039 <trap+0x3ff>$/;"	l
ffff80000010a004	kernel.asm	/^ffff80000010a004:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff80000010a00b	kernel.asm	/^ffff80000010a00b:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff80000010a00f	kernel.asm	/^ffff80000010a00f:	8b 40 40             	mov    0x40(%rax),%eax$/;"	l
ffff80000010a012	kernel.asm	/^ffff80000010a012:	85 c0                	test   %eax,%eax$/;"	l
ffff80000010a014	kernel.asm	/^ffff80000010a014:	74 23                	je     ffff80000010a039 <trap+0x3ff>$/;"	l
ffff80000010a016	kernel.asm	/^ffff80000010a016:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010a01a	kernel.asm	/^ffff80000010a01a:	48 8b 80 90 00 00 00 	mov    0x90(%rax),%rax$/;"	l
ffff80000010a021	kernel.asm	/^ffff80000010a021:	83 e0 03             	and    $0x3,%eax$/;"	l
ffff80000010a024	kernel.asm	/^ffff80000010a024:	48 83 f8 03          	cmp    $0x3,%rax$/;"	l
ffff80000010a028	kernel.asm	/^ffff80000010a028:	75 0f                	jne    ffff80000010a039 <trap+0x3ff>$/;"	l
ffff80000010a02a	kernel.asm	/^ffff80000010a02a:	48 b8 7d 67 10 00 00 	movabs $0xffff80000010677d,%rax$/;"	l
ffff80000010a031	kernel.asm	/^ffff80000010a031:	80 ff ff $/;"	l
ffff80000010a034	kernel.asm	/^ffff80000010a034:	ff d0                	callq  *%rax$/;"	l
ffff80000010a036	kernel.asm	/^ffff80000010a036:	eb 01                	jmp    ffff80000010a039 <trap+0x3ff>$/;"	l
ffff80000010a038	kernel.asm	/^ffff80000010a038:	90                   	nop$/;"	l
ffff80000010a039	kernel.asm	/^ffff80000010a039:	48 8d 65 f0          	lea    -0x10(%rbp),%rsp$/;"	l
ffff80000010a03d	kernel.asm	/^ffff80000010a03d:	5b                   	pop    %rbx$/;"	l
ffff80000010a03e	kernel.asm	/^ffff80000010a03e:	41 5c                	pop    %r12$/;"	l
ffff80000010a040	kernel.asm	/^ffff80000010a040:	5d                   	pop    %rbp$/;"	l
ffff80000010a041	kernel.asm	/^ffff80000010a041:	c3                   	retq   $/;"	l
ffff80000010a042	kernel.asm	/^ffff80000010a042 <inb>:$/;"	l
ffff80000010a042	kernel.asm	/^ffff80000010a042:	55                   	push   %rbp$/;"	l
ffff80000010a043	kernel.asm	/^ffff80000010a043:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010a046	kernel.asm	/^ffff80000010a046:	48 83 ec 18          	sub    $0x18,%rsp$/;"	l
ffff80000010a04a	kernel.asm	/^ffff80000010a04a:	89 f8                	mov    %edi,%eax$/;"	l
ffff80000010a04c	kernel.asm	/^ffff80000010a04c:	66 89 45 ec          	mov    %ax,-0x14(%rbp)$/;"	l
ffff80000010a050	kernel.asm	/^ffff80000010a050:	0f b7 45 ec          	movzwl -0x14(%rbp),%eax$/;"	l
ffff80000010a054	kernel.asm	/^ffff80000010a054:	89 c2                	mov    %eax,%edx$/;"	l
ffff80000010a056	kernel.asm	/^ffff80000010a056:	ec                   	in     (%dx),%al$/;"	l
ffff80000010a057	kernel.asm	/^ffff80000010a057:	88 45 ff             	mov    %al,-0x1(%rbp)$/;"	l
ffff80000010a05a	kernel.asm	/^ffff80000010a05a:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax$/;"	l
ffff80000010a05e	kernel.asm	/^ffff80000010a05e:	c9                   	leaveq $/;"	l
ffff80000010a05f	kernel.asm	/^ffff80000010a05f:	c3                   	retq   $/;"	l
ffff80000010a060	kernel.asm	/^ffff80000010a060 <outb>:$/;"	l
ffff80000010a060	kernel.asm	/^ffff80000010a060:	55                   	push   %rbp$/;"	l
ffff80000010a061	kernel.asm	/^ffff80000010a061:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010a064	kernel.asm	/^ffff80000010a064:	48 83 ec 08          	sub    $0x8,%rsp$/;"	l
ffff80000010a068	kernel.asm	/^ffff80000010a068:	89 fa                	mov    %edi,%edx$/;"	l
ffff80000010a06a	kernel.asm	/^ffff80000010a06a:	89 f0                	mov    %esi,%eax$/;"	l
ffff80000010a06c	kernel.asm	/^ffff80000010a06c:	66 89 55 fc          	mov    %dx,-0x4(%rbp)$/;"	l
ffff80000010a070	kernel.asm	/^ffff80000010a070:	88 45 f8             	mov    %al,-0x8(%rbp)$/;"	l
ffff80000010a073	kernel.asm	/^ffff80000010a073:	0f b6 45 f8          	movzbl -0x8(%rbp),%eax$/;"	l
ffff80000010a077	kernel.asm	/^ffff80000010a077:	0f b7 55 fc          	movzwl -0x4(%rbp),%edx$/;"	l
ffff80000010a07b	kernel.asm	/^ffff80000010a07b:	ee                   	out    %al,(%dx)$/;"	l
ffff80000010a07c	kernel.asm	/^ffff80000010a07c:	90                   	nop$/;"	l
ffff80000010a07d	kernel.asm	/^ffff80000010a07d:	c9                   	leaveq $/;"	l
ffff80000010a07e	kernel.asm	/^ffff80000010a07e:	c3                   	retq   $/;"	l
ffff80000010a07f	kernel.asm	/^ffff80000010a07f <uartearlyinit>:$/;"	l
ffff80000010a07f	kernel.asm	/^ffff80000010a07f:	55                   	push   %rbp$/;"	l
ffff80000010a080	kernel.asm	/^ffff80000010a080:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010a083	kernel.asm	/^ffff80000010a083:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff80000010a087	kernel.asm	/^ffff80000010a087:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffff80000010a08c	kernel.asm	/^ffff80000010a08c:	bf fa 03 00 00       	mov    $0x3fa,%edi$/;"	l
ffff80000010a091	kernel.asm	/^ffff80000010a091:	48 b8 60 a0 10 00 00 	movabs $0xffff80000010a060,%rax$/;"	l
ffff80000010a098	kernel.asm	/^ffff80000010a098:	80 ff ff $/;"	l
ffff80000010a09b	kernel.asm	/^ffff80000010a09b:	ff d0                	callq  *%rax$/;"	l
ffff80000010a09d	kernel.asm	/^ffff80000010a09d:	be 80 00 00 00       	mov    $0x80,%esi$/;"	l
ffff80000010a0a2	kernel.asm	/^ffff80000010a0a2:	bf fb 03 00 00       	mov    $0x3fb,%edi$/;"	l
ffff80000010a0a7	kernel.asm	/^ffff80000010a0a7:	48 b8 60 a0 10 00 00 	movabs $0xffff80000010a060,%rax$/;"	l
ffff80000010a0ae	kernel.asm	/^ffff80000010a0ae:	80 ff ff $/;"	l
ffff80000010a0b1	kernel.asm	/^ffff80000010a0b1:	ff d0                	callq  *%rax$/;"	l
ffff80000010a0b3	kernel.asm	/^ffff80000010a0b3:	be 0c 00 00 00       	mov    $0xc,%esi$/;"	l
ffff80000010a0b8	kernel.asm	/^ffff80000010a0b8:	bf f8 03 00 00       	mov    $0x3f8,%edi$/;"	l
ffff80000010a0bd	kernel.asm	/^ffff80000010a0bd:	48 b8 60 a0 10 00 00 	movabs $0xffff80000010a060,%rax$/;"	l
ffff80000010a0c4	kernel.asm	/^ffff80000010a0c4:	80 ff ff $/;"	l
ffff80000010a0c7	kernel.asm	/^ffff80000010a0c7:	ff d0                	callq  *%rax$/;"	l
ffff80000010a0c9	kernel.asm	/^ffff80000010a0c9:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffff80000010a0ce	kernel.asm	/^ffff80000010a0ce:	bf f9 03 00 00       	mov    $0x3f9,%edi$/;"	l
ffff80000010a0d3	kernel.asm	/^ffff80000010a0d3:	48 b8 60 a0 10 00 00 	movabs $0xffff80000010a060,%rax$/;"	l
ffff80000010a0da	kernel.asm	/^ffff80000010a0da:	80 ff ff $/;"	l
ffff80000010a0dd	kernel.asm	/^ffff80000010a0dd:	ff d0                	callq  *%rax$/;"	l
ffff80000010a0df	kernel.asm	/^ffff80000010a0df:	be 03 00 00 00       	mov    $0x3,%esi$/;"	l
ffff80000010a0e4	kernel.asm	/^ffff80000010a0e4:	bf fb 03 00 00       	mov    $0x3fb,%edi$/;"	l
ffff80000010a0e9	kernel.asm	/^ffff80000010a0e9:	48 b8 60 a0 10 00 00 	movabs $0xffff80000010a060,%rax$/;"	l
ffff80000010a0f0	kernel.asm	/^ffff80000010a0f0:	80 ff ff $/;"	l
ffff80000010a0f3	kernel.asm	/^ffff80000010a0f3:	ff d0                	callq  *%rax$/;"	l
ffff80000010a0f5	kernel.asm	/^ffff80000010a0f5:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffff80000010a0fa	kernel.asm	/^ffff80000010a0fa:	bf fc 03 00 00       	mov    $0x3fc,%edi$/;"	l
ffff80000010a0ff	kernel.asm	/^ffff80000010a0ff:	48 b8 60 a0 10 00 00 	movabs $0xffff80000010a060,%rax$/;"	l
ffff80000010a106	kernel.asm	/^ffff80000010a106:	80 ff ff $/;"	l
ffff80000010a109	kernel.asm	/^ffff80000010a109:	ff d0                	callq  *%rax$/;"	l
ffff80000010a10b	kernel.asm	/^ffff80000010a10b:	be 01 00 00 00       	mov    $0x1,%esi$/;"	l
ffff80000010a110	kernel.asm	/^ffff80000010a110:	bf f9 03 00 00       	mov    $0x3f9,%edi$/;"	l
ffff80000010a115	kernel.asm	/^ffff80000010a115:	48 b8 60 a0 10 00 00 	movabs $0xffff80000010a060,%rax$/;"	l
ffff80000010a11c	kernel.asm	/^ffff80000010a11c:	80 ff ff $/;"	l
ffff80000010a11f	kernel.asm	/^ffff80000010a11f:	ff d0                	callq  *%rax$/;"	l
ffff80000010a121	kernel.asm	/^ffff80000010a121:	bf fd 03 00 00       	mov    $0x3fd,%edi$/;"	l
ffff80000010a126	kernel.asm	/^ffff80000010a126:	48 b8 42 a0 10 00 00 	movabs $0xffff80000010a042,%rax$/;"	l
ffff80000010a12d	kernel.asm	/^ffff80000010a12d:	80 ff ff $/;"	l
ffff80000010a130	kernel.asm	/^ffff80000010a130:	ff d0                	callq  *%rax$/;"	l
ffff80000010a132	kernel.asm	/^ffff80000010a132:	3c ff                	cmp    $0xff,%al$/;"	l
ffff80000010a134	kernel.asm	/^ffff80000010a134:	74 4a                	je     ffff80000010a180 <uartearlyinit+0x101>$/;"	l
ffff80000010a136	kernel.asm	/^ffff80000010a136:	48 b8 6c c5 11 00 00 	movabs $0xffff80000011c56c,%rax$/;"	l
ffff80000010a13d	kernel.asm	/^ffff80000010a13d:	80 ff ff $/;"	l
ffff80000010a140	kernel.asm	/^ffff80000010a140:	c7 00 01 00 00 00    	movl   $0x1,(%rax)$/;"	l
ffff80000010a146	kernel.asm	/^ffff80000010a146:	48 b8 d8 c8 10 00 00 	movabs $0xffff80000010c8d8,%rax$/;"	l
ffff80000010a14d	kernel.asm	/^ffff80000010a14d:	80 ff ff $/;"	l
ffff80000010a150	kernel.asm	/^ffff80000010a150:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff80000010a154	kernel.asm	/^ffff80000010a154:	eb 1d                	jmp    ffff80000010a173 <uartearlyinit+0xf4>$/;"	l
ffff80000010a156	kernel.asm	/^ffff80000010a156:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010a15a	kernel.asm	/^ffff80000010a15a:	0f b6 00             	movzbl (%rax),%eax$/;"	l
ffff80000010a15d	kernel.asm	/^ffff80000010a15d:	0f be c0             	movsbl %al,%eax$/;"	l
ffff80000010a160	kernel.asm	/^ffff80000010a160:	89 c7                	mov    %eax,%edi$/;"	l
ffff80000010a162	kernel.asm	/^ffff80000010a162:	48 b8 d4 a1 10 00 00 	movabs $0xffff80000010a1d4,%rax$/;"	l
ffff80000010a169	kernel.asm	/^ffff80000010a169:	80 ff ff $/;"	l
ffff80000010a16c	kernel.asm	/^ffff80000010a16c:	ff d0                	callq  *%rax$/;"	l
ffff80000010a16e	kernel.asm	/^ffff80000010a16e:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)$/;"	l
ffff80000010a173	kernel.asm	/^ffff80000010a173:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010a177	kernel.asm	/^ffff80000010a177:	0f b6 00             	movzbl (%rax),%eax$/;"	l
ffff80000010a17a	kernel.asm	/^ffff80000010a17a:	84 c0                	test   %al,%al$/;"	l
ffff80000010a17c	kernel.asm	/^ffff80000010a17c:	75 d8                	jne    ffff80000010a156 <uartearlyinit+0xd7>$/;"	l
ffff80000010a17e	kernel.asm	/^ffff80000010a17e:	eb 01                	jmp    ffff80000010a181 <uartearlyinit+0x102>$/;"	l
ffff80000010a180	kernel.asm	/^ffff80000010a180:	90                   	nop$/;"	l
ffff80000010a181	kernel.asm	/^ffff80000010a181:	c9                   	leaveq $/;"	l
ffff80000010a182	kernel.asm	/^ffff80000010a182:	c3                   	retq   $/;"	l
ffff80000010a183	kernel.asm	/^ffff80000010a183 <uartinit>:$/;"	l
ffff80000010a183	kernel.asm	/^ffff80000010a183:	55                   	push   %rbp$/;"	l
ffff80000010a184	kernel.asm	/^ffff80000010a184:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010a187	kernel.asm	/^ffff80000010a187:	48 b8 6c c5 11 00 00 	movabs $0xffff80000011c56c,%rax$/;"	l
ffff80000010a18e	kernel.asm	/^ffff80000010a18e:	80 ff ff $/;"	l
ffff80000010a191	kernel.asm	/^ffff80000010a191:	8b 00                	mov    (%rax),%eax$/;"	l
ffff80000010a193	kernel.asm	/^ffff80000010a193:	85 c0                	test   %eax,%eax$/;"	l
ffff80000010a195	kernel.asm	/^ffff80000010a195:	74 3a                	je     ffff80000010a1d1 <uartinit+0x4e>$/;"	l
ffff80000010a197	kernel.asm	/^ffff80000010a197:	bf fa 03 00 00       	mov    $0x3fa,%edi$/;"	l
ffff80000010a19c	kernel.asm	/^ffff80000010a19c:	48 b8 42 a0 10 00 00 	movabs $0xffff80000010a042,%rax$/;"	l
ffff80000010a1a3	kernel.asm	/^ffff80000010a1a3:	80 ff ff $/;"	l
ffff80000010a1a6	kernel.asm	/^ffff80000010a1a6:	ff d0                	callq  *%rax$/;"	l
ffff80000010a1a8	kernel.asm	/^ffff80000010a1a8:	bf f8 03 00 00       	mov    $0x3f8,%edi$/;"	l
ffff80000010a1ad	kernel.asm	/^ffff80000010a1ad:	48 b8 42 a0 10 00 00 	movabs $0xffff80000010a042,%rax$/;"	l
ffff80000010a1b4	kernel.asm	/^ffff80000010a1b4:	80 ff ff $/;"	l
ffff80000010a1b7	kernel.asm	/^ffff80000010a1b7:	ff d0                	callq  *%rax$/;"	l
ffff80000010a1b9	kernel.asm	/^ffff80000010a1b9:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffff80000010a1be	kernel.asm	/^ffff80000010a1be:	bf 04 00 00 00       	mov    $0x4,%edi$/;"	l
ffff80000010a1c3	kernel.asm	/^ffff80000010a1c3:	48 b8 5b 3f 10 00 00 	movabs $0xffff800000103f5b,%rax$/;"	l
ffff80000010a1ca	kernel.asm	/^ffff80000010a1ca:	80 ff ff $/;"	l
ffff80000010a1cd	kernel.asm	/^ffff80000010a1cd:	ff d0                	callq  *%rax$/;"	l
ffff80000010a1cf	kernel.asm	/^ffff80000010a1cf:	eb 01                	jmp    ffff80000010a1d2 <uartinit+0x4f>$/;"	l
ffff80000010a1d1	kernel.asm	/^ffff80000010a1d1:	90                   	nop$/;"	l
ffff80000010a1d2	kernel.asm	/^ffff80000010a1d2:	5d                   	pop    %rbp$/;"	l
ffff80000010a1d3	kernel.asm	/^ffff80000010a1d3:	c3                   	retq   $/;"	l
ffff80000010a1d4	kernel.asm	/^ffff80000010a1d4 <uartputc>:$/;"	l
ffff80000010a1d4	kernel.asm	/^ffff80000010a1d4:	55                   	push   %rbp$/;"	l
ffff80000010a1d5	kernel.asm	/^ffff80000010a1d5:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010a1d8	kernel.asm	/^ffff80000010a1d8:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ffff80000010a1dc	kernel.asm	/^ffff80000010a1dc:	89 7d ec             	mov    %edi,-0x14(%rbp)$/;"	l
ffff80000010a1df	kernel.asm	/^ffff80000010a1df:	48 b8 6c c5 11 00 00 	movabs $0xffff80000011c56c,%rax$/;"	l
ffff80000010a1e6	kernel.asm	/^ffff80000010a1e6:	80 ff ff $/;"	l
ffff80000010a1e9	kernel.asm	/^ffff80000010a1e9:	8b 00                	mov    (%rax),%eax$/;"	l
ffff80000010a1eb	kernel.asm	/^ffff80000010a1eb:	85 c0                	test   %eax,%eax$/;"	l
ffff80000010a1ed	kernel.asm	/^ffff80000010a1ed:	74 5a                	je     ffff80000010a249 <uartputc+0x75>$/;"	l
ffff80000010a1ef	kernel.asm	/^ffff80000010a1ef:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)$/;"	l
ffff80000010a1f6	kernel.asm	/^ffff80000010a1f6:	eb 15                	jmp    ffff80000010a20d <uartputc+0x39>$/;"	l
ffff80000010a1f8	kernel.asm	/^ffff80000010a1f8:	bf 0a 00 00 00       	mov    $0xa,%edi$/;"	l
ffff80000010a1fd	kernel.asm	/^ffff80000010a1fd:	48 b8 24 48 10 00 00 	movabs $0xffff800000104824,%rax$/;"	l
ffff80000010a204	kernel.asm	/^ffff80000010a204:	80 ff ff $/;"	l
ffff80000010a207	kernel.asm	/^ffff80000010a207:	ff d0                	callq  *%rax$/;"	l
ffff80000010a209	kernel.asm	/^ffff80000010a209:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)$/;"	l
ffff80000010a20d	kernel.asm	/^ffff80000010a20d:	83 7d fc 7f          	cmpl   $0x7f,-0x4(%rbp)$/;"	l
ffff80000010a211	kernel.asm	/^ffff80000010a211:	7f 1b                	jg     ffff80000010a22e <uartputc+0x5a>$/;"	l
ffff80000010a213	kernel.asm	/^ffff80000010a213:	bf fd 03 00 00       	mov    $0x3fd,%edi$/;"	l
ffff80000010a218	kernel.asm	/^ffff80000010a218:	48 b8 42 a0 10 00 00 	movabs $0xffff80000010a042,%rax$/;"	l
ffff80000010a21f	kernel.asm	/^ffff80000010a21f:	80 ff ff $/;"	l
ffff80000010a222	kernel.asm	/^ffff80000010a222:	ff d0                	callq  *%rax$/;"	l
ffff80000010a224	kernel.asm	/^ffff80000010a224:	0f b6 c0             	movzbl %al,%eax$/;"	l
ffff80000010a227	kernel.asm	/^ffff80000010a227:	83 e0 20             	and    $0x20,%eax$/;"	l
ffff80000010a22a	kernel.asm	/^ffff80000010a22a:	85 c0                	test   %eax,%eax$/;"	l
ffff80000010a22c	kernel.asm	/^ffff80000010a22c:	74 ca                	je     ffff80000010a1f8 <uartputc+0x24>$/;"	l
ffff80000010a22e	kernel.asm	/^ffff80000010a22e:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
ffff80000010a231	kernel.asm	/^ffff80000010a231:	0f b6 c0             	movzbl %al,%eax$/;"	l
ffff80000010a234	kernel.asm	/^ffff80000010a234:	89 c6                	mov    %eax,%esi$/;"	l
ffff80000010a236	kernel.asm	/^ffff80000010a236:	bf f8 03 00 00       	mov    $0x3f8,%edi$/;"	l
ffff80000010a23b	kernel.asm	/^ffff80000010a23b:	48 b8 60 a0 10 00 00 	movabs $0xffff80000010a060,%rax$/;"	l
ffff80000010a242	kernel.asm	/^ffff80000010a242:	80 ff ff $/;"	l
ffff80000010a245	kernel.asm	/^ffff80000010a245:	ff d0                	callq  *%rax$/;"	l
ffff80000010a247	kernel.asm	/^ffff80000010a247:	eb 01                	jmp    ffff80000010a24a <uartputc+0x76>$/;"	l
ffff80000010a249	kernel.asm	/^ffff80000010a249:	90                   	nop$/;"	l
ffff80000010a24a	kernel.asm	/^ffff80000010a24a:	c9                   	leaveq $/;"	l
ffff80000010a24b	kernel.asm	/^ffff80000010a24b:	c3                   	retq   $/;"	l
ffff80000010a24c	kernel.asm	/^ffff80000010a24c <uartgetc>:$/;"	l
ffff80000010a24c	kernel.asm	/^ffff80000010a24c:	55                   	push   %rbp$/;"	l
ffff80000010a24d	kernel.asm	/^ffff80000010a24d:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010a250	kernel.asm	/^ffff80000010a250:	48 b8 6c c5 11 00 00 	movabs $0xffff80000011c56c,%rax$/;"	l
ffff80000010a257	kernel.asm	/^ffff80000010a257:	80 ff ff $/;"	l
ffff80000010a25a	kernel.asm	/^ffff80000010a25a:	8b 00                	mov    (%rax),%eax$/;"	l
ffff80000010a25c	kernel.asm	/^ffff80000010a25c:	85 c0                	test   %eax,%eax$/;"	l
ffff80000010a25e	kernel.asm	/^ffff80000010a25e:	75 07                	jne    ffff80000010a267 <uartgetc+0x1b>$/;"	l
ffff80000010a260	kernel.asm	/^ffff80000010a260:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff80000010a265	kernel.asm	/^ffff80000010a265:	eb 36                	jmp    ffff80000010a29d <uartgetc+0x51>$/;"	l
ffff80000010a267	kernel.asm	/^ffff80000010a267:	bf fd 03 00 00       	mov    $0x3fd,%edi$/;"	l
ffff80000010a26c	kernel.asm	/^ffff80000010a26c:	48 b8 42 a0 10 00 00 	movabs $0xffff80000010a042,%rax$/;"	l
ffff80000010a273	kernel.asm	/^ffff80000010a273:	80 ff ff $/;"	l
ffff80000010a276	kernel.asm	/^ffff80000010a276:	ff d0                	callq  *%rax$/;"	l
ffff80000010a278	kernel.asm	/^ffff80000010a278:	0f b6 c0             	movzbl %al,%eax$/;"	l
ffff80000010a27b	kernel.asm	/^ffff80000010a27b:	83 e0 01             	and    $0x1,%eax$/;"	l
ffff80000010a27e	kernel.asm	/^ffff80000010a27e:	85 c0                	test   %eax,%eax$/;"	l
ffff80000010a280	kernel.asm	/^ffff80000010a280:	75 07                	jne    ffff80000010a289 <uartgetc+0x3d>$/;"	l
ffff80000010a282	kernel.asm	/^ffff80000010a282:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff80000010a287	kernel.asm	/^ffff80000010a287:	eb 14                	jmp    ffff80000010a29d <uartgetc+0x51>$/;"	l
ffff80000010a289	kernel.asm	/^ffff80000010a289:	bf f8 03 00 00       	mov    $0x3f8,%edi$/;"	l
ffff80000010a28e	kernel.asm	/^ffff80000010a28e:	48 b8 42 a0 10 00 00 	movabs $0xffff80000010a042,%rax$/;"	l
ffff80000010a295	kernel.asm	/^ffff80000010a295:	80 ff ff $/;"	l
ffff80000010a298	kernel.asm	/^ffff80000010a298:	ff d0                	callq  *%rax$/;"	l
ffff80000010a29a	kernel.asm	/^ffff80000010a29a:	0f b6 c0             	movzbl %al,%eax$/;"	l
ffff80000010a29d	kernel.asm	/^ffff80000010a29d:	5d                   	pop    %rbp$/;"	l
ffff80000010a29e	kernel.asm	/^ffff80000010a29e:	c3                   	retq   $/;"	l
ffff80000010a29f	kernel.asm	/^ffff80000010a29f <uartintr>:$/;"	l
ffff80000010a29f	kernel.asm	/^ffff80000010a29f:	55                   	push   %rbp$/;"	l
ffff80000010a2a0	kernel.asm	/^ffff80000010a2a0:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010a2a3	kernel.asm	/^ffff80000010a2a3:	48 bf 4c a2 10 00 00 	movabs $0xffff80000010a24c,%rdi$/;"	l
ffff80000010a2aa	kernel.asm	/^ffff80000010a2aa:	80 ff ff $/;"	l
ffff80000010a2ad	kernel.asm	/^ffff80000010a2ad:	48 b8 c7 0e 10 00 00 	movabs $0xffff800000100ec7,%rax$/;"	l
ffff80000010a2b4	kernel.asm	/^ffff80000010a2b4:	80 ff ff $/;"	l
ffff80000010a2b7	kernel.asm	/^ffff80000010a2b7:	ff d0                	callq  *%rax$/;"	l
ffff80000010a2b9	kernel.asm	/^ffff80000010a2b9:	90                   	nop$/;"	l
ffff80000010a2ba	kernel.asm	/^ffff80000010a2ba:	5d                   	pop    %rbp$/;"	l
ffff80000010a2bb	kernel.asm	/^ffff80000010a2bb:	c3                   	retq   $/;"	l
ffff80000010a2bc	kernel.asm	/^ffff80000010a2bc <vector0>:$/;"	l
ffff80000010a2bc	kernel.asm	/^ffff80000010a2bc:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a2be	kernel.asm	/^ffff80000010a2be:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a2c0	kernel.asm	/^ffff80000010a2c0:	e9 99 f6 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a2c5	kernel.asm	/^ffff80000010a2c5 <vector1>:$/;"	l
ffff80000010a2c5	kernel.asm	/^ffff80000010a2c5:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a2c7	kernel.asm	/^ffff80000010a2c7:	6a 01                	pushq  $0x1$/;"	l
ffff80000010a2c9	kernel.asm	/^ffff80000010a2c9:	e9 90 f6 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a2ce	kernel.asm	/^ffff80000010a2ce <vector2>:$/;"	l
ffff80000010a2ce	kernel.asm	/^ffff80000010a2ce:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a2d0	kernel.asm	/^ffff80000010a2d0:	6a 02                	pushq  $0x2$/;"	l
ffff80000010a2d2	kernel.asm	/^ffff80000010a2d2:	e9 87 f6 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a2d7	kernel.asm	/^ffff80000010a2d7 <vector3>:$/;"	l
ffff80000010a2d7	kernel.asm	/^ffff80000010a2d7:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a2d9	kernel.asm	/^ffff80000010a2d9:	6a 03                	pushq  $0x3$/;"	l
ffff80000010a2db	kernel.asm	/^ffff80000010a2db:	e9 7e f6 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a2e0	kernel.asm	/^ffff80000010a2e0 <vector4>:$/;"	l
ffff80000010a2e0	kernel.asm	/^ffff80000010a2e0:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a2e2	kernel.asm	/^ffff80000010a2e2:	6a 04                	pushq  $0x4$/;"	l
ffff80000010a2e4	kernel.asm	/^ffff80000010a2e4:	e9 75 f6 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a2e9	kernel.asm	/^ffff80000010a2e9 <vector5>:$/;"	l
ffff80000010a2e9	kernel.asm	/^ffff80000010a2e9:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a2eb	kernel.asm	/^ffff80000010a2eb:	6a 05                	pushq  $0x5$/;"	l
ffff80000010a2ed	kernel.asm	/^ffff80000010a2ed:	e9 6c f6 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a2f2	kernel.asm	/^ffff80000010a2f2 <vector6>:$/;"	l
ffff80000010a2f2	kernel.asm	/^ffff80000010a2f2:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a2f4	kernel.asm	/^ffff80000010a2f4:	6a 06                	pushq  $0x6$/;"	l
ffff80000010a2f6	kernel.asm	/^ffff80000010a2f6:	e9 63 f6 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a2fb	kernel.asm	/^ffff80000010a2fb <vector7>:$/;"	l
ffff80000010a2fb	kernel.asm	/^ffff80000010a2fb:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a2fd	kernel.asm	/^ffff80000010a2fd:	6a 07                	pushq  $0x7$/;"	l
ffff80000010a2ff	kernel.asm	/^ffff80000010a2ff:	e9 5a f6 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a304	kernel.asm	/^ffff80000010a304 <vector8>:$/;"	l
ffff80000010a304	kernel.asm	/^ffff80000010a304:	6a 08                	pushq  $0x8$/;"	l
ffff80000010a306	kernel.asm	/^ffff80000010a306:	e9 53 f6 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a30b	kernel.asm	/^ffff80000010a30b <vector9>:$/;"	l
ffff80000010a30b	kernel.asm	/^ffff80000010a30b:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a30d	kernel.asm	/^ffff80000010a30d:	6a 09                	pushq  $0x9$/;"	l
ffff80000010a30f	kernel.asm	/^ffff80000010a30f:	e9 4a f6 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a314	kernel.asm	/^ffff80000010a314 <vector10>:$/;"	l
ffff80000010a314	kernel.asm	/^ffff80000010a314:	6a 0a                	pushq  $0xa$/;"	l
ffff80000010a316	kernel.asm	/^ffff80000010a316:	e9 43 f6 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a31b	kernel.asm	/^ffff80000010a31b <vector11>:$/;"	l
ffff80000010a31b	kernel.asm	/^ffff80000010a31b:	6a 0b                	pushq  $0xb$/;"	l
ffff80000010a31d	kernel.asm	/^ffff80000010a31d:	e9 3c f6 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a322	kernel.asm	/^ffff80000010a322 <vector12>:$/;"	l
ffff80000010a322	kernel.asm	/^ffff80000010a322:	6a 0c                	pushq  $0xc$/;"	l
ffff80000010a324	kernel.asm	/^ffff80000010a324:	e9 35 f6 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a329	kernel.asm	/^ffff80000010a329 <vector13>:$/;"	l
ffff80000010a329	kernel.asm	/^ffff80000010a329:	6a 0d                	pushq  $0xd$/;"	l
ffff80000010a32b	kernel.asm	/^ffff80000010a32b:	e9 2e f6 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a330	kernel.asm	/^ffff80000010a330 <vector14>:$/;"	l
ffff80000010a330	kernel.asm	/^ffff80000010a330:	6a 0e                	pushq  $0xe$/;"	l
ffff80000010a332	kernel.asm	/^ffff80000010a332:	e9 27 f6 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a337	kernel.asm	/^ffff80000010a337 <vector15>:$/;"	l
ffff80000010a337	kernel.asm	/^ffff80000010a337:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a339	kernel.asm	/^ffff80000010a339:	6a 0f                	pushq  $0xf$/;"	l
ffff80000010a33b	kernel.asm	/^ffff80000010a33b:	e9 1e f6 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a340	kernel.asm	/^ffff80000010a340 <vector16>:$/;"	l
ffff80000010a340	kernel.asm	/^ffff80000010a340:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a342	kernel.asm	/^ffff80000010a342:	6a 10                	pushq  $0x10$/;"	l
ffff80000010a344	kernel.asm	/^ffff80000010a344:	e9 15 f6 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a349	kernel.asm	/^ffff80000010a349 <vector17>:$/;"	l
ffff80000010a349	kernel.asm	/^ffff80000010a349:	6a 11                	pushq  $0x11$/;"	l
ffff80000010a34b	kernel.asm	/^ffff80000010a34b:	e9 0e f6 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a350	kernel.asm	/^ffff80000010a350 <vector18>:$/;"	l
ffff80000010a350	kernel.asm	/^ffff80000010a350:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a352	kernel.asm	/^ffff80000010a352:	6a 12                	pushq  $0x12$/;"	l
ffff80000010a354	kernel.asm	/^ffff80000010a354:	e9 05 f6 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a359	kernel.asm	/^ffff80000010a359 <vector19>:$/;"	l
ffff80000010a359	kernel.asm	/^ffff80000010a359:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a35b	kernel.asm	/^ffff80000010a35b:	6a 13                	pushq  $0x13$/;"	l
ffff80000010a35d	kernel.asm	/^ffff80000010a35d:	e9 fc f5 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a362	kernel.asm	/^ffff80000010a362 <vector20>:$/;"	l
ffff80000010a362	kernel.asm	/^ffff80000010a362:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a364	kernel.asm	/^ffff80000010a364:	6a 14                	pushq  $0x14$/;"	l
ffff80000010a366	kernel.asm	/^ffff80000010a366:	e9 f3 f5 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a36b	kernel.asm	/^ffff80000010a36b <vector21>:$/;"	l
ffff80000010a36b	kernel.asm	/^ffff80000010a36b:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a36d	kernel.asm	/^ffff80000010a36d:	6a 15                	pushq  $0x15$/;"	l
ffff80000010a36f	kernel.asm	/^ffff80000010a36f:	e9 ea f5 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a374	kernel.asm	/^ffff80000010a374 <vector22>:$/;"	l
ffff80000010a374	kernel.asm	/^ffff80000010a374:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a376	kernel.asm	/^ffff80000010a376:	6a 16                	pushq  $0x16$/;"	l
ffff80000010a378	kernel.asm	/^ffff80000010a378:	e9 e1 f5 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a37d	kernel.asm	/^ffff80000010a37d <vector23>:$/;"	l
ffff80000010a37d	kernel.asm	/^ffff80000010a37d:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a37f	kernel.asm	/^ffff80000010a37f:	6a 17                	pushq  $0x17$/;"	l
ffff80000010a381	kernel.asm	/^ffff80000010a381:	e9 d8 f5 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a386	kernel.asm	/^ffff80000010a386 <vector24>:$/;"	l
ffff80000010a386	kernel.asm	/^ffff80000010a386:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a388	kernel.asm	/^ffff80000010a388:	6a 18                	pushq  $0x18$/;"	l
ffff80000010a38a	kernel.asm	/^ffff80000010a38a:	e9 cf f5 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a38f	kernel.asm	/^ffff80000010a38f <vector25>:$/;"	l
ffff80000010a38f	kernel.asm	/^ffff80000010a38f:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a391	kernel.asm	/^ffff80000010a391:	6a 19                	pushq  $0x19$/;"	l
ffff80000010a393	kernel.asm	/^ffff80000010a393:	e9 c6 f5 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a398	kernel.asm	/^ffff80000010a398 <vector26>:$/;"	l
ffff80000010a398	kernel.asm	/^ffff80000010a398:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a39a	kernel.asm	/^ffff80000010a39a:	6a 1a                	pushq  $0x1a$/;"	l
ffff80000010a39c	kernel.asm	/^ffff80000010a39c:	e9 bd f5 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a3a1	kernel.asm	/^ffff80000010a3a1 <vector27>:$/;"	l
ffff80000010a3a1	kernel.asm	/^ffff80000010a3a1:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a3a3	kernel.asm	/^ffff80000010a3a3:	6a 1b                	pushq  $0x1b$/;"	l
ffff80000010a3a5	kernel.asm	/^ffff80000010a3a5:	e9 b4 f5 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a3aa	kernel.asm	/^ffff80000010a3aa <vector28>:$/;"	l
ffff80000010a3aa	kernel.asm	/^ffff80000010a3aa:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a3ac	kernel.asm	/^ffff80000010a3ac:	6a 1c                	pushq  $0x1c$/;"	l
ffff80000010a3ae	kernel.asm	/^ffff80000010a3ae:	e9 ab f5 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a3b3	kernel.asm	/^ffff80000010a3b3 <vector29>:$/;"	l
ffff80000010a3b3	kernel.asm	/^ffff80000010a3b3:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a3b5	kernel.asm	/^ffff80000010a3b5:	6a 1d                	pushq  $0x1d$/;"	l
ffff80000010a3b7	kernel.asm	/^ffff80000010a3b7:	e9 a2 f5 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a3bc	kernel.asm	/^ffff80000010a3bc <vector30>:$/;"	l
ffff80000010a3bc	kernel.asm	/^ffff80000010a3bc:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a3be	kernel.asm	/^ffff80000010a3be:	6a 1e                	pushq  $0x1e$/;"	l
ffff80000010a3c0	kernel.asm	/^ffff80000010a3c0:	e9 99 f5 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a3c5	kernel.asm	/^ffff80000010a3c5 <vector31>:$/;"	l
ffff80000010a3c5	kernel.asm	/^ffff80000010a3c5:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a3c7	kernel.asm	/^ffff80000010a3c7:	6a 1f                	pushq  $0x1f$/;"	l
ffff80000010a3c9	kernel.asm	/^ffff80000010a3c9:	e9 90 f5 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a3ce	kernel.asm	/^ffff80000010a3ce <vector32>:$/;"	l
ffff80000010a3ce	kernel.asm	/^ffff80000010a3ce:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a3d0	kernel.asm	/^ffff80000010a3d0:	6a 20                	pushq  $0x20$/;"	l
ffff80000010a3d2	kernel.asm	/^ffff80000010a3d2:	e9 87 f5 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a3d7	kernel.asm	/^ffff80000010a3d7 <vector33>:$/;"	l
ffff80000010a3d7	kernel.asm	/^ffff80000010a3d7:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a3d9	kernel.asm	/^ffff80000010a3d9:	6a 21                	pushq  $0x21$/;"	l
ffff80000010a3db	kernel.asm	/^ffff80000010a3db:	e9 7e f5 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a3e0	kernel.asm	/^ffff80000010a3e0 <vector34>:$/;"	l
ffff80000010a3e0	kernel.asm	/^ffff80000010a3e0:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a3e2	kernel.asm	/^ffff80000010a3e2:	6a 22                	pushq  $0x22$/;"	l
ffff80000010a3e4	kernel.asm	/^ffff80000010a3e4:	e9 75 f5 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a3e9	kernel.asm	/^ffff80000010a3e9 <vector35>:$/;"	l
ffff80000010a3e9	kernel.asm	/^ffff80000010a3e9:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a3eb	kernel.asm	/^ffff80000010a3eb:	6a 23                	pushq  $0x23$/;"	l
ffff80000010a3ed	kernel.asm	/^ffff80000010a3ed:	e9 6c f5 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a3f2	kernel.asm	/^ffff80000010a3f2 <vector36>:$/;"	l
ffff80000010a3f2	kernel.asm	/^ffff80000010a3f2:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a3f4	kernel.asm	/^ffff80000010a3f4:	6a 24                	pushq  $0x24$/;"	l
ffff80000010a3f6	kernel.asm	/^ffff80000010a3f6:	e9 63 f5 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a3fb	kernel.asm	/^ffff80000010a3fb <vector37>:$/;"	l
ffff80000010a3fb	kernel.asm	/^ffff80000010a3fb:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a3fd	kernel.asm	/^ffff80000010a3fd:	6a 25                	pushq  $0x25$/;"	l
ffff80000010a3ff	kernel.asm	/^ffff80000010a3ff:	e9 5a f5 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a404	kernel.asm	/^ffff80000010a404 <vector38>:$/;"	l
ffff80000010a404	kernel.asm	/^ffff80000010a404:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a406	kernel.asm	/^ffff80000010a406:	6a 26                	pushq  $0x26$/;"	l
ffff80000010a408	kernel.asm	/^ffff80000010a408:	e9 51 f5 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a40d	kernel.asm	/^ffff80000010a40d <vector39>:$/;"	l
ffff80000010a40d	kernel.asm	/^ffff80000010a40d:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a40f	kernel.asm	/^ffff80000010a40f:	6a 27                	pushq  $0x27$/;"	l
ffff80000010a411	kernel.asm	/^ffff80000010a411:	e9 48 f5 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a416	kernel.asm	/^ffff80000010a416 <vector40>:$/;"	l
ffff80000010a416	kernel.asm	/^ffff80000010a416:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a418	kernel.asm	/^ffff80000010a418:	6a 28                	pushq  $0x28$/;"	l
ffff80000010a41a	kernel.asm	/^ffff80000010a41a:	e9 3f f5 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a41f	kernel.asm	/^ffff80000010a41f <vector41>:$/;"	l
ffff80000010a41f	kernel.asm	/^ffff80000010a41f:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a421	kernel.asm	/^ffff80000010a421:	6a 29                	pushq  $0x29$/;"	l
ffff80000010a423	kernel.asm	/^ffff80000010a423:	e9 36 f5 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a428	kernel.asm	/^ffff80000010a428 <vector42>:$/;"	l
ffff80000010a428	kernel.asm	/^ffff80000010a428:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a42a	kernel.asm	/^ffff80000010a42a:	6a 2a                	pushq  $0x2a$/;"	l
ffff80000010a42c	kernel.asm	/^ffff80000010a42c:	e9 2d f5 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a431	kernel.asm	/^ffff80000010a431 <vector43>:$/;"	l
ffff80000010a431	kernel.asm	/^ffff80000010a431:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a433	kernel.asm	/^ffff80000010a433:	6a 2b                	pushq  $0x2b$/;"	l
ffff80000010a435	kernel.asm	/^ffff80000010a435:	e9 24 f5 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a43a	kernel.asm	/^ffff80000010a43a <vector44>:$/;"	l
ffff80000010a43a	kernel.asm	/^ffff80000010a43a:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a43c	kernel.asm	/^ffff80000010a43c:	6a 2c                	pushq  $0x2c$/;"	l
ffff80000010a43e	kernel.asm	/^ffff80000010a43e:	e9 1b f5 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a443	kernel.asm	/^ffff80000010a443 <vector45>:$/;"	l
ffff80000010a443	kernel.asm	/^ffff80000010a443:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a445	kernel.asm	/^ffff80000010a445:	6a 2d                	pushq  $0x2d$/;"	l
ffff80000010a447	kernel.asm	/^ffff80000010a447:	e9 12 f5 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a44c	kernel.asm	/^ffff80000010a44c <vector46>:$/;"	l
ffff80000010a44c	kernel.asm	/^ffff80000010a44c:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a44e	kernel.asm	/^ffff80000010a44e:	6a 2e                	pushq  $0x2e$/;"	l
ffff80000010a450	kernel.asm	/^ffff80000010a450:	e9 09 f5 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a455	kernel.asm	/^ffff80000010a455 <vector47>:$/;"	l
ffff80000010a455	kernel.asm	/^ffff80000010a455:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a457	kernel.asm	/^ffff80000010a457:	6a 2f                	pushq  $0x2f$/;"	l
ffff80000010a459	kernel.asm	/^ffff80000010a459:	e9 00 f5 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a45e	kernel.asm	/^ffff80000010a45e <vector48>:$/;"	l
ffff80000010a45e	kernel.asm	/^ffff80000010a45e:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a460	kernel.asm	/^ffff80000010a460:	6a 30                	pushq  $0x30$/;"	l
ffff80000010a462	kernel.asm	/^ffff80000010a462:	e9 f7 f4 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a467	kernel.asm	/^ffff80000010a467 <vector49>:$/;"	l
ffff80000010a467	kernel.asm	/^ffff80000010a467:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a469	kernel.asm	/^ffff80000010a469:	6a 31                	pushq  $0x31$/;"	l
ffff80000010a46b	kernel.asm	/^ffff80000010a46b:	e9 ee f4 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a470	kernel.asm	/^ffff80000010a470 <vector50>:$/;"	l
ffff80000010a470	kernel.asm	/^ffff80000010a470:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a472	kernel.asm	/^ffff80000010a472:	6a 32                	pushq  $0x32$/;"	l
ffff80000010a474	kernel.asm	/^ffff80000010a474:	e9 e5 f4 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a479	kernel.asm	/^ffff80000010a479 <vector51>:$/;"	l
ffff80000010a479	kernel.asm	/^ffff80000010a479:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a47b	kernel.asm	/^ffff80000010a47b:	6a 33                	pushq  $0x33$/;"	l
ffff80000010a47d	kernel.asm	/^ffff80000010a47d:	e9 dc f4 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a482	kernel.asm	/^ffff80000010a482 <vector52>:$/;"	l
ffff80000010a482	kernel.asm	/^ffff80000010a482:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a484	kernel.asm	/^ffff80000010a484:	6a 34                	pushq  $0x34$/;"	l
ffff80000010a486	kernel.asm	/^ffff80000010a486:	e9 d3 f4 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a48b	kernel.asm	/^ffff80000010a48b <vector53>:$/;"	l
ffff80000010a48b	kernel.asm	/^ffff80000010a48b:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a48d	kernel.asm	/^ffff80000010a48d:	6a 35                	pushq  $0x35$/;"	l
ffff80000010a48f	kernel.asm	/^ffff80000010a48f:	e9 ca f4 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a494	kernel.asm	/^ffff80000010a494 <vector54>:$/;"	l
ffff80000010a494	kernel.asm	/^ffff80000010a494:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a496	kernel.asm	/^ffff80000010a496:	6a 36                	pushq  $0x36$/;"	l
ffff80000010a498	kernel.asm	/^ffff80000010a498:	e9 c1 f4 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a49d	kernel.asm	/^ffff80000010a49d <vector55>:$/;"	l
ffff80000010a49d	kernel.asm	/^ffff80000010a49d:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a49f	kernel.asm	/^ffff80000010a49f:	6a 37                	pushq  $0x37$/;"	l
ffff80000010a4a1	kernel.asm	/^ffff80000010a4a1:	e9 b8 f4 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a4a6	kernel.asm	/^ffff80000010a4a6 <vector56>:$/;"	l
ffff80000010a4a6	kernel.asm	/^ffff80000010a4a6:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a4a8	kernel.asm	/^ffff80000010a4a8:	6a 38                	pushq  $0x38$/;"	l
ffff80000010a4aa	kernel.asm	/^ffff80000010a4aa:	e9 af f4 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a4af	kernel.asm	/^ffff80000010a4af <vector57>:$/;"	l
ffff80000010a4af	kernel.asm	/^ffff80000010a4af:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a4b1	kernel.asm	/^ffff80000010a4b1:	6a 39                	pushq  $0x39$/;"	l
ffff80000010a4b3	kernel.asm	/^ffff80000010a4b3:	e9 a6 f4 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a4b8	kernel.asm	/^ffff80000010a4b8 <vector58>:$/;"	l
ffff80000010a4b8	kernel.asm	/^ffff80000010a4b8:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a4ba	kernel.asm	/^ffff80000010a4ba:	6a 3a                	pushq  $0x3a$/;"	l
ffff80000010a4bc	kernel.asm	/^ffff80000010a4bc:	e9 9d f4 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a4c1	kernel.asm	/^ffff80000010a4c1 <vector59>:$/;"	l
ffff80000010a4c1	kernel.asm	/^ffff80000010a4c1:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a4c3	kernel.asm	/^ffff80000010a4c3:	6a 3b                	pushq  $0x3b$/;"	l
ffff80000010a4c5	kernel.asm	/^ffff80000010a4c5:	e9 94 f4 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a4ca	kernel.asm	/^ffff80000010a4ca <vector60>:$/;"	l
ffff80000010a4ca	kernel.asm	/^ffff80000010a4ca:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a4cc	kernel.asm	/^ffff80000010a4cc:	6a 3c                	pushq  $0x3c$/;"	l
ffff80000010a4ce	kernel.asm	/^ffff80000010a4ce:	e9 8b f4 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a4d3	kernel.asm	/^ffff80000010a4d3 <vector61>:$/;"	l
ffff80000010a4d3	kernel.asm	/^ffff80000010a4d3:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a4d5	kernel.asm	/^ffff80000010a4d5:	6a 3d                	pushq  $0x3d$/;"	l
ffff80000010a4d7	kernel.asm	/^ffff80000010a4d7:	e9 82 f4 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a4dc	kernel.asm	/^ffff80000010a4dc <vector62>:$/;"	l
ffff80000010a4dc	kernel.asm	/^ffff80000010a4dc:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a4de	kernel.asm	/^ffff80000010a4de:	6a 3e                	pushq  $0x3e$/;"	l
ffff80000010a4e0	kernel.asm	/^ffff80000010a4e0:	e9 79 f4 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a4e5	kernel.asm	/^ffff80000010a4e5 <vector63>:$/;"	l
ffff80000010a4e5	kernel.asm	/^ffff80000010a4e5:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a4e7	kernel.asm	/^ffff80000010a4e7:	6a 3f                	pushq  $0x3f$/;"	l
ffff80000010a4e9	kernel.asm	/^ffff80000010a4e9:	e9 70 f4 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a4ee	kernel.asm	/^ffff80000010a4ee <vector64>:$/;"	l
ffff80000010a4ee	kernel.asm	/^ffff80000010a4ee:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a4f0	kernel.asm	/^ffff80000010a4f0:	6a 40                	pushq  $0x40$/;"	l
ffff80000010a4f2	kernel.asm	/^ffff80000010a4f2:	e9 67 f4 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a4f7	kernel.asm	/^ffff80000010a4f7 <vector65>:$/;"	l
ffff80000010a4f7	kernel.asm	/^ffff80000010a4f7:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a4f9	kernel.asm	/^ffff80000010a4f9:	6a 41                	pushq  $0x41$/;"	l
ffff80000010a4fb	kernel.asm	/^ffff80000010a4fb:	e9 5e f4 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a500	kernel.asm	/^ffff80000010a500 <vector66>:$/;"	l
ffff80000010a500	kernel.asm	/^ffff80000010a500:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a502	kernel.asm	/^ffff80000010a502:	6a 42                	pushq  $0x42$/;"	l
ffff80000010a504	kernel.asm	/^ffff80000010a504:	e9 55 f4 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a509	kernel.asm	/^ffff80000010a509 <vector67>:$/;"	l
ffff80000010a509	kernel.asm	/^ffff80000010a509:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a50b	kernel.asm	/^ffff80000010a50b:	6a 43                	pushq  $0x43$/;"	l
ffff80000010a50d	kernel.asm	/^ffff80000010a50d:	e9 4c f4 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a512	kernel.asm	/^ffff80000010a512 <vector68>:$/;"	l
ffff80000010a512	kernel.asm	/^ffff80000010a512:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a514	kernel.asm	/^ffff80000010a514:	6a 44                	pushq  $0x44$/;"	l
ffff80000010a516	kernel.asm	/^ffff80000010a516:	e9 43 f4 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a51b	kernel.asm	/^ffff80000010a51b <vector69>:$/;"	l
ffff80000010a51b	kernel.asm	/^ffff80000010a51b:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a51d	kernel.asm	/^ffff80000010a51d:	6a 45                	pushq  $0x45$/;"	l
ffff80000010a51f	kernel.asm	/^ffff80000010a51f:	e9 3a f4 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a524	kernel.asm	/^ffff80000010a524 <vector70>:$/;"	l
ffff80000010a524	kernel.asm	/^ffff80000010a524:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a526	kernel.asm	/^ffff80000010a526:	6a 46                	pushq  $0x46$/;"	l
ffff80000010a528	kernel.asm	/^ffff80000010a528:	e9 31 f4 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a52d	kernel.asm	/^ffff80000010a52d <vector71>:$/;"	l
ffff80000010a52d	kernel.asm	/^ffff80000010a52d:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a52f	kernel.asm	/^ffff80000010a52f:	6a 47                	pushq  $0x47$/;"	l
ffff80000010a531	kernel.asm	/^ffff80000010a531:	e9 28 f4 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a536	kernel.asm	/^ffff80000010a536 <vector72>:$/;"	l
ffff80000010a536	kernel.asm	/^ffff80000010a536:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a538	kernel.asm	/^ffff80000010a538:	6a 48                	pushq  $0x48$/;"	l
ffff80000010a53a	kernel.asm	/^ffff80000010a53a:	e9 1f f4 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a53f	kernel.asm	/^ffff80000010a53f <vector73>:$/;"	l
ffff80000010a53f	kernel.asm	/^ffff80000010a53f:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a541	kernel.asm	/^ffff80000010a541:	6a 49                	pushq  $0x49$/;"	l
ffff80000010a543	kernel.asm	/^ffff80000010a543:	e9 16 f4 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a548	kernel.asm	/^ffff80000010a548 <vector74>:$/;"	l
ffff80000010a548	kernel.asm	/^ffff80000010a548:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a54a	kernel.asm	/^ffff80000010a54a:	6a 4a                	pushq  $0x4a$/;"	l
ffff80000010a54c	kernel.asm	/^ffff80000010a54c:	e9 0d f4 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a551	kernel.asm	/^ffff80000010a551 <vector75>:$/;"	l
ffff80000010a551	kernel.asm	/^ffff80000010a551:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a553	kernel.asm	/^ffff80000010a553:	6a 4b                	pushq  $0x4b$/;"	l
ffff80000010a555	kernel.asm	/^ffff80000010a555:	e9 04 f4 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a55a	kernel.asm	/^ffff80000010a55a <vector76>:$/;"	l
ffff80000010a55a	kernel.asm	/^ffff80000010a55a:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a55c	kernel.asm	/^ffff80000010a55c:	6a 4c                	pushq  $0x4c$/;"	l
ffff80000010a55e	kernel.asm	/^ffff80000010a55e:	e9 fb f3 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a563	kernel.asm	/^ffff80000010a563 <vector77>:$/;"	l
ffff80000010a563	kernel.asm	/^ffff80000010a563:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a565	kernel.asm	/^ffff80000010a565:	6a 4d                	pushq  $0x4d$/;"	l
ffff80000010a567	kernel.asm	/^ffff80000010a567:	e9 f2 f3 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a56c	kernel.asm	/^ffff80000010a56c <vector78>:$/;"	l
ffff80000010a56c	kernel.asm	/^ffff80000010a56c:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a56e	kernel.asm	/^ffff80000010a56e:	6a 4e                	pushq  $0x4e$/;"	l
ffff80000010a570	kernel.asm	/^ffff80000010a570:	e9 e9 f3 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a575	kernel.asm	/^ffff80000010a575 <vector79>:$/;"	l
ffff80000010a575	kernel.asm	/^ffff80000010a575:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a577	kernel.asm	/^ffff80000010a577:	6a 4f                	pushq  $0x4f$/;"	l
ffff80000010a579	kernel.asm	/^ffff80000010a579:	e9 e0 f3 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a57e	kernel.asm	/^ffff80000010a57e <vector80>:$/;"	l
ffff80000010a57e	kernel.asm	/^ffff80000010a57e:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a580	kernel.asm	/^ffff80000010a580:	6a 50                	pushq  $0x50$/;"	l
ffff80000010a582	kernel.asm	/^ffff80000010a582:	e9 d7 f3 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a587	kernel.asm	/^ffff80000010a587 <vector81>:$/;"	l
ffff80000010a587	kernel.asm	/^ffff80000010a587:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a589	kernel.asm	/^ffff80000010a589:	6a 51                	pushq  $0x51$/;"	l
ffff80000010a58b	kernel.asm	/^ffff80000010a58b:	e9 ce f3 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a590	kernel.asm	/^ffff80000010a590 <vector82>:$/;"	l
ffff80000010a590	kernel.asm	/^ffff80000010a590:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a592	kernel.asm	/^ffff80000010a592:	6a 52                	pushq  $0x52$/;"	l
ffff80000010a594	kernel.asm	/^ffff80000010a594:	e9 c5 f3 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a599	kernel.asm	/^ffff80000010a599 <vector83>:$/;"	l
ffff80000010a599	kernel.asm	/^ffff80000010a599:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a59b	kernel.asm	/^ffff80000010a59b:	6a 53                	pushq  $0x53$/;"	l
ffff80000010a59d	kernel.asm	/^ffff80000010a59d:	e9 bc f3 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a5a2	kernel.asm	/^ffff80000010a5a2 <vector84>:$/;"	l
ffff80000010a5a2	kernel.asm	/^ffff80000010a5a2:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a5a4	kernel.asm	/^ffff80000010a5a4:	6a 54                	pushq  $0x54$/;"	l
ffff80000010a5a6	kernel.asm	/^ffff80000010a5a6:	e9 b3 f3 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a5ab	kernel.asm	/^ffff80000010a5ab <vector85>:$/;"	l
ffff80000010a5ab	kernel.asm	/^ffff80000010a5ab:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a5ad	kernel.asm	/^ffff80000010a5ad:	6a 55                	pushq  $0x55$/;"	l
ffff80000010a5af	kernel.asm	/^ffff80000010a5af:	e9 aa f3 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a5b4	kernel.asm	/^ffff80000010a5b4 <vector86>:$/;"	l
ffff80000010a5b4	kernel.asm	/^ffff80000010a5b4:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a5b6	kernel.asm	/^ffff80000010a5b6:	6a 56                	pushq  $0x56$/;"	l
ffff80000010a5b8	kernel.asm	/^ffff80000010a5b8:	e9 a1 f3 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a5bd	kernel.asm	/^ffff80000010a5bd <vector87>:$/;"	l
ffff80000010a5bd	kernel.asm	/^ffff80000010a5bd:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a5bf	kernel.asm	/^ffff80000010a5bf:	6a 57                	pushq  $0x57$/;"	l
ffff80000010a5c1	kernel.asm	/^ffff80000010a5c1:	e9 98 f3 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a5c6	kernel.asm	/^ffff80000010a5c6 <vector88>:$/;"	l
ffff80000010a5c6	kernel.asm	/^ffff80000010a5c6:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a5c8	kernel.asm	/^ffff80000010a5c8:	6a 58                	pushq  $0x58$/;"	l
ffff80000010a5ca	kernel.asm	/^ffff80000010a5ca:	e9 8f f3 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a5cf	kernel.asm	/^ffff80000010a5cf <vector89>:$/;"	l
ffff80000010a5cf	kernel.asm	/^ffff80000010a5cf:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a5d1	kernel.asm	/^ffff80000010a5d1:	6a 59                	pushq  $0x59$/;"	l
ffff80000010a5d3	kernel.asm	/^ffff80000010a5d3:	e9 86 f3 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a5d8	kernel.asm	/^ffff80000010a5d8 <vector90>:$/;"	l
ffff80000010a5d8	kernel.asm	/^ffff80000010a5d8:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a5da	kernel.asm	/^ffff80000010a5da:	6a 5a                	pushq  $0x5a$/;"	l
ffff80000010a5dc	kernel.asm	/^ffff80000010a5dc:	e9 7d f3 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a5e1	kernel.asm	/^ffff80000010a5e1 <vector91>:$/;"	l
ffff80000010a5e1	kernel.asm	/^ffff80000010a5e1:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a5e3	kernel.asm	/^ffff80000010a5e3:	6a 5b                	pushq  $0x5b$/;"	l
ffff80000010a5e5	kernel.asm	/^ffff80000010a5e5:	e9 74 f3 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a5ea	kernel.asm	/^ffff80000010a5ea <vector92>:$/;"	l
ffff80000010a5ea	kernel.asm	/^ffff80000010a5ea:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a5ec	kernel.asm	/^ffff80000010a5ec:	6a 5c                	pushq  $0x5c$/;"	l
ffff80000010a5ee	kernel.asm	/^ffff80000010a5ee:	e9 6b f3 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a5f3	kernel.asm	/^ffff80000010a5f3 <vector93>:$/;"	l
ffff80000010a5f3	kernel.asm	/^ffff80000010a5f3:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a5f5	kernel.asm	/^ffff80000010a5f5:	6a 5d                	pushq  $0x5d$/;"	l
ffff80000010a5f7	kernel.asm	/^ffff80000010a5f7:	e9 62 f3 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a5fc	kernel.asm	/^ffff80000010a5fc <vector94>:$/;"	l
ffff80000010a5fc	kernel.asm	/^ffff80000010a5fc:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a5fe	kernel.asm	/^ffff80000010a5fe:	6a 5e                	pushq  $0x5e$/;"	l
ffff80000010a600	kernel.asm	/^ffff80000010a600:	e9 59 f3 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a605	kernel.asm	/^ffff80000010a605 <vector95>:$/;"	l
ffff80000010a605	kernel.asm	/^ffff80000010a605:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a607	kernel.asm	/^ffff80000010a607:	6a 5f                	pushq  $0x5f$/;"	l
ffff80000010a609	kernel.asm	/^ffff80000010a609:	e9 50 f3 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a60e	kernel.asm	/^ffff80000010a60e <vector96>:$/;"	l
ffff80000010a60e	kernel.asm	/^ffff80000010a60e:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a610	kernel.asm	/^ffff80000010a610:	6a 60                	pushq  $0x60$/;"	l
ffff80000010a612	kernel.asm	/^ffff80000010a612:	e9 47 f3 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a617	kernel.asm	/^ffff80000010a617 <vector97>:$/;"	l
ffff80000010a617	kernel.asm	/^ffff80000010a617:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a619	kernel.asm	/^ffff80000010a619:	6a 61                	pushq  $0x61$/;"	l
ffff80000010a61b	kernel.asm	/^ffff80000010a61b:	e9 3e f3 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a620	kernel.asm	/^ffff80000010a620 <vector98>:$/;"	l
ffff80000010a620	kernel.asm	/^ffff80000010a620:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a622	kernel.asm	/^ffff80000010a622:	6a 62                	pushq  $0x62$/;"	l
ffff80000010a624	kernel.asm	/^ffff80000010a624:	e9 35 f3 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a629	kernel.asm	/^ffff80000010a629 <vector99>:$/;"	l
ffff80000010a629	kernel.asm	/^ffff80000010a629:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a62b	kernel.asm	/^ffff80000010a62b:	6a 63                	pushq  $0x63$/;"	l
ffff80000010a62d	kernel.asm	/^ffff80000010a62d:	e9 2c f3 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a632	kernel.asm	/^ffff80000010a632 <vector100>:$/;"	l
ffff80000010a632	kernel.asm	/^ffff80000010a632:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a634	kernel.asm	/^ffff80000010a634:	6a 64                	pushq  $0x64$/;"	l
ffff80000010a636	kernel.asm	/^ffff80000010a636:	e9 23 f3 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a63b	kernel.asm	/^ffff80000010a63b <vector101>:$/;"	l
ffff80000010a63b	kernel.asm	/^ffff80000010a63b:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a63d	kernel.asm	/^ffff80000010a63d:	6a 65                	pushq  $0x65$/;"	l
ffff80000010a63f	kernel.asm	/^ffff80000010a63f:	e9 1a f3 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a644	kernel.asm	/^ffff80000010a644 <vector102>:$/;"	l
ffff80000010a644	kernel.asm	/^ffff80000010a644:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a646	kernel.asm	/^ffff80000010a646:	6a 66                	pushq  $0x66$/;"	l
ffff80000010a648	kernel.asm	/^ffff80000010a648:	e9 11 f3 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a64d	kernel.asm	/^ffff80000010a64d <vector103>:$/;"	l
ffff80000010a64d	kernel.asm	/^ffff80000010a64d:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a64f	kernel.asm	/^ffff80000010a64f:	6a 67                	pushq  $0x67$/;"	l
ffff80000010a651	kernel.asm	/^ffff80000010a651:	e9 08 f3 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a656	kernel.asm	/^ffff80000010a656 <vector104>:$/;"	l
ffff80000010a656	kernel.asm	/^ffff80000010a656:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a658	kernel.asm	/^ffff80000010a658:	6a 68                	pushq  $0x68$/;"	l
ffff80000010a65a	kernel.asm	/^ffff80000010a65a:	e9 ff f2 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a65f	kernel.asm	/^ffff80000010a65f <vector105>:$/;"	l
ffff80000010a65f	kernel.asm	/^ffff80000010a65f:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a661	kernel.asm	/^ffff80000010a661:	6a 69                	pushq  $0x69$/;"	l
ffff80000010a663	kernel.asm	/^ffff80000010a663:	e9 f6 f2 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a668	kernel.asm	/^ffff80000010a668 <vector106>:$/;"	l
ffff80000010a668	kernel.asm	/^ffff80000010a668:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a66a	kernel.asm	/^ffff80000010a66a:	6a 6a                	pushq  $0x6a$/;"	l
ffff80000010a66c	kernel.asm	/^ffff80000010a66c:	e9 ed f2 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a671	kernel.asm	/^ffff80000010a671 <vector107>:$/;"	l
ffff80000010a671	kernel.asm	/^ffff80000010a671:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a673	kernel.asm	/^ffff80000010a673:	6a 6b                	pushq  $0x6b$/;"	l
ffff80000010a675	kernel.asm	/^ffff80000010a675:	e9 e4 f2 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a67a	kernel.asm	/^ffff80000010a67a <vector108>:$/;"	l
ffff80000010a67a	kernel.asm	/^ffff80000010a67a:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a67c	kernel.asm	/^ffff80000010a67c:	6a 6c                	pushq  $0x6c$/;"	l
ffff80000010a67e	kernel.asm	/^ffff80000010a67e:	e9 db f2 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a683	kernel.asm	/^ffff80000010a683 <vector109>:$/;"	l
ffff80000010a683	kernel.asm	/^ffff80000010a683:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a685	kernel.asm	/^ffff80000010a685:	6a 6d                	pushq  $0x6d$/;"	l
ffff80000010a687	kernel.asm	/^ffff80000010a687:	e9 d2 f2 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a68c	kernel.asm	/^ffff80000010a68c <vector110>:$/;"	l
ffff80000010a68c	kernel.asm	/^ffff80000010a68c:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a68e	kernel.asm	/^ffff80000010a68e:	6a 6e                	pushq  $0x6e$/;"	l
ffff80000010a690	kernel.asm	/^ffff80000010a690:	e9 c9 f2 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a695	kernel.asm	/^ffff80000010a695 <vector111>:$/;"	l
ffff80000010a695	kernel.asm	/^ffff80000010a695:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a697	kernel.asm	/^ffff80000010a697:	6a 6f                	pushq  $0x6f$/;"	l
ffff80000010a699	kernel.asm	/^ffff80000010a699:	e9 c0 f2 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a69e	kernel.asm	/^ffff80000010a69e <vector112>:$/;"	l
ffff80000010a69e	kernel.asm	/^ffff80000010a69e:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a6a0	kernel.asm	/^ffff80000010a6a0:	6a 70                	pushq  $0x70$/;"	l
ffff80000010a6a2	kernel.asm	/^ffff80000010a6a2:	e9 b7 f2 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a6a7	kernel.asm	/^ffff80000010a6a7 <vector113>:$/;"	l
ffff80000010a6a7	kernel.asm	/^ffff80000010a6a7:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a6a9	kernel.asm	/^ffff80000010a6a9:	6a 71                	pushq  $0x71$/;"	l
ffff80000010a6ab	kernel.asm	/^ffff80000010a6ab:	e9 ae f2 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a6b0	kernel.asm	/^ffff80000010a6b0 <vector114>:$/;"	l
ffff80000010a6b0	kernel.asm	/^ffff80000010a6b0:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a6b2	kernel.asm	/^ffff80000010a6b2:	6a 72                	pushq  $0x72$/;"	l
ffff80000010a6b4	kernel.asm	/^ffff80000010a6b4:	e9 a5 f2 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a6b9	kernel.asm	/^ffff80000010a6b9 <vector115>:$/;"	l
ffff80000010a6b9	kernel.asm	/^ffff80000010a6b9:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a6bb	kernel.asm	/^ffff80000010a6bb:	6a 73                	pushq  $0x73$/;"	l
ffff80000010a6bd	kernel.asm	/^ffff80000010a6bd:	e9 9c f2 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a6c2	kernel.asm	/^ffff80000010a6c2 <vector116>:$/;"	l
ffff80000010a6c2	kernel.asm	/^ffff80000010a6c2:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a6c4	kernel.asm	/^ffff80000010a6c4:	6a 74                	pushq  $0x74$/;"	l
ffff80000010a6c6	kernel.asm	/^ffff80000010a6c6:	e9 93 f2 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a6cb	kernel.asm	/^ffff80000010a6cb <vector117>:$/;"	l
ffff80000010a6cb	kernel.asm	/^ffff80000010a6cb:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a6cd	kernel.asm	/^ffff80000010a6cd:	6a 75                	pushq  $0x75$/;"	l
ffff80000010a6cf	kernel.asm	/^ffff80000010a6cf:	e9 8a f2 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a6d4	kernel.asm	/^ffff80000010a6d4 <vector118>:$/;"	l
ffff80000010a6d4	kernel.asm	/^ffff80000010a6d4:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a6d6	kernel.asm	/^ffff80000010a6d6:	6a 76                	pushq  $0x76$/;"	l
ffff80000010a6d8	kernel.asm	/^ffff80000010a6d8:	e9 81 f2 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a6dd	kernel.asm	/^ffff80000010a6dd <vector119>:$/;"	l
ffff80000010a6dd	kernel.asm	/^ffff80000010a6dd:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a6df	kernel.asm	/^ffff80000010a6df:	6a 77                	pushq  $0x77$/;"	l
ffff80000010a6e1	kernel.asm	/^ffff80000010a6e1:	e9 78 f2 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a6e6	kernel.asm	/^ffff80000010a6e6 <vector120>:$/;"	l
ffff80000010a6e6	kernel.asm	/^ffff80000010a6e6:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a6e8	kernel.asm	/^ffff80000010a6e8:	6a 78                	pushq  $0x78$/;"	l
ffff80000010a6ea	kernel.asm	/^ffff80000010a6ea:	e9 6f f2 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a6ef	kernel.asm	/^ffff80000010a6ef <vector121>:$/;"	l
ffff80000010a6ef	kernel.asm	/^ffff80000010a6ef:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a6f1	kernel.asm	/^ffff80000010a6f1:	6a 79                	pushq  $0x79$/;"	l
ffff80000010a6f3	kernel.asm	/^ffff80000010a6f3:	e9 66 f2 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a6f8	kernel.asm	/^ffff80000010a6f8 <vector122>:$/;"	l
ffff80000010a6f8	kernel.asm	/^ffff80000010a6f8:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a6fa	kernel.asm	/^ffff80000010a6fa:	6a 7a                	pushq  $0x7a$/;"	l
ffff80000010a6fc	kernel.asm	/^ffff80000010a6fc:	e9 5d f2 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a701	kernel.asm	/^ffff80000010a701 <vector123>:$/;"	l
ffff80000010a701	kernel.asm	/^ffff80000010a701:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a703	kernel.asm	/^ffff80000010a703:	6a 7b                	pushq  $0x7b$/;"	l
ffff80000010a705	kernel.asm	/^ffff80000010a705:	e9 54 f2 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a70a	kernel.asm	/^ffff80000010a70a <vector124>:$/;"	l
ffff80000010a70a	kernel.asm	/^ffff80000010a70a:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a70c	kernel.asm	/^ffff80000010a70c:	6a 7c                	pushq  $0x7c$/;"	l
ffff80000010a70e	kernel.asm	/^ffff80000010a70e:	e9 4b f2 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a713	kernel.asm	/^ffff80000010a713 <vector125>:$/;"	l
ffff80000010a713	kernel.asm	/^ffff80000010a713:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a715	kernel.asm	/^ffff80000010a715:	6a 7d                	pushq  $0x7d$/;"	l
ffff80000010a717	kernel.asm	/^ffff80000010a717:	e9 42 f2 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a71c	kernel.asm	/^ffff80000010a71c <vector126>:$/;"	l
ffff80000010a71c	kernel.asm	/^ffff80000010a71c:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a71e	kernel.asm	/^ffff80000010a71e:	6a 7e                	pushq  $0x7e$/;"	l
ffff80000010a720	kernel.asm	/^ffff80000010a720:	e9 39 f2 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a725	kernel.asm	/^ffff80000010a725 <vector127>:$/;"	l
ffff80000010a725	kernel.asm	/^ffff80000010a725:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a727	kernel.asm	/^ffff80000010a727:	6a 7f                	pushq  $0x7f$/;"	l
ffff80000010a729	kernel.asm	/^ffff80000010a729:	e9 30 f2 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a72e	kernel.asm	/^ffff80000010a72e <vector128>:$/;"	l
ffff80000010a72e	kernel.asm	/^ffff80000010a72e:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a730	kernel.asm	/^ffff80000010a730:	68 80 00 00 00       	pushq  $0x80$/;"	l
ffff80000010a735	kernel.asm	/^ffff80000010a735:	e9 24 f2 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a73a	kernel.asm	/^ffff80000010a73a <vector129>:$/;"	l
ffff80000010a73a	kernel.asm	/^ffff80000010a73a:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a73c	kernel.asm	/^ffff80000010a73c:	68 81 00 00 00       	pushq  $0x81$/;"	l
ffff80000010a741	kernel.asm	/^ffff80000010a741:	e9 18 f2 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a746	kernel.asm	/^ffff80000010a746 <vector130>:$/;"	l
ffff80000010a746	kernel.asm	/^ffff80000010a746:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a748	kernel.asm	/^ffff80000010a748:	68 82 00 00 00       	pushq  $0x82$/;"	l
ffff80000010a74d	kernel.asm	/^ffff80000010a74d:	e9 0c f2 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a752	kernel.asm	/^ffff80000010a752 <vector131>:$/;"	l
ffff80000010a752	kernel.asm	/^ffff80000010a752:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a754	kernel.asm	/^ffff80000010a754:	68 83 00 00 00       	pushq  $0x83$/;"	l
ffff80000010a759	kernel.asm	/^ffff80000010a759:	e9 00 f2 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a75e	kernel.asm	/^ffff80000010a75e <vector132>:$/;"	l
ffff80000010a75e	kernel.asm	/^ffff80000010a75e:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a760	kernel.asm	/^ffff80000010a760:	68 84 00 00 00       	pushq  $0x84$/;"	l
ffff80000010a765	kernel.asm	/^ffff80000010a765:	e9 f4 f1 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a76a	kernel.asm	/^ffff80000010a76a <vector133>:$/;"	l
ffff80000010a76a	kernel.asm	/^ffff80000010a76a:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a76c	kernel.asm	/^ffff80000010a76c:	68 85 00 00 00       	pushq  $0x85$/;"	l
ffff80000010a771	kernel.asm	/^ffff80000010a771:	e9 e8 f1 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a776	kernel.asm	/^ffff80000010a776 <vector134>:$/;"	l
ffff80000010a776	kernel.asm	/^ffff80000010a776:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a778	kernel.asm	/^ffff80000010a778:	68 86 00 00 00       	pushq  $0x86$/;"	l
ffff80000010a77d	kernel.asm	/^ffff80000010a77d:	e9 dc f1 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a782	kernel.asm	/^ffff80000010a782 <vector135>:$/;"	l
ffff80000010a782	kernel.asm	/^ffff80000010a782:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a784	kernel.asm	/^ffff80000010a784:	68 87 00 00 00       	pushq  $0x87$/;"	l
ffff80000010a789	kernel.asm	/^ffff80000010a789:	e9 d0 f1 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a78e	kernel.asm	/^ffff80000010a78e <vector136>:$/;"	l
ffff80000010a78e	kernel.asm	/^ffff80000010a78e:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a790	kernel.asm	/^ffff80000010a790:	68 88 00 00 00       	pushq  $0x88$/;"	l
ffff80000010a795	kernel.asm	/^ffff80000010a795:	e9 c4 f1 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a79a	kernel.asm	/^ffff80000010a79a <vector137>:$/;"	l
ffff80000010a79a	kernel.asm	/^ffff80000010a79a:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a79c	kernel.asm	/^ffff80000010a79c:	68 89 00 00 00       	pushq  $0x89$/;"	l
ffff80000010a7a1	kernel.asm	/^ffff80000010a7a1:	e9 b8 f1 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a7a6	kernel.asm	/^ffff80000010a7a6 <vector138>:$/;"	l
ffff80000010a7a6	kernel.asm	/^ffff80000010a7a6:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a7a8	kernel.asm	/^ffff80000010a7a8:	68 8a 00 00 00       	pushq  $0x8a$/;"	l
ffff80000010a7ad	kernel.asm	/^ffff80000010a7ad:	e9 ac f1 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a7b2	kernel.asm	/^ffff80000010a7b2 <vector139>:$/;"	l
ffff80000010a7b2	kernel.asm	/^ffff80000010a7b2:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a7b4	kernel.asm	/^ffff80000010a7b4:	68 8b 00 00 00       	pushq  $0x8b$/;"	l
ffff80000010a7b9	kernel.asm	/^ffff80000010a7b9:	e9 a0 f1 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a7be	kernel.asm	/^ffff80000010a7be <vector140>:$/;"	l
ffff80000010a7be	kernel.asm	/^ffff80000010a7be:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a7c0	kernel.asm	/^ffff80000010a7c0:	68 8c 00 00 00       	pushq  $0x8c$/;"	l
ffff80000010a7c5	kernel.asm	/^ffff80000010a7c5:	e9 94 f1 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a7ca	kernel.asm	/^ffff80000010a7ca <vector141>:$/;"	l
ffff80000010a7ca	kernel.asm	/^ffff80000010a7ca:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a7cc	kernel.asm	/^ffff80000010a7cc:	68 8d 00 00 00       	pushq  $0x8d$/;"	l
ffff80000010a7d1	kernel.asm	/^ffff80000010a7d1:	e9 88 f1 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a7d6	kernel.asm	/^ffff80000010a7d6 <vector142>:$/;"	l
ffff80000010a7d6	kernel.asm	/^ffff80000010a7d6:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a7d8	kernel.asm	/^ffff80000010a7d8:	68 8e 00 00 00       	pushq  $0x8e$/;"	l
ffff80000010a7dd	kernel.asm	/^ffff80000010a7dd:	e9 7c f1 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a7e2	kernel.asm	/^ffff80000010a7e2 <vector143>:$/;"	l
ffff80000010a7e2	kernel.asm	/^ffff80000010a7e2:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a7e4	kernel.asm	/^ffff80000010a7e4:	68 8f 00 00 00       	pushq  $0x8f$/;"	l
ffff80000010a7e9	kernel.asm	/^ffff80000010a7e9:	e9 70 f1 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a7ee	kernel.asm	/^ffff80000010a7ee <vector144>:$/;"	l
ffff80000010a7ee	kernel.asm	/^ffff80000010a7ee:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a7f0	kernel.asm	/^ffff80000010a7f0:	68 90 00 00 00       	pushq  $0x90$/;"	l
ffff80000010a7f5	kernel.asm	/^ffff80000010a7f5:	e9 64 f1 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a7fa	kernel.asm	/^ffff80000010a7fa <vector145>:$/;"	l
ffff80000010a7fa	kernel.asm	/^ffff80000010a7fa:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a7fc	kernel.asm	/^ffff80000010a7fc:	68 91 00 00 00       	pushq  $0x91$/;"	l
ffff80000010a801	kernel.asm	/^ffff80000010a801:	e9 58 f1 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a806	kernel.asm	/^ffff80000010a806 <vector146>:$/;"	l
ffff80000010a806	kernel.asm	/^ffff80000010a806:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a808	kernel.asm	/^ffff80000010a808:	68 92 00 00 00       	pushq  $0x92$/;"	l
ffff80000010a80d	kernel.asm	/^ffff80000010a80d:	e9 4c f1 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a812	kernel.asm	/^ffff80000010a812 <vector147>:$/;"	l
ffff80000010a812	kernel.asm	/^ffff80000010a812:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a814	kernel.asm	/^ffff80000010a814:	68 93 00 00 00       	pushq  $0x93$/;"	l
ffff80000010a819	kernel.asm	/^ffff80000010a819:	e9 40 f1 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a81e	kernel.asm	/^ffff80000010a81e <vector148>:$/;"	l
ffff80000010a81e	kernel.asm	/^ffff80000010a81e:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a820	kernel.asm	/^ffff80000010a820:	68 94 00 00 00       	pushq  $0x94$/;"	l
ffff80000010a825	kernel.asm	/^ffff80000010a825:	e9 34 f1 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a82a	kernel.asm	/^ffff80000010a82a <vector149>:$/;"	l
ffff80000010a82a	kernel.asm	/^ffff80000010a82a:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a82c	kernel.asm	/^ffff80000010a82c:	68 95 00 00 00       	pushq  $0x95$/;"	l
ffff80000010a831	kernel.asm	/^ffff80000010a831:	e9 28 f1 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a836	kernel.asm	/^ffff80000010a836 <vector150>:$/;"	l
ffff80000010a836	kernel.asm	/^ffff80000010a836:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a838	kernel.asm	/^ffff80000010a838:	68 96 00 00 00       	pushq  $0x96$/;"	l
ffff80000010a83d	kernel.asm	/^ffff80000010a83d:	e9 1c f1 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a842	kernel.asm	/^ffff80000010a842 <vector151>:$/;"	l
ffff80000010a842	kernel.asm	/^ffff80000010a842:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a844	kernel.asm	/^ffff80000010a844:	68 97 00 00 00       	pushq  $0x97$/;"	l
ffff80000010a849	kernel.asm	/^ffff80000010a849:	e9 10 f1 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a84e	kernel.asm	/^ffff80000010a84e <vector152>:$/;"	l
ffff80000010a84e	kernel.asm	/^ffff80000010a84e:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a850	kernel.asm	/^ffff80000010a850:	68 98 00 00 00       	pushq  $0x98$/;"	l
ffff80000010a855	kernel.asm	/^ffff80000010a855:	e9 04 f1 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a85a	kernel.asm	/^ffff80000010a85a <vector153>:$/;"	l
ffff80000010a85a	kernel.asm	/^ffff80000010a85a:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a85c	kernel.asm	/^ffff80000010a85c:	68 99 00 00 00       	pushq  $0x99$/;"	l
ffff80000010a861	kernel.asm	/^ffff80000010a861:	e9 f8 f0 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a866	kernel.asm	/^ffff80000010a866 <vector154>:$/;"	l
ffff80000010a866	kernel.asm	/^ffff80000010a866:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a868	kernel.asm	/^ffff80000010a868:	68 9a 00 00 00       	pushq  $0x9a$/;"	l
ffff80000010a86d	kernel.asm	/^ffff80000010a86d:	e9 ec f0 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a872	kernel.asm	/^ffff80000010a872 <vector155>:$/;"	l
ffff80000010a872	kernel.asm	/^ffff80000010a872:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a874	kernel.asm	/^ffff80000010a874:	68 9b 00 00 00       	pushq  $0x9b$/;"	l
ffff80000010a879	kernel.asm	/^ffff80000010a879:	e9 e0 f0 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a87e	kernel.asm	/^ffff80000010a87e <vector156>:$/;"	l
ffff80000010a87e	kernel.asm	/^ffff80000010a87e:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a880	kernel.asm	/^ffff80000010a880:	68 9c 00 00 00       	pushq  $0x9c$/;"	l
ffff80000010a885	kernel.asm	/^ffff80000010a885:	e9 d4 f0 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a88a	kernel.asm	/^ffff80000010a88a <vector157>:$/;"	l
ffff80000010a88a	kernel.asm	/^ffff80000010a88a:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a88c	kernel.asm	/^ffff80000010a88c:	68 9d 00 00 00       	pushq  $0x9d$/;"	l
ffff80000010a891	kernel.asm	/^ffff80000010a891:	e9 c8 f0 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a896	kernel.asm	/^ffff80000010a896 <vector158>:$/;"	l
ffff80000010a896	kernel.asm	/^ffff80000010a896:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a898	kernel.asm	/^ffff80000010a898:	68 9e 00 00 00       	pushq  $0x9e$/;"	l
ffff80000010a89d	kernel.asm	/^ffff80000010a89d:	e9 bc f0 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a8a2	kernel.asm	/^ffff80000010a8a2 <vector159>:$/;"	l
ffff80000010a8a2	kernel.asm	/^ffff80000010a8a2:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a8a4	kernel.asm	/^ffff80000010a8a4:	68 9f 00 00 00       	pushq  $0x9f$/;"	l
ffff80000010a8a9	kernel.asm	/^ffff80000010a8a9:	e9 b0 f0 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a8ae	kernel.asm	/^ffff80000010a8ae <vector160>:$/;"	l
ffff80000010a8ae	kernel.asm	/^ffff80000010a8ae:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a8b0	kernel.asm	/^ffff80000010a8b0:	68 a0 00 00 00       	pushq  $0xa0$/;"	l
ffff80000010a8b5	kernel.asm	/^ffff80000010a8b5:	e9 a4 f0 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a8ba	kernel.asm	/^ffff80000010a8ba <vector161>:$/;"	l
ffff80000010a8ba	kernel.asm	/^ffff80000010a8ba:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a8bc	kernel.asm	/^ffff80000010a8bc:	68 a1 00 00 00       	pushq  $0xa1$/;"	l
ffff80000010a8c1	kernel.asm	/^ffff80000010a8c1:	e9 98 f0 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a8c6	kernel.asm	/^ffff80000010a8c6 <vector162>:$/;"	l
ffff80000010a8c6	kernel.asm	/^ffff80000010a8c6:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a8c8	kernel.asm	/^ffff80000010a8c8:	68 a2 00 00 00       	pushq  $0xa2$/;"	l
ffff80000010a8cd	kernel.asm	/^ffff80000010a8cd:	e9 8c f0 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a8d2	kernel.asm	/^ffff80000010a8d2 <vector163>:$/;"	l
ffff80000010a8d2	kernel.asm	/^ffff80000010a8d2:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a8d4	kernel.asm	/^ffff80000010a8d4:	68 a3 00 00 00       	pushq  $0xa3$/;"	l
ffff80000010a8d9	kernel.asm	/^ffff80000010a8d9:	e9 80 f0 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a8de	kernel.asm	/^ffff80000010a8de <vector164>:$/;"	l
ffff80000010a8de	kernel.asm	/^ffff80000010a8de:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a8e0	kernel.asm	/^ffff80000010a8e0:	68 a4 00 00 00       	pushq  $0xa4$/;"	l
ffff80000010a8e5	kernel.asm	/^ffff80000010a8e5:	e9 74 f0 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a8ea	kernel.asm	/^ffff80000010a8ea <vector165>:$/;"	l
ffff80000010a8ea	kernel.asm	/^ffff80000010a8ea:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a8ec	kernel.asm	/^ffff80000010a8ec:	68 a5 00 00 00       	pushq  $0xa5$/;"	l
ffff80000010a8f1	kernel.asm	/^ffff80000010a8f1:	e9 68 f0 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a8f6	kernel.asm	/^ffff80000010a8f6 <vector166>:$/;"	l
ffff80000010a8f6	kernel.asm	/^ffff80000010a8f6:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a8f8	kernel.asm	/^ffff80000010a8f8:	68 a6 00 00 00       	pushq  $0xa6$/;"	l
ffff80000010a8fd	kernel.asm	/^ffff80000010a8fd:	e9 5c f0 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a902	kernel.asm	/^ffff80000010a902 <vector167>:$/;"	l
ffff80000010a902	kernel.asm	/^ffff80000010a902:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a904	kernel.asm	/^ffff80000010a904:	68 a7 00 00 00       	pushq  $0xa7$/;"	l
ffff80000010a909	kernel.asm	/^ffff80000010a909:	e9 50 f0 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a90e	kernel.asm	/^ffff80000010a90e <vector168>:$/;"	l
ffff80000010a90e	kernel.asm	/^ffff80000010a90e:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a910	kernel.asm	/^ffff80000010a910:	68 a8 00 00 00       	pushq  $0xa8$/;"	l
ffff80000010a915	kernel.asm	/^ffff80000010a915:	e9 44 f0 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a91a	kernel.asm	/^ffff80000010a91a <vector169>:$/;"	l
ffff80000010a91a	kernel.asm	/^ffff80000010a91a:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a91c	kernel.asm	/^ffff80000010a91c:	68 a9 00 00 00       	pushq  $0xa9$/;"	l
ffff80000010a921	kernel.asm	/^ffff80000010a921:	e9 38 f0 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a926	kernel.asm	/^ffff80000010a926 <vector170>:$/;"	l
ffff80000010a926	kernel.asm	/^ffff80000010a926:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a928	kernel.asm	/^ffff80000010a928:	68 aa 00 00 00       	pushq  $0xaa$/;"	l
ffff80000010a92d	kernel.asm	/^ffff80000010a92d:	e9 2c f0 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a932	kernel.asm	/^ffff80000010a932 <vector171>:$/;"	l
ffff80000010a932	kernel.asm	/^ffff80000010a932:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a934	kernel.asm	/^ffff80000010a934:	68 ab 00 00 00       	pushq  $0xab$/;"	l
ffff80000010a939	kernel.asm	/^ffff80000010a939:	e9 20 f0 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a93e	kernel.asm	/^ffff80000010a93e <vector172>:$/;"	l
ffff80000010a93e	kernel.asm	/^ffff80000010a93e:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a940	kernel.asm	/^ffff80000010a940:	68 ac 00 00 00       	pushq  $0xac$/;"	l
ffff80000010a945	kernel.asm	/^ffff80000010a945:	e9 14 f0 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a94a	kernel.asm	/^ffff80000010a94a <vector173>:$/;"	l
ffff80000010a94a	kernel.asm	/^ffff80000010a94a:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a94c	kernel.asm	/^ffff80000010a94c:	68 ad 00 00 00       	pushq  $0xad$/;"	l
ffff80000010a951	kernel.asm	/^ffff80000010a951:	e9 08 f0 ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a956	kernel.asm	/^ffff80000010a956 <vector174>:$/;"	l
ffff80000010a956	kernel.asm	/^ffff80000010a956:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a958	kernel.asm	/^ffff80000010a958:	68 ae 00 00 00       	pushq  $0xae$/;"	l
ffff80000010a95d	kernel.asm	/^ffff80000010a95d:	e9 fc ef ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a962	kernel.asm	/^ffff80000010a962 <vector175>:$/;"	l
ffff80000010a962	kernel.asm	/^ffff80000010a962:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a964	kernel.asm	/^ffff80000010a964:	68 af 00 00 00       	pushq  $0xaf$/;"	l
ffff80000010a969	kernel.asm	/^ffff80000010a969:	e9 f0 ef ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a96e	kernel.asm	/^ffff80000010a96e <vector176>:$/;"	l
ffff80000010a96e	kernel.asm	/^ffff80000010a96e:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a970	kernel.asm	/^ffff80000010a970:	68 b0 00 00 00       	pushq  $0xb0$/;"	l
ffff80000010a975	kernel.asm	/^ffff80000010a975:	e9 e4 ef ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a97a	kernel.asm	/^ffff80000010a97a <vector177>:$/;"	l
ffff80000010a97a	kernel.asm	/^ffff80000010a97a:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a97c	kernel.asm	/^ffff80000010a97c:	68 b1 00 00 00       	pushq  $0xb1$/;"	l
ffff80000010a981	kernel.asm	/^ffff80000010a981:	e9 d8 ef ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a986	kernel.asm	/^ffff80000010a986 <vector178>:$/;"	l
ffff80000010a986	kernel.asm	/^ffff80000010a986:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a988	kernel.asm	/^ffff80000010a988:	68 b2 00 00 00       	pushq  $0xb2$/;"	l
ffff80000010a98d	kernel.asm	/^ffff80000010a98d:	e9 cc ef ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a992	kernel.asm	/^ffff80000010a992 <vector179>:$/;"	l
ffff80000010a992	kernel.asm	/^ffff80000010a992:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a994	kernel.asm	/^ffff80000010a994:	68 b3 00 00 00       	pushq  $0xb3$/;"	l
ffff80000010a999	kernel.asm	/^ffff80000010a999:	e9 c0 ef ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a99e	kernel.asm	/^ffff80000010a99e <vector180>:$/;"	l
ffff80000010a99e	kernel.asm	/^ffff80000010a99e:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a9a0	kernel.asm	/^ffff80000010a9a0:	68 b4 00 00 00       	pushq  $0xb4$/;"	l
ffff80000010a9a5	kernel.asm	/^ffff80000010a9a5:	e9 b4 ef ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a9aa	kernel.asm	/^ffff80000010a9aa <vector181>:$/;"	l
ffff80000010a9aa	kernel.asm	/^ffff80000010a9aa:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a9ac	kernel.asm	/^ffff80000010a9ac:	68 b5 00 00 00       	pushq  $0xb5$/;"	l
ffff80000010a9b1	kernel.asm	/^ffff80000010a9b1:	e9 a8 ef ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a9b6	kernel.asm	/^ffff80000010a9b6 <vector182>:$/;"	l
ffff80000010a9b6	kernel.asm	/^ffff80000010a9b6:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a9b8	kernel.asm	/^ffff80000010a9b8:	68 b6 00 00 00       	pushq  $0xb6$/;"	l
ffff80000010a9bd	kernel.asm	/^ffff80000010a9bd:	e9 9c ef ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a9c2	kernel.asm	/^ffff80000010a9c2 <vector183>:$/;"	l
ffff80000010a9c2	kernel.asm	/^ffff80000010a9c2:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a9c4	kernel.asm	/^ffff80000010a9c4:	68 b7 00 00 00       	pushq  $0xb7$/;"	l
ffff80000010a9c9	kernel.asm	/^ffff80000010a9c9:	e9 90 ef ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a9ce	kernel.asm	/^ffff80000010a9ce <vector184>:$/;"	l
ffff80000010a9ce	kernel.asm	/^ffff80000010a9ce:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a9d0	kernel.asm	/^ffff80000010a9d0:	68 b8 00 00 00       	pushq  $0xb8$/;"	l
ffff80000010a9d5	kernel.asm	/^ffff80000010a9d5:	e9 84 ef ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a9da	kernel.asm	/^ffff80000010a9da <vector185>:$/;"	l
ffff80000010a9da	kernel.asm	/^ffff80000010a9da:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a9dc	kernel.asm	/^ffff80000010a9dc:	68 b9 00 00 00       	pushq  $0xb9$/;"	l
ffff80000010a9e1	kernel.asm	/^ffff80000010a9e1:	e9 78 ef ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a9e6	kernel.asm	/^ffff80000010a9e6 <vector186>:$/;"	l
ffff80000010a9e6	kernel.asm	/^ffff80000010a9e6:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a9e8	kernel.asm	/^ffff80000010a9e8:	68 ba 00 00 00       	pushq  $0xba$/;"	l
ffff80000010a9ed	kernel.asm	/^ffff80000010a9ed:	e9 6c ef ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a9f2	kernel.asm	/^ffff80000010a9f2 <vector187>:$/;"	l
ffff80000010a9f2	kernel.asm	/^ffff80000010a9f2:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a9f4	kernel.asm	/^ffff80000010a9f4:	68 bb 00 00 00       	pushq  $0xbb$/;"	l
ffff80000010a9f9	kernel.asm	/^ffff80000010a9f9:	e9 60 ef ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010a9fe	kernel.asm	/^ffff80000010a9fe <vector188>:$/;"	l
ffff80000010a9fe	kernel.asm	/^ffff80000010a9fe:	6a 00                	pushq  $0x0$/;"	l
ffff80000010aa00	kernel.asm	/^ffff80000010aa00:	68 bc 00 00 00       	pushq  $0xbc$/;"	l
ffff80000010aa05	kernel.asm	/^ffff80000010aa05:	e9 54 ef ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010aa0a	kernel.asm	/^ffff80000010aa0a <vector189>:$/;"	l
ffff80000010aa0a	kernel.asm	/^ffff80000010aa0a:	6a 00                	pushq  $0x0$/;"	l
ffff80000010aa0c	kernel.asm	/^ffff80000010aa0c:	68 bd 00 00 00       	pushq  $0xbd$/;"	l
ffff80000010aa11	kernel.asm	/^ffff80000010aa11:	e9 48 ef ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010aa16	kernel.asm	/^ffff80000010aa16 <vector190>:$/;"	l
ffff80000010aa16	kernel.asm	/^ffff80000010aa16:	6a 00                	pushq  $0x0$/;"	l
ffff80000010aa18	kernel.asm	/^ffff80000010aa18:	68 be 00 00 00       	pushq  $0xbe$/;"	l
ffff80000010aa1d	kernel.asm	/^ffff80000010aa1d:	e9 3c ef ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010aa22	kernel.asm	/^ffff80000010aa22 <vector191>:$/;"	l
ffff80000010aa22	kernel.asm	/^ffff80000010aa22:	6a 00                	pushq  $0x0$/;"	l
ffff80000010aa24	kernel.asm	/^ffff80000010aa24:	68 bf 00 00 00       	pushq  $0xbf$/;"	l
ffff80000010aa29	kernel.asm	/^ffff80000010aa29:	e9 30 ef ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010aa2e	kernel.asm	/^ffff80000010aa2e <vector192>:$/;"	l
ffff80000010aa2e	kernel.asm	/^ffff80000010aa2e:	6a 00                	pushq  $0x0$/;"	l
ffff80000010aa30	kernel.asm	/^ffff80000010aa30:	68 c0 00 00 00       	pushq  $0xc0$/;"	l
ffff80000010aa35	kernel.asm	/^ffff80000010aa35:	e9 24 ef ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010aa3a	kernel.asm	/^ffff80000010aa3a <vector193>:$/;"	l
ffff80000010aa3a	kernel.asm	/^ffff80000010aa3a:	6a 00                	pushq  $0x0$/;"	l
ffff80000010aa3c	kernel.asm	/^ffff80000010aa3c:	68 c1 00 00 00       	pushq  $0xc1$/;"	l
ffff80000010aa41	kernel.asm	/^ffff80000010aa41:	e9 18 ef ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010aa46	kernel.asm	/^ffff80000010aa46 <vector194>:$/;"	l
ffff80000010aa46	kernel.asm	/^ffff80000010aa46:	6a 00                	pushq  $0x0$/;"	l
ffff80000010aa48	kernel.asm	/^ffff80000010aa48:	68 c2 00 00 00       	pushq  $0xc2$/;"	l
ffff80000010aa4d	kernel.asm	/^ffff80000010aa4d:	e9 0c ef ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010aa52	kernel.asm	/^ffff80000010aa52 <vector195>:$/;"	l
ffff80000010aa52	kernel.asm	/^ffff80000010aa52:	6a 00                	pushq  $0x0$/;"	l
ffff80000010aa54	kernel.asm	/^ffff80000010aa54:	68 c3 00 00 00       	pushq  $0xc3$/;"	l
ffff80000010aa59	kernel.asm	/^ffff80000010aa59:	e9 00 ef ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010aa5e	kernel.asm	/^ffff80000010aa5e <vector196>:$/;"	l
ffff80000010aa5e	kernel.asm	/^ffff80000010aa5e:	6a 00                	pushq  $0x0$/;"	l
ffff80000010aa60	kernel.asm	/^ffff80000010aa60:	68 c4 00 00 00       	pushq  $0xc4$/;"	l
ffff80000010aa65	kernel.asm	/^ffff80000010aa65:	e9 f4 ee ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010aa6a	kernel.asm	/^ffff80000010aa6a <vector197>:$/;"	l
ffff80000010aa6a	kernel.asm	/^ffff80000010aa6a:	6a 00                	pushq  $0x0$/;"	l
ffff80000010aa6c	kernel.asm	/^ffff80000010aa6c:	68 c5 00 00 00       	pushq  $0xc5$/;"	l
ffff80000010aa71	kernel.asm	/^ffff80000010aa71:	e9 e8 ee ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010aa76	kernel.asm	/^ffff80000010aa76 <vector198>:$/;"	l
ffff80000010aa76	kernel.asm	/^ffff80000010aa76:	6a 00                	pushq  $0x0$/;"	l
ffff80000010aa78	kernel.asm	/^ffff80000010aa78:	68 c6 00 00 00       	pushq  $0xc6$/;"	l
ffff80000010aa7d	kernel.asm	/^ffff80000010aa7d:	e9 dc ee ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010aa82	kernel.asm	/^ffff80000010aa82 <vector199>:$/;"	l
ffff80000010aa82	kernel.asm	/^ffff80000010aa82:	6a 00                	pushq  $0x0$/;"	l
ffff80000010aa84	kernel.asm	/^ffff80000010aa84:	68 c7 00 00 00       	pushq  $0xc7$/;"	l
ffff80000010aa89	kernel.asm	/^ffff80000010aa89:	e9 d0 ee ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010aa8e	kernel.asm	/^ffff80000010aa8e <vector200>:$/;"	l
ffff80000010aa8e	kernel.asm	/^ffff80000010aa8e:	6a 00                	pushq  $0x0$/;"	l
ffff80000010aa90	kernel.asm	/^ffff80000010aa90:	68 c8 00 00 00       	pushq  $0xc8$/;"	l
ffff80000010aa95	kernel.asm	/^ffff80000010aa95:	e9 c4 ee ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010aa9a	kernel.asm	/^ffff80000010aa9a <vector201>:$/;"	l
ffff80000010aa9a	kernel.asm	/^ffff80000010aa9a:	6a 00                	pushq  $0x0$/;"	l
ffff80000010aa9c	kernel.asm	/^ffff80000010aa9c:	68 c9 00 00 00       	pushq  $0xc9$/;"	l
ffff80000010aaa1	kernel.asm	/^ffff80000010aaa1:	e9 b8 ee ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010aaa6	kernel.asm	/^ffff80000010aaa6 <vector202>:$/;"	l
ffff80000010aaa6	kernel.asm	/^ffff80000010aaa6:	6a 00                	pushq  $0x0$/;"	l
ffff80000010aaa8	kernel.asm	/^ffff80000010aaa8:	68 ca 00 00 00       	pushq  $0xca$/;"	l
ffff80000010aaad	kernel.asm	/^ffff80000010aaad:	e9 ac ee ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010aab2	kernel.asm	/^ffff80000010aab2 <vector203>:$/;"	l
ffff80000010aab2	kernel.asm	/^ffff80000010aab2:	6a 00                	pushq  $0x0$/;"	l
ffff80000010aab4	kernel.asm	/^ffff80000010aab4:	68 cb 00 00 00       	pushq  $0xcb$/;"	l
ffff80000010aab9	kernel.asm	/^ffff80000010aab9:	e9 a0 ee ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010aabe	kernel.asm	/^ffff80000010aabe <vector204>:$/;"	l
ffff80000010aabe	kernel.asm	/^ffff80000010aabe:	6a 00                	pushq  $0x0$/;"	l
ffff80000010aac0	kernel.asm	/^ffff80000010aac0:	68 cc 00 00 00       	pushq  $0xcc$/;"	l
ffff80000010aac5	kernel.asm	/^ffff80000010aac5:	e9 94 ee ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010aaca	kernel.asm	/^ffff80000010aaca <vector205>:$/;"	l
ffff80000010aaca	kernel.asm	/^ffff80000010aaca:	6a 00                	pushq  $0x0$/;"	l
ffff80000010aacc	kernel.asm	/^ffff80000010aacc:	68 cd 00 00 00       	pushq  $0xcd$/;"	l
ffff80000010aad1	kernel.asm	/^ffff80000010aad1:	e9 88 ee ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010aad6	kernel.asm	/^ffff80000010aad6 <vector206>:$/;"	l
ffff80000010aad6	kernel.asm	/^ffff80000010aad6:	6a 00                	pushq  $0x0$/;"	l
ffff80000010aad8	kernel.asm	/^ffff80000010aad8:	68 ce 00 00 00       	pushq  $0xce$/;"	l
ffff80000010aadd	kernel.asm	/^ffff80000010aadd:	e9 7c ee ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010aae2	kernel.asm	/^ffff80000010aae2 <vector207>:$/;"	l
ffff80000010aae2	kernel.asm	/^ffff80000010aae2:	6a 00                	pushq  $0x0$/;"	l
ffff80000010aae4	kernel.asm	/^ffff80000010aae4:	68 cf 00 00 00       	pushq  $0xcf$/;"	l
ffff80000010aae9	kernel.asm	/^ffff80000010aae9:	e9 70 ee ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010aaee	kernel.asm	/^ffff80000010aaee <vector208>:$/;"	l
ffff80000010aaee	kernel.asm	/^ffff80000010aaee:	6a 00                	pushq  $0x0$/;"	l
ffff80000010aaf0	kernel.asm	/^ffff80000010aaf0:	68 d0 00 00 00       	pushq  $0xd0$/;"	l
ffff80000010aaf5	kernel.asm	/^ffff80000010aaf5:	e9 64 ee ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010aafa	kernel.asm	/^ffff80000010aafa <vector209>:$/;"	l
ffff80000010aafa	kernel.asm	/^ffff80000010aafa:	6a 00                	pushq  $0x0$/;"	l
ffff80000010aafc	kernel.asm	/^ffff80000010aafc:	68 d1 00 00 00       	pushq  $0xd1$/;"	l
ffff80000010ab01	kernel.asm	/^ffff80000010ab01:	e9 58 ee ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010ab06	kernel.asm	/^ffff80000010ab06 <vector210>:$/;"	l
ffff80000010ab06	kernel.asm	/^ffff80000010ab06:	6a 00                	pushq  $0x0$/;"	l
ffff80000010ab08	kernel.asm	/^ffff80000010ab08:	68 d2 00 00 00       	pushq  $0xd2$/;"	l
ffff80000010ab0d	kernel.asm	/^ffff80000010ab0d:	e9 4c ee ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010ab12	kernel.asm	/^ffff80000010ab12 <vector211>:$/;"	l
ffff80000010ab12	kernel.asm	/^ffff80000010ab12:	6a 00                	pushq  $0x0$/;"	l
ffff80000010ab14	kernel.asm	/^ffff80000010ab14:	68 d3 00 00 00       	pushq  $0xd3$/;"	l
ffff80000010ab19	kernel.asm	/^ffff80000010ab19:	e9 40 ee ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010ab1e	kernel.asm	/^ffff80000010ab1e <vector212>:$/;"	l
ffff80000010ab1e	kernel.asm	/^ffff80000010ab1e:	6a 00                	pushq  $0x0$/;"	l
ffff80000010ab20	kernel.asm	/^ffff80000010ab20:	68 d4 00 00 00       	pushq  $0xd4$/;"	l
ffff80000010ab25	kernel.asm	/^ffff80000010ab25:	e9 34 ee ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010ab2a	kernel.asm	/^ffff80000010ab2a <vector213>:$/;"	l
ffff80000010ab2a	kernel.asm	/^ffff80000010ab2a:	6a 00                	pushq  $0x0$/;"	l
ffff80000010ab2c	kernel.asm	/^ffff80000010ab2c:	68 d5 00 00 00       	pushq  $0xd5$/;"	l
ffff80000010ab31	kernel.asm	/^ffff80000010ab31:	e9 28 ee ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010ab36	kernel.asm	/^ffff80000010ab36 <vector214>:$/;"	l
ffff80000010ab36	kernel.asm	/^ffff80000010ab36:	6a 00                	pushq  $0x0$/;"	l
ffff80000010ab38	kernel.asm	/^ffff80000010ab38:	68 d6 00 00 00       	pushq  $0xd6$/;"	l
ffff80000010ab3d	kernel.asm	/^ffff80000010ab3d:	e9 1c ee ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010ab42	kernel.asm	/^ffff80000010ab42 <vector215>:$/;"	l
ffff80000010ab42	kernel.asm	/^ffff80000010ab42:	6a 00                	pushq  $0x0$/;"	l
ffff80000010ab44	kernel.asm	/^ffff80000010ab44:	68 d7 00 00 00       	pushq  $0xd7$/;"	l
ffff80000010ab49	kernel.asm	/^ffff80000010ab49:	e9 10 ee ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010ab4e	kernel.asm	/^ffff80000010ab4e <vector216>:$/;"	l
ffff80000010ab4e	kernel.asm	/^ffff80000010ab4e:	6a 00                	pushq  $0x0$/;"	l
ffff80000010ab50	kernel.asm	/^ffff80000010ab50:	68 d8 00 00 00       	pushq  $0xd8$/;"	l
ffff80000010ab55	kernel.asm	/^ffff80000010ab55:	e9 04 ee ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010ab5a	kernel.asm	/^ffff80000010ab5a <vector217>:$/;"	l
ffff80000010ab5a	kernel.asm	/^ffff80000010ab5a:	6a 00                	pushq  $0x0$/;"	l
ffff80000010ab5c	kernel.asm	/^ffff80000010ab5c:	68 d9 00 00 00       	pushq  $0xd9$/;"	l
ffff80000010ab61	kernel.asm	/^ffff80000010ab61:	e9 f8 ed ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010ab66	kernel.asm	/^ffff80000010ab66 <vector218>:$/;"	l
ffff80000010ab66	kernel.asm	/^ffff80000010ab66:	6a 00                	pushq  $0x0$/;"	l
ffff80000010ab68	kernel.asm	/^ffff80000010ab68:	68 da 00 00 00       	pushq  $0xda$/;"	l
ffff80000010ab6d	kernel.asm	/^ffff80000010ab6d:	e9 ec ed ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010ab72	kernel.asm	/^ffff80000010ab72 <vector219>:$/;"	l
ffff80000010ab72	kernel.asm	/^ffff80000010ab72:	6a 00                	pushq  $0x0$/;"	l
ffff80000010ab74	kernel.asm	/^ffff80000010ab74:	68 db 00 00 00       	pushq  $0xdb$/;"	l
ffff80000010ab79	kernel.asm	/^ffff80000010ab79:	e9 e0 ed ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010ab7e	kernel.asm	/^ffff80000010ab7e <vector220>:$/;"	l
ffff80000010ab7e	kernel.asm	/^ffff80000010ab7e:	6a 00                	pushq  $0x0$/;"	l
ffff80000010ab80	kernel.asm	/^ffff80000010ab80:	68 dc 00 00 00       	pushq  $0xdc$/;"	l
ffff80000010ab85	kernel.asm	/^ffff80000010ab85:	e9 d4 ed ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010ab8a	kernel.asm	/^ffff80000010ab8a <vector221>:$/;"	l
ffff80000010ab8a	kernel.asm	/^ffff80000010ab8a:	6a 00                	pushq  $0x0$/;"	l
ffff80000010ab8c	kernel.asm	/^ffff80000010ab8c:	68 dd 00 00 00       	pushq  $0xdd$/;"	l
ffff80000010ab91	kernel.asm	/^ffff80000010ab91:	e9 c8 ed ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010ab96	kernel.asm	/^ffff80000010ab96 <vector222>:$/;"	l
ffff80000010ab96	kernel.asm	/^ffff80000010ab96:	6a 00                	pushq  $0x0$/;"	l
ffff80000010ab98	kernel.asm	/^ffff80000010ab98:	68 de 00 00 00       	pushq  $0xde$/;"	l
ffff80000010ab9d	kernel.asm	/^ffff80000010ab9d:	e9 bc ed ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010aba2	kernel.asm	/^ffff80000010aba2 <vector223>:$/;"	l
ffff80000010aba2	kernel.asm	/^ffff80000010aba2:	6a 00                	pushq  $0x0$/;"	l
ffff80000010aba4	kernel.asm	/^ffff80000010aba4:	68 df 00 00 00       	pushq  $0xdf$/;"	l
ffff80000010aba9	kernel.asm	/^ffff80000010aba9:	e9 b0 ed ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010abae	kernel.asm	/^ffff80000010abae <vector224>:$/;"	l
ffff80000010abae	kernel.asm	/^ffff80000010abae:	6a 00                	pushq  $0x0$/;"	l
ffff80000010abb0	kernel.asm	/^ffff80000010abb0:	68 e0 00 00 00       	pushq  $0xe0$/;"	l
ffff80000010abb5	kernel.asm	/^ffff80000010abb5:	e9 a4 ed ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010abba	kernel.asm	/^ffff80000010abba <vector225>:$/;"	l
ffff80000010abba	kernel.asm	/^ffff80000010abba:	6a 00                	pushq  $0x0$/;"	l
ffff80000010abbc	kernel.asm	/^ffff80000010abbc:	68 e1 00 00 00       	pushq  $0xe1$/;"	l
ffff80000010abc1	kernel.asm	/^ffff80000010abc1:	e9 98 ed ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010abc6	kernel.asm	/^ffff80000010abc6 <vector226>:$/;"	l
ffff80000010abc6	kernel.asm	/^ffff80000010abc6:	6a 00                	pushq  $0x0$/;"	l
ffff80000010abc8	kernel.asm	/^ffff80000010abc8:	68 e2 00 00 00       	pushq  $0xe2$/;"	l
ffff80000010abcd	kernel.asm	/^ffff80000010abcd:	e9 8c ed ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010abd2	kernel.asm	/^ffff80000010abd2 <vector227>:$/;"	l
ffff80000010abd2	kernel.asm	/^ffff80000010abd2:	6a 00                	pushq  $0x0$/;"	l
ffff80000010abd4	kernel.asm	/^ffff80000010abd4:	68 e3 00 00 00       	pushq  $0xe3$/;"	l
ffff80000010abd9	kernel.asm	/^ffff80000010abd9:	e9 80 ed ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010abde	kernel.asm	/^ffff80000010abde <vector228>:$/;"	l
ffff80000010abde	kernel.asm	/^ffff80000010abde:	6a 00                	pushq  $0x0$/;"	l
ffff80000010abe0	kernel.asm	/^ffff80000010abe0:	68 e4 00 00 00       	pushq  $0xe4$/;"	l
ffff80000010abe5	kernel.asm	/^ffff80000010abe5:	e9 74 ed ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010abea	kernel.asm	/^ffff80000010abea <vector229>:$/;"	l
ffff80000010abea	kernel.asm	/^ffff80000010abea:	6a 00                	pushq  $0x0$/;"	l
ffff80000010abec	kernel.asm	/^ffff80000010abec:	68 e5 00 00 00       	pushq  $0xe5$/;"	l
ffff80000010abf1	kernel.asm	/^ffff80000010abf1:	e9 68 ed ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010abf6	kernel.asm	/^ffff80000010abf6 <vector230>:$/;"	l
ffff80000010abf6	kernel.asm	/^ffff80000010abf6:	6a 00                	pushq  $0x0$/;"	l
ffff80000010abf8	kernel.asm	/^ffff80000010abf8:	68 e6 00 00 00       	pushq  $0xe6$/;"	l
ffff80000010abfd	kernel.asm	/^ffff80000010abfd:	e9 5c ed ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010ac02	kernel.asm	/^ffff80000010ac02 <vector231>:$/;"	l
ffff80000010ac02	kernel.asm	/^ffff80000010ac02:	6a 00                	pushq  $0x0$/;"	l
ffff80000010ac04	kernel.asm	/^ffff80000010ac04:	68 e7 00 00 00       	pushq  $0xe7$/;"	l
ffff80000010ac09	kernel.asm	/^ffff80000010ac09:	e9 50 ed ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010ac0e	kernel.asm	/^ffff80000010ac0e <vector232>:$/;"	l
ffff80000010ac0e	kernel.asm	/^ffff80000010ac0e:	6a 00                	pushq  $0x0$/;"	l
ffff80000010ac10	kernel.asm	/^ffff80000010ac10:	68 e8 00 00 00       	pushq  $0xe8$/;"	l
ffff80000010ac15	kernel.asm	/^ffff80000010ac15:	e9 44 ed ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010ac1a	kernel.asm	/^ffff80000010ac1a <vector233>:$/;"	l
ffff80000010ac1a	kernel.asm	/^ffff80000010ac1a:	6a 00                	pushq  $0x0$/;"	l
ffff80000010ac1c	kernel.asm	/^ffff80000010ac1c:	68 e9 00 00 00       	pushq  $0xe9$/;"	l
ffff80000010ac21	kernel.asm	/^ffff80000010ac21:	e9 38 ed ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010ac26	kernel.asm	/^ffff80000010ac26 <vector234>:$/;"	l
ffff80000010ac26	kernel.asm	/^ffff80000010ac26:	6a 00                	pushq  $0x0$/;"	l
ffff80000010ac28	kernel.asm	/^ffff80000010ac28:	68 ea 00 00 00       	pushq  $0xea$/;"	l
ffff80000010ac2d	kernel.asm	/^ffff80000010ac2d:	e9 2c ed ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010ac32	kernel.asm	/^ffff80000010ac32 <vector235>:$/;"	l
ffff80000010ac32	kernel.asm	/^ffff80000010ac32:	6a 00                	pushq  $0x0$/;"	l
ffff80000010ac34	kernel.asm	/^ffff80000010ac34:	68 eb 00 00 00       	pushq  $0xeb$/;"	l
ffff80000010ac39	kernel.asm	/^ffff80000010ac39:	e9 20 ed ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010ac3e	kernel.asm	/^ffff80000010ac3e <vector236>:$/;"	l
ffff80000010ac3e	kernel.asm	/^ffff80000010ac3e:	6a 00                	pushq  $0x0$/;"	l
ffff80000010ac40	kernel.asm	/^ffff80000010ac40:	68 ec 00 00 00       	pushq  $0xec$/;"	l
ffff80000010ac45	kernel.asm	/^ffff80000010ac45:	e9 14 ed ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010ac4a	kernel.asm	/^ffff80000010ac4a <vector237>:$/;"	l
ffff80000010ac4a	kernel.asm	/^ffff80000010ac4a:	6a 00                	pushq  $0x0$/;"	l
ffff80000010ac4c	kernel.asm	/^ffff80000010ac4c:	68 ed 00 00 00       	pushq  $0xed$/;"	l
ffff80000010ac51	kernel.asm	/^ffff80000010ac51:	e9 08 ed ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010ac56	kernel.asm	/^ffff80000010ac56 <vector238>:$/;"	l
ffff80000010ac56	kernel.asm	/^ffff80000010ac56:	6a 00                	pushq  $0x0$/;"	l
ffff80000010ac58	kernel.asm	/^ffff80000010ac58:	68 ee 00 00 00       	pushq  $0xee$/;"	l
ffff80000010ac5d	kernel.asm	/^ffff80000010ac5d:	e9 fc ec ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010ac62	kernel.asm	/^ffff80000010ac62 <vector239>:$/;"	l
ffff80000010ac62	kernel.asm	/^ffff80000010ac62:	6a 00                	pushq  $0x0$/;"	l
ffff80000010ac64	kernel.asm	/^ffff80000010ac64:	68 ef 00 00 00       	pushq  $0xef$/;"	l
ffff80000010ac69	kernel.asm	/^ffff80000010ac69:	e9 f0 ec ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010ac6e	kernel.asm	/^ffff80000010ac6e <vector240>:$/;"	l
ffff80000010ac6e	kernel.asm	/^ffff80000010ac6e:	6a 00                	pushq  $0x0$/;"	l
ffff80000010ac70	kernel.asm	/^ffff80000010ac70:	68 f0 00 00 00       	pushq  $0xf0$/;"	l
ffff80000010ac75	kernel.asm	/^ffff80000010ac75:	e9 e4 ec ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010ac7a	kernel.asm	/^ffff80000010ac7a <vector241>:$/;"	l
ffff80000010ac7a	kernel.asm	/^ffff80000010ac7a:	6a 00                	pushq  $0x0$/;"	l
ffff80000010ac7c	kernel.asm	/^ffff80000010ac7c:	68 f1 00 00 00       	pushq  $0xf1$/;"	l
ffff80000010ac81	kernel.asm	/^ffff80000010ac81:	e9 d8 ec ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010ac86	kernel.asm	/^ffff80000010ac86 <vector242>:$/;"	l
ffff80000010ac86	kernel.asm	/^ffff80000010ac86:	6a 00                	pushq  $0x0$/;"	l
ffff80000010ac88	kernel.asm	/^ffff80000010ac88:	68 f2 00 00 00       	pushq  $0xf2$/;"	l
ffff80000010ac8d	kernel.asm	/^ffff80000010ac8d:	e9 cc ec ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010ac92	kernel.asm	/^ffff80000010ac92 <vector243>:$/;"	l
ffff80000010ac92	kernel.asm	/^ffff80000010ac92:	6a 00                	pushq  $0x0$/;"	l
ffff80000010ac94	kernel.asm	/^ffff80000010ac94:	68 f3 00 00 00       	pushq  $0xf3$/;"	l
ffff80000010ac99	kernel.asm	/^ffff80000010ac99:	e9 c0 ec ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010ac9e	kernel.asm	/^ffff80000010ac9e <vector244>:$/;"	l
ffff80000010ac9e	kernel.asm	/^ffff80000010ac9e:	6a 00                	pushq  $0x0$/;"	l
ffff80000010aca0	kernel.asm	/^ffff80000010aca0:	68 f4 00 00 00       	pushq  $0xf4$/;"	l
ffff80000010aca5	kernel.asm	/^ffff80000010aca5:	e9 b4 ec ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010acaa	kernel.asm	/^ffff80000010acaa <vector245>:$/;"	l
ffff80000010acaa	kernel.asm	/^ffff80000010acaa:	6a 00                	pushq  $0x0$/;"	l
ffff80000010acac	kernel.asm	/^ffff80000010acac:	68 f5 00 00 00       	pushq  $0xf5$/;"	l
ffff80000010acb1	kernel.asm	/^ffff80000010acb1:	e9 a8 ec ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010acb6	kernel.asm	/^ffff80000010acb6 <vector246>:$/;"	l
ffff80000010acb6	kernel.asm	/^ffff80000010acb6:	6a 00                	pushq  $0x0$/;"	l
ffff80000010acb8	kernel.asm	/^ffff80000010acb8:	68 f6 00 00 00       	pushq  $0xf6$/;"	l
ffff80000010acbd	kernel.asm	/^ffff80000010acbd:	e9 9c ec ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010acc2	kernel.asm	/^ffff80000010acc2 <vector247>:$/;"	l
ffff80000010acc2	kernel.asm	/^ffff80000010acc2:	6a 00                	pushq  $0x0$/;"	l
ffff80000010acc4	kernel.asm	/^ffff80000010acc4:	68 f7 00 00 00       	pushq  $0xf7$/;"	l
ffff80000010acc9	kernel.asm	/^ffff80000010acc9:	e9 90 ec ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010acce	kernel.asm	/^ffff80000010acce <vector248>:$/;"	l
ffff80000010acce	kernel.asm	/^ffff80000010acce:	6a 00                	pushq  $0x0$/;"	l
ffff80000010acd0	kernel.asm	/^ffff80000010acd0:	68 f8 00 00 00       	pushq  $0xf8$/;"	l
ffff80000010acd5	kernel.asm	/^ffff80000010acd5:	e9 84 ec ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010acda	kernel.asm	/^ffff80000010acda <vector249>:$/;"	l
ffff80000010acda	kernel.asm	/^ffff80000010acda:	6a 00                	pushq  $0x0$/;"	l
ffff80000010acdc	kernel.asm	/^ffff80000010acdc:	68 f9 00 00 00       	pushq  $0xf9$/;"	l
ffff80000010ace1	kernel.asm	/^ffff80000010ace1:	e9 78 ec ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010ace6	kernel.asm	/^ffff80000010ace6 <vector250>:$/;"	l
ffff80000010ace6	kernel.asm	/^ffff80000010ace6:	6a 00                	pushq  $0x0$/;"	l
ffff80000010ace8	kernel.asm	/^ffff80000010ace8:	68 fa 00 00 00       	pushq  $0xfa$/;"	l
ffff80000010aced	kernel.asm	/^ffff80000010aced:	e9 6c ec ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010acf2	kernel.asm	/^ffff80000010acf2 <vector251>:$/;"	l
ffff80000010acf2	kernel.asm	/^ffff80000010acf2:	6a 00                	pushq  $0x0$/;"	l
ffff80000010acf4	kernel.asm	/^ffff80000010acf4:	68 fb 00 00 00       	pushq  $0xfb$/;"	l
ffff80000010acf9	kernel.asm	/^ffff80000010acf9:	e9 60 ec ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010acfe	kernel.asm	/^ffff80000010acfe <vector252>:$/;"	l
ffff80000010acfe	kernel.asm	/^ffff80000010acfe:	6a 00                	pushq  $0x0$/;"	l
ffff80000010ad00	kernel.asm	/^ffff80000010ad00:	68 fc 00 00 00       	pushq  $0xfc$/;"	l
ffff80000010ad05	kernel.asm	/^ffff80000010ad05:	e9 54 ec ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010ad0a	kernel.asm	/^ffff80000010ad0a <vector253>:$/;"	l
ffff80000010ad0a	kernel.asm	/^ffff80000010ad0a:	6a 00                	pushq  $0x0$/;"	l
ffff80000010ad0c	kernel.asm	/^ffff80000010ad0c:	68 fd 00 00 00       	pushq  $0xfd$/;"	l
ffff80000010ad11	kernel.asm	/^ffff80000010ad11:	e9 48 ec ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010ad16	kernel.asm	/^ffff80000010ad16 <vector254>:$/;"	l
ffff80000010ad16	kernel.asm	/^ffff80000010ad16:	6a 00                	pushq  $0x0$/;"	l
ffff80000010ad18	kernel.asm	/^ffff80000010ad18:	68 fe 00 00 00       	pushq  $0xfe$/;"	l
ffff80000010ad1d	kernel.asm	/^ffff80000010ad1d:	e9 3c ec ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010ad22	kernel.asm	/^ffff80000010ad22 <vector255>:$/;"	l
ffff80000010ad22	kernel.asm	/^ffff80000010ad22:	6a 00                	pushq  $0x0$/;"	l
ffff80000010ad24	kernel.asm	/^ffff80000010ad24:	68 ff 00 00 00       	pushq  $0xff$/;"	l
ffff80000010ad29	kernel.asm	/^ffff80000010ad29:	e9 30 ec ff ff       	jmpq   ffff80000010995e <alltraps>$/;"	l
ffff80000010ad2e	kernel.asm	/^ffff80000010ad2e <lgdt>:$/;"	l
ffff80000010ad2e	kernel.asm	/^ffff80000010ad2e:	55                   	push   %rbp$/;"	l
ffff80000010ad2f	kernel.asm	/^ffff80000010ad2f:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010ad32	kernel.asm	/^ffff80000010ad32:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ffff80000010ad36	kernel.asm	/^ffff80000010ad36:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
ffff80000010ad3a	kernel.asm	/^ffff80000010ad3a:	89 75 e4             	mov    %esi,-0x1c(%rbp)$/;"	l
ffff80000010ad3d	kernel.asm	/^ffff80000010ad3d:	8b 45 e4             	mov    -0x1c(%rbp),%eax$/;"	l
ffff80000010ad40	kernel.asm	/^ffff80000010ad40:	83 e8 01             	sub    $0x1,%eax$/;"	l
ffff80000010ad43	kernel.asm	/^ffff80000010ad43:	66 89 45 f0          	mov    %ax,-0x10(%rbp)$/;"	l
ffff80000010ad47	kernel.asm	/^ffff80000010ad47:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010ad4b	kernel.asm	/^ffff80000010ad4b:	66 89 45 f2          	mov    %ax,-0xe(%rbp)$/;"	l
ffff80000010ad4f	kernel.asm	/^ffff80000010ad4f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010ad53	kernel.asm	/^ffff80000010ad53:	48 c1 e8 10          	shr    $0x10,%rax$/;"	l
ffff80000010ad57	kernel.asm	/^ffff80000010ad57:	66 89 45 f4          	mov    %ax,-0xc(%rbp)$/;"	l
ffff80000010ad5b	kernel.asm	/^ffff80000010ad5b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010ad5f	kernel.asm	/^ffff80000010ad5f:	48 c1 e8 20          	shr    $0x20,%rax$/;"	l
ffff80000010ad63	kernel.asm	/^ffff80000010ad63:	66 89 45 f6          	mov    %ax,-0xa(%rbp)$/;"	l
ffff80000010ad67	kernel.asm	/^ffff80000010ad67:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010ad6b	kernel.asm	/^ffff80000010ad6b:	48 c1 e8 30          	shr    $0x30,%rax$/;"	l
ffff80000010ad6f	kernel.asm	/^ffff80000010ad6f:	66 89 45 f8          	mov    %ax,-0x8(%rbp)$/;"	l
ffff80000010ad73	kernel.asm	/^ffff80000010ad73:	48 8d 45 f0          	lea    -0x10(%rbp),%rax$/;"	l
ffff80000010ad77	kernel.asm	/^ffff80000010ad77:	0f 01 10             	lgdt   (%rax)$/;"	l
ffff80000010ad7a	kernel.asm	/^ffff80000010ad7a:	90                   	nop$/;"	l
ffff80000010ad7b	kernel.asm	/^ffff80000010ad7b:	c9                   	leaveq $/;"	l
ffff80000010ad7c	kernel.asm	/^ffff80000010ad7c:	c3                   	retq   $/;"	l
ffff80000010ad7d	kernel.asm	/^ffff80000010ad7d <ltr>:$/;"	l
ffff80000010ad7d	kernel.asm	/^ffff80000010ad7d:	55                   	push   %rbp$/;"	l
ffff80000010ad7e	kernel.asm	/^ffff80000010ad7e:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010ad81	kernel.asm	/^ffff80000010ad81:	48 83 ec 08          	sub    $0x8,%rsp$/;"	l
ffff80000010ad85	kernel.asm	/^ffff80000010ad85:	89 f8                	mov    %edi,%eax$/;"	l
ffff80000010ad87	kernel.asm	/^ffff80000010ad87:	66 89 45 fc          	mov    %ax,-0x4(%rbp)$/;"	l
ffff80000010ad8b	kernel.asm	/^ffff80000010ad8b:	0f b7 45 fc          	movzwl -0x4(%rbp),%eax$/;"	l
ffff80000010ad8f	kernel.asm	/^ffff80000010ad8f:	0f 00 d8             	ltr    %ax$/;"	l
ffff80000010ad92	kernel.asm	/^ffff80000010ad92:	90                   	nop$/;"	l
ffff80000010ad93	kernel.asm	/^ffff80000010ad93:	c9                   	leaveq $/;"	l
ffff80000010ad94	kernel.asm	/^ffff80000010ad94:	c3                   	retq   $/;"	l
ffff80000010ad95	kernel.asm	/^ffff80000010ad95 <lcr3>:$/;"	l
ffff80000010ad95	kernel.asm	/^ffff80000010ad95:	55                   	push   %rbp$/;"	l
ffff80000010ad96	kernel.asm	/^ffff80000010ad96:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010ad99	kernel.asm	/^ffff80000010ad99:	48 83 ec 08          	sub    $0x8,%rsp$/;"	l
ffff80000010ad9d	kernel.asm	/^ffff80000010ad9d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)$/;"	l
ffff80000010ada1	kernel.asm	/^ffff80000010ada1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010ada5	kernel.asm	/^ffff80000010ada5:	0f 22 d8             	mov    %rax,%cr3$/;"	l
ffff80000010ada8	kernel.asm	/^ffff80000010ada8:	90                   	nop$/;"	l
ffff80000010ada9	kernel.asm	/^ffff80000010ada9:	c9                   	leaveq $/;"	l
ffff80000010adaa	kernel.asm	/^ffff80000010adaa:	c3                   	retq   $/;"	l
ffff80000010adab	kernel.asm	/^ffff80000010adab <v2p>:$/;"	l
ffff80000010adab	kernel.asm	/^ffff80000010adab:	55                   	push   %rbp$/;"	l
ffff80000010adac	kernel.asm	/^ffff80000010adac:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010adaf	kernel.asm	/^ffff80000010adaf:	48 83 ec 08          	sub    $0x8,%rsp$/;"	l
ffff80000010adb3	kernel.asm	/^ffff80000010adb3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)$/;"	l
ffff80000010adb7	kernel.asm	/^ffff80000010adb7:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx$/;"	l
ffff80000010adbb	kernel.asm	/^ffff80000010adbb:	48 b8 00 00 00 00 00 	movabs $0x800000000000,%rax$/;"	l
ffff80000010adc2	kernel.asm	/^ffff80000010adc2:	80 00 00 $/;"	l
ffff80000010adc5	kernel.asm	/^ffff80000010adc5:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff80000010adc8	kernel.asm	/^ffff80000010adc8:	c9                   	leaveq $/;"	l
ffff80000010adc9	kernel.asm	/^ffff80000010adc9:	c3                   	retq   $/;"	l
ffff80000010adca	kernel.asm	/^ffff80000010adca <tss_set_rsp>:$/;"	l
ffff80000010adca	kernel.asm	/^ffff80000010adca:	55                   	push   %rbp$/;"	l
ffff80000010adcb	kernel.asm	/^ffff80000010adcb:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010adce	kernel.asm	/^ffff80000010adce:	48 83 ec 18          	sub    $0x18,%rsp$/;"	l
ffff80000010add2	kernel.asm	/^ffff80000010add2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)$/;"	l
ffff80000010add6	kernel.asm	/^ffff80000010add6:	89 75 f4             	mov    %esi,-0xc(%rbp)$/;"	l
ffff80000010add9	kernel.asm	/^ffff80000010add9:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)$/;"	l
ffff80000010addd	kernel.asm	/^ffff80000010addd:	8b 45 f4             	mov    -0xc(%rbp),%eax$/;"	l
ffff80000010ade0	kernel.asm	/^ffff80000010ade0:	01 c0                	add    %eax,%eax$/;"	l
ffff80000010ade2	kernel.asm	/^ffff80000010ade2:	83 c0 01             	add    $0x1,%eax$/;"	l
ffff80000010ade5	kernel.asm	/^ffff80000010ade5:	89 c0                	mov    %eax,%eax$/;"	l
ffff80000010ade7	kernel.asm	/^ffff80000010ade7:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx$/;"	l
ffff80000010adee	kernel.asm	/^ffff80000010adee:	00 $/;"	l
ffff80000010adef	kernel.asm	/^ffff80000010adef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010adf3	kernel.asm	/^ffff80000010adf3:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff80000010adf6	kernel.asm	/^ffff80000010adf6:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx$/;"	l
ffff80000010adfa	kernel.asm	/^ffff80000010adfa:	89 10                	mov    %edx,(%rax)$/;"	l
ffff80000010adfc	kernel.asm	/^ffff80000010adfc:	8b 45 f4             	mov    -0xc(%rbp),%eax$/;"	l
ffff80000010adff	kernel.asm	/^ffff80000010adff:	83 c0 01             	add    $0x1,%eax$/;"	l
ffff80000010ae02	kernel.asm	/^ffff80000010ae02:	01 c0                	add    %eax,%eax$/;"	l
ffff80000010ae04	kernel.asm	/^ffff80000010ae04:	89 c0                	mov    %eax,%eax$/;"	l
ffff80000010ae06	kernel.asm	/^ffff80000010ae06:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx$/;"	l
ffff80000010ae0d	kernel.asm	/^ffff80000010ae0d:	00 $/;"	l
ffff80000010ae0e	kernel.asm	/^ffff80000010ae0e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010ae12	kernel.asm	/^ffff80000010ae12:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff80000010ae15	kernel.asm	/^ffff80000010ae15:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx$/;"	l
ffff80000010ae19	kernel.asm	/^ffff80000010ae19:	48 c1 ea 20          	shr    $0x20,%rdx$/;"	l
ffff80000010ae1d	kernel.asm	/^ffff80000010ae1d:	89 10                	mov    %edx,(%rax)$/;"	l
ffff80000010ae1f	kernel.asm	/^ffff80000010ae1f:	90                   	nop$/;"	l
ffff80000010ae20	kernel.asm	/^ffff80000010ae20:	c9                   	leaveq $/;"	l
ffff80000010ae21	kernel.asm	/^ffff80000010ae21:	c3                   	retq   $/;"	l
ffff80000010ae22	kernel.asm	/^ffff80000010ae22 <syscallinit>:$/;"	l
ffff80000010ae22	kernel.asm	/^ffff80000010ae22:	55                   	push   %rbp$/;"	l
ffff80000010ae23	kernel.asm	/^ffff80000010ae23:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010ae26	kernel.asm	/^ffff80000010ae26:	48 be 00 00 00 00 08 	movabs $0x18000800000000,%rsi$/;"	l
ffff80000010ae2d	kernel.asm	/^ffff80000010ae2d:	00 18 00 $/;"	l
ffff80000010ae30	kernel.asm	/^ffff80000010ae30:	bf 81 00 00 c0       	mov    $0xc0000081,%edi$/;"	l
ffff80000010ae35	kernel.asm	/^ffff80000010ae35:	48 b8 01 01 10 00 00 	movabs $0xffff800000100101,%rax$/;"	l
ffff80000010ae3c	kernel.asm	/^ffff80000010ae3c:	80 ff ff $/;"	l
ffff80000010ae3f	kernel.asm	/^ffff80000010ae3f:	ff d0                	callq  *%rax$/;"	l
ffff80000010ae41	kernel.asm	/^ffff80000010ae41:	48 b8 1a 01 10 00 00 	movabs $0xffff80000010011a,%rax$/;"	l
ffff80000010ae48	kernel.asm	/^ffff80000010ae48:	80 ff ff $/;"	l
ffff80000010ae4b	kernel.asm	/^ffff80000010ae4b:	48 89 c6             	mov    %rax,%rsi$/;"	l
ffff80000010ae4e	kernel.asm	/^ffff80000010ae4e:	bf 82 00 00 c0       	mov    $0xc0000082,%edi$/;"	l
ffff80000010ae53	kernel.asm	/^ffff80000010ae53:	48 b8 01 01 10 00 00 	movabs $0xffff800000100101,%rax$/;"	l
ffff80000010ae5a	kernel.asm	/^ffff80000010ae5a:	80 ff ff $/;"	l
ffff80000010ae5d	kernel.asm	/^ffff80000010ae5d:	ff d0                	callq  *%rax$/;"	l
ffff80000010ae5f	kernel.asm	/^ffff80000010ae5f:	48 b8 11 01 10 00 00 	movabs $0xffff800000100111,%rax$/;"	l
ffff80000010ae66	kernel.asm	/^ffff80000010ae66:	80 ff ff $/;"	l
ffff80000010ae69	kernel.asm	/^ffff80000010ae69:	48 89 c6             	mov    %rax,%rsi$/;"	l
ffff80000010ae6c	kernel.asm	/^ffff80000010ae6c:	bf 83 00 00 c0       	mov    $0xc0000083,%edi$/;"	l
ffff80000010ae71	kernel.asm	/^ffff80000010ae71:	48 b8 01 01 10 00 00 	movabs $0xffff800000100101,%rax$/;"	l
ffff80000010ae78	kernel.asm	/^ffff80000010ae78:	80 ff ff $/;"	l
ffff80000010ae7b	kernel.asm	/^ffff80000010ae7b:	ff d0                	callq  *%rax$/;"	l
ffff80000010ae7d	kernel.asm	/^ffff80000010ae7d:	be 00 77 04 00       	mov    $0x47700,%esi$/;"	l
ffff80000010ae82	kernel.asm	/^ffff80000010ae82:	bf 84 00 00 c0       	mov    $0xc0000084,%edi$/;"	l
ffff80000010ae87	kernel.asm	/^ffff80000010ae87:	48 b8 01 01 10 00 00 	movabs $0xffff800000100101,%rax$/;"	l
ffff80000010ae8e	kernel.asm	/^ffff80000010ae8e:	80 ff ff $/;"	l
ffff80000010ae91	kernel.asm	/^ffff80000010ae91:	ff d0                	callq  *%rax$/;"	l
ffff80000010ae93	kernel.asm	/^ffff80000010ae93:	90                   	nop$/;"	l
ffff80000010ae94	kernel.asm	/^ffff80000010ae94:	5d                   	pop    %rbp$/;"	l
ffff80000010ae95	kernel.asm	/^ffff80000010ae95:	c3                   	retq   $/;"	l
ffff80000010ae96	kernel.asm	/^ffff80000010ae96 <seginit>:$/;"	l
ffff80000010ae96	kernel.asm	/^ffff80000010ae96:	55                   	push   %rbp$/;"	l
ffff80000010ae97	kernel.asm	/^ffff80000010ae97:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010ae9a	kernel.asm	/^ffff80000010ae9a:	48 83 ec 30          	sub    $0x30,%rsp$/;"	l
ffff80000010ae9e	kernel.asm	/^ffff80000010ae9e:	48 b8 95 41 10 00 00 	movabs $0xffff800000104195,%rax$/;"	l
ffff80000010aea5	kernel.asm	/^ffff80000010aea5:	80 ff ff $/;"	l
ffff80000010aea8	kernel.asm	/^ffff80000010aea8:	ff d0                	callq  *%rax$/;"	l
ffff80000010aeaa	kernel.asm	/^ffff80000010aeaa:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff80000010aeae	kernel.asm	/^ffff80000010aeae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010aeb2	kernel.asm	/^ffff80000010aeb2:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
ffff80000010aeb7	kernel.asm	/^ffff80000010aeb7:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffff80000010aebc	kernel.asm	/^ffff80000010aebc:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010aebf	kernel.asm	/^ffff80000010aebf:	48 b8 9d 7c 10 00 00 	movabs $0xffff800000107c9d,%rax$/;"	l
ffff80000010aec6	kernel.asm	/^ffff80000010aec6:	80 ff ff $/;"	l
ffff80000010aec9	kernel.asm	/^ffff80000010aec9:	ff d0                	callq  *%rax$/;"	l
ffff80000010aecb	kernel.asm	/^ffff80000010aecb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010aecf	kernel.asm	/^ffff80000010aecf:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ffff80000010aed3	kernel.asm	/^ffff80000010aed3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010aed7	kernel.asm	/^ffff80000010aed7:	48 05 00 04 00 00    	add    $0x400,%rax$/;"	l
ffff80000010aedd	kernel.asm	/^ffff80000010aedd:	48 89 45 e8          	mov    %rax,-0x18(%rbp)$/;"	l
ffff80000010aee1	kernel.asm	/^ffff80000010aee1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010aee5	kernel.asm	/^ffff80000010aee5:	48 83 c0 40          	add    $0x40,%rax$/;"	l
ffff80000010aee9	kernel.asm	/^ffff80000010aee9:	c7 00 00 00 68 00    	movl   $0x680000,(%rax)$/;"	l
ffff80000010aeef	kernel.asm	/^ffff80000010aeef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010aef3	kernel.asm	/^ffff80000010aef3:	48 05 00 08 00 00    	add    $0x800,%rax$/;"	l
ffff80000010aef9	kernel.asm	/^ffff80000010aef9:	48 89 c6             	mov    %rax,%rsi$/;"	l
ffff80000010aefc	kernel.asm	/^ffff80000010aefc:	bf 00 01 00 c0       	mov    $0xc0000100,%edi$/;"	l
ffff80000010af01	kernel.asm	/^ffff80000010af01:	48 b8 01 01 10 00 00 	movabs $0xffff800000100101,%rax$/;"	l
ffff80000010af08	kernel.asm	/^ffff80000010af08:	80 ff ff $/;"	l
ffff80000010af0b	kernel.asm	/^ffff80000010af0b:	ff d0                	callq  *%rax$/;"	l
ffff80000010af0d	kernel.asm	/^ffff80000010af0d:	48 b8 ed 46 10 00 00 	movabs $0xffff8000001046ed,%rax$/;"	l
ffff80000010af14	kernel.asm	/^ffff80000010af14:	80 ff ff $/;"	l
ffff80000010af17	kernel.asm	/^ffff80000010af17:	ff d0                	callq  *%rax$/;"	l
ffff80000010af19	kernel.asm	/^ffff80000010af19:	48 98                	cltq   $/;"	l
ffff80000010af1b	kernel.asm	/^ffff80000010af1b:	48 89 c2             	mov    %rax,%rdx$/;"	l
ffff80000010af1e	kernel.asm	/^ffff80000010af1e:	48 8d 04 d5 00 00 00 	lea    0x0(,%rdx,8),%rax$/;"	l
ffff80000010af25	kernel.asm	/^ffff80000010af25:	00 $/;"	l
ffff80000010af26	kernel.asm	/^ffff80000010af26:	48 89 c2             	mov    %rax,%rdx$/;"	l
ffff80000010af29	kernel.asm	/^ffff80000010af29:	48 89 d0             	mov    %rdx,%rax$/;"	l
ffff80000010af2c	kernel.asm	/^ffff80000010af2c:	48 c1 e0 05          	shl    $0x5,%rax$/;"	l
ffff80000010af30	kernel.asm	/^ffff80000010af30:	48 29 d0             	sub    %rdx,%rax$/;"	l
ffff80000010af33	kernel.asm	/^ffff80000010af33:	48 ba 80 84 11 00 00 	movabs $0xffff800000118480,%rdx$/;"	l
ffff80000010af3a	kernel.asm	/^ffff80000010af3a:	80 ff ff $/;"	l
ffff80000010af3d	kernel.asm	/^ffff80000010af3d:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff80000010af40	kernel.asm	/^ffff80000010af40:	48 89 45 e0          	mov    %rax,-0x20(%rbp)$/;"	l
ffff80000010af44	kernel.asm	/^ffff80000010af44:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff80000010af48	kernel.asm	/^ffff80000010af48:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx$/;"	l
ffff80000010af4c	kernel.asm	/^ffff80000010af4c:	48 89 90 f0 00 00 00 	mov    %rdx,0xf0(%rax)$/;"	l
ffff80000010af53	kernel.asm	/^ffff80000010af53:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff80000010af57	kernel.asm	/^ffff80000010af57:	64 48 89 04 25 f0 ff 	mov    %rax,%fs:0xfffffffffffffff0$/;"	l
ffff80000010af5e	kernel.asm	/^ffff80000010af5e:	ff ff $/;"	l
ffff80000010af60	kernel.asm	/^ffff80000010af60:	64 48 c7 04 25 f8 ff 	movq   $0x0,%fs:0xfffffffffffffff8$/;"	l
ffff80000010af67	kernel.asm	/^ffff80000010af67:	ff ff 00 00 00 00 $/;"	l
ffff80000010af6d	kernel.asm	/^ffff80000010af6d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010af71	kernel.asm	/^ffff80000010af71:	48 89 45 d8          	mov    %rax,-0x28(%rbp)$/;"	l
ffff80000010af75	kernel.asm	/^ffff80000010af75:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff80000010af79	kernel.asm	/^ffff80000010af79:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)$/;"	l
ffff80000010af80	kernel.asm	/^ffff80000010af80:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff80000010af84	kernel.asm	/^ffff80000010af84:	48 83 c0 08          	add    $0x8,%rax$/;"	l
ffff80000010af88	kernel.asm	/^ffff80000010af88:	66 c7 00 00 00       	movw   $0x0,(%rax)$/;"	l
ffff80000010af8d	kernel.asm	/^ffff80000010af8d:	66 c7 40 02 00 00    	movw   $0x0,0x2(%rax)$/;"	l
ffff80000010af93	kernel.asm	/^ffff80000010af93:	c6 40 04 00          	movb   $0x0,0x4(%rax)$/;"	l
ffff80000010af97	kernel.asm	/^ffff80000010af97:	0f b6 50 05          	movzbl 0x5(%rax),%edx$/;"	l
ffff80000010af9b	kernel.asm	/^ffff80000010af9b:	83 e2 f0             	and    $0xfffffff0,%edx$/;"	l
ffff80000010af9e	kernel.asm	/^ffff80000010af9e:	83 ca 0a             	or     $0xa,%edx$/;"	l
ffff80000010afa1	kernel.asm	/^ffff80000010afa1:	88 50 05             	mov    %dl,0x5(%rax)$/;"	l
ffff80000010afa4	kernel.asm	/^ffff80000010afa4:	0f b6 50 05          	movzbl 0x5(%rax),%edx$/;"	l
ffff80000010afa8	kernel.asm	/^ffff80000010afa8:	83 ca 10             	or     $0x10,%edx$/;"	l
ffff80000010afab	kernel.asm	/^ffff80000010afab:	88 50 05             	mov    %dl,0x5(%rax)$/;"	l
ffff80000010afae	kernel.asm	/^ffff80000010afae:	0f b6 50 05          	movzbl 0x5(%rax),%edx$/;"	l
ffff80000010afb2	kernel.asm	/^ffff80000010afb2:	83 e2 9f             	and    $0xffffff9f,%edx$/;"	l
ffff80000010afb5	kernel.asm	/^ffff80000010afb5:	88 50 05             	mov    %dl,0x5(%rax)$/;"	l
ffff80000010afb8	kernel.asm	/^ffff80000010afb8:	0f b6 50 05          	movzbl 0x5(%rax),%edx$/;"	l
ffff80000010afbc	kernel.asm	/^ffff80000010afbc:	83 ca 80             	or     $0xffffff80,%edx$/;"	l
ffff80000010afbf	kernel.asm	/^ffff80000010afbf:	88 50 05             	mov    %dl,0x5(%rax)$/;"	l
ffff80000010afc2	kernel.asm	/^ffff80000010afc2:	0f b6 50 06          	movzbl 0x6(%rax),%edx$/;"	l
ffff80000010afc6	kernel.asm	/^ffff80000010afc6:	83 e2 f0             	and    $0xfffffff0,%edx$/;"	l
ffff80000010afc9	kernel.asm	/^ffff80000010afc9:	88 50 06             	mov    %dl,0x6(%rax)$/;"	l
ffff80000010afcc	kernel.asm	/^ffff80000010afcc:	0f b6 50 06          	movzbl 0x6(%rax),%edx$/;"	l
ffff80000010afd0	kernel.asm	/^ffff80000010afd0:	83 e2 ef             	and    $0xffffffef,%edx$/;"	l
ffff80000010afd3	kernel.asm	/^ffff80000010afd3:	88 50 06             	mov    %dl,0x6(%rax)$/;"	l
ffff80000010afd6	kernel.asm	/^ffff80000010afd6:	0f b6 50 06          	movzbl 0x6(%rax),%edx$/;"	l
ffff80000010afda	kernel.asm	/^ffff80000010afda:	83 ca 20             	or     $0x20,%edx$/;"	l
ffff80000010afdd	kernel.asm	/^ffff80000010afdd:	88 50 06             	mov    %dl,0x6(%rax)$/;"	l
ffff80000010afe0	kernel.asm	/^ffff80000010afe0:	0f b6 50 06          	movzbl 0x6(%rax),%edx$/;"	l
ffff80000010afe4	kernel.asm	/^ffff80000010afe4:	83 e2 bf             	and    $0xffffffbf,%edx$/;"	l
ffff80000010afe7	kernel.asm	/^ffff80000010afe7:	88 50 06             	mov    %dl,0x6(%rax)$/;"	l
ffff80000010afea	kernel.asm	/^ffff80000010afea:	0f b6 50 06          	movzbl 0x6(%rax),%edx$/;"	l
ffff80000010afee	kernel.asm	/^ffff80000010afee:	83 ca 80             	or     $0xffffff80,%edx$/;"	l
ffff80000010aff1	kernel.asm	/^ffff80000010aff1:	88 50 06             	mov    %dl,0x6(%rax)$/;"	l
ffff80000010aff4	kernel.asm	/^ffff80000010aff4:	c6 40 07 00          	movb   $0x0,0x7(%rax)$/;"	l
ffff80000010aff8	kernel.asm	/^ffff80000010aff8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff80000010affc	kernel.asm	/^ffff80000010affc:	48 83 c0 28          	add    $0x28,%rax$/;"	l
ffff80000010b000	kernel.asm	/^ffff80000010b000:	66 c7 00 00 00       	movw   $0x0,(%rax)$/;"	l
ffff80000010b005	kernel.asm	/^ffff80000010b005:	66 c7 40 02 00 00    	movw   $0x0,0x2(%rax)$/;"	l
ffff80000010b00b	kernel.asm	/^ffff80000010b00b:	c6 40 04 00          	movb   $0x0,0x4(%rax)$/;"	l
ffff80000010b00f	kernel.asm	/^ffff80000010b00f:	0f b6 50 05          	movzbl 0x5(%rax),%edx$/;"	l
ffff80000010b013	kernel.asm	/^ffff80000010b013:	83 e2 f0             	and    $0xfffffff0,%edx$/;"	l
ffff80000010b016	kernel.asm	/^ffff80000010b016:	83 ca 0a             	or     $0xa,%edx$/;"	l
ffff80000010b019	kernel.asm	/^ffff80000010b019:	88 50 05             	mov    %dl,0x5(%rax)$/;"	l
ffff80000010b01c	kernel.asm	/^ffff80000010b01c:	0f b6 50 05          	movzbl 0x5(%rax),%edx$/;"	l
ffff80000010b020	kernel.asm	/^ffff80000010b020:	83 ca 10             	or     $0x10,%edx$/;"	l
ffff80000010b023	kernel.asm	/^ffff80000010b023:	88 50 05             	mov    %dl,0x5(%rax)$/;"	l
ffff80000010b026	kernel.asm	/^ffff80000010b026:	0f b6 50 05          	movzbl 0x5(%rax),%edx$/;"	l
ffff80000010b02a	kernel.asm	/^ffff80000010b02a:	83 ca 60             	or     $0x60,%edx$/;"	l
ffff80000010b02d	kernel.asm	/^ffff80000010b02d:	88 50 05             	mov    %dl,0x5(%rax)$/;"	l
ffff80000010b030	kernel.asm	/^ffff80000010b030:	0f b6 50 05          	movzbl 0x5(%rax),%edx$/;"	l
ffff80000010b034	kernel.asm	/^ffff80000010b034:	83 ca 80             	or     $0xffffff80,%edx$/;"	l
ffff80000010b037	kernel.asm	/^ffff80000010b037:	88 50 05             	mov    %dl,0x5(%rax)$/;"	l
ffff80000010b03a	kernel.asm	/^ffff80000010b03a:	0f b6 50 06          	movzbl 0x6(%rax),%edx$/;"	l
ffff80000010b03e	kernel.asm	/^ffff80000010b03e:	83 e2 f0             	and    $0xfffffff0,%edx$/;"	l
ffff80000010b041	kernel.asm	/^ffff80000010b041:	88 50 06             	mov    %dl,0x6(%rax)$/;"	l
ffff80000010b044	kernel.asm	/^ffff80000010b044:	0f b6 50 06          	movzbl 0x6(%rax),%edx$/;"	l
ffff80000010b048	kernel.asm	/^ffff80000010b048:	83 e2 ef             	and    $0xffffffef,%edx$/;"	l
ffff80000010b04b	kernel.asm	/^ffff80000010b04b:	88 50 06             	mov    %dl,0x6(%rax)$/;"	l
ffff80000010b04e	kernel.asm	/^ffff80000010b04e:	0f b6 50 06          	movzbl 0x6(%rax),%edx$/;"	l
ffff80000010b052	kernel.asm	/^ffff80000010b052:	83 ca 20             	or     $0x20,%edx$/;"	l
ffff80000010b055	kernel.asm	/^ffff80000010b055:	88 50 06             	mov    %dl,0x6(%rax)$/;"	l
ffff80000010b058	kernel.asm	/^ffff80000010b058:	0f b6 50 06          	movzbl 0x6(%rax),%edx$/;"	l
ffff80000010b05c	kernel.asm	/^ffff80000010b05c:	83 e2 bf             	and    $0xffffffbf,%edx$/;"	l
ffff80000010b05f	kernel.asm	/^ffff80000010b05f:	88 50 06             	mov    %dl,0x6(%rax)$/;"	l
ffff80000010b062	kernel.asm	/^ffff80000010b062:	0f b6 50 06          	movzbl 0x6(%rax),%edx$/;"	l
ffff80000010b066	kernel.asm	/^ffff80000010b066:	83 ca 80             	or     $0xffffff80,%edx$/;"	l
ffff80000010b069	kernel.asm	/^ffff80000010b069:	88 50 06             	mov    %dl,0x6(%rax)$/;"	l
ffff80000010b06c	kernel.asm	/^ffff80000010b06c:	c6 40 07 00          	movb   $0x0,0x7(%rax)$/;"	l
ffff80000010b070	kernel.asm	/^ffff80000010b070:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff80000010b074	kernel.asm	/^ffff80000010b074:	48 83 c0 10          	add    $0x10,%rax$/;"	l
ffff80000010b078	kernel.asm	/^ffff80000010b078:	66 c7 00 00 00       	movw   $0x0,(%rax)$/;"	l
ffff80000010b07d	kernel.asm	/^ffff80000010b07d:	66 c7 40 02 00 00    	movw   $0x0,0x2(%rax)$/;"	l
ffff80000010b083	kernel.asm	/^ffff80000010b083:	c6 40 04 00          	movb   $0x0,0x4(%rax)$/;"	l
ffff80000010b087	kernel.asm	/^ffff80000010b087:	0f b6 50 05          	movzbl 0x5(%rax),%edx$/;"	l
ffff80000010b08b	kernel.asm	/^ffff80000010b08b:	83 e2 f0             	and    $0xfffffff0,%edx$/;"	l
ffff80000010b08e	kernel.asm	/^ffff80000010b08e:	83 ca 02             	or     $0x2,%edx$/;"	l
ffff80000010b091	kernel.asm	/^ffff80000010b091:	88 50 05             	mov    %dl,0x5(%rax)$/;"	l
ffff80000010b094	kernel.asm	/^ffff80000010b094:	0f b6 50 05          	movzbl 0x5(%rax),%edx$/;"	l
ffff80000010b098	kernel.asm	/^ffff80000010b098:	83 ca 10             	or     $0x10,%edx$/;"	l
ffff80000010b09b	kernel.asm	/^ffff80000010b09b:	88 50 05             	mov    %dl,0x5(%rax)$/;"	l
ffff80000010b09e	kernel.asm	/^ffff80000010b09e:	0f b6 50 05          	movzbl 0x5(%rax),%edx$/;"	l
ffff80000010b0a2	kernel.asm	/^ffff80000010b0a2:	83 e2 9f             	and    $0xffffff9f,%edx$/;"	l
ffff80000010b0a5	kernel.asm	/^ffff80000010b0a5:	88 50 05             	mov    %dl,0x5(%rax)$/;"	l
ffff80000010b0a8	kernel.asm	/^ffff80000010b0a8:	0f b6 50 05          	movzbl 0x5(%rax),%edx$/;"	l
ffff80000010b0ac	kernel.asm	/^ffff80000010b0ac:	83 ca 80             	or     $0xffffff80,%edx$/;"	l
ffff80000010b0af	kernel.asm	/^ffff80000010b0af:	88 50 05             	mov    %dl,0x5(%rax)$/;"	l
ffff80000010b0b2	kernel.asm	/^ffff80000010b0b2:	0f b6 50 06          	movzbl 0x6(%rax),%edx$/;"	l
ffff80000010b0b6	kernel.asm	/^ffff80000010b0b6:	83 e2 f0             	and    $0xfffffff0,%edx$/;"	l
ffff80000010b0b9	kernel.asm	/^ffff80000010b0b9:	88 50 06             	mov    %dl,0x6(%rax)$/;"	l
ffff80000010b0bc	kernel.asm	/^ffff80000010b0bc:	0f b6 50 06          	movzbl 0x6(%rax),%edx$/;"	l
ffff80000010b0c0	kernel.asm	/^ffff80000010b0c0:	83 e2 ef             	and    $0xffffffef,%edx$/;"	l
ffff80000010b0c3	kernel.asm	/^ffff80000010b0c3:	88 50 06             	mov    %dl,0x6(%rax)$/;"	l
ffff80000010b0c6	kernel.asm	/^ffff80000010b0c6:	0f b6 50 06          	movzbl 0x6(%rax),%edx$/;"	l
ffff80000010b0ca	kernel.asm	/^ffff80000010b0ca:	83 e2 df             	and    $0xffffffdf,%edx$/;"	l
ffff80000010b0cd	kernel.asm	/^ffff80000010b0cd:	88 50 06             	mov    %dl,0x6(%rax)$/;"	l
ffff80000010b0d0	kernel.asm	/^ffff80000010b0d0:	0f b6 50 06          	movzbl 0x6(%rax),%edx$/;"	l
ffff80000010b0d4	kernel.asm	/^ffff80000010b0d4:	83 e2 bf             	and    $0xffffffbf,%edx$/;"	l
ffff80000010b0d7	kernel.asm	/^ffff80000010b0d7:	88 50 06             	mov    %dl,0x6(%rax)$/;"	l
ffff80000010b0da	kernel.asm	/^ffff80000010b0da:	0f b6 50 06          	movzbl 0x6(%rax),%edx$/;"	l
ffff80000010b0de	kernel.asm	/^ffff80000010b0de:	83 ca 80             	or     $0xffffff80,%edx$/;"	l
ffff80000010b0e1	kernel.asm	/^ffff80000010b0e1:	88 50 06             	mov    %dl,0x6(%rax)$/;"	l
ffff80000010b0e4	kernel.asm	/^ffff80000010b0e4:	c6 40 07 00          	movb   $0x0,0x7(%rax)$/;"	l
ffff80000010b0e8	kernel.asm	/^ffff80000010b0e8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff80000010b0ec	kernel.asm	/^ffff80000010b0ec:	48 83 c0 30          	add    $0x30,%rax$/;"	l
ffff80000010b0f0	kernel.asm	/^ffff80000010b0f0:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)$/;"	l
ffff80000010b0f7	kernel.asm	/^ffff80000010b0f7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff80000010b0fb	kernel.asm	/^ffff80000010b0fb:	48 83 c0 20          	add    $0x20,%rax$/;"	l
ffff80000010b0ff	kernel.asm	/^ffff80000010b0ff:	66 c7 00 00 00       	movw   $0x0,(%rax)$/;"	l
ffff80000010b104	kernel.asm	/^ffff80000010b104:	66 c7 40 02 00 00    	movw   $0x0,0x2(%rax)$/;"	l
ffff80000010b10a	kernel.asm	/^ffff80000010b10a:	c6 40 04 00          	movb   $0x0,0x4(%rax)$/;"	l
ffff80000010b10e	kernel.asm	/^ffff80000010b10e:	0f b6 50 05          	movzbl 0x5(%rax),%edx$/;"	l
ffff80000010b112	kernel.asm	/^ffff80000010b112:	83 e2 f0             	and    $0xfffffff0,%edx$/;"	l
ffff80000010b115	kernel.asm	/^ffff80000010b115:	83 ca 02             	or     $0x2,%edx$/;"	l
ffff80000010b118	kernel.asm	/^ffff80000010b118:	88 50 05             	mov    %dl,0x5(%rax)$/;"	l
ffff80000010b11b	kernel.asm	/^ffff80000010b11b:	0f b6 50 05          	movzbl 0x5(%rax),%edx$/;"	l
ffff80000010b11f	kernel.asm	/^ffff80000010b11f:	83 ca 10             	or     $0x10,%edx$/;"	l
ffff80000010b122	kernel.asm	/^ffff80000010b122:	88 50 05             	mov    %dl,0x5(%rax)$/;"	l
ffff80000010b125	kernel.asm	/^ffff80000010b125:	0f b6 50 05          	movzbl 0x5(%rax),%edx$/;"	l
ffff80000010b129	kernel.asm	/^ffff80000010b129:	83 ca 60             	or     $0x60,%edx$/;"	l
ffff80000010b12c	kernel.asm	/^ffff80000010b12c:	88 50 05             	mov    %dl,0x5(%rax)$/;"	l
ffff80000010b12f	kernel.asm	/^ffff80000010b12f:	0f b6 50 05          	movzbl 0x5(%rax),%edx$/;"	l
ffff80000010b133	kernel.asm	/^ffff80000010b133:	83 ca 80             	or     $0xffffff80,%edx$/;"	l
ffff80000010b136	kernel.asm	/^ffff80000010b136:	88 50 05             	mov    %dl,0x5(%rax)$/;"	l
ffff80000010b139	kernel.asm	/^ffff80000010b139:	0f b6 50 06          	movzbl 0x6(%rax),%edx$/;"	l
ffff80000010b13d	kernel.asm	/^ffff80000010b13d:	83 e2 f0             	and    $0xfffffff0,%edx$/;"	l
ffff80000010b140	kernel.asm	/^ffff80000010b140:	88 50 06             	mov    %dl,0x6(%rax)$/;"	l
ffff80000010b143	kernel.asm	/^ffff80000010b143:	0f b6 50 06          	movzbl 0x6(%rax),%edx$/;"	l
ffff80000010b147	kernel.asm	/^ffff80000010b147:	83 e2 ef             	and    $0xffffffef,%edx$/;"	l
ffff80000010b14a	kernel.asm	/^ffff80000010b14a:	88 50 06             	mov    %dl,0x6(%rax)$/;"	l
ffff80000010b14d	kernel.asm	/^ffff80000010b14d:	0f b6 50 06          	movzbl 0x6(%rax),%edx$/;"	l
ffff80000010b151	kernel.asm	/^ffff80000010b151:	83 e2 df             	and    $0xffffffdf,%edx$/;"	l
ffff80000010b154	kernel.asm	/^ffff80000010b154:	88 50 06             	mov    %dl,0x6(%rax)$/;"	l
ffff80000010b157	kernel.asm	/^ffff80000010b157:	0f b6 50 06          	movzbl 0x6(%rax),%edx$/;"	l
ffff80000010b15b	kernel.asm	/^ffff80000010b15b:	83 e2 bf             	and    $0xffffffbf,%edx$/;"	l
ffff80000010b15e	kernel.asm	/^ffff80000010b15e:	88 50 06             	mov    %dl,0x6(%rax)$/;"	l
ffff80000010b161	kernel.asm	/^ffff80000010b161:	0f b6 50 06          	movzbl 0x6(%rax),%edx$/;"	l
ffff80000010b165	kernel.asm	/^ffff80000010b165:	83 ca 80             	or     $0xffffff80,%edx$/;"	l
ffff80000010b168	kernel.asm	/^ffff80000010b168:	88 50 06             	mov    %dl,0x6(%rax)$/;"	l
ffff80000010b16b	kernel.asm	/^ffff80000010b16b:	c6 40 07 00          	movb   $0x0,0x7(%rax)$/;"	l
ffff80000010b16f	kernel.asm	/^ffff80000010b16f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff80000010b173	kernel.asm	/^ffff80000010b173:	48 83 c0 38          	add    $0x38,%rax$/;"	l
ffff80000010b177	kernel.asm	/^ffff80000010b177:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx$/;"	l
ffff80000010b17b	kernel.asm	/^ffff80000010b17b:	89 d7                	mov    %edx,%edi$/;"	l
ffff80000010b17d	kernel.asm	/^ffff80000010b17d:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx$/;"	l
ffff80000010b181	kernel.asm	/^ffff80000010b181:	48 c1 ea 10          	shr    $0x10,%rdx$/;"	l
ffff80000010b185	kernel.asm	/^ffff80000010b185:	89 d6                	mov    %edx,%esi$/;"	l
ffff80000010b187	kernel.asm	/^ffff80000010b187:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx$/;"	l
ffff80000010b18b	kernel.asm	/^ffff80000010b18b:	48 c1 ea 18          	shr    $0x18,%rdx$/;"	l
ffff80000010b18f	kernel.asm	/^ffff80000010b18f:	89 d1                	mov    %edx,%ecx$/;"	l
ffff80000010b191	kernel.asm	/^ffff80000010b191:	66 c7 00 0b 00       	movw   $0xb,(%rax)$/;"	l
ffff80000010b196	kernel.asm	/^ffff80000010b196:	66 89 78 02          	mov    %di,0x2(%rax)$/;"	l
ffff80000010b19a	kernel.asm	/^ffff80000010b19a:	40 88 70 04          	mov    %sil,0x4(%rax)$/;"	l
ffff80000010b19e	kernel.asm	/^ffff80000010b19e:	0f b6 50 05          	movzbl 0x5(%rax),%edx$/;"	l
ffff80000010b1a2	kernel.asm	/^ffff80000010b1a2:	83 e2 f0             	and    $0xfffffff0,%edx$/;"	l
ffff80000010b1a5	kernel.asm	/^ffff80000010b1a5:	83 ca 09             	or     $0x9,%edx$/;"	l
ffff80000010b1a8	kernel.asm	/^ffff80000010b1a8:	88 50 05             	mov    %dl,0x5(%rax)$/;"	l
ffff80000010b1ab	kernel.asm	/^ffff80000010b1ab:	0f b6 50 05          	movzbl 0x5(%rax),%edx$/;"	l
ffff80000010b1af	kernel.asm	/^ffff80000010b1af:	83 e2 ef             	and    $0xffffffef,%edx$/;"	l
ffff80000010b1b2	kernel.asm	/^ffff80000010b1b2:	88 50 05             	mov    %dl,0x5(%rax)$/;"	l
ffff80000010b1b5	kernel.asm	/^ffff80000010b1b5:	0f b6 50 05          	movzbl 0x5(%rax),%edx$/;"	l
ffff80000010b1b9	kernel.asm	/^ffff80000010b1b9:	83 ca 60             	or     $0x60,%edx$/;"	l
ffff80000010b1bc	kernel.asm	/^ffff80000010b1bc:	88 50 05             	mov    %dl,0x5(%rax)$/;"	l
ffff80000010b1bf	kernel.asm	/^ffff80000010b1bf:	0f b6 50 05          	movzbl 0x5(%rax),%edx$/;"	l
ffff80000010b1c3	kernel.asm	/^ffff80000010b1c3:	83 ca 80             	or     $0xffffff80,%edx$/;"	l
ffff80000010b1c6	kernel.asm	/^ffff80000010b1c6:	88 50 05             	mov    %dl,0x5(%rax)$/;"	l
ffff80000010b1c9	kernel.asm	/^ffff80000010b1c9:	0f b6 50 06          	movzbl 0x6(%rax),%edx$/;"	l
ffff80000010b1cd	kernel.asm	/^ffff80000010b1cd:	83 e2 f0             	and    $0xfffffff0,%edx$/;"	l
ffff80000010b1d0	kernel.asm	/^ffff80000010b1d0:	88 50 06             	mov    %dl,0x6(%rax)$/;"	l
ffff80000010b1d3	kernel.asm	/^ffff80000010b1d3:	0f b6 50 06          	movzbl 0x6(%rax),%edx$/;"	l
ffff80000010b1d7	kernel.asm	/^ffff80000010b1d7:	83 e2 ef             	and    $0xffffffef,%edx$/;"	l
ffff80000010b1da	kernel.asm	/^ffff80000010b1da:	88 50 06             	mov    %dl,0x6(%rax)$/;"	l
ffff80000010b1dd	kernel.asm	/^ffff80000010b1dd:	0f b6 50 06          	movzbl 0x6(%rax),%edx$/;"	l
ffff80000010b1e1	kernel.asm	/^ffff80000010b1e1:	83 e2 df             	and    $0xffffffdf,%edx$/;"	l
ffff80000010b1e4	kernel.asm	/^ffff80000010b1e4:	88 50 06             	mov    %dl,0x6(%rax)$/;"	l
ffff80000010b1e7	kernel.asm	/^ffff80000010b1e7:	0f b6 50 06          	movzbl 0x6(%rax),%edx$/;"	l
ffff80000010b1eb	kernel.asm	/^ffff80000010b1eb:	83 e2 bf             	and    $0xffffffbf,%edx$/;"	l
ffff80000010b1ee	kernel.asm	/^ffff80000010b1ee:	88 50 06             	mov    %dl,0x6(%rax)$/;"	l
ffff80000010b1f1	kernel.asm	/^ffff80000010b1f1:	0f b6 50 06          	movzbl 0x6(%rax),%edx$/;"	l
ffff80000010b1f5	kernel.asm	/^ffff80000010b1f5:	83 ca 80             	or     $0xffffff80,%edx$/;"	l
ffff80000010b1f8	kernel.asm	/^ffff80000010b1f8:	88 50 06             	mov    %dl,0x6(%rax)$/;"	l
ffff80000010b1fb	kernel.asm	/^ffff80000010b1fb:	88 48 07             	mov    %cl,0x7(%rax)$/;"	l
ffff80000010b1fe	kernel.asm	/^ffff80000010b1fe:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff80000010b202	kernel.asm	/^ffff80000010b202:	48 83 c0 40          	add    $0x40,%rax$/;"	l
ffff80000010b206	kernel.asm	/^ffff80000010b206:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx$/;"	l
ffff80000010b20a	kernel.asm	/^ffff80000010b20a:	48 c1 ea 20          	shr    $0x20,%rdx$/;"	l
ffff80000010b20e	kernel.asm	/^ffff80000010b20e:	41 89 d1             	mov    %edx,%r9d$/;"	l
ffff80000010b211	kernel.asm	/^ffff80000010b211:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx$/;"	l
ffff80000010b215	kernel.asm	/^ffff80000010b215:	48 c1 ea 30          	shr    $0x30,%rdx$/;"	l
ffff80000010b219	kernel.asm	/^ffff80000010b219:	41 89 d0             	mov    %edx,%r8d$/;"	l
ffff80000010b21c	kernel.asm	/^ffff80000010b21c:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx$/;"	l
ffff80000010b220	kernel.asm	/^ffff80000010b220:	48 c1 ea 30          	shr    $0x30,%rdx$/;"	l
ffff80000010b224	kernel.asm	/^ffff80000010b224:	48 c1 ea 10          	shr    $0x10,%rdx$/;"	l
ffff80000010b228	kernel.asm	/^ffff80000010b228:	89 d7                	mov    %edx,%edi$/;"	l
ffff80000010b22a	kernel.asm	/^ffff80000010b22a:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx$/;"	l
ffff80000010b22e	kernel.asm	/^ffff80000010b22e:	48 c1 ea 20          	shr    $0x20,%rdx$/;"	l
ffff80000010b232	kernel.asm	/^ffff80000010b232:	48 c1 ea 3c          	shr    $0x3c,%rdx$/;"	l
ffff80000010b236	kernel.asm	/^ffff80000010b236:	89 d1                	mov    %edx,%ecx$/;"	l
ffff80000010b238	kernel.asm	/^ffff80000010b238:	83 e1 0f             	and    $0xf,%ecx$/;"	l
ffff80000010b23b	kernel.asm	/^ffff80000010b23b:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx$/;"	l
ffff80000010b23f	kernel.asm	/^ffff80000010b23f:	48 c1 ea 30          	shr    $0x30,%rdx$/;"	l
ffff80000010b243	kernel.asm	/^ffff80000010b243:	48 c1 ea 18          	shr    $0x18,%rdx$/;"	l
ffff80000010b247	kernel.asm	/^ffff80000010b247:	89 d6                	mov    %edx,%esi$/;"	l
ffff80000010b249	kernel.asm	/^ffff80000010b249:	66 44 89 08          	mov    %r9w,(%rax)$/;"	l
ffff80000010b24d	kernel.asm	/^ffff80000010b24d:	66 44 89 40 02       	mov    %r8w,0x2(%rax)$/;"	l
ffff80000010b252	kernel.asm	/^ffff80000010b252:	40 88 78 04          	mov    %dil,0x4(%rax)$/;"	l
ffff80000010b256	kernel.asm	/^ffff80000010b256:	0f b6 50 05          	movzbl 0x5(%rax),%edx$/;"	l
ffff80000010b25a	kernel.asm	/^ffff80000010b25a:	83 e2 f0             	and    $0xfffffff0,%edx$/;"	l
ffff80000010b25d	kernel.asm	/^ffff80000010b25d:	88 50 05             	mov    %dl,0x5(%rax)$/;"	l
ffff80000010b260	kernel.asm	/^ffff80000010b260:	0f b6 50 05          	movzbl 0x5(%rax),%edx$/;"	l
ffff80000010b264	kernel.asm	/^ffff80000010b264:	83 e2 ef             	and    $0xffffffef,%edx$/;"	l
ffff80000010b267	kernel.asm	/^ffff80000010b267:	88 50 05             	mov    %dl,0x5(%rax)$/;"	l
ffff80000010b26a	kernel.asm	/^ffff80000010b26a:	0f b6 50 05          	movzbl 0x5(%rax),%edx$/;"	l
ffff80000010b26e	kernel.asm	/^ffff80000010b26e:	83 e2 9f             	and    $0xffffff9f,%edx$/;"	l
ffff80000010b271	kernel.asm	/^ffff80000010b271:	88 50 05             	mov    %dl,0x5(%rax)$/;"	l
ffff80000010b274	kernel.asm	/^ffff80000010b274:	0f b6 50 05          	movzbl 0x5(%rax),%edx$/;"	l
ffff80000010b278	kernel.asm	/^ffff80000010b278:	83 ca 80             	or     $0xffffff80,%edx$/;"	l
ffff80000010b27b	kernel.asm	/^ffff80000010b27b:	88 50 05             	mov    %dl,0x5(%rax)$/;"	l
ffff80000010b27e	kernel.asm	/^ffff80000010b27e:	83 e1 0f             	and    $0xf,%ecx$/;"	l
ffff80000010b281	kernel.asm	/^ffff80000010b281:	0f b6 50 06          	movzbl 0x6(%rax),%edx$/;"	l
ffff80000010b285	kernel.asm	/^ffff80000010b285:	83 e2 f0             	and    $0xfffffff0,%edx$/;"	l
ffff80000010b288	kernel.asm	/^ffff80000010b288:	09 ca                	or     %ecx,%edx$/;"	l
ffff80000010b28a	kernel.asm	/^ffff80000010b28a:	88 50 06             	mov    %dl,0x6(%rax)$/;"	l
ffff80000010b28d	kernel.asm	/^ffff80000010b28d:	0f b6 50 06          	movzbl 0x6(%rax),%edx$/;"	l
ffff80000010b291	kernel.asm	/^ffff80000010b291:	83 e2 ef             	and    $0xffffffef,%edx$/;"	l
ffff80000010b294	kernel.asm	/^ffff80000010b294:	88 50 06             	mov    %dl,0x6(%rax)$/;"	l
ffff80000010b297	kernel.asm	/^ffff80000010b297:	0f b6 50 06          	movzbl 0x6(%rax),%edx$/;"	l
ffff80000010b29b	kernel.asm	/^ffff80000010b29b:	83 e2 df             	and    $0xffffffdf,%edx$/;"	l
ffff80000010b29e	kernel.asm	/^ffff80000010b29e:	88 50 06             	mov    %dl,0x6(%rax)$/;"	l
ffff80000010b2a1	kernel.asm	/^ffff80000010b2a1:	0f b6 50 06          	movzbl 0x6(%rax),%edx$/;"	l
ffff80000010b2a5	kernel.asm	/^ffff80000010b2a5:	83 e2 bf             	and    $0xffffffbf,%edx$/;"	l
ffff80000010b2a8	kernel.asm	/^ffff80000010b2a8:	88 50 06             	mov    %dl,0x6(%rax)$/;"	l
ffff80000010b2ab	kernel.asm	/^ffff80000010b2ab:	0f b6 50 06          	movzbl 0x6(%rax),%edx$/;"	l
ffff80000010b2af	kernel.asm	/^ffff80000010b2af:	83 ca 80             	or     $0xffffff80,%edx$/;"	l
ffff80000010b2b2	kernel.asm	/^ffff80000010b2b2:	88 50 06             	mov    %dl,0x6(%rax)$/;"	l
ffff80000010b2b5	kernel.asm	/^ffff80000010b2b5:	40 88 70 07          	mov    %sil,0x7(%rax)$/;"	l
ffff80000010b2b9	kernel.asm	/^ffff80000010b2b9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff80000010b2bd	kernel.asm	/^ffff80000010b2bd:	be 48 00 00 00       	mov    $0x48,%esi$/;"	l
ffff80000010b2c2	kernel.asm	/^ffff80000010b2c2:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010b2c5	kernel.asm	/^ffff80000010b2c5:	48 b8 2e ad 10 00 00 	movabs $0xffff80000010ad2e,%rax$/;"	l
ffff80000010b2cc	kernel.asm	/^ffff80000010b2cc:	80 ff ff $/;"	l
ffff80000010b2cf	kernel.asm	/^ffff80000010b2cf:	ff d0                	callq  *%rax$/;"	l
ffff80000010b2d1	kernel.asm	/^ffff80000010b2d1:	bf 38 00 00 00       	mov    $0x38,%edi$/;"	l
ffff80000010b2d6	kernel.asm	/^ffff80000010b2d6:	48 b8 7d ad 10 00 00 	movabs $0xffff80000010ad7d,%rax$/;"	l
ffff80000010b2dd	kernel.asm	/^ffff80000010b2dd:	80 ff ff $/;"	l
ffff80000010b2e0	kernel.asm	/^ffff80000010b2e0:	ff d0                	callq  *%rax$/;"	l
ffff80000010b2e2	kernel.asm	/^ffff80000010b2e2:	90                   	nop$/;"	l
ffff80000010b2e3	kernel.asm	/^ffff80000010b2e3:	c9                   	leaveq $/;"	l
ffff80000010b2e4	kernel.asm	/^ffff80000010b2e4:	c3                   	retq   $/;"	l
ffff80000010b2e5	kernel.asm	/^ffff80000010b2e5 <setupkvm>:$/;"	l
ffff80000010b2e5	kernel.asm	/^ffff80000010b2e5:	55                   	push   %rbp$/;"	l
ffff80000010b2e6	kernel.asm	/^ffff80000010b2e6:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010b2e9	kernel.asm	/^ffff80000010b2e9:	53                   	push   %rbx$/;"	l
ffff80000010b2ea	kernel.asm	/^ffff80000010b2ea:	48 83 ec 18          	sub    $0x18,%rsp$/;"	l
ffff80000010b2ee	kernel.asm	/^ffff80000010b2ee:	48 b8 95 41 10 00 00 	movabs $0xffff800000104195,%rax$/;"	l
ffff80000010b2f5	kernel.asm	/^ffff80000010b2f5:	80 ff ff $/;"	l
ffff80000010b2f8	kernel.asm	/^ffff80000010b2f8:	ff d0                	callq  *%rax$/;"	l
ffff80000010b2fa	kernel.asm	/^ffff80000010b2fa:	48 89 45 e8          	mov    %rax,-0x18(%rbp)$/;"	l
ffff80000010b2fe	kernel.asm	/^ffff80000010b2fe:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010b302	kernel.asm	/^ffff80000010b302:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
ffff80000010b307	kernel.asm	/^ffff80000010b307:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffff80000010b30c	kernel.asm	/^ffff80000010b30c:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010b30f	kernel.asm	/^ffff80000010b30f:	48 b8 9d 7c 10 00 00 	movabs $0xffff800000107c9d,%rax$/;"	l
ffff80000010b316	kernel.asm	/^ffff80000010b316:	80 ff ff $/;"	l
ffff80000010b319	kernel.asm	/^ffff80000010b319:	ff d0                	callq  *%rax$/;"	l
ffff80000010b31b	kernel.asm	/^ffff80000010b31b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010b31f	kernel.asm	/^ffff80000010b31f:	48 8d 98 00 08 00 00 	lea    0x800(%rax),%rbx$/;"	l
ffff80000010b326	kernel.asm	/^ffff80000010b326:	48 b8 80 c5 11 00 00 	movabs $0xffff80000011c580,%rax$/;"	l
ffff80000010b32d	kernel.asm	/^ffff80000010b32d:	80 ff ff $/;"	l
ffff80000010b330	kernel.asm	/^ffff80000010b330:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff80000010b333	kernel.asm	/^ffff80000010b333:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010b336	kernel.asm	/^ffff80000010b336:	48 b8 ab ad 10 00 00 	movabs $0xffff80000010adab,%rax$/;"	l
ffff80000010b33d	kernel.asm	/^ffff80000010b33d:	80 ff ff $/;"	l
ffff80000010b340	kernel.asm	/^ffff80000010b340:	ff d0                	callq  *%rax$/;"	l
ffff80000010b342	kernel.asm	/^ffff80000010b342:	48 83 c8 03          	or     $0x3,%rax$/;"	l
ffff80000010b346	kernel.asm	/^ffff80000010b346:	48 89 03             	mov    %rax,(%rbx)$/;"	l
ffff80000010b349	kernel.asm	/^ffff80000010b349:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010b34d	kernel.asm	/^ffff80000010b34d:	48 83 c4 18          	add    $0x18,%rsp$/;"	l
ffff80000010b351	kernel.asm	/^ffff80000010b351:	5b                   	pop    %rbx$/;"	l
ffff80000010b352	kernel.asm	/^ffff80000010b352:	5d                   	pop    %rbp$/;"	l
ffff80000010b353	kernel.asm	/^ffff80000010b353:	c3                   	retq   $/;"	l
ffff80000010b354	kernel.asm	/^ffff80000010b354 <kvmalloc>:$/;"	l
ffff80000010b354	kernel.asm	/^ffff80000010b354:	55                   	push   %rbp$/;"	l
ffff80000010b355	kernel.asm	/^ffff80000010b355:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010b358	kernel.asm	/^ffff80000010b358:	53                   	push   %rbx$/;"	l
ffff80000010b359	kernel.asm	/^ffff80000010b359:	48 83 ec 08          	sub    $0x8,%rsp$/;"	l
ffff80000010b35d	kernel.asm	/^ffff80000010b35d:	48 b8 95 41 10 00 00 	movabs $0xffff800000104195,%rax$/;"	l
ffff80000010b364	kernel.asm	/^ffff80000010b364:	80 ff ff $/;"	l
ffff80000010b367	kernel.asm	/^ffff80000010b367:	ff d0                	callq  *%rax$/;"	l
ffff80000010b369	kernel.asm	/^ffff80000010b369:	48 89 c2             	mov    %rax,%rdx$/;"	l
ffff80000010b36c	kernel.asm	/^ffff80000010b36c:	48 b8 78 c5 11 00 00 	movabs $0xffff80000011c578,%rax$/;"	l
ffff80000010b373	kernel.asm	/^ffff80000010b373:	80 ff ff $/;"	l
ffff80000010b376	kernel.asm	/^ffff80000010b376:	48 89 10             	mov    %rdx,(%rax)$/;"	l
ffff80000010b379	kernel.asm	/^ffff80000010b379:	48 b8 78 c5 11 00 00 	movabs $0xffff80000011c578,%rax$/;"	l
ffff80000010b380	kernel.asm	/^ffff80000010b380:	80 ff ff $/;"	l
ffff80000010b383	kernel.asm	/^ffff80000010b383:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff80000010b386	kernel.asm	/^ffff80000010b386:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
ffff80000010b38b	kernel.asm	/^ffff80000010b38b:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffff80000010b390	kernel.asm	/^ffff80000010b390:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010b393	kernel.asm	/^ffff80000010b393:	48 b8 9d 7c 10 00 00 	movabs $0xffff800000107c9d,%rax$/;"	l
ffff80000010b39a	kernel.asm	/^ffff80000010b39a:	80 ff ff $/;"	l
ffff80000010b39d	kernel.asm	/^ffff80000010b39d:	ff d0                	callq  *%rax$/;"	l
ffff80000010b39f	kernel.asm	/^ffff80000010b39f:	48 b8 95 41 10 00 00 	movabs $0xffff800000104195,%rax$/;"	l
ffff80000010b3a6	kernel.asm	/^ffff80000010b3a6:	80 ff ff $/;"	l
ffff80000010b3a9	kernel.asm	/^ffff80000010b3a9:	ff d0                	callq  *%rax$/;"	l
ffff80000010b3ab	kernel.asm	/^ffff80000010b3ab:	48 89 c2             	mov    %rax,%rdx$/;"	l
ffff80000010b3ae	kernel.asm	/^ffff80000010b3ae:	48 b8 80 c5 11 00 00 	movabs $0xffff80000011c580,%rax$/;"	l
ffff80000010b3b5	kernel.asm	/^ffff80000010b3b5:	80 ff ff $/;"	l
ffff80000010b3b8	kernel.asm	/^ffff80000010b3b8:	48 89 10             	mov    %rdx,(%rax)$/;"	l
ffff80000010b3bb	kernel.asm	/^ffff80000010b3bb:	48 b8 80 c5 11 00 00 	movabs $0xffff80000011c580,%rax$/;"	l
ffff80000010b3c2	kernel.asm	/^ffff80000010b3c2:	80 ff ff $/;"	l
ffff80000010b3c5	kernel.asm	/^ffff80000010b3c5:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff80000010b3c8	kernel.asm	/^ffff80000010b3c8:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
ffff80000010b3cd	kernel.asm	/^ffff80000010b3cd:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffff80000010b3d2	kernel.asm	/^ffff80000010b3d2:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010b3d5	kernel.asm	/^ffff80000010b3d5:	48 b8 9d 7c 10 00 00 	movabs $0xffff800000107c9d,%rax$/;"	l
ffff80000010b3dc	kernel.asm	/^ffff80000010b3dc:	80 ff ff $/;"	l
ffff80000010b3df	kernel.asm	/^ffff80000010b3df:	ff d0                	callq  *%rax$/;"	l
ffff80000010b3e1	kernel.asm	/^ffff80000010b3e1:	48 b8 78 c5 11 00 00 	movabs $0xffff80000011c578,%rax$/;"	l
ffff80000010b3e8	kernel.asm	/^ffff80000010b3e8:	80 ff ff $/;"	l
ffff80000010b3eb	kernel.asm	/^ffff80000010b3eb:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff80000010b3ee	kernel.asm	/^ffff80000010b3ee:	48 8d 98 00 08 00 00 	lea    0x800(%rax),%rbx$/;"	l
ffff80000010b3f5	kernel.asm	/^ffff80000010b3f5:	48 b8 80 c5 11 00 00 	movabs $0xffff80000011c580,%rax$/;"	l
ffff80000010b3fc	kernel.asm	/^ffff80000010b3fc:	80 ff ff $/;"	l
ffff80000010b3ff	kernel.asm	/^ffff80000010b3ff:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff80000010b402	kernel.asm	/^ffff80000010b402:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010b405	kernel.asm	/^ffff80000010b405:	48 b8 ab ad 10 00 00 	movabs $0xffff80000010adab,%rax$/;"	l
ffff80000010b40c	kernel.asm	/^ffff80000010b40c:	80 ff ff $/;"	l
ffff80000010b40f	kernel.asm	/^ffff80000010b40f:	ff d0                	callq  *%rax$/;"	l
ffff80000010b411	kernel.asm	/^ffff80000010b411:	48 83 c8 03          	or     $0x3,%rax$/;"	l
ffff80000010b415	kernel.asm	/^ffff80000010b415:	48 89 03             	mov    %rax,(%rbx)$/;"	l
ffff80000010b418	kernel.asm	/^ffff80000010b418:	48 b8 80 c5 11 00 00 	movabs $0xffff80000011c580,%rax$/;"	l
ffff80000010b41f	kernel.asm	/^ffff80000010b41f:	80 ff ff $/;"	l
ffff80000010b422	kernel.asm	/^ffff80000010b422:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff80000010b425	kernel.asm	/^ffff80000010b425:	48 c7 00 83 00 00 00 	movq   $0x83,(%rax)$/;"	l
ffff80000010b42c	kernel.asm	/^ffff80000010b42c:	48 b8 80 c5 11 00 00 	movabs $0xffff80000011c580,%rax$/;"	l
ffff80000010b433	kernel.asm	/^ffff80000010b433:	80 ff ff $/;"	l
ffff80000010b436	kernel.asm	/^ffff80000010b436:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff80000010b439	kernel.asm	/^ffff80000010b439:	48 83 c0 18          	add    $0x18,%rax$/;"	l
ffff80000010b43d	kernel.asm	/^ffff80000010b43d:	b9 9b 00 00 c0       	mov    $0xc000009b,%ecx$/;"	l
ffff80000010b442	kernel.asm	/^ffff80000010b442:	48 89 08             	mov    %rcx,(%rax)$/;"	l
ffff80000010b445	kernel.asm	/^ffff80000010b445:	48 b8 59 b4 10 00 00 	movabs $0xffff80000010b459,%rax$/;"	l
ffff80000010b44c	kernel.asm	/^ffff80000010b44c:	80 ff ff $/;"	l
ffff80000010b44f	kernel.asm	/^ffff80000010b44f:	ff d0                	callq  *%rax$/;"	l
ffff80000010b451	kernel.asm	/^ffff80000010b451:	90                   	nop$/;"	l
ffff80000010b452	kernel.asm	/^ffff80000010b452:	48 83 c4 08          	add    $0x8,%rsp$/;"	l
ffff80000010b456	kernel.asm	/^ffff80000010b456:	5b                   	pop    %rbx$/;"	l
ffff80000010b457	kernel.asm	/^ffff80000010b457:	5d                   	pop    %rbp$/;"	l
ffff80000010b458	kernel.asm	/^ffff80000010b458:	c3                   	retq   $/;"	l
ffff80000010b459	kernel.asm	/^ffff80000010b459 <switchkvm>:$/;"	l
ffff80000010b459	kernel.asm	/^ffff80000010b459:	55                   	push   %rbp$/;"	l
ffff80000010b45a	kernel.asm	/^ffff80000010b45a:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010b45d	kernel.asm	/^ffff80000010b45d:	48 b8 78 c5 11 00 00 	movabs $0xffff80000011c578,%rax$/;"	l
ffff80000010b464	kernel.asm	/^ffff80000010b464:	80 ff ff $/;"	l
ffff80000010b467	kernel.asm	/^ffff80000010b467:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff80000010b46a	kernel.asm	/^ffff80000010b46a:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010b46d	kernel.asm	/^ffff80000010b46d:	48 b8 ab ad 10 00 00 	movabs $0xffff80000010adab,%rax$/;"	l
ffff80000010b474	kernel.asm	/^ffff80000010b474:	80 ff ff $/;"	l
ffff80000010b477	kernel.asm	/^ffff80000010b477:	ff d0                	callq  *%rax$/;"	l
ffff80000010b479	kernel.asm	/^ffff80000010b479:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010b47c	kernel.asm	/^ffff80000010b47c:	48 b8 95 ad 10 00 00 	movabs $0xffff80000010ad95,%rax$/;"	l
ffff80000010b483	kernel.asm	/^ffff80000010b483:	80 ff ff $/;"	l
ffff80000010b486	kernel.asm	/^ffff80000010b486:	ff d0                	callq  *%rax$/;"	l
ffff80000010b488	kernel.asm	/^ffff80000010b488:	90                   	nop$/;"	l
ffff80000010b489	kernel.asm	/^ffff80000010b489:	5d                   	pop    %rbp$/;"	l
ffff80000010b48a	kernel.asm	/^ffff80000010b48a:	c3                   	retq   $/;"	l
ffff80000010b48b	kernel.asm	/^ffff80000010b48b <switchuvm>:$/;"	l
ffff80000010b48b	kernel.asm	/^ffff80000010b48b:	55                   	push   %rbp$/;"	l
ffff80000010b48c	kernel.asm	/^ffff80000010b48c:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010b48f	kernel.asm	/^ffff80000010b48f:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ffff80000010b493	kernel.asm	/^ffff80000010b493:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
ffff80000010b497	kernel.asm	/^ffff80000010b497:	48 b8 14 7b 10 00 00 	movabs $0xffff800000107b14,%rax$/;"	l
ffff80000010b49e	kernel.asm	/^ffff80000010b49e:	80 ff ff $/;"	l
ffff80000010b4a1	kernel.asm	/^ffff80000010b4a1:	ff d0                	callq  *%rax$/;"	l
ffff80000010b4a3	kernel.asm	/^ffff80000010b4a3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010b4a7	kernel.asm	/^ffff80000010b4a7:	48 8b 40 08          	mov    0x8(%rax),%rax$/;"	l
ffff80000010b4ab	kernel.asm	/^ffff80000010b4ab:	48 85 c0             	test   %rax,%rax$/;"	l
ffff80000010b4ae	kernel.asm	/^ffff80000010b4ae:	75 16                	jne    ffff80000010b4c6 <switchuvm+0x3b>$/;"	l
ffff80000010b4b0	kernel.asm	/^ffff80000010b4b0:	48 bf e0 c8 10 00 00 	movabs $0xffff80000010c8e0,%rdi$/;"	l
ffff80000010b4b7	kernel.asm	/^ffff80000010b4b7:	80 ff ff $/;"	l
ffff80000010b4ba	kernel.asm	/^ffff80000010b4ba:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff80000010b4c1	kernel.asm	/^ffff80000010b4c1:	80 ff ff $/;"	l
ffff80000010b4c4	kernel.asm	/^ffff80000010b4c4:	ff d0                	callq  *%rax$/;"	l
ffff80000010b4c6	kernel.asm	/^ffff80000010b4c6:	64 48 8b 04 25 f0 ff 	mov    %fs:0xfffffffffffffff0,%rax$/;"	l
ffff80000010b4cd	kernel.asm	/^ffff80000010b4cd:	ff ff $/;"	l
ffff80000010b4cf	kernel.asm	/^ffff80000010b4cf:	48 8b 80 f0 00 00 00 	mov    0xf0(%rax),%rax$/;"	l
ffff80000010b4d6	kernel.asm	/^ffff80000010b4d6:	48 05 00 04 00 00    	add    $0x400,%rax$/;"	l
ffff80000010b4dc	kernel.asm	/^ffff80000010b4dc:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff80000010b4e0	kernel.asm	/^ffff80000010b4e0:	64 48 8b 04 25 f8 ff 	mov    %fs:0xfffffffffffffff8,%rax$/;"	l
ffff80000010b4e7	kernel.asm	/^ffff80000010b4e7:	ff ff $/;"	l
ffff80000010b4e9	kernel.asm	/^ffff80000010b4e9:	48 8b 40 10          	mov    0x10(%rax),%rax$/;"	l
ffff80000010b4ed	kernel.asm	/^ffff80000010b4ed:	48 8d 90 00 10 00 00 	lea    0x1000(%rax),%rdx$/;"	l
ffff80000010b4f4	kernel.asm	/^ffff80000010b4f4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010b4f8	kernel.asm	/^ffff80000010b4f8:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffff80000010b4fd	kernel.asm	/^ffff80000010b4fd:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010b500	kernel.asm	/^ffff80000010b500:	48 b8 ca ad 10 00 00 	movabs $0xffff80000010adca,%rax$/;"	l
ffff80000010b507	kernel.asm	/^ffff80000010b507:	80 ff ff $/;"	l
ffff80000010b50a	kernel.asm	/^ffff80000010b50a:	ff d0                	callq  *%rax$/;"	l
ffff80000010b50c	kernel.asm	/^ffff80000010b50c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010b510	kernel.asm	/^ffff80000010b510:	48 8b 40 08          	mov    0x8(%rax),%rax$/;"	l
ffff80000010b514	kernel.asm	/^ffff80000010b514:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010b517	kernel.asm	/^ffff80000010b517:	48 b8 ab ad 10 00 00 	movabs $0xffff80000010adab,%rax$/;"	l
ffff80000010b51e	kernel.asm	/^ffff80000010b51e:	80 ff ff $/;"	l
ffff80000010b521	kernel.asm	/^ffff80000010b521:	ff d0                	callq  *%rax$/;"	l
ffff80000010b523	kernel.asm	/^ffff80000010b523:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010b526	kernel.asm	/^ffff80000010b526:	48 b8 95 ad 10 00 00 	movabs $0xffff80000010ad95,%rax$/;"	l
ffff80000010b52d	kernel.asm	/^ffff80000010b52d:	80 ff ff $/;"	l
ffff80000010b530	kernel.asm	/^ffff80000010b530:	ff d0                	callq  *%rax$/;"	l
ffff80000010b532	kernel.asm	/^ffff80000010b532:	48 b8 8e 7b 10 00 00 	movabs $0xffff800000107b8e,%rax$/;"	l
ffff80000010b539	kernel.asm	/^ffff80000010b539:	80 ff ff $/;"	l
ffff80000010b53c	kernel.asm	/^ffff80000010b53c:	ff d0                	callq  *%rax$/;"	l
ffff80000010b53e	kernel.asm	/^ffff80000010b53e:	90                   	nop$/;"	l
ffff80000010b53f	kernel.asm	/^ffff80000010b53f:	c9                   	leaveq $/;"	l
ffff80000010b540	kernel.asm	/^ffff80000010b540:	c3                   	retq   $/;"	l
ffff80000010b541	kernel.asm	/^ffff80000010b541 <walkpgdir>:$/;"	l
ffff80000010b541	kernel.asm	/^ffff80000010b541:	55                   	push   %rbp$/;"	l
ffff80000010b542	kernel.asm	/^ffff80000010b542:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010b545	kernel.asm	/^ffff80000010b545:	48 83 ec 50          	sub    $0x50,%rsp$/;"	l
ffff80000010b549	kernel.asm	/^ffff80000010b549:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)$/;"	l
ffff80000010b54d	kernel.asm	/^ffff80000010b54d:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)$/;"	l
ffff80000010b551	kernel.asm	/^ffff80000010b551:	89 55 bc             	mov    %edx,-0x44(%rbp)$/;"	l
ffff80000010b554	kernel.asm	/^ffff80000010b554:	48 8b 45 c0          	mov    -0x40(%rbp),%rax$/;"	l
ffff80000010b558	kernel.asm	/^ffff80000010b558:	48 c1 e8 27          	shr    $0x27,%rax$/;"	l
ffff80000010b55c	kernel.asm	/^ffff80000010b55c:	25 ff 01 00 00       	and    $0x1ff,%eax$/;"	l
ffff80000010b561	kernel.asm	/^ffff80000010b561:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx$/;"	l
ffff80000010b568	kernel.asm	/^ffff80000010b568:	00 $/;"	l
ffff80000010b569	kernel.asm	/^ffff80000010b569:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
ffff80000010b56d	kernel.asm	/^ffff80000010b56d:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff80000010b570	kernel.asm	/^ffff80000010b570:	48 89 45 e0          	mov    %rax,-0x20(%rbp)$/;"	l
ffff80000010b574	kernel.asm	/^ffff80000010b574:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff80000010b578	kernel.asm	/^ffff80000010b578:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff80000010b57b	kernel.asm	/^ffff80000010b57b:	83 e0 01             	and    $0x1,%eax$/;"	l
ffff80000010b57e	kernel.asm	/^ffff80000010b57e:	48 85 c0             	test   %rax,%rax$/;"	l
ffff80000010b581	kernel.asm	/^ffff80000010b581:	74 23                	je     ffff80000010b5a6 <walkpgdir+0x65>$/;"	l
ffff80000010b583	kernel.asm	/^ffff80000010b583:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff80000010b587	kernel.asm	/^ffff80000010b587:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff80000010b58a	kernel.asm	/^ffff80000010b58a:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax$/;"	l
ffff80000010b590	kernel.asm	/^ffff80000010b590:	48 89 c2             	mov    %rax,%rdx$/;"	l
ffff80000010b593	kernel.asm	/^ffff80000010b593:	48 b8 00 00 00 00 00 	movabs $0xffff800000000000,%rax$/;"	l
ffff80000010b59a	kernel.asm	/^ffff80000010b59a:	80 ff ff $/;"	l
ffff80000010b59d	kernel.asm	/^ffff80000010b59d:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff80000010b5a0	kernel.asm	/^ffff80000010b5a0:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff80000010b5a4	kernel.asm	/^ffff80000010b5a4:	eb 63                	jmp    ffff80000010b609 <walkpgdir+0xc8>$/;"	l
ffff80000010b5a6	kernel.asm	/^ffff80000010b5a6:	83 7d bc 00          	cmpl   $0x0,-0x44(%rbp)$/;"	l
ffff80000010b5aa	kernel.asm	/^ffff80000010b5aa:	74 17                	je     ffff80000010b5c3 <walkpgdir+0x82>$/;"	l
ffff80000010b5ac	kernel.asm	/^ffff80000010b5ac:	48 b8 95 41 10 00 00 	movabs $0xffff800000104195,%rax$/;"	l
ffff80000010b5b3	kernel.asm	/^ffff80000010b5b3:	80 ff ff $/;"	l
ffff80000010b5b6	kernel.asm	/^ffff80000010b5b6:	ff d0                	callq  *%rax$/;"	l
ffff80000010b5b8	kernel.asm	/^ffff80000010b5b8:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff80000010b5bc	kernel.asm	/^ffff80000010b5bc:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)$/;"	l
ffff80000010b5c1	kernel.asm	/^ffff80000010b5c1:	75 0a                	jne    ffff80000010b5cd <walkpgdir+0x8c>$/;"	l
ffff80000010b5c3	kernel.asm	/^ffff80000010b5c3:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff80000010b5c8	kernel.asm	/^ffff80000010b5c8:	e9 bf 01 00 00       	jmpq   ffff80000010b78c <walkpgdir+0x24b>$/;"	l
ffff80000010b5cd	kernel.asm	/^ffff80000010b5cd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010b5d1	kernel.asm	/^ffff80000010b5d1:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
ffff80000010b5d6	kernel.asm	/^ffff80000010b5d6:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffff80000010b5db	kernel.asm	/^ffff80000010b5db:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010b5de	kernel.asm	/^ffff80000010b5de:	48 b8 9d 7c 10 00 00 	movabs $0xffff800000107c9d,%rax$/;"	l
ffff80000010b5e5	kernel.asm	/^ffff80000010b5e5:	80 ff ff $/;"	l
ffff80000010b5e8	kernel.asm	/^ffff80000010b5e8:	ff d0                	callq  *%rax$/;"	l
ffff80000010b5ea	kernel.asm	/^ffff80000010b5ea:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx$/;"	l
ffff80000010b5ee	kernel.asm	/^ffff80000010b5ee:	48 b8 00 00 00 00 00 	movabs $0x800000000000,%rax$/;"	l
ffff80000010b5f5	kernel.asm	/^ffff80000010b5f5:	80 00 00 $/;"	l
ffff80000010b5f8	kernel.asm	/^ffff80000010b5f8:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff80000010b5fb	kernel.asm	/^ffff80000010b5fb:	48 83 c8 07          	or     $0x7,%rax$/;"	l
ffff80000010b5ff	kernel.asm	/^ffff80000010b5ff:	48 89 c2             	mov    %rax,%rdx$/;"	l
ffff80000010b602	kernel.asm	/^ffff80000010b602:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff80000010b606	kernel.asm	/^ffff80000010b606:	48 89 10             	mov    %rdx,(%rax)$/;"	l
ffff80000010b609	kernel.asm	/^ffff80000010b609:	48 8b 45 c0          	mov    -0x40(%rbp),%rax$/;"	l
ffff80000010b60d	kernel.asm	/^ffff80000010b60d:	48 c1 e8 1e          	shr    $0x1e,%rax$/;"	l
ffff80000010b611	kernel.asm	/^ffff80000010b611:	25 ff 01 00 00       	and    $0x1ff,%eax$/;"	l
ffff80000010b616	kernel.asm	/^ffff80000010b616:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx$/;"	l
ffff80000010b61d	kernel.asm	/^ffff80000010b61d:	00 $/;"	l
ffff80000010b61e	kernel.asm	/^ffff80000010b61e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010b622	kernel.asm	/^ffff80000010b622:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff80000010b625	kernel.asm	/^ffff80000010b625:	48 89 45 d8          	mov    %rax,-0x28(%rbp)$/;"	l
ffff80000010b629	kernel.asm	/^ffff80000010b629:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff80000010b62d	kernel.asm	/^ffff80000010b62d:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff80000010b630	kernel.asm	/^ffff80000010b630:	83 e0 01             	and    $0x1,%eax$/;"	l
ffff80000010b633	kernel.asm	/^ffff80000010b633:	48 85 c0             	test   %rax,%rax$/;"	l
ffff80000010b636	kernel.asm	/^ffff80000010b636:	74 23                	je     ffff80000010b65b <walkpgdir+0x11a>$/;"	l
ffff80000010b638	kernel.asm	/^ffff80000010b638:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff80000010b63c	kernel.asm	/^ffff80000010b63c:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff80000010b63f	kernel.asm	/^ffff80000010b63f:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax$/;"	l
ffff80000010b645	kernel.asm	/^ffff80000010b645:	48 89 c2             	mov    %rax,%rdx$/;"	l
ffff80000010b648	kernel.asm	/^ffff80000010b648:	48 b8 00 00 00 00 00 	movabs $0xffff800000000000,%rax$/;"	l
ffff80000010b64f	kernel.asm	/^ffff80000010b64f:	80 ff ff $/;"	l
ffff80000010b652	kernel.asm	/^ffff80000010b652:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff80000010b655	kernel.asm	/^ffff80000010b655:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ffff80000010b659	kernel.asm	/^ffff80000010b659:	eb 63                	jmp    ffff80000010b6be <walkpgdir+0x17d>$/;"	l
ffff80000010b65b	kernel.asm	/^ffff80000010b65b:	83 7d bc 00          	cmpl   $0x0,-0x44(%rbp)$/;"	l
ffff80000010b65f	kernel.asm	/^ffff80000010b65f:	74 17                	je     ffff80000010b678 <walkpgdir+0x137>$/;"	l
ffff80000010b661	kernel.asm	/^ffff80000010b661:	48 b8 95 41 10 00 00 	movabs $0xffff800000104195,%rax$/;"	l
ffff80000010b668	kernel.asm	/^ffff80000010b668:	80 ff ff $/;"	l
ffff80000010b66b	kernel.asm	/^ffff80000010b66b:	ff d0                	callq  *%rax$/;"	l
ffff80000010b66d	kernel.asm	/^ffff80000010b66d:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ffff80000010b671	kernel.asm	/^ffff80000010b671:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)$/;"	l
ffff80000010b676	kernel.asm	/^ffff80000010b676:	75 0a                	jne    ffff80000010b682 <walkpgdir+0x141>$/;"	l
ffff80000010b678	kernel.asm	/^ffff80000010b678:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff80000010b67d	kernel.asm	/^ffff80000010b67d:	e9 0a 01 00 00       	jmpq   ffff80000010b78c <walkpgdir+0x24b>$/;"	l
ffff80000010b682	kernel.asm	/^ffff80000010b682:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff80000010b686	kernel.asm	/^ffff80000010b686:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
ffff80000010b68b	kernel.asm	/^ffff80000010b68b:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffff80000010b690	kernel.asm	/^ffff80000010b690:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010b693	kernel.asm	/^ffff80000010b693:	48 b8 9d 7c 10 00 00 	movabs $0xffff800000107c9d,%rax$/;"	l
ffff80000010b69a	kernel.asm	/^ffff80000010b69a:	80 ff ff $/;"	l
ffff80000010b69d	kernel.asm	/^ffff80000010b69d:	ff d0                	callq  *%rax$/;"	l
ffff80000010b69f	kernel.asm	/^ffff80000010b69f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
ffff80000010b6a3	kernel.asm	/^ffff80000010b6a3:	48 b8 00 00 00 00 00 	movabs $0x800000000000,%rax$/;"	l
ffff80000010b6aa	kernel.asm	/^ffff80000010b6aa:	80 00 00 $/;"	l
ffff80000010b6ad	kernel.asm	/^ffff80000010b6ad:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff80000010b6b0	kernel.asm	/^ffff80000010b6b0:	48 83 c8 07          	or     $0x7,%rax$/;"	l
ffff80000010b6b4	kernel.asm	/^ffff80000010b6b4:	48 89 c2             	mov    %rax,%rdx$/;"	l
ffff80000010b6b7	kernel.asm	/^ffff80000010b6b7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff80000010b6bb	kernel.asm	/^ffff80000010b6bb:	48 89 10             	mov    %rdx,(%rax)$/;"	l
ffff80000010b6be	kernel.asm	/^ffff80000010b6be:	48 8b 45 c0          	mov    -0x40(%rbp),%rax$/;"	l
ffff80000010b6c2	kernel.asm	/^ffff80000010b6c2:	48 c1 e8 15          	shr    $0x15,%rax$/;"	l
ffff80000010b6c6	kernel.asm	/^ffff80000010b6c6:	25 ff 01 00 00       	and    $0x1ff,%eax$/;"	l
ffff80000010b6cb	kernel.asm	/^ffff80000010b6cb:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx$/;"	l
ffff80000010b6d2	kernel.asm	/^ffff80000010b6d2:	00 $/;"	l
ffff80000010b6d3	kernel.asm	/^ffff80000010b6d3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff80000010b6d7	kernel.asm	/^ffff80000010b6d7:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff80000010b6da	kernel.asm	/^ffff80000010b6da:	48 89 45 d0          	mov    %rax,-0x30(%rbp)$/;"	l
ffff80000010b6de	kernel.asm	/^ffff80000010b6de:	48 8b 45 d0          	mov    -0x30(%rbp),%rax$/;"	l
ffff80000010b6e2	kernel.asm	/^ffff80000010b6e2:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff80000010b6e5	kernel.asm	/^ffff80000010b6e5:	83 e0 01             	and    $0x1,%eax$/;"	l
ffff80000010b6e8	kernel.asm	/^ffff80000010b6e8:	48 85 c0             	test   %rax,%rax$/;"	l
ffff80000010b6eb	kernel.asm	/^ffff80000010b6eb:	74 23                	je     ffff80000010b710 <walkpgdir+0x1cf>$/;"	l
ffff80000010b6ed	kernel.asm	/^ffff80000010b6ed:	48 8b 45 d0          	mov    -0x30(%rbp),%rax$/;"	l
ffff80000010b6f1	kernel.asm	/^ffff80000010b6f1:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff80000010b6f4	kernel.asm	/^ffff80000010b6f4:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax$/;"	l
ffff80000010b6fa	kernel.asm	/^ffff80000010b6fa:	48 89 c2             	mov    %rax,%rdx$/;"	l
ffff80000010b6fd	kernel.asm	/^ffff80000010b6fd:	48 b8 00 00 00 00 00 	movabs $0xffff800000000000,%rax$/;"	l
ffff80000010b704	kernel.asm	/^ffff80000010b704:	80 ff ff $/;"	l
ffff80000010b707	kernel.asm	/^ffff80000010b707:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff80000010b70a	kernel.asm	/^ffff80000010b70a:	48 89 45 e8          	mov    %rax,-0x18(%rbp)$/;"	l
ffff80000010b70e	kernel.asm	/^ffff80000010b70e:	eb 60                	jmp    ffff80000010b770 <walkpgdir+0x22f>$/;"	l
ffff80000010b710	kernel.asm	/^ffff80000010b710:	83 7d bc 00          	cmpl   $0x0,-0x44(%rbp)$/;"	l
ffff80000010b714	kernel.asm	/^ffff80000010b714:	74 17                	je     ffff80000010b72d <walkpgdir+0x1ec>$/;"	l
ffff80000010b716	kernel.asm	/^ffff80000010b716:	48 b8 95 41 10 00 00 	movabs $0xffff800000104195,%rax$/;"	l
ffff80000010b71d	kernel.asm	/^ffff80000010b71d:	80 ff ff $/;"	l
ffff80000010b720	kernel.asm	/^ffff80000010b720:	ff d0                	callq  *%rax$/;"	l
ffff80000010b722	kernel.asm	/^ffff80000010b722:	48 89 45 e8          	mov    %rax,-0x18(%rbp)$/;"	l
ffff80000010b726	kernel.asm	/^ffff80000010b726:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)$/;"	l
ffff80000010b72b	kernel.asm	/^ffff80000010b72b:	75 07                	jne    ffff80000010b734 <walkpgdir+0x1f3>$/;"	l
ffff80000010b72d	kernel.asm	/^ffff80000010b72d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff80000010b732	kernel.asm	/^ffff80000010b732:	eb 58                	jmp    ffff80000010b78c <walkpgdir+0x24b>$/;"	l
ffff80000010b734	kernel.asm	/^ffff80000010b734:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010b738	kernel.asm	/^ffff80000010b738:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
ffff80000010b73d	kernel.asm	/^ffff80000010b73d:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffff80000010b742	kernel.asm	/^ffff80000010b742:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010b745	kernel.asm	/^ffff80000010b745:	48 b8 9d 7c 10 00 00 	movabs $0xffff800000107c9d,%rax$/;"	l
ffff80000010b74c	kernel.asm	/^ffff80000010b74c:	80 ff ff $/;"	l
ffff80000010b74f	kernel.asm	/^ffff80000010b74f:	ff d0                	callq  *%rax$/;"	l
ffff80000010b751	kernel.asm	/^ffff80000010b751:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx$/;"	l
ffff80000010b755	kernel.asm	/^ffff80000010b755:	48 b8 00 00 00 00 00 	movabs $0x800000000000,%rax$/;"	l
ffff80000010b75c	kernel.asm	/^ffff80000010b75c:	80 00 00 $/;"	l
ffff80000010b75f	kernel.asm	/^ffff80000010b75f:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff80000010b762	kernel.asm	/^ffff80000010b762:	48 83 c8 07          	or     $0x7,%rax$/;"	l
ffff80000010b766	kernel.asm	/^ffff80000010b766:	48 89 c2             	mov    %rax,%rdx$/;"	l
ffff80000010b769	kernel.asm	/^ffff80000010b769:	48 8b 45 d0          	mov    -0x30(%rbp),%rax$/;"	l
ffff80000010b76d	kernel.asm	/^ffff80000010b76d:	48 89 10             	mov    %rdx,(%rax)$/;"	l
ffff80000010b770	kernel.asm	/^ffff80000010b770:	48 8b 45 c0          	mov    -0x40(%rbp),%rax$/;"	l
ffff80000010b774	kernel.asm	/^ffff80000010b774:	48 c1 e8 0c          	shr    $0xc,%rax$/;"	l
ffff80000010b778	kernel.asm	/^ffff80000010b778:	25 ff 01 00 00       	and    $0x1ff,%eax$/;"	l
ffff80000010b77d	kernel.asm	/^ffff80000010b77d:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx$/;"	l
ffff80000010b784	kernel.asm	/^ffff80000010b784:	00 $/;"	l
ffff80000010b785	kernel.asm	/^ffff80000010b785:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010b789	kernel.asm	/^ffff80000010b789:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff80000010b78c	kernel.asm	/^ffff80000010b78c:	c9                   	leaveq $/;"	l
ffff80000010b78d	kernel.asm	/^ffff80000010b78d:	c3                   	retq   $/;"	l
ffff80000010b78e	kernel.asm	/^ffff80000010b78e <mappages>:$/;"	l
ffff80000010b78e	kernel.asm	/^ffff80000010b78e:	55                   	push   %rbp$/;"	l
ffff80000010b78f	kernel.asm	/^ffff80000010b78f:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010b792	kernel.asm	/^ffff80000010b792:	48 83 ec 50          	sub    $0x50,%rsp$/;"	l
ffff80000010b796	kernel.asm	/^ffff80000010b796:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)$/;"	l
ffff80000010b79a	kernel.asm	/^ffff80000010b79a:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)$/;"	l
ffff80000010b79e	kernel.asm	/^ffff80000010b79e:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)$/;"	l
ffff80000010b7a2	kernel.asm	/^ffff80000010b7a2:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)$/;"	l
ffff80000010b7a6	kernel.asm	/^ffff80000010b7a6:	44 89 45 bc          	mov    %r8d,-0x44(%rbp)$/;"	l
ffff80000010b7aa	kernel.asm	/^ffff80000010b7aa:	48 8b 45 d0          	mov    -0x30(%rbp),%rax$/;"	l
ffff80000010b7ae	kernel.asm	/^ffff80000010b7ae:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax$/;"	l
ffff80000010b7b4	kernel.asm	/^ffff80000010b7b4:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff80000010b7b8	kernel.asm	/^ffff80000010b7b8:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx$/;"	l
ffff80000010b7bc	kernel.asm	/^ffff80000010b7bc:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
ffff80000010b7c0	kernel.asm	/^ffff80000010b7c0:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff80000010b7c3	kernel.asm	/^ffff80000010b7c3:	48 83 e8 01          	sub    $0x1,%rax$/;"	l
ffff80000010b7c7	kernel.asm	/^ffff80000010b7c7:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax$/;"	l
ffff80000010b7cd	kernel.asm	/^ffff80000010b7cd:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ffff80000010b7d1	kernel.asm	/^ffff80000010b7d1:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx$/;"	l
ffff80000010b7d5	kernel.asm	/^ffff80000010b7d5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff80000010b7d9	kernel.asm	/^ffff80000010b7d9:	ba 01 00 00 00       	mov    $0x1,%edx$/;"	l
ffff80000010b7de	kernel.asm	/^ffff80000010b7de:	48 89 ce             	mov    %rcx,%rsi$/;"	l
ffff80000010b7e1	kernel.asm	/^ffff80000010b7e1:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010b7e4	kernel.asm	/^ffff80000010b7e4:	48 b8 41 b5 10 00 00 	movabs $0xffff80000010b541,%rax$/;"	l
ffff80000010b7eb	kernel.asm	/^ffff80000010b7eb:	80 ff ff $/;"	l
ffff80000010b7ee	kernel.asm	/^ffff80000010b7ee:	ff d0                	callq  *%rax$/;"	l
ffff80000010b7f0	kernel.asm	/^ffff80000010b7f0:	48 89 45 e8          	mov    %rax,-0x18(%rbp)$/;"	l
ffff80000010b7f4	kernel.asm	/^ffff80000010b7f4:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)$/;"	l
ffff80000010b7f9	kernel.asm	/^ffff80000010b7f9:	75 07                	jne    ffff80000010b802 <mappages+0x74>$/;"	l
ffff80000010b7fb	kernel.asm	/^ffff80000010b7fb:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff80000010b800	kernel.asm	/^ffff80000010b800:	eb 61                	jmp    ffff80000010b863 <mappages+0xd5>$/;"	l
ffff80000010b802	kernel.asm	/^ffff80000010b802:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010b806	kernel.asm	/^ffff80000010b806:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff80000010b809	kernel.asm	/^ffff80000010b809:	83 e0 01             	and    $0x1,%eax$/;"	l
ffff80000010b80c	kernel.asm	/^ffff80000010b80c:	48 85 c0             	test   %rax,%rax$/;"	l
ffff80000010b80f	kernel.asm	/^ffff80000010b80f:	74 16                	je     ffff80000010b827 <mappages+0x99>$/;"	l
ffff80000010b811	kernel.asm	/^ffff80000010b811:	48 bf f4 c8 10 00 00 	movabs $0xffff80000010c8f4,%rdi$/;"	l
ffff80000010b818	kernel.asm	/^ffff80000010b818:	80 ff ff $/;"	l
ffff80000010b81b	kernel.asm	/^ffff80000010b81b:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff80000010b822	kernel.asm	/^ffff80000010b822:	80 ff ff $/;"	l
ffff80000010b825	kernel.asm	/^ffff80000010b825:	ff d0                	callq  *%rax$/;"	l
ffff80000010b827	kernel.asm	/^ffff80000010b827:	8b 45 bc             	mov    -0x44(%rbp),%eax$/;"	l
ffff80000010b82a	kernel.asm	/^ffff80000010b82a:	48 98                	cltq   $/;"	l
ffff80000010b82c	kernel.asm	/^ffff80000010b82c:	48 0b 45 c0          	or     -0x40(%rbp),%rax$/;"	l
ffff80000010b830	kernel.asm	/^ffff80000010b830:	48 83 c8 01          	or     $0x1,%rax$/;"	l
ffff80000010b834	kernel.asm	/^ffff80000010b834:	48 89 c2             	mov    %rax,%rdx$/;"	l
ffff80000010b837	kernel.asm	/^ffff80000010b837:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010b83b	kernel.asm	/^ffff80000010b83b:	48 89 10             	mov    %rdx,(%rax)$/;"	l
ffff80000010b83e	kernel.asm	/^ffff80000010b83e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010b842	kernel.asm	/^ffff80000010b842:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax$/;"	l
ffff80000010b846	kernel.asm	/^ffff80000010b846:	74 15                	je     ffff80000010b85d <mappages+0xcf>$/;"	l
ffff80000010b848	kernel.asm	/^ffff80000010b848:	48 81 45 f8 00 10 00 	addq   $0x1000,-0x8(%rbp)$/;"	l
ffff80000010b84f	kernel.asm	/^ffff80000010b84f:	00 $/;"	l
ffff80000010b850	kernel.asm	/^ffff80000010b850:	48 81 45 c0 00 10 00 	addq   $0x1000,-0x40(%rbp)$/;"	l
ffff80000010b857	kernel.asm	/^ffff80000010b857:	00 $/;"	l
ffff80000010b858	kernel.asm	/^ffff80000010b858:	e9 74 ff ff ff       	jmpq   ffff80000010b7d1 <mappages+0x43>$/;"	l
ffff80000010b85d	kernel.asm	/^ffff80000010b85d:	90                   	nop$/;"	l
ffff80000010b85e	kernel.asm	/^ffff80000010b85e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff80000010b863	kernel.asm	/^ffff80000010b863:	c9                   	leaveq $/;"	l
ffff80000010b864	kernel.asm	/^ffff80000010b864:	c3                   	retq   $/;"	l
ffff80000010b865	kernel.asm	/^ffff80000010b865 <inituvm>:$/;"	l
ffff80000010b865	kernel.asm	/^ffff80000010b865:	55                   	push   %rbp$/;"	l
ffff80000010b866	kernel.asm	/^ffff80000010b866:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010b869	kernel.asm	/^ffff80000010b869:	48 83 ec 30          	sub    $0x30,%rsp$/;"	l
ffff80000010b86d	kernel.asm	/^ffff80000010b86d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
ffff80000010b871	kernel.asm	/^ffff80000010b871:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)$/;"	l
ffff80000010b875	kernel.asm	/^ffff80000010b875:	89 55 dc             	mov    %edx,-0x24(%rbp)$/;"	l
ffff80000010b878	kernel.asm	/^ffff80000010b878:	81 7d dc ff 0f 00 00 	cmpl   $0xfff,-0x24(%rbp)$/;"	l
ffff80000010b87f	kernel.asm	/^ffff80000010b87f:	76 16                	jbe    ffff80000010b897 <inituvm+0x32>$/;"	l
ffff80000010b881	kernel.asm	/^ffff80000010b881:	48 bf fa c8 10 00 00 	movabs $0xffff80000010c8fa,%rdi$/;"	l
ffff80000010b888	kernel.asm	/^ffff80000010b888:	80 ff ff $/;"	l
ffff80000010b88b	kernel.asm	/^ffff80000010b88b:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff80000010b892	kernel.asm	/^ffff80000010b892:	80 ff ff $/;"	l
ffff80000010b895	kernel.asm	/^ffff80000010b895:	ff d0                	callq  *%rax$/;"	l
ffff80000010b897	kernel.asm	/^ffff80000010b897:	48 b8 95 41 10 00 00 	movabs $0xffff800000104195,%rax$/;"	l
ffff80000010b89e	kernel.asm	/^ffff80000010b89e:	80 ff ff $/;"	l
ffff80000010b8a1	kernel.asm	/^ffff80000010b8a1:	ff d0                	callq  *%rax$/;"	l
ffff80000010b8a3	kernel.asm	/^ffff80000010b8a3:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff80000010b8a7	kernel.asm	/^ffff80000010b8a7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010b8ab	kernel.asm	/^ffff80000010b8ab:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
ffff80000010b8b0	kernel.asm	/^ffff80000010b8b0:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffff80000010b8b5	kernel.asm	/^ffff80000010b8b5:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010b8b8	kernel.asm	/^ffff80000010b8b8:	48 b8 9d 7c 10 00 00 	movabs $0xffff800000107c9d,%rax$/;"	l
ffff80000010b8bf	kernel.asm	/^ffff80000010b8bf:	80 ff ff $/;"	l
ffff80000010b8c2	kernel.asm	/^ffff80000010b8c2:	ff d0                	callq  *%rax$/;"	l
ffff80000010b8c4	kernel.asm	/^ffff80000010b8c4:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx$/;"	l
ffff80000010b8c8	kernel.asm	/^ffff80000010b8c8:	48 b8 00 00 00 00 00 	movabs $0x800000000000,%rax$/;"	l
ffff80000010b8cf	kernel.asm	/^ffff80000010b8cf:	80 00 00 $/;"	l
ffff80000010b8d2	kernel.asm	/^ffff80000010b8d2:	48 01 c2             	add    %rax,%rdx$/;"	l
ffff80000010b8d5	kernel.asm	/^ffff80000010b8d5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010b8d9	kernel.asm	/^ffff80000010b8d9:	41 b8 06 00 00 00    	mov    $0x6,%r8d$/;"	l
ffff80000010b8df	kernel.asm	/^ffff80000010b8df:	48 89 d1             	mov    %rdx,%rcx$/;"	l
ffff80000010b8e2	kernel.asm	/^ffff80000010b8e2:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
ffff80000010b8e7	kernel.asm	/^ffff80000010b8e7:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffff80000010b8ec	kernel.asm	/^ffff80000010b8ec:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010b8ef	kernel.asm	/^ffff80000010b8ef:	48 b8 8e b7 10 00 00 	movabs $0xffff80000010b78e,%rax$/;"	l
ffff80000010b8f6	kernel.asm	/^ffff80000010b8f6:	80 ff ff $/;"	l
ffff80000010b8f9	kernel.asm	/^ffff80000010b8f9:	ff d0                	callq  *%rax$/;"	l
ffff80000010b8fb	kernel.asm	/^ffff80000010b8fb:	8b 55 dc             	mov    -0x24(%rbp),%edx$/;"	l
ffff80000010b8fe	kernel.asm	/^ffff80000010b8fe:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx$/;"	l
ffff80000010b902	kernel.asm	/^ffff80000010b902:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010b906	kernel.asm	/^ffff80000010b906:	48 89 ce             	mov    %rcx,%rsi$/;"	l
ffff80000010b909	kernel.asm	/^ffff80000010b909:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010b90c	kernel.asm	/^ffff80000010b90c:	48 b8 9a 7d 10 00 00 	movabs $0xffff800000107d9a,%rax$/;"	l
ffff80000010b913	kernel.asm	/^ffff80000010b913:	80 ff ff $/;"	l
ffff80000010b916	kernel.asm	/^ffff80000010b916:	ff d0                	callq  *%rax$/;"	l
ffff80000010b918	kernel.asm	/^ffff80000010b918:	90                   	nop$/;"	l
ffff80000010b919	kernel.asm	/^ffff80000010b919:	c9                   	leaveq $/;"	l
ffff80000010b91a	kernel.asm	/^ffff80000010b91a:	c3                   	retq   $/;"	l
ffff80000010b91b	kernel.asm	/^ffff80000010b91b <loaduvm>:$/;"	l
ffff80000010b91b	kernel.asm	/^ffff80000010b91b:	55                   	push   %rbp$/;"	l
ffff80000010b91c	kernel.asm	/^ffff80000010b91c:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010b91f	kernel.asm	/^ffff80000010b91f:	48 83 ec 40          	sub    $0x40,%rsp$/;"	l
ffff80000010b923	kernel.asm	/^ffff80000010b923:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)$/;"	l
ffff80000010b927	kernel.asm	/^ffff80000010b927:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)$/;"	l
ffff80000010b92b	kernel.asm	/^ffff80000010b92b:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)$/;"	l
ffff80000010b92f	kernel.asm	/^ffff80000010b92f:	89 4d c4             	mov    %ecx,-0x3c(%rbp)$/;"	l
ffff80000010b932	kernel.asm	/^ffff80000010b932:	44 89 45 c0          	mov    %r8d,-0x40(%rbp)$/;"	l
ffff80000010b936	kernel.asm	/^ffff80000010b936:	48 8b 45 d0          	mov    -0x30(%rbp),%rax$/;"	l
ffff80000010b93a	kernel.asm	/^ffff80000010b93a:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
ffff80000010b93f	kernel.asm	/^ffff80000010b93f:	48 85 c0             	test   %rax,%rax$/;"	l
ffff80000010b942	kernel.asm	/^ffff80000010b942:	74 16                	je     ffff80000010b95a <loaduvm+0x3f>$/;"	l
ffff80000010b944	kernel.asm	/^ffff80000010b944:	48 bf 18 c9 10 00 00 	movabs $0xffff80000010c918,%rdi$/;"	l
ffff80000010b94b	kernel.asm	/^ffff80000010b94b:	80 ff ff $/;"	l
ffff80000010b94e	kernel.asm	/^ffff80000010b94e:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff80000010b955	kernel.asm	/^ffff80000010b955:	80 ff ff $/;"	l
ffff80000010b958	kernel.asm	/^ffff80000010b958:	ff d0                	callq  *%rax$/;"	l
ffff80000010b95a	kernel.asm	/^ffff80000010b95a:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)$/;"	l
ffff80000010b961	kernel.asm	/^ffff80000010b961:	e9 c6 00 00 00       	jmpq   ffff80000010ba2c <loaduvm+0x111>$/;"	l
ffff80000010b966	kernel.asm	/^ffff80000010b966:	8b 55 fc             	mov    -0x4(%rbp),%edx$/;"	l
ffff80000010b969	kernel.asm	/^ffff80000010b969:	48 8b 45 d0          	mov    -0x30(%rbp),%rax$/;"	l
ffff80000010b96d	kernel.asm	/^ffff80000010b96d:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx$/;"	l
ffff80000010b971	kernel.asm	/^ffff80000010b971:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff80000010b975	kernel.asm	/^ffff80000010b975:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
ffff80000010b97a	kernel.asm	/^ffff80000010b97a:	48 89 ce             	mov    %rcx,%rsi$/;"	l
ffff80000010b97d	kernel.asm	/^ffff80000010b97d:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010b980	kernel.asm	/^ffff80000010b980:	48 b8 41 b5 10 00 00 	movabs $0xffff80000010b541,%rax$/;"	l
ffff80000010b987	kernel.asm	/^ffff80000010b987:	80 ff ff $/;"	l
ffff80000010b98a	kernel.asm	/^ffff80000010b98a:	ff d0                	callq  *%rax$/;"	l
ffff80000010b98c	kernel.asm	/^ffff80000010b98c:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ffff80000010b990	kernel.asm	/^ffff80000010b990:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)$/;"	l
ffff80000010b995	kernel.asm	/^ffff80000010b995:	75 16                	jne    ffff80000010b9ad <loaduvm+0x92>$/;"	l
ffff80000010b997	kernel.asm	/^ffff80000010b997:	48 bf 3b c9 10 00 00 	movabs $0xffff80000010c93b,%rdi$/;"	l
ffff80000010b99e	kernel.asm	/^ffff80000010b99e:	80 ff ff $/;"	l
ffff80000010b9a1	kernel.asm	/^ffff80000010b9a1:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff80000010b9a8	kernel.asm	/^ffff80000010b9a8:	80 ff ff $/;"	l
ffff80000010b9ab	kernel.asm	/^ffff80000010b9ab:	ff d0                	callq  *%rax$/;"	l
ffff80000010b9ad	kernel.asm	/^ffff80000010b9ad:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff80000010b9b1	kernel.asm	/^ffff80000010b9b1:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff80000010b9b4	kernel.asm	/^ffff80000010b9b4:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax$/;"	l
ffff80000010b9ba	kernel.asm	/^ffff80000010b9ba:	48 89 45 e8          	mov    %rax,-0x18(%rbp)$/;"	l
ffff80000010b9be	kernel.asm	/^ffff80000010b9be:	8b 45 c0             	mov    -0x40(%rbp),%eax$/;"	l
ffff80000010b9c1	kernel.asm	/^ffff80000010b9c1:	2b 45 fc             	sub    -0x4(%rbp),%eax$/;"	l
ffff80000010b9c4	kernel.asm	/^ffff80000010b9c4:	3d ff 0f 00 00       	cmp    $0xfff,%eax$/;"	l
ffff80000010b9c9	kernel.asm	/^ffff80000010b9c9:	77 0b                	ja     ffff80000010b9d6 <loaduvm+0xbb>$/;"	l
ffff80000010b9cb	kernel.asm	/^ffff80000010b9cb:	8b 45 c0             	mov    -0x40(%rbp),%eax$/;"	l
ffff80000010b9ce	kernel.asm	/^ffff80000010b9ce:	2b 45 fc             	sub    -0x4(%rbp),%eax$/;"	l
ffff80000010b9d1	kernel.asm	/^ffff80000010b9d1:	89 45 f8             	mov    %eax,-0x8(%rbp)$/;"	l
ffff80000010b9d4	kernel.asm	/^ffff80000010b9d4:	eb 07                	jmp    ffff80000010b9dd <loaduvm+0xc2>$/;"	l
ffff80000010b9d6	kernel.asm	/^ffff80000010b9d6:	c7 45 f8 00 10 00 00 	movl   $0x1000,-0x8(%rbp)$/;"	l
ffff80000010b9dd	kernel.asm	/^ffff80000010b9dd:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
ffff80000010b9e1	kernel.asm	/^ffff80000010b9e1:	48 8b 80 98 00 00 00 	mov    0x98(%rax),%rax$/;"	l
ffff80000010b9e8	kernel.asm	/^ffff80000010b9e8:	48 8b 40 10          	mov    0x10(%rax),%rax$/;"	l
ffff80000010b9ec	kernel.asm	/^ffff80000010b9ec:	8b 4d c4             	mov    -0x3c(%rbp),%ecx$/;"	l
ffff80000010b9ef	kernel.asm	/^ffff80000010b9ef:	8b 55 fc             	mov    -0x4(%rbp),%edx$/;"	l
ffff80000010b9f2	kernel.asm	/^ffff80000010b9f2:	8d 34 11             	lea    (%rcx,%rdx,1),%esi$/;"	l
ffff80000010b9f5	kernel.asm	/^ffff80000010b9f5:	48 b9 00 00 00 00 00 	movabs $0xffff800000000000,%rcx$/;"	l
ffff80000010b9fc	kernel.asm	/^ffff80000010b9fc:	80 ff ff $/;"	l
ffff80000010b9ff	kernel.asm	/^ffff80000010b9ff:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx$/;"	l
ffff80000010ba03	kernel.asm	/^ffff80000010ba03:	48 01 ca             	add    %rcx,%rdx$/;"	l
ffff80000010ba06	kernel.asm	/^ffff80000010ba06:	49 89 d0             	mov    %rdx,%r8$/;"	l
ffff80000010ba09	kernel.asm	/^ffff80000010ba09:	8b 55 f8             	mov    -0x8(%rbp),%edx$/;"	l
ffff80000010ba0c	kernel.asm	/^ffff80000010ba0c:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi$/;"	l
ffff80000010ba10	kernel.asm	/^ffff80000010ba10:	89 d1                	mov    %edx,%ecx$/;"	l
ffff80000010ba12	kernel.asm	/^ffff80000010ba12:	89 f2                	mov    %esi,%edx$/;"	l
ffff80000010ba14	kernel.asm	/^ffff80000010ba14:	4c 89 c6             	mov    %r8,%rsi$/;"	l
ffff80000010ba17	kernel.asm	/^ffff80000010ba17:	ff d0                	callq  *%rax$/;"	l
ffff80000010ba19	kernel.asm	/^ffff80000010ba19:	3b 45 f8             	cmp    -0x8(%rbp),%eax$/;"	l
ffff80000010ba1c	kernel.asm	/^ffff80000010ba1c:	74 07                	je     ffff80000010ba25 <loaduvm+0x10a>$/;"	l
ffff80000010ba1e	kernel.asm	/^ffff80000010ba1e:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff80000010ba23	kernel.asm	/^ffff80000010ba23:	eb 18                	jmp    ffff80000010ba3d <loaduvm+0x122>$/;"	l
ffff80000010ba25	kernel.asm	/^ffff80000010ba25:	81 45 fc 00 10 00 00 	addl   $0x1000,-0x4(%rbp)$/;"	l
ffff80000010ba2c	kernel.asm	/^ffff80000010ba2c:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff80000010ba2f	kernel.asm	/^ffff80000010ba2f:	3b 45 c0             	cmp    -0x40(%rbp),%eax$/;"	l
ffff80000010ba32	kernel.asm	/^ffff80000010ba32:	0f 82 2e ff ff ff    	jb     ffff80000010b966 <loaduvm+0x4b>$/;"	l
ffff80000010ba38	kernel.asm	/^ffff80000010ba38:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff80000010ba3d	kernel.asm	/^ffff80000010ba3d:	c9                   	leaveq $/;"	l
ffff80000010ba3e	kernel.asm	/^ffff80000010ba3e:	c3                   	retq   $/;"	l
ffff80000010ba3f	kernel.asm	/^ffff80000010ba3f <allocuvm>:$/;"	l
ffff80000010ba3f	kernel.asm	/^ffff80000010ba3f:	55                   	push   %rbp$/;"	l
ffff80000010ba40	kernel.asm	/^ffff80000010ba40:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010ba43	kernel.asm	/^ffff80000010ba43:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ffff80000010ba47	kernel.asm	/^ffff80000010ba47:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
ffff80000010ba4b	kernel.asm	/^ffff80000010ba4b:	89 75 e4             	mov    %esi,-0x1c(%rbp)$/;"	l
ffff80000010ba4e	kernel.asm	/^ffff80000010ba4e:	89 55 e0             	mov    %edx,-0x20(%rbp)$/;"	l
ffff80000010ba51	kernel.asm	/^ffff80000010ba51:	8b 45 e0             	mov    -0x20(%rbp),%eax$/;"	l
ffff80000010ba54	kernel.asm	/^ffff80000010ba54:	3b 45 e4             	cmp    -0x1c(%rbp),%eax$/;"	l
ffff80000010ba57	kernel.asm	/^ffff80000010ba57:	73 08                	jae    ffff80000010ba61 <allocuvm+0x22>$/;"	l
ffff80000010ba59	kernel.asm	/^ffff80000010ba59:	8b 45 e4             	mov    -0x1c(%rbp),%eax$/;"	l
ffff80000010ba5c	kernel.asm	/^ffff80000010ba5c:	e9 30 01 00 00       	jmpq   ffff80000010bb91 <allocuvm+0x152>$/;"	l
ffff80000010ba61	kernel.asm	/^ffff80000010ba61:	8b 45 e4             	mov    -0x1c(%rbp),%eax$/;"	l
ffff80000010ba64	kernel.asm	/^ffff80000010ba64:	48 05 ff 0f 00 00    	add    $0xfff,%rax$/;"	l
ffff80000010ba6a	kernel.asm	/^ffff80000010ba6a:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax$/;"	l
ffff80000010ba70	kernel.asm	/^ffff80000010ba70:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff80000010ba74	kernel.asm	/^ffff80000010ba74:	e9 08 01 00 00       	jmpq   ffff80000010bb81 <allocuvm+0x142>$/;"	l
ffff80000010ba79	kernel.asm	/^ffff80000010ba79:	48 b8 95 41 10 00 00 	movabs $0xffff800000104195,%rax$/;"	l
ffff80000010ba80	kernel.asm	/^ffff80000010ba80:	80 ff ff $/;"	l
ffff80000010ba83	kernel.asm	/^ffff80000010ba83:	ff d0                	callq  *%rax$/;"	l
ffff80000010ba85	kernel.asm	/^ffff80000010ba85:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ffff80000010ba89	kernel.asm	/^ffff80000010ba89:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)$/;"	l
ffff80000010ba8e	kernel.asm	/^ffff80000010ba8e:	75 41                	jne    ffff80000010bad1 <allocuvm+0x92>$/;"	l
ffff80000010ba90	kernel.asm	/^ffff80000010ba90:	48 bf 59 c9 10 00 00 	movabs $0xffff80000010c959,%rdi$/;"	l
ffff80000010ba97	kernel.asm	/^ffff80000010ba97:	80 ff ff $/;"	l
ffff80000010ba9a	kernel.asm	/^ffff80000010ba9a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff80000010ba9f	kernel.asm	/^ffff80000010ba9f:	48 ba ac 07 10 00 00 	movabs $0xffff8000001007ac,%rdx$/;"	l
ffff80000010baa6	kernel.asm	/^ffff80000010baa6:	80 ff ff $/;"	l
ffff80000010baa9	kernel.asm	/^ffff80000010baa9:	ff d2                	callq  *%rdx$/;"	l
ffff80000010baab	kernel.asm	/^ffff80000010baab:	8b 55 e4             	mov    -0x1c(%rbp),%edx$/;"	l
ffff80000010baae	kernel.asm	/^ffff80000010baae:	8b 4d e0             	mov    -0x20(%rbp),%ecx$/;"	l
ffff80000010bab1	kernel.asm	/^ffff80000010bab1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010bab5	kernel.asm	/^ffff80000010bab5:	48 89 ce             	mov    %rcx,%rsi$/;"	l
ffff80000010bab8	kernel.asm	/^ffff80000010bab8:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010babb	kernel.asm	/^ffff80000010babb:	48 b8 93 bb 10 00 00 	movabs $0xffff80000010bb93,%rax$/;"	l
ffff80000010bac2	kernel.asm	/^ffff80000010bac2:	80 ff ff $/;"	l
ffff80000010bac5	kernel.asm	/^ffff80000010bac5:	ff d0                	callq  *%rax$/;"	l
ffff80000010bac7	kernel.asm	/^ffff80000010bac7:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff80000010bacc	kernel.asm	/^ffff80000010bacc:	e9 c0 00 00 00       	jmpq   ffff80000010bb91 <allocuvm+0x152>$/;"	l
ffff80000010bad1	kernel.asm	/^ffff80000010bad1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff80000010bad5	kernel.asm	/^ffff80000010bad5:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
ffff80000010bada	kernel.asm	/^ffff80000010bada:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffff80000010badf	kernel.asm	/^ffff80000010badf:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010bae2	kernel.asm	/^ffff80000010bae2:	48 b8 9d 7c 10 00 00 	movabs $0xffff800000107c9d,%rax$/;"	l
ffff80000010bae9	kernel.asm	/^ffff80000010bae9:	80 ff ff $/;"	l
ffff80000010baec	kernel.asm	/^ffff80000010baec:	ff d0                	callq  *%rax$/;"	l
ffff80000010baee	kernel.asm	/^ffff80000010baee:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
ffff80000010baf2	kernel.asm	/^ffff80000010baf2:	48 b8 00 00 00 00 00 	movabs $0x800000000000,%rax$/;"	l
ffff80000010baf9	kernel.asm	/^ffff80000010baf9:	80 00 00 $/;"	l
ffff80000010bafc	kernel.asm	/^ffff80000010bafc:	48 01 c2             	add    %rax,%rdx$/;"	l
ffff80000010baff	kernel.asm	/^ffff80000010baff:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi$/;"	l
ffff80000010bb03	kernel.asm	/^ffff80000010bb03:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010bb07	kernel.asm	/^ffff80000010bb07:	41 b8 06 00 00 00    	mov    $0x6,%r8d$/;"	l
ffff80000010bb0d	kernel.asm	/^ffff80000010bb0d:	48 89 d1             	mov    %rdx,%rcx$/;"	l
ffff80000010bb10	kernel.asm	/^ffff80000010bb10:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
ffff80000010bb15	kernel.asm	/^ffff80000010bb15:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010bb18	kernel.asm	/^ffff80000010bb18:	48 b8 8e b7 10 00 00 	movabs $0xffff80000010b78e,%rax$/;"	l
ffff80000010bb1f	kernel.asm	/^ffff80000010bb1f:	80 ff ff $/;"	l
ffff80000010bb22	kernel.asm	/^ffff80000010bb22:	ff d0                	callq  *%rax$/;"	l
ffff80000010bb24	kernel.asm	/^ffff80000010bb24:	85 c0                	test   %eax,%eax$/;"	l
ffff80000010bb26	kernel.asm	/^ffff80000010bb26:	79 51                	jns    ffff80000010bb79 <allocuvm+0x13a>$/;"	l
ffff80000010bb28	kernel.asm	/^ffff80000010bb28:	48 bf 71 c9 10 00 00 	movabs $0xffff80000010c971,%rdi$/;"	l
ffff80000010bb2f	kernel.asm	/^ffff80000010bb2f:	80 ff ff $/;"	l
ffff80000010bb32	kernel.asm	/^ffff80000010bb32:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff80000010bb37	kernel.asm	/^ffff80000010bb37:	48 ba ac 07 10 00 00 	movabs $0xffff8000001007ac,%rdx$/;"	l
ffff80000010bb3e	kernel.asm	/^ffff80000010bb3e:	80 ff ff $/;"	l
ffff80000010bb41	kernel.asm	/^ffff80000010bb41:	ff d2                	callq  *%rdx$/;"	l
ffff80000010bb43	kernel.asm	/^ffff80000010bb43:	8b 55 e4             	mov    -0x1c(%rbp),%edx$/;"	l
ffff80000010bb46	kernel.asm	/^ffff80000010bb46:	8b 4d e0             	mov    -0x20(%rbp),%ecx$/;"	l
ffff80000010bb49	kernel.asm	/^ffff80000010bb49:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010bb4d	kernel.asm	/^ffff80000010bb4d:	48 89 ce             	mov    %rcx,%rsi$/;"	l
ffff80000010bb50	kernel.asm	/^ffff80000010bb50:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010bb53	kernel.asm	/^ffff80000010bb53:	48 b8 93 bb 10 00 00 	movabs $0xffff80000010bb93,%rax$/;"	l
ffff80000010bb5a	kernel.asm	/^ffff80000010bb5a:	80 ff ff $/;"	l
ffff80000010bb5d	kernel.asm	/^ffff80000010bb5d:	ff d0                	callq  *%rax$/;"	l
ffff80000010bb5f	kernel.asm	/^ffff80000010bb5f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff80000010bb63	kernel.asm	/^ffff80000010bb63:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010bb66	kernel.asm	/^ffff80000010bb66:	48 b8 9f 40 10 00 00 	movabs $0xffff80000010409f,%rax$/;"	l
ffff80000010bb6d	kernel.asm	/^ffff80000010bb6d:	80 ff ff $/;"	l
ffff80000010bb70	kernel.asm	/^ffff80000010bb70:	ff d0                	callq  *%rax$/;"	l
ffff80000010bb72	kernel.asm	/^ffff80000010bb72:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff80000010bb77	kernel.asm	/^ffff80000010bb77:	eb 18                	jmp    ffff80000010bb91 <allocuvm+0x152>$/;"	l
ffff80000010bb79	kernel.asm	/^ffff80000010bb79:	48 81 45 f8 00 10 00 	addq   $0x1000,-0x8(%rbp)$/;"	l
ffff80000010bb80	kernel.asm	/^ffff80000010bb80:	00 $/;"	l
ffff80000010bb81	kernel.asm	/^ffff80000010bb81:	8b 45 e0             	mov    -0x20(%rbp),%eax$/;"	l
ffff80000010bb84	kernel.asm	/^ffff80000010bb84:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax$/;"	l
ffff80000010bb88	kernel.asm	/^ffff80000010bb88:	0f 87 eb fe ff ff    	ja     ffff80000010ba79 <allocuvm+0x3a>$/;"	l
ffff80000010bb8e	kernel.asm	/^ffff80000010bb8e:	8b 45 e0             	mov    -0x20(%rbp),%eax$/;"	l
ffff80000010bb91	kernel.asm	/^ffff80000010bb91:	c9                   	leaveq $/;"	l
ffff80000010bb92	kernel.asm	/^ffff80000010bb92:	c3                   	retq   $/;"	l
ffff80000010bb93	kernel.asm	/^ffff80000010bb93 <deallocuvm>:$/;"	l
ffff80000010bb93	kernel.asm	/^ffff80000010bb93:	55                   	push   %rbp$/;"	l
ffff80000010bb94	kernel.asm	/^ffff80000010bb94:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010bb97	kernel.asm	/^ffff80000010bb97:	48 83 ec 40          	sub    $0x40,%rsp$/;"	l
ffff80000010bb9b	kernel.asm	/^ffff80000010bb9b:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)$/;"	l
ffff80000010bb9f	kernel.asm	/^ffff80000010bb9f:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)$/;"	l
ffff80000010bba3	kernel.asm	/^ffff80000010bba3:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)$/;"	l
ffff80000010bba7	kernel.asm	/^ffff80000010bba7:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
ffff80000010bbab	kernel.asm	/^ffff80000010bbab:	48 3b 45 d0          	cmp    -0x30(%rbp),%rax$/;"	l
ffff80000010bbaf	kernel.asm	/^ffff80000010bbaf:	72 09                	jb     ffff80000010bbba <deallocuvm+0x27>$/;"	l
ffff80000010bbb1	kernel.asm	/^ffff80000010bbb1:	48 8b 45 d0          	mov    -0x30(%rbp),%rax$/;"	l
ffff80000010bbb5	kernel.asm	/^ffff80000010bbb5:	e9 cd 00 00 00       	jmpq   ffff80000010bc87 <deallocuvm+0xf4>$/;"	l
ffff80000010bbba	kernel.asm	/^ffff80000010bbba:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
ffff80000010bbbe	kernel.asm	/^ffff80000010bbbe:	48 05 ff 0f 00 00    	add    $0xfff,%rax$/;"	l
ffff80000010bbc4	kernel.asm	/^ffff80000010bbc4:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax$/;"	l
ffff80000010bbca	kernel.asm	/^ffff80000010bbca:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff80000010bbce	kernel.asm	/^ffff80000010bbce:	e9 a2 00 00 00       	jmpq   ffff80000010bc75 <deallocuvm+0xe2>$/;"	l
ffff80000010bbd3	kernel.asm	/^ffff80000010bbd3:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx$/;"	l
ffff80000010bbd7	kernel.asm	/^ffff80000010bbd7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff80000010bbdb	kernel.asm	/^ffff80000010bbdb:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
ffff80000010bbe0	kernel.asm	/^ffff80000010bbe0:	48 89 ce             	mov    %rcx,%rsi$/;"	l
ffff80000010bbe3	kernel.asm	/^ffff80000010bbe3:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010bbe6	kernel.asm	/^ffff80000010bbe6:	48 b8 41 b5 10 00 00 	movabs $0xffff80000010b541,%rax$/;"	l
ffff80000010bbed	kernel.asm	/^ffff80000010bbed:	80 ff ff $/;"	l
ffff80000010bbf0	kernel.asm	/^ffff80000010bbf0:	ff d0                	callq  *%rax$/;"	l
ffff80000010bbf2	kernel.asm	/^ffff80000010bbf2:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ffff80000010bbf6	kernel.asm	/^ffff80000010bbf6:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)$/;"	l
ffff80000010bbfb	kernel.asm	/^ffff80000010bbfb:	74 70                	je     ffff80000010bc6d <deallocuvm+0xda>$/;"	l
ffff80000010bbfd	kernel.asm	/^ffff80000010bbfd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff80000010bc01	kernel.asm	/^ffff80000010bc01:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff80000010bc04	kernel.asm	/^ffff80000010bc04:	83 e0 01             	and    $0x1,%eax$/;"	l
ffff80000010bc07	kernel.asm	/^ffff80000010bc07:	48 85 c0             	test   %rax,%rax$/;"	l
ffff80000010bc0a	kernel.asm	/^ffff80000010bc0a:	74 61                	je     ffff80000010bc6d <deallocuvm+0xda>$/;"	l
ffff80000010bc0c	kernel.asm	/^ffff80000010bc0c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff80000010bc10	kernel.asm	/^ffff80000010bc10:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff80000010bc13	kernel.asm	/^ffff80000010bc13:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax$/;"	l
ffff80000010bc19	kernel.asm	/^ffff80000010bc19:	48 89 45 e8          	mov    %rax,-0x18(%rbp)$/;"	l
ffff80000010bc1d	kernel.asm	/^ffff80000010bc1d:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)$/;"	l
ffff80000010bc22	kernel.asm	/^ffff80000010bc22:	75 16                	jne    ffff80000010bc3a <deallocuvm+0xa7>$/;"	l
ffff80000010bc24	kernel.asm	/^ffff80000010bc24:	48 bf 8d c9 10 00 00 	movabs $0xffff80000010c98d,%rdi$/;"	l
ffff80000010bc2b	kernel.asm	/^ffff80000010bc2b:	80 ff ff $/;"	l
ffff80000010bc2e	kernel.asm	/^ffff80000010bc2e:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff80000010bc35	kernel.asm	/^ffff80000010bc35:	80 ff ff $/;"	l
ffff80000010bc38	kernel.asm	/^ffff80000010bc38:	ff d0                	callq  *%rax$/;"	l
ffff80000010bc3a	kernel.asm	/^ffff80000010bc3a:	48 ba 00 00 00 00 00 	movabs $0xffff800000000000,%rdx$/;"	l
ffff80000010bc41	kernel.asm	/^ffff80000010bc41:	80 ff ff $/;"	l
ffff80000010bc44	kernel.asm	/^ffff80000010bc44:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010bc48	kernel.asm	/^ffff80000010bc48:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff80000010bc4b	kernel.asm	/^ffff80000010bc4b:	48 89 45 e0          	mov    %rax,-0x20(%rbp)$/;"	l
ffff80000010bc4f	kernel.asm	/^ffff80000010bc4f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff80000010bc53	kernel.asm	/^ffff80000010bc53:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010bc56	kernel.asm	/^ffff80000010bc56:	48 b8 9f 40 10 00 00 	movabs $0xffff80000010409f,%rax$/;"	l
ffff80000010bc5d	kernel.asm	/^ffff80000010bc5d:	80 ff ff $/;"	l
ffff80000010bc60	kernel.asm	/^ffff80000010bc60:	ff d0                	callq  *%rax$/;"	l
ffff80000010bc62	kernel.asm	/^ffff80000010bc62:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff80000010bc66	kernel.asm	/^ffff80000010bc66:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)$/;"	l
ffff80000010bc6d	kernel.asm	/^ffff80000010bc6d:	48 81 45 f8 00 10 00 	addq   $0x1000,-0x8(%rbp)$/;"	l
ffff80000010bc74	kernel.asm	/^ffff80000010bc74:	00 $/;"	l
ffff80000010bc75	kernel.asm	/^ffff80000010bc75:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010bc79	kernel.asm	/^ffff80000010bc79:	48 3b 45 d0          	cmp    -0x30(%rbp),%rax$/;"	l
ffff80000010bc7d	kernel.asm	/^ffff80000010bc7d:	0f 82 50 ff ff ff    	jb     ffff80000010bbd3 <deallocuvm+0x40>$/;"	l
ffff80000010bc83	kernel.asm	/^ffff80000010bc83:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
ffff80000010bc87	kernel.asm	/^ffff80000010bc87:	c9                   	leaveq $/;"	l
ffff80000010bc88	kernel.asm	/^ffff80000010bc88:	c3                   	retq   $/;"	l
ffff80000010bc89	kernel.asm	/^ffff80000010bc89 <freevm>:$/;"	l
ffff80000010bc89	kernel.asm	/^ffff80000010bc89:	55                   	push   %rbp$/;"	l
ffff80000010bc8a	kernel.asm	/^ffff80000010bc8a:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010bc8d	kernel.asm	/^ffff80000010bc8d:	48 83 ec 40          	sub    $0x40,%rsp$/;"	l
ffff80000010bc91	kernel.asm	/^ffff80000010bc91:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)$/;"	l
ffff80000010bc95	kernel.asm	/^ffff80000010bc95:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)$/;"	l
ffff80000010bc9a	kernel.asm	/^ffff80000010bc9a:	75 16                	jne    ffff80000010bcb2 <freevm+0x29>$/;"	l
ffff80000010bc9c	kernel.asm	/^ffff80000010bc9c:	48 bf 93 c9 10 00 00 	movabs $0xffff80000010c993,%rdi$/;"	l
ffff80000010bca3	kernel.asm	/^ffff80000010bca3:	80 ff ff $/;"	l
ffff80000010bca6	kernel.asm	/^ffff80000010bca6:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff80000010bcad	kernel.asm	/^ffff80000010bcad:	80 ff ff $/;"	l
ffff80000010bcb0	kernel.asm	/^ffff80000010bcb0:	ff d0                	callq  *%rax$/;"	l
ffff80000010bcb2	kernel.asm	/^ffff80000010bcb2:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)$/;"	l
ffff80000010bcb9	kernel.asm	/^ffff80000010bcb9:	e9 dc 01 00 00       	jmpq   ffff80000010be9a <freevm+0x211>$/;"	l
ffff80000010bcbe	kernel.asm	/^ffff80000010bcbe:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff80000010bcc1	kernel.asm	/^ffff80000010bcc1:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx$/;"	l
ffff80000010bcc8	kernel.asm	/^ffff80000010bcc8:	00 $/;"	l
ffff80000010bcc9	kernel.asm	/^ffff80000010bcc9:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
ffff80000010bccd	kernel.asm	/^ffff80000010bccd:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff80000010bcd0	kernel.asm	/^ffff80000010bcd0:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff80000010bcd3	kernel.asm	/^ffff80000010bcd3:	83 e0 01             	and    $0x1,%eax$/;"	l
ffff80000010bcd6	kernel.asm	/^ffff80000010bcd6:	48 85 c0             	test   %rax,%rax$/;"	l
ffff80000010bcd9	kernel.asm	/^ffff80000010bcd9:	0f 84 b7 01 00 00    	je     ffff80000010be96 <freevm+0x20d>$/;"	l
ffff80000010bcdf	kernel.asm	/^ffff80000010bcdf:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff80000010bce2	kernel.asm	/^ffff80000010bce2:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx$/;"	l
ffff80000010bce9	kernel.asm	/^ffff80000010bce9:	00 $/;"	l
ffff80000010bcea	kernel.asm	/^ffff80000010bcea:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
ffff80000010bcee	kernel.asm	/^ffff80000010bcee:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff80000010bcf1	kernel.asm	/^ffff80000010bcf1:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff80000010bcf4	kernel.asm	/^ffff80000010bcf4:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax$/;"	l
ffff80000010bcfa	kernel.asm	/^ffff80000010bcfa:	48 89 c2             	mov    %rax,%rdx$/;"	l
ffff80000010bcfd	kernel.asm	/^ffff80000010bcfd:	48 b8 00 00 00 00 00 	movabs $0xffff800000000000,%rax$/;"	l
ffff80000010bd04	kernel.asm	/^ffff80000010bd04:	80 ff ff $/;"	l
ffff80000010bd07	kernel.asm	/^ffff80000010bd07:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff80000010bd0a	kernel.asm	/^ffff80000010bd0a:	48 89 45 e8          	mov    %rax,-0x18(%rbp)$/;"	l
ffff80000010bd0e	kernel.asm	/^ffff80000010bd0e:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)$/;"	l
ffff80000010bd15	kernel.asm	/^ffff80000010bd15:	e9 5c 01 00 00       	jmpq   ffff80000010be76 <freevm+0x1ed>$/;"	l
ffff80000010bd1a	kernel.asm	/^ffff80000010bd1a:	8b 45 f8             	mov    -0x8(%rbp),%eax$/;"	l
ffff80000010bd1d	kernel.asm	/^ffff80000010bd1d:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx$/;"	l
ffff80000010bd24	kernel.asm	/^ffff80000010bd24:	00 $/;"	l
ffff80000010bd25	kernel.asm	/^ffff80000010bd25:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010bd29	kernel.asm	/^ffff80000010bd29:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff80000010bd2c	kernel.asm	/^ffff80000010bd2c:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff80000010bd2f	kernel.asm	/^ffff80000010bd2f:	83 e0 01             	and    $0x1,%eax$/;"	l
ffff80000010bd32	kernel.asm	/^ffff80000010bd32:	48 85 c0             	test   %rax,%rax$/;"	l
ffff80000010bd35	kernel.asm	/^ffff80000010bd35:	0f 84 37 01 00 00    	je     ffff80000010be72 <freevm+0x1e9>$/;"	l
ffff80000010bd3b	kernel.asm	/^ffff80000010bd3b:	8b 45 f8             	mov    -0x8(%rbp),%eax$/;"	l
ffff80000010bd3e	kernel.asm	/^ffff80000010bd3e:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx$/;"	l
ffff80000010bd45	kernel.asm	/^ffff80000010bd45:	00 $/;"	l
ffff80000010bd46	kernel.asm	/^ffff80000010bd46:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010bd4a	kernel.asm	/^ffff80000010bd4a:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff80000010bd4d	kernel.asm	/^ffff80000010bd4d:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff80000010bd50	kernel.asm	/^ffff80000010bd50:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax$/;"	l
ffff80000010bd56	kernel.asm	/^ffff80000010bd56:	48 89 c2             	mov    %rax,%rdx$/;"	l
ffff80000010bd59	kernel.asm	/^ffff80000010bd59:	48 b8 00 00 00 00 00 	movabs $0xffff800000000000,%rax$/;"	l
ffff80000010bd60	kernel.asm	/^ffff80000010bd60:	80 ff ff $/;"	l
ffff80000010bd63	kernel.asm	/^ffff80000010bd63:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff80000010bd66	kernel.asm	/^ffff80000010bd66:	48 89 45 e0          	mov    %rax,-0x20(%rbp)$/;"	l
ffff80000010bd6a	kernel.asm	/^ffff80000010bd6a:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)$/;"	l
ffff80000010bd71	kernel.asm	/^ffff80000010bd71:	e9 dc 00 00 00       	jmpq   ffff80000010be52 <freevm+0x1c9>$/;"	l
ffff80000010bd76	kernel.asm	/^ffff80000010bd76:	8b 45 f4             	mov    -0xc(%rbp),%eax$/;"	l
ffff80000010bd79	kernel.asm	/^ffff80000010bd79:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx$/;"	l
ffff80000010bd80	kernel.asm	/^ffff80000010bd80:	00 $/;"	l
ffff80000010bd81	kernel.asm	/^ffff80000010bd81:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff80000010bd85	kernel.asm	/^ffff80000010bd85:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff80000010bd88	kernel.asm	/^ffff80000010bd88:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff80000010bd8b	kernel.asm	/^ffff80000010bd8b:	83 e0 01             	and    $0x1,%eax$/;"	l
ffff80000010bd8e	kernel.asm	/^ffff80000010bd8e:	48 85 c0             	test   %rax,%rax$/;"	l
ffff80000010bd91	kernel.asm	/^ffff80000010bd91:	0f 84 b7 00 00 00    	je     ffff80000010be4e <freevm+0x1c5>$/;"	l
ffff80000010bd97	kernel.asm	/^ffff80000010bd97:	8b 45 f4             	mov    -0xc(%rbp),%eax$/;"	l
ffff80000010bd9a	kernel.asm	/^ffff80000010bd9a:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx$/;"	l
ffff80000010bda1	kernel.asm	/^ffff80000010bda1:	00 $/;"	l
ffff80000010bda2	kernel.asm	/^ffff80000010bda2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff80000010bda6	kernel.asm	/^ffff80000010bda6:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff80000010bda9	kernel.asm	/^ffff80000010bda9:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff80000010bdac	kernel.asm	/^ffff80000010bdac:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax$/;"	l
ffff80000010bdb2	kernel.asm	/^ffff80000010bdb2:	48 89 c2             	mov    %rax,%rdx$/;"	l
ffff80000010bdb5	kernel.asm	/^ffff80000010bdb5:	48 b8 00 00 00 00 00 	movabs $0xffff800000000000,%rax$/;"	l
ffff80000010bdbc	kernel.asm	/^ffff80000010bdbc:	80 ff ff $/;"	l
ffff80000010bdbf	kernel.asm	/^ffff80000010bdbf:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff80000010bdc2	kernel.asm	/^ffff80000010bdc2:	48 89 45 d8          	mov    %rax,-0x28(%rbp)$/;"	l
ffff80000010bdc6	kernel.asm	/^ffff80000010bdc6:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)$/;"	l
ffff80000010bdcd	kernel.asm	/^ffff80000010bdcd:	eb 63                	jmp    ffff80000010be32 <freevm+0x1a9>$/;"	l
ffff80000010bdcf	kernel.asm	/^ffff80000010bdcf:	8b 45 f0             	mov    -0x10(%rbp),%eax$/;"	l
ffff80000010bdd2	kernel.asm	/^ffff80000010bdd2:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx$/;"	l
ffff80000010bdd9	kernel.asm	/^ffff80000010bdd9:	00 $/;"	l
ffff80000010bdda	kernel.asm	/^ffff80000010bdda:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff80000010bdde	kernel.asm	/^ffff80000010bdde:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff80000010bde1	kernel.asm	/^ffff80000010bde1:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff80000010bde4	kernel.asm	/^ffff80000010bde4:	83 e0 01             	and    $0x1,%eax$/;"	l
ffff80000010bde7	kernel.asm	/^ffff80000010bde7:	48 85 c0             	test   %rax,%rax$/;"	l
ffff80000010bdea	kernel.asm	/^ffff80000010bdea:	74 42                	je     ffff80000010be2e <freevm+0x1a5>$/;"	l
ffff80000010bdec	kernel.asm	/^ffff80000010bdec:	8b 45 f0             	mov    -0x10(%rbp),%eax$/;"	l
ffff80000010bdef	kernel.asm	/^ffff80000010bdef:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx$/;"	l
ffff80000010bdf6	kernel.asm	/^ffff80000010bdf6:	00 $/;"	l
ffff80000010bdf7	kernel.asm	/^ffff80000010bdf7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff80000010bdfb	kernel.asm	/^ffff80000010bdfb:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff80000010bdfe	kernel.asm	/^ffff80000010bdfe:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff80000010be01	kernel.asm	/^ffff80000010be01:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax$/;"	l
ffff80000010be07	kernel.asm	/^ffff80000010be07:	48 89 c2             	mov    %rax,%rdx$/;"	l
ffff80000010be0a	kernel.asm	/^ffff80000010be0a:	48 b8 00 00 00 00 00 	movabs $0xffff800000000000,%rax$/;"	l
ffff80000010be11	kernel.asm	/^ffff80000010be11:	80 ff ff $/;"	l
ffff80000010be14	kernel.asm	/^ffff80000010be14:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff80000010be17	kernel.asm	/^ffff80000010be17:	48 89 45 d0          	mov    %rax,-0x30(%rbp)$/;"	l
ffff80000010be1b	kernel.asm	/^ffff80000010be1b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax$/;"	l
ffff80000010be1f	kernel.asm	/^ffff80000010be1f:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010be22	kernel.asm	/^ffff80000010be22:	48 b8 9f 40 10 00 00 	movabs $0xffff80000010409f,%rax$/;"	l
ffff80000010be29	kernel.asm	/^ffff80000010be29:	80 ff ff $/;"	l
ffff80000010be2c	kernel.asm	/^ffff80000010be2c:	ff d0                	callq  *%rax$/;"	l
ffff80000010be2e	kernel.asm	/^ffff80000010be2e:	83 45 f0 01          	addl   $0x1,-0x10(%rbp)$/;"	l
ffff80000010be32	kernel.asm	/^ffff80000010be32:	81 7d f0 ff 01 00 00 	cmpl   $0x1ff,-0x10(%rbp)$/;"	l
ffff80000010be39	kernel.asm	/^ffff80000010be39:	76 94                	jbe    ffff80000010bdcf <freevm+0x146>$/;"	l
ffff80000010be3b	kernel.asm	/^ffff80000010be3b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff80000010be3f	kernel.asm	/^ffff80000010be3f:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010be42	kernel.asm	/^ffff80000010be42:	48 b8 9f 40 10 00 00 	movabs $0xffff80000010409f,%rax$/;"	l
ffff80000010be49	kernel.asm	/^ffff80000010be49:	80 ff ff $/;"	l
ffff80000010be4c	kernel.asm	/^ffff80000010be4c:	ff d0                	callq  *%rax$/;"	l
ffff80000010be4e	kernel.asm	/^ffff80000010be4e:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)$/;"	l
ffff80000010be52	kernel.asm	/^ffff80000010be52:	81 7d f4 ff 01 00 00 	cmpl   $0x1ff,-0xc(%rbp)$/;"	l
ffff80000010be59	kernel.asm	/^ffff80000010be59:	0f 86 17 ff ff ff    	jbe    ffff80000010bd76 <freevm+0xed>$/;"	l
ffff80000010be5f	kernel.asm	/^ffff80000010be5f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff80000010be63	kernel.asm	/^ffff80000010be63:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010be66	kernel.asm	/^ffff80000010be66:	48 b8 9f 40 10 00 00 	movabs $0xffff80000010409f,%rax$/;"	l
ffff80000010be6d	kernel.asm	/^ffff80000010be6d:	80 ff ff $/;"	l
ffff80000010be70	kernel.asm	/^ffff80000010be70:	ff d0                	callq  *%rax$/;"	l
ffff80000010be72	kernel.asm	/^ffff80000010be72:	83 45 f8 01          	addl   $0x1,-0x8(%rbp)$/;"	l
ffff80000010be76	kernel.asm	/^ffff80000010be76:	81 7d f8 ff 01 00 00 	cmpl   $0x1ff,-0x8(%rbp)$/;"	l
ffff80000010be7d	kernel.asm	/^ffff80000010be7d:	0f 86 97 fe ff ff    	jbe    ffff80000010bd1a <freevm+0x91>$/;"	l
ffff80000010be83	kernel.asm	/^ffff80000010be83:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010be87	kernel.asm	/^ffff80000010be87:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010be8a	kernel.asm	/^ffff80000010be8a:	48 b8 9f 40 10 00 00 	movabs $0xffff80000010409f,%rax$/;"	l
ffff80000010be91	kernel.asm	/^ffff80000010be91:	80 ff ff $/;"	l
ffff80000010be94	kernel.asm	/^ffff80000010be94:	ff d0                	callq  *%rax$/;"	l
ffff80000010be96	kernel.asm	/^ffff80000010be96:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)$/;"	l
ffff80000010be9a	kernel.asm	/^ffff80000010be9a:	81 7d fc ff 00 00 00 	cmpl   $0xff,-0x4(%rbp)$/;"	l
ffff80000010bea1	kernel.asm	/^ffff80000010bea1:	0f 86 17 fe ff ff    	jbe    ffff80000010bcbe <freevm+0x35>$/;"	l
ffff80000010bea7	kernel.asm	/^ffff80000010bea7:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
ffff80000010beab	kernel.asm	/^ffff80000010beab:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010beae	kernel.asm	/^ffff80000010beae:	48 b8 9f 40 10 00 00 	movabs $0xffff80000010409f,%rax$/;"	l
ffff80000010beb5	kernel.asm	/^ffff80000010beb5:	80 ff ff $/;"	l
ffff80000010beb8	kernel.asm	/^ffff80000010beb8:	ff d0                	callq  *%rax$/;"	l
ffff80000010beba	kernel.asm	/^ffff80000010beba:	90                   	nop$/;"	l
ffff80000010bebb	kernel.asm	/^ffff80000010bebb:	c9                   	leaveq $/;"	l
ffff80000010bebc	kernel.asm	/^ffff80000010bebc:	c3                   	retq   $/;"	l
ffff80000010bebd	kernel.asm	/^ffff80000010bebd <clearpteu>:$/;"	l
ffff80000010bebd	kernel.asm	/^ffff80000010bebd:	55                   	push   %rbp$/;"	l
ffff80000010bebe	kernel.asm	/^ffff80000010bebe:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010bec1	kernel.asm	/^ffff80000010bec1:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ffff80000010bec5	kernel.asm	/^ffff80000010bec5:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
ffff80000010bec9	kernel.asm	/^ffff80000010bec9:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)$/;"	l
ffff80000010becd	kernel.asm	/^ffff80000010becd:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx$/;"	l
ffff80000010bed1	kernel.asm	/^ffff80000010bed1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010bed5	kernel.asm	/^ffff80000010bed5:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
ffff80000010beda	kernel.asm	/^ffff80000010beda:	48 89 ce             	mov    %rcx,%rsi$/;"	l
ffff80000010bedd	kernel.asm	/^ffff80000010bedd:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010bee0	kernel.asm	/^ffff80000010bee0:	48 b8 41 b5 10 00 00 	movabs $0xffff80000010b541,%rax$/;"	l
ffff80000010bee7	kernel.asm	/^ffff80000010bee7:	80 ff ff $/;"	l
ffff80000010beea	kernel.asm	/^ffff80000010beea:	ff d0                	callq  *%rax$/;"	l
ffff80000010beec	kernel.asm	/^ffff80000010beec:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff80000010bef0	kernel.asm	/^ffff80000010bef0:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)$/;"	l
ffff80000010bef5	kernel.asm	/^ffff80000010bef5:	75 16                	jne    ffff80000010bf0d <clearpteu+0x50>$/;"	l
ffff80000010bef7	kernel.asm	/^ffff80000010bef7:	48 bf a4 c9 10 00 00 	movabs $0xffff80000010c9a4,%rdi$/;"	l
ffff80000010befe	kernel.asm	/^ffff80000010befe:	80 ff ff $/;"	l
ffff80000010bf01	kernel.asm	/^ffff80000010bf01:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff80000010bf08	kernel.asm	/^ffff80000010bf08:	80 ff ff $/;"	l
ffff80000010bf0b	kernel.asm	/^ffff80000010bf0b:	ff d0                	callq  *%rax$/;"	l
ffff80000010bf0d	kernel.asm	/^ffff80000010bf0d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010bf11	kernel.asm	/^ffff80000010bf11:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff80000010bf14	kernel.asm	/^ffff80000010bf14:	48 83 e0 fb          	and    $0xfffffffffffffffb,%rax$/;"	l
ffff80000010bf18	kernel.asm	/^ffff80000010bf18:	48 89 c2             	mov    %rax,%rdx$/;"	l
ffff80000010bf1b	kernel.asm	/^ffff80000010bf1b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010bf1f	kernel.asm	/^ffff80000010bf1f:	48 89 10             	mov    %rdx,(%rax)$/;"	l
ffff80000010bf22	kernel.asm	/^ffff80000010bf22:	90                   	nop$/;"	l
ffff80000010bf23	kernel.asm	/^ffff80000010bf23:	c9                   	leaveq $/;"	l
ffff80000010bf24	kernel.asm	/^ffff80000010bf24:	c3                   	retq   $/;"	l
ffff80000010bf25	kernel.asm	/^ffff80000010bf25 <copyuvm>:$/;"	l
ffff80000010bf25	kernel.asm	/^ffff80000010bf25:	55                   	push   %rbp$/;"	l
ffff80000010bf26	kernel.asm	/^ffff80000010bf26:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010bf29	kernel.asm	/^ffff80000010bf29:	48 83 ec 40          	sub    $0x40,%rsp$/;"	l
ffff80000010bf2d	kernel.asm	/^ffff80000010bf2d:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)$/;"	l
ffff80000010bf31	kernel.asm	/^ffff80000010bf31:	89 75 c4             	mov    %esi,-0x3c(%rbp)$/;"	l
ffff80000010bf34	kernel.asm	/^ffff80000010bf34:	48 b8 e5 b2 10 00 00 	movabs $0xffff80000010b2e5,%rax$/;"	l
ffff80000010bf3b	kernel.asm	/^ffff80000010bf3b:	80 ff ff $/;"	l
ffff80000010bf3e	kernel.asm	/^ffff80000010bf3e:	ff d0                	callq  *%rax$/;"	l
ffff80000010bf40	kernel.asm	/^ffff80000010bf40:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ffff80000010bf44	kernel.asm	/^ffff80000010bf44:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)$/;"	l
ffff80000010bf49	kernel.asm	/^ffff80000010bf49:	75 0a                	jne    ffff80000010bf55 <copyuvm+0x30>$/;"	l
ffff80000010bf4b	kernel.asm	/^ffff80000010bf4b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff80000010bf50	kernel.asm	/^ffff80000010bf50:	e9 51 01 00 00       	jmpq   ffff80000010c0a6 <copyuvm+0x181>$/;"	l
ffff80000010bf55	kernel.asm	/^ffff80000010bf55:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)$/;"	l
ffff80000010bf5c	kernel.asm	/^ffff80000010bf5c:	00 $/;"	l
ffff80000010bf5d	kernel.asm	/^ffff80000010bf5d:	e9 15 01 00 00       	jmpq   ffff80000010c077 <copyuvm+0x152>$/;"	l
ffff80000010bf62	kernel.asm	/^ffff80000010bf62:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx$/;"	l
ffff80000010bf66	kernel.asm	/^ffff80000010bf66:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
ffff80000010bf6a	kernel.asm	/^ffff80000010bf6a:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
ffff80000010bf6f	kernel.asm	/^ffff80000010bf6f:	48 89 ce             	mov    %rcx,%rsi$/;"	l
ffff80000010bf72	kernel.asm	/^ffff80000010bf72:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010bf75	kernel.asm	/^ffff80000010bf75:	48 b8 41 b5 10 00 00 	movabs $0xffff80000010b541,%rax$/;"	l
ffff80000010bf7c	kernel.asm	/^ffff80000010bf7c:	80 ff ff $/;"	l
ffff80000010bf7f	kernel.asm	/^ffff80000010bf7f:	ff d0                	callq  *%rax$/;"	l
ffff80000010bf81	kernel.asm	/^ffff80000010bf81:	48 89 45 e8          	mov    %rax,-0x18(%rbp)$/;"	l
ffff80000010bf85	kernel.asm	/^ffff80000010bf85:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)$/;"	l
ffff80000010bf8a	kernel.asm	/^ffff80000010bf8a:	75 16                	jne    ffff80000010bfa2 <copyuvm+0x7d>$/;"	l
ffff80000010bf8c	kernel.asm	/^ffff80000010bf8c:	48 bf ae c9 10 00 00 	movabs $0xffff80000010c9ae,%rdi$/;"	l
ffff80000010bf93	kernel.asm	/^ffff80000010bf93:	80 ff ff $/;"	l
ffff80000010bf96	kernel.asm	/^ffff80000010bf96:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff80000010bf9d	kernel.asm	/^ffff80000010bf9d:	80 ff ff $/;"	l
ffff80000010bfa0	kernel.asm	/^ffff80000010bfa0:	ff d0                	callq  *%rax$/;"	l
ffff80000010bfa2	kernel.asm	/^ffff80000010bfa2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010bfa6	kernel.asm	/^ffff80000010bfa6:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff80000010bfa9	kernel.asm	/^ffff80000010bfa9:	83 e0 01             	and    $0x1,%eax$/;"	l
ffff80000010bfac	kernel.asm	/^ffff80000010bfac:	48 85 c0             	test   %rax,%rax$/;"	l
ffff80000010bfaf	kernel.asm	/^ffff80000010bfaf:	75 16                	jne    ffff80000010bfc7 <copyuvm+0xa2>$/;"	l
ffff80000010bfb1	kernel.asm	/^ffff80000010bfb1:	48 bf c8 c9 10 00 00 	movabs $0xffff80000010c9c8,%rdi$/;"	l
ffff80000010bfb8	kernel.asm	/^ffff80000010bfb8:	80 ff ff $/;"	l
ffff80000010bfbb	kernel.asm	/^ffff80000010bfbb:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff80000010bfc2	kernel.asm	/^ffff80000010bfc2:	80 ff ff $/;"	l
ffff80000010bfc5	kernel.asm	/^ffff80000010bfc5:	ff d0                	callq  *%rax$/;"	l
ffff80000010bfc7	kernel.asm	/^ffff80000010bfc7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010bfcb	kernel.asm	/^ffff80000010bfcb:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff80000010bfce	kernel.asm	/^ffff80000010bfce:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax$/;"	l
ffff80000010bfd4	kernel.asm	/^ffff80000010bfd4:	48 89 45 e0          	mov    %rax,-0x20(%rbp)$/;"	l
ffff80000010bfd8	kernel.asm	/^ffff80000010bfd8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010bfdc	kernel.asm	/^ffff80000010bfdc:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff80000010bfdf	kernel.asm	/^ffff80000010bfdf:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
ffff80000010bfe4	kernel.asm	/^ffff80000010bfe4:	48 89 45 d8          	mov    %rax,-0x28(%rbp)$/;"	l
ffff80000010bfe8	kernel.asm	/^ffff80000010bfe8:	48 b8 95 41 10 00 00 	movabs $0xffff800000104195,%rax$/;"	l
ffff80000010bfef	kernel.asm	/^ffff80000010bfef:	80 ff ff $/;"	l
ffff80000010bff2	kernel.asm	/^ffff80000010bff2:	ff d0                	callq  *%rax$/;"	l
ffff80000010bff4	kernel.asm	/^ffff80000010bff4:	48 89 45 d0          	mov    %rax,-0x30(%rbp)$/;"	l
ffff80000010bff8	kernel.asm	/^ffff80000010bff8:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)$/;"	l
ffff80000010bffd	kernel.asm	/^ffff80000010bffd:	0f 84 87 00 00 00    	je     ffff80000010c08a <copyuvm+0x165>$/;"	l
ffff80000010c003	kernel.asm	/^ffff80000010c003:	48 ba 00 00 00 00 00 	movabs $0xffff800000000000,%rdx$/;"	l
ffff80000010c00a	kernel.asm	/^ffff80000010c00a:	80 ff ff $/;"	l
ffff80000010c00d	kernel.asm	/^ffff80000010c00d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff80000010c011	kernel.asm	/^ffff80000010c011:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff80000010c014	kernel.asm	/^ffff80000010c014:	48 89 c1             	mov    %rax,%rcx$/;"	l
ffff80000010c017	kernel.asm	/^ffff80000010c017:	48 8b 45 d0          	mov    -0x30(%rbp),%rax$/;"	l
ffff80000010c01b	kernel.asm	/^ffff80000010c01b:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
ffff80000010c020	kernel.asm	/^ffff80000010c020:	48 89 ce             	mov    %rcx,%rsi$/;"	l
ffff80000010c023	kernel.asm	/^ffff80000010c023:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010c026	kernel.asm	/^ffff80000010c026:	48 b8 9a 7d 10 00 00 	movabs $0xffff800000107d9a,%rax$/;"	l
ffff80000010c02d	kernel.asm	/^ffff80000010c02d:	80 ff ff $/;"	l
ffff80000010c030	kernel.asm	/^ffff80000010c030:	ff d0                	callq  *%rax$/;"	l
ffff80000010c032	kernel.asm	/^ffff80000010c032:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff80000010c036	kernel.asm	/^ffff80000010c036:	89 c1                	mov    %eax,%ecx$/;"	l
ffff80000010c038	kernel.asm	/^ffff80000010c038:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx$/;"	l
ffff80000010c03c	kernel.asm	/^ffff80000010c03c:	48 b8 00 00 00 00 00 	movabs $0x800000000000,%rax$/;"	l
ffff80000010c043	kernel.asm	/^ffff80000010c043:	80 00 00 $/;"	l
ffff80000010c046	kernel.asm	/^ffff80000010c046:	48 01 c2             	add    %rax,%rdx$/;"	l
ffff80000010c049	kernel.asm	/^ffff80000010c049:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi$/;"	l
ffff80000010c04d	kernel.asm	/^ffff80000010c04d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff80000010c051	kernel.asm	/^ffff80000010c051:	41 89 c8             	mov    %ecx,%r8d$/;"	l
ffff80000010c054	kernel.asm	/^ffff80000010c054:	48 89 d1             	mov    %rdx,%rcx$/;"	l
ffff80000010c057	kernel.asm	/^ffff80000010c057:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
ffff80000010c05c	kernel.asm	/^ffff80000010c05c:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010c05f	kernel.asm	/^ffff80000010c05f:	48 b8 8e b7 10 00 00 	movabs $0xffff80000010b78e,%rax$/;"	l
ffff80000010c066	kernel.asm	/^ffff80000010c066:	80 ff ff $/;"	l
ffff80000010c069	kernel.asm	/^ffff80000010c069:	ff d0                	callq  *%rax$/;"	l
ffff80000010c06b	kernel.asm	/^ffff80000010c06b:	85 c0                	test   %eax,%eax$/;"	l
ffff80000010c06d	kernel.asm	/^ffff80000010c06d:	78 1e                	js     ffff80000010c08d <copyuvm+0x168>$/;"	l
ffff80000010c06f	kernel.asm	/^ffff80000010c06f:	48 81 45 f8 00 10 00 	addq   $0x1000,-0x8(%rbp)$/;"	l
ffff80000010c076	kernel.asm	/^ffff80000010c076:	00 $/;"	l
ffff80000010c077	kernel.asm	/^ffff80000010c077:	8b 45 c4             	mov    -0x3c(%rbp),%eax$/;"	l
ffff80000010c07a	kernel.asm	/^ffff80000010c07a:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax$/;"	l
ffff80000010c07e	kernel.asm	/^ffff80000010c07e:	0f 87 de fe ff ff    	ja     ffff80000010bf62 <copyuvm+0x3d>$/;"	l
ffff80000010c084	kernel.asm	/^ffff80000010c084:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff80000010c088	kernel.asm	/^ffff80000010c088:	eb 1c                	jmp    ffff80000010c0a6 <copyuvm+0x181>$/;"	l
ffff80000010c08a	kernel.asm	/^ffff80000010c08a:	90                   	nop$/;"	l
ffff80000010c08b	kernel.asm	/^ffff80000010c08b:	eb 01                	jmp    ffff80000010c08e <copyuvm+0x169>$/;"	l
ffff80000010c08d	kernel.asm	/^ffff80000010c08d:	90                   	nop$/;"	l
ffff80000010c08e	kernel.asm	/^ffff80000010c08e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff80000010c092	kernel.asm	/^ffff80000010c092:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010c095	kernel.asm	/^ffff80000010c095:	48 b8 89 bc 10 00 00 	movabs $0xffff80000010bc89,%rax$/;"	l
ffff80000010c09c	kernel.asm	/^ffff80000010c09c:	80 ff ff $/;"	l
ffff80000010c09f	kernel.asm	/^ffff80000010c09f:	ff d0                	callq  *%rax$/;"	l
ffff80000010c0a1	kernel.asm	/^ffff80000010c0a1:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff80000010c0a6	kernel.asm	/^ffff80000010c0a6:	c9                   	leaveq $/;"	l
ffff80000010c0a7	kernel.asm	/^ffff80000010c0a7:	c3                   	retq   $/;"	l
ffff80000010c0a8	kernel.asm	/^ffff80000010c0a8 <uva2ka>:$/;"	l
ffff80000010c0a8	kernel.asm	/^ffff80000010c0a8:	55                   	push   %rbp$/;"	l
ffff80000010c0a9	kernel.asm	/^ffff80000010c0a9:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010c0ac	kernel.asm	/^ffff80000010c0ac:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ffff80000010c0b0	kernel.asm	/^ffff80000010c0b0:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
ffff80000010c0b4	kernel.asm	/^ffff80000010c0b4:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)$/;"	l
ffff80000010c0b8	kernel.asm	/^ffff80000010c0b8:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx$/;"	l
ffff80000010c0bc	kernel.asm	/^ffff80000010c0bc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010c0c0	kernel.asm	/^ffff80000010c0c0:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
ffff80000010c0c5	kernel.asm	/^ffff80000010c0c5:	48 89 ce             	mov    %rcx,%rsi$/;"	l
ffff80000010c0c8	kernel.asm	/^ffff80000010c0c8:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010c0cb	kernel.asm	/^ffff80000010c0cb:	48 b8 41 b5 10 00 00 	movabs $0xffff80000010b541,%rax$/;"	l
ffff80000010c0d2	kernel.asm	/^ffff80000010c0d2:	80 ff ff $/;"	l
ffff80000010c0d5	kernel.asm	/^ffff80000010c0d5:	ff d0                	callq  *%rax$/;"	l
ffff80000010c0d7	kernel.asm	/^ffff80000010c0d7:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff80000010c0db	kernel.asm	/^ffff80000010c0db:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010c0df	kernel.asm	/^ffff80000010c0df:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff80000010c0e2	kernel.asm	/^ffff80000010c0e2:	83 e0 01             	and    $0x1,%eax$/;"	l
ffff80000010c0e5	kernel.asm	/^ffff80000010c0e5:	48 85 c0             	test   %rax,%rax$/;"	l
ffff80000010c0e8	kernel.asm	/^ffff80000010c0e8:	75 07                	jne    ffff80000010c0f1 <uva2ka+0x49>$/;"	l
ffff80000010c0ea	kernel.asm	/^ffff80000010c0ea:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff80000010c0ef	kernel.asm	/^ffff80000010c0ef:	eb 33                	jmp    ffff80000010c124 <uva2ka+0x7c>$/;"	l
ffff80000010c0f1	kernel.asm	/^ffff80000010c0f1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010c0f5	kernel.asm	/^ffff80000010c0f5:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff80000010c0f8	kernel.asm	/^ffff80000010c0f8:	83 e0 04             	and    $0x4,%eax$/;"	l
ffff80000010c0fb	kernel.asm	/^ffff80000010c0fb:	48 85 c0             	test   %rax,%rax$/;"	l
ffff80000010c0fe	kernel.asm	/^ffff80000010c0fe:	75 07                	jne    ffff80000010c107 <uva2ka+0x5f>$/;"	l
ffff80000010c100	kernel.asm	/^ffff80000010c100:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff80000010c105	kernel.asm	/^ffff80000010c105:	eb 1d                	jmp    ffff80000010c124 <uva2ka+0x7c>$/;"	l
ffff80000010c107	kernel.asm	/^ffff80000010c107:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010c10b	kernel.asm	/^ffff80000010c10b:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff80000010c10e	kernel.asm	/^ffff80000010c10e:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax$/;"	l
ffff80000010c114	kernel.asm	/^ffff80000010c114:	48 89 c2             	mov    %rax,%rdx$/;"	l
ffff80000010c117	kernel.asm	/^ffff80000010c117:	48 b8 00 00 00 00 00 	movabs $0xffff800000000000,%rax$/;"	l
ffff80000010c11e	kernel.asm	/^ffff80000010c11e:	80 ff ff $/;"	l
ffff80000010c121	kernel.asm	/^ffff80000010c121:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff80000010c124	kernel.asm	/^ffff80000010c124:	c9                   	leaveq $/;"	l
ffff80000010c125	kernel.asm	/^ffff80000010c125:	c3                   	retq   $/;"	l
ffff80000010c126	kernel.asm	/^ffff80000010c126 <copyout>:$/;"	l
ffff80000010c126	kernel.asm	/^ffff80000010c126:	55                   	push   %rbp$/;"	l
ffff80000010c127	kernel.asm	/^ffff80000010c127:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010c12a	kernel.asm	/^ffff80000010c12a:	48 83 ec 40          	sub    $0x40,%rsp$/;"	l
ffff80000010c12e	kernel.asm	/^ffff80000010c12e:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)$/;"	l
ffff80000010c132	kernel.asm	/^ffff80000010c132:	89 75 d4             	mov    %esi,-0x2c(%rbp)$/;"	l
ffff80000010c135	kernel.asm	/^ffff80000010c135:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)$/;"	l
ffff80000010c139	kernel.asm	/^ffff80000010c139:	89 4d d0             	mov    %ecx,-0x30(%rbp)$/;"	l
ffff80000010c13c	kernel.asm	/^ffff80000010c13c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
ffff80000010c140	kernel.asm	/^ffff80000010c140:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff80000010c144	kernel.asm	/^ffff80000010c144:	e9 ad 00 00 00       	jmpq   ffff80000010c1f6 <copyout+0xd0>$/;"	l
ffff80000010c149	kernel.asm	/^ffff80000010c149:	8b 45 d4             	mov    -0x2c(%rbp),%eax$/;"	l
ffff80000010c14c	kernel.asm	/^ffff80000010c14c:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
ffff80000010c151	kernel.asm	/^ffff80000010c151:	48 89 45 e8          	mov    %rax,-0x18(%rbp)$/;"	l
ffff80000010c155	kernel.asm	/^ffff80000010c155:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx$/;"	l
ffff80000010c159	kernel.asm	/^ffff80000010c159:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff80000010c15d	kernel.asm	/^ffff80000010c15d:	48 89 d6             	mov    %rdx,%rsi$/;"	l
ffff80000010c160	kernel.asm	/^ffff80000010c160:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010c163	kernel.asm	/^ffff80000010c163:	48 b8 a8 c0 10 00 00 	movabs $0xffff80000010c0a8,%rax$/;"	l
ffff80000010c16a	kernel.asm	/^ffff80000010c16a:	80 ff ff $/;"	l
ffff80000010c16d	kernel.asm	/^ffff80000010c16d:	ff d0                	callq  *%rax$/;"	l
ffff80000010c16f	kernel.asm	/^ffff80000010c16f:	48 89 45 e0          	mov    %rax,-0x20(%rbp)$/;"	l
ffff80000010c173	kernel.asm	/^ffff80000010c173:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)$/;"	l
ffff80000010c178	kernel.asm	/^ffff80000010c178:	75 0a                	jne    ffff80000010c184 <copyout+0x5e>$/;"	l
ffff80000010c17a	kernel.asm	/^ffff80000010c17a:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff80000010c17f	kernel.asm	/^ffff80000010c17f:	e9 81 00 00 00       	jmpq   ffff80000010c205 <copyout+0xdf>$/;"	l
ffff80000010c184	kernel.asm	/^ffff80000010c184:	8b 45 d4             	mov    -0x2c(%rbp),%eax$/;"	l
ffff80000010c187	kernel.asm	/^ffff80000010c187:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx$/;"	l
ffff80000010c18b	kernel.asm	/^ffff80000010c18b:	48 29 c2             	sub    %rax,%rdx$/;"	l
ffff80000010c18e	kernel.asm	/^ffff80000010c18e:	48 89 d0             	mov    %rdx,%rax$/;"	l
ffff80000010c191	kernel.asm	/^ffff80000010c191:	48 05 00 10 00 00    	add    $0x1000,%rax$/;"	l
ffff80000010c197	kernel.asm	/^ffff80000010c197:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ffff80000010c19b	kernel.asm	/^ffff80000010c19b:	8b 45 d0             	mov    -0x30(%rbp),%eax$/;"	l
ffff80000010c19e	kernel.asm	/^ffff80000010c19e:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax$/;"	l
ffff80000010c1a2	kernel.asm	/^ffff80000010c1a2:	73 07                	jae    ffff80000010c1ab <copyout+0x85>$/;"	l
ffff80000010c1a4	kernel.asm	/^ffff80000010c1a4:	8b 45 d0             	mov    -0x30(%rbp),%eax$/;"	l
ffff80000010c1a7	kernel.asm	/^ffff80000010c1a7:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ffff80000010c1ab	kernel.asm	/^ffff80000010c1ab:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff80000010c1af	kernel.asm	/^ffff80000010c1af:	89 c6                	mov    %eax,%esi$/;"	l
ffff80000010c1b1	kernel.asm	/^ffff80000010c1b1:	8b 45 d4             	mov    -0x2c(%rbp),%eax$/;"	l
ffff80000010c1b4	kernel.asm	/^ffff80000010c1b4:	48 2b 45 e8          	sub    -0x18(%rbp),%rax$/;"	l
ffff80000010c1b8	kernel.asm	/^ffff80000010c1b8:	48 89 c2             	mov    %rax,%rdx$/;"	l
ffff80000010c1bb	kernel.asm	/^ffff80000010c1bb:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff80000010c1bf	kernel.asm	/^ffff80000010c1bf:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx$/;"	l
ffff80000010c1c3	kernel.asm	/^ffff80000010c1c3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010c1c7	kernel.asm	/^ffff80000010c1c7:	89 f2                	mov    %esi,%edx$/;"	l
ffff80000010c1c9	kernel.asm	/^ffff80000010c1c9:	48 89 c6             	mov    %rax,%rsi$/;"	l
ffff80000010c1cc	kernel.asm	/^ffff80000010c1cc:	48 89 cf             	mov    %rcx,%rdi$/;"	l
ffff80000010c1cf	kernel.asm	/^ffff80000010c1cf:	48 b8 9a 7d 10 00 00 	movabs $0xffff800000107d9a,%rax$/;"	l
ffff80000010c1d6	kernel.asm	/^ffff80000010c1d6:	80 ff ff $/;"	l
ffff80000010c1d9	kernel.asm	/^ffff80000010c1d9:	ff d0                	callq  *%rax$/;"	l
ffff80000010c1db	kernel.asm	/^ffff80000010c1db:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff80000010c1df	kernel.asm	/^ffff80000010c1df:	29 45 d0             	sub    %eax,-0x30(%rbp)$/;"	l
ffff80000010c1e2	kernel.asm	/^ffff80000010c1e2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff80000010c1e6	kernel.asm	/^ffff80000010c1e6:	48 01 45 f8          	add    %rax,-0x8(%rbp)$/;"	l
ffff80000010c1ea	kernel.asm	/^ffff80000010c1ea:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010c1ee	kernel.asm	/^ffff80000010c1ee:	05 00 10 00 00       	add    $0x1000,%eax$/;"	l
ffff80000010c1f3	kernel.asm	/^ffff80000010c1f3:	89 45 d4             	mov    %eax,-0x2c(%rbp)$/;"	l
ffff80000010c1f6	kernel.asm	/^ffff80000010c1f6:	83 7d d0 00          	cmpl   $0x0,-0x30(%rbp)$/;"	l
ffff80000010c1fa	kernel.asm	/^ffff80000010c1fa:	0f 85 49 ff ff ff    	jne    ffff80000010c149 <copyout+0x23>$/;"	l
ffff80000010c200	kernel.asm	/^ffff80000010c200:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff80000010c205	kernel.asm	/^ffff80000010c205:	c9                   	leaveq $/;"	l
ffff80000010c206	kernel.asm	/^ffff80000010c206:	c3                   	retq   $/;"	l
file	file.c	/^  struct file file[NFILE];$/;"	m	struct:__anon5	typeref:struct:__anon5::file	file:
file	file.h	/^struct file {$/;"	s
file	sh.c	/^  char *file;$/;"	m	struct:redircmd	file:
filealloc	file.c	/^filealloc(void)$/;"	f
fileclose	file.c	/^fileclose(struct file *f)$/;"	f
filedup	file.c	/^filedup(struct file *f)$/;"	f
fileinit	file.c	/^fileinit(void)$/;"	f
fileread	file.c	/^fileread(struct file *f, char *addr, int n)$/;"	f
filestat	file.c	/^filestat(struct file *f, struct stat *st)$/;"	f
filesz	elf.h	/^  uint64 filesz;$/;"	m	struct:proghdr
filewrite	file.c	/^filewrite(struct file *f, char *addr, int n)$/;"	f
fill_rtcdate	lapic.c	/^static void fill_rtcdate(struct rtcdate *r)$/;"	f	file:
first	kernel.asm	/^    first = 0;$/;"	d
flags	bootmain.c	/^  uint64 flags;$/;"	m	struct:mbheader	file:
flags	buf.h	/^  int flags;$/;"	m	struct:buf
flags	elf.h	/^  uint flags;$/;"	m	struct:elfhdr
flags	elf.h	/^  uint32 flags;$/;"	m	struct:proghdr
flags	file.h	/^  int flags;          \/\/ I_VALID$/;"	m	struct:inode
flags	kernel.asm	/^    flags = PTE_FLAGS(*pte);$/;"	d
flags	mp.h	/^  uchar flags;                  \/\/ CPU flags$/;"	m	struct:mpproc
flags	mp.h	/^  uchar flags;                  \/\/ I\/O APIC flags$/;"	m	struct:mpioapic
fmtname	ls.c	/^fmtname(char *path)$/;"	f
fname	usertests.asm	/^    fname = names[i];$/;"	d
fname	usertests.asm	/^    fname = names[pi];$/;"	d
fork	proc.c	/^fork(void)$/;"	f
fork1	sh.c	/^fork1(void)$/;"	f
forkret	proc.c	/^forkret(void)$/;"	f
forktest	forktest.c	/^forktest(void)$/;"	f
forktest	usertests.c	/^forktest(void)$/;"	f
found	kernel.asm	/^found:$/;"	l
fourfiles	usertests.c	/^fourfiles(void)$/;"	f
fourteen	usertests.c	/^fourteen(void)$/;"	f
free	umalloc.c	/^free(void *ap)$/;"	f
freeblock	mkfs.c	/^uint freeblock;$/;"	v
freeinode	mkfs.c	/^uint freeinode = 1;$/;"	v
freelist	kalloc.c	/^  struct run *freelist;$/;"	m	struct:__anon6	typeref:struct:__anon6::run	file:
freep	cat.asm	/^      freep = prevp;$/;"	d
freep	cat.asm	/^  freep = p;$/;"	d
freep	echo.asm	/^      freep = prevp;$/;"	d
freep	echo.asm	/^  freep = p;$/;"	d
freep	grep.asm	/^      freep = prevp;$/;"	d
freep	grep.asm	/^  freep = p;$/;"	d
freep	init.asm	/^      freep = prevp;$/;"	d
freep	init.asm	/^  freep = p;$/;"	d
freep	kill.asm	/^      freep = prevp;$/;"	d
freep	kill.asm	/^  freep = p;$/;"	d
freep	ln.asm	/^      freep = prevp;$/;"	d
freep	ln.asm	/^  freep = p;$/;"	d
freep	ls.asm	/^      freep = prevp;$/;"	d
freep	ls.asm	/^  freep = p;$/;"	d
freep	mkdir.asm	/^      freep = prevp;$/;"	d
freep	mkdir.asm	/^  freep = p;$/;"	d
freep	mount.asm	/^      freep = prevp;$/;"	d
freep	mount.asm	/^  freep = p;$/;"	d
freep	rm.asm	/^      freep = prevp;$/;"	d
freep	rm.asm	/^  freep = p;$/;"	d
freep	sh.asm	/^      freep = prevp;$/;"	d
freep	sh.asm	/^  freep = p;$/;"	d
freep	stressfs.asm	/^      freep = prevp;$/;"	d
freep	stressfs.asm	/^  freep = p;$/;"	d
freep	umalloc.c	/^static Header *freep;$/;"	v	file:
freep	usertests.asm	/^      freep = prevp;$/;"	d
freep	usertests.asm	/^  freep = p;$/;"	d
freep	wc.asm	/^      freep = prevp;$/;"	d
freep	wc.asm	/^  freep = p;$/;"	d
freep	zombie.asm	/^      freep = prevp;$/;"	d
freep	zombie.asm	/^  freep = p;$/;"	d
freerange	kalloc.c	/^freerange(void *vstart, void *vend)$/;"	f
freevm	vm.c	/^freevm(pde_t *pml4)$/;"	f
fs	mmu.h	/^  ushort fs;$/;"	m	struct:taskstate
fs_i_func	fs.c	/^struct inode_functions fs_i_func = { fs_ipopulate, fs_iupdate, fs_readi, fs_writei };      $/;"	v	typeref:struct:inode_functions
fs_ipopulate	fs.c	/^fs_ipopulate(struct inode* ip) {$/;"	f
fs_iupdate	fs.c	/^fs_iupdate(struct inode *ip)$/;"	f
fs_readi	fs.c	/^fs_readi(struct inode *ip, char *dst, uint off, uint n)$/;"	f
fs_writei	fs.c	/^fs_writei(struct inode *ip, char *src, uint off, uint n)$/;"	f
fsfd	mkfs.c	/^int fsfd;$/;"	v
fsfull	usertests.c	/^fsfull()$/;"	f
ftable	file.c	/^} ftable;$/;"	v	typeref:struct:__anon5
g	mmu.h	/^  uint g : 1;          \/\/ Granularity: limit scaled by 4K when set$/;"	m	struct:segdesc
gatedesc	mmu.h	/^struct gatedesc {$/;"	s
gdt	bootasm.S	/^gdt:$/;"	l
gdt	entryother.S	/^gdt:$/;"	l
gdt	kernel.asm	/^  gdt = (struct segdesc*) local;$/;"	d
gdt	proc.h	/^  struct segdesc gdt[NSEGS];   \/\/ x86 global descriptor table$/;"	m	struct:cpu	typeref:struct:cpu::segdesc
gdt64_begin	entry.S	/^gdt64_begin:$/;"	l
gdt64_end	entry.S	/^gdt64_end:$/;"	l
gdt64_end	kernel.asm	/^gdt64_end:$/;"	l
gdtdesc	bootasm.S	/^gdtdesc:$/;"	l
gdtdesc	entryother.S	/^gdtdesc:$/;"	l
gdtr64	entry.S	/^gdtr64:$/;"	l
getcallerpcs	spinlock.c	/^getcallerpcs(void *v, addr_t pcs[])$/;"	f
getcmd	sh.c	/^getcmd(char *buf, int nbuf)$/;"	f
gets	ulib.c	/^gets(char *buf, int max)$/;"	f
getstackpcs	spinlock.c	/^getstackpcs(addr_t *ebp, addr_t pcs[])$/;"	f
gettoken	sh.c	/^gettoken(char **ps, char *es, char **q, char **eq)$/;"	f
grep	grep.c	/^grep(char *pattern, int fd)$/;"	f
growproc	proc.c	/^growproc(int n)$/;"	f
gs	mmu.h	/^  ushort gs;$/;"	m	struct:taskstate
havedisk1	ide.c	/^static int havedisk1;$/;"	v	file:
havedisk1	kernel.asm	/^      havedisk1 = 1;$/;"	d
havekids	kernel.asm	/^      havekids = 1;$/;"	d
havekids	kernel.asm	/^    havekids = 0;$/;"	d
head	bio.c	/^  struct buf head;$/;"	m	struct:__anon4	typeref:struct:__anon4::buf	file:
header	umalloc.c	/^union header {$/;"	u	file:
header_addr	bootmain.c	/^  uint64 header_addr;$/;"	m	struct:mbheader	file:
hi	usertests.asm	/^  hi = 1100*1024;$/;"	d
hlt	x86.h	/^hlt(void)$/;"	f
holding	spinlock.c	/^holding(struct spinlock *lock)$/;"	f
holdingsleep	sleeplock.c	/^holdingsleep(struct sleeplock *lk)$/;"	f
hour	date.h	/^  uint hour;$/;"	m	struct:rtcdate
hp	cat.asm	/^  hp = (Header*)p;$/;"	d
hp	echo.asm	/^  hp = (Header*)p;$/;"	d
hp	grep.asm	/^  hp = (Header*)p;$/;"	d
hp	init.asm	/^  hp = (Header*)p;$/;"	d
hp	kill.asm	/^  hp = (Header*)p;$/;"	d
hp	ln.asm	/^  hp = (Header*)p;$/;"	d
hp	ls.asm	/^  hp = (Header*)p;$/;"	d
hp	mkdir.asm	/^  hp = (Header*)p;$/;"	d
hp	mount.asm	/^  hp = (Header*)p;$/;"	d
hp	rm.asm	/^  hp = (Header*)p;$/;"	d
hp	sh.asm	/^  hp = (Header*)p;$/;"	d
hp	stressfs.asm	/^  hp = (Header*)p;$/;"	d
hp	usertests.asm	/^  hp = (Header*)p;$/;"	d
hp	wc.asm	/^  hp = (Header*)p;$/;"	d
hp	zombie.asm	/^  hp = (Header*)p;$/;"	d
i	cat.asm	/^  i = 0;$/;"	d
i	echo.asm	/^  i = 0;$/;"	d
i	grep.asm	/^  i = 0;$/;"	d
i	init.asm	/^  i = 0;$/;"	d
i	kernel.asm	/^  i = 0;$/;"	d
i	kill.asm	/^  i = 0;$/;"	d
i	ln.asm	/^  i = 0;$/;"	d
i	ls.asm	/^  i = 0;$/;"	d
i	mkdir.asm	/^  i = 0;$/;"	d
i	mount.asm	/^  i = 0;$/;"	d
i	rm.asm	/^  i = 0;$/;"	d
i	sh.asm	/^  i = 0;$/;"	d
i	stressfs.asm	/^  i = 0;$/;"	d
i	usertests.asm	/^      i = de.name[1] - '0';$/;"	d
i	usertests.asm	/^    i = read(fd, buf, 512);$/;"	d
i	usertests.asm	/^  i = 0;$/;"	d
i	usertests.asm	/^  i = read(fd, buf, 2000);$/;"	d
i	wc.asm	/^  i = 0;$/;"	d
i	zombie.asm	/^  i = 0;$/;"	d
i_func	file.h	/^  struct inode_functions *i_func;$/;"	m	struct:inode	typeref:struct:inode::inode_functions
ialloc	fs.c	/^ialloc(uint dev, short type, struct inode* parent)$/;"	f
ialloc	mkfs.c	/^ialloc(ushort type)$/;"	f
iappend	mkfs.c	/^iappend(uint inum, void *xp, int n)$/;"	f
icache	fs.c	/^} icache;$/;"	v	typeref:struct:__anon2
id	kernel.asm	/^  id = ioapicread(REG_ID) >> 24;$/;"	d
id	proc.h	/^  uchar id;$/;"	m	struct:cpu
ideinit	ide.c	/^ideinit(void)$/;"	f
ideinit	memide.c	/^ideinit(void)$/;"	f
ideintr	ide.c	/^ideintr(void)$/;"	f
ideintr	memide.c	/^ideintr(void)$/;"	f
idelock	ide.c	/^static struct spinlock idelock;$/;"	v	typeref:struct:spinlock	file:
idequeue	ide.c	/^static struct buf *idequeue;$/;"	v	typeref:struct:buf	file:
idequeue	kernel.asm	/^  idequeue = b->qnext;$/;"	d
iderw	ide.c	/^iderw(struct buf *b)$/;"	f
iderw	memide.c	/^iderw(struct buf *b)$/;"	f
idestart	ide.c	/^idestart(struct buf *b)$/;"	f	file:
idewait	ide.c	/^idewait(int checkerr)$/;"	f	file:
idt	kernel.asm	/^  idt = (uint*) kalloc();$/;"	d
idt	trap.c	/^uint *idt;$/;"	v
idtinit	trap.c	/^void idtinit(void) {$/;"	f
idup	fs.c	/^idup(struct inode *ip)$/;"	f
iget	fs.c	/^iget(uint dev, uint inum, struct inode* parent)$/;"	f	file:
ignore_sysret	entry.S	/^ignore_sysret:$/;"	l
ignore_sysret	kernel.asm	/^ignore_sysret:$/;"	l
iinit	fs.c	/^iinit(int dev)$/;"	f
ilock	fs.c	/^ilock(struct inode *ip)$/;"	f
imcrp	mp.h	/^  uchar imcrp;$/;"	m	struct:mp
inb	x86.h	/^inb(ushort port)$/;"	f
init	initcode.S	/^init:$/;"	l
initlock	spinlock.c	/^initlock(struct spinlock *lk, char *name)$/;"	f
initlog	log.c	/^initlog(int dev)$/;"	f
initproc	kernel.asm	/^  initproc = p;$/;"	d
initproc	proc.c	/^static struct proc *initproc;$/;"	v	typeref:struct:proc	file:
initsleeplock	sleeplock.c	/^initsleeplock(struct sleeplock *lk, char *name)$/;"	f
inituvm	vm.c	/^inituvm(pde_t *pgdir, char *init, uint sz)$/;"	f
ino	stat.h	/^  uint ino;    \/\/ Inode number$/;"	m	struct:stat
inode	file.h	/^struct inode {$/;"	s
inode	fs.c	/^  struct inode inode[NINODE];$/;"	m	struct:__anon2	typeref:struct:__anon2::inode	file:
inode_functions	file.h	/^struct inode_functions {$/;"	s
inodestart	fs.h	/^  uint inodestart;   \/\/ Block number of first inode block$/;"	m	struct:superblock
input	console.c	/^} input;$/;"	v	typeref:struct:__anon8
insl	x86.h	/^insl(int port, void *addr, int cnt)$/;"	f
install_trans	log.c	/^install_trans(void)$/;"	f	file:
int	cat.asm	/^int$/;"	l
int	echo.asm	/^int$/;"	l
int	forktest.asm	/^int$/;"	l
int	grep.asm	/^int match(char*, char*);$/;"	l
int	grep.asm	/^int matchhere(char *re, char *text)$/;"	l
int	grep.asm	/^int matchhere(char*, char*);$/;"	l
int	grep.asm	/^int matchstar(int c, char *re, char *text)$/;"	l
int	grep.asm	/^int matchstar(int, char*, char*);$/;"	l
int	grep.asm	/^int$/;"	l
int	init.asm	/^int$/;"	l
int	kernel.asm	/^int ncpu;$/;"	l
int	kernel.asm	/^int$/;"	l
int	kill.asm	/^int$/;"	l
int	ln.asm	/^int$/;"	l
int	ls.asm	/^int$/;"	l
int	mkdir.asm	/^int$/;"	l
int	mount.asm	/^int main(int argc, char** argv) {$/;"	l
int	mount.asm	/^int$/;"	l
int	rm.asm	/^int$/;"	l
int	sh.asm	/^int$/;"	l
int	stressfs.asm	/^int$/;"	l
int	usertests.asm	/^int stdout = 1;$/;"	l
int	usertests.asm	/^int$/;"	l
int	wc.asm	/^int$/;"	l
int	zombie.asm	/^int$/;"	l
intena	kernel.asm	/^  intena = cpu->intena;$/;"	d
intena	proc.h	/^  int intena;                  \/\/ Were interrupts enabled before pushcli?$/;"	m	struct:cpu
inum	file.h	/^  uint inum;          \/\/ Inode number$/;"	m	struct:inode
inum	fs.h	/^  ushort inum;$/;"	m	struct:dirent
inum	kernel.asm	/^      inum = de.inum;$/;"	d
inword	wc.asm	/^        inword = 0;$/;"	d
inword	wc.asm	/^        inword = 1;$/;"	d
inword	wc.asm	/^  inword = 0;$/;"	d
ioapic	ioapic.c	/^struct ioapic {$/;"	s	file:
ioapic	ioapic.c	/^volatile struct ioapic *ioapic;$/;"	v	typeref:struct:ioapic
ioapic	kernel.asm	/^      ioapic = (struct mpioapic*)p;$/;"	d
ioapic	kernel.asm	/^  ioapic = P2V((volatile struct ioapic*)IOAPIC);$/;"	d
ioapicenable	ioapic.c	/^ioapicenable(int irq, int cpunum)$/;"	f
ioapicid	kernel.asm	/^      ioapicid = ioapic->apicno;$/;"	d
ioapicid	mp.c	/^uchar ioapicid;$/;"	v
ioapicinit	ioapic.c	/^ioapicinit(void)$/;"	f
ioapicread	ioapic.c	/^ioapicread(int reg)$/;"	f	file:
ioapicwrite	ioapic.c	/^ioapicwrite(int reg, uint data)$/;"	f	file:
iomb	mmu.h	/^  ushort iomb;       \/\/ I\/O map base address$/;"	m	struct:taskstate
ip	file.h	/^  struct inode *ip;$/;"	m	struct:file	typeref:struct:file::inode
ip	kernel.asm	/^    ip = create(path, T_FILE, 0, 0);$/;"	d
ip	kernel.asm	/^    ip = idup(proc->cwd);$/;"	d
ip	kernel.asm	/^    ip = iget(ROOTDEV, ROOTINO, 0);$/;"	d
ip	kernel.asm	/^    ip = next;$/;"	d
ip	kernel.asm	/^  ip = 0;$/;"	d
ip	kernel.asm	/^  ip = empty;$/;"	d
ipopulate	file.h	/^  void (*ipopulate)(struct inode*);                   \/\/ fill in inode details$/;"	m	struct:inode_functions
iput	fs.c	/^iput(struct inode *ip)$/;"	f
iputtest	usertests.c	/^iputtest(void)$/;"	f
iref	usertests.c	/^iref(void)$/;"	f
isdirempty	sysfile.c	/^isdirempty(struct inode *dp)$/;"	f	file:
itrunc	fs.c	/^itrunc(struct inode *ip)$/;"	f	file:
iunlock	fs.c	/^iunlock(struct inode *ip)$/;"	f
iunlockput	fs.c	/^iunlockput(struct inode *ip)$/;"	f
iupdate	file.h	/^  void (*iupdate)(struct inode*);                     \/\/ write inode details back to disk$/;"	m	struct:inode_functions
kalloc	kalloc.c	/^kalloc(void)$/;"	f
kbdgetc	kbd.c	/^kbdgetc(void)$/;"	f
kbdintr	kbd.c	/^kbdintr(void)$/;"	f
kernel	kernel.asm	/^kernel:     file format elf64-x86-64$/;"	l
kfree	kalloc.c	/^kfree(char *v)$/;"	f
kill	proc.c	/^kill(int pid)$/;"	f
killed	proc.h	/^  int killed;                  \/\/ If non-zero, have been killed$/;"	m	struct:proc
kinit1	kalloc.c	/^kinit1(void *vstart, void *vend)$/;"	f
kinit2	kalloc.c	/^kinit2(void *vstart, void *vend)$/;"	f
kmem	kalloc.c	/^} kmem;$/;"	v	typeref:struct:__anon6
kmemfreecount	kalloc.c	/^kmemfreecount()$/;"	f
kpdpt	kernel.asm	/^  kpdpt = (pde_t*) kalloc();$/;"	d
kpdpt	vm.c	/^static pde_t *kpdpt;$/;"	v	file:
kpgdir	vm.c	/^pde_t *kpgdir;  \/\/ for use in scheduler()$/;"	v
kpml4	kernel.asm	/^  kpml4 = (pde_t*) kalloc();$/;"	d
kpml4	vm.c	/^static pde_t *kpml4;$/;"	v	file:
kstack	proc.h	/^  char *kstack;                \/\/ Bottom of kernel stack for this process$/;"	m	struct:proc
kvmalloc	vm.c	/^kvmalloc(void)$/;"	f
l	wc.asm	/^  l = w = c = 0;$/;"	d
lapic	kernel.asm	/^  lapic = P2V((addr_t)conf->lapicaddr_p);$/;"	d
lapic	lapic.c	/^volatile uint *lapic;  \/\/ Initialized in mp.c$/;"	v
lapicaddr_p	mp.h	/^  uint32 lapicaddr_p;              \/\/ address of local APIC$/;"	m	struct:mpconf
lapiceoi	lapic.c	/^lapiceoi(void)$/;"	f
lapicinit	lapic.c	/^lapicinit(void)$/;"	f
lapicstartap	lapic.c	/^lapicstartap(uchar apicid, uint addr)$/;"	f
lapicw	lapic.c	/^lapicw(int index, int value)$/;"	f	file:
last	kernel.asm	/^      last = s+1;$/;"	d
last	kernel.asm	/^  last = (char*)PGROUNDDOWN(((addr_t)va) + size - 1);$/;"	d
lastaddr	usertests.asm	/^  lastaddr = (char*) (BIG-1);$/;"	d
lcmd	sh.asm	/^    lcmd = (struct listcmd*)cmd;$/;"	d
lcr3	x86.h	/^lcr3(addr_t val)$/;"	f
ldt	mmu.h	/^  ushort ldt;$/;"	m	struct:taskstate
left	sh.c	/^  struct cmd *left;$/;"	m	struct:listcmd	typeref:struct:listcmd::cmd	file:
left	sh.c	/^  struct cmd *left;$/;"	m	struct:pipecmd	typeref:struct:pipecmd::cmd	file:
len	kernel.asm	/^  len = path - s;$/;"	d
length	mp.h	/^  uchar length;                 \/\/ 1$/;"	m	struct:mp
length	mp.h	/^  ushort length;                \/\/ total table length$/;"	m	struct:mpconf
lgdt	x86.h	/^lgdt(struct segdesc *p, int size)$/;"	f
lh	log.c	/^  struct logheader lh;$/;"	m	struct:log	typeref:struct:log::logheader	file:
lidt	x86.h	/^lidt(struct gatedesc *p, int size)$/;"	f
lim_15_0	mmu.h	/^  uint lim_15_0 : 16;  \/\/ Low bits of segment limit$/;"	m	struct:segdesc
lim_19_16	mmu.h	/^  uint lim_19_16 : 4;  \/\/ High bits of segment limit$/;"	m	struct:segdesc
link	mmu.h	/^  uint link;         \/\/ Old ts selector$/;"	m	struct:taskstate
linktest	usertests.c	/^linktest(void)$/;"	f
linkunlink	usertests.c	/^linkunlink()$/;"	f
listcmd	sh.c	/^listcmd(struct cmd *left, struct cmd *right)$/;"	f
listcmd	sh.c	/^struct listcmd {$/;"	s	file:
lk	sleeplock.h	/^  struct spinlock lk; \/\/ spinlock protecting this sleep lock$/;"	m	struct:sleeplock	typeref:struct:sleeplock::spinlock
load_addr	bootmain.c	/^  uint64 load_addr;$/;"	m	struct:mbheader	file:
load_end_addr	bootmain.c	/^  uint64 load_end_addr;$/;"	m	struct:mbheader	file:
loadgs	x86.h	/^loadgs(ushort v)$/;"	f
loaduvm	vm.c	/^loaduvm(pde_t *pgdir, char *addr, struct inode *ip, uint offset, uint sz)$/;"	f
local	kernel.asm	/^  local = kalloc();$/;"	d
local	proc.h	/^  void *local;$/;"	m	struct:cpu
lock	bio.c	/^  struct spinlock lock;$/;"	m	struct:__anon4	typeref:struct:__anon4::spinlock	file:
lock	buf.h	/^  struct sleeplock lock;$/;"	m	struct:buf	typeref:struct:buf::sleeplock
lock	console.c	/^  struct spinlock lock;$/;"	m	struct:__anon7	typeref:struct:__anon7::spinlock	file:
lock	console.c	/^  struct spinlock lock;$/;"	m	struct:__anon8	typeref:struct:__anon8::spinlock	file:
lock	file.c	/^  struct spinlock lock;$/;"	m	struct:__anon5	typeref:struct:__anon5::spinlock	file:
lock	file.h	/^  struct sleeplock lock;$/;"	m	struct:inode	typeref:struct:inode::sleeplock
lock	fs.c	/^  struct spinlock lock;$/;"	m	struct:__anon2	typeref:struct:__anon2::spinlock	file:
lock	kalloc.c	/^  struct spinlock lock;$/;"	m	struct:__anon6	typeref:struct:__anon6::spinlock	file:
lock	log.c	/^  struct spinlock lock;$/;"	m	struct:log	typeref:struct:log::spinlock	file:
lock	pipe.c	/^  struct spinlock lock;$/;"	m	struct:pipe	typeref:struct:pipe::spinlock	file:
lock	proc.c	/^  struct spinlock lock;$/;"	m	struct:__anon1	typeref:struct:__anon1::spinlock	file:
lock	procfs.c	/^  struct spinlock lock;$/;"	m	struct:__anon9	typeref:struct:__anon9::spinlock	file:
locked	sleeplock.h	/^  uint locked;       \/\/ Is the lock held?$/;"	m	struct:sleeplock
locked	spinlock.h	/^  uint locked;       \/\/ Is the lock held?$/;"	m	struct:spinlock
locking	console.c	/^  int locking;$/;"	m	struct:__anon7	file:
locking	kernel.asm	/^  locking = cons.locking;$/;"	d
log	log.c	/^struct log log;$/;"	v	typeref:struct:log
log	log.c	/^struct log {$/;"	s	file:
log_write	log.c	/^log_write(struct buf *b)$/;"	f
logheader	log.c	/^struct logheader {$/;"	s	file:
logstart	fs.h	/^  uint logstart;     \/\/ Block number of first log block$/;"	m	struct:superblock
ls	ls.c	/^ls(char *path)$/;"	f
ltr	x86.h	/^ltr(ushort sel)$/;"	f
m	grep.asm	/^      m = 0;$/;"	d
m	grep.asm	/^  m = 0;$/;"	d
m	kernel.asm	/^      m = 1 << (bi % 8);$/;"	d
m	kernel.asm	/^    m = min(n - tot, BSIZE - off%BSIZE);$/;"	d
m	kernel.asm	/^  m = 1 << (bi % 8);$/;"	d
m1	usertests.asm	/^      m1 = m2;$/;"	d
m1	usertests.asm	/^    m1 = 0;$/;"	d
m1	usertests.asm	/^    m1 = malloc(1024*20);$/;"	d
m2	usertests.asm	/^      m2 = *(char**)m1;$/;"	d
machine	elf.h	/^  ushort machine;$/;"	m	struct:elfhdr
magic	bootmain.c	/^  uint64 magic;$/;"	m	struct:mbheader	file:
magic	elf.h	/^  uint magic;  \/\/ must equal ELF_MAGIC$/;"	m	struct:elfhdr
main	cat.c	/^main(int argc, char *argv[])$/;"	f
main	echo.c	/^main(int argc, char *argv[])$/;"	f
main	forktest.c	/^main(void)$/;"	f
main	grep.c	/^main(int argc, char *argv[])$/;"	f
main	init.c	/^main(void)$/;"	f
main	kill.c	/^main(int argc, char **argv)$/;"	f
main	ln.c	/^main(int argc, char *argv[])$/;"	f
main	ls.c	/^main(int argc, char *argv[])$/;"	f
main	main.c	/^main(void)$/;"	f
main	mkdir.c	/^main(int argc, char *argv[])$/;"	f
main	mkfs.c	/^main(int argc, char *argv[])$/;"	f
main	mount.c	/^int main(int argc, char** argv) {$/;"	f
main	rm.c	/^main(int argc, char *argv[])$/;"	f
main	sh.c	/^main(void)$/;"	f
main	stressfs.c	/^main(int argc, char *argv[])$/;"	f
main	usertests.c	/^main(int argc, char *argv[])$/;"	f
main	wc.c	/^main(int argc, char *argv[])$/;"	f
main	zombie.c	/^main(void)$/;"	f
major	file.h	/^  short major;$/;"	m	struct:inode
major	fs.h	/^  short major;          \/\/ Major device number (T_DEV only)$/;"	m	struct:dinode
malloc	umalloc.c	/^malloc(uint nbytes)$/;"	f
mappages	vm.c	/^mappages(pde_t *pgdir, void *va, addr_t size, addr_t pa, int perm)$/;"	f
match	grep.c	/^match(char *re, char *text)$/;"	f
matchhere	grep.c	/^int matchhere(char *re, char *text)$/;"	f
matchstar	grep.c	/^int matchstar(int c, char *re, char *text)$/;"	f
maxintr	kernel.asm	/^  maxintr = (ioapicread(REG_VER) >> 16) & 0xFF;$/;"	d
mbheader	bootmain.c	/^struct mbheader {$/;"	s	file:
mboot_entry	entry.S	/^mboot_entry:$/;"	l
mboot_entry	kernel.asm	/^mboot_entry:$/;"	l
mboot_flags	entry.S	/^#define mboot_flags 0x00010000$/;"	d
mboot_header	entry.S	/^mboot_header:$/;"	l
mboot_magic	entry.S	/^#define mboot_magic 0x1badb002$/;"	d
mem	kernel.asm	/^    mem = kalloc();$/;"	d
mem	kernel.asm	/^  mem = kalloc();$/;"	d
mem	usertests.c	/^mem(void)$/;"	f
memcmp	string.c	/^memcmp(const void *v1, const void *v2, uint n)$/;"	f
memcpy	string.c	/^memcpy(void *dst, const void *src, uint n)$/;"	f
memdisk	memide.c	/^static uchar *memdisk;$/;"	v	file:
memmove	string.c	/^memmove(void *dst, const void *src, uint n)$/;"	f
memmove	ulib.c	/^memmove(void *vdst, void *vsrc, int n)$/;"	f
memset	string.c	/^memset(void *dst, int c, uint n)$/;"	f
memset	ulib.c	/^memset(void *dst, int c, uint n)$/;"	f
memsz	elf.h	/^  uint64 memsz;$/;"	m	struct:proghdr
microdelay	lapic.c	/^microdelay(int us)$/;"	f
min	fs.c	24;"	d	file:
min	mkfs.c	253;"	d	file:
minor	file.h	/^  short minor;$/;"	m	struct:inode
minor	fs.h	/^  short minor;          \/\/ Minor device number (T_DEV only)$/;"	m	struct:dinode
minute	date.h	/^  uint minute;$/;"	m	struct:rtcdate
mkgate	trap.c	/^mkgate(uint *idt, uint n, addr_t kva, uint pl, uint trap) {$/;"	f	file:
mode	sh.c	/^  int mode;$/;"	m	struct:redircmd	file:
month	date.h	/^  uint month;$/;"	m	struct:rtcdate
morecore	umalloc.c	/^morecore(uint nu)$/;"	f	file:
mounted_dev	file.h	/^  uint mounted_dev;   \/\/ if this inode is a mount point, mounted_dev is the dev of contained files$/;"	m	struct:inode
mp	mp.h	/^struct mp {             \/\/ floating pointer$/;"	s
mpconf	mp.h	/^struct mpconf {         \/\/ configuration table header$/;"	s
mpconfig	mp.c	/^mpconfig(struct mp **pmp)$/;"	f	file:
mpenter	main.c	/^mpenter(void)$/;"	f
mpinit	mp.c	/^mpinit(void)$/;"	f
mpioapic	mp.h	/^struct mpioapic {       \/\/ I\/O APIC table entry$/;"	s
mpmain	main.c	/^mpmain(void)$/;"	f	file:
mpproc	mp.h	/^struct mpproc {         \/\/ processor table entry$/;"	s
mpsearch	mp.c	/^mpsearch(void)$/;"	f	file:
mpsearch1	mp.c	/^mpsearch1(addr_t a, int len)$/;"	f	file:
n	cat.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	cat.asm	/^  n = 0;$/;"	d
n	echo.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	echo.asm	/^  n = 0;$/;"	d
n	forktest.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	forktest.asm	/^  n = 0;$/;"	d
n	grep.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	grep.asm	/^  n = 0;$/;"	d
n	init.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	init.asm	/^  n = 0;$/;"	d
n	kernel.asm	/^      n = PGSIZE;$/;"	d
n	kernel.asm	/^      n = len;$/;"	d
n	kernel.asm	/^      n = sz - i;$/;"	d
n	kernel.asm	/^    n = PGSIZE - (va - va0);$/;"	d
n	kernel.asm	/^    n = ip->size - off;$/;"	d
n	kill.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	kill.asm	/^  n = 0;$/;"	d
n	ln.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	ln.asm	/^  n = 0;$/;"	d
n	log.c	/^  int n;$/;"	m	struct:logheader	file:
n	ls.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	ls.asm	/^  n = 0;$/;"	d
n	mkdir.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	mkdir.asm	/^  n = 0;$/;"	d
n	mount.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	mount.asm	/^  n = 0;$/;"	d
n	rm.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	rm.asm	/^  n = 0;$/;"	d
n	sh.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	sh.asm	/^  n = 0;$/;"	d
n	stressfs.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	stressfs.asm	/^  n = 0;$/;"	d
n	usertests.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	usertests.asm	/^  n = 0;$/;"	d
n	wc.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	wc.asm	/^  n = 0;$/;"	d
n	zombie.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	zombie.asm	/^  n = 0;$/;"	d
n1	kernel.asm	/^        n1 = max;$/;"	d
name	cat.asm	/^  name: \\$/;"	l
name	echo.asm	/^  name: \\$/;"	l
name	forktest.asm	/^  name: \\$/;"	l
name	fs.h	/^  char name[DIRSIZ];$/;"	m	struct:dirent
name	grep.asm	/^  name: \\$/;"	l
name	init.asm	/^  name: \\$/;"	l
name	kill.asm	/^  name: \\$/;"	l
name	ln.asm	/^  name: \\$/;"	l
name	ls.asm	/^  name: \\$/;"	l
name	mkdir.asm	/^  name: \\$/;"	l
name	mount.asm	/^  name: \\$/;"	l
name	proc.h	/^  char name[16];               \/\/ Process name (debugging)$/;"	m	struct:proc
name	rm.asm	/^  name: \\$/;"	l
name	sh.asm	/^  name: \\$/;"	l
name	sleeplock.h	/^  char *name;        \/\/ Name of lock.$/;"	m	struct:sleeplock
name	spinlock.h	/^  char *name;        \/\/ Name of lock.$/;"	m	struct:spinlock
name	stressfs.asm	/^  name: \\$/;"	l
name	usertests.asm	/^  name: \\$/;"	l
name	usertests.c	/^char name[3];$/;"	v
name	usys.S	/^  name: \\$/;"	l
name	wc.asm	/^  name: \\$/;"	l
name	zombie.asm	/^  name: \\$/;"	l
namecmp	fs.c	/^namecmp(const char *s, const char *t)$/;"	f
namei	fs.c	/^namei(char *path)$/;"	f
nameiparent	fs.c	/^nameiparent(char *path, char *name)$/;"	f
namex	fs.c	/^namex(char *path, int nameiparent, char *name)$/;"	f	file:
nbitmap	mkfs.c	/^int nbitmap = FSSIZE\/(BSIZE*8) + 1;$/;"	v
nblocks	fs.h	/^  uint nblocks;      \/\/ Number of data blocks$/;"	m	struct:superblock
nblocks	mkfs.c	/^int nblocks;  \/\/ Number of data blocks$/;"	v
nc	usertests.asm	/^  nc = np = 0;$/;"	d
ncli	proc.h	/^  int ncli;                    \/\/ Depth of pushcli nesting.$/;"	m	struct:cpu
ncpu	mp.c	/^int ncpu;$/;"	v
neg	cat.asm	/^    neg = 1;$/;"	d
neg	cat.asm	/^  neg = 0;$/;"	d
neg	echo.asm	/^    neg = 1;$/;"	d
neg	echo.asm	/^  neg = 0;$/;"	d
neg	grep.asm	/^    neg = 1;$/;"	d
neg	grep.asm	/^  neg = 0;$/;"	d
neg	init.asm	/^    neg = 1;$/;"	d
neg	init.asm	/^  neg = 0;$/;"	d
neg	kill.asm	/^    neg = 1;$/;"	d
neg	kill.asm	/^  neg = 0;$/;"	d
neg	ln.asm	/^    neg = 1;$/;"	d
neg	ln.asm	/^  neg = 0;$/;"	d
neg	ls.asm	/^    neg = 1;$/;"	d
neg	ls.asm	/^  neg = 0;$/;"	d
neg	mkdir.asm	/^    neg = 1;$/;"	d
neg	mkdir.asm	/^  neg = 0;$/;"	d
neg	mount.asm	/^    neg = 1;$/;"	d
neg	mount.asm	/^  neg = 0;$/;"	d
neg	rm.asm	/^    neg = 1;$/;"	d
neg	rm.asm	/^  neg = 0;$/;"	d
neg	sh.asm	/^    neg = 1;$/;"	d
neg	sh.asm	/^  neg = 0;$/;"	d
neg	stressfs.asm	/^    neg = 1;$/;"	d
neg	stressfs.asm	/^  neg = 0;$/;"	d
neg	usertests.asm	/^    neg = 1;$/;"	d
neg	usertests.asm	/^  neg = 0;$/;"	d
neg	wc.asm	/^    neg = 1;$/;"	d
neg	wc.asm	/^  neg = 0;$/;"	d
neg	zombie.asm	/^    neg = 1;$/;"	d
neg	zombie.asm	/^  neg = 0;$/;"	d
next	buf.h	/^  struct buf *next;$/;"	m	struct:buf	typeref:struct:buf::buf
next	kalloc.c	/^  struct run *next;$/;"	m	struct:run	typeref:struct:run::run	file:
nextpid	proc.c	/^int nextpid = 1;$/;"	v
ninodeblocks	mkfs.c	/^int ninodeblocks = NINODES \/ IPB + 1;$/;"	v
ninodes	fs.h	/^  uint ninodes;      \/\/ Number of inodes.$/;"	m	struct:superblock
nlink	file.h	/^  short nlink;$/;"	m	struct:inode
nlink	fs.h	/^  short nlink;          \/\/ Number of links to inode in file system$/;"	m	struct:dinode
nlink	stat.h	/^  short nlink; \/\/ Number of links to file$/;"	m	struct:stat
nlog	fs.h	/^  uint nlog;         \/\/ Number of log blocks$/;"	m	struct:superblock
nlog	mkfs.c	/^int nlog = LOGSIZE;$/;"	v
nmeta	mkfs.c	/^int nmeta;    \/\/ Number of meta blocks (boot, sb, nlog, inode, bitmap)$/;"	v
normalmap	kbd.h	/^static uchar normalmap[256] =$/;"	v
nread	pipe.c	/^  uint nread;     \/\/ number of bytes read$/;"	m	struct:pipe	file:
nu	cat.asm	/^    nu = 4096;$/;"	d
nu	echo.asm	/^    nu = 4096;$/;"	d
nu	grep.asm	/^    nu = 4096;$/;"	d
nu	init.asm	/^    nu = 4096;$/;"	d
nu	kill.asm	/^    nu = 4096;$/;"	d
nu	ln.asm	/^    nu = 4096;$/;"	d
nu	ls.asm	/^    nu = 4096;$/;"	d
nu	mkdir.asm	/^    nu = 4096;$/;"	d
nu	mount.asm	/^    nu = 4096;$/;"	d
nu	rm.asm	/^    nu = 4096;$/;"	d
nu	sh.asm	/^    nu = 4096;$/;"	d
nu	stressfs.asm	/^    nu = 4096;$/;"	d
nu	usertests.asm	/^    nu = 4096;$/;"	d
nu	wc.asm	/^    nu = 4096;$/;"	d
nu	zombie.asm	/^    nu = 4096;$/;"	d
nulterminate	sh.c	/^nulterminate(struct cmd *cmd)$/;"	f
num	kernel.asm	/^  num = proc->tf->rax;$/;"	d
nunits	cat.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	echo.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	grep.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	init.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	kill.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	ln.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	ls.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	mkdir.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	mount.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	rm.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	sh.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	stressfs.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	usertests.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	wc.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	zombie.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nwrite	pipe.c	/^  uint nwrite;    \/\/ number of bytes written$/;"	m	struct:pipe	file:
oemlength	mp.h	/^  ushort oemlength;             \/\/ OEM table length$/;"	m	struct:mpconf
oemtable_p	mp.h	/^  uint32 oemtable_p;               \/\/ OEM table pointer$/;"	m	struct:mpconf
off	elf.h	/^  uint64 off;$/;"	m	struct:proghdr
off	file.h	/^  uint off;$/;"	m	struct:file
off	kernel.asm	/^  off = 0;$/;"	d
off_15_0	mmu.h	/^  uint off_15_0 : 16;   \/\/ low 16 bits of offset in segment$/;"	m	struct:gatedesc
off_31_16	mmu.h	/^  uint off_31_16 : 16;  \/\/ high bits of offset in segment$/;"	m	struct:gatedesc
off_63_32	mmu.h	/^  uint32 off_63_32;$/;"	m	struct:gatedesc
ofile	proc.h	/^  struct file *ofile[NOFILE];  \/\/ Open files$/;"	m	struct:proc	typeref:struct:proc::file
oldbrk	usertests.asm	/^  oldbrk = sbrk(0);$/;"	d
oldpgdir	kernel.asm	/^  oldpgdir = proc->pgdir;$/;"	d
openiputtest	usertests.c	/^openiputtest(void)$/;"	f
opentest	usertests.c	/^opentest(void)$/;"	f
os	cat.asm	/^  os = s;$/;"	d
os	echo.asm	/^  os = s;$/;"	d
os	forktest.asm	/^  os = s;$/;"	d
os	grep.asm	/^  os = s;$/;"	d
os	init.asm	/^  os = s;$/;"	d
os	kernel.asm	/^  os = s;$/;"	d
os	kill.asm	/^  os = s;$/;"	d
os	ln.asm	/^  os = s;$/;"	d
os	ls.asm	/^  os = s;$/;"	d
os	mkdir.asm	/^  os = s;$/;"	d
os	mount.asm	/^  os = s;$/;"	d
os	rm.asm	/^  os = s;$/;"	d
os	sh.asm	/^  os = s;$/;"	d
os	stressfs.asm	/^  os = s;$/;"	d
os	usertests.asm	/^  os = s;$/;"	d
os	wc.asm	/^  os = s;$/;"	d
os	zombie.asm	/^  os = s;$/;"	d
outb	x86.h	/^outb(ushort port, uchar data)$/;"	f
outsl	x86.h	/^outsl(int port, const void *addr, int cnt)$/;"	f
outstanding	log.c	/^  int outstanding; \/\/ how many FS sys calls are executing.$/;"	m	struct:log	file:
outw	x86.h	/^outw(ushort port, ushort data)$/;"	f
p	cat.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	echo.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	grep.asm	/^      p = q+1;$/;"	d
p	grep.asm	/^    p = buf;$/;"	d
p	grep.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	init.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	kernel.asm	/^    p = ((bda[0x14]<<8)|bda[0x13])*1024;$/;"	d
p	kernel.asm	/^  p = (char*)PGROUNDUP((addr_t)vstart);$/;"	d
p	kernel.asm	/^  p = 0;$/;"	d
p	kernel.asm	/^  p = allocproc();$/;"	d
p	kill.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	ln.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	ls.asm	/^    p = buf+strlen(buf);$/;"	d
p	ls.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	mkdir.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	mmu.h	/^  uint p : 1;           \/\/ Present$/;"	m	struct:gatedesc
p	mmu.h	/^  uint p : 1;          \/\/ Present$/;"	m	struct:segdesc
p	mount.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	rm.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	sh.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	stressfs.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	usertests.asm	/^  p = sbrk(amt);$/;"	d
p	usertests.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	wc.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	zombie.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p2v	memlayout.h	/^static inline void *p2v(addr_t a) {$/;"	f
pa	kernel.asm	/^      pa = PTE_ADDR(*pte);$/;"	d
pa	kernel.asm	/^    pa = PTE_ADDR(*pte);$/;"	d
pa0	kernel.asm	/^    pa0 = uva2ka(pgdir, (char*)va0);$/;"	d
pad	ioapic.c	/^  uint pad[3];$/;"	m	struct:ioapic	file:
pad	runoff	/^pad()$/;"	f
padding1	mmu.h	/^  ushort padding1;$/;"	m	struct:taskstate
padding10	mmu.h	/^  ushort padding10;$/;"	m	struct:taskstate
padding2	mmu.h	/^  ushort padding2;$/;"	m	struct:taskstate
padding3	mmu.h	/^  ushort padding3;$/;"	m	struct:taskstate
padding4	mmu.h	/^  ushort padding4;$/;"	m	struct:taskstate
padding5	mmu.h	/^  ushort padding5;$/;"	m	struct:taskstate
padding6	mmu.h	/^  ushort padding6;$/;"	m	struct:taskstate
padding7	mmu.h	/^  ushort padding7;$/;"	m	struct:taskstate
padding8	mmu.h	/^  ushort padding8;$/;"	m	struct:taskstate
padding9	mmu.h	/^  ushort padding9;$/;"	m	struct:taskstate
paddr	elf.h	/^  uint64 paddr;$/;"	m	struct:proghdr
panic	console.c	/^panic(char *s)$/;"	f
panic	sh.c	/^panic(char *s)$/;"	f
panicked	console.c	/^static int panicked = 0;$/;"	v	file:
panicked	kernel.asm	/^  panicked = 1; \/\/ freeze other CPU$/;"	d
parent	proc.h	/^  struct proc *parent;         \/\/ Parent process$/;"	m	struct:proc	typeref:struct:proc::proc
parseblock	sh.c	/^parseblock(char **ps, char *es)$/;"	f
parsecmd	sh.c	/^parsecmd(char *s)$/;"	f
parseexec	sh.c	/^parseexec(char **ps, char *es)$/;"	f
parseline	sh.c	/^parseline(char **ps, char *es)$/;"	f
parsepipe	sh.c	/^parsepipe(char **ps, char *es)$/;"	f
parseredirs	sh.c	/^parseredirs(struct cmd *cmd, char **ps, char *es)$/;"	f
pattern	grep.asm	/^  pattern = argv[1];$/;"	d
pcmd	sh.asm	/^    pcmd = (struct pipecmd*)cmd;$/;"	d
pcs	spinlock.h	/^  addr_t pcs[10];      \/\/ The call stack (an array of program counters)$/;"	m	struct:spinlock
pd	kernel.asm	/^          pd = (pde_t*)P2V(PTE_ADDR(pdp[j]));$/;"	d
pd	kernel.asm	/^    pd = (pde_t*)P2V(PTE_ADDR(*pdpe));$/;"	d
pde	kernel.asm	/^  pde = &pd[PDX(va)]; $/;"	d
pde_t	types.h	/^typedef addr_t pde_t;$/;"	t
pdp	kernel.asm	/^      pdp = (pdpe_t*)P2V(PTE_ADDR(pml4[i])); $/;"	d
pdp	kernel.asm	/^    pdp = (pdpe_t*)P2V(PTE_ADDR(*pml4e));  $/;"	d
pdpe	kernel.asm	/^  pdpe = &pdp[PDPX(va)];  $/;"	d
pdpe_t	types.h	/^typedef addr_t pdpe_t;$/;"	t
peek	sh.c	/^peek(char **ps, char *es, char *toks)$/;"	f
pgdir	kernel.asm	/^  pgdir = 0;$/;"	d
pgdir	proc.h	/^  pde_t* pgdir;                \/\/ Page table$/;"	m	struct:proc
pgtab	kernel.asm	/^    pgtab = (pte_t*)P2V(PTE_ADDR(*pde));$/;"	d
phentsize	elf.h	/^  ushort phentsize;$/;"	m	struct:elfhdr
phnum	elf.h	/^  ushort phnum;$/;"	m	struct:elfhdr
phoff	elf.h	/^  addr_t phoff;$/;"	m	struct:elfhdr
physaddr	mp.h	/^  uint32 physaddr;               \/\/ 32-bit phys addr of MP config table$/;"	m	struct:mp
pid	forktest.asm	/^    pid = fork();$/;"	d
pid	init.asm	/^    pid = fork();$/;"	d
pid	kernel.asm	/^        pid = p->pid;$/;"	d
pid	kernel.asm	/^  pid = np->pid;$/;"	d
pid	proc.h	/^  int pid;                     \/\/ Process ID$/;"	m	struct:proc
pid	sh.asm	/^  pid = fork();$/;"	d
pid	sleeplock.h	/^  int pid;           \/\/ Process holding lock$/;"	m	struct:sleeplock
pid	usertests.asm	/^    pid = fork();$/;"	d
pid	usertests.asm	/^  pid = fork();$/;"	d
pid1	usertests.asm	/^  pid1 = fork();$/;"	d
pid2	usertests.asm	/^  pid2 = fork();$/;"	d
pid3	usertests.asm	/^  pid3 = fork();$/;"	d
pinit	proc.c	/^pinit(void)$/;"	f
pipe	file.h	/^  struct pipe *pipe;$/;"	m	struct:file	typeref:struct:file::pipe
pipe	pipe.c	/^struct pipe {$/;"	s	file:
pipe1	usertests.c	/^pipe1(void)$/;"	f
pipealloc	pipe.c	/^pipealloc(struct file **f0, struct file **f1)$/;"	f
pipeclose	pipe.c	/^pipeclose(struct pipe *p, int writable)$/;"	f
pipecmd	sh.c	/^pipecmd(struct cmd *left, struct cmd *right)$/;"	f
pipecmd	sh.c	/^struct pipecmd {$/;"	s	file:
piperead	pipe.c	/^piperead(struct pipe *p, char *addr, int n)$/;"	f
pipewrite	pipe.c	/^pipewrite(struct pipe *p, char *addr, int n)$/;"	f
pml4e	kernel.asm	/^  pml4e = &pml4[PMX(va)];$/;"	d
pml4e_t	types.h	/^typedef addr_t pml4e_t;$/;"	t
popcli	spinlock.c	/^popcli(void)$/;"	f
port	usertests.asm	/^    port = RTC_ADDR;$/;"	d
port	usertests.asm	/^    port = RTC_DATA;$/;"	d
pos	kernel.asm	/^  pos = inb(CRTPORT+1) << 8;$/;"	d
ppid	usertests.asm	/^    ppid = getpid();$/;"	d
ppid	usertests.asm	/^  ppid = getpid();$/;"	d
preempt	usertests.c	/^preempt(void)$/;"	f
prev	buf.h	/^  struct buf *prev; \/\/ LRU cache list$/;"	m	struct:buf	typeref:struct:buf::buf
printf	forktest.c	/^printf(int fd, char *s, ...)$/;"	f
printf	printf.c	/^printf(int fd, char *fmt, ...)$/;"	f
printint	console.c	/^printint(int xx, int base, int sign)$/;"	f	file:
printint	printf.c	/^printint(int fd, int xx, int base, int sgn)$/;"	f	file:
printptr	console.c	/^printptr(addr_t x) {$/;"	f	file:
proc	kernel.asm	/^      proc = (struct mpproc*)p;$/;"	d
proc	kernel.asm	/^      proc = 0;$/;"	d
proc	kernel.asm	/^      proc = p;$/;"	d
proc	kernel.asm	/^  proc = 0;$/;"	d
proc	proc.c	/^  struct proc proc[NPROC];$/;"	m	struct:__anon1	typeref:struct:__anon1::proc	file:
proc	proc.h	/^struct proc {$/;"	s
proc	procfs.c	/^  struct proc proc[NPROC];$/;"	m	struct:__anon9	typeref:struct:__anon9::proc	file:
proc	vm.c	/^__thread struct proc *proc;$/;"	v	typeref:struct:proc
procdump	proc.c	/^procdump(void)$/;"	f
procfiles	procfs.c	/^struct dirent procfiles[PROCFILES+NPROC+1] = {{10001,"meminfo"}, {10002,"cpuinfo"}};$/;"	v	typeref:struct:dirent
procfs_functions	procfs.c	/^struct inode_functions procfs_functions = {$/;"	v	typeref:struct:inode_functions
procfs_ipopulate	procfs.c	/^procfs_ipopulate(struct inode* ip)$/;"	f
procfs_iupdate	procfs.c	/^procfs_iupdate(struct inode* ip)$/;"	f
procfs_readi	procfs.c	/^procfs_readi(struct inode* ip, char* buf, uint offset, uint size)$/;"	f
procfs_writei	procfs.c	/^procfs_writei(struct inode* ip, char* buf, uint offset, uint count)$/;"	f	file:
procfsinit	procfs.c	/^procfsinit(char * const path)$/;"	f
procstate	types.h	/^enum procstate { UNUSED, EMBRYO, SLEEPING, RUNNABLE, RUNNING, ZOMBIE };$/;"	g
product	mp.h	/^  uchar product[20];            \/\/ product id$/;"	m	struct:mpconf
proghdr	elf.h	/^struct proghdr {$/;"	s
pt	kernel.asm	/^              pt = (pde_t*)P2V(PTE_ADDR(pd[k]));$/;"	d
ptable	proc.c	/^} ptable;$/;"	v	typeref:struct:__anon1
pte	kernel.asm	/^    pte = walkpgdir(pgdir, (char*)a, 0);$/;"	d
pte	kernel.asm	/^  pte = walkpgdir(pgdir, uva, 0);$/;"	d
pte_t	mmu.h	/^typedef addr_t pte_t;$/;"	t
ptr	umalloc.c	/^    union header *ptr;$/;"	m	struct:header::__anon10	typeref:union:header::__anon10::header	file:
pushcli	spinlock.c	/^pushcli(void)$/;"	f
putc	printf.c	/^putc(int fd, char c)$/;"	f	file:
qnext	buf.h	/^  struct buf *qnext; \/\/ disk queue$/;"	m	struct:buf	typeref:struct:buf::buf
r	cat.asm	/^  r = fstat(fd, st);$/;"	d
r	console.c	/^  uint r;  \/\/ Read index$/;"	m	struct:__anon8	file:
r	echo.asm	/^  r = fstat(fd, st);$/;"	d
r	forktest.asm	/^  r = fstat(fd, st);$/;"	d
r	grep.asm	/^  r = fstat(fd, st);$/;"	d
r	init.asm	/^  r = fstat(fd, st);$/;"	d
r	kernel.asm	/^    r = r->next;$/;"	d
r	kernel.asm	/^  r = (struct run*)v;$/;"	d
r	kernel.asm	/^  r = kmem.freelist;$/;"	d
r	kernel.asm	/^  r = lk->locked;$/;"	d
r	kill.asm	/^  r = fstat(fd, st);$/;"	d
r	ln.asm	/^  r = fstat(fd, st);$/;"	d
r	ls.asm	/^  r = fstat(fd, st);$/;"	d
r	mkdir.asm	/^  r = fstat(fd, st);$/;"	d
r	mount.asm	/^  r = fstat(fd, st);$/;"	d
r	rm.asm	/^  r = fstat(fd, st);$/;"	d
r	sh.asm	/^  r = fstat(fd, st);$/;"	d
r	stressfs.asm	/^  r = fstat(fd, st);$/;"	d
r	usertests.asm	/^  r = fstat(fd, st);$/;"	d
r	wc.asm	/^  r = fstat(fd, st);$/;"	d
r	zombie.asm	/^  r = fstat(fd, st);$/;"	d
r10	x86.h	/^   uint64 r10;$/;"	m	struct:trapframe
r11	proc.h	/^  addr_t r11;$/;"	m	struct:context
r11	x86.h	/^   uint64 r11;$/;"	m	struct:trapframe
r12	proc.h	/^  addr_t r12;$/;"	m	struct:context
r12	x86.h	/^   uint64 r12;$/;"	m	struct:trapframe
r13	proc.h	/^  addr_t r13;$/;"	m	struct:context
r13	x86.h	/^   uint64 r13;$/;"	m	struct:trapframe
r14	proc.h	/^  addr_t r14;$/;"	m	struct:context
r14	x86.h	/^   uint64 r14;$/;"	m	struct:trapframe
r15	proc.h	/^  addr_t r15;$/;"	m	struct:context
r15	x86.h	/^   uint64 r15;$/;"	m	struct:trapframe
r8	x86.h	/^   uint64 r8;$/;"	m	struct:trapframe
r9	x86.h	/^   uint64 r9;$/;"	m	struct:trapframe
rand	usertests.c	/^rand()$/;"	f
randstate	usertests.asm	/^  randstate = randstate * 1664525 + 1013904223;$/;"	d
randstate	usertests.c	/^unsigned long randstate = 1;$/;"	v
rax	x86.h	/^   uint64 rax;      $/;"	m	struct:trapframe
rbp	x86.h	/^   uint64 rbp;$/;"	m	struct:trapframe
rbx	proc.h	/^  addr_t rbx;$/;"	m	struct:context
rbx	x86.h	/^   uint64 rbx;$/;"	m	struct:trapframe
rcmd	sh.asm	/^    rcmd = (struct redircmd*)cmd;$/;"	d
rcr2	x86.h	/^rcr2(void)$/;"	f
rcx	x86.h	/^   uint64 rcx;$/;"	m	struct:trapframe
rdi	x86.h	/^   uint64 rdi;$/;"	m	struct:trapframe
rdx	x86.h	/^   uint64 rdx;$/;"	m	struct:trapframe
read	file.h	/^  int (*read)(struct inode*, char*, int);$/;"	m	struct:devsw
read_head	log.c	/^read_head(void)$/;"	f	file:
readable	file.h	/^  char readable;$/;"	m	struct:file
readeflags	x86.h	/^readeflags(void)$/;"	f
readi	file.h	/^  int (*readi)(struct inode*, char*, uint, uint);     \/\/ read from file contents$/;"	m	struct:inode_functions
readi_helper	procfs.c	/^readi_helper(char * buf, uint offset, uint maxsize, char * src, uint srcsize)$/;"	f	file:
readopen	pipe.c	/^  int readopen;   \/\/ read fd is still open$/;"	m	struct:pipe	file:
readsb	fs.c	/^readsb(int dev, struct superblock *sb)$/;"	f
readsect	bootmain.c	/^readsect(void *dst, uint offset)$/;"	f
readseg	bootmain.c	/^readseg(uchar* pa, uint count, uint offset)$/;"	f
recover_from_log	log.c	/^recover_from_log(void)$/;"	f	file:
redircmd	sh.c	/^redircmd(struct cmd *subcmd, char *file, char *efile, int mode, int fd)$/;"	f
redircmd	sh.c	/^struct redircmd {$/;"	s	file:
ref	file.h	/^  int ref;            \/\/ Reference count$/;"	m	struct:inode
ref	file.h	/^  int ref; \/\/ reference count$/;"	m	struct:file
refcnt	buf.h	/^  uint refcnt;$/;"	m	struct:buf
reg	ioapic.c	/^  uint reg;$/;"	m	struct:ioapic	file:
release	spinlock.c	/^release(struct spinlock *lk)$/;"	f
releasesleep	sleeplock.c	/^releasesleep(struct sleeplock *lk)$/;"	f
reserved	mp.h	/^  uchar reserved;$/;"	m	struct:mpconf
reserved	mp.h	/^  uchar reserved[3];$/;"	m	struct:mp
reserved	mp.h	/^  uchar reserved[8];$/;"	m	struct:mpproc
ret	sh.asm	/^      ret = '+';$/;"	d
ret	sh.asm	/^    ret = 'a';$/;"	d
ret	sh.asm	/^    ret = parseredirs(ret, ps, es);$/;"	d
ret	sh.asm	/^  ret = *s;$/;"	d
ret	sh.asm	/^  ret = execcmd();$/;"	d
ret	sh.asm	/^  ret = parseredirs(ret, ps, es);$/;"	d
return	kernel.asm	/^  return d;$/;"	d
rflags	x86.h	/^   uint64 rflags;  $/;"	m	struct:trapframe
right	sh.c	/^  struct cmd *right;$/;"	m	struct:listcmd	typeref:struct:listcmd::cmd	file:
right	sh.c	/^  struct cmd *right;$/;"	m	struct:pipecmd	typeref:struct:pipecmd::cmd	file:
rinode	mkfs.c	/^rinode(uint inum, struct dinode *ip)$/;"	f
rip	x86.h	/^   uint64 rip;     $/;"	m	struct:trapframe
rmdot	usertests.c	/^rmdot(void)$/;"	f
rsect	mkfs.c	/^rsect(uint sec, void *buf)$/;"	f
rsi	x86.h	/^   uint64 rsi;$/;"	m	struct:trapframe
rsp	x86.h	/^   uint64 rsp;     $/;"	m	struct:trapframe
rsv1	mmu.h	/^  uint rsv1 : 1;       \/\/ 64-bit segment$/;"	m	struct:segdesc
rsv1	mmu.h	/^  uint rsv1 : 3;        \/\/ reserved(should be zero I guess)$/;"	m	struct:gatedesc
rsv2	mmu.h	/^  uint32 rsv2;$/;"	m	struct:gatedesc
rtcdate	date.h	/^struct rtcdate {$/;"	s
run	kalloc.c	/^struct run {$/;"	s	file:
runcmd	sh.c	/^runcmd(struct cmd *cmd)$/;"	f
s	cat.asm	/^          s = "(null)";$/;"	d
s	cat.asm	/^        s = va_arg(ap, char*);$/;"	d
s	echo.asm	/^          s = "(null)";$/;"	d
s	echo.asm	/^        s = va_arg(ap, char*);$/;"	d
s	grep.asm	/^          s = "(null)";$/;"	d
s	grep.asm	/^        s = va_arg(ap, char*);$/;"	d
s	init.asm	/^          s = "(null)";$/;"	d
s	init.asm	/^        s = va_arg(ap, char*);$/;"	d
s	kernel.asm	/^        s = "(null)";$/;"	d
s	kernel.asm	/^  s = path;$/;"	d
s	kernel.asm	/^  s = src;$/;"	d
s	kill.asm	/^          s = "(null)";$/;"	d
s	kill.asm	/^        s = va_arg(ap, char*);$/;"	d
s	ln.asm	/^          s = "(null)";$/;"	d
s	ln.asm	/^        s = va_arg(ap, char*);$/;"	d
s	ls.asm	/^          s = "(null)";$/;"	d
s	ls.asm	/^        s = va_arg(ap, char*);$/;"	d
s	mkdir.asm	/^          s = "(null)";$/;"	d
s	mkdir.asm	/^        s = va_arg(ap, char*);$/;"	d
s	mmu.h	/^  uint s : 1;           \/\/ must be 0 (system)$/;"	m	struct:gatedesc
s	mmu.h	/^  uint s : 1;          \/\/ 0 = system, 1 = application$/;"	m	struct:segdesc
s	mount.asm	/^          s = "(null)";$/;"	d
s	mount.asm	/^        s = va_arg(ap, char*);$/;"	d
s	rm.asm	/^          s = "(null)";$/;"	d
s	rm.asm	/^        s = va_arg(ap, char*);$/;"	d
s	sh.asm	/^          s = "(null)";$/;"	d
s	sh.asm	/^        s = va_arg(ap, char*);$/;"	d
s	sh.asm	/^  s = *ps;$/;"	d
s	stressfs.asm	/^          s = "(null)";$/;"	d
s	stressfs.asm	/^        s = va_arg(ap, char*);$/;"	d
s	umalloc.c	/^  } s;$/;"	m	union:header	typeref:struct:header::__anon10	file:
s	usertests.asm	/^          s = "(null)";$/;"	d
s	usertests.asm	/^        s = va_arg(ap, char*);$/;"	d
s	wc.asm	/^          s = "(null)";$/;"	d
s	wc.asm	/^        s = va_arg(ap, char*);$/;"	d
s	zombie.asm	/^          s = "(null)";$/;"	d
s	zombie.asm	/^        s = va_arg(ap, char*);$/;"	d
s1	kernel.asm	/^  s1 = v1;$/;"	d
s2	kernel.asm	/^  s2 = v2;$/;"	d
safestrcpy	string.c	/^safestrcpy(char *s, const char *t, int n)$/;"	f
sb	fs.c	/^struct superblock sb; $/;"	v	typeref:struct:superblock
sb	kernel.asm	/^  sb = cmos_read(CMOS_STATB);$/;"	d
sb	mkfs.c	/^struct superblock sb;$/;"	v	typeref:struct:superblock
sbrktest	usertests.c	/^sbrktest(void)$/;"	f
sched	proc.c	/^sched(void)$/;"	f
scheduler	proc.c	/^scheduler(void)$/;"	f
scheduler	proc.h	/^  struct context *scheduler;   \/\/ swtch() here to enter scheduler$/;"	m	struct:cpu	typeref:struct:cpu::context
second	date.h	/^  uint second;$/;"	m	struct:rtcdate
segdesc	mmu.h	/^struct segdesc {$/;"	s
seginit	vm.c	/^seginit(void)$/;"	f
seq	usertests.asm	/^  seq = 0;$/;"	d
setupkvm	vm.c	/^setupkvm(void)$/;"	f
sharedfd	usertests.c	/^sharedfd(void)$/;"	f
shentsize	elf.h	/^  ushort shentsize;$/;"	m	struct:elfhdr
shiftcode	kbd.h	/^static uchar shiftcode[256] =$/;"	v
shiftmap	kbd.h	/^static uchar shiftmap[256] =$/;"	v
shnum	elf.h	/^  ushort shnum;$/;"	m	struct:elfhdr
shoff	elf.h	/^  addr_t shoff;$/;"	m	struct:elfhdr
shstrndx	elf.h	/^  ushort shstrndx;$/;"	m	struct:elfhdr
signature	mp.h	/^  uchar signature[4];           \/\/ "PCMP"$/;"	m	struct:mpconf
signature	mp.h	/^  uchar signature[4];           \/\/ "_MP_"$/;"	m	struct:mp
signature	mp.h	/^  uchar signature[4];           \/\/ CPU signature$/;"	m	struct:mpproc
size	file.h	/^  uint size;$/;"	m	struct:inode
size	fs.h	/^  uint size;            \/\/ Size of file (bytes)$/;"	m	struct:dinode
size	fs.h	/^  uint size;         \/\/ Size of file system image (blocks)$/;"	m	struct:superblock
size	log.c	/^  int size;$/;"	m	struct:log	file:
size	stat.h	/^  uint size;   \/\/ Size of file in bytes$/;"	m	struct:stat
size	umalloc.c	/^    uint size;$/;"	m	struct:header::__anon10	file:
skipelem	fs.c	/^skipelem(char *path, char *name)$/;"	f	file:
sleep	proc.c	/^sleep(void *chan, struct spinlock *lk)$/;"	f
sleeplock	sleeplock.h	/^struct sleeplock {$/;"	s
sp	kernel.asm	/^    sp = (sp - (strlen(argv[argc]) + 1)) & ~(sizeof(addr_t)-1);$/;"	d
sp	kernel.asm	/^  sp = p->kstack + KSTACKSIZE;$/;"	d
sp	kernel.asm	/^  sp = sz;$/;"	d
specrev	mp.h	/^  uchar specrev;                \/\/ [14]$/;"	m	struct:mp
spin	bootasm.S	/^spin:$/;"	l
spin	entryother.S	/^spin:$/;"	l
spin	entryother.asm	/^spin:$/;"	l
spinlock	spinlock.h	/^struct spinlock {$/;"	s
sprintuint	procfs.c	/^sprintuint(char* buf, uint x)$/;"	f	file:
sprintx32	procfs.c	/^sprintx32(char * buf, uint x)$/;"	f	file:
src	cat.asm	/^  src = vsrc;$/;"	d
src	echo.asm	/^  src = vsrc;$/;"	d
src	forktest.asm	/^  src = vsrc;$/;"	d
src	grep.asm	/^  src = vsrc;$/;"	d
src	init.asm	/^  src = vsrc;$/;"	d
src	kill.asm	/^  src = vsrc;$/;"	d
src	ln.asm	/^  src = vsrc;$/;"	d
src	ls.asm	/^  src = vsrc;$/;"	d
src	mkdir.asm	/^  src = vsrc;$/;"	d
src	mount.asm	/^  src = vsrc;$/;"	d
src	rm.asm	/^  src = vsrc;$/;"	d
src	sh.asm	/^  src = vsrc;$/;"	d
src	stressfs.asm	/^  src = vsrc;$/;"	d
src	usertests.asm	/^  src = vsrc;$/;"	d
src	wc.asm	/^  src = vsrc;$/;"	d
src	zombie.asm	/^  src = vsrc;$/;"	d
ss	mmu.h	/^  ushort ss;$/;"	m	struct:taskstate
ss	x86.h	/^   uint64 ss;      $/;"	m	struct:trapframe
ss0	mmu.h	/^  ushort ss0;        \/\/   after an increase in privilege level$/;"	m	struct:taskstate
ss1	mmu.h	/^  ushort ss1;$/;"	m	struct:taskstate
ss2	mmu.h	/^  ushort ss2;$/;"	m	struct:taskstate
st	kernel.asm	/^  st = inb(KBSTATP);$/;"	d
stack	kernel.asm	/^    stack = kalloc();$/;"	d
start	bootasm.S	/^start:$/;"	l
start	entryother.S	/^start:$/;"	l
start	entryother.asm	/^start:$/;"	l
start	initcode.S	/^start:$/;"	l
start	initcode.asm	/^start:$/;"	l
start	log.c	/^  int start;$/;"	m	struct:log	file:
start32	bootasm.S	/^start32:$/;"	l
start32	entryother.S	/^start32:$/;"	l
start32	entryother.asm	/^start32:$/;"	l
started	proc.h	/^  volatile uint started;       \/\/ Has the CPU started?$/;"	m	struct:cpu
startothers	main.c	/^startothers(void)$/;"	f	file:
stat	mkfs.c	8;"	d	file:
stat	stat.h	/^struct stat {$/;"	s
stat	ulib.c	/^stat(char *n, struct stat *st)$/;"	f
state	cat.asm	/^        state = '%';$/;"	d
state	cat.asm	/^      state = 0;$/;"	d
state	cat.asm	/^  state = 0;$/;"	d
state	echo.asm	/^        state = '%';$/;"	d
state	echo.asm	/^      state = 0;$/;"	d
state	echo.asm	/^  state = 0;$/;"	d
state	grep.asm	/^        state = '%';$/;"	d
state	grep.asm	/^      state = 0;$/;"	d
state	grep.asm	/^  state = 0;$/;"	d
state	init.asm	/^        state = '%';$/;"	d
state	init.asm	/^      state = 0;$/;"	d
state	init.asm	/^  state = 0;$/;"	d
state	kernel.asm	/^      state = "???";$/;"	d
state	kernel.asm	/^      state = states[p->state];$/;"	d
state	kill.asm	/^        state = '%';$/;"	d
state	kill.asm	/^      state = 0;$/;"	d
state	kill.asm	/^  state = 0;$/;"	d
state	ln.asm	/^        state = '%';$/;"	d
state	ln.asm	/^      state = 0;$/;"	d
state	ln.asm	/^  state = 0;$/;"	d
state	ls.asm	/^        state = '%';$/;"	d
state	ls.asm	/^      state = 0;$/;"	d
state	ls.asm	/^  state = 0;$/;"	d
state	mkdir.asm	/^        state = '%';$/;"	d
state	mkdir.asm	/^      state = 0;$/;"	d
state	mkdir.asm	/^  state = 0;$/;"	d
state	mount.asm	/^        state = '%';$/;"	d
state	mount.asm	/^      state = 0;$/;"	d
state	mount.asm	/^  state = 0;$/;"	d
state	proc.h	/^  enum procstate state;        \/\/ Process state$/;"	m	struct:proc	typeref:enum:proc::procstate
state	rm.asm	/^        state = '%';$/;"	d
state	rm.asm	/^      state = 0;$/;"	d
state	rm.asm	/^  state = 0;$/;"	d
state	sh.asm	/^        state = '%';$/;"	d
state	sh.asm	/^      state = 0;$/;"	d
state	sh.asm	/^  state = 0;$/;"	d
state	stressfs.asm	/^        state = '%';$/;"	d
state	stressfs.asm	/^      state = 0;$/;"	d
state	stressfs.asm	/^  state = 0;$/;"	d
state	usertests.asm	/^        state = '%';$/;"	d
state	usertests.asm	/^      state = 0;$/;"	d
state	usertests.asm	/^  state = 0;$/;"	d
state	wc.asm	/^        state = '%';$/;"	d
state	wc.asm	/^      state = 0;$/;"	d
state	wc.asm	/^  state = 0;$/;"	d
state	zombie.asm	/^        state = '%';$/;"	d
state	zombie.asm	/^      state = 0;$/;"	d
state	zombie.asm	/^  state = 0;$/;"	d
stati	fs.c	/^stati(struct inode *ip, struct stat *st)$/;"	f
static	cat.asm	/^static Header *freep;$/;"	l
static	cat.asm	/^static Header base;$/;"	l
static	cat.asm	/^static Header*$/;"	l
static	cat.asm	/^static inline void$/;"	l
static	cat.asm	/^static void$/;"	l
static	echo.asm	/^static Header *freep;$/;"	l
static	echo.asm	/^static Header base;$/;"	l
static	echo.asm	/^static Header*$/;"	l
static	echo.asm	/^static inline void$/;"	l
static	echo.asm	/^static void$/;"	l
static	forktest.asm	/^static inline void$/;"	l
static	grep.asm	/^static Header *freep;$/;"	l
static	grep.asm	/^static Header base;$/;"	l
static	grep.asm	/^static Header*$/;"	l
static	grep.asm	/^static inline void$/;"	l
static	grep.asm	/^static void$/;"	l
static	init.asm	/^static Header *freep;$/;"	l
static	init.asm	/^static Header base;$/;"	l
static	init.asm	/^static Header*$/;"	l
static	init.asm	/^static inline void$/;"	l
static	init.asm	/^static void$/;"	l
static	kernel.asm	/^static addr_t$/;"	l
static	kernel.asm	/^static char digits[] = "0123456789abcdef";$/;"	l
static	kernel.asm	/^static char*$/;"	l
static	kernel.asm	/^static inline addr_t v2p(void *a) {$/;"	l
static	kernel.asm	/^static inline addr_t$/;"	l
static	kernel.asm	/^static inline uchar$/;"	l
static	kernel.asm	/^static inline uint$/;"	l
static	kernel.asm	/^static inline void$/;"	l
static	kernel.asm	/^static int uart;    \/\/ is there a uart?$/;"	l
static	kernel.asm	/^static int$/;"	l
static	kernel.asm	/^static pde_t *kpdpt;$/;"	l
static	kernel.asm	/^static pde_t *kpml4;$/;"	l
static	kernel.asm	/^static pte_t *$/;"	l
static	kernel.asm	/^static struct buf*$/;"	t
static	kernel.asm	/^static struct inode*$/;"	t
static	kernel.asm	/^static struct mp*$/;"	t
static	kernel.asm	/^static struct mpconf*$/;"	t
static	kernel.asm	/^static struct proc*$/;"	t
static	kernel.asm	/^static uchar$/;"	l
static	kernel.asm	/^static uint cmos_read(uint reg)$/;"	l
static	kernel.asm	/^static uint$/;"	l
static	kernel.asm	/^static ushort *crt = (ushort*)P2V(0xb8000);  \/\/ CGA memory$/;"	l
static	kernel.asm	/^static void $/;"	l
static	kernel.asm	/^static void commit();$/;"	l
static	kernel.asm	/^static void fill_rtcdate(struct rtcdate *r)$/;"	l
static	kernel.asm	/^static void idestart(struct buf*);$/;"	l
static	kernel.asm	/^static void recover_from_log(void);$/;"	l
static	kernel.asm	/^static void$/;"	l
static	kill.asm	/^static Header *freep;$/;"	l
static	kill.asm	/^static Header base;$/;"	l
static	kill.asm	/^static Header*$/;"	l
static	kill.asm	/^static inline void$/;"	l
static	kill.asm	/^static void$/;"	l
static	ln.asm	/^static Header *freep;$/;"	l
static	ln.asm	/^static Header base;$/;"	l
static	ln.asm	/^static Header*$/;"	l
static	ln.asm	/^static inline void$/;"	l
static	ln.asm	/^static void$/;"	l
static	ls.asm	/^static Header *freep;$/;"	l
static	ls.asm	/^static Header base;$/;"	l
static	ls.asm	/^static Header*$/;"	l
static	ls.asm	/^static inline void$/;"	l
static	ls.asm	/^static void$/;"	l
static	mkdir.asm	/^static Header *freep;$/;"	l
static	mkdir.asm	/^static Header base;$/;"	l
static	mkdir.asm	/^static Header*$/;"	l
static	mkdir.asm	/^static inline void$/;"	l
static	mkdir.asm	/^static void$/;"	l
static	mount.asm	/^static Header *freep;$/;"	l
static	mount.asm	/^static Header base;$/;"	l
static	mount.asm	/^static Header*$/;"	l
static	mount.asm	/^static inline void$/;"	l
static	mount.asm	/^static void$/;"	l
static	rm.asm	/^static Header *freep;$/;"	l
static	rm.asm	/^static Header base;$/;"	l
static	rm.asm	/^static Header*$/;"	l
static	rm.asm	/^static inline void$/;"	l
static	rm.asm	/^static void$/;"	l
static	sh.asm	/^static Header *freep;$/;"	l
static	sh.asm	/^static Header base;$/;"	l
static	sh.asm	/^static Header*$/;"	l
static	sh.asm	/^static inline void$/;"	l
static	sh.asm	/^static void$/;"	l
static	stressfs.asm	/^static Header *freep;$/;"	l
static	stressfs.asm	/^static Header base;$/;"	l
static	stressfs.asm	/^static Header*$/;"	l
static	stressfs.asm	/^static inline void$/;"	l
static	stressfs.asm	/^static void$/;"	l
static	usertests.asm	/^static Header *freep;$/;"	l
static	usertests.asm	/^static Header base;$/;"	l
static	usertests.asm	/^static Header*$/;"	l
static	usertests.asm	/^static inline void$/;"	l
static	usertests.asm	/^static void$/;"	l
static	wc.asm	/^static Header *freep;$/;"	l
static	wc.asm	/^static Header base;$/;"	l
static	wc.asm	/^static Header*$/;"	l
static	wc.asm	/^static inline void$/;"	l
static	wc.asm	/^static void$/;"	l
static	zombie.asm	/^static Header *freep;$/;"	l
static	zombie.asm	/^static Header base;$/;"	l
static	zombie.asm	/^static Header*$/;"	l
static	zombie.asm	/^static inline void$/;"	l
static	zombie.asm	/^static void$/;"	l
static_assert	mkfs.c	15;"	d	file:
stdout	usertests.c	/^int stdout = 1;$/;"	v
sti	x86.h	/^sti(void)$/;"	f
stosb	x86.h	/^stosb(void *addr, int data, int cnt)$/;"	f
stosl	x86.h	/^stosl(void *addr, int data, int cnt)$/;"	f
strchr	ulib.c	/^strchr(const char *s, char c)$/;"	f
strcmp	ulib.c	/^strcmp(const char *p, const char *q)$/;"	f
strcpy	ulib.c	/^strcpy(char *s, char *t)$/;"	f
strlen	string.c	/^strlen(const char *s)$/;"	f
strlen	ulib.c	/^strlen(char *s)$/;"	f
strncmp	string.c	/^strncmp(const char *p, const char *q, uint n)$/;"	f
strncpy	string.c	/^strncpy(char *s, const char *t, int n)$/;"	f
struct	kernel.asm	/^  struct proc *np;$/;"	l
struct	kernel.asm	/^  struct proc *p;$/;"	l
subdir	usertests.c	/^subdir(void)$/;"	f
sum	kernel.asm	/^  sum = 0;$/;"	d
sum	mp.c	/^sum(uchar *addr, int len)$/;"	f	file:
superblock	fs.h	/^struct superblock {$/;"	s
switchkvm	vm.c	/^switchkvm(void)$/;"	f
switchuvm	vm.c	/^switchuvm(struct proc *p)$/;"	f
swtch	kernel.asm	/^swtch:$/;"	l
swtch	swtch.S	/^swtch:$/;"	l
symbols	sh.c	/^char symbols[] = "<|>&;()";$/;"	v
sys_chdir	sysfile.c	/^sys_chdir(void)$/;"	f
sys_close	sysfile.c	/^sys_close(void)$/;"	f
sys_dup	sysfile.c	/^sys_dup(void)$/;"	f
sys_exec	sysfile.c	/^sys_exec(void)$/;"	f
sys_exit	sysproc.c	/^sys_exit(void)$/;"	f
sys_fork	sysproc.c	/^sys_fork(void)$/;"	f
sys_fstat	sysfile.c	/^sys_fstat(void)$/;"	f
sys_getpid	sysproc.c	/^sys_getpid(void)$/;"	f
sys_kill	sysproc.c	/^sys_kill(void)$/;"	f
sys_link	sysfile.c	/^sys_link(void)$/;"	f
sys_mkdir	sysfile.c	/^sys_mkdir(void)$/;"	f
sys_mknod	sysfile.c	/^sys_mknod(void)$/;"	f
sys_mount	sysproc.c	/^sys_mount(void)$/;"	f
sys_open	sysfile.c	/^sys_open(void)$/;"	f
sys_pipe	sysfile.c	/^sys_pipe(void)$/;"	f
sys_read	sysfile.c	/^sys_read(void)$/;"	f
sys_sbrk	sysproc.c	/^sys_sbrk(void)$/;"	f
sys_sleep	sysproc.c	/^sys_sleep(void)$/;"	f
sys_unlink	sysfile.c	/^sys_unlink(void)$/;"	f
sys_uptime	sysproc.c	/^sys_uptime(void)$/;"	f
sys_wait	sysproc.c	/^sys_wait(void)$/;"	f
sys_write	sysfile.c	/^sys_write(void)$/;"	f
syscall	syscall.c	/^syscall(void)$/;"	f
syscall_entry	entry.S	/^syscall_entry:$/;"	l
syscall_trap	kernel.asm	/^syscall_trap:$/;"	l
syscall_trap	trapasm.S	/^syscall_trap:$/;"	l
syscall_trapret	kernel.asm	/^syscall_trapret:$/;"	l
syscall_trapret	trapasm.S	/^syscall_trapret:$/;"	l
syscallinit	vm.c	/^syscallinit(void)$/;"	f
syscalls	syscall.c	/^static addr_t (*syscalls[])(void) = {$/;"	v	file:
sz	kernel.asm	/^  sz = 0;$/;"	d
sz	kernel.asm	/^  sz = PGROUNDUP(sz);$/;"	d
sz	kernel.asm	/^  sz = proc->sz;$/;"	d
sz	proc.h	/^  addr_t sz;                     \/\/ Size of process memory (bytes)$/;"	m	struct:proc
t	mmu.h	/^  ushort t;          \/\/ Trap on task switch$/;"	m	struct:taskstate
target	kernel.asm	/^  target = n;$/;"	d
taskstate	mmu.h	/^struct taskstate {$/;"	s
tf	proc.h	/^  struct trapframe *tf;        \/\/ Trap frame for current syscall$/;"	m	struct:proc	typeref:struct:proc::trapframe
ticks	trap.c	/^uint ticks;$/;"	v
ticks0	kernel.asm	/^  ticks0 = ticks;$/;"	d
tickslock	trap.c	/^struct spinlock tickslock;$/;"	v	typeref:struct:spinlock
togglecode	kbd.h	/^static uchar togglecode[256] =$/;"	v
tok	sh.asm	/^    tok = gettoken(ps, es, 0, 0);$/;"	d
total	usertests.asm	/^    total = 0;$/;"	d
total	usertests.asm	/^  total = 0;$/;"	d
trap	trap.c	/^trap(struct trapframe *tf)$/;"	f
trapframe	x86.h	/^struct trapframe {$/;"	s
trapno	x86.h	/^   uint64 trapno;$/;"	m	struct:trapframe
trapret	kernel.asm	/^trapret:$/;"	l
trapret	trapasm.S	/^trapret:$/;"	l
ts	proc.h	/^  struct taskstate ts;         \/\/ Used by x86 to find stack for interrupt$/;"	m	struct:cpu	typeref:struct:cpu::taskstate
tss	kernel.asm	/^  tss = (uint*) (((char*) cpu->local) + 1024);$/;"	d
tss	kernel.asm	/^  tss = (uint*) (((char*) local) + 1024);$/;"	d
tss_set_rsp	vm.c	/^tss_set_rsp(uint *tss, uint n, uint64 rsp) {$/;"	f	file:
tvinit	trap.c	/^void tvinit(void) {$/;"	f
type	elf.h	/^  uint32 type;$/;"	m	struct:proghdr
type	elf.h	/^  ushort type;$/;"	m	struct:elfhdr
type	file.h	/^  enum { FD_NONE, FD_PIPE, FD_INODE } type;$/;"	m	struct:file	typeref:enum:file::__anon3
type	file.h	/^  short type;         \/\/ copy of disk inode$/;"	m	struct:inode
type	fs.h	/^  short type;           \/\/ File type$/;"	m	struct:dinode
type	mmu.h	/^  uint type : 4;        \/\/ type(STS_{TG,IG32,TG32})$/;"	m	struct:gatedesc
type	mmu.h	/^  uint type : 4;       \/\/ Segment type (see STS_ constants)$/;"	m	struct:segdesc
type	mp.h	/^  uchar type;                   \/\/ MP system config type$/;"	m	struct:mp
type	mp.h	/^  uchar type;                   \/\/ entry type (0)$/;"	m	struct:mpproc
type	mp.h	/^  uchar type;                   \/\/ entry type (2)$/;"	m	struct:mpioapic
type	sh.c	/^  int type;$/;"	m	struct:backcmd	file:
type	sh.c	/^  int type;$/;"	m	struct:cmd	file:
type	sh.c	/^  int type;$/;"	m	struct:execcmd	file:
type	sh.c	/^  int type;$/;"	m	struct:listcmd	file:
type	sh.c	/^  int type;$/;"	m	struct:pipecmd	file:
type	sh.c	/^  int type;$/;"	m	struct:redircmd	file:
type	stat.h	/^  short type;  \/\/ Type of file$/;"	m	struct:stat
uart	kernel.asm	/^  uart = 1;$/;"	d
uart	uart.c	/^static int uart;    \/\/ is there a uart?$/;"	v	file:
uartearlyinit	uart.c	/^uartearlyinit(void)$/;"	f
uartgetc	uart.c	/^uartgetc(void)$/;"	f	file:
uartinit	uart.c	/^uartinit(void)$/;"	f
uartintr	uart.c	/^uartintr(void)$/;"	f
uartputc	uart.c	/^uartputc(int c)$/;"	f
uchar	kernel.asm	/^uchar ioapicid;$/;"	l
uchar	types.h	/^typedef unsigned char  uchar;$/;"	t
uint	cat.asm	/^uint$/;"	l
uint	echo.asm	/^uint$/;"	l
uint	forktest.asm	/^uint$/;"	l
uint	grep.asm	/^uint$/;"	l
uint	init.asm	/^uint$/;"	l
uint	kernel.asm	/^uint ticks;$/;"	l
uint	kernel.asm	/^uint$/;"	l
uint	kill.asm	/^uint$/;"	l
uint	ln.asm	/^uint$/;"	l
uint	ls.asm	/^uint$/;"	l
uint	mkdir.asm	/^uint$/;"	l
uint	mount.asm	/^uint$/;"	l
uint	rm.asm	/^uint$/;"	l
uint	sh.asm	/^uint$/;"	l
uint	stressfs.asm	/^uint$/;"	l
uint	types.h	/^typedef unsigned int   uint;$/;"	t
uint	usertests.asm	/^uint$/;"	l
uint	wc.asm	/^uint$/;"	l
uint	zombie.asm	/^uint$/;"	l
uint32	types.h	/^typedef unsigned int  uint32;$/;"	t
uint64	types.h	/^typedef unsigned long uint64;$/;"	t
uio	usertests.c	/^uio()$/;"	f
uninit	usertests.c	/^char uninit[10000];$/;"	v
unlinkread	usertests.c	/^unlinkread(void)$/;"	f
unsigned	usertests.asm	/^unsigned int$/;"	l
unsigned	usertests.asm	/^unsigned long randstate = 1;$/;"	l
updateprocfiles	procfs.c	/^updateprocfiles()$/;"	f	file:
use_lock	kalloc.c	/^  int use_lock;$/;"	m	struct:__anon6	file:
userinit	proc.c	/^userinit(void)$/;"	f
ushort	types.h	/^typedef unsigned short ushort;$/;"	t
uva2ka	vm.c	/^uva2ka(pde_t *pgdir, char *uva)$/;"	f
v2p	memlayout.h	/^static inline addr_t v2p(void *a) {$/;"	f
va	kernel.asm	/^    va = va0 + PGSIZE;$/;"	d
va0	kernel.asm	/^    va0 = (uint)PGROUNDDOWN(va);$/;"	d
vaddr	elf.h	/^  uint64 vaddr;$/;"	m	struct:proghdr
val	usertests.asm	/^    val = 0x09;  \/* year *\/$/;"	d
validateint	usertests.c	/^validateint(int *p)$/;"	f
validatetest	usertests.c	/^validatetest(void)$/;"	f
vector0	kernel.asm	/^vector0:$/;"	l
vector0	vectors.S	/^vector0:$/;"	l
vector1	kernel.asm	/^vector1:$/;"	l
vector1	vectors.S	/^vector1:$/;"	l
vector10	kernel.asm	/^vector10:$/;"	l
vector10	vectors.S	/^vector10:$/;"	l
vector100	kernel.asm	/^vector100:$/;"	l
vector100	vectors.S	/^vector100:$/;"	l
vector101	kernel.asm	/^vector101:$/;"	l
vector101	vectors.S	/^vector101:$/;"	l
vector102	kernel.asm	/^vector102:$/;"	l
vector102	vectors.S	/^vector102:$/;"	l
vector103	kernel.asm	/^vector103:$/;"	l
vector103	vectors.S	/^vector103:$/;"	l
vector104	kernel.asm	/^vector104:$/;"	l
vector104	vectors.S	/^vector104:$/;"	l
vector105	kernel.asm	/^vector105:$/;"	l
vector105	vectors.S	/^vector105:$/;"	l
vector106	kernel.asm	/^vector106:$/;"	l
vector106	vectors.S	/^vector106:$/;"	l
vector107	kernel.asm	/^vector107:$/;"	l
vector107	vectors.S	/^vector107:$/;"	l
vector108	kernel.asm	/^vector108:$/;"	l
vector108	vectors.S	/^vector108:$/;"	l
vector109	kernel.asm	/^vector109:$/;"	l
vector109	vectors.S	/^vector109:$/;"	l
vector11	kernel.asm	/^vector11:$/;"	l
vector11	vectors.S	/^vector11:$/;"	l
vector110	kernel.asm	/^vector110:$/;"	l
vector110	vectors.S	/^vector110:$/;"	l
vector111	kernel.asm	/^vector111:$/;"	l
vector111	vectors.S	/^vector111:$/;"	l
vector112	kernel.asm	/^vector112:$/;"	l
vector112	vectors.S	/^vector112:$/;"	l
vector113	kernel.asm	/^vector113:$/;"	l
vector113	vectors.S	/^vector113:$/;"	l
vector114	kernel.asm	/^vector114:$/;"	l
vector114	vectors.S	/^vector114:$/;"	l
vector115	kernel.asm	/^vector115:$/;"	l
vector115	vectors.S	/^vector115:$/;"	l
vector116	kernel.asm	/^vector116:$/;"	l
vector116	vectors.S	/^vector116:$/;"	l
vector117	kernel.asm	/^vector117:$/;"	l
vector117	vectors.S	/^vector117:$/;"	l
vector118	kernel.asm	/^vector118:$/;"	l
vector118	vectors.S	/^vector118:$/;"	l
vector119	kernel.asm	/^vector119:$/;"	l
vector119	vectors.S	/^vector119:$/;"	l
vector12	kernel.asm	/^vector12:$/;"	l
vector12	vectors.S	/^vector12:$/;"	l
vector120	kernel.asm	/^vector120:$/;"	l
vector120	vectors.S	/^vector120:$/;"	l
vector121	kernel.asm	/^vector121:$/;"	l
vector121	vectors.S	/^vector121:$/;"	l
vector122	kernel.asm	/^vector122:$/;"	l
vector122	vectors.S	/^vector122:$/;"	l
vector123	kernel.asm	/^vector123:$/;"	l
vector123	vectors.S	/^vector123:$/;"	l
vector124	kernel.asm	/^vector124:$/;"	l
vector124	vectors.S	/^vector124:$/;"	l
vector125	kernel.asm	/^vector125:$/;"	l
vector125	vectors.S	/^vector125:$/;"	l
vector126	kernel.asm	/^vector126:$/;"	l
vector126	vectors.S	/^vector126:$/;"	l
vector127	kernel.asm	/^vector127:$/;"	l
vector127	vectors.S	/^vector127:$/;"	l
vector128	kernel.asm	/^vector128:$/;"	l
vector128	vectors.S	/^vector128:$/;"	l
vector129	kernel.asm	/^vector129:$/;"	l
vector129	vectors.S	/^vector129:$/;"	l
vector13	kernel.asm	/^vector13:$/;"	l
vector13	vectors.S	/^vector13:$/;"	l
vector130	kernel.asm	/^vector130:$/;"	l
vector130	vectors.S	/^vector130:$/;"	l
vector131	kernel.asm	/^vector131:$/;"	l
vector131	vectors.S	/^vector131:$/;"	l
vector132	kernel.asm	/^vector132:$/;"	l
vector132	vectors.S	/^vector132:$/;"	l
vector133	kernel.asm	/^vector133:$/;"	l
vector133	vectors.S	/^vector133:$/;"	l
vector134	kernel.asm	/^vector134:$/;"	l
vector134	vectors.S	/^vector134:$/;"	l
vector135	kernel.asm	/^vector135:$/;"	l
vector135	vectors.S	/^vector135:$/;"	l
vector136	kernel.asm	/^vector136:$/;"	l
vector136	vectors.S	/^vector136:$/;"	l
vector137	kernel.asm	/^vector137:$/;"	l
vector137	vectors.S	/^vector137:$/;"	l
vector138	kernel.asm	/^vector138:$/;"	l
vector138	vectors.S	/^vector138:$/;"	l
vector139	kernel.asm	/^vector139:$/;"	l
vector139	vectors.S	/^vector139:$/;"	l
vector14	kernel.asm	/^vector14:$/;"	l
vector14	vectors.S	/^vector14:$/;"	l
vector140	kernel.asm	/^vector140:$/;"	l
vector140	vectors.S	/^vector140:$/;"	l
vector141	kernel.asm	/^vector141:$/;"	l
vector141	vectors.S	/^vector141:$/;"	l
vector142	kernel.asm	/^vector142:$/;"	l
vector142	vectors.S	/^vector142:$/;"	l
vector143	kernel.asm	/^vector143:$/;"	l
vector143	vectors.S	/^vector143:$/;"	l
vector144	kernel.asm	/^vector144:$/;"	l
vector144	vectors.S	/^vector144:$/;"	l
vector145	kernel.asm	/^vector145:$/;"	l
vector145	vectors.S	/^vector145:$/;"	l
vector146	kernel.asm	/^vector146:$/;"	l
vector146	vectors.S	/^vector146:$/;"	l
vector147	kernel.asm	/^vector147:$/;"	l
vector147	vectors.S	/^vector147:$/;"	l
vector148	kernel.asm	/^vector148:$/;"	l
vector148	vectors.S	/^vector148:$/;"	l
vector149	kernel.asm	/^vector149:$/;"	l
vector149	vectors.S	/^vector149:$/;"	l
vector15	kernel.asm	/^vector15:$/;"	l
vector15	vectors.S	/^vector15:$/;"	l
vector150	kernel.asm	/^vector150:$/;"	l
vector150	vectors.S	/^vector150:$/;"	l
vector151	kernel.asm	/^vector151:$/;"	l
vector151	vectors.S	/^vector151:$/;"	l
vector152	kernel.asm	/^vector152:$/;"	l
vector152	vectors.S	/^vector152:$/;"	l
vector153	kernel.asm	/^vector153:$/;"	l
vector153	vectors.S	/^vector153:$/;"	l
vector154	kernel.asm	/^vector154:$/;"	l
vector154	vectors.S	/^vector154:$/;"	l
vector155	kernel.asm	/^vector155:$/;"	l
vector155	vectors.S	/^vector155:$/;"	l
vector156	kernel.asm	/^vector156:$/;"	l
vector156	vectors.S	/^vector156:$/;"	l
vector157	kernel.asm	/^vector157:$/;"	l
vector157	vectors.S	/^vector157:$/;"	l
vector158	kernel.asm	/^vector158:$/;"	l
vector158	vectors.S	/^vector158:$/;"	l
vector159	kernel.asm	/^vector159:$/;"	l
vector159	vectors.S	/^vector159:$/;"	l
vector16	kernel.asm	/^vector16:$/;"	l
vector16	vectors.S	/^vector16:$/;"	l
vector160	kernel.asm	/^vector160:$/;"	l
vector160	vectors.S	/^vector160:$/;"	l
vector161	kernel.asm	/^vector161:$/;"	l
vector161	vectors.S	/^vector161:$/;"	l
vector162	kernel.asm	/^vector162:$/;"	l
vector162	vectors.S	/^vector162:$/;"	l
vector163	kernel.asm	/^vector163:$/;"	l
vector163	vectors.S	/^vector163:$/;"	l
vector164	kernel.asm	/^vector164:$/;"	l
vector164	vectors.S	/^vector164:$/;"	l
vector165	kernel.asm	/^vector165:$/;"	l
vector165	vectors.S	/^vector165:$/;"	l
vector166	kernel.asm	/^vector166:$/;"	l
vector166	vectors.S	/^vector166:$/;"	l
vector167	kernel.asm	/^vector167:$/;"	l
vector167	vectors.S	/^vector167:$/;"	l
vector168	kernel.asm	/^vector168:$/;"	l
vector168	vectors.S	/^vector168:$/;"	l
vector169	kernel.asm	/^vector169:$/;"	l
vector169	vectors.S	/^vector169:$/;"	l
vector17	kernel.asm	/^vector17:$/;"	l
vector17	vectors.S	/^vector17:$/;"	l
vector170	kernel.asm	/^vector170:$/;"	l
vector170	vectors.S	/^vector170:$/;"	l
vector171	kernel.asm	/^vector171:$/;"	l
vector171	vectors.S	/^vector171:$/;"	l
vector172	kernel.asm	/^vector172:$/;"	l
vector172	vectors.S	/^vector172:$/;"	l
vector173	kernel.asm	/^vector173:$/;"	l
vector173	vectors.S	/^vector173:$/;"	l
vector174	kernel.asm	/^vector174:$/;"	l
vector174	vectors.S	/^vector174:$/;"	l
vector175	kernel.asm	/^vector175:$/;"	l
vector175	vectors.S	/^vector175:$/;"	l
vector176	kernel.asm	/^vector176:$/;"	l
vector176	vectors.S	/^vector176:$/;"	l
vector177	kernel.asm	/^vector177:$/;"	l
vector177	vectors.S	/^vector177:$/;"	l
vector178	kernel.asm	/^vector178:$/;"	l
vector178	vectors.S	/^vector178:$/;"	l
vector179	kernel.asm	/^vector179:$/;"	l
vector179	vectors.S	/^vector179:$/;"	l
vector18	kernel.asm	/^vector18:$/;"	l
vector18	vectors.S	/^vector18:$/;"	l
vector180	kernel.asm	/^vector180:$/;"	l
vector180	vectors.S	/^vector180:$/;"	l
vector181	kernel.asm	/^vector181:$/;"	l
vector181	vectors.S	/^vector181:$/;"	l
vector182	kernel.asm	/^vector182:$/;"	l
vector182	vectors.S	/^vector182:$/;"	l
vector183	kernel.asm	/^vector183:$/;"	l
vector183	vectors.S	/^vector183:$/;"	l
vector184	kernel.asm	/^vector184:$/;"	l
vector184	vectors.S	/^vector184:$/;"	l
vector185	kernel.asm	/^vector185:$/;"	l
vector185	vectors.S	/^vector185:$/;"	l
vector186	kernel.asm	/^vector186:$/;"	l
vector186	vectors.S	/^vector186:$/;"	l
vector187	kernel.asm	/^vector187:$/;"	l
vector187	vectors.S	/^vector187:$/;"	l
vector188	kernel.asm	/^vector188:$/;"	l
vector188	vectors.S	/^vector188:$/;"	l
vector189	kernel.asm	/^vector189:$/;"	l
vector189	vectors.S	/^vector189:$/;"	l
vector19	kernel.asm	/^vector19:$/;"	l
vector19	vectors.S	/^vector19:$/;"	l
vector190	kernel.asm	/^vector190:$/;"	l
vector190	vectors.S	/^vector190:$/;"	l
vector191	kernel.asm	/^vector191:$/;"	l
vector191	vectors.S	/^vector191:$/;"	l
vector192	kernel.asm	/^vector192:$/;"	l
vector192	vectors.S	/^vector192:$/;"	l
vector193	kernel.asm	/^vector193:$/;"	l
vector193	vectors.S	/^vector193:$/;"	l
vector194	kernel.asm	/^vector194:$/;"	l
vector194	vectors.S	/^vector194:$/;"	l
vector195	kernel.asm	/^vector195:$/;"	l
vector195	vectors.S	/^vector195:$/;"	l
vector196	kernel.asm	/^vector196:$/;"	l
vector196	vectors.S	/^vector196:$/;"	l
vector197	kernel.asm	/^vector197:$/;"	l
vector197	vectors.S	/^vector197:$/;"	l
vector198	kernel.asm	/^vector198:$/;"	l
vector198	vectors.S	/^vector198:$/;"	l
vector199	kernel.asm	/^vector199:$/;"	l
vector199	vectors.S	/^vector199:$/;"	l
vector2	kernel.asm	/^vector2:$/;"	l
vector2	vectors.S	/^vector2:$/;"	l
vector20	kernel.asm	/^vector20:$/;"	l
vector20	vectors.S	/^vector20:$/;"	l
vector200	kernel.asm	/^vector200:$/;"	l
vector200	vectors.S	/^vector200:$/;"	l
vector201	kernel.asm	/^vector201:$/;"	l
vector201	vectors.S	/^vector201:$/;"	l
vector202	kernel.asm	/^vector202:$/;"	l
vector202	vectors.S	/^vector202:$/;"	l
vector203	kernel.asm	/^vector203:$/;"	l
vector203	vectors.S	/^vector203:$/;"	l
vector204	kernel.asm	/^vector204:$/;"	l
vector204	vectors.S	/^vector204:$/;"	l
vector205	kernel.asm	/^vector205:$/;"	l
vector205	vectors.S	/^vector205:$/;"	l
vector206	kernel.asm	/^vector206:$/;"	l
vector206	vectors.S	/^vector206:$/;"	l
vector207	kernel.asm	/^vector207:$/;"	l
vector207	vectors.S	/^vector207:$/;"	l
vector208	kernel.asm	/^vector208:$/;"	l
vector208	vectors.S	/^vector208:$/;"	l
vector209	kernel.asm	/^vector209:$/;"	l
vector209	vectors.S	/^vector209:$/;"	l
vector21	kernel.asm	/^vector21:$/;"	l
vector21	vectors.S	/^vector21:$/;"	l
vector210	kernel.asm	/^vector210:$/;"	l
vector210	vectors.S	/^vector210:$/;"	l
vector211	kernel.asm	/^vector211:$/;"	l
vector211	vectors.S	/^vector211:$/;"	l
vector212	kernel.asm	/^vector212:$/;"	l
vector212	vectors.S	/^vector212:$/;"	l
vector213	kernel.asm	/^vector213:$/;"	l
vector213	vectors.S	/^vector213:$/;"	l
vector214	kernel.asm	/^vector214:$/;"	l
vector214	vectors.S	/^vector214:$/;"	l
vector215	kernel.asm	/^vector215:$/;"	l
vector215	vectors.S	/^vector215:$/;"	l
vector216	kernel.asm	/^vector216:$/;"	l
vector216	vectors.S	/^vector216:$/;"	l
vector217	kernel.asm	/^vector217:$/;"	l
vector217	vectors.S	/^vector217:$/;"	l
vector218	kernel.asm	/^vector218:$/;"	l
vector218	vectors.S	/^vector218:$/;"	l
vector219	kernel.asm	/^vector219:$/;"	l
vector219	vectors.S	/^vector219:$/;"	l
vector22	kernel.asm	/^vector22:$/;"	l
vector22	vectors.S	/^vector22:$/;"	l
vector220	kernel.asm	/^vector220:$/;"	l
vector220	vectors.S	/^vector220:$/;"	l
vector221	kernel.asm	/^vector221:$/;"	l
vector221	vectors.S	/^vector221:$/;"	l
vector222	kernel.asm	/^vector222:$/;"	l
vector222	vectors.S	/^vector222:$/;"	l
vector223	kernel.asm	/^vector223:$/;"	l
vector223	vectors.S	/^vector223:$/;"	l
vector224	kernel.asm	/^vector224:$/;"	l
vector224	vectors.S	/^vector224:$/;"	l
vector225	kernel.asm	/^vector225:$/;"	l
vector225	vectors.S	/^vector225:$/;"	l
vector226	kernel.asm	/^vector226:$/;"	l
vector226	vectors.S	/^vector226:$/;"	l
vector227	kernel.asm	/^vector227:$/;"	l
vector227	vectors.S	/^vector227:$/;"	l
vector228	kernel.asm	/^vector228:$/;"	l
vector228	vectors.S	/^vector228:$/;"	l
vector229	kernel.asm	/^vector229:$/;"	l
vector229	vectors.S	/^vector229:$/;"	l
vector23	kernel.asm	/^vector23:$/;"	l
vector23	vectors.S	/^vector23:$/;"	l
vector230	kernel.asm	/^vector230:$/;"	l
vector230	vectors.S	/^vector230:$/;"	l
vector231	kernel.asm	/^vector231:$/;"	l
vector231	vectors.S	/^vector231:$/;"	l
vector232	kernel.asm	/^vector232:$/;"	l
vector232	vectors.S	/^vector232:$/;"	l
vector233	kernel.asm	/^vector233:$/;"	l
vector233	vectors.S	/^vector233:$/;"	l
vector234	kernel.asm	/^vector234:$/;"	l
vector234	vectors.S	/^vector234:$/;"	l
vector235	kernel.asm	/^vector235:$/;"	l
vector235	vectors.S	/^vector235:$/;"	l
vector236	kernel.asm	/^vector236:$/;"	l
vector236	vectors.S	/^vector236:$/;"	l
vector237	kernel.asm	/^vector237:$/;"	l
vector237	vectors.S	/^vector237:$/;"	l
vector238	kernel.asm	/^vector238:$/;"	l
vector238	vectors.S	/^vector238:$/;"	l
vector239	kernel.asm	/^vector239:$/;"	l
vector239	vectors.S	/^vector239:$/;"	l
vector24	kernel.asm	/^vector24:$/;"	l
vector24	vectors.S	/^vector24:$/;"	l
vector240	kernel.asm	/^vector240:$/;"	l
vector240	vectors.S	/^vector240:$/;"	l
vector241	kernel.asm	/^vector241:$/;"	l
vector241	vectors.S	/^vector241:$/;"	l
vector242	kernel.asm	/^vector242:$/;"	l
vector242	vectors.S	/^vector242:$/;"	l
vector243	kernel.asm	/^vector243:$/;"	l
vector243	vectors.S	/^vector243:$/;"	l
vector244	kernel.asm	/^vector244:$/;"	l
vector244	vectors.S	/^vector244:$/;"	l
vector245	kernel.asm	/^vector245:$/;"	l
vector245	vectors.S	/^vector245:$/;"	l
vector246	kernel.asm	/^vector246:$/;"	l
vector246	vectors.S	/^vector246:$/;"	l
vector247	kernel.asm	/^vector247:$/;"	l
vector247	vectors.S	/^vector247:$/;"	l
vector248	kernel.asm	/^vector248:$/;"	l
vector248	vectors.S	/^vector248:$/;"	l
vector249	kernel.asm	/^vector249:$/;"	l
vector249	vectors.S	/^vector249:$/;"	l
vector25	kernel.asm	/^vector25:$/;"	l
vector25	vectors.S	/^vector25:$/;"	l
vector250	kernel.asm	/^vector250:$/;"	l
vector250	vectors.S	/^vector250:$/;"	l
vector251	kernel.asm	/^vector251:$/;"	l
vector251	vectors.S	/^vector251:$/;"	l
vector252	kernel.asm	/^vector252:$/;"	l
vector252	vectors.S	/^vector252:$/;"	l
vector253	kernel.asm	/^vector253:$/;"	l
vector253	vectors.S	/^vector253:$/;"	l
vector254	kernel.asm	/^vector254:$/;"	l
vector254	vectors.S	/^vector254:$/;"	l
vector255	kernel.asm	/^vector255:$/;"	l
vector255	vectors.S	/^vector255:$/;"	l
vector26	kernel.asm	/^vector26:$/;"	l
vector26	vectors.S	/^vector26:$/;"	l
vector27	kernel.asm	/^vector27:$/;"	l
vector27	vectors.S	/^vector27:$/;"	l
vector28	kernel.asm	/^vector28:$/;"	l
vector28	vectors.S	/^vector28:$/;"	l
vector29	kernel.asm	/^vector29:$/;"	l
vector29	vectors.S	/^vector29:$/;"	l
vector3	kernel.asm	/^vector3:$/;"	l
vector3	vectors.S	/^vector3:$/;"	l
vector30	kernel.asm	/^vector30:$/;"	l
vector30	vectors.S	/^vector30:$/;"	l
vector31	kernel.asm	/^vector31:$/;"	l
vector31	vectors.S	/^vector31:$/;"	l
vector32	kernel.asm	/^vector32:$/;"	l
vector32	vectors.S	/^vector32:$/;"	l
vector33	kernel.asm	/^vector33:$/;"	l
vector33	vectors.S	/^vector33:$/;"	l
vector34	kernel.asm	/^vector34:$/;"	l
vector34	vectors.S	/^vector34:$/;"	l
vector35	kernel.asm	/^vector35:$/;"	l
vector35	vectors.S	/^vector35:$/;"	l
vector36	kernel.asm	/^vector36:$/;"	l
vector36	vectors.S	/^vector36:$/;"	l
vector37	kernel.asm	/^vector37:$/;"	l
vector37	vectors.S	/^vector37:$/;"	l
vector38	kernel.asm	/^vector38:$/;"	l
vector38	vectors.S	/^vector38:$/;"	l
vector39	kernel.asm	/^vector39:$/;"	l
vector39	vectors.S	/^vector39:$/;"	l
vector4	kernel.asm	/^vector4:$/;"	l
vector4	vectors.S	/^vector4:$/;"	l
vector40	kernel.asm	/^vector40:$/;"	l
vector40	vectors.S	/^vector40:$/;"	l
vector41	kernel.asm	/^vector41:$/;"	l
vector41	vectors.S	/^vector41:$/;"	l
vector42	kernel.asm	/^vector42:$/;"	l
vector42	vectors.S	/^vector42:$/;"	l
vector43	kernel.asm	/^vector43:$/;"	l
vector43	vectors.S	/^vector43:$/;"	l
vector44	kernel.asm	/^vector44:$/;"	l
vector44	vectors.S	/^vector44:$/;"	l
vector45	kernel.asm	/^vector45:$/;"	l
vector45	vectors.S	/^vector45:$/;"	l
vector46	kernel.asm	/^vector46:$/;"	l
vector46	vectors.S	/^vector46:$/;"	l
vector47	kernel.asm	/^vector47:$/;"	l
vector47	vectors.S	/^vector47:$/;"	l
vector48	kernel.asm	/^vector48:$/;"	l
vector48	vectors.S	/^vector48:$/;"	l
vector49	kernel.asm	/^vector49:$/;"	l
vector49	vectors.S	/^vector49:$/;"	l
vector5	kernel.asm	/^vector5:$/;"	l
vector5	vectors.S	/^vector5:$/;"	l
vector50	kernel.asm	/^vector50:$/;"	l
vector50	vectors.S	/^vector50:$/;"	l
vector51	kernel.asm	/^vector51:$/;"	l
vector51	vectors.S	/^vector51:$/;"	l
vector52	kernel.asm	/^vector52:$/;"	l
vector52	vectors.S	/^vector52:$/;"	l
vector53	kernel.asm	/^vector53:$/;"	l
vector53	vectors.S	/^vector53:$/;"	l
vector54	kernel.asm	/^vector54:$/;"	l
vector54	vectors.S	/^vector54:$/;"	l
vector55	kernel.asm	/^vector55:$/;"	l
vector55	vectors.S	/^vector55:$/;"	l
vector56	kernel.asm	/^vector56:$/;"	l
vector56	vectors.S	/^vector56:$/;"	l
vector57	kernel.asm	/^vector57:$/;"	l
vector57	vectors.S	/^vector57:$/;"	l
vector58	kernel.asm	/^vector58:$/;"	l
vector58	vectors.S	/^vector58:$/;"	l
vector59	kernel.asm	/^vector59:$/;"	l
vector59	vectors.S	/^vector59:$/;"	l
vector6	kernel.asm	/^vector6:$/;"	l
vector6	vectors.S	/^vector6:$/;"	l
vector60	kernel.asm	/^vector60:$/;"	l
vector60	vectors.S	/^vector60:$/;"	l
vector61	kernel.asm	/^vector61:$/;"	l
vector61	vectors.S	/^vector61:$/;"	l
vector62	kernel.asm	/^vector62:$/;"	l
vector62	vectors.S	/^vector62:$/;"	l
vector63	kernel.asm	/^vector63:$/;"	l
vector63	vectors.S	/^vector63:$/;"	l
vector64	kernel.asm	/^vector64:$/;"	l
vector64	vectors.S	/^vector64:$/;"	l
vector65	kernel.asm	/^vector65:$/;"	l
vector65	vectors.S	/^vector65:$/;"	l
vector66	kernel.asm	/^vector66:$/;"	l
vector66	vectors.S	/^vector66:$/;"	l
vector67	kernel.asm	/^vector67:$/;"	l
vector67	vectors.S	/^vector67:$/;"	l
vector68	kernel.asm	/^vector68:$/;"	l
vector68	vectors.S	/^vector68:$/;"	l
vector69	kernel.asm	/^vector69:$/;"	l
vector69	vectors.S	/^vector69:$/;"	l
vector7	kernel.asm	/^vector7:$/;"	l
vector7	vectors.S	/^vector7:$/;"	l
vector70	kernel.asm	/^vector70:$/;"	l
vector70	vectors.S	/^vector70:$/;"	l
vector71	kernel.asm	/^vector71:$/;"	l
vector71	vectors.S	/^vector71:$/;"	l
vector72	kernel.asm	/^vector72:$/;"	l
vector72	vectors.S	/^vector72:$/;"	l
vector73	kernel.asm	/^vector73:$/;"	l
vector73	vectors.S	/^vector73:$/;"	l
vector74	kernel.asm	/^vector74:$/;"	l
vector74	vectors.S	/^vector74:$/;"	l
vector75	kernel.asm	/^vector75:$/;"	l
vector75	vectors.S	/^vector75:$/;"	l
vector76	kernel.asm	/^vector76:$/;"	l
vector76	vectors.S	/^vector76:$/;"	l
vector77	kernel.asm	/^vector77:$/;"	l
vector77	vectors.S	/^vector77:$/;"	l
vector78	kernel.asm	/^vector78:$/;"	l
vector78	vectors.S	/^vector78:$/;"	l
vector79	kernel.asm	/^vector79:$/;"	l
vector79	vectors.S	/^vector79:$/;"	l
vector8	kernel.asm	/^vector8:$/;"	l
vector8	vectors.S	/^vector8:$/;"	l
vector80	kernel.asm	/^vector80:$/;"	l
vector80	vectors.S	/^vector80:$/;"	l
vector81	kernel.asm	/^vector81:$/;"	l
vector81	vectors.S	/^vector81:$/;"	l
vector82	kernel.asm	/^vector82:$/;"	l
vector82	vectors.S	/^vector82:$/;"	l
vector83	kernel.asm	/^vector83:$/;"	l
vector83	vectors.S	/^vector83:$/;"	l
vector84	kernel.asm	/^vector84:$/;"	l
vector84	vectors.S	/^vector84:$/;"	l
vector85	kernel.asm	/^vector85:$/;"	l
vector85	vectors.S	/^vector85:$/;"	l
vector86	kernel.asm	/^vector86:$/;"	l
vector86	vectors.S	/^vector86:$/;"	l
vector87	kernel.asm	/^vector87:$/;"	l
vector87	vectors.S	/^vector87:$/;"	l
vector88	kernel.asm	/^vector88:$/;"	l
vector88	vectors.S	/^vector88:$/;"	l
vector89	kernel.asm	/^vector89:$/;"	l
vector89	vectors.S	/^vector89:$/;"	l
vector9	kernel.asm	/^vector9:$/;"	l
vector9	vectors.S	/^vector9:$/;"	l
vector90	kernel.asm	/^vector90:$/;"	l
vector90	vectors.S	/^vector90:$/;"	l
vector91	kernel.asm	/^vector91:$/;"	l
vector91	vectors.S	/^vector91:$/;"	l
vector92	kernel.asm	/^vector92:$/;"	l
vector92	vectors.S	/^vector92:$/;"	l
vector93	kernel.asm	/^vector93:$/;"	l
vector93	vectors.S	/^vector93:$/;"	l
vector94	kernel.asm	/^vector94:$/;"	l
vector94	vectors.S	/^vector94:$/;"	l
vector95	kernel.asm	/^vector95:$/;"	l
vector95	vectors.S	/^vector95:$/;"	l
vector96	kernel.asm	/^vector96:$/;"	l
vector96	vectors.S	/^vector96:$/;"	l
vector97	kernel.asm	/^vector97:$/;"	l
vector97	vectors.S	/^vector97:$/;"	l
vector98	kernel.asm	/^vector98:$/;"	l
vector98	vectors.S	/^vector98:$/;"	l
vector99	kernel.asm	/^vector99:$/;"	l
vector99	vectors.S	/^vector99:$/;"	l
vectors	vectors.S	/^vectors:$/;"	l
version	elf.h	/^  uint version;$/;"	m	struct:elfhdr
version	mp.h	/^  uchar version;                \/\/ I\/O APIC version$/;"	m	struct:mpioapic
version	mp.h	/^  uchar version;                \/\/ [14]$/;"	m	struct:mpconf
version	mp.h	/^  uchar version;                \/\/ local APIC verison$/;"	m	struct:mpproc
void	cat.asm	/^void$/;"	l
void	echo.asm	/^void$/;"	l
void	forktest.asm	/^void$/;"	l
void	grep.asm	/^void$/;"	l
void	init.asm	/^void$/;"	l
void	kernel.asm	/^void cmostime(struct rtcdate *r)$/;"	l
void	kernel.asm	/^void entry32mp(void);$/;"	l
void	kernel.asm	/^void idtinit(void) {$/;"	l
void	kernel.asm	/^void tvinit(void) {$/;"	l
void	kernel.asm	/^void$/;"	l
void	kill.asm	/^void$/;"	l
void	ln.asm	/^void$/;"	l
void	ls.asm	/^void$/;"	l
void	mkdir.asm	/^void$/;"	l
void	mount.asm	/^void$/;"	l
void	rm.asm	/^void$/;"	l
void	sh.asm	/^void$/;"	l
void	stressfs.asm	/^void$/;"	l
void	usertests.asm	/^void argptest()$/;"	l
void	usertests.asm	/^void dirtest(void)$/;"	l
void	usertests.asm	/^void$/;"	l
void	wc.asm	/^void$/;"	l
void	zombie.asm	/^void$/;"	l
volatile	kernel.asm	/^volatile uint *lapic;  \/\/ Initialized in mp.c$/;"	l
w	console.c	/^  uint w;  \/\/ Write index$/;"	m	struct:__anon8	file:
wait	proc.c	/^wait(void)$/;"	f
waitdisk	bootmain.c	/^waitdisk(void)$/;"	f
wakeup	proc.c	/^wakeup(void *chan)$/;"	f
wakeup1	proc.c	/^wakeup1(void *chan)$/;"	f	file:
walkpgdir	vm.c	/^walkpgdir(pde_t *pml4, const void *va, int alloc)$/;"	f	file:
wc	wc.c	/^wc(int fd, char *name)$/;"	f
whitespace	sh.c	/^char whitespace[] = " \\t\\r\\n\\v";$/;"	v
winode	mkfs.c	/^winode(uint inum, struct dinode *ip)$/;"	f
writable	file.h	/^  char writable;$/;"	m	struct:file
write	file.h	/^  int (*write)(struct inode*, char*, int);$/;"	m	struct:devsw
write_head	log.c	/^write_head(void)$/;"	f	file:
write_log	log.c	/^write_log(void)$/;"	f	file:
writefile	cuth	/^sub writefile($@){$/;"	s
writei	file.h	/^  int (*writei)(struct inode*, char*, uint, uint);    \/\/ write to file contents$/;"	m	struct:inode_functions
writeopen	pipe.c	/^  int writeopen;  \/\/ write fd is still open$/;"	m	struct:pipe	file:
writetest	usertests.c	/^writetest(void)$/;"	f
writetest1	usertests.c	/^writetest1(void)$/;"	f
wrmsr	entry.S	/^wrmsr:$/;"	l
wrmsr	kernel.asm	/^wrmsr:$/;"	l
wrv	kernel.asm	/^  wrv = (ushort*)P2V((0x40<<4 | 0x67));  \/\/ Warm reset vector$/;"	d
wsect	mkfs.c	/^wsect(uint sec, void *buf)$/;"	f
x	cat.asm	/^    x = -xx;$/;"	d
x	cat.asm	/^    x = xx;$/;"	d
x	echo.asm	/^    x = -xx;$/;"	d
x	echo.asm	/^    x = xx;$/;"	d
x	grep.asm	/^    x = -xx;$/;"	d
x	grep.asm	/^    x = xx;$/;"	d
x	init.asm	/^    x = -xx;$/;"	d
x	init.asm	/^    x = xx;$/;"	d
x	kernel.asm	/^    x = -xx;$/;"	d
x	kernel.asm	/^    x = xx;$/;"	d
x	kill.asm	/^    x = -xx;$/;"	d
x	kill.asm	/^    x = xx;$/;"	d
x	ln.asm	/^    x = -xx;$/;"	d
x	ln.asm	/^    x = xx;$/;"	d
x	ls.asm	/^    x = -xx;$/;"	d
x	ls.asm	/^    x = xx;$/;"	d
x	mkdir.asm	/^    x = -xx;$/;"	d
x	mkdir.asm	/^    x = xx;$/;"	d
x	mount.asm	/^    x = -xx;$/;"	d
x	mount.asm	/^    x = xx;$/;"	d
x	rm.asm	/^    x = -xx;$/;"	d
x	rm.asm	/^    x = xx;$/;"	d
x	sh.asm	/^    x = -xx;$/;"	d
x	sh.asm	/^    x = xx;$/;"	d
x	stressfs.asm	/^    x = -xx;$/;"	d
x	stressfs.asm	/^    x = xx;$/;"	d
x	umalloc.c	/^  Align x;$/;"	m	union:header	file:
x	usertests.asm	/^    x = -xx;$/;"	d
x	usertests.asm	/^    x = x * 1103515245 + 12345;$/;"	d
x	usertests.asm	/^    x = xx;$/;"	d
x	wc.asm	/^    x = -xx;$/;"	d
x	wc.asm	/^    x = xx;$/;"	d
x	zombie.asm	/^    x = -xx;$/;"	d
x	zombie.asm	/^    x = xx;$/;"	d
xchecksum	mp.h	/^  uchar xchecksum;              \/\/ extended table checksum$/;"	m	struct:mpconf
xchg	x86.h	/^xchg(volatile uint *addr, addr_t newval)$/;"	f
xint	mkfs.c	/^xint(uint x)$/;"	f
xlength	mp.h	/^  ushort xlength;               \/\/ extended table length$/;"	m	struct:mpconf
xshort	mkfs.c	/^xshort(ushort x)$/;"	f
xticks	kernel.asm	/^  xticks = ticks;$/;"	d
year	date.h	/^  uint year;$/;"	m	struct:rtcdate
yield	proc.c	/^yield(void)$/;"	f
zeroes	mkfs.c	/^char zeroes[BSIZE];$/;"	v
