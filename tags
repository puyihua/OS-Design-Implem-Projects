!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ALT	kbd.h	11;"	d
APP_SEG	mmu.h	101;"	d
AS	Makefile	/^AS = $(TOOLPREFIX)gas$/;"	m
ASFLAGS	Makefile	/^ASFLAGS = -gdwarf-2 -Wa,-divide -Iinclude $(XFLAGS)$/;"	m
ASSERT	lapic.c	26;"	d	file:
Align	umalloc.c	/^typedef long Align;$/;"	t	file:
BACK	sh.c	12;"	d	file:
BACKSPACE	console.c	139;"	d	file:
BBLOCK	fs.h	48;"	d
BCAST	lapic.c	29;"	d	file:
BIG	usertests.asm	/^#define BIG (100*1024*1024)$/;"	d
BIG	usertests.c	1452;"	d	file:
BPB	fs.h	45;"	d
BSIZE	fs.h	6;"	d
BUSY	lapic.c	30;"	d	file:
B_DIRTY	buf.h	13;"	d
B_VALID	buf.h	12;"	d
C	console.c	199;"	d	file:
C	kbd.h	32;"	d
C	kernel.asm	/^#define C(x)  ((x)-'@')  \/\/ Control-x$/;"	d
CALL_GATE	mmu.h	62;"	d
CAPSLOCK	kbd.h	13;"	d
CC	Makefile	/^CC = $(TOOLPREFIX)gcc$/;"	m
CFLAGS	Makefile	/^CFLAGS = -fno-pic -static -fno-builtin -fno-strict-aliasing -Wall -MD -ggdb -fno-omit-frame-pointer$/;"	m
CMOS_PORT	lapic.c	146;"	d	file:
CMOS_RETURN	lapic.c	147;"	d	file:
CMOS_STATA	lapic.c	186;"	d	file:
CMOS_STATB	lapic.c	187;"	d	file:
CMOS_UIP	lapic.c	188;"	d	file:
COM1	uart.c	15;"	d	file:
CONSOLE	file.h	38;"	d
CONV	kernel.asm	/^#define    CONV(x)     (t1.x = ((t1.x >> 4) * 10) + (t1.x & 0xf))$/;"	d
CONV	lapic.c	237;"	d	file:
CONV	lapic.c	244;"	d	file:
CPUS	Makefile	/^CPUS := 2$/;"	m
CR0_AM	mmu.h	35;"	d
CR0_CD	mmu.h	37;"	d
CR0_EM	mmu.h	30;"	d
CR0_ET	mmu.h	32;"	d
CR0_MP	mmu.h	29;"	d
CR0_NE	mmu.h	33;"	d
CR0_NW	mmu.h	36;"	d
CR0_PE	mmu.h	28;"	d
CR0_PG	mmu.h	38;"	d
CR0_TS	mmu.h	31;"	d
CR0_WP	mmu.h	34;"	d
CR4_OSXFSR	mmu.h	42;"	d
CR4_OSXMMEXCPT	mmu.h	43;"	d
CR4_PAE	mmu.h	41;"	d
CR4_PSE	mmu.h	40;"	d
CRTPORT	console.c	140;"	d	file:
CRTPORT	display.c	16;"	d	file:
CRTPORT	kernel.asm	/^#define CRTPORT 0x3d4$/;"	d
CTL	kbd.h	10;"	d
DAY	kernel.asm	/^#define DAY     0x07$/;"	d
DAY	lapic.c	193;"	d	file:
DEASSERT	lapic.c	27;"	d	file:
DEBUG	Makefile	/^DEBUG=TRUE$/;"	m
DELIVS	lapic.c	25;"	d	file:
DIRSIZ	fs.h	51;"	d
DISPLAY	file.h	39;"	d
DPL_USER	mmu.h	100;"	d
Disassembly	bad_mmap.asm	/^Disassembly of section .text:$/;"	l
Disassembly	bootblock.asm	/^Disassembly of section .text:$/;"	l
Disassembly	cat.asm	/^Disassembly of section .text:$/;"	l
Disassembly	eager_mmap.asm	/^Disassembly of section .text:$/;"	l
Disassembly	echo.asm	/^Disassembly of section .text:$/;"	l
Disassembly	entryother.asm	/^Disassembly of section .text:$/;"	l
Disassembly	forktest.asm	/^Disassembly of section .text:$/;"	l
Disassembly	grep.asm	/^Disassembly of section .text:$/;"	l
Disassembly	imshow.asm	/^Disassembly of section .text:$/;"	l
Disassembly	init.asm	/^Disassembly of section .text:$/;"	l
Disassembly	initcode.asm	/^Disassembly of section .text:$/;"	l
Disassembly	kernel.asm	/^Disassembly of section .text:$/;"	l
Disassembly	kill.asm	/^Disassembly of section .text:$/;"	l
Disassembly	lazy_mmap.asm	/^Disassembly of section .text:$/;"	l
Disassembly	ln.asm	/^Disassembly of section .text:$/;"	l
Disassembly	ls.asm	/^Disassembly of section .text:$/;"	l
Disassembly	mkdir.asm	/^Disassembly of section .text:$/;"	l
Disassembly	rm.asm	/^Disassembly of section .text:$/;"	l
Disassembly	sh.asm	/^Disassembly of section .text:$/;"	l
Disassembly	stressfs.asm	/^Disassembly of section .text:$/;"	l
Disassembly	usertests.asm	/^Disassembly of section .text:$/;"	l
Disassembly	wc.asm	/^Disassembly of section .text:$/;"	l
Disassembly	zombie.asm	/^Disassembly of section .text:$/;"	l
E0ESC	kbd.h	17;"	d
ELF_MAGIC	elf.h	3;"	d
ELF_PROG_FLAG_EXEC	elf.h	40;"	d
ELF_PROG_FLAG_READ	elf.h	42;"	d
ELF_PROG_FLAG_WRITE	elf.h	41;"	d
ELF_PROG_LOAD	elf.h	37;"	d
EMBRYO	proc.h	/^enum procstate { UNUSED, EMBRYO, SLEEPING, RUNNABLE, RUNNING, ZOMBIE };$/;"	e	enum:procstate
ENABLE	lapic.c	20;"	d	file:
EOI	lapic.c	18;"	d	file:
ERROR	lapic.c	39;"	d	file:
ESR	lapic.c	21;"	d	file:
EXEC	sh.c	8;"	d	file:
EXTMEM	memlayout.h	3;"	d
EXTRA	Makefile	/^EXTRA=\\$/;"	m
FD_INODE	file.h	/^  enum { FD_NONE, FD_PIPE, FD_INODE } type;$/;"	e	enum:file::__anon3
FD_NONE	file.h	/^  enum { FD_NONE, FD_PIPE, FD_INODE } type;$/;"	e	enum:file::__anon3
FD_PIPE	file.h	/^  enum { FD_NONE, FD_PIPE, FD_INODE } type;$/;"	e	enum:file::__anon3
FILES	Makefile	/^FILES = $(shell grep -v '^\\#' runoff.list)$/;"	m
FIXED	lapic.c	31;"	d	file:
FL_AC	mmu.h	22;"	d
FL_AF	mmu.h	7;"	d
FL_CF	mmu.h	5;"	d
FL_DF	mmu.h	12;"	d
FL_ID	mmu.h	25;"	d
FL_IF	mmu.h	11;"	d
FL_IOPL_0	mmu.h	15;"	d
FL_IOPL_1	mmu.h	16;"	d
FL_IOPL_2	mmu.h	17;"	d
FL_IOPL_3	mmu.h	18;"	d
FL_IOPL_MASK	mmu.h	14;"	d
FL_NT	mmu.h	19;"	d
FL_OF	mmu.h	13;"	d
FL_PF	mmu.h	6;"	d
FL_RF	mmu.h	20;"	d
FL_SF	mmu.h	9;"	d
FL_TF	mmu.h	10;"	d
FL_VIF	mmu.h	23;"	d
FL_VIP	mmu.h	24;"	d
FL_VM	mmu.h	21;"	d
FL_ZF	mmu.h	8;"	d
FSSIZE	param.h	13;"	d
GDBPORT	Makefile	/^GDBPORT = $(shell expr `id -u` % 5000 + 25000)$/;"	m
HOURS	lapic.c	192;"	d	file:
Header	umalloc.c	/^typedef union header Header;$/;"	t	typeref:union:header	file:
IBLOCK	fs.h	42;"	d
ICRHI	lapic.c	32;"	d	file:
ICRLO	lapic.c	22;"	d	file:
ID	lapic.c	15;"	d	file:
IDE_BSY	ide.c	17;"	d	file:
IDE_CMD_RDMUL	ide.c	24;"	d	file:
IDE_CMD_READ	ide.c	22;"	d	file:
IDE_CMD_WRITE	ide.c	23;"	d	file:
IDE_CMD_WRMUL	ide.c	25;"	d	file:
IDE_DF	ide.c	19;"	d	file:
IDE_DRDY	ide.c	18;"	d	file:
IDE_ERR	ide.c	20;"	d	file:
INIT	lapic.c	23;"	d	file:
INPUT_BUF	console.c	190;"	d	file:
INT_ACTIVELOW	ioapic.c	23;"	d	file:
INT_DISABLED	ioapic.c	21;"	d	file:
INT_LEVEL	ioapic.c	22;"	d	file:
INT_LOGICAL	ioapic.c	24;"	d	file:
IOAPIC	ioapic.c	10;"	d	file:
IPB	fs.h	39;"	d
IRQ_COM1	traps.h	34;"	d
IRQ_ERROR	traps.h	36;"	d
IRQ_IDE	traps.h	35;"	d
IRQ_KBD	traps.h	33;"	d
IRQ_SPURIOUS	traps.h	37;"	d
IRQ_TIMER	traps.h	32;"	d
I_VALID	file.h	27;"	d
KBDATAP	kbd.h	5;"	d
KBSTATP	kbd.h	3;"	d
KBS_DIB	kbd.h	4;"	d
KERNBASE	memlayout.h	7;"	d
KERNEL_CS	mmu.h	67;"	d
KERNLINK	kernel.asm	/^#define KERNLINK (KERNBASE+EXTMEM)  \/\/ Address where kernel is linked$/;"	d
KERNLINK	memlayout.h	10;"	d
KEY_DEL	kbd.h	29;"	d
KEY_DN	kbd.h	23;"	d
KEY_END	kbd.h	21;"	d
KEY_HOME	kbd.h	20;"	d
KEY_INS	kbd.h	28;"	d
KEY_LF	kbd.h	24;"	d
KEY_PGDN	kbd.h	27;"	d
KEY_PGUP	kbd.h	26;"	d
KEY_RT	kbd.h	25;"	d
KEY_UP	kbd.h	22;"	d
KSTACKSIZE	param.h	2;"	d
LD	Makefile	/^LD = $(TOOLPREFIX)ld$/;"	m
LDFLAGS	Makefile	/^LDFLAGS = -m elf_x86_64 -nodefaultlibs$/;"	m
LEVEL	lapic.c	28;"	d	file:
LINT0	lapic.c	37;"	d	file:
LINT1	lapic.c	38;"	d	file:
LIST	sh.c	11;"	d	file:
LOGSIZE	param.h	11;"	d
MASKED	lapic.c	40;"	d	file:
MAXARG	param.h	9;"	d
MAXARGS	sh.c	14;"	d	file:
MAXFILE	fs.h	26;"	d
MAXOPBLOCKS	param.h	10;"	d
MEMFSOBJS	Makefile	/^MEMFSOBJS = $(filter-out ide.o,$(OBJS)) memide.o$/;"	m
MINS	lapic.c	191;"	d	file:
MMAPBASE	kernel.asm	/^#define MMAPBASE 0x0000400000000000$/;"	d
MMAPBASE	memlayout.h	8;"	d
MONTH	kernel.asm	/^#define MONTH   0x08$/;"	d
MONTH	lapic.c	194;"	d	file:
MPBOOT	mp.h	34;"	d
MPBUS	mp.h	50;"	d
MPIOAPIC	mp.h	51;"	d
MPIOINTR	mp.h	52;"	d
MPLINTR	mp.h	53;"	d
MPPROC	mp.h	49;"	d
MSR_CSTAR	mmu.h	49;"	d
MSR_EFER	mmu.h	46;"	d
MSR_LSTAR	mmu.h	48;"	d
MSR_SFMASK	mmu.h	50;"	d
MSR_STAR	mmu.h	47;"	d
N	forktest.asm	/^#define N  1000$/;"	d
N	forktest.c	8;"	d	file:
NBUF	param.h	12;"	d
NCPU	param.h	3;"	d
NDEV	param.h	7;"	d
NDIRECT	fs.h	24;"	d
NELEM	defs.h	200;"	d
NFILE	param.h	5;"	d
NINDIRECT	fs.h	25;"	d
NINODE	param.h	6;"	d
NINODES	mkfs.c	18;"	d	file:
NO	kbd.h	7;"	d
NOFILE	param.h	4;"	d
NPDENTRIES	mmu.h	143;"	d
NPROC	param.h	1;"	d
NPTENTRIES	mmu.h	144;"	d
NSEGS	mmu.h	61;"	d
NUMLOCK	kbd.h	14;"	d
OBJCOPY	Makefile	/^OBJCOPY = $(TOOLPREFIX)objcopy$/;"	m
OBJDUMP	Makefile	/^OBJDUMP = $(TOOLPREFIX)objdump$/;"	m
OBJS	Makefile	/^OBJS = \\$/;"	m
OPT	Makefile	/^OPT ?= -O0$/;"	m
O_CREATE	fcntl.h	4;"	d
O_RDONLY	fcntl.h	1;"	d
O_RDWR	fcntl.h	3;"	d
O_WRONLY	fcntl.h	2;"	d
P2V	memlayout.h	22;"	d
P2V_WO	memlayout.h	25;"	d
PCINT	lapic.c	36;"	d	file:
PDPX	mmu.h	136;"	d
PDPXSHIFT	mmu.h	149;"	d
PDX	mmu.h	138;"	d
PDXSHIFT	mmu.h	148;"	d
PERIODIC	lapic.c	35;"	d	file:
PGROUNDDOWN	mmu.h	154;"	d
PGROUNDUP	mmu.h	153;"	d
PGSHIFT	mmu.h	146;"	d
PGSIZE	mmu.h	145;"	d
PHYSTOP	memlayout.h	4;"	d
PIPE	sh.c	10;"	d	file:
PIPESIZE	pipe.c	11;"	d	file:
PML4XSHIFT	mmu.h	150;"	d
PMX	mmu.h	134;"	d
PRINT	Makefile	/^PRINT = runoff.list runoff.spec README toc.hdr toc.ftr $(FILES)$/;"	m
PTE_A	mmu.h	162;"	d
PTE_ADDR	mmu.h	168;"	d
PTE_D	mmu.h	163;"	d
PTE_FLAGS	mmu.h	169;"	d
PTE_MBZ	mmu.h	165;"	d
PTE_P	mmu.h	157;"	d
PTE_PCD	mmu.h	161;"	d
PTE_PS	mmu.h	164;"	d
PTE_PWT	mmu.h	160;"	d
PTE_U	mmu.h	159;"	d
PTE_W	mmu.h	158;"	d
PTX	mmu.h	140;"	d
PTXSHIFT	mmu.h	147;"	d
PXMASK	mmu.h	151;"	d
QEMU	Makefile	/^ QEMU = qemu-system-x86_64$/;"	m
QEMU	Makefile	/^QEMU = $(shell if which qemu > \/dev\/null; \\$/;"	m
QEMUGDB	Makefile	/^QEMUGDB = $(shell if $(QEMU) -help | grep -q '^-gdb'; \\$/;"	m
QEMUOPTS	Makefile	/^QEMUOPTS = -net none -hdb fs.img xv6.img -smp $(CPUS) -m 512 $(QEMUEXTRA)$/;"	m
REDIR	sh.c	9;"	d	file:
REG_ID	ioapic.c	12;"	d	file:
REG_TABLE	ioapic.c	14;"	d	file:
REG_VER	ioapic.c	13;"	d	file:
ROOTDEV	param.h	8;"	d
ROOTINO	fs.h	5;"	d
RTC_ADDR	usertests.c	1701;"	d	file:
RTC_DATA	usertests.c	1702;"	d	file:
RUNNABLE	proc.h	/^enum procstate { UNUSED, EMBRYO, SLEEPING, RUNNABLE, RUNNING, ZOMBIE };$/;"	e	enum:procstate
RUNNING	proc.h	/^enum procstate { UNUSED, EMBRYO, SLEEPING, RUNNABLE, RUNNING, ZOMBIE };$/;"	e	enum:procstate
SCROLLLOCK	kbd.h	15;"	d
SECS	lapic.c	190;"	d	file:
SECTOR_SIZE	ide.c	16;"	d	file:
SECTSIZE	bootmain.c	12;"	d	file:
SEG	mmu.h	89;"	d
SEG16	mmu.h	94;"	d
SEG_ASM	asm.h	11;"	d
SEG_KCODE	mmu.h	53;"	d
SEG_KCPU	mmu.h	58;"	d
SEG_KDATA	mmu.h	54;"	d
SEG_NULLASM	asm.h	5;"	d
SEG_TSS	mmu.h	59;"	d
SEG_UCODE	mmu.h	57;"	d
SEG_UCODE32	mmu.h	55;"	d
SEG_UDATA	mmu.h	56;"	d
SETCALLGATE	mmu.h	243;"	d
SHIFT	kbd.h	9;"	d
SLEEPING	proc.h	/^enum procstate { UNUSED, EMBRYO, SLEEPING, RUNNABLE, RUNNING, ZOMBIE };$/;"	e	enum:procstate
STARTUP	lapic.c	24;"	d	file:
STA_A	asm.h	21;"	d
STA_A	mmu.h	109;"	d
STA_C	asm.h	18;"	d
STA_C	mmu.h	106;"	d
STA_E	asm.h	17;"	d
STA_E	mmu.h	105;"	d
STA_R	asm.h	20;"	d
STA_R	mmu.h	108;"	d
STA_W	asm.h	19;"	d
STA_W	mmu.h	107;"	d
STA_X	asm.h	16;"	d
STA_X	mmu.h	104;"	d
STS_CG16	mmu.h	115;"	d
STS_CG64	mmu.h	121;"	d
STS_IG16	mmu.h	117;"	d
STS_IG64	mmu.h	122;"	d
STS_LDT	mmu.h	113;"	d
STS_T16A	mmu.h	112;"	d
STS_T16B	mmu.h	114;"	d
STS_T64A	mmu.h	119;"	d
STS_T64B	mmu.h	120;"	d
STS_TG	mmu.h	116;"	d
STS_TG16	mmu.h	118;"	d
STS_TG64	mmu.h	123;"	d
SVR	lapic.c	19;"	d	file:
SYSCALL	usys.S	/^#define SYSCALL(name) \\$/;"	d
SYS_chdir	syscall.h	10;"	d
SYS_close	syscall.h	22;"	d
SYS_dup	syscall.h	11;"	d
SYS_exec	syscall.h	8;"	d
SYS_exit	syscall.h	3;"	d
SYS_fork	syscall.h	2;"	d
SYS_fstat	syscall.h	9;"	d
SYS_getpid	syscall.h	12;"	d
SYS_ioctl	syscall.h	24;"	d
SYS_kill	syscall.h	7;"	d
SYS_link	syscall.h	20;"	d
SYS_mkdir	syscall.h	21;"	d
SYS_mknod	syscall.h	18;"	d
SYS_mmap	syscall.h	23;"	d
SYS_open	syscall.h	16;"	d
SYS_pipe	syscall.h	5;"	d
SYS_read	syscall.h	6;"	d
SYS_sbrk	syscall.h	13;"	d
SYS_sleep	syscall.h	14;"	d
SYS_unlink	syscall.h	19;"	d
SYS_uptime	syscall.h	15;"	d
SYS_wait	syscall.h	4;"	d
SYS_write	syscall.h	17;"	d
TCCR	lapic.c	42;"	d	file:
TDCR	lapic.c	43;"	d	file:
TICR	lapic.c	41;"	d	file:
TIMER	lapic.c	33;"	d	file:
TOOLPREFIX	Makefile	/^TOOLPREFIX := $(shell if i386-jos-elf-objdump -i 2>&1 | grep '^elf32-i386$$' >\/dev\/null 2>&1; \\$/;"	m
TPR	lapic.c	17;"	d	file:
TRAP_GATE	mmu.h	171;"	d
T_ALIGN	traps.h	21;"	d
T_BOUND	traps.h	9;"	d
T_BRKPT	traps.h	7;"	d
T_DBLFLT	traps.h	12;"	d
T_DEBUG	traps.h	5;"	d
T_DEFAULT	traps.h	28;"	d
T_DEV	stat.h	3;"	d
T_DEVICE	traps.h	11;"	d
T_DIR	stat.h	1;"	d
T_DIVIDE	traps.h	4;"	d
T_FILE	stat.h	2;"	d
T_FPERR	traps.h	20;"	d
T_GPFLT	traps.h	17;"	d
T_ILLOP	traps.h	10;"	d
T_IRQ0	traps.h	30;"	d
T_MCHK	traps.h	22;"	d
T_NMI	traps.h	6;"	d
T_OFLOW	traps.h	8;"	d
T_PGFLT	traps.h	18;"	d
T_SEGNP	traps.h	15;"	d
T_SIMDERR	traps.h	23;"	d
T_STACK	traps.h	16;"	d
T_SYSCALL	traps.h	27;"	d
T_TSS	traps.h	14;"	d
ULIB	Makefile	/^ULIB = ulib.o usys.o printf.o umalloc.o$/;"	m
UNUSED	proc.h	/^enum procstate { UNUSED, EMBRYO, SLEEPING, RUNNABLE, RUNNING, ZOMBIE };$/;"	e	enum:procstate
UPROGS	Makefile	/^UPROGS=\\$/;"	m
USER_CS	mmu.h	65;"	d
USER_DS	mmu.h	66;"	d
V2P	memlayout.h	21;"	d
V2P_WO	memlayout.h	24;"	d
VER	lapic.c	16;"	d	file:
VGA	kernel.asm	/^#define VGA 0x3C0$/;"	d
VGA	vga.c	281;"	d	file:
X1	lapic.c	34;"	d	file:
XFLAGS	Makefile	/^XFLAGS = -m64 -DX64 -mcmodel=large -mtls-direct-seg-refs -mno-red-zone$/;"	m
YEAR	kernel.asm	/^#define YEAR    0x09$/;"	d
YEAR	lapic.c	195;"	d	file:
ZOMBIE	proc.h	/^enum procstate { UNUSED, EMBRYO, SLEEPING, RUNNABLE, RUNNING, ZOMBIE };$/;"	e	enum:procstate
__deadloop	entry.S	/^__deadloop:$/;"	l
__deadloop	kernel.asm	/^__deadloop:$/;"	l
_bad_mmap	bad_mmap.asm	/^_bad_mmap:     file format elf64-x86-64$/;"	l
_cat	cat.asm	/^_cat:     file format elf64-x86-64$/;"	l
_eager_mmap	eager_mmap.asm	/^_eager_mmap:     file format elf64-x86-64$/;"	l
_echo	echo.asm	/^_echo:     file format elf64-x86-64$/;"	l
_forktest	forktest.asm	/^_forktest:     file format elf64-x86-64$/;"	l
_grep	grep.asm	/^_grep:     file format elf64-x86-64$/;"	l
_imshow	imshow.asm	/^_imshow:     file format elf64-x86-64$/;"	l
_init	init.asm	/^_init:     file format elf64-x86-64$/;"	l
_kill	kill.asm	/^_kill:     file format elf64-x86-64$/;"	l
_lazy_mmap	lazy_mmap.asm	/^_lazy_mmap:     file format elf64-x86-64$/;"	l
_ln	ln.asm	/^_ln:     file format elf64-x86-64$/;"	l
_ls	ls.asm	/^_ls:     file format elf64-x86-64$/;"	l
_mkdir	mkdir.asm	/^_mkdir:     file format elf64-x86-64$/;"	l
_rm	rm.asm	/^_rm:     file format elf64-x86-64$/;"	l
_sh	sh.asm	/^_sh:     file format elf64-x86-64$/;"	l
_start	entry.S	/^_start:$/;"	l
_start	kernel.asm	/^_start:$/;"	l
_stressfs	stressfs.asm	/^_stressfs:     file format elf64-x86-64$/;"	l
_usertests	usertests.asm	/^_usertests:     file format elf64-x86-64$/;"	l
_wc	wc.asm	/^_wc:     file format elf64-x86-64$/;"	l
_zombie	zombie.asm	/^_zombie:     file format elf64-x86-64$/;"	l
a	kernel.asm	/^	  a = PGROUNDUP(oldsz);$/;"	d
a	kernel.asm	/^    a = (uint*)bp->data;$/;"	d
a	kernel.asm	/^  a = (char*)PGROUNDDOWN((addr_t)va);$/;"	d
a	kernel.asm	/^  a = PGROUNDUP(newsz);$/;"	d
a	kernel.asm	/^  a = PGROUNDUP(oldsz);$/;"	d
a	usertests.asm	/^    a = b + 1;$/;"	d
a	usertests.asm	/^  a = sbrk(0);$/;"	d
a0	forktest.asm	/^  a0:	00 00 00 $/;"	l
a0	usertests.asm	/^      a0:	8b 00                	mov    (%rax),%eax$/;"	l
a0	zombie.asm	/^  a0:	84 c0                	test   %al,%al$/;"	l
a00	bad_mmap.asm	/^ a00:	89 d6                	mov    %edx,%esi$/;"	l
a00	cat.asm	/^ a00:	8b 85 1c ff ff ff    	mov    -0xe4(%rbp),%eax$/;"	l
a00	grep.asm	/^ a00:	8b 85 44 ff ff ff    	mov    -0xbc(%rbp),%eax$/;"	l
a00	mkdir.asm	/^ a00:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
a00	rm.asm	/^ a00:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
a00	stressfs.asm	/^ a00:	8b 85 3c ff ff ff    	mov    -0xc4(%rbp),%eax$/;"	l
a01	eager_mmap.asm	/^ a01:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax$/;"	l
a01	lazy_mmap.asm	/^ a01:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax$/;"	l
a01	ln.asm	/^ a01:	48 8b 10             	mov    (%rax),%rdx$/;"	l
a01	sh.asm	/^     a01:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
a01	usertests.asm	/^     a01:	00 00 00 $/;"	l
a01	zombie.asm	/^ a01:	89 7d ec             	mov    %edi,-0x14(%rbp)$/;"	l
a02	bad_mmap.asm	/^ a02:	89 c7                	mov    %eax,%edi$/;"	l
a02	echo.asm	/^ a02:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
a02	init.asm	/^ a02:	48 01 d0             	add    %rdx,%rax$/;"	l
a02	kill.asm	/^ a02:	89 c0                	mov    %eax,%eax$/;"	l
a03	mkdir.asm	/^ a03:	01 c2                	add    %eax,%edx$/;"	l
a03	rm.asm	/^ a03:	01 c2                	add    %eax,%edx$/;"	l
a04	bad_mmap.asm	/^ a04:	48 b8 da 05 00 00 00 	movabs $0x5da,%rax$/;"	l
a04	imshow.asm	/^ a04:	48 8d 50 08          	lea    0x8(%rax),%rdx$/;"	l
a04	kill.asm	/^ a04:	48 c1 e0 04          	shl    $0x4,%rax$/;"	l
a04	ln.asm	/^ a04:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
a04	usertests.asm	/^     a04:	89 c7                	mov    %eax,%edi$/;"	l
a04	zombie.asm	/^ a04:	81 7d ec ff 0f 00 00 	cmpl   $0xfff,-0x14(%rbp)$/;"	l
a05	init.asm	/^ a05:	0f b6 00             	movzbl (%rax),%eax$/;"	l
a05	ls.asm	/^     a05:	48 89 85 30 ff ff ff 	mov    %rax,-0xd0(%rbp)$/;"	l
a05	mkdir.asm	/^ a05:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
a05	rm.asm	/^ a05:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
a05	sh.asm	/^     a05:	48 89 c7             	mov    %rax,%rdi$/;"	l
a06	cat.asm	/^ a06:	89 d6                	mov    %edx,%esi$/;"	l
a06	echo.asm	/^ a06:	48 01 d0             	add    %rdx,%rax$/;"	l
a06	grep.asm	/^ a06:	48 63 d0             	movslq %eax,%rdx$/;"	l
a06	stressfs.asm	/^ a06:	0f be d0             	movsbl %al,%edx$/;"	l
a06	usertests.asm	/^     a06:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
a06	wc.asm	/^ a06:	75 5d                	jne    a65 <printf+0x311>$/;"	l
a08	cat.asm	/^ a08:	89 c7                	mov    %eax,%edi$/;"	l
a08	eager_mmap.asm	/^ a08:	48 8d 50 08          	lea    0x8(%rax),%rdx$/;"	l
a08	imshow.asm	/^ a08:	48 89 95 28 ff ff ff 	mov    %rdx,-0xd8(%rbp)$/;"	l
a08	init.asm	/^ a08:	84 c0                	test   %al,%al$/;"	l
a08	kill.asm	/^ a08:	48 89 c2             	mov    %rax,%rdx$/;"	l
a08	lazy_mmap.asm	/^ a08:	48 8d 50 08          	lea    0x8(%rax),%rdx$/;"	l
a08	ln.asm	/^ a08:	48 89 10             	mov    %rdx,(%rax)$/;"	l
a08	sh.asm	/^     a08:	48 b8 b2 12 00 00 00 	movabs $0x12b2,%rax$/;"	l
a08	wc.asm	/^ a08:	8b 85 20 ff ff ff    	mov    -0xe0(%rbp),%eax$/;"	l
a09	echo.asm	/^ a09:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax$/;"	l
a09	grep.asm	/^ a09:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax$/;"	l
a09	mkdir.asm	/^ a09:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
a09	rm.asm	/^ a09:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
a09	stressfs.asm	/^ a09:	8b 85 1c ff ff ff    	mov    -0xe4(%rbp),%eax$/;"	l
a0a	cat.asm	/^ a0a:	48 b8 a6 05 00 00 00 	movabs $0x5a6,%rax$/;"	l
a0a	init.asm	/^ a0a:	0f 85 fc fc ff ff    	jne    70c <printf+0x9e>$/;"	l
a0b	bad_mmap.asm	/^ a0b:	00 00 00 $/;"	l
a0b	kill.asm	/^ a0b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
a0b	ln.asm	/^ a0b:	eb 0e                	jmp    a1b <free+0xcf>$/;"	l
a0b	usertests.asm	/^     a0b:	48 ba db 61 00 00 00 	movabs $0x61db,%rdx$/;"	l
a0b	zombie.asm	/^ a0b:	77 07                	ja     a14 <morecore+0x1b>$/;"	l
a0c	eager_mmap.asm	/^ a0c:	48 89 95 28 ff ff ff 	mov    %rdx,-0xd8(%rbp)$/;"	l
a0c	lazy_mmap.asm	/^ a0c:	48 89 95 28 ff ff ff 	mov    %rdx,-0xd8(%rbp)$/;"	l
a0c	ls.asm	/^     a0c:	c7 85 40 ff ff ff 00 	movl   $0x0,-0xc0(%rbp)$/;"	l
a0c	mkdir.asm	/^ a0c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
a0c	rm.asm	/^ a0c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
a0d	echo.asm	/^ a0d:	75 27                	jne    a36 <free+0x113>$/;"	l
a0d	ln.asm	/^ a0d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
a0d	zombie.asm	/^ a0d:	c7 45 ec 00 10 00 00 	movl   $0x1000,-0x14(%rbp)$/;"	l
a0e	bad_mmap.asm	/^ a0e:	ff d0                	callq  *%rax$/;"	l
a0e	wc.asm	/^ a0e:	83 f8 30             	cmp    $0x30,%eax$/;"	l
a0f	echo.asm	/^ a0f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
a0f	imshow.asm	/^ a0f:	8b 30                	mov    (%rax),%esi$/;"	l
a0f	kill.asm	/^ a0f:	48 01 d0             	add    %rdx,%rax$/;"	l
a0f	sh.asm	/^     a0f:	00 00 00 $/;"	l
a0f	stressfs.asm	/^ a0f:	89 d6                	mov    %edx,%esi$/;"	l
a1	bad_mmap.asm	/^  a1:	ff d1                	callq  *%rcx$/;"	l
a1	cat.asm	/^  a1:	48 ba a3 06 00 00 00 	movabs $0x6a3,%rdx$/;"	l
a1	imshow.asm	/^  a1:	bf 02 00 00 00       	mov    $0x2,%edi$/;"	l
a1	ls.asm	/^      a1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
a1	stressfs.asm	/^  a1:	bf 01 00 00 00       	mov    $0x1,%edi$/;"	l
a10	bad_mmap.asm	/^ a10:	eb 38                	jmp    a4a <printf+0x373>$/;"	l
a10	grep.asm	/^ a10:	48 01 d0             	add    %rdx,%rax$/;"	l
a10	init.asm	/^ a10:	90                   	nop$/;"	l
a10	mkdir.asm	/^ a10:	48 8b 00             	mov    (%rax),%rax$/;"	l
a10	rm.asm	/^ a10:	48 8b 00             	mov    (%rax),%rax$/;"	l
a11	cat.asm	/^ a11:	00 00 00 $/;"	l
a11	imshow.asm	/^ a11:	8b 85 1c ff ff ff    	mov    -0xe4(%rbp),%eax$/;"	l
a11	init.asm	/^ a11:	c9                   	leaveq $/;"	l
a11	ln.asm	/^ a11:	48 8b 10             	mov    (%rax),%rdx$/;"	l
a11	stressfs.asm	/^ a11:	89 c7                	mov    %eax,%edi$/;"	l
a11	wc.asm	/^ a11:	73 23                	jae    a36 <printf+0x2e2>$/;"	l
a12	bad_mmap.asm	/^ a12:	8b 85 1c ff ff ff    	mov    -0xe4(%rbp),%eax$/;"	l
a12	init.asm	/^ a12:	c3                   	retq   $/;"	l
a12	kill.asm	/^ a12:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax$/;"	l
a12	sh.asm	/^     a12:	ff d0                	callq  *%rax$/;"	l
a12	usertests.asm	/^     a12:	00 00 00 $/;"	l
a13	eager_mmap.asm	/^ a13:	8b 00                	mov    (%rax),%eax$/;"	l
a13	echo.asm	/^ a13:	8b 50 08             	mov    0x8(%rax),%edx$/;"	l
a13	grep.asm	/^ a13:	0f b6 00             	movzbl (%rax),%eax$/;"	l
a13	init.asm	/^ a13:	55                   	push   %rbp$/;"	l
a13	lazy_mmap.asm	/^ a13:	8b 00                	mov    (%rax),%eax$/;"	l
a13	ls.asm	/^     a13:	00 00 00 $/;"	l
a13	mkdir.asm	/^ a13:	48 8b 10             	mov    (%rax),%rdx$/;"	l
a13	rm.asm	/^ a13:	48 8b 10             	mov    (%rax),%rdx$/;"	l
a13	stressfs.asm	/^ a13:	48 b8 af 05 00 00 00 	movabs $0x5af,%rax$/;"	l
a13	wc.asm	/^ a13:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax$/;"	l
a14	cat.asm	/^ a14:	ff d0                	callq  *%rax$/;"	l
a14	init.asm	/^ a14:	48 89 e5             	mov    %rsp,%rbp$/;"	l
a14	ln.asm	/^ a14:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
a14	sh.asm	/^     a14:	89 c0                	mov    %eax,%eax$/;"	l
a14	zombie.asm	/^ a14:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
a15	eager_mmap.asm	/^ a15:	0f be d0             	movsbl %al,%edx$/;"	l
a15	lazy_mmap.asm	/^ a15:	0f be d0             	movsbl %al,%edx$/;"	l
a15	usertests.asm	/^     a15:	ff d2                	callq  *%rdx$/;"	l
a16	cat.asm	/^ a16:	c7 85 40 ff ff ff 00 	movl   $0x0,-0xc0(%rbp)$/;"	l
a16	echo.asm	/^ a16:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
a16	grep.asm	/^ a16:	0f be c0             	movsbl %al,%eax$/;"	l
a16	kill.asm	/^ a16:	75 27                	jne    a3f <free+0x113>$/;"	l
a16	ls.asm	/^     a16:	c7 85 44 ff ff ff 00 	movl   $0x0,-0xbc(%rbp)$/;"	l
a16	mkdir.asm	/^ a16:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
a16	rm.asm	/^ a16:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
a16	sh.asm	/^     a16:	48 01 d8             	add    %rbx,%rax$/;"	l
a17	imshow.asm	/^ a17:	b9 01 00 00 00       	mov    $0x1,%ecx$/;"	l
a17	init.asm	/^ a17:	48 83 ec 18          	sub    $0x18,%rsp$/;"	l
a17	usertests.asm	/^     a17:	48 b8 02 60 00 00 00 	movabs $0x6002,%rax$/;"	l
a17	zombie.asm	/^ a17:	c1 e0 04             	shl    $0x4,%eax$/;"	l
a18	bad_mmap.asm	/^ a18:	be 25 00 00 00       	mov    $0x25,%esi$/;"	l
a18	eager_mmap.asm	/^ a18:	8b 85 1c ff ff ff    	mov    -0xe4(%rbp),%eax$/;"	l
a18	kill.asm	/^ a18:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
a18	lazy_mmap.asm	/^ a18:	8b 85 1c ff ff ff    	mov    -0xe4(%rbp),%eax$/;"	l
a18	ln.asm	/^ a18:	48 89 10             	mov    %rdx,(%rax)$/;"	l
a19	grep.asm	/^ a19:	25 ff 00 00 00       	and    $0xff,%eax$/;"	l
a19	sh.asm	/^     a19:	48 89 45 e8          	mov    %rax,-0x18(%rbp)$/;"	l
a1a	echo.asm	/^ a1a:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
a1a	mkdir.asm	/^ a1a:	48 89 10             	mov    %rdx,(%rax)$/;"	l
a1a	rm.asm	/^ a1a:	48 89 10             	mov    %rdx,(%rax)$/;"	l
a1a	stressfs.asm	/^ a1a:	00 00 00 $/;"	l
a1a	wc.asm	/^ a1a:	8b 95 20 ff ff ff    	mov    -0xe0(%rbp),%edx$/;"	l
a1a	zombie.asm	/^ a1a:	89 c7                	mov    %eax,%edi$/;"	l
a1b	init.asm	/^ a1b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
a1b	ln.asm	/^ a1b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
a1c	imshow.asm	/^ a1c:	ba 0a 00 00 00       	mov    $0xa,%edx$/;"	l
a1c	kill.asm	/^ a1c:	8b 50 08             	mov    0x8(%rax),%edx$/;"	l
a1c	zombie.asm	/^ a1c:	48 b8 f3 03 00 00 00 	movabs $0x3f3,%rax$/;"	l
a1d	bad_mmap.asm	/^ a1d:	89 c7                	mov    %eax,%edi$/;"	l
a1d	cat.asm	/^ a1d:	00 00 00 $/;"	l
a1d	echo.asm	/^ a1d:	01 c2                	add    %eax,%edx$/;"	l
a1d	ls.asm	/^     a1d:	00 00 00 $/;"	l
a1d	mkdir.asm	/^ a1d:	eb 0e                	jmp    a2d <free+0xcf>$/;"	l
a1d	rm.asm	/^ a1d:	eb 0e                	jmp    a2d <free+0xcf>$/;"	l
a1d	sh.asm	/^     a1d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx$/;"	l
a1d	stressfs.asm	/^ a1d:	ff d0                	callq  *%rax$/;"	l
a1e	eager_mmap.asm	/^ a1e:	89 d6                	mov    %edx,%esi$/;"	l
a1e	grep.asm	/^ a1e:	89 85 3c ff ff ff    	mov    %eax,-0xc4(%rbp)$/;"	l
a1e	lazy_mmap.asm	/^ a1e:	89 d6                	mov    %edx,%esi$/;"	l
a1e	usertests.asm	/^     a1e:	00 00 00 $/;"	l
a1f	bad_mmap.asm	/^ a1f:	48 b8 da 05 00 00 00 	movabs $0x5da,%rax$/;"	l
a1f	echo.asm	/^ a1f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
a1f	init.asm	/^ a1f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
a1f	kill.asm	/^ a1f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
a1f	ln.asm	/^ a1f:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
a1f	mkdir.asm	/^ a1f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
a1f	rm.asm	/^ a1f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
a1f	stressfs.asm	/^ a1f:	c7 85 40 ff ff ff 00 	movl   $0x0,-0xc0(%rbp)$/;"	l
a2	init.asm	/^  a2:	ff d2                	callq  *%rdx$/;"	l
a2	kill.asm	/^  a2:	89 75 f4             	mov    %esi,-0xc(%rbp)$/;"	l
a2	mkdir.asm	/^  a2:	48 b9 b9 05 00 00 00 	movabs $0x5b9,%rcx$/;"	l
a2	rm.asm	/^  a2:	48 b9 b9 05 00 00 00 	movabs $0x5b9,%rcx$/;"	l
a2	usertests.asm	/^      a2:	48 be af 68 00 00 00 	movabs $0x68af,%rsi$/;"	l
a2	zombie.asm	/^  a2:	75 dc                	jne    80 <strcpy+0x19>$/;"	l
a20	cat.asm	/^ a20:	83 85 44 ff ff ff 01 	addl   $0x1,-0xbc(%rbp)$/;"	l
a20	eager_mmap.asm	/^ a20:	89 c7                	mov    %eax,%edi$/;"	l
a20	lazy_mmap.asm	/^ a20:	89 c7                	mov    %eax,%edi$/;"	l
a20	ls.asm	/^     a20:	e9 e6 02 00 00       	jmpq   d0b <printf+0x384>$/;"	l
a20	wc.asm	/^ a20:	89 d2                	mov    %edx,%edx$/;"	l
a21	imshow.asm	/^ a21:	89 c7                	mov    %eax,%edi$/;"	l
a21	sh.asm	/^     a21:	48 8d 45 d8          	lea    -0x28(%rbp),%rax$/;"	l
a21	usertests.asm	/^     a21:	ff d0                	callq  *%rax$/;"	l
a22	eager_mmap.asm	/^ a22:	48 b8 22 06 00 00 00 	movabs $0x622,%rax$/;"	l
a22	lazy_mmap.asm	/^ a22:	48 b8 22 06 00 00 00 	movabs $0x622,%rax$/;"	l
a22	ln.asm	/^ a22:	89 c0                	mov    %eax,%eax$/;"	l
a22	wc.asm	/^ a22:	48 01 d0             	add    %rdx,%rax$/;"	l
a23	echo.asm	/^ a23:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
a23	imshow.asm	/^ a23:	48 b8 6e 07 00 00 00 	movabs $0x76e,%rax$/;"	l
a23	init.asm	/^ a23:	48 83 e8 10          	sub    $0x10,%rax$/;"	l
a23	kill.asm	/^ a23:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
a23	mkdir.asm	/^ a23:	48 8b 10             	mov    (%rax),%rdx$/;"	l
a23	rm.asm	/^ a23:	48 8b 10             	mov    (%rax),%rdx$/;"	l
a23	usertests.asm	/^     a23:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)$/;"	l
a23	zombie.asm	/^ a23:	00 00 00 $/;"	l
a24	grep.asm	/^ a24:	83 bd 40 ff ff ff 00 	cmpl   $0x0,-0xc0(%rbp)$/;"	l
a24	ln.asm	/^ a24:	48 c1 e0 04          	shl    $0x4,%rax$/;"	l
a25	ls.asm	/^     a25:	8b 85 44 ff ff ff    	mov    -0xbc(%rbp),%eax$/;"	l
a25	sh.asm	/^     a25:	48 89 d6             	mov    %rdx,%rsi$/;"	l
a25	wc.asm	/^ a25:	8b 95 20 ff ff ff    	mov    -0xe0(%rbp),%edx$/;"	l
a26	bad_mmap.asm	/^ a26:	00 00 00 $/;"	l
a26	echo.asm	/^ a26:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
a26	kill.asm	/^ a26:	01 c2                	add    %eax,%edx$/;"	l
a26	mkdir.asm	/^ a26:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
a26	rm.asm	/^ a26:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
a26	stressfs.asm	/^ a26:	00 00 00 $/;"	l
a26	zombie.asm	/^ a26:	ff d0                	callq  *%rax$/;"	l
a27	cat.asm	/^ a27:	8b 85 44 ff ff ff    	mov    -0xbc(%rbp),%eax$/;"	l
a27	init.asm	/^ a27:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
a28	kill.asm	/^ a28:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
a28	ln.asm	/^ a28:	48 89 c2             	mov    %rax,%rdx$/;"	l
a28	sh.asm	/^     a28:	48 89 c7             	mov    %rax,%rdi$/;"	l
a28	zombie.asm	/^ a28:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
a29	bad_mmap.asm	/^ a29:	ff d0                	callq  *%rax$/;"	l
a29	eager_mmap.asm	/^ a29:	00 00 00 $/;"	l
a29	lazy_mmap.asm	/^ a29:	00 00 00 $/;"	l
a29	stressfs.asm	/^ a29:	83 85 44 ff ff ff 01 	addl   $0x1,-0xbc(%rbp)$/;"	l
a2a	echo.asm	/^ a2a:	48 8b 10             	mov    (%rax),%rdx$/;"	l
a2a	imshow.asm	/^ a2a:	00 00 00 $/;"	l
a2a	mkdir.asm	/^ a2a:	48 89 10             	mov    %rdx,(%rax)$/;"	l
a2a	rm.asm	/^ a2a:	48 89 10             	mov    %rdx,(%rax)$/;"	l
a2a	usertests.asm	/^     a2a:	eb 72                	jmp    a9e <writetest1+0x105>$/;"	l
a2b	bad_mmap.asm	/^ a2b:	8b 85 3c ff ff ff    	mov    -0xc4(%rbp),%eax$/;"	l
a2b	grep.asm	/^ a2b:	75 3c                	jne    a69 <printf+0x107>$/;"	l
a2b	init.asm	/^ a2b:	48 b8 e0 0f 00 00 00 	movabs $0xfe0,%rax$/;"	l
a2b	ln.asm	/^ a2b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
a2b	ls.asm	/^     a2b:	48 63 d0             	movslq %eax,%rdx$/;"	l
a2b	sh.asm	/^     a2b:	48 b8 c4 0a 00 00 00 	movabs $0xac4,%rax$/;"	l
a2b	wc.asm	/^ a2b:	83 c2 08             	add    $0x8,%edx$/;"	l
a2c	eager_mmap.asm	/^ a2c:	ff d0                	callq  *%rax$/;"	l
a2c	kill.asm	/^ a2c:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
a2c	lazy_mmap.asm	/^ a2c:	ff d0                	callq  *%rax$/;"	l
a2c	usertests.asm	/^     a2c:	48 b8 40 88 00 00 00 	movabs $0x8840,%rax$/;"	l
a2c	zombie.asm	/^ a2c:	48 83 7d f8 ff       	cmpq   $0xffffffffffffffff,-0x8(%rbp)$/;"	l
a2d	cat.asm	/^ a2d:	48 63 d0             	movslq %eax,%rdx$/;"	l
a2d	echo.asm	/^ a2d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
a2d	grep.asm	/^ a2d:	83 bd 3c ff ff ff 25 	cmpl   $0x25,-0xc4(%rbp)$/;"	l
a2d	imshow.asm	/^ a2d:	ff d0                	callq  *%rax$/;"	l
a2d	mkdir.asm	/^ a2d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
a2d	rm.asm	/^ a2d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
a2e	eager_mmap.asm	/^ a2e:	eb 62                	jmp    a92 <printf+0x373>$/;"	l
a2e	lazy_mmap.asm	/^ a2e:	eb 62                	jmp    a92 <printf+0x373>$/;"	l
a2e	ls.asm	/^     a2e:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax$/;"	l
a2e	wc.asm	/^ a2e:	89 95 20 ff ff ff    	mov    %edx,-0xe0(%rbp)$/;"	l
a2f	imshow.asm	/^ a2f:	e9 7a 01 00 00       	jmpq   bae <printf+0x373>$/;"	l
a2f	kill.asm	/^ a2f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
a2f	ln.asm	/^ a2f:	48 01 d0             	add    %rdx,%rax$/;"	l
a3	bad_mmap.asm	/^  a3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
a3	echo.asm	/^  a3:	8b 55 f0             	mov    -0x10(%rbp),%edx$/;"	l
a3	forktest.asm	/^  a3:	bf 01 00 00 00       	mov    $0x1,%edi$/;"	l
a3	grep.asm	/^  a3:	48 83 c0 01          	add    $0x1,%rax$/;"	l
a3	sh.asm	/^      a3:	48 8b 40 08          	mov    0x8(%rax),%rax$/;"	l
a3	wc.asm	/^  a3:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)$/;"	l
a30	cat.asm	/^ a30:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax$/;"	l
a30	eager_mmap.asm	/^ a30:	83 bd 3c ff ff ff 25 	cmpl   $0x25,-0xc4(%rbp)$/;"	l
a30	lazy_mmap.asm	/^ a30:	83 bd 3c ff ff ff 25 	cmpl   $0x25,-0xc4(%rbp)$/;"	l
a30	stressfs.asm	/^ a30:	8b 85 44 ff ff ff    	mov    -0xbc(%rbp),%eax$/;"	l
a31	bad_mmap.asm	/^ a31:	0f be d0             	movsbl %al,%edx$/;"	l
a31	echo.asm	/^ a31:	48 89 10             	mov    %rdx,(%rax)$/;"	l
a31	mkdir.asm	/^ a31:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
a31	rm.asm	/^ a31:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
a31	zombie.asm	/^ a31:	75 07                	jne    a3a <morecore+0x41>$/;"	l
a32	init.asm	/^ a32:	00 00 00 $/;"	l
a32	ln.asm	/^ a32:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax$/;"	l
a32	sh.asm	/^     a32:	00 00 00 $/;"	l
a33	kill.asm	/^ a33:	48 8b 10             	mov    (%rax),%rdx$/;"	l
a33	usertests.asm	/^     a33:	00 00 00 $/;"	l
a33	zombie.asm	/^ a33:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
a34	bad_mmap.asm	/^ a34:	8b 85 1c ff ff ff    	mov    -0xe4(%rbp),%eax$/;"	l
a34	echo.asm	/^ a34:	eb 0b                	jmp    a41 <free+0x11e>$/;"	l
a34	grep.asm	/^ a34:	75 0f                	jne    a45 <printf+0xe3>$/;"	l
a34	imshow.asm	/^ a34:	83 bd 3c ff ff ff 73 	cmpl   $0x73,-0xc4(%rbp)$/;"	l
a34	mkdir.asm	/^ a34:	89 c0                	mov    %eax,%eax$/;"	l
a34	rm.asm	/^ a34:	89 c0                	mov    %eax,%eax$/;"	l
a34	wc.asm	/^ a34:	eb 12                	jmp    a48 <printf+0x2f4>$/;"	l
a35	init.asm	/^ a35:	48 8b 00             	mov    (%rax),%rax$/;"	l
a35	ls.asm	/^     a35:	48 01 d0             	add    %rdx,%rax$/;"	l
a35	sh.asm	/^     a35:	ff d0                	callq  *%rax$/;"	l
a36	echo.asm	/^ a36:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
a36	grep.asm	/^ a36:	c7 85 40 ff ff ff 25 	movl   $0x25,-0xc0(%rbp)$/;"	l
a36	kill.asm	/^ a36:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
a36	ln.asm	/^ a36:	75 27                	jne    a5f <free+0x113>$/;"	l
a36	mkdir.asm	/^ a36:	48 c1 e0 04          	shl    $0x4,%rax$/;"	l
a36	rm.asm	/^ a36:	48 c1 e0 04          	shl    $0x4,%rax$/;"	l
a36	stressfs.asm	/^ a36:	48 63 d0             	movslq %eax,%rdx$/;"	l
a36	usertests.asm	/^     a36:	8b 55 fc             	mov    -0x4(%rbp),%edx$/;"	l
a36	wc.asm	/^ a36:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax$/;"	l
a37	cat.asm	/^ a37:	48 01 d0             	add    %rdx,%rax$/;"	l
a37	eager_mmap.asm	/^ a37:	75 21                	jne    a5a <printf+0x33b>$/;"	l
a37	lazy_mmap.asm	/^ a37:	75 21                	jne    a5a <printf+0x33b>$/;"	l
a37	sh.asm	/^     a37:	48 89 45 e0          	mov    %rax,-0x20(%rbp)$/;"	l
a38	init.asm	/^ a38:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
a38	ln.asm	/^ a38:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
a38	ls.asm	/^     a38:	0f b6 00             	movzbl (%rax),%eax$/;"	l
a38	zombie.asm	/^ a38:	eb 36                	jmp    a70 <morecore+0x77>$/;"	l
a39	eager_mmap.asm	/^ a39:	8b 85 3c ff ff ff    	mov    -0xc4(%rbp),%eax$/;"	l
a39	lazy_mmap.asm	/^ a39:	8b 85 3c ff ff ff    	mov    -0xc4(%rbp),%eax$/;"	l
a39	stressfs.asm	/^ a39:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax$/;"	l
a39	usertests.asm	/^     a39:	89 10                	mov    %edx,(%rax)$/;"	l
a3a	bad_mmap.asm	/^ a3a:	89 d6                	mov    %edx,%esi$/;"	l
a3a	cat.asm	/^ a3a:	0f b6 00             	movzbl (%rax),%eax$/;"	l
a3a	echo.asm	/^ a3a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
a3a	kill.asm	/^ a3a:	48 89 10             	mov    %rdx,(%rax)$/;"	l
a3a	mkdir.asm	/^ a3a:	48 89 c2             	mov    %rax,%rdx$/;"	l
a3a	rm.asm	/^ a3a:	48 89 c2             	mov    %rax,%rdx$/;"	l
a3a	zombie.asm	/^ a3a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
a3b	imshow.asm	/^ a3b:	0f 85 a5 00 00 00    	jne    ae6 <printf+0x2ab>$/;"	l
a3b	ls.asm	/^     a3b:	0f be c0             	movsbl %al,%eax$/;"	l
a3b	sh.asm	/^     a3b:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx$/;"	l
a3b	usertests.asm	/^     a3b:	8b 45 f4             	mov    -0xc(%rbp),%eax$/;"	l
a3c	bad_mmap.asm	/^ a3c:	89 c7                	mov    %eax,%edi$/;"	l
a3c	init.asm	/^ a3c:	eb 2f                	jmp    a6d <free+0x5a>$/;"	l
a3c	ln.asm	/^ a3c:	8b 50 08             	mov    0x8(%rax),%edx$/;"	l
a3d	cat.asm	/^ a3d:	84 c0                	test   %al,%al$/;"	l
a3d	grep.asm	/^ a3d:	00 00 00 $/;"	l
a3d	kill.asm	/^ a3d:	eb 0b                	jmp    a4a <free+0x11e>$/;"	l
a3d	mkdir.asm	/^ a3d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
a3d	rm.asm	/^ a3d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
a3d	wc.asm	/^ a3d:	48 8d 50 08          	lea    0x8(%rax),%rdx$/;"	l
a3e	bad_mmap.asm	/^ a3e:	48 b8 da 05 00 00 00 	movabs $0x5da,%rax$/;"	l
a3e	echo.asm	/^ a3e:	48 89 10             	mov    %rdx,(%rax)$/;"	l
a3e	init.asm	/^ a3e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
a3e	ls.asm	/^     a3e:	25 ff 00 00 00       	and    $0xff,%eax$/;"	l
a3e	usertests.asm	/^     a3e:	ba 00 02 00 00       	mov    $0x200,%edx$/;"	l
a3e	zombie.asm	/^ a3e:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
a3f	cat.asm	/^ a3f:	0f 85 fc fc ff ff    	jne    741 <printf+0x9e>$/;"	l
a3f	eager_mmap.asm	/^ a3f:	0f be d0             	movsbl %al,%edx$/;"	l
a3f	kill.asm	/^ a3f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
a3f	lazy_mmap.asm	/^ a3f:	0f be d0             	movsbl %al,%edx$/;"	l
a3f	ln.asm	/^ a3f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
a3f	sh.asm	/^     a3f:	48 8d 45 d8          	lea    -0x28(%rbp),%rax$/;"	l
a4	eager_mmap.asm	/^  a4:	00 00 00 $/;"	l
a4	init.asm	/^  a4:	48 b8 8b 04 00 00 00 	movabs $0x48b,%rax$/;"	l
a4	lazy_mmap.asm	/^  a4:	00 00 00 $/;"	l
a4	ln.asm	/^  a4:	00 00 00 $/;"	l
a4	zombie.asm	/^  a4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
a40	grep.asm	/^ a40:	e9 9a 02 00 00       	jmpq   cdf <printf+0x37d>$/;"	l
a40	stressfs.asm	/^ a40:	48 01 d0             	add    %rdx,%rax$/;"	l
a41	echo.asm	/^ a41:	48 b8 90 0e 00 00 00 	movabs $0xe90,%rax$/;"	l
a41	imshow.asm	/^ a41:	8b 85 20 ff ff ff    	mov    -0xe0(%rbp),%eax$/;"	l
a41	mkdir.asm	/^ a41:	48 01 d0             	add    %rdx,%rax$/;"	l
a41	rm.asm	/^ a41:	48 01 d0             	add    %rdx,%rax$/;"	l
a41	wc.asm	/^ a41:	48 89 95 28 ff ff ff 	mov    %rdx,-0xd8(%rbp)$/;"	l
a42	eager_mmap.asm	/^ a42:	8b 85 1c ff ff ff    	mov    -0xe4(%rbp),%eax$/;"	l
a42	init.asm	/^ a42:	48 8b 00             	mov    (%rax),%rax$/;"	l
a42	lazy_mmap.asm	/^ a42:	8b 85 1c ff ff ff    	mov    -0xe4(%rbp),%eax$/;"	l
a42	zombie.asm	/^ a42:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
a43	kill.asm	/^ a43:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
a43	ln.asm	/^ a43:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
a43	ls.asm	/^     a43:	89 85 3c ff ff ff    	mov    %eax,-0xc4(%rbp)$/;"	l
a43	sh.asm	/^     a43:	48 ba fa 1d 00 00 00 	movabs $0x1dfa,%rdx$/;"	l
a43	stressfs.asm	/^ a43:	0f b6 00             	movzbl (%rax),%eax$/;"	l
a43	usertests.asm	/^     a43:	48 be 40 88 00 00 00 	movabs $0x8840,%rsi$/;"	l
a44	mkdir.asm	/^ a44:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax$/;"	l
a44	rm.asm	/^ a44:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax$/;"	l
a45	bad_mmap.asm	/^ a45:	00 00 00 $/;"	l
a45	cat.asm	/^ a45:	90                   	nop$/;"	l
a45	grep.asm	/^ a45:	8b 85 3c ff ff ff    	mov    -0xc4(%rbp),%eax$/;"	l
a45	init.asm	/^ a45:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax$/;"	l
a46	cat.asm	/^ a46:	c9                   	leaveq $/;"	l
a46	ln.asm	/^ a46:	01 c2                	add    %eax,%edx$/;"	l
a46	stressfs.asm	/^ a46:	84 c0                	test   %al,%al$/;"	l
a46	zombie.asm	/^ a46:	8b 55 ec             	mov    -0x14(%rbp),%edx$/;"	l
a47	cat.asm	/^ a47:	c3                   	retq   $/;"	l
a47	imshow.asm	/^ a47:	83 f8 30             	cmp    $0x30,%eax$/;"	l
a47	kill.asm	/^ a47:	48 89 10             	mov    %rdx,(%rax)$/;"	l
a48	bad_mmap.asm	/^ a48:	ff d0                	callq  *%rax$/;"	l
a48	cat.asm	/^ a48:	55                   	push   %rbp$/;"	l
a48	eager_mmap.asm	/^ a48:	89 d6                	mov    %edx,%esi$/;"	l
a48	echo.asm	/^ a48:	00 00 00 $/;"	l
a48	lazy_mmap.asm	/^ a48:	89 d6                	mov    %edx,%esi$/;"	l
a48	ln.asm	/^ a48:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
a48	mkdir.asm	/^ a48:	75 27                	jne    a71 <free+0x113>$/;"	l
a48	rm.asm	/^ a48:	75 27                	jne    a71 <free+0x113>$/;"	l
a48	stressfs.asm	/^ a48:	0f 85 fc fc ff ff    	jne    74a <printf+0x9e>$/;"	l
a48	wc.asm	/^ a48:	8b 00                	mov    (%rax),%eax$/;"	l
a49	cat.asm	/^ a49:	48 89 e5             	mov    %rsp,%rbp$/;"	l
a49	init.asm	/^ a49:	77 17                	ja     a62 <free+0x4f>$/;"	l
a49	ls.asm	/^     a49:	83 bd 40 ff ff ff 00 	cmpl   $0x0,-0xc0(%rbp)$/;"	l
a49	zombie.asm	/^ a49:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
a4a	bad_mmap.asm	/^ a4a:	c7 85 40 ff ff ff 00 	movl   $0x0,-0xc0(%rbp)$/;"	l
a4a	eager_mmap.asm	/^ a4a:	89 c7                	mov    %eax,%edi$/;"	l
a4a	imshow.asm	/^ a4a:	73 23                	jae    a6f <printf+0x234>$/;"	l
a4a	kill.asm	/^ a4a:	48 b8 b0 0e 00 00 00 	movabs $0xeb0,%rax$/;"	l
a4a	lazy_mmap.asm	/^ a4a:	89 c7                	mov    %eax,%edi$/;"	l
a4a	mkdir.asm	/^ a4a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
a4a	rm.asm	/^ a4a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
a4a	sh.asm	/^     a4a:	00 00 00 $/;"	l
a4a	usertests.asm	/^     a4a:	00 00 00 $/;"	l
a4a	wc.asm	/^ a4a:	0f be d0             	movsbl %al,%edx$/;"	l
a4b	echo.asm	/^ a4b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx$/;"	l
a4b	grep.asm	/^ a4b:	0f be d0             	movsbl %al,%edx$/;"	l
a4b	init.asm	/^ a4b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
a4c	cat.asm	/^ a4c:	48 83 ec 18          	sub    $0x18,%rsp$/;"	l
a4c	eager_mmap.asm	/^ a4c:	48 b8 22 06 00 00 00 	movabs $0x622,%rax$/;"	l
a4c	imshow.asm	/^ a4c:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax$/;"	l
a4c	lazy_mmap.asm	/^ a4c:	48 b8 22 06 00 00 00 	movabs $0x622,%rax$/;"	l
a4c	ln.asm	/^ a4c:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
a4c	zombie.asm	/^ a4c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
a4d	sh.asm	/^     a4d:	48 89 ce             	mov    %rcx,%rsi$/;"	l
a4d	usertests.asm	/^     a4d:	89 c7                	mov    %eax,%edi$/;"	l
a4d	wc.asm	/^ a4d:	8b 85 1c ff ff ff    	mov    -0xe4(%rbp),%eax$/;"	l
a4e	grep.asm	/^ a4e:	8b 85 1c ff ff ff    	mov    -0xe4(%rbp),%eax$/;"	l
a4e	mkdir.asm	/^ a4e:	8b 50 08             	mov    0x8(%rax),%edx$/;"	l
a4e	rm.asm	/^ a4e:	8b 50 08             	mov    0x8(%rax),%edx$/;"	l
a4e	stressfs.asm	/^ a4e:	90                   	nop$/;"	l
a4f	echo.asm	/^ a4f:	48 89 10             	mov    %rdx,(%rax)$/;"	l
a4f	init.asm	/^ a4f:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax$/;"	l
a4f	ln.asm	/^ a4f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
a4f	stressfs.asm	/^ a4f:	c9                   	leaveq $/;"	l
a4f	usertests.asm	/^     a4f:	48 b8 2a 60 00 00 00 	movabs $0x602a,%rax$/;"	l
a5	kill.asm	/^  a5:	89 55 f0             	mov    %edx,-0x10(%rbp)$/;"	l
a5	ls.asm	/^      a5:	48 89 c7             	mov    %rax,%rdi$/;"	l
a50	cat.asm	/^ a50:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
a50	ls.asm	/^     a50:	75 3c                	jne    a8e <printf+0x107>$/;"	l
a50	sh.asm	/^     a50:	48 89 c7             	mov    %rax,%rdi$/;"	l
a50	stressfs.asm	/^ a50:	c3                   	retq   $/;"	l
a50	zombie.asm	/^ a50:	48 83 c0 10          	add    $0x10,%rax$/;"	l
a51	bad_mmap.asm	/^ a51:	00 00 00 $/;"	l
a51	kill.asm	/^ a51:	00 00 00 $/;"	l
a51	mkdir.asm	/^ a51:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
a51	rm.asm	/^ a51:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
a51	stressfs.asm	/^ a51:	55                   	push   %rbp$/;"	l
a52	echo.asm	/^ a52:	90                   	nop$/;"	l
a52	ls.asm	/^     a52:	83 bd 3c ff ff ff 25 	cmpl   $0x25,-0xc4(%rbp)$/;"	l
a52	stressfs.asm	/^ a52:	48 89 e5             	mov    %rsp,%rbp$/;"	l
a53	eager_mmap.asm	/^ a53:	00 00 00 $/;"	l
a53	echo.asm	/^ a53:	c9                   	leaveq $/;"	l
a53	imshow.asm	/^ a53:	8b 95 20 ff ff ff    	mov    -0xe0(%rbp),%edx$/;"	l
a53	init.asm	/^ a53:	77 2f                	ja     a84 <free+0x71>$/;"	l
a53	lazy_mmap.asm	/^ a53:	00 00 00 $/;"	l
a53	ln.asm	/^ a53:	48 8b 10             	mov    (%rax),%rdx$/;"	l
a53	sh.asm	/^     a53:	48 b8 51 09 00 00 00 	movabs $0x951,%rax$/;"	l
a53	wc.asm	/^ a53:	89 d6                	mov    %edx,%esi$/;"	l
a54	bad_mmap.asm	/^ a54:	83 85 44 ff ff ff 01 	addl   $0x1,-0xbc(%rbp)$/;"	l
a54	cat.asm	/^ a54:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
a54	echo.asm	/^ a54:	c3                   	retq   $/;"	l
a54	grep.asm	/^ a54:	89 d6                	mov    %edx,%esi$/;"	l
a54	kill.asm	/^ a54:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx$/;"	l
a54	zombie.asm	/^ a54:	48 89 c7             	mov    %rax,%rdi$/;"	l
a55	echo.asm	/^ a55:	55                   	push   %rbp$/;"	l
a55	init.asm	/^ a55:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
a55	mkdir.asm	/^ a55:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
a55	rm.asm	/^ a55:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
a55	stressfs.asm	/^ a55:	48 83 ec 18          	sub    $0x18,%rsp$/;"	l
a55	wc.asm	/^ a55:	89 c7                	mov    %eax,%edi$/;"	l
a56	eager_mmap.asm	/^ a56:	ff d0                	callq  *%rax$/;"	l
a56	echo.asm	/^ a56:	48 89 e5             	mov    %rsp,%rbp$/;"	l
a56	grep.asm	/^ a56:	89 c7                	mov    %eax,%edi$/;"	l
a56	lazy_mmap.asm	/^ a56:	ff d0                	callq  *%rax$/;"	l
a56	ln.asm	/^ a56:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
a56	usertests.asm	/^     a56:	00 00 00 $/;"	l
a57	wc.asm	/^ a57:	48 b8 57 06 00 00 00 	movabs $0x657,%rax$/;"	l
a57	zombie.asm	/^ a57:	48 b8 c7 08 00 00 00 	movabs $0x8c7,%rax$/;"	l
a58	cat.asm	/^ a58:	48 83 e8 10          	sub    $0x10,%rax$/;"	l
a58	eager_mmap.asm	/^ a58:	eb 38                	jmp    a92 <printf+0x373>$/;"	l
a58	grep.asm	/^ a58:	48 b8 65 08 00 00 00 	movabs $0x865,%rax$/;"	l
a58	kill.asm	/^ a58:	48 89 10             	mov    %rdx,(%rax)$/;"	l
a58	lazy_mmap.asm	/^ a58:	eb 38                	jmp    a92 <printf+0x373>$/;"	l
a58	mkdir.asm	/^ a58:	01 c2                	add    %eax,%edx$/;"	l
a58	rm.asm	/^ a58:	01 c2                	add    %eax,%edx$/;"	l
a59	echo.asm	/^ a59:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
a59	imshow.asm	/^ a59:	89 d2                	mov    %edx,%edx$/;"	l
a59	init.asm	/^ a59:	48 8b 00             	mov    (%rax),%rax$/;"	l
a59	ls.asm	/^     a59:	75 0f                	jne    a6a <printf+0xe3>$/;"	l
a59	stressfs.asm	/^ a59:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
a59	usertests.asm	/^     a59:	ff d0                	callq  *%rax$/;"	l
a5a	eager_mmap.asm	/^ a5a:	8b 85 1c ff ff ff    	mov    -0xe4(%rbp),%eax$/;"	l
a5a	lazy_mmap.asm	/^ a5a:	8b 85 1c ff ff ff    	mov    -0xe4(%rbp),%eax$/;"	l
a5a	ln.asm	/^ a5a:	48 89 10             	mov    %rdx,(%rax)$/;"	l
a5a	mkdir.asm	/^ a5a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
a5a	rm.asm	/^ a5a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
a5a	sh.asm	/^     a5a:	00 00 00 $/;"	l
a5b	bad_mmap.asm	/^ a5b:	8b 85 44 ff ff ff    	mov    -0xbc(%rbp),%eax$/;"	l
a5b	imshow.asm	/^ a5b:	48 01 d0             	add    %rdx,%rax$/;"	l
a5b	kill.asm	/^ a5b:	90                   	nop$/;"	l
a5b	ls.asm	/^     a5b:	c7 85 40 ff ff ff 25 	movl   $0x25,-0xc0(%rbp)$/;"	l
a5b	usertests.asm	/^     a5b:	3d 00 02 00 00       	cmp    $0x200,%eax$/;"	l
a5c	cat.asm	/^ a5c:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
a5c	init.asm	/^ a5c:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax$/;"	l
a5c	kill.asm	/^ a5c:	c9                   	leaveq $/;"	l
a5d	echo.asm	/^ a5d:	89 7d ec             	mov    %edi,-0x14(%rbp)$/;"	l
a5d	kill.asm	/^ a5d:	c3                   	retq   $/;"	l
a5d	ln.asm	/^ a5d:	eb 0b                	jmp    a6a <free+0x11e>$/;"	l
a5d	sh.asm	/^     a5d:	ff d0                	callq  *%rax$/;"	l
a5d	stressfs.asm	/^ a5d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
a5e	imshow.asm	/^ a5e:	8b 95 20 ff ff ff    	mov    -0xe0(%rbp),%edx$/;"	l
a5e	kill.asm	/^ a5e:	55                   	push   %rbp$/;"	l
a5e	mkdir.asm	/^ a5e:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
a5e	rm.asm	/^ a5e:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
a5e	wc.asm	/^ a5e:	00 00 00 $/;"	l
a5e	zombie.asm	/^ a5e:	00 00 00 $/;"	l
a5f	grep.asm	/^ a5f:	00 00 00 $/;"	l
a5f	kill.asm	/^ a5f:	48 89 e5             	mov    %rsp,%rbp$/;"	l
a5f	ln.asm	/^ a5f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
a5f	sh.asm	/^     a5f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
a6	echo.asm	/^  a6:	8b 45 f4             	mov    -0xc(%rbp),%eax$/;"	l
a6	imshow.asm	/^  a6:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
a6	stressfs.asm	/^  a6:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
a60	cat.asm	/^ a60:	48 b8 10 12 00 00 00 	movabs $0x1210,%rax$/;"	l
a60	eager_mmap.asm	/^ a60:	be 25 00 00 00       	mov    $0x25,%esi$/;"	l
a60	echo.asm	/^ a60:	81 7d ec ff 0f 00 00 	cmpl   $0xfff,-0x14(%rbp)$/;"	l
a60	init.asm	/^ a60:	77 22                	ja     a84 <free+0x71>$/;"	l
a60	lazy_mmap.asm	/^ a60:	be 25 00 00 00       	mov    $0x25,%esi$/;"	l
a60	usertests.asm	/^     a60:	74 38                	je     a9a <writetest1+0x101>$/;"	l
a61	bad_mmap.asm	/^ a61:	48 63 d0             	movslq %eax,%rdx$/;"	l
a61	mkdir.asm	/^ a61:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
a61	rm.asm	/^ a61:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
a61	stressfs.asm	/^ a61:	48 83 e8 10          	sub    $0x10,%rax$/;"	l
a61	wc.asm	/^ a61:	ff d0                	callq  *%rax$/;"	l
a61	zombie.asm	/^ a61:	ff d0                	callq  *%rax$/;"	l
a62	grep.asm	/^ a62:	ff d0                	callq  *%rax$/;"	l
a62	init.asm	/^ a62:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
a62	kill.asm	/^ a62:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
a62	ls.asm	/^     a62:	00 00 00 $/;"	l
a62	usertests.asm	/^     a62:	48 b8 08 88 00 00 00 	movabs $0x8808,%rax$/;"	l
a63	ln.asm	/^ a63:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
a63	sh.asm	/^     a63:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax$/;"	l
a63	wc.asm	/^ a63:	eb 62                	jmp    ac7 <printf+0x373>$/;"	l
a63	zombie.asm	/^ a63:	48 b8 30 0e 00 00 00 	movabs $0xe30,%rax$/;"	l
a64	bad_mmap.asm	/^ a64:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax$/;"	l
a64	grep.asm	/^ a64:	e9 76 02 00 00       	jmpq   cdf <printf+0x37d>$/;"	l
a64	imshow.asm	/^ a64:	83 c2 08             	add    $0x8,%edx$/;"	l
a65	eager_mmap.asm	/^ a65:	89 c7                	mov    %eax,%edi$/;"	l
a65	lazy_mmap.asm	/^ a65:	89 c7                	mov    %eax,%edi$/;"	l
a65	ls.asm	/^     a65:	e9 9a 02 00 00       	jmpq   d04 <printf+0x37d>$/;"	l
a65	mkdir.asm	/^ a65:	48 8b 10             	mov    (%rax),%rdx$/;"	l
a65	rm.asm	/^ a65:	48 8b 10             	mov    (%rax),%rdx$/;"	l
a65	stressfs.asm	/^ a65:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
a65	wc.asm	/^ a65:	83 bd 3c ff ff ff 25 	cmpl   $0x25,-0xc4(%rbp)$/;"	l
a66	init.asm	/^ a66:	48 8b 00             	mov    (%rax),%rax$/;"	l
a66	kill.asm	/^ a66:	89 7d ec             	mov    %edi,-0x14(%rbp)$/;"	l
a67	cat.asm	/^ a67:	00 00 00 $/;"	l
a67	eager_mmap.asm	/^ a67:	48 b8 22 06 00 00 00 	movabs $0x622,%rax$/;"	l
a67	echo.asm	/^ a67:	77 07                	ja     a70 <morecore+0x1b>$/;"	l
a67	imshow.asm	/^ a67:	89 95 20 ff ff ff    	mov    %edx,-0xe0(%rbp)$/;"	l
a67	lazy_mmap.asm	/^ a67:	48 b8 22 06 00 00 00 	movabs $0x622,%rax$/;"	l
a67	ln.asm	/^ a67:	48 89 10             	mov    %rdx,(%rax)$/;"	l
a67	sh.asm	/^     a67:	74 3d                	je     aa6 <parsecmd+0xb6>$/;"	l
a68	mkdir.asm	/^ a68:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
a68	rm.asm	/^ a68:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
a69	echo.asm	/^ a69:	c7 45 ec 00 10 00 00 	movl   $0x1000,-0x14(%rbp)$/;"	l
a69	grep.asm	/^ a69:	83 bd 40 ff ff ff 25 	cmpl   $0x25,-0xc0(%rbp)$/;"	l
a69	init.asm	/^ a69:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
a69	kill.asm	/^ a69:	81 7d ec ff 0f 00 00 	cmpl   $0xfff,-0x14(%rbp)$/;"	l
a69	sh.asm	/^     a69:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
a69	stressfs.asm	/^ a69:	48 b8 e0 0f 00 00 00 	movabs $0xfe0,%rax$/;"	l
a69	usertests.asm	/^     a69:	00 00 00 $/;"	l
a6a	cat.asm	/^ a6a:	48 8b 00             	mov    (%rax),%rax$/;"	l
a6a	ln.asm	/^ a6a:	48 b8 e0 0e 00 00 00 	movabs $0xee0,%rax$/;"	l
a6a	ls.asm	/^     a6a:	8b 85 3c ff ff ff    	mov    -0xc4(%rbp),%eax$/;"	l
a6a	zombie.asm	/^ a6a:	00 00 00 $/;"	l
a6b	bad_mmap.asm	/^ a6b:	48 01 d0             	add    %rdx,%rax$/;"	l
a6c	mkdir.asm	/^ a6c:	48 89 10             	mov    %rdx,(%rax)$/;"	l
a6c	rm.asm	/^ a6c:	48 89 10             	mov    %rdx,(%rax)$/;"	l
a6c	usertests.asm	/^     a6c:	8b 00                	mov    (%rax),%eax$/;"	l
a6c	wc.asm	/^ a6c:	75 21                	jne    a8f <printf+0x33b>$/;"	l
a6d	cat.asm	/^ a6d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
a6d	imshow.asm	/^ a6d:	eb 12                	jmp    a81 <printf+0x246>$/;"	l
a6d	init.asm	/^ a6d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
a6d	sh.asm	/^     a6d:	48 89 c2             	mov    %rax,%rdx$/;"	l
a6d	zombie.asm	/^ a6d:	48 8b 00             	mov    (%rax),%rax$/;"	l
a6e	bad_mmap.asm	/^ a6e:	0f b6 00             	movzbl (%rax),%eax$/;"	l
a6e	eager_mmap.asm	/^ a6e:	00 00 00 $/;"	l
a6e	lazy_mmap.asm	/^ a6e:	00 00 00 $/;"	l
a6e	usertests.asm	/^     a6e:	8b 55 fc             	mov    -0x4(%rbp),%edx$/;"	l
a6e	wc.asm	/^ a6e:	8b 85 3c ff ff ff    	mov    -0xc4(%rbp),%eax$/;"	l
a6f	imshow.asm	/^ a6f:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax$/;"	l
a6f	mkdir.asm	/^ a6f:	eb 0b                	jmp    a7c <free+0x11e>$/;"	l
a6f	rm.asm	/^ a6f:	eb 0b                	jmp    a7c <free+0x11e>$/;"	l
a7	bad_mmap.asm	/^  a7:	48 89 c2             	mov    %rax,%rdx$/;"	l
a7	eager_mmap.asm	/^  a7:	ff d1                	callq  *%rcx$/;"	l
a7	grep.asm	/^  a7:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
a7	lazy_mmap.asm	/^  a7:	ff d1                	callq  *%rcx$/;"	l
a7	ln.asm	/^  a7:	41 ff d0             	callq  *%r8$/;"	l
a7	sh.asm	/^      a7:	48 89 c2             	mov    %rax,%rdx$/;"	l
a7	wc.asm	/^  a7:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
a70	echo.asm	/^ a70:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
a70	grep.asm	/^ a70:	0f 85 69 02 00 00    	jne    cdf <printf+0x37d>$/;"	l
a70	kill.asm	/^ a70:	77 07                	ja     a79 <morecore+0x1b>$/;"	l
a70	ls.asm	/^     a70:	0f be d0             	movsbl %al,%edx$/;"	l
a70	sh.asm	/^     a70:	48 be fb 1d 00 00 00 	movabs $0x1dfb,%rsi$/;"	l
a70	stressfs.asm	/^ a70:	00 00 00 $/;"	l
a70	zombie.asm	/^ a70:	c9                   	leaveq $/;"	l
a71	bad_mmap.asm	/^ a71:	84 c0                	test   %al,%al$/;"	l
a71	cat.asm	/^ a71:	eb 2f                	jmp    aa2 <free+0x5a>$/;"	l
a71	eager_mmap.asm	/^ a71:	ff d0                	callq  *%rax$/;"	l
a71	init.asm	/^ a71:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax$/;"	l
a71	lazy_mmap.asm	/^ a71:	ff d0                	callq  *%rax$/;"	l
a71	ln.asm	/^ a71:	00 00 00 $/;"	l
a71	mkdir.asm	/^ a71:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
a71	rm.asm	/^ a71:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
a71	usertests.asm	/^     a71:	48 be 7a 6b 00 00 00 	movabs $0x6b7a,%rsi$/;"	l
a71	zombie.asm	/^ a71:	c3                   	retq   $/;"	l
a72	kill.asm	/^ a72:	c7 45 ec 00 10 00 00 	movl   $0x1000,-0x14(%rbp)$/;"	l
a72	zombie.asm	/^ a72:	55                   	push   %rbp$/;"	l
a73	bad_mmap.asm	/^ a73:	0f 85 fc fc ff ff    	jne    775 <printf+0x9e>$/;"	l
a73	cat.asm	/^ a73:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
a73	eager_mmap.asm	/^ a73:	8b 85 3c ff ff ff    	mov    -0xc4(%rbp),%eax$/;"	l
a73	echo.asm	/^ a73:	c1 e0 04             	shl    $0x4,%eax$/;"	l
a73	lazy_mmap.asm	/^ a73:	8b 85 3c ff ff ff    	mov    -0xc4(%rbp),%eax$/;"	l
a73	ls.asm	/^     a73:	8b 85 1c ff ff ff    	mov    -0xe4(%rbp),%eax$/;"	l
a73	stressfs.asm	/^ a73:	48 8b 00             	mov    (%rax),%rax$/;"	l
a73	zombie.asm	/^ a73:	48 89 e5             	mov    %rsp,%rbp$/;"	l
a74	ln.asm	/^ a74:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx$/;"	l
a74	wc.asm	/^ a74:	0f be d0             	movsbl %al,%edx$/;"	l
a75	init.asm	/^ a75:	76 c7                	jbe    a3e <free+0x2b>$/;"	l
a75	mkdir.asm	/^ a75:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
a75	rm.asm	/^ a75:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
a76	echo.asm	/^ a76:	89 c7                	mov    %eax,%edi$/;"	l
a76	grep.asm	/^ a76:	83 bd 3c ff ff ff 64 	cmpl   $0x64,-0xc4(%rbp)$/;"	l
a76	imshow.asm	/^ a76:	48 8d 50 08          	lea    0x8(%rax),%rdx$/;"	l
a76	stressfs.asm	/^ a76:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
a76	zombie.asm	/^ a76:	48 83 ec 30          	sub    $0x30,%rsp$/;"	l
a77	cat.asm	/^ a77:	48 8b 00             	mov    (%rax),%rax$/;"	l
a77	init.asm	/^ a77:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
a77	sh.asm	/^     a77:	00 00 00 $/;"	l
a77	wc.asm	/^ a77:	8b 85 1c ff ff ff    	mov    -0xe4(%rbp),%eax$/;"	l
a78	echo.asm	/^ a78:	48 b8 4f 04 00 00 00 	movabs $0x44f,%rax$/;"	l
a78	ln.asm	/^ a78:	48 89 10             	mov    %rdx,(%rax)$/;"	l
a78	usertests.asm	/^     a78:	00 00 00 $/;"	l
a79	bad_mmap.asm	/^ a79:	90                   	nop$/;"	l
a79	eager_mmap.asm	/^ a79:	0f be d0             	movsbl %al,%edx$/;"	l
a79	kill.asm	/^ a79:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
a79	lazy_mmap.asm	/^ a79:	0f be d0             	movsbl %al,%edx$/;"	l
a79	ls.asm	/^     a79:	89 d6                	mov    %edx,%esi$/;"	l
a79	mkdir.asm	/^ a79:	48 89 10             	mov    %rdx,(%rax)$/;"	l
a79	rm.asm	/^ a79:	48 89 10             	mov    %rdx,(%rax)$/;"	l
a7a	bad_mmap.asm	/^ a7a:	c9                   	leaveq $/;"	l
a7a	cat.asm	/^ a7a:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax$/;"	l
a7a	imshow.asm	/^ a7a:	48 89 95 28 ff ff ff 	mov    %rdx,-0xd8(%rbp)$/;"	l
a7a	sh.asm	/^     a7a:	bf 02 00 00 00       	mov    $0x2,%edi$/;"	l
a7a	stressfs.asm	/^ a7a:	eb 2f                	jmp    aab <free+0x5a>$/;"	l
a7a	zombie.asm	/^ a7a:	89 7d dc             	mov    %edi,-0x24(%rbp)$/;"	l
a7b	bad_mmap.asm	/^ a7b:	c3                   	retq   $/;"	l
a7b	init.asm	/^ a7b:	48 8b 00             	mov    (%rax),%rax$/;"	l
a7b	ln.asm	/^ a7b:	90                   	nop$/;"	l
a7b	ls.asm	/^     a7b:	89 c7                	mov    %eax,%edi$/;"	l
a7b	usertests.asm	/^     a7b:	89 c7                	mov    %eax,%edi$/;"	l
a7c	bad_mmap.asm	/^ a7c:	55                   	push   %rbp$/;"	l
a7c	eager_mmap.asm	/^ a7c:	8b 85 1c ff ff ff    	mov    -0xe4(%rbp),%eax$/;"	l
a7c	kill.asm	/^ a7c:	c1 e0 04             	shl    $0x4,%eax$/;"	l
a7c	lazy_mmap.asm	/^ a7c:	8b 85 1c ff ff ff    	mov    -0xe4(%rbp),%eax$/;"	l
a7c	ln.asm	/^ a7c:	c9                   	leaveq $/;"	l
a7c	mkdir.asm	/^ a7c:	48 b8 00 0f 00 00 00 	movabs $0xf00,%rax$/;"	l
a7c	rm.asm	/^ a7c:	48 b8 f0 0e 00 00 00 	movabs $0xef0,%rax$/;"	l
a7c	stressfs.asm	/^ a7c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
a7d	bad_mmap.asm	/^ a7d:	48 89 e5             	mov    %rsp,%rbp$/;"	l
a7d	grep.asm	/^ a7d:	75 65                	jne    ae4 <printf+0x182>$/;"	l
a7d	ln.asm	/^ a7d:	c3                   	retq   $/;"	l
a7d	ls.asm	/^     a7d:	48 b8 8a 08 00 00 00 	movabs $0x88a,%rax$/;"	l
a7d	usertests.asm	/^     a7d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
a7d	wc.asm	/^ a7d:	89 d6                	mov    %edx,%esi$/;"	l
a7d	zombie.asm	/^ a7d:	8b 45 dc             	mov    -0x24(%rbp),%eax$/;"	l
a7e	cat.asm	/^ a7e:	77 17                	ja     a97 <free+0x4f>$/;"	l
a7e	init.asm	/^ a7e:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax$/;"	l
a7e	ln.asm	/^ a7e:	55                   	push   %rbp$/;"	l
a7f	echo.asm	/^ a7f:	00 00 00 $/;"	l
a7f	grep.asm	/^ a7f:	8b 85 20 ff ff ff    	mov    -0xe0(%rbp),%eax$/;"	l
a7f	kill.asm	/^ a7f:	89 c7                	mov    %eax,%edi$/;"	l
a7f	ln.asm	/^ a7f:	48 89 e5             	mov    %rsp,%rbp$/;"	l
a7f	sh.asm	/^     a7f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
a7f	wc.asm	/^ a7f:	89 c7                	mov    %eax,%edi$/;"	l
a8	cat.asm	/^  a8:	00 00 00 $/;"	l
a8	forktest.asm	/^  a8:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
a8	kill.asm	/^  a8:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx$/;"	l
a8	ls.asm	/^      a8:	48 b8 62 05 00 00 00 	movabs $0x562,%rax$/;"	l
a8	zombie.asm	/^  a8:	c9                   	leaveq $/;"	l
a80	bad_mmap.asm	/^ a80:	48 83 ec 18          	sub    $0x18,%rsp$/;"	l
a80	cat.asm	/^ a80:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
a80	stressfs.asm	/^ a80:	48 8b 00             	mov    (%rax),%rax$/;"	l
a80	zombie.asm	/^ a80:	48 83 c0 0f          	add    $0xf,%rax$/;"	l
a81	imshow.asm	/^ a81:	48 8b 00             	mov    (%rax),%rax$/;"	l
a81	kill.asm	/^ a81:	48 b8 58 04 00 00 00 	movabs $0x458,%rax$/;"	l
a81	wc.asm	/^ a81:	48 b8 57 06 00 00 00 	movabs $0x657,%rax$/;"	l
a82	eager_mmap.asm	/^ a82:	89 d6                	mov    %edx,%esi$/;"	l
a82	echo.asm	/^ a82:	ff d0                	callq  *%rax$/;"	l
a82	init.asm	/^ a82:	76 ba                	jbe    a3e <free+0x2b>$/;"	l
a82	lazy_mmap.asm	/^ a82:	89 d6                	mov    %edx,%esi$/;"	l
a82	ln.asm	/^ a82:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
a82	usertests.asm	/^     a82:	48 b9 db 61 00 00 00 	movabs $0x61db,%rcx$/;"	l
a83	mkdir.asm	/^ a83:	00 00 00 $/;"	l
a83	rm.asm	/^ a83:	00 00 00 $/;"	l
a83	stressfs.asm	/^ a83:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax$/;"	l
a84	bad_mmap.asm	/^ a84:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
a84	cat.asm	/^ a84:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax$/;"	l
a84	eager_mmap.asm	/^ a84:	89 c7                	mov    %eax,%edi$/;"	l
a84	echo.asm	/^ a84:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
a84	imshow.asm	/^ a84:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)$/;"	l
a84	init.asm	/^ a84:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
a84	lazy_mmap.asm	/^ a84:	89 c7                	mov    %eax,%edi$/;"	l
a84	ls.asm	/^     a84:	00 00 00 $/;"	l
a84	sh.asm	/^     a84:	48 b9 d7 16 00 00 00 	movabs $0x16d7,%rcx$/;"	l
a84	zombie.asm	/^ a84:	48 c1 e8 04          	shr    $0x4,%rax$/;"	l
a85	grep.asm	/^ a85:	83 f8 30             	cmp    $0x30,%eax$/;"	l
a86	eager_mmap.asm	/^ a86:	48 b8 22 06 00 00 00 	movabs $0x622,%rax$/;"	l
a86	lazy_mmap.asm	/^ a86:	48 b8 22 06 00 00 00 	movabs $0x622,%rax$/;"	l
a86	ln.asm	/^ a86:	89 7d ec             	mov    %edi,-0x14(%rbp)$/;"	l
a86	mkdir.asm	/^ a86:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx$/;"	l
a86	rm.asm	/^ a86:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx$/;"	l
a87	ls.asm	/^     a87:	ff d0                	callq  *%rax$/;"	l
a87	stressfs.asm	/^ a87:	77 17                	ja     aa0 <free+0x4f>$/;"	l
a88	bad_mmap.asm	/^ a88:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
a88	cat.asm	/^ a88:	77 2f                	ja     ab9 <free+0x71>$/;"	l
a88	echo.asm	/^ a88:	48 83 7d f8 ff       	cmpq   $0xffffffffffffffff,-0x8(%rbp)$/;"	l
a88	grep.asm	/^ a88:	73 23                	jae    aad <printf+0x14b>$/;"	l
a88	init.asm	/^ a88:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
a88	kill.asm	/^ a88:	00 00 00 $/;"	l
a88	wc.asm	/^ a88:	00 00 00 $/;"	l
a88	zombie.asm	/^ a88:	83 c0 01             	add    $0x1,%eax$/;"	l
a89	ln.asm	/^ a89:	81 7d ec ff 0f 00 00 	cmpl   $0xfff,-0x14(%rbp)$/;"	l
a89	ls.asm	/^     a89:	e9 76 02 00 00       	jmpq   d04 <printf+0x37d>$/;"	l
a89	stressfs.asm	/^ a89:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
a89	usertests.asm	/^     a89:	00 00 00 $/;"	l
a8a	cat.asm	/^ a8a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
a8a	grep.asm	/^ a8a:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax$/;"	l
a8a	mkdir.asm	/^ a8a:	48 89 10             	mov    %rdx,(%rax)$/;"	l
a8a	rm.asm	/^ a8a:	48 89 10             	mov    %rdx,(%rax)$/;"	l
a8b	imshow.asm	/^ a8b:	48 83 bd 48 ff ff ff 	cmpq   $0x0,-0xb8(%rbp)$/;"	l
a8b	init.asm	/^ a8b:	89 c0                	mov    %eax,%eax$/;"	l
a8b	kill.asm	/^ a8b:	ff d0                	callq  *%rax$/;"	l
a8b	sh.asm	/^     a8b:	00 00 00 $/;"	l
a8b	wc.asm	/^ a8b:	ff d0                	callq  *%rax$/;"	l
a8b	zombie.asm	/^ a8b:	89 45 ec             	mov    %eax,-0x14(%rbp)$/;"	l
a8c	bad_mmap.asm	/^ a8c:	48 83 e8 10          	sub    $0x10,%rax$/;"	l
a8c	usertests.asm	/^     a8c:	ff d1                	callq  *%rcx$/;"	l
a8d	eager_mmap.asm	/^ a8d:	00 00 00 $/;"	l
a8d	echo.asm	/^ a8d:	75 07                	jne    a96 <morecore+0x41>$/;"	l
a8d	init.asm	/^ a8d:	48 c1 e0 04          	shl    $0x4,%rax$/;"	l
a8d	kill.asm	/^ a8d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
a8d	lazy_mmap.asm	/^ a8d:	00 00 00 $/;"	l
a8d	mkdir.asm	/^ a8d:	90                   	nop$/;"	l
a8d	rm.asm	/^ a8d:	90                   	nop$/;"	l
a8d	stressfs.asm	/^ a8d:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax$/;"	l
a8d	wc.asm	/^ a8d:	eb 38                	jmp    ac7 <printf+0x373>$/;"	l
a8e	cat.asm	/^ a8e:	48 8b 00             	mov    (%rax),%rax$/;"	l
a8e	ls.asm	/^     a8e:	83 bd 40 ff ff ff 25 	cmpl   $0x25,-0xc0(%rbp)$/;"	l
a8e	mkdir.asm	/^ a8e:	c9                   	leaveq $/;"	l
a8e	rm.asm	/^ a8e:	c9                   	leaveq $/;"	l
a8e	sh.asm	/^     a8e:	ff d1                	callq  *%rcx$/;"	l
a8e	usertests.asm	/^     a8e:	48 b8 02 60 00 00 00 	movabs $0x6002,%rax$/;"	l
a8e	zombie.asm	/^ a8e:	48 b8 30 0e 00 00 00 	movabs $0xe30,%rax$/;"	l
a8f	echo.asm	/^ a8f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
a8f	mkdir.asm	/^ a8f:	c3                   	retq   $/;"	l
a8f	rm.asm	/^ a8f:	c3                   	retq   $/;"	l
a8f	wc.asm	/^ a8f:	8b 85 1c ff ff ff    	mov    -0xe4(%rbp),%eax$/;"	l
a9	eager_mmap.asm	/^  a9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
a9	echo.asm	/^  a9:	48 89 ce             	mov    %rcx,%rsi$/;"	l
a9	lazy_mmap.asm	/^  a9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
a9	mkdir.asm	/^  a9:	00 00 00 $/;"	l
a9	rm.asm	/^  a9:	00 00 00 $/;"	l
a9	usertests.asm	/^      a9:	00 00 00 $/;"	l
a9	zombie.asm	/^  a9:	c3                   	retq   $/;"	l
a90	bad_mmap.asm	/^ a90:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
a90	eager_mmap.asm	/^ a90:	ff d0                	callq  *%rax$/;"	l
a90	lazy_mmap.asm	/^ a90:	ff d0                	callq  *%rax$/;"	l
a90	ln.asm	/^ a90:	77 07                	ja     a99 <morecore+0x1b>$/;"	l
a90	mkdir.asm	/^ a90:	55                   	push   %rbp$/;"	l
a90	rm.asm	/^ a90:	55                   	push   %rbp$/;"	l
a90	sh.asm	/^     a90:	48 bf 0a 1e 00 00 00 	movabs $0x1e0a,%rdi$/;"	l
a91	cat.asm	/^ a91:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax$/;"	l
a91	grep.asm	/^ a91:	8b 95 20 ff ff ff    	mov    -0xe0(%rbp),%edx$/;"	l
a91	init.asm	/^ a91:	48 89 c2             	mov    %rax,%rdx$/;"	l
a91	kill.asm	/^ a91:	48 83 7d f8 ff       	cmpq   $0xffffffffffffffff,-0x8(%rbp)$/;"	l
a91	mkdir.asm	/^ a91:	48 89 e5             	mov    %rsp,%rbp$/;"	l
a91	rm.asm	/^ a91:	48 89 e5             	mov    %rsp,%rbp$/;"	l
a91	stressfs.asm	/^ a91:	77 2f                	ja     ac2 <free+0x71>$/;"	l
a92	eager_mmap.asm	/^ a92:	c7 85 40 ff ff ff 00 	movl   $0x0,-0xc0(%rbp)$/;"	l
a92	imshow.asm	/^ a92:	00 $/;"	l
a92	lazy_mmap.asm	/^ a92:	c7 85 40 ff ff ff 00 	movl   $0x0,-0xc0(%rbp)$/;"	l
a92	ln.asm	/^ a92:	c7 45 ec 00 10 00 00 	movl   $0x1000,-0x14(%rbp)$/;"	l
a93	imshow.asm	/^ a93:	75 3e                	jne    ad3 <printf+0x298>$/;"	l
a93	stressfs.asm	/^ a93:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
a94	bad_mmap.asm	/^ a94:	48 b8 40 11 00 00 00 	movabs $0x1140,%rax$/;"	l
a94	echo.asm	/^ a94:	eb 36                	jmp    acc <morecore+0x77>$/;"	l
a94	init.asm	/^ a94:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
a94	mkdir.asm	/^ a94:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
a94	rm.asm	/^ a94:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
a95	cat.asm	/^ a95:	77 22                	ja     ab9 <free+0x71>$/;"	l
a95	imshow.asm	/^ a95:	48 b8 c0 0f 00 00 00 	movabs $0xfc0,%rax$/;"	l
a95	ls.asm	/^     a95:	0f 85 69 02 00 00    	jne    d04 <printf+0x37d>$/;"	l
a95	usertests.asm	/^     a95:	00 00 00 $/;"	l
a95	wc.asm	/^ a95:	be 25 00 00 00       	mov    $0x25,%esi$/;"	l
a95	zombie.asm	/^ a95:	00 00 00 $/;"	l
a96	echo.asm	/^ a96:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
a96	kill.asm	/^ a96:	75 07                	jne    a9f <morecore+0x41>$/;"	l
a97	cat.asm	/^ a97:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
a97	grep.asm	/^ a97:	89 d2                	mov    %edx,%edx$/;"	l
a97	sh.asm	/^     a97:	00 00 00 $/;"	l
a97	stressfs.asm	/^ a97:	48 8b 00             	mov    (%rax),%rax$/;"	l
a98	init.asm	/^ a98:	48 01 c2             	add    %rax,%rdx$/;"	l
a98	kill.asm	/^ a98:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
a98	mkdir.asm	/^ a98:	89 7d ec             	mov    %edi,-0x14(%rbp)$/;"	l
a98	rm.asm	/^ a98:	89 7d ec             	mov    %edi,-0x14(%rbp)$/;"	l
a98	usertests.asm	/^     a98:	ff d0                	callq  *%rax$/;"	l
a98	zombie.asm	/^ a98:	48 8b 00             	mov    (%rax),%rax$/;"	l
a99	eager_mmap.asm	/^ a99:	00 00 00 $/;"	l
a99	grep.asm	/^ a99:	48 01 d0             	add    %rdx,%rax$/;"	l
a99	lazy_mmap.asm	/^ a99:	00 00 00 $/;"	l
a99	ln.asm	/^ a99:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
a9a	echo.asm	/^ a9a:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
a9a	sh.asm	/^     a9a:	48 b8 26 05 00 00 00 	movabs $0x526,%rax$/;"	l
a9a	stressfs.asm	/^ a9a:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax$/;"	l
a9a	usertests.asm	/^     a9a:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)$/;"	l
a9a	wc.asm	/^ a9a:	89 c7                	mov    %eax,%edi$/;"	l
a9b	bad_mmap.asm	/^ a9b:	00 00 00 $/;"	l
a9b	cat.asm	/^ a9b:	48 8b 00             	mov    (%rax),%rax$/;"	l
a9b	init.asm	/^ a9b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
a9b	ls.asm	/^     a9b:	83 bd 3c ff ff ff 64 	cmpl   $0x64,-0xc4(%rbp)$/;"	l
a9b	mkdir.asm	/^ a9b:	81 7d ec ff 0f 00 00 	cmpl   $0xfff,-0x14(%rbp)$/;"	l
a9b	rm.asm	/^ a9b:	81 7d ec ff 0f 00 00 	cmpl   $0xfff,-0x14(%rbp)$/;"	l
a9b	zombie.asm	/^ a9b:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
a9c	eager_mmap.asm	/^ a9c:	83 85 44 ff ff ff 01 	addl   $0x1,-0xbc(%rbp)$/;"	l
a9c	grep.asm	/^ a9c:	8b 95 20 ff ff ff    	mov    -0xe0(%rbp),%edx$/;"	l
a9c	imshow.asm	/^ a9c:	00 00 00 $/;"	l
a9c	lazy_mmap.asm	/^ a9c:	83 85 44 ff ff ff 01 	addl   $0x1,-0xbc(%rbp)$/;"	l
a9c	ln.asm	/^ a9c:	c1 e0 04             	shl    $0x4,%eax$/;"	l
a9c	wc.asm	/^ a9c:	48 b8 57 06 00 00 00 	movabs $0x657,%rax$/;"	l
a9d	kill.asm	/^ a9d:	eb 36                	jmp    ad5 <morecore+0x77>$/;"	l
a9e	bad_mmap.asm	/^ a9e:	48 8b 00             	mov    (%rax),%rax$/;"	l
a9e	cat.asm	/^ a9e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
a9e	echo.asm	/^ a9e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
a9e	stressfs.asm	/^ a9e:	77 22                	ja     ac2 <free+0x71>$/;"	l
a9e	usertests.asm	/^     a9e:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
a9f	imshow.asm	/^ a9f:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)$/;"	l
a9f	init.asm	/^ a9f:	48 8b 00             	mov    (%rax),%rax$/;"	l
a9f	kill.asm	/^ a9f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
a9f	ln.asm	/^ a9f:	89 c7                	mov    %eax,%edi$/;"	l
a9f	zombie.asm	/^ a9f:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)$/;"	l
aa	bad_mmap.asm	/^  aa:	48 be 0b 0e 00 00 00 	movabs $0xe0b,%rsi$/;"	l
aa	kernel.asm	/^  aa = PGROUNDDOWN(a);$/;"	d
aa	ln.asm	/^  aa:	48 b8 ce 03 00 00 00 	movabs $0x3ce,%rax$/;"	l
aa	sh.asm	/^      aa:	48 be 7f 1d 00 00 00 	movabs $0x1d7f,%rsi$/;"	l
aa	wc.asm	/^  aa:	3b 45 e8             	cmp    -0x18(%rbp),%eax$/;"	l
aa	zombie.asm	/^  aa:	55                   	push   %rbp$/;"	l
aa0	stressfs.asm	/^ aa0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
aa1	bad_mmap.asm	/^ aa1:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
aa1	ln.asm	/^ aa1:	48 b8 78 04 00 00 00 	movabs $0x478,%rax$/;"	l
aa1	sh.asm	/^     aa1:	00 00 00 $/;"	l
aa1	usertests.asm	/^     aa1:	3d 8b 00 00 00       	cmp    $0x8b,%eax$/;"	l
aa2	cat.asm	/^ aa2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
aa2	echo.asm	/^ aa2:	8b 55 ec             	mov    -0x14(%rbp),%edx$/;"	l
aa2	grep.asm	/^ aa2:	83 c2 08             	add    $0x8,%edx$/;"	l
aa2	init.asm	/^ aa2:	48 39 c2             	cmp    %rax,%rdx$/;"	l
aa2	ls.asm	/^     aa2:	75 65                	jne    b09 <printf+0x182>$/;"	l
aa2	mkdir.asm	/^ aa2:	77 07                	ja     aab <morecore+0x1b>$/;"	l
aa2	rm.asm	/^ aa2:	77 07                	ja     aab <morecore+0x1b>$/;"	l
aa3	eager_mmap.asm	/^ aa3:	8b 85 44 ff ff ff    	mov    -0xbc(%rbp),%eax$/;"	l
aa3	kill.asm	/^ aa3:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
aa3	lazy_mmap.asm	/^ aa3:	8b 85 44 ff ff ff    	mov    -0xbc(%rbp),%eax$/;"	l
aa3	wc.asm	/^ aa3:	00 00 00 $/;"	l
aa4	ls.asm	/^     aa4:	8b 85 20 ff ff ff    	mov    -0xe0(%rbp),%eax$/;"	l
aa4	mkdir.asm	/^ aa4:	c7 45 ec 00 10 00 00 	movl   $0x1000,-0x14(%rbp)$/;"	l
aa4	rm.asm	/^ aa4:	c7 45 ec 00 10 00 00 	movl   $0x1000,-0x14(%rbp)$/;"	l
aa4	sh.asm	/^     aa4:	ff d0                	callq  *%rax$/;"	l
aa4	stressfs.asm	/^ aa4:	48 8b 00             	mov    (%rax),%rax$/;"	l
aa4	zombie.asm	/^ aa4:	75 4a                	jne    af0 <malloc+0x7e>$/;"	l
aa5	bad_mmap.asm	/^ aa5:	eb 2f                	jmp    ad6 <free+0x5a>$/;"	l
aa5	echo.asm	/^ aa5:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
aa5	grep.asm	/^ aa5:	89 95 20 ff ff ff    	mov    %edx,-0xe0(%rbp)$/;"	l
aa5	init.asm	/^ aa5:	75 2d                	jne    ad4 <free+0xc1>$/;"	l
aa6	cat.asm	/^ aa6:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax$/;"	l
aa6	imshow.asm	/^ aa6:	eb 2b                	jmp    ad3 <printf+0x298>$/;"	l
aa6	sh.asm	/^     aa6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
aa6	usertests.asm	/^     aa6:	76 84                	jbe    a2c <writetest1+0x93>$/;"	l
aa6	wc.asm	/^ aa6:	ff d0                	callq  *%rax$/;"	l
aa6	zombie.asm	/^ aa6:	48 b8 20 0e 00 00 00 	movabs $0xe20,%rax$/;"	l
aa7	bad_mmap.asm	/^ aa7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
aa7	init.asm	/^ aa7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
aa7	kill.asm	/^ aa7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
aa7	stressfs.asm	/^ aa7:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
aa8	echo.asm	/^ aa8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
aa8	imshow.asm	/^ aa8:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax$/;"	l
aa8	ln.asm	/^ aa8:	00 00 00 $/;"	l
aa8	usertests.asm	/^     aa8:	8b 45 f4             	mov    -0xc(%rbp),%eax$/;"	l
aa8	wc.asm	/^ aa8:	8b 85 3c ff ff ff    	mov    -0xc4(%rbp),%eax$/;"	l
aa9	eager_mmap.asm	/^ aa9:	48 63 d0             	movslq %eax,%rdx$/;"	l
aa9	lazy_mmap.asm	/^ aa9:	48 63 d0             	movslq %eax,%rdx$/;"	l
aaa	cat.asm	/^ aaa:	76 c7                	jbe    a73 <free+0x2b>$/;"	l
aaa	ls.asm	/^     aaa:	83 f8 30             	cmp    $0x30,%eax$/;"	l
aaa	sh.asm	/^     aaa:	48 89 c7             	mov    %rax,%rdi$/;"	l
aab	bad_mmap.asm	/^ aab:	48 8b 00             	mov    (%rax),%rax$/;"	l
aab	grep.asm	/^ aab:	eb 12                	jmp    abf <printf+0x15d>$/;"	l
aab	init.asm	/^ aab:	8b 50 08             	mov    0x8(%rax),%edx$/;"	l
aab	kill.asm	/^ aab:	8b 55 ec             	mov    -0x14(%rbp),%edx$/;"	l
aab	ln.asm	/^ aab:	ff d0                	callq  *%rax$/;"	l
aab	mkdir.asm	/^ aab:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
aab	rm.asm	/^ aab:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
aab	stressfs.asm	/^ aab:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
aab	usertests.asm	/^     aab:	89 c7                	mov    %eax,%edi$/;"	l
aac	cat.asm	/^ aac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
aac	eager_mmap.asm	/^ aac:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax$/;"	l
aac	echo.asm	/^ aac:	48 83 c0 10          	add    $0x10,%rax$/;"	l
aac	lazy_mmap.asm	/^ aac:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax$/;"	l
aad	grep.asm	/^ aad:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax$/;"	l
aad	ln.asm	/^ aad:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
aad	ls.asm	/^     aad:	73 23                	jae    ad2 <printf+0x14b>$/;"	l
aad	sh.asm	/^     aad:	48 b8 95 10 00 00 00 	movabs $0x1095,%rax$/;"	l
aad	usertests.asm	/^     aad:	48 b8 34 60 00 00 00 	movabs $0x6034,%rax$/;"	l
aad	zombie.asm	/^ aad:	00 00 00 $/;"	l
aae	bad_mmap.asm	/^ aae:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax$/;"	l
aae	init.asm	/^ aae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
aae	kill.asm	/^ aae:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
aae	mkdir.asm	/^ aae:	c1 e0 04             	shl    $0x4,%eax$/;"	l
aae	rm.asm	/^ aae:	c1 e0 04             	shl    $0x4,%eax$/;"	l
aae	wc.asm	/^ aae:	0f be d0             	movsbl %al,%edx$/;"	l
aaf	imshow.asm	/^ aaf:	0f b6 00             	movzbl (%rax),%eax$/;"	l
aaf	ls.asm	/^     aaf:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax$/;"	l
aaf	stressfs.asm	/^ aaf:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax$/;"	l
ab	cat.asm	/^  ab:	ff d2                	callq  *%rdx$/;"	l
ab	grep.asm	/^  ab:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ab	imshow.asm	/^  ab:	48 ba 3b 08 00 00 00 	movabs $0x83b,%rdx$/;"	l
ab	init.asm	/^  ab:	00 00 00 $/;"	l
ab	stressfs.asm	/^  ab:	48 b9 ac 06 00 00 00 	movabs $0x6ac,%rcx$/;"	l
ab	zombie.asm	/^  ab:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ab0	cat.asm	/^ ab0:	48 8b 00             	mov    (%rax),%rax$/;"	l
ab0	echo.asm	/^ ab0:	48 89 c7             	mov    %rax,%rdi$/;"	l
ab0	zombie.asm	/^ ab0:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ab1	kill.asm	/^ ab1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ab1	ln.asm	/^ ab1:	48 83 7d f8 ff       	cmpq   $0xffffffffffffffff,-0x8(%rbp)$/;"	l
ab1	mkdir.asm	/^ ab1:	89 c7                	mov    %eax,%edi$/;"	l
ab1	rm.asm	/^ ab1:	89 c7                	mov    %eax,%edi$/;"	l
ab1	wc.asm	/^ ab1:	8b 85 1c ff ff ff    	mov    -0xe4(%rbp),%eax$/;"	l
ab2	bad_mmap.asm	/^ ab2:	77 17                	ja     acb <free+0x4f>$/;"	l
ab2	imshow.asm	/^ ab2:	0f be d0             	movsbl %al,%edx$/;"	l
ab2	init.asm	/^ ab2:	48 8b 00             	mov    (%rax),%rax$/;"	l
ab3	cat.asm	/^ ab3:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax$/;"	l
ab3	eager_mmap.asm	/^ ab3:	48 01 d0             	add    %rdx,%rax$/;"	l
ab3	echo.asm	/^ ab3:	48 b8 23 09 00 00 00 	movabs $0x923,%rax$/;"	l
ab3	lazy_mmap.asm	/^ ab3:	48 01 d0             	add    %rdx,%rax$/;"	l
ab3	mkdir.asm	/^ ab3:	48 b8 8a 04 00 00 00 	movabs $0x48a,%rax$/;"	l
ab3	rm.asm	/^ ab3:	48 b8 8a 04 00 00 00 	movabs $0x48a,%rax$/;"	l
ab3	stressfs.asm	/^ ab3:	76 c7                	jbe    a7c <free+0x2b>$/;"	l
ab4	bad_mmap.asm	/^ ab4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ab4	grep.asm	/^ ab4:	48 8d 50 08          	lea    0x8(%rax),%rdx$/;"	l
ab4	sh.asm	/^     ab4:	00 00 00 $/;"	l
ab4	usertests.asm	/^     ab4:	00 00 00 $/;"	l
ab4	zombie.asm	/^ ab4:	48 b8 30 0e 00 00 00 	movabs $0xe30,%rax$/;"	l
ab5	imshow.asm	/^ ab5:	8b 85 1c ff ff ff    	mov    -0xe4(%rbp),%eax$/;"	l
ab5	init.asm	/^ ab5:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
ab5	kill.asm	/^ ab5:	48 83 c0 10          	add    $0x10,%rax$/;"	l
ab5	stressfs.asm	/^ ab5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ab6	eager_mmap.asm	/^ ab6:	0f b6 00             	movzbl (%rax),%eax$/;"	l
ab6	lazy_mmap.asm	/^ ab6:	0f b6 00             	movzbl (%rax),%eax$/;"	l
ab6	ln.asm	/^ ab6:	75 07                	jne    abf <morecore+0x41>$/;"	l
ab6	ls.asm	/^     ab6:	8b 95 20 ff ff ff    	mov    -0xe0(%rbp),%edx$/;"	l
ab7	cat.asm	/^ ab7:	76 ba                	jbe    a73 <free+0x2b>$/;"	l
ab7	sh.asm	/^     ab7:	ff d0                	callq  *%rax$/;"	l
ab7	usertests.asm	/^     ab7:	ff d0                	callq  *%rax$/;"	l
ab7	wc.asm	/^ ab7:	89 d6                	mov    %edx,%esi$/;"	l
ab8	bad_mmap.asm	/^ ab8:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax$/;"	l
ab8	grep.asm	/^ ab8:	48 89 95 28 ff ff ff 	mov    %rdx,-0xd8(%rbp)$/;"	l
ab8	init.asm	/^ ab8:	01 c2                	add    %eax,%edx$/;"	l
ab8	ln.asm	/^ ab8:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ab9	cat.asm	/^ ab9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ab9	eager_mmap.asm	/^ ab9:	84 c0                	test   %al,%al$/;"	l
ab9	kill.asm	/^ ab9:	48 89 c7             	mov    %rax,%rdi$/;"	l
ab9	lazy_mmap.asm	/^ ab9:	84 c0                	test   %al,%al$/;"	l
ab9	sh.asm	/^     ab9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ab9	stressfs.asm	/^ ab9:	48 8b 00             	mov    (%rax),%rax$/;"	l
ab9	usertests.asm	/^     ab9:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ab9	wc.asm	/^ ab9:	89 c7                	mov    %eax,%edi$/;"	l
aba	echo.asm	/^ aba:	00 00 00 $/;"	l
aba	init.asm	/^ aba:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
aba	mkdir.asm	/^ aba:	00 00 00 $/;"	l
aba	rm.asm	/^ aba:	00 00 00 $/;"	l
abb	eager_mmap.asm	/^ abb:	0f 85 fc fc ff ff    	jne    7bd <printf+0x9e>$/;"	l
abb	imshow.asm	/^ abb:	89 d6                	mov    %edx,%esi$/;"	l
abb	lazy_mmap.asm	/^ abb:	0f 85 fc fc ff ff    	jne    7bd <printf+0x9e>$/;"	l
abb	wc.asm	/^ abb:	48 b8 57 06 00 00 00 	movabs $0x657,%rax$/;"	l
abb	zombie.asm	/^ abb:	00 00 00 $/;"	l
abc	bad_mmap.asm	/^ abc:	77 2f                	ja     aed <free+0x71>$/;"	l
abc	kill.asm	/^ abc:	48 b8 2c 09 00 00 00 	movabs $0x92c,%rax$/;"	l
abc	ls.asm	/^     abc:	89 d2                	mov    %edx,%edx$/;"	l
abc	stressfs.asm	/^ abc:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax$/;"	l
abd	cat.asm	/^ abd:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
abd	echo.asm	/^ abd:	ff d0                	callq  *%rax$/;"	l
abd	imshow.asm	/^ abd:	89 c7                	mov    %eax,%edi$/;"	l
abd	ln.asm	/^ abd:	eb 36                	jmp    af5 <morecore+0x77>$/;"	l
abd	mkdir.asm	/^ abd:	ff d0                	callq  *%rax$/;"	l
abd	rm.asm	/^ abd:	ff d0                	callq  *%rax$/;"	l
abd	sh.asm	/^     abd:	48 83 c4 28          	add    $0x28,%rsp$/;"	l
abe	bad_mmap.asm	/^ abe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
abe	init.asm	/^ abe:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
abe	ls.asm	/^     abe:	48 01 d0             	add    %rdx,%rax$/;"	l
abe	usertests.asm	/^     abe:	48 bf 5c 6b 00 00 00 	movabs $0x6b5c,%rdi$/;"	l
abe	zombie.asm	/^ abe:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
abf	echo.asm	/^ abf:	48 b8 90 0e 00 00 00 	movabs $0xe90,%rax$/;"	l
abf	grep.asm	/^ abf:	8b 30                	mov    (%rax),%esi$/;"	l
abf	imshow.asm	/^ abf:	48 b8 3e 07 00 00 00 	movabs $0x73e,%rax$/;"	l
abf	ln.asm	/^ abf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
abf	mkdir.asm	/^ abf:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
abf	rm.asm	/^ abf:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ac	echo.asm	/^  ac:	48 89 f7             	mov    %rsi,%rdi$/;"	l
ac	kill.asm	/^  ac:	8b 55 f0             	mov    -0x10(%rbp),%edx$/;"	l
ac	mkdir.asm	/^  ac:	ff d1                	callq  *%rcx$/;"	l
ac	rm.asm	/^  ac:	ff d1                	callq  *%rcx$/;"	l
ac	usertests.asm	/^      ac:	89 c7                	mov    %eax,%edi$/;"	l
ac0	cat.asm	/^ ac0:	89 c0                	mov    %eax,%eax$/;"	l
ac0	stressfs.asm	/^ ac0:	76 ba                	jbe    a7c <free+0x2b>$/;"	l
ac1	eager_mmap.asm	/^ ac1:	90                   	nop$/;"	l
ac1	grep.asm	/^ ac1:	8b 85 1c ff ff ff    	mov    -0xe4(%rbp),%eax$/;"	l
ac1	init.asm	/^ ac1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ac1	lazy_mmap.asm	/^ ac1:	90                   	nop$/;"	l
ac1	ls.asm	/^     ac1:	8b 95 20 ff ff ff    	mov    -0xe0(%rbp),%edx$/;"	l
ac1	sh.asm	/^     ac1:	5b                   	pop    %rbx$/;"	l
ac2	bad_mmap.asm	/^ ac2:	48 8b 00             	mov    (%rax),%rax$/;"	l
ac2	cat.asm	/^ ac2:	48 c1 e0 04          	shl    $0x4,%rax$/;"	l
ac2	eager_mmap.asm	/^ ac2:	c9                   	leaveq $/;"	l
ac2	lazy_mmap.asm	/^ ac2:	c9                   	leaveq $/;"	l
ac2	sh.asm	/^     ac2:	5d                   	pop    %rbp$/;"	l
ac2	stressfs.asm	/^ ac2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ac2	wc.asm	/^ ac2:	00 00 00 $/;"	l
ac2	zombie.asm	/^ ac2:	48 89 10             	mov    %rdx,(%rax)$/;"	l
ac3	eager_mmap.asm	/^ ac3:	c3                   	retq   $/;"	l
ac3	kill.asm	/^ ac3:	00 00 00 $/;"	l
ac3	lazy_mmap.asm	/^ ac3:	c3                   	retq   $/;"	l
ac3	ln.asm	/^ ac3:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ac3	mkdir.asm	/^ ac3:	48 83 7d f8 ff       	cmpq   $0xffffffffffffffff,-0x8(%rbp)$/;"	l
ac3	rm.asm	/^ ac3:	48 83 7d f8 ff       	cmpq   $0xffffffffffffffff,-0x8(%rbp)$/;"	l
ac3	sh.asm	/^     ac3:	c3                   	retq   $/;"	l
ac4	eager_mmap.asm	/^ ac4:	55                   	push   %rbp$/;"	l
ac4	lazy_mmap.asm	/^ ac4:	55                   	push   %rbp$/;"	l
ac4	sh.asm	/^     ac4:	55                   	push   %rbp$/;"	l
ac5	bad_mmap.asm	/^ ac5:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax$/;"	l
ac5	eager_mmap.asm	/^ ac5:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ac5	init.asm	/^ ac5:	48 8b 00             	mov    (%rax),%rax$/;"	l
ac5	lazy_mmap.asm	/^ ac5:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ac5	sh.asm	/^     ac5:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ac5	usertests.asm	/^     ac5:	00 00 00 $/;"	l
ac5	wc.asm	/^ ac5:	ff d0                	callq  *%rax$/;"	l
ac5	zombie.asm	/^ ac5:	48 b8 30 0e 00 00 00 	movabs $0xe30,%rax$/;"	l
ac6	cat.asm	/^ ac6:	48 89 c2             	mov    %rax,%rdx$/;"	l
ac6	echo.asm	/^ ac6:	00 00 00 $/;"	l
ac6	imshow.asm	/^ ac6:	00 00 00 $/;"	l
ac6	kill.asm	/^ ac6:	ff d0                	callq  *%rax$/;"	l
ac6	stressfs.asm	/^ ac6:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
ac7	grep.asm	/^ ac7:	b9 01 00 00 00       	mov    $0x1,%ecx$/;"	l
ac7	ln.asm	/^ ac7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ac7	ls.asm	/^     ac7:	83 c2 08             	add    $0x8,%edx$/;"	l
ac7	wc.asm	/^ ac7:	c7 85 40 ff ff ff 00 	movl   $0x0,-0xc0(%rbp)$/;"	l
ac8	eager_mmap.asm	/^ ac8:	48 83 ec 18          	sub    $0x18,%rsp$/;"	l
ac8	init.asm	/^ ac8:	48 8b 10             	mov    (%rax),%rdx$/;"	l
ac8	kill.asm	/^ ac8:	48 b8 b0 0e 00 00 00 	movabs $0xeb0,%rax$/;"	l
ac8	lazy_mmap.asm	/^ ac8:	48 83 ec 18          	sub    $0x18,%rsp$/;"	l
ac8	mkdir.asm	/^ ac8:	75 07                	jne    ad1 <morecore+0x41>$/;"	l
ac8	rm.asm	/^ ac8:	75 07                	jne    ad1 <morecore+0x41>$/;"	l
ac8	sh.asm	/^     ac8:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ac8	usertests.asm	/^     ac8:	48 b8 52 60 00 00 00 	movabs $0x6052,%rax$/;"	l
ac9	bad_mmap.asm	/^ ac9:	77 22                	ja     aed <free+0x71>$/;"	l
ac9	cat.asm	/^ ac9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ac9	echo.asm	/^ ac9:	48 8b 00             	mov    (%rax),%rax$/;"	l
ac9	imshow.asm	/^ ac9:	ff d0                	callq  *%rax$/;"	l
ac9	stressfs.asm	/^ ac9:	89 c0                	mov    %eax,%eax$/;"	l
aca	ls.asm	/^     aca:	89 95 20 ff ff ff    	mov    %edx,-0xe0(%rbp)$/;"	l
aca	mkdir.asm	/^ aca:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
aca	rm.asm	/^ aca:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
acb	bad_mmap.asm	/^ acb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
acb	imshow.asm	/^ acb:	48 83 85 48 ff ff ff 	addq   $0x1,-0xb8(%rbp)$/;"	l
acb	init.asm	/^ acb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
acb	ln.asm	/^ acb:	8b 55 ec             	mov    -0x14(%rbp),%edx$/;"	l
acb	stressfs.asm	/^ acb:	48 c1 e0 04          	shl    $0x4,%rax$/;"	l
acc	eager_mmap.asm	/^ acc:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
acc	echo.asm	/^ acc:	c9                   	leaveq $/;"	l
acc	grep.asm	/^ acc:	ba 0a 00 00 00       	mov    $0xa,%edx$/;"	l
acc	lazy_mmap.asm	/^ acc:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
acc	sh.asm	/^     acc:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
acc	zombie.asm	/^ acc:	00 00 00 $/;"	l
acd	cat.asm	/^ acd:	48 01 c2             	add    %rax,%rdx$/;"	l
acd	echo.asm	/^ acd:	c3                   	retq   $/;"	l
ace	echo.asm	/^ ace:	55                   	push   %rbp$/;"	l
ace	ln.asm	/^ ace:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
ace	wc.asm	/^ ace:	00 00 00 $/;"	l
acf	bad_mmap.asm	/^ acf:	48 8b 00             	mov    (%rax),%rax$/;"	l
acf	echo.asm	/^ acf:	48 89 e5             	mov    %rsp,%rbp$/;"	l
acf	init.asm	/^ acf:	48 89 10             	mov    %rdx,(%rax)$/;"	l
acf	kill.asm	/^ acf:	00 00 00 $/;"	l
acf	mkdir.asm	/^ acf:	eb 36                	jmp    b07 <morecore+0x77>$/;"	l
acf	rm.asm	/^ acf:	eb 36                	jmp    b07 <morecore+0x77>$/;"	l
acf	stressfs.asm	/^ acf:	48 89 c2             	mov    %rax,%rdx$/;"	l
acf	usertests.asm	/^     acf:	00 00 00 $/;"	l
acf	zombie.asm	/^ acf:	48 8b 10             	mov    (%rax),%rdx$/;"	l
acquire	spinlock.c	/^acquire(struct spinlock *lk)$/;"	f
acquiresleep	sleeplock.c	/^acquiresleep(struct sleeplock *lk)$/;"	f
ad	cat.asm	/^  ad:	48 b8 ca 04 00 00 00 	movabs $0x4ca,%rax$/;"	l
ad	eager_mmap.asm	/^  ad:	48 89 c2             	mov    %rax,%rdx$/;"	l
ad	forktest.asm	/^  ad:	48 ba 00 00 00 00 00 	movabs $0x0,%rdx$/;"	l
ad	lazy_mmap.asm	/^  ad:	48 89 c2             	mov    %rax,%rdx$/;"	l
ad	wc.asm	/^  ad:	7c 88                	jl     37 <wc+0x37>$/;"	l
ad0	cat.asm	/^ ad0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ad0	eager_mmap.asm	/^ ad0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ad0	lazy_mmap.asm	/^ ad0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ad0	ls.asm	/^     ad0:	eb 12                	jmp    ae4 <printf+0x15d>$/;"	l
ad0	sh.asm	/^     ad0:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)$/;"	l
ad1	grep.asm	/^ ad1:	89 c7                	mov    %eax,%edi$/;"	l
ad1	ln.asm	/^ ad1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ad1	mkdir.asm	/^ ad1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ad1	rm.asm	/^ ad1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ad1	wc.asm	/^ ad1:	83 85 44 ff ff ff 01 	addl   $0x1,-0xbc(%rbp)$/;"	l
ad2	bad_mmap.asm	/^ ad2:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ad2	echo.asm	/^ ad2:	48 83 ec 30          	sub    $0x30,%rsp$/;"	l
ad2	imshow.asm	/^ ad2:	01 $/;"	l
ad2	init.asm	/^ ad2:	eb 0e                	jmp    ae2 <free+0xcf>$/;"	l
ad2	kill.asm	/^ ad2:	48 8b 00             	mov    (%rax),%rax$/;"	l
ad2	ls.asm	/^     ad2:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax$/;"	l
ad2	stressfs.asm	/^ ad2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ad2	usertests.asm	/^     ad2:	ff d0                	callq  *%rax$/;"	l
ad2	zombie.asm	/^ ad2:	48 b8 20 0e 00 00 00 	movabs $0xe20,%rax$/;"	l
ad3	grep.asm	/^ ad3:	48 b8 95 08 00 00 00 	movabs $0x895,%rax$/;"	l
ad3	imshow.asm	/^ ad3:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax$/;"	l
ad4	cat.asm	/^ ad4:	48 8b 00             	mov    (%rax),%rax$/;"	l
ad4	eager_mmap.asm	/^ ad4:	48 83 e8 10          	sub    $0x10,%rax$/;"	l
ad4	init.asm	/^ ad4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ad4	lazy_mmap.asm	/^ ad4:	48 83 e8 10          	sub    $0x10,%rax$/;"	l
ad4	sh.asm	/^     ad4:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx$/;"	l
ad4	usertests.asm	/^     ad4:	89 45 f4             	mov    %eax,-0xc(%rbp)$/;"	l
ad5	kill.asm	/^ ad5:	c9                   	leaveq $/;"	l
ad5	ln.asm	/^ ad5:	48 83 c0 10          	add    $0x10,%rax$/;"	l
ad5	mkdir.asm	/^ ad5:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ad5	rm.asm	/^ ad5:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ad6	bad_mmap.asm	/^ ad6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ad6	echo.asm	/^ ad6:	89 7d dc             	mov    %edi,-0x24(%rbp)$/;"	l
ad6	kill.asm	/^ ad6:	c3                   	retq   $/;"	l
ad6	stressfs.asm	/^ ad6:	48 01 c2             	add    %rax,%rdx$/;"	l
ad7	cat.asm	/^ ad7:	48 39 c2             	cmp    %rax,%rdx$/;"	l
ad7	kill.asm	/^ ad7:	55                   	push   %rbp$/;"	l
ad7	usertests.asm	/^     ad7:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)$/;"	l
ad8	eager_mmap.asm	/^ ad8:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ad8	init.asm	/^ ad8:	48 8b 10             	mov    (%rax),%rdx$/;"	l
ad8	kill.asm	/^ ad8:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ad8	lazy_mmap.asm	/^ ad8:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ad8	sh.asm	/^     ad8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ad8	wc.asm	/^ ad8:	8b 85 44 ff ff ff    	mov    -0xbc(%rbp),%eax$/;"	l
ad9	echo.asm	/^ ad9:	8b 45 dc             	mov    -0x24(%rbp),%eax$/;"	l
ad9	ln.asm	/^ ad9:	48 89 c7             	mov    %rax,%rdi$/;"	l
ad9	ls.asm	/^     ad9:	48 8d 50 08          	lea    0x8(%rax),%rdx$/;"	l
ad9	mkdir.asm	/^ ad9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ad9	rm.asm	/^ ad9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ad9	stressfs.asm	/^ ad9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ad9	zombie.asm	/^ ad9:	00 00 00 $/;"	l
ada	bad_mmap.asm	/^ ada:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax$/;"	l
ada	cat.asm	/^ ada:	75 2d                	jne    b09 <free+0xc1>$/;"	l
ada	grep.asm	/^ ada:	00 00 00 $/;"	l
ada	imshow.asm	/^ ada:	0f b6 00             	movzbl (%rax),%eax$/;"	l
adb	init.asm	/^ adb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
adb	kill.asm	/^ adb:	48 83 ec 30          	sub    $0x30,%rsp$/;"	l
adb	usertests.asm	/^     adb:	79 35                	jns    b12 <writetest1+0x179>$/;"	l
adc	cat.asm	/^ adc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
adc	eager_mmap.asm	/^ adc:	48 b8 70 11 00 00 00 	movabs $0x1170,%rax$/;"	l
adc	echo.asm	/^ adc:	48 83 c0 0f          	add    $0xf,%rax$/;"	l
adc	lazy_mmap.asm	/^ adc:	48 b8 70 11 00 00 00 	movabs $0x1170,%rax$/;"	l
adc	ln.asm	/^ adc:	48 b8 4c 09 00 00 00 	movabs $0x94c,%rax$/;"	l
adc	sh.asm	/^     adc:	48 89 d6             	mov    %rdx,%rsi$/;"	l
adc	zombie.asm	/^ adc:	48 89 10             	mov    %rdx,(%rax)$/;"	l
add	grep.asm	/^ add:	ff d0                	callq  *%rax$/;"	l
add	imshow.asm	/^ add:	84 c0                	test   %al,%al$/;"	l
add	ls.asm	/^     add:	48 89 95 28 ff ff ff 	mov    %rdx,-0xd8(%rbp)$/;"	l
add	mkdir.asm	/^ add:	8b 55 ec             	mov    -0x14(%rbp),%edx$/;"	l
add	rm.asm	/^ add:	8b 55 ec             	mov    -0x14(%rbp),%edx$/;"	l
add	stressfs.asm	/^ add:	48 8b 00             	mov    (%rax),%rax$/;"	l
add	usertests.asm	/^     add:	48 b8 08 88 00 00 00 	movabs $0x8808,%rax$/;"	l
addr	kernel.asm	/^  addr = (uint64) tss;$/;"	d
addr	kernel.asm	/^  addr = P2V(a);$/;"	d
addr	kernel.asm	/^  addr = proc->sz;$/;"	d
addr_p	mp.h	/^  uint32 addr_p;                  \/\/ I\/O APIC address$/;"	m	struct:mpioapic
addr_t	kernel.asm	/^addr_t sys_mmap() {$/;"	l
addr_t	types.h	/^typedef unsigned long addr_t;$/;"	t
addrs	file.h	/^  uint addrs[NDIRECT+1];$/;"	m	struct:inode
addrs	fs.h	/^  uint addrs[NDIRECT+1];   \/\/ Data block addresses$/;"	m	struct:dinode
ade	bad_mmap.asm	/^ ade:	76 c7                	jbe    aa7 <free+0x2b>$/;"	l
ade	wc.asm	/^ ade:	48 63 d0             	movslq %eax,%rdx$/;"	l
adf	grep.asm	/^ adf:	e9 f1 01 00 00       	jmpq   cd5 <printf+0x373>$/;"	l
adf	imshow.asm	/^ adf:	75 c7                	jne    aa8 <printf+0x26d>$/;"	l
adf	init.asm	/^ adf:	48 89 10             	mov    %rdx,(%rax)$/;"	l
adf	kill.asm	/^ adf:	89 7d dc             	mov    %edi,-0x24(%rbp)$/;"	l
adf	sh.asm	/^     adf:	48 89 c7             	mov    %rax,%rdi$/;"	l
adf	zombie.asm	/^ adf:	48 b8 20 0e 00 00 00 	movabs $0xe20,%rax$/;"	l
ae	init.asm	/^  ae:	ff d0                	callq  *%rax$/;"	l
ae	mkdir.asm	/^  ae:	eb 0c                	jmp    bc <main+0xbc>$/;"	l
ae	rm.asm	/^  ae:	eb 0c                	jmp    bc <main+0xbc>$/;"	l
ae	usertests.asm	/^      ae:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ae	zombie.asm	/^  ae:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ae0	bad_mmap.asm	/^ ae0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ae0	cat.asm	/^ ae0:	8b 50 08             	mov    0x8(%rax),%edx$/;"	l
ae0	echo.asm	/^ ae0:	48 c1 e8 04          	shr    $0x4,%rax$/;"	l
ae0	mkdir.asm	/^ ae0:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
ae0	rm.asm	/^ ae0:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
ae0	stressfs.asm	/^ ae0:	48 39 c2             	cmp    %rax,%rdx$/;"	l
ae1	imshow.asm	/^ ae1:	e9 c8 00 00 00       	jmpq   bae <printf+0x373>$/;"	l
ae1	wc.asm	/^ ae1:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax$/;"	l
ae2	init.asm	/^ ae2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ae2	kill.asm	/^ ae2:	8b 45 dc             	mov    -0x24(%rbp),%eax$/;"	l
ae2	sh.asm	/^     ae2:	48 b8 da 0b 00 00 00 	movabs $0xbda,%rax$/;"	l
ae3	cat.asm	/^ ae3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ae3	eager_mmap.asm	/^ ae3:	00 00 00 $/;"	l
ae3	lazy_mmap.asm	/^ ae3:	00 00 00 $/;"	l
ae3	ln.asm	/^ ae3:	00 00 00 $/;"	l
ae3	mkdir.asm	/^ ae3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ae3	rm.asm	/^ ae3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ae3	stressfs.asm	/^ ae3:	75 2d                	jne    b12 <free+0xc1>$/;"	l
ae4	bad_mmap.asm	/^ ae4:	48 8b 00             	mov    (%rax),%rax$/;"	l
ae4	echo.asm	/^ ae4:	83 c0 01             	add    $0x1,%eax$/;"	l
ae4	grep.asm	/^ ae4:	83 bd 3c ff ff ff 78 	cmpl   $0x78,-0xc4(%rbp)$/;"	l
ae4	ls.asm	/^     ae4:	8b 30                	mov    (%rax),%esi$/;"	l
ae4	usertests.asm	/^     ae4:	00 00 00 $/;"	l
ae5	kill.asm	/^ ae5:	48 83 c0 0f          	add    $0xf,%rax$/;"	l
ae5	stressfs.asm	/^ ae5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ae6	eager_mmap.asm	/^ ae6:	48 8b 00             	mov    (%rax),%rax$/;"	l
ae6	imshow.asm	/^ ae6:	83 bd 3c ff ff ff 63 	cmpl   $0x63,-0xc4(%rbp)$/;"	l
ae6	init.asm	/^ ae6:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
ae6	lazy_mmap.asm	/^ ae6:	48 8b 00             	mov    (%rax),%rax$/;"	l
ae6	ln.asm	/^ ae6:	ff d0                	callq  *%rax$/;"	l
ae6	ls.asm	/^     ae6:	8b 85 1c ff ff ff    	mov    -0xe4(%rbp),%eax$/;"	l
ae6	zombie.asm	/^ ae6:	00 00 00 $/;"	l
ae7	bad_mmap.asm	/^ ae7:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax$/;"	l
ae7	cat.asm	/^ ae7:	48 8b 00             	mov    (%rax),%rax$/;"	l
ae7	echo.asm	/^ ae7:	89 45 ec             	mov    %eax,-0x14(%rbp)$/;"	l
ae7	mkdir.asm	/^ ae7:	48 83 c0 10          	add    $0x10,%rax$/;"	l
ae7	rm.asm	/^ ae7:	48 83 c0 10          	add    $0x10,%rax$/;"	l
ae7	usertests.asm	/^     ae7:	8b 00                	mov    (%rax),%eax$/;"	l
ae8	ln.asm	/^ ae8:	48 b8 e0 0e 00 00 00 	movabs $0xee0,%rax$/;"	l
ae8	wc.asm	/^ ae8:	48 01 d0             	add    %rdx,%rax$/;"	l
ae9	eager_mmap.asm	/^ ae9:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ae9	init.asm	/^ ae9:	89 c0                	mov    %eax,%eax$/;"	l
ae9	kill.asm	/^ ae9:	48 c1 e8 04          	shr    $0x4,%rax$/;"	l
ae9	lazy_mmap.asm	/^ ae9:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ae9	sh.asm	/^     ae9:	00 00 00 $/;"	l
ae9	stressfs.asm	/^ ae9:	8b 50 08             	mov    0x8(%rax),%edx$/;"	l
ae9	usertests.asm	/^     ae9:	48 be 98 6b 00 00 00 	movabs $0x6b98,%rsi$/;"	l
ae9	zombie.asm	/^ ae9:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%rax)$/;"	l
aea	cat.asm	/^ aea:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
aea	echo.asm	/^ aea:	48 b8 90 0e 00 00 00 	movabs $0xe90,%rax$/;"	l
aeb	bad_mmap.asm	/^ aeb:	76 ba                	jbe    aa7 <free+0x2b>$/;"	l
aeb	grep.asm	/^ aeb:	74 09                	je     af6 <printf+0x194>$/;"	l
aeb	init.asm	/^ aeb:	48 c1 e0 04          	shl    $0x4,%rax$/;"	l
aeb	mkdir.asm	/^ aeb:	48 89 c7             	mov    %rax,%rdi$/;"	l
aeb	rm.asm	/^ aeb:	48 89 c7             	mov    %rax,%rdi$/;"	l
aeb	wc.asm	/^ aeb:	0f b6 00             	movzbl (%rax),%eax$/;"	l
aec	ls.asm	/^     aec:	b9 01 00 00 00       	mov    $0x1,%ecx$/;"	l
aec	sh.asm	/^     aec:	ff d0                	callq  *%rax$/;"	l
aec	stressfs.asm	/^ aec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
aed	bad_mmap.asm	/^ aed:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
aed	cat.asm	/^ aed:	01 c2                	add    %eax,%edx$/;"	l
aed	eager_mmap.asm	/^ aed:	eb 2f                	jmp    b1e <free+0x5a>$/;"	l
aed	grep.asm	/^ aed:	83 bd 3c ff ff ff 70 	cmpl   $0x70,-0xc4(%rbp)$/;"	l
aed	imshow.asm	/^ aed:	75 5d                	jne    b4c <printf+0x311>$/;"	l
aed	kill.asm	/^ aed:	83 c0 01             	add    $0x1,%eax$/;"	l
aed	lazy_mmap.asm	/^ aed:	eb 2f                	jmp    b1e <free+0x5a>$/;"	l
aee	mkdir.asm	/^ aee:	48 b8 5e 09 00 00 00 	movabs $0x95e,%rax$/;"	l
aee	rm.asm	/^ aee:	48 b8 5e 09 00 00 00 	movabs $0x95e,%rax$/;"	l
aee	sh.asm	/^     aee:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
aee	wc.asm	/^ aee:	84 c0                	test   %al,%al$/;"	l
aef	cat.asm	/^ aef:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
aef	eager_mmap.asm	/^ aef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
aef	imshow.asm	/^ aef:	8b 85 20 ff ff ff    	mov    -0xe0(%rbp),%eax$/;"	l
aef	init.asm	/^ aef:	48 89 c2             	mov    %rax,%rdx$/;"	l
aef	lazy_mmap.asm	/^ aef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
aef	ln.asm	/^ aef:	00 00 00 $/;"	l
af	echo.asm	/^  af:	89 d1                	mov    %edx,%ecx$/;"	l
af	grep.asm	/^  af:	be 0a 00 00 00       	mov    $0xa,%esi$/;"	l
af	kill.asm	/^  af:	8b 45 f4             	mov    -0xc(%rbp),%eax$/;"	l
af	ls.asm	/^      af:	00 00 00 $/;"	l
af	wc.asm	/^  af:	8b 45 dc             	mov    -0x24(%rbp),%eax$/;"	l
af0	kill.asm	/^ af0:	89 45 ec             	mov    %eax,-0x14(%rbp)$/;"	l
af0	stressfs.asm	/^ af0:	48 8b 00             	mov    (%rax),%rax$/;"	l
af0	usertests.asm	/^     af0:	00 00 00 $/;"	l
af0	wc.asm	/^ af0:	0f 85 fc fc ff ff    	jne    7f2 <printf+0x9e>$/;"	l
af0	zombie.asm	/^ af0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
af1	bad_mmap.asm	/^ af1:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
af1	echo.asm	/^ af1:	00 00 00 $/;"	l
af1	ls.asm	/^     af1:	ba 0a 00 00 00       	mov    $0xa,%edx$/;"	l
af2	init.asm	/^ af2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
af2	ln.asm	/^ af2:	48 8b 00             	mov    (%rax),%rax$/;"	l
af2	sh.asm	/^     af2:	eb 38                	jmp    b2c <parseline+0x68>$/;"	l
af3	cat.asm	/^ af3:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
af3	eager_mmap.asm	/^ af3:	48 8b 00             	mov    (%rax),%rax$/;"	l
af3	kill.asm	/^ af3:	48 b8 b0 0e 00 00 00 	movabs $0xeb0,%rax$/;"	l
af3	lazy_mmap.asm	/^ af3:	48 8b 00             	mov    (%rax),%rax$/;"	l
af3	stressfs.asm	/^ af3:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
af3	usertests.asm	/^     af3:	89 c7                	mov    %eax,%edi$/;"	l
af4	bad_mmap.asm	/^ af4:	89 c0                	mov    %eax,%eax$/;"	l
af4	echo.asm	/^ af4:	48 8b 00             	mov    (%rax),%rax$/;"	l
af4	grep.asm	/^ af4:	75 65                	jne    b5b <printf+0x1f9>$/;"	l
af4	sh.asm	/^     af4:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi$/;"	l
af4	zombie.asm	/^ af4:	48 8b 00             	mov    (%rax),%rax$/;"	l
af5	imshow.asm	/^ af5:	83 f8 30             	cmp    $0x30,%eax$/;"	l
af5	ln.asm	/^ af5:	c9                   	leaveq $/;"	l
af5	mkdir.asm	/^ af5:	00 00 00 $/;"	l
af5	rm.asm	/^ af5:	00 00 00 $/;"	l
af5	usertests.asm	/^     af5:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
af6	bad_mmap.asm	/^ af6:	48 c1 e0 04          	shl    $0x4,%rax$/;"	l
af6	cat.asm	/^ af6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
af6	eager_mmap.asm	/^ af6:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax$/;"	l
af6	grep.asm	/^ af6:	8b 85 20 ff ff ff    	mov    -0xe0(%rbp),%eax$/;"	l
af6	init.asm	/^ af6:	48 01 d0             	add    %rdx,%rax$/;"	l
af6	lazy_mmap.asm	/^ af6:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax$/;"	l
af6	ln.asm	/^ af6:	c3                   	retq   $/;"	l
af6	ls.asm	/^     af6:	89 c7                	mov    %eax,%edi$/;"	l
af6	stressfs.asm	/^ af6:	01 c2                	add    %eax,%edx$/;"	l
af6	wc.asm	/^ af6:	90                   	nop$/;"	l
af7	echo.asm	/^ af7:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
af7	ln.asm	/^ af7:	55                   	push   %rbp$/;"	l
af7	wc.asm	/^ af7:	c9                   	leaveq $/;"	l
af7	zombie.asm	/^ af7:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
af8	imshow.asm	/^ af8:	73 23                	jae    b1d <printf+0x2e2>$/;"	l
af8	ln.asm	/^ af8:	48 89 e5             	mov    %rsp,%rbp$/;"	l
af8	ls.asm	/^     af8:	48 b8 ba 08 00 00 00 	movabs $0x8ba,%rax$/;"	l
af8	mkdir.asm	/^ af8:	ff d0                	callq  *%rax$/;"	l
af8	rm.asm	/^ af8:	ff d0                	callq  *%rax$/;"	l
af8	sh.asm	/^     af8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
af8	stressfs.asm	/^ af8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
af8	wc.asm	/^ af8:	c3                   	retq   $/;"	l
af9	init.asm	/^ af9:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax$/;"	l
af9	wc.asm	/^ af9:	55                   	push   %rbp$/;"	l
afa	bad_mmap.asm	/^ afa:	48 89 c2             	mov    %rax,%rdx$/;"	l
afa	cat.asm	/^ afa:	48 8b 00             	mov    (%rax),%rax$/;"	l
afa	eager_mmap.asm	/^ afa:	77 17                	ja     b13 <free+0x4f>$/;"	l
afa	imshow.asm	/^ afa:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax$/;"	l
afa	kill.asm	/^ afa:	00 00 00 $/;"	l
afa	lazy_mmap.asm	/^ afa:	77 17                	ja     b13 <free+0x4f>$/;"	l
afa	mkdir.asm	/^ afa:	48 b8 00 0f 00 00 00 	movabs $0xf00,%rax$/;"	l
afa	rm.asm	/^ afa:	48 b8 f0 0e 00 00 00 	movabs $0xef0,%rax$/;"	l
afa	usertests.asm	/^     afa:	48 ba db 61 00 00 00 	movabs $0x61db,%rdx$/;"	l
afa	wc.asm	/^ afa:	48 89 e5             	mov    %rsp,%rbp$/;"	l
afb	echo.asm	/^ afb:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)$/;"	l
afb	ln.asm	/^ afb:	48 83 ec 30          	sub    $0x30,%rsp$/;"	l
afb	zombie.asm	/^ afb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
afc	eager_mmap.asm	/^ afc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
afc	grep.asm	/^ afc:	83 f8 30             	cmp    $0x30,%eax$/;"	l
afc	lazy_mmap.asm	/^ afc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
afc	sh.asm	/^     afc:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
afc	stressfs.asm	/^ afc:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
afd	bad_mmap.asm	/^ afd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
afd	cat.asm	/^ afd:	48 8b 10             	mov    (%rax),%rdx$/;"	l
afd	init.asm	/^ afd:	75 27                	jne    b26 <free+0x113>$/;"	l
afd	kill.asm	/^ afd:	48 8b 00             	mov    (%rax),%rax$/;"	l
afd	wc.asm	/^ afd:	48 83 ec 18          	sub    $0x18,%rsp$/;"	l
aff	grep.asm	/^ aff:	73 23                	jae    b24 <printf+0x1c2>$/;"	l
aff	init.asm	/^ aff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
aff	ln.asm	/^ aff:	89 7d dc             	mov    %edi,-0x24(%rbp)$/;"	l
aff	ls.asm	/^     aff:	00 00 00 $/;"	l
aff	stressfs.asm	/^ aff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
aff	zombie.asm	/^ aff:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
align	elf.h	/^  uint64 align;$/;"	m	struct:proghdr
allocproc	proc.c	/^allocproc(void)$/;"	f	file:
allocuvm	vm.c	/^allocuvm(pde_t *pgdir, uint oldsz, uint newsz)$/;"	f
alltraps	kernel.asm	/^alltraps:$/;"	l
alltraps	trapasm.S	/^alltraps:$/;"	l
amt	usertests.asm	/^  amt = (BIG) - (addr_t)a;$/;"	d
apicid	kernel.asm	/^  apicid = lapic[ID] >> 24;$/;"	d
apicid	mp.h	/^  uchar apicid;                 \/\/ local APIC id$/;"	m	struct:mpproc
apicid	proc.h	/^  uchar apicid;                \/\/ Local APIC ID$/;"	m	struct:cpu
apicno	mp.h	/^  uchar apicno;                 \/\/ I\/O APIC id$/;"	m	struct:mpioapic
argaddr	syscall.c	/^argaddr(int n, addr_t *ip)$/;"	f
argc	sh.asm	/^  argc = 0;$/;"	d
argfd	sysfile.c	/^argfd(int n, int *pfd, struct file **pf)$/;"	f	file:
argfd	sysproc.c	/^int argfd(int n, int *pfd, struct file **pf)$/;"	f
argint	syscall.c	/^argint(int n, int *ip)$/;"	f
argptest	usertests.c	/^void argptest()$/;"	f
argptr	syscall.c	/^argptr(int n, char **pp, int size)$/;"	f
args	mmu.h	/^  uint args : 5;        \/\/ # args, 0 for interrupt\/trap gates$/;"	m	struct:gatedesc
argstr	syscall.c	/^argstr(int n, char **pp)$/;"	f
argv	init.c	/^char *argv[] = { "sh", 0 };$/;"	v
argv	initcode.S	/^argv:$/;"	l
argv	sh.c	/^  char *argv[MAXARGS];$/;"	m	struct:execcmd	file:
atoi	ulib.c	/^atoi(const char *s)$/;"	f
avl	mmu.h	/^  uint avl : 1;        \/\/ Unused (available for software use)$/;"	m	struct:segdesc
b	bad_mmap.asm	/^   b:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)$/;"	l
b	cat.asm	/^   b:	eb 51                	jmp    5e <cat+0x5e>$/;"	l
b	eager_mmap.asm	/^   b:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)$/;"	l
b	echo.asm	/^   b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)$/;"	l
b	forktest.asm	/^   b:	89 bd 4c ff ff ff    	mov    %edi,-0xb4(%rbp)$/;"	l
b	imshow.asm	/^   b:	89 bd ec fb ff ff    	mov    %edi,-0x414(%rbp)$/;"	l
b	kernel.asm	/^  b = bget(dev, blockno);$/;"	d
b	kill.asm	/^   b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)$/;"	l
b	lazy_mmap.asm	/^   b:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)$/;"	l
b	ln.asm	/^   b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)$/;"	l
b	mkdir.asm	/^   b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)$/;"	l
b	rm.asm	/^   b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)$/;"	l
b	stressfs.asm	/^   b:	89 bd dc fd ff ff    	mov    %edi,-0x224(%rbp)$/;"	l
b	usertests.asm	/^       b:	00 00 00 $/;"	l
b	usertests.asm	/^    b = sbrk(1);$/;"	d
b	wc.asm	/^   b:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)$/;"	l
b	zombie.asm	/^   b:	00 00 00 $/;"	l
b0	eager_mmap.asm	/^  b0:	48 be 4e 0e 00 00 00 	movabs $0xe4e,%rsi$/;"	l
b0	init.asm	/^  b0:	89 45 fc             	mov    %eax,-0x4(%rbp)$/;"	l
b0	lazy_mmap.asm	/^  b0:	48 be 4e 0e 00 00 00 	movabs $0xe4e,%rsi$/;"	l
b0	mkdir.asm	/^  b0:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)$/;"	l
b0	rm.asm	/^  b0:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)$/;"	l
b00	cat.asm	/^ b00:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
b00	eager_mmap.asm	/^ b00:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax$/;"	l
b00	echo.asm	/^ b00:	75 4a                	jne    b4c <malloc+0x7e>$/;"	l
b00	kill.asm	/^ b00:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
b00	lazy_mmap.asm	/^ b00:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax$/;"	l
b01	bad_mmap.asm	/^ b01:	48 01 c2             	add    %rax,%rdx$/;"	l
b01	grep.asm	/^ b01:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax$/;"	l
b01	imshow.asm	/^ b01:	8b 95 20 ff ff ff    	mov    -0xe0(%rbp),%edx$/;"	l
b01	mkdir.asm	/^ b01:	00 00 00 $/;"	l
b01	rm.asm	/^ b01:	00 00 00 $/;"	l
b01	sh.asm	/^     b01:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
b01	usertests.asm	/^     b01:	00 00 00 $/;"	l
b01	wc.asm	/^ b01:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
b02	echo.asm	/^ b02:	48 b8 80 0e 00 00 00 	movabs $0xe80,%rax$/;"	l
b02	ln.asm	/^ b02:	8b 45 dc             	mov    -0x24(%rbp),%eax$/;"	l
b02	ls.asm	/^     b02:	ff d0                	callq  *%rax$/;"	l
b02	zombie.asm	/^ b02:	3b 45 ec             	cmp    -0x14(%rbp),%eax$/;"	l
b03	init.asm	/^ b03:	8b 50 08             	mov    0x8(%rax),%edx$/;"	l
b03	stressfs.asm	/^ b03:	48 8b 00             	mov    (%rax),%rax$/;"	l
b04	bad_mmap.asm	/^ b04:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b04	cat.asm	/^ b04:	48 89 10             	mov    %rdx,(%rax)$/;"	l
b04	eager_mmap.asm	/^ b04:	77 2f                	ja     b35 <free+0x71>$/;"	l
b04	kill.asm	/^ b04:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)$/;"	l
b04	lazy_mmap.asm	/^ b04:	77 2f                	ja     b35 <free+0x71>$/;"	l
b04	ls.asm	/^     b04:	e9 f1 01 00 00       	jmpq   cfa <printf+0x373>$/;"	l
b04	mkdir.asm	/^ b04:	48 8b 00             	mov    (%rax),%rax$/;"	l
b04	rm.asm	/^ b04:	48 8b 00             	mov    (%rax),%rax$/;"	l
b04	usertests.asm	/^     b04:	ff d2                	callq  *%rdx$/;"	l
b05	ln.asm	/^ b05:	48 83 c0 0f          	add    $0xf,%rax$/;"	l
b05	wc.asm	/^ b05:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
b05	zombie.asm	/^ b05:	72 65                	jb     b6c <malloc+0xfa>$/;"	l
b06	eager_mmap.asm	/^ b06:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b06	init.asm	/^ b06:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
b06	lazy_mmap.asm	/^ b06:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b06	sh.asm	/^     b06:	48 89 c7             	mov    %rax,%rdi$/;"	l
b06	stressfs.asm	/^ b06:	48 8b 10             	mov    (%rax),%rdx$/;"	l
b06	usertests.asm	/^     b06:	48 b8 02 60 00 00 00 	movabs $0x6002,%rax$/;"	l
b07	cat.asm	/^ b07:	eb 0e                	jmp    b17 <free+0xcf>$/;"	l
b07	imshow.asm	/^ b07:	89 d2                	mov    %edx,%edx$/;"	l
b07	mkdir.asm	/^ b07:	c9                   	leaveq $/;"	l
b07	rm.asm	/^ b07:	c9                   	leaveq $/;"	l
b07	zombie.asm	/^ b07:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b08	bad_mmap.asm	/^ b08:	48 8b 00             	mov    (%rax),%rax$/;"	l
b08	grep.asm	/^ b08:	8b 95 20 ff ff ff    	mov    -0xe0(%rbp),%edx$/;"	l
b08	mkdir.asm	/^ b08:	c3                   	retq   $/;"	l
b08	rm.asm	/^ b08:	c3                   	retq   $/;"	l
b09	cat.asm	/^ b09:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b09	echo.asm	/^ b09:	00 00 00 $/;"	l
b09	imshow.asm	/^ b09:	48 01 d0             	add    %rdx,%rax$/;"	l
b09	kill.asm	/^ b09:	75 4a                	jne    b55 <malloc+0x7e>$/;"	l
b09	ln.asm	/^ b09:	48 c1 e8 04          	shr    $0x4,%rax$/;"	l
b09	ls.asm	/^     b09:	83 bd 3c ff ff ff 78 	cmpl   $0x78,-0xc4(%rbp)$/;"	l
b09	mkdir.asm	/^ b09:	55                   	push   %rbp$/;"	l
b09	rm.asm	/^ b09:	55                   	push   %rbp$/;"	l
b09	sh.asm	/^     b09:	48 b8 aa 07 00 00 00 	movabs $0x7aa,%rax$/;"	l
b09	stressfs.asm	/^ b09:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
b09	wc.asm	/^ b09:	48 83 e8 10          	sub    $0x10,%rax$/;"	l
b0a	eager_mmap.asm	/^ b0a:	48 8b 00             	mov    (%rax),%rax$/;"	l
b0a	init.asm	/^ b0a:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
b0a	lazy_mmap.asm	/^ b0a:	48 8b 00             	mov    (%rax),%rax$/;"	l
b0a	mkdir.asm	/^ b0a:	48 89 e5             	mov    %rsp,%rbp$/;"	l
b0a	rm.asm	/^ b0a:	48 89 e5             	mov    %rsp,%rbp$/;"	l
b0b	bad_mmap.asm	/^ b0b:	48 39 c2             	cmp    %rax,%rdx$/;"	l
b0b	kill.asm	/^ b0b:	48 b8 a0 0e 00 00 00 	movabs $0xea0,%rax$/;"	l
b0b	zombie.asm	/^ b0b:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
b0c	echo.asm	/^ b0c:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
b0c	imshow.asm	/^ b0c:	8b 95 20 ff ff ff    	mov    -0xe0(%rbp),%edx$/;"	l
b0d	cat.asm	/^ b0d:	48 8b 10             	mov    (%rax),%rdx$/;"	l
b0d	eager_mmap.asm	/^ b0d:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax$/;"	l
b0d	init.asm	/^ b0d:	01 c2                	add    %eax,%edx$/;"	l
b0d	lazy_mmap.asm	/^ b0d:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax$/;"	l
b0d	ln.asm	/^ b0d:	83 c0 01             	add    $0x1,%eax$/;"	l
b0d	mkdir.asm	/^ b0d:	48 83 ec 30          	sub    $0x30,%rsp$/;"	l
b0d	rm.asm	/^ b0d:	48 83 ec 30          	sub    $0x30,%rsp$/;"	l
b0d	stressfs.asm	/^ b0d:	48 89 10             	mov    %rdx,(%rax)$/;"	l
b0d	usertests.asm	/^     b0d:	00 00 00 $/;"	l
b0d	wc.asm	/^ b0d:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
b0e	bad_mmap.asm	/^ b0e:	75 2d                	jne    b3d <free+0xc1>$/;"	l
b0e	grep.asm	/^ b0e:	89 d2                	mov    %edx,%edx$/;"	l
b0e	zombie.asm	/^ b0e:	3b 45 ec             	cmp    -0x14(%rbp),%eax$/;"	l
b0f	init.asm	/^ b0f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b1	bad_mmap.asm	/^  b1:	00 00 00 $/;"	l
b1	echo.asm	/^  b1:	fc                   	cld    $/;"	l
b1	ln.asm	/^  b1:	00 00 00 $/;"	l
b1	sh.asm	/^      b1:	00 00 00 $/;"	l
b10	bad_mmap.asm	/^ b10:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
b10	cat.asm	/^ b10:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
b10	echo.asm	/^ b10:	48 b8 90 0e 00 00 00 	movabs $0xe90,%rax$/;"	l
b10	grep.asm	/^ b10:	48 01 d0             	add    %rdx,%rax$/;"	l
b10	ln.asm	/^ b10:	89 45 ec             	mov    %eax,-0x14(%rbp)$/;"	l
b10	ls.asm	/^     b10:	74 09                	je     b1b <printf+0x194>$/;"	l
b10	sh.asm	/^     b10:	00 00 00 $/;"	l
b10	stressfs.asm	/^ b10:	eb 0e                	jmp    b20 <free+0xcf>$/;"	l
b10	usertests.asm	/^     b10:	ff d0                	callq  *%rax$/;"	l
b11	eager_mmap.asm	/^ b11:	77 22                	ja     b35 <free+0x71>$/;"	l
b11	lazy_mmap.asm	/^ b11:	77 22                	ja     b35 <free+0x71>$/;"	l
b11	mkdir.asm	/^ b11:	89 7d dc             	mov    %edi,-0x24(%rbp)$/;"	l
b11	rm.asm	/^ b11:	89 7d dc             	mov    %edi,-0x24(%rbp)$/;"	l
b11	wc.asm	/^ b11:	48 b8 d0 12 00 00 00 	movabs $0x12d0,%rax$/;"	l
b11	zombie.asm	/^ b11:	75 10                	jne    b23 <malloc+0xb1>$/;"	l
b12	imshow.asm	/^ b12:	83 c2 08             	add    $0x8,%edx$/;"	l
b12	kill.asm	/^ b12:	00 00 00 $/;"	l
b12	ls.asm	/^     b12:	83 bd 3c ff ff ff 70 	cmpl   $0x70,-0xc4(%rbp)$/;"	l
b12	stressfs.asm	/^ b12:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b12	usertests.asm	/^     b12:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)$/;"	l
b13	eager_mmap.asm	/^ b13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b13	grep.asm	/^ b13:	8b 95 20 ff ff ff    	mov    -0xe0(%rbp),%edx$/;"	l
b13	init.asm	/^ b13:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
b13	lazy_mmap.asm	/^ b13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b13	ln.asm	/^ b13:	48 b8 e0 0e 00 00 00 	movabs $0xee0,%rax$/;"	l
b13	sh.asm	/^     b13:	ff d0                	callq  *%rax$/;"	l
b13	zombie.asm	/^ b13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b14	bad_mmap.asm	/^ b14:	8b 50 08             	mov    0x8(%rax),%edx$/;"	l
b14	cat.asm	/^ b14:	48 89 10             	mov    %rdx,(%rax)$/;"	l
b14	mkdir.asm	/^ b14:	8b 45 dc             	mov    -0x24(%rbp),%eax$/;"	l
b14	rm.asm	/^ b14:	8b 45 dc             	mov    -0x24(%rbp),%eax$/;"	l
b15	imshow.asm	/^ b15:	89 95 20 ff ff ff    	mov    %edx,-0xe0(%rbp)$/;"	l
b15	kill.asm	/^ b15:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
b15	sh.asm	/^     b15:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b16	init.asm	/^ b16:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
b16	stressfs.asm	/^ b16:	48 8b 10             	mov    (%rax),%rdx$/;"	l
b17	bad_mmap.asm	/^ b17:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b17	cat.asm	/^ b17:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b17	eager_mmap.asm	/^ b17:	48 8b 00             	mov    (%rax),%rax$/;"	l
b17	echo.asm	/^ b17:	00 00 00 $/;"	l
b17	lazy_mmap.asm	/^ b17:	48 8b 00             	mov    (%rax),%rax$/;"	l
b17	mkdir.asm	/^ b17:	48 83 c0 0f          	add    $0xf,%rax$/;"	l
b17	rm.asm	/^ b17:	48 83 c0 0f          	add    $0xf,%rax$/;"	l
b17	zombie.asm	/^ b17:	48 8b 10             	mov    (%rax),%rdx$/;"	l
b18	wc.asm	/^ b18:	00 00 00 $/;"	l
b19	grep.asm	/^ b19:	83 c2 08             	add    $0x8,%edx$/;"	l
b19	kill.asm	/^ b19:	48 b8 b0 0e 00 00 00 	movabs $0xeb0,%rax$/;"	l
b19	ls.asm	/^     b19:	75 65                	jne    b80 <printf+0x1f9>$/;"	l
b19	sh.asm	/^     b19:	48 89 c7             	mov    %rax,%rdi$/;"	l
b19	stressfs.asm	/^ b19:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
b19	usertests.asm	/^     b19:	8b 45 f4             	mov    -0xc(%rbp),%eax$/;"	l
b1a	eager_mmap.asm	/^ b1a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
b1a	echo.asm	/^ b1a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
b1a	init.asm	/^ b1a:	48 8b 10             	mov    (%rax),%rdx$/;"	l
b1a	lazy_mmap.asm	/^ b1a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
b1a	ln.asm	/^ b1a:	00 00 00 $/;"	l
b1a	zombie.asm	/^ b1a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
b1b	bad_mmap.asm	/^ b1b:	48 8b 00             	mov    (%rax),%rax$/;"	l
b1b	cat.asm	/^ b1b:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
b1b	imshow.asm	/^ b1b:	eb 12                	jmp    b2f <printf+0x2f4>$/;"	l
b1b	ls.asm	/^     b1b:	8b 85 20 ff ff ff    	mov    -0xe0(%rbp),%eax$/;"	l
b1b	mkdir.asm	/^ b1b:	48 c1 e8 04          	shr    $0x4,%rax$/;"	l
b1b	rm.asm	/^ b1b:	48 c1 e8 04          	shr    $0x4,%rax$/;"	l
b1b	wc.asm	/^ b1b:	48 8b 00             	mov    (%rax),%rax$/;"	l
b1c	grep.asm	/^ b1c:	89 95 20 ff ff ff    	mov    %edx,-0xe0(%rbp)$/;"	l
b1c	sh.asm	/^     b1c:	48 b8 50 07 00 00 00 	movabs $0x750,%rax$/;"	l
b1c	usertests.asm	/^     b1c:	ba 00 02 00 00       	mov    $0x200,%edx$/;"	l
b1d	imshow.asm	/^ b1d:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax$/;"	l
b1d	init.asm	/^ b1d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b1d	ln.asm	/^ b1d:	48 8b 00             	mov    (%rax),%rax$/;"	l
b1d	stressfs.asm	/^ b1d:	48 89 10             	mov    %rdx,(%rax)$/;"	l
b1e	bad_mmap.asm	/^ b1e:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
b1e	cat.asm	/^ b1e:	89 c0                	mov    %eax,%eax$/;"	l
b1e	eager_mmap.asm	/^ b1e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
b1e	echo.asm	/^ b1e:	48 89 10             	mov    %rdx,(%rax)$/;"	l
b1e	lazy_mmap.asm	/^ b1e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
b1e	wc.asm	/^ b1e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
b1e	zombie.asm	/^ b1e:	48 89 10             	mov    %rdx,(%rax)$/;"	l
b1f	mkdir.asm	/^ b1f:	83 c0 01             	add    $0x1,%eax$/;"	l
b1f	rm.asm	/^ b1f:	83 c0 01             	add    $0x1,%eax$/;"	l
b2	echo.asm	/^  b2:	f3 aa                	rep stos %al,%es:(%rdi)$/;"	l
b2	imshow.asm	/^  b2:	00 00 00 $/;"	l
b2	kill.asm	/^  b2:	48 89 ce             	mov    %rcx,%rsi$/;"	l
b2	ls.asm	/^      b2:	ff d0                	callq  *%rax$/;"	l
b2	stressfs.asm	/^  b2:	00 00 00 $/;"	l
b2	wc.asm	/^  b2:	ba 00 02 00 00       	mov    $0x200,%edx$/;"	l
b2	zombie.asm	/^  b2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)$/;"	l
b20	cat.asm	/^ b20:	48 c1 e0 04          	shl    $0x4,%rax$/;"	l
b20	kill.asm	/^ b20:	00 00 00 $/;"	l
b20	ln.asm	/^ b20:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
b20	stressfs.asm	/^ b20:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b21	bad_mmap.asm	/^ b21:	01 c2                	add    %eax,%edx$/;"	l
b21	echo.asm	/^ b21:	48 b8 90 0e 00 00 00 	movabs $0xe90,%rax$/;"	l
b21	init.asm	/^ b21:	48 89 10             	mov    %rdx,(%rax)$/;"	l
b21	ls.asm	/^     b21:	83 f8 30             	cmp    $0x30,%eax$/;"	l
b21	usertests.asm	/^     b21:	48 be 40 88 00 00 00 	movabs $0x8840,%rsi$/;"	l
b21	zombie.asm	/^ b21:	eb 2e                	jmp    b51 <malloc+0xdf>$/;"	l
b22	eager_mmap.asm	/^ b22:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax$/;"	l
b22	grep.asm	/^ b22:	eb 12                	jmp    b36 <printf+0x1d4>$/;"	l
b22	lazy_mmap.asm	/^ b22:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax$/;"	l
b22	mkdir.asm	/^ b22:	89 45 ec             	mov    %eax,-0x14(%rbp)$/;"	l
b22	rm.asm	/^ b22:	89 45 ec             	mov    %eax,-0x14(%rbp)$/;"	l
b22	wc.asm	/^ b22:	eb 2f                	jmp    b53 <free+0x5a>$/;"	l
b23	bad_mmap.asm	/^ b23:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
b23	kill.asm	/^ b23:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
b23	sh.asm	/^     b23:	00 00 00 $/;"	l
b23	zombie.asm	/^ b23:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b24	cat.asm	/^ b24:	48 89 c2             	mov    %rax,%rdx$/;"	l
b24	grep.asm	/^ b24:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax$/;"	l
b24	imshow.asm	/^ b24:	48 8d 50 08          	lea    0x8(%rax),%rdx$/;"	l
b24	init.asm	/^ b24:	eb 0b                	jmp    b31 <free+0x11e>$/;"	l
b24	ln.asm	/^ b24:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)$/;"	l
b24	ls.asm	/^     b24:	73 23                	jae    b49 <printf+0x1c2>$/;"	l
b24	stressfs.asm	/^ b24:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
b24	wc.asm	/^ b24:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b25	mkdir.asm	/^ b25:	48 b8 00 0f 00 00 00 	movabs $0xf00,%rax$/;"	l
b25	rm.asm	/^ b25:	48 b8 f0 0e 00 00 00 	movabs $0xef0,%rax$/;"	l
b26	eager_mmap.asm	/^ b26:	76 c7                	jbe    aef <free+0x2b>$/;"	l
b26	init.asm	/^ b26:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b26	lazy_mmap.asm	/^ b26:	76 c7                	jbe    aef <free+0x2b>$/;"	l
b26	ls.asm	/^     b26:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax$/;"	l
b26	sh.asm	/^     b26:	ff d0                	callq  *%rax$/;"	l
b27	bad_mmap.asm	/^ b27:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
b27	cat.asm	/^ b27:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b27	kill.asm	/^ b27:	48 89 10             	mov    %rdx,(%rax)$/;"	l
b27	stressfs.asm	/^ b27:	89 c0                	mov    %eax,%eax$/;"	l
b27	zombie.asm	/^ b27:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
b28	eager_mmap.asm	/^ b28:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b28	echo.asm	/^ b28:	00 00 00 $/;"	l
b28	imshow.asm	/^ b28:	48 89 95 28 ff ff ff 	mov    %rdx,-0xd8(%rbp)$/;"	l
b28	lazy_mmap.asm	/^ b28:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b28	sh.asm	/^     b28:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
b28	usertests.asm	/^     b28:	00 00 00 $/;"	l
b28	wc.asm	/^ b28:	48 8b 00             	mov    (%rax),%rax$/;"	l
b29	ln.asm	/^ b29:	75 4a                	jne    b75 <malloc+0x7e>$/;"	l
b29	stressfs.asm	/^ b29:	48 c1 e0 04          	shl    $0x4,%rax$/;"	l
b2a	bad_mmap.asm	/^ b2a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b2a	init.asm	/^ b2a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
b2a	kill.asm	/^ b2a:	48 b8 b0 0e 00 00 00 	movabs $0xeb0,%rax$/;"	l
b2a	zombie.asm	/^ b2a:	2b 45 ec             	sub    -0x14(%rbp),%eax$/;"	l
b2b	cat.asm	/^ b2b:	48 01 d0             	add    %rdx,%rax$/;"	l
b2b	echo.asm	/^ b2b:	48 8b 10             	mov    (%rax),%rdx$/;"	l
b2b	grep.asm	/^ b2b:	48 8d 50 08          	lea    0x8(%rax),%rdx$/;"	l
b2b	ln.asm	/^ b2b:	48 b8 d0 0e 00 00 00 	movabs $0xed0,%rax$/;"	l
b2b	usertests.asm	/^     b2b:	89 c7                	mov    %eax,%edi$/;"	l
b2b	wc.asm	/^ b2b:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax$/;"	l
b2c	eager_mmap.asm	/^ b2c:	48 8b 00             	mov    (%rax),%rax$/;"	l
b2c	lazy_mmap.asm	/^ b2c:	48 8b 00             	mov    (%rax),%rax$/;"	l
b2c	mkdir.asm	/^ b2c:	00 00 00 $/;"	l
b2c	rm.asm	/^ b2c:	00 00 00 $/;"	l
b2c	sh.asm	/^     b2c:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx$/;"	l
b2d	ls.asm	/^     b2d:	8b 95 20 ff ff ff    	mov    -0xe0(%rbp),%edx$/;"	l
b2d	stressfs.asm	/^ b2d:	48 89 c2             	mov    %rax,%rdx$/;"	l
b2d	usertests.asm	/^     b2d:	48 b8 20 60 00 00 00 	movabs $0x6020,%rax$/;"	l
b2d	zombie.asm	/^ b2d:	89 c2                	mov    %eax,%edx$/;"	l
b2e	bad_mmap.asm	/^ b2e:	48 8b 00             	mov    (%rax),%rax$/;"	l
b2e	cat.asm	/^ b2e:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax$/;"	l
b2e	echo.asm	/^ b2e:	48 b8 80 0e 00 00 00 	movabs $0xe80,%rax$/;"	l
b2e	init.asm	/^ b2e:	48 89 10             	mov    %rdx,(%rax)$/;"	l
b2f	eager_mmap.asm	/^ b2f:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax$/;"	l
b2f	grep.asm	/^ b2f:	48 89 95 28 ff ff ff 	mov    %rdx,-0xd8(%rbp)$/;"	l
b2f	imshow.asm	/^ b2f:	8b 00                	mov    (%rax),%eax$/;"	l
b2f	lazy_mmap.asm	/^ b2f:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax$/;"	l
b2f	mkdir.asm	/^ b2f:	48 8b 00             	mov    (%rax),%rax$/;"	l
b2f	rm.asm	/^ b2f:	48 8b 00             	mov    (%rax),%rax$/;"	l
b2f	wc.asm	/^ b2f:	77 17                	ja     b48 <free+0x4f>$/;"	l
b2f	zombie.asm	/^ b2f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b3	init.asm	/^  b3:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)$/;"	l
b3	usertests.asm	/^      b3:	48 ba db 61 00 00 00 	movabs $0x61db,%rdx$/;"	l
b30	sh.asm	/^     b30:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
b30	stressfs.asm	/^ b30:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b31	bad_mmap.asm	/^ b31:	48 8b 10             	mov    (%rax),%rdx$/;"	l
b31	imshow.asm	/^ b31:	0f be d0             	movsbl %al,%edx$/;"	l
b31	init.asm	/^ b31:	48 b8 e0 0f 00 00 00 	movabs $0xfe0,%rax$/;"	l
b31	kill.asm	/^ b31:	00 00 00 $/;"	l
b31	wc.asm	/^ b31:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
b32	cat.asm	/^ b32:	75 27                	jne    b5b <free+0x113>$/;"	l
b32	ln.asm	/^ b32:	00 00 00 $/;"	l
b32	mkdir.asm	/^ b32:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
b32	rm.asm	/^ b32:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
b33	eager_mmap.asm	/^ b33:	76 ba                	jbe    aef <free+0x2b>$/;"	l
b33	lazy_mmap.asm	/^ b33:	76 ba                	jbe    aef <free+0x2b>$/;"	l
b33	ls.asm	/^     b33:	89 d2                	mov    %edx,%edx$/;"	l
b33	zombie.asm	/^ b33:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
b34	bad_mmap.asm	/^ b34:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
b34	cat.asm	/^ b34:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b34	imshow.asm	/^ b34:	8b 85 1c ff ff ff    	mov    -0xe4(%rbp),%eax$/;"	l
b34	kill.asm	/^ b34:	48 8b 10             	mov    (%rax),%rdx$/;"	l
b34	sh.asm	/^     b34:	48 ba 11 1e 00 00 00 	movabs $0x1e11,%rdx$/;"	l
b34	stressfs.asm	/^ b34:	48 01 d0             	add    %rdx,%rax$/;"	l
b34	usertests.asm	/^     b34:	00 00 00 $/;"	l
b35	eager_mmap.asm	/^ b35:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
b35	echo.asm	/^ b35:	00 00 00 $/;"	l
b35	lazy_mmap.asm	/^ b35:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
b35	ln.asm	/^ b35:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
b35	ls.asm	/^     b35:	48 01 d0             	add    %rdx,%rax$/;"	l
b35	wc.asm	/^ b35:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax$/;"	l
b36	grep.asm	/^ b36:	8b 30                	mov    (%rax),%esi$/;"	l
b36	mkdir.asm	/^ b36:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)$/;"	l
b36	rm.asm	/^ b36:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)$/;"	l
b36	zombie.asm	/^ b36:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b37	kill.asm	/^ b37:	48 b8 a0 0e 00 00 00 	movabs $0xea0,%rax$/;"	l
b37	stressfs.asm	/^ b37:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax$/;"	l
b37	usertests.asm	/^     b37:	ff d0                	callq  *%rax$/;"	l
b38	bad_mmap.asm	/^ b38:	48 89 10             	mov    %rdx,(%rax)$/;"	l
b38	cat.asm	/^ b38:	8b 50 08             	mov    0x8(%rax),%edx$/;"	l
b38	echo.asm	/^ b38:	48 89 10             	mov    %rdx,(%rax)$/;"	l
b38	grep.asm	/^ b38:	8b 85 1c ff ff ff    	mov    -0xe4(%rbp),%eax$/;"	l
b38	init.asm	/^ b38:	00 00 00 $/;"	l
b38	ls.asm	/^     b38:	8b 95 20 ff ff ff    	mov    -0xe0(%rbp),%edx$/;"	l
b39	eager_mmap.asm	/^ b39:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
b39	lazy_mmap.asm	/^ b39:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
b39	ln.asm	/^ b39:	48 b8 e0 0e 00 00 00 	movabs $0xee0,%rax$/;"	l
b39	usertests.asm	/^     b39:	89 45 fc             	mov    %eax,-0x4(%rbp)$/;"	l
b39	wc.asm	/^ b39:	77 2f                	ja     b6a <free+0x71>$/;"	l
b3a	imshow.asm	/^ b3a:	89 d6                	mov    %edx,%esi$/;"	l
b3a	zombie.asm	/^ b3a:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
b3b	bad_mmap.asm	/^ b3b:	eb 0e                	jmp    b4b <free+0xcf>$/;"	l
b3b	cat.asm	/^ b3b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
b3b	echo.asm	/^ b3b:	48 b8 80 0e 00 00 00 	movabs $0xe80,%rax$/;"	l
b3b	init.asm	/^ b3b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx$/;"	l
b3b	mkdir.asm	/^ b3b:	75 4a                	jne    b87 <malloc+0x7e>$/;"	l
b3b	rm.asm	/^ b3b:	75 4a                	jne    b87 <malloc+0x7e>$/;"	l
b3b	sh.asm	/^     b3b:	00 00 00 $/;"	l
b3b	stressfs.asm	/^ b3b:	75 27                	jne    b64 <free+0x113>$/;"	l
b3b	wc.asm	/^ b3b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b3c	eager_mmap.asm	/^ b3c:	89 c0                	mov    %eax,%eax$/;"	l
b3c	imshow.asm	/^ b3c:	89 c7                	mov    %eax,%edi$/;"	l
b3c	lazy_mmap.asm	/^ b3c:	89 c0                	mov    %eax,%eax$/;"	l
b3c	usertests.asm	/^     b3c:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)$/;"	l
b3d	bad_mmap.asm	/^ b3d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b3d	mkdir.asm	/^ b3d:	48 b8 f0 0e 00 00 00 	movabs $0xef0,%rax$/;"	l
b3d	rm.asm	/^ b3d:	48 b8 e0 0e 00 00 00 	movabs $0xee0,%rax$/;"	l
b3d	stressfs.asm	/^ b3d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b3d	zombie.asm	/^ b3d:	89 c0                	mov    %eax,%eax$/;"	l
b3e	eager_mmap.asm	/^ b3e:	48 c1 e0 04          	shl    $0x4,%rax$/;"	l
b3e	grep.asm	/^ b3e:	b9 01 00 00 00       	mov    $0x1,%ecx$/;"	l
b3e	imshow.asm	/^ b3e:	48 b8 3e 07 00 00 00 	movabs $0x73e,%rax$/;"	l
b3e	kill.asm	/^ b3e:	00 00 00 $/;"	l
b3e	lazy_mmap.asm	/^ b3e:	48 c1 e0 04          	shl    $0x4,%rax$/;"	l
b3e	ls.asm	/^     b3e:	83 c2 08             	add    $0x8,%edx$/;"	l
b3e	sh.asm	/^     b3e:	48 89 ce             	mov    %rcx,%rsi$/;"	l
b3f	cat.asm	/^ b3f:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
b3f	init.asm	/^ b3f:	48 89 10             	mov    %rdx,(%rax)$/;"	l
b3f	wc.asm	/^ b3f:	48 8b 00             	mov    (%rax),%rax$/;"	l
b3f	zombie.asm	/^ b3f:	48 c1 e0 04          	shl    $0x4,%rax$/;"	l
b4	bad_mmap.asm	/^  b4:	bf 01 00 00 00       	mov    $0x1,%edi$/;"	l
b4	cat.asm	/^  b4:	00 00 00 $/;"	l
b4	echo.asm	/^  b4:	89 ca                	mov    %ecx,%edx$/;"	l
b4	forktest.asm	/^  b4:	00 00 00 $/;"	l
b4	grep.asm	/^  b4:	48 89 c7             	mov    %rax,%rdi$/;"	l
b4	ln.asm	/^  b4:	ff d0                	callq  *%rax$/;"	l
b4	ls.asm	/^      b4:	ba 0e 00 00 00       	mov    $0xe,%edx$/;"	l
b4	mkdir.asm	/^  b4:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
b4	rm.asm	/^  b4:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
b4	sh.asm	/^      b4:	bf 02 00 00 00       	mov    $0x2,%edi$/;"	l
b40	ln.asm	/^ b40:	00 00 00 $/;"	l
b40	usertests.asm	/^     b40:	75 45                	jne    b87 <writetest1+0x1ee>$/;"	l
b41	bad_mmap.asm	/^ b41:	48 8b 10             	mov    (%rax),%rdx$/;"	l
b41	kill.asm	/^ b41:	48 89 10             	mov    %rdx,(%rax)$/;"	l
b41	ls.asm	/^     b41:	89 95 20 ff ff ff    	mov    %edx,-0xe0(%rbp)$/;"	l
b41	sh.asm	/^     b41:	48 89 c7             	mov    %rax,%rdi$/;"	l
b41	stressfs.asm	/^ b41:	8b 50 08             	mov    0x8(%rax),%edx$/;"	l
b42	cat.asm	/^ b42:	01 c2                	add    %eax,%edx$/;"	l
b42	eager_mmap.asm	/^ b42:	48 89 c2             	mov    %rax,%rdx$/;"	l
b42	echo.asm	/^ b42:	00 00 00 $/;"	l
b42	init.asm	/^ b42:	90                   	nop$/;"	l
b42	lazy_mmap.asm	/^ b42:	48 89 c2             	mov    %rax,%rdx$/;"	l
b42	usertests.asm	/^     b42:	81 7d f8 8b 00 00 00 	cmpl   $0x8b,-0x8(%rbp)$/;"	l
b42	wc.asm	/^ b42:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax$/;"	l
b43	grep.asm	/^ b43:	ba 0a 00 00 00       	mov    $0xa,%edx$/;"	l
b43	init.asm	/^ b43:	c9                   	leaveq $/;"	l
b43	ln.asm	/^ b43:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
b43	zombie.asm	/^ b43:	48 01 45 f8          	add    %rax,-0x8(%rbp)$/;"	l
b44	bad_mmap.asm	/^ b44:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
b44	cat.asm	/^ b44:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b44	init.asm	/^ b44:	c3                   	retq   $/;"	l
b44	kill.asm	/^ b44:	48 b8 a0 0e 00 00 00 	movabs $0xea0,%rax$/;"	l
b44	mkdir.asm	/^ b44:	00 00 00 $/;"	l
b44	rm.asm	/^ b44:	00 00 00 $/;"	l
b44	sh.asm	/^     b44:	48 b8 51 09 00 00 00 	movabs $0x951,%rax$/;"	l
b44	stressfs.asm	/^ b44:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
b45	eager_mmap.asm	/^ b45:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
b45	echo.asm	/^ b45:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%rax)$/;"	l
b45	imshow.asm	/^ b45:	00 00 00 $/;"	l
b45	init.asm	/^ b45:	55                   	push   %rbp$/;"	l
b45	lazy_mmap.asm	/^ b45:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
b46	init.asm	/^ b46:	48 89 e5             	mov    %rsp,%rbp$/;"	l
b46	wc.asm	/^ b46:	77 22                	ja     b6a <free+0x71>$/;"	l
b47	ln.asm	/^ b47:	48 89 10             	mov    %rdx,(%rax)$/;"	l
b47	ls.asm	/^     b47:	eb 12                	jmp    b5b <printf+0x1d4>$/;"	l
b47	mkdir.asm	/^ b47:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
b47	rm.asm	/^ b47:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
b47	zombie.asm	/^ b47:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b48	bad_mmap.asm	/^ b48:	48 89 10             	mov    %rdx,(%rax)$/;"	l
b48	cat.asm	/^ b48:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
b48	grep.asm	/^ b48:	89 c7                	mov    %eax,%edi$/;"	l
b48	imshow.asm	/^ b48:	ff d0                	callq  *%rax$/;"	l
b48	stressfs.asm	/^ b48:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
b48	wc.asm	/^ b48:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b49	eager_mmap.asm	/^ b49:	48 01 c2             	add    %rax,%rdx$/;"	l
b49	init.asm	/^ b49:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
b49	lazy_mmap.asm	/^ b49:	48 01 c2             	add    %rax,%rdx$/;"	l
b49	ls.asm	/^     b49:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax$/;"	l
b49	usertests.asm	/^     b49:	0f 85 d8 00 00 00    	jne    c27 <writetest1+0x28e>$/;"	l
b4a	grep.asm	/^ b4a:	48 b8 95 08 00 00 00 	movabs $0x895,%rax$/;"	l
b4a	imshow.asm	/^ b4a:	eb 62                	jmp    bae <printf+0x373>$/;"	l
b4a	ln.asm	/^ b4a:	48 b8 e0 0e 00 00 00 	movabs $0xee0,%rax$/;"	l
b4b	bad_mmap.asm	/^ b4b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b4b	cat.asm	/^ b4b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
b4b	kill.asm	/^ b4b:	00 00 00 $/;"	l
b4b	mkdir.asm	/^ b4b:	48 b8 00 0f 00 00 00 	movabs $0xf00,%rax$/;"	l
b4b	rm.asm	/^ b4b:	48 b8 f0 0e 00 00 00 	movabs $0xef0,%rax$/;"	l
b4b	sh.asm	/^     b4b:	00 00 00 $/;"	l
b4b	stressfs.asm	/^ b4b:	01 c2                	add    %eax,%edx$/;"	l
b4b	zombie.asm	/^ b4b:	8b 55 ec             	mov    -0x14(%rbp),%edx$/;"	l
b4c	eager_mmap.asm	/^ b4c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b4c	echo.asm	/^ b4c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
b4c	imshow.asm	/^ b4c:	83 bd 3c ff ff ff 25 	cmpl   $0x25,-0xc4(%rbp)$/;"	l
b4c	lazy_mmap.asm	/^ b4c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b4c	wc.asm	/^ b4c:	48 8b 00             	mov    (%rax),%rax$/;"	l
b4d	init.asm	/^ b4d:	89 7d ec             	mov    %edi,-0x14(%rbp)$/;"	l
b4d	stressfs.asm	/^ b4d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b4e	kill.asm	/^ b4e:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%rax)$/;"	l
b4e	sh.asm	/^     b4e:	ff d0                	callq  *%rax$/;"	l
b4e	zombie.asm	/^ b4e:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
b4f	bad_mmap.asm	/^ b4f:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
b4f	cat.asm	/^ b4f:	48 8b 10             	mov    (%rax),%rdx$/;"	l
b4f	usertests.asm	/^     b4f:	48 b8 08 88 00 00 00 	movabs $0x8808,%rax$/;"	l
b4f	wc.asm	/^ b4f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
b5	imshow.asm	/^  b5:	ff d2                	callq  *%rdx$/;"	l
b5	kill.asm	/^  b5:	48 89 f7             	mov    %rsi,%rdi$/;"	l
b5	stressfs.asm	/^  b5:	ff d1                	callq  *%rcx$/;"	l
b50	eager_mmap.asm	/^ b50:	48 8b 00             	mov    (%rax),%rax$/;"	l
b50	echo.asm	/^ b50:	48 8b 00             	mov    (%rax),%rax$/;"	l
b50	init.asm	/^ b50:	81 7d ec ff 0f 00 00 	cmpl   $0xfff,-0x14(%rbp)$/;"	l
b50	lazy_mmap.asm	/^ b50:	48 8b 00             	mov    (%rax),%rax$/;"	l
b50	ls.asm	/^     b50:	48 8d 50 08          	lea    0x8(%rax),%rdx$/;"	l
b50	sh.asm	/^     b50:	85 c0                	test   %eax,%eax$/;"	l
b51	grep.asm	/^ b51:	00 00 00 $/;"	l
b51	ln.asm	/^ b51:	00 00 00 $/;"	l
b51	stressfs.asm	/^ b51:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
b51	zombie.asm	/^ b51:	48 b8 30 0e 00 00 00 	movabs $0xe30,%rax$/;"	l
b52	bad_mmap.asm	/^ b52:	89 c0                	mov    %eax,%eax$/;"	l
b52	cat.asm	/^ b52:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b52	mkdir.asm	/^ b52:	00 00 00 $/;"	l
b52	rm.asm	/^ b52:	00 00 00 $/;"	l
b52	sh.asm	/^     b52:	75 a0                	jne    af4 <parseline+0x30>$/;"	l
b53	eager_mmap.asm	/^ b53:	48 39 c2             	cmp    %rax,%rdx$/;"	l
b53	echo.asm	/^ b53:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
b53	imshow.asm	/^ b53:	75 21                	jne    b76 <printf+0x33b>$/;"	l
b53	lazy_mmap.asm	/^ b53:	48 39 c2             	cmp    %rax,%rdx$/;"	l
b53	wc.asm	/^ b53:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
b54	bad_mmap.asm	/^ b54:	48 c1 e0 04          	shl    $0x4,%rax$/;"	l
b54	grep.asm	/^ b54:	ff d0                	callq  *%rax$/;"	l
b54	ln.asm	/^ b54:	48 8b 10             	mov    (%rax),%rdx$/;"	l
b54	ls.asm	/^     b54:	48 89 95 28 ff ff ff 	mov    %rdx,-0xd8(%rbp)$/;"	l
b54	sh.asm	/^     b54:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx$/;"	l
b54	stressfs.asm	/^ b54:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
b55	imshow.asm	/^ b55:	8b 85 3c ff ff ff    	mov    -0xc4(%rbp),%eax$/;"	l
b55	kill.asm	/^ b55:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
b55	mkdir.asm	/^ b55:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
b55	rm.asm	/^ b55:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
b56	cat.asm	/^ b56:	48 89 10             	mov    %rdx,(%rax)$/;"	l
b56	eager_mmap.asm	/^ b56:	75 2d                	jne    b85 <free+0xc1>$/;"	l
b56	grep.asm	/^ b56:	e9 7a 01 00 00       	jmpq   cd5 <printf+0x373>$/;"	l
b56	lazy_mmap.asm	/^ b56:	75 2d                	jne    b85 <free+0xc1>$/;"	l
b56	usertests.asm	/^     b56:	00 00 00 $/;"	l
b57	echo.asm	/^ b57:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b57	init.asm	/^ b57:	77 07                	ja     b60 <morecore+0x1b>$/;"	l
b57	ln.asm	/^ b57:	48 b8 d0 0e 00 00 00 	movabs $0xed0,%rax$/;"	l
b57	wc.asm	/^ b57:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax$/;"	l
b58	bad_mmap.asm	/^ b58:	48 89 c2             	mov    %rax,%rdx$/;"	l
b58	eager_mmap.asm	/^ b58:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
b58	lazy_mmap.asm	/^ b58:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
b58	sh.asm	/^     b58:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
b58	stressfs.asm	/^ b58:	48 8b 10             	mov    (%rax),%rdx$/;"	l
b58	zombie.asm	/^ b58:	00 00 00 $/;"	l
b59	cat.asm	/^ b59:	eb 0b                	jmp    b66 <free+0x11e>$/;"	l
b59	init.asm	/^ b59:	c7 45 ec 00 10 00 00 	movl   $0x1000,-0x14(%rbp)$/;"	l
b59	kill.asm	/^ b59:	48 8b 00             	mov    (%rax),%rax$/;"	l
b59	mkdir.asm	/^ b59:	48 89 10             	mov    %rdx,(%rax)$/;"	l
b59	rm.asm	/^ b59:	48 89 10             	mov    %rdx,(%rax)$/;"	l
b59	usertests.asm	/^     b59:	8b 00                	mov    (%rax),%eax$/;"	l
b5b	bad_mmap.asm	/^ b5b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b5b	cat.asm	/^ b5b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b5b	echo.asm	/^ b5b:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
b5b	grep.asm	/^ b5b:	83 bd 3c ff ff ff 73 	cmpl   $0x73,-0xc4(%rbp)$/;"	l
b5b	imshow.asm	/^ b5b:	0f be d0             	movsbl %al,%edx$/;"	l
b5b	ls.asm	/^     b5b:	8b 30                	mov    (%rax),%esi$/;"	l
b5b	stressfs.asm	/^ b5b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b5b	usertests.asm	/^     b5b:	8b 55 f8             	mov    -0x8(%rbp),%edx$/;"	l
b5b	wc.asm	/^ b5b:	76 c7                	jbe    b24 <free+0x2b>$/;"	l
b5b	zombie.asm	/^ b5b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
b5c	eager_mmap.asm	/^ b5c:	8b 50 08             	mov    0x8(%rax),%edx$/;"	l
b5c	kill.asm	/^ b5c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
b5c	lazy_mmap.asm	/^ b5c:	8b 50 08             	mov    0x8(%rax),%edx$/;"	l
b5c	mkdir.asm	/^ b5c:	48 b8 00 0f 00 00 00 	movabs $0xf00,%rax$/;"	l
b5c	rm.asm	/^ b5c:	48 b8 f0 0e 00 00 00 	movabs $0xef0,%rax$/;"	l
b5c	sh.asm	/^     b5c:	48 ba 13 1e 00 00 00 	movabs $0x1e13,%rdx$/;"	l
b5d	ls.asm	/^     b5d:	8b 85 1c ff ff ff    	mov    -0xe4(%rbp),%eax$/;"	l
b5d	wc.asm	/^ b5d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b5e	echo.asm	/^ b5e:	3b 45 ec             	cmp    -0x14(%rbp),%eax$/;"	l
b5e	imshow.asm	/^ b5e:	8b 85 1c ff ff ff    	mov    -0xe4(%rbp),%eax$/;"	l
b5e	ln.asm	/^ b5e:	00 00 00 $/;"	l
b5e	usertests.asm	/^     b5e:	48 be b1 6b 00 00 00 	movabs $0x6bb1,%rsi$/;"	l
b5f	bad_mmap.asm	/^ b5f:	48 01 d0             	add    %rdx,%rax$/;"	l
b5f	cat.asm	/^ b5f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
b5f	eager_mmap.asm	/^ b5f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b5f	lazy_mmap.asm	/^ b5f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b5f	stressfs.asm	/^ b5f:	48 89 10             	mov    %rdx,(%rax)$/;"	l
b5f	zombie.asm	/^ b5f:	48 89 10             	mov    %rdx,(%rax)$/;"	l
b6	echo.asm	/^  b6:	48 89 fe             	mov    %rdi,%rsi$/;"	l
b6	ln.asm	/^  b6:	55                   	push   %rbp$/;"	l
b6	zombie.asm	/^  b6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)$/;"	l
b60	init.asm	/^ b60:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
b60	kill.asm	/^ b60:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b61	echo.asm	/^ b61:	72 65                	jb     bc8 <malloc+0xfa>$/;"	l
b61	ln.asm	/^ b61:	48 89 10             	mov    %rdx,(%rax)$/;"	l
b61	wc.asm	/^ b61:	48 8b 00             	mov    (%rax),%rax$/;"	l
b62	bad_mmap.asm	/^ b62:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax$/;"	l
b62	grep.asm	/^ b62:	0f 85 a5 00 00 00    	jne    c0d <printf+0x2ab>$/;"	l
b62	stressfs.asm	/^ b62:	eb 0b                	jmp    b6f <free+0x11e>$/;"	l
b62	zombie.asm	/^ b62:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b63	cat.asm	/^ b63:	48 89 10             	mov    %rdx,(%rax)$/;"	l
b63	eager_mmap.asm	/^ b63:	48 8b 00             	mov    (%rax),%rax$/;"	l
b63	echo.asm	/^ b63:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b63	init.asm	/^ b63:	c1 e0 04             	shl    $0x4,%eax$/;"	l
b63	lazy_mmap.asm	/^ b63:	48 8b 00             	mov    (%rax),%rax$/;"	l
b63	ls.asm	/^     b63:	b9 01 00 00 00       	mov    $0x1,%ecx$/;"	l
b63	mkdir.asm	/^ b63:	00 00 00 $/;"	l
b63	rm.asm	/^ b63:	00 00 00 $/;"	l
b63	sh.asm	/^     b63:	00 00 00 $/;"	l
b64	imshow.asm	/^ b64:	89 d6                	mov    %edx,%esi$/;"	l
b64	kill.asm	/^ b64:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
b64	ln.asm	/^ b64:	48 b8 d0 0e 00 00 00 	movabs $0xed0,%rax$/;"	l
b64	stressfs.asm	/^ b64:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b64	wc.asm	/^ b64:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax$/;"	l
b65	usertests.asm	/^     b65:	00 00 00 $/;"	l
b66	bad_mmap.asm	/^ b66:	75 27                	jne    b8f <free+0x113>$/;"	l
b66	cat.asm	/^ b66:	48 b8 10 12 00 00 00 	movabs $0x1210,%rax$/;"	l
b66	eager_mmap.asm	/^ b66:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
b66	imshow.asm	/^ b66:	89 c7                	mov    %eax,%edi$/;"	l
b66	init.asm	/^ b66:	89 c7                	mov    %eax,%edi$/;"	l
b66	lazy_mmap.asm	/^ b66:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
b66	mkdir.asm	/^ b66:	48 8b 10             	mov    (%rax),%rdx$/;"	l
b66	rm.asm	/^ b66:	48 8b 10             	mov    (%rax),%rdx$/;"	l
b66	sh.asm	/^     b66:	48 89 ce             	mov    %rcx,%rsi$/;"	l
b66	zombie.asm	/^ b66:	48 83 c0 10          	add    $0x10,%rax$/;"	l
b67	echo.asm	/^ b67:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
b67	kill.asm	/^ b67:	3b 45 ec             	cmp    -0x14(%rbp),%eax$/;"	l
b68	bad_mmap.asm	/^ b68:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b68	grep.asm	/^ b68:	8b 85 20 ff ff ff    	mov    -0xe0(%rbp),%eax$/;"	l
b68	imshow.asm	/^ b68:	48 b8 3e 07 00 00 00 	movabs $0x73e,%rax$/;"	l
b68	init.asm	/^ b68:	48 b8 3f 05 00 00 00 	movabs $0x53f,%rax$/;"	l
b68	ls.asm	/^     b68:	ba 0a 00 00 00       	mov    $0xa,%edx$/;"	l
b68	stressfs.asm	/^ b68:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
b68	usertests.asm	/^     b68:	89 c7                	mov    %eax,%edi$/;"	l
b68	wc.asm	/^ b68:	76 ba                	jbe    b24 <free+0x2b>$/;"	l
b69	eager_mmap.asm	/^ b69:	01 c2                	add    %eax,%edx$/;"	l
b69	lazy_mmap.asm	/^ b69:	01 c2                	add    %eax,%edx$/;"	l
b69	mkdir.asm	/^ b69:	48 b8 f0 0e 00 00 00 	movabs $0xef0,%rax$/;"	l
b69	rm.asm	/^ b69:	48 b8 e0 0e 00 00 00 	movabs $0xee0,%rax$/;"	l
b69	sh.asm	/^     b69:	48 89 c7             	mov    %rax,%rdi$/;"	l
b6a	echo.asm	/^ b6a:	3b 45 ec             	cmp    -0x14(%rbp),%eax$/;"	l
b6a	kill.asm	/^ b6a:	72 65                	jb     bd1 <malloc+0xfa>$/;"	l
b6a	usertests.asm	/^     b6a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
b6a	wc.asm	/^ b6a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
b6a	zombie.asm	/^ b6a:	eb 4e                	jmp    bba <malloc+0x148>$/;"	l
b6b	eager_mmap.asm	/^ b6b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
b6b	lazy_mmap.asm	/^ b6b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
b6b	ln.asm	/^ b6b:	00 00 00 $/;"	l
b6c	bad_mmap.asm	/^ b6c:	8b 50 08             	mov    0x8(%rax),%edx$/;"	l
b6c	kill.asm	/^ b6c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b6c	sh.asm	/^     b6c:	48 b8 51 09 00 00 00 	movabs $0x951,%rax$/;"	l
b6c	stressfs.asm	/^ b6c:	48 89 10             	mov    %rdx,(%rax)$/;"	l
b6c	zombie.asm	/^ b6c:	48 b8 30 0e 00 00 00 	movabs $0xe30,%rax$/;"	l
b6d	cat.asm	/^ b6d:	00 00 00 $/;"	l
b6d	echo.asm	/^ b6d:	75 10                	jne    b7f <malloc+0xb1>$/;"	l
b6d	ls.asm	/^     b6d:	89 c7                	mov    %eax,%edi$/;"	l
b6e	grep.asm	/^ b6e:	83 f8 30             	cmp    $0x30,%eax$/;"	l
b6e	ln.asm	/^ b6e:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%rax)$/;"	l
b6e	wc.asm	/^ b6e:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
b6f	bad_mmap.asm	/^ b6f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
b6f	eager_mmap.asm	/^ b6f:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
b6f	echo.asm	/^ b6f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b6f	imshow.asm	/^ b6f:	00 00 00 $/;"	l
b6f	init.asm	/^ b6f:	00 00 00 $/;"	l
b6f	lazy_mmap.asm	/^ b6f:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
b6f	ls.asm	/^     b6f:	48 b8 ba 08 00 00 00 	movabs $0x8ba,%rax$/;"	l
b6f	stressfs.asm	/^ b6f:	48 b8 e0 0f 00 00 00 	movabs $0xfe0,%rax$/;"	l
b6f	usertests.asm	/^     b6f:	48 b9 db 61 00 00 00 	movabs $0x61db,%rcx$/;"	l
b7	cat.asm	/^  b7:	ff d0                	callq  *%rax$/;"	l
b7	eager_mmap.asm	/^  b7:	00 00 00 $/;"	l
b7	forktest.asm	/^  b7:	ff d2                	callq  *%rdx$/;"	l
b7	grep.asm	/^  b7:	48 b8 a2 05 00 00 00 	movabs $0x5a2,%rax$/;"	l
b7	imshow.asm	/^  b7:	48 b8 62 06 00 00 00 	movabs $0x662,%rax$/;"	l
b7	init.asm	/^  b7:	79 2c                	jns    e5 <main+0xe5>$/;"	l
b7	lazy_mmap.asm	/^  b7:	00 00 00 $/;"	l
b7	ln.asm	/^  b7:	48 89 e5             	mov    %rsp,%rbp$/;"	l
b7	mkdir.asm	/^  b7:	3b 45 ec             	cmp    -0x14(%rbp),%eax$/;"	l
b7	rm.asm	/^  b7:	3b 45 ec             	cmp    -0x14(%rbp),%eax$/;"	l
b7	stressfs.asm	/^  b7:	0f b6 45 e8          	movzbl -0x18(%rbp),%eax$/;"	l
b7	wc.asm	/^  b7:	48 be c0 10 00 00 00 	movabs $0x10c0,%rsi$/;"	l
b70	cat.asm	/^ b70:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx$/;"	l
b70	kill.asm	/^ b70:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
b70	mkdir.asm	/^ b70:	00 00 00 $/;"	l
b70	rm.asm	/^ b70:	00 00 00 $/;"	l
b71	grep.asm	/^ b71:	73 23                	jae    b96 <printf+0x234>$/;"	l
b71	wc.asm	/^ b71:	89 c0                	mov    %eax,%eax$/;"	l
b72	eager_mmap.asm	/^ b72:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b72	imshow.asm	/^ b72:	ff d0                	callq  *%rax$/;"	l
b72	init.asm	/^ b72:	ff d0                	callq  *%rax$/;"	l
b72	lazy_mmap.asm	/^ b72:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b73	bad_mmap.asm	/^ b73:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
b73	echo.asm	/^ b73:	48 8b 10             	mov    (%rax),%rdx$/;"	l
b73	grep.asm	/^ b73:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax$/;"	l
b73	kill.asm	/^ b73:	3b 45 ec             	cmp    -0x14(%rbp),%eax$/;"	l
b73	mkdir.asm	/^ b73:	48 89 10             	mov    %rdx,(%rax)$/;"	l
b73	rm.asm	/^ b73:	48 89 10             	mov    %rdx,(%rax)$/;"	l
b73	sh.asm	/^     b73:	00 00 00 $/;"	l
b73	wc.asm	/^ b73:	48 c1 e0 04          	shl    $0x4,%rax$/;"	l
b73	zombie.asm	/^ b73:	00 00 00 $/;"	l
b74	cat.asm	/^ b74:	48 89 10             	mov    %rdx,(%rax)$/;"	l
b74	imshow.asm	/^ b74:	eb 38                	jmp    bae <printf+0x373>$/;"	l
b74	init.asm	/^ b74:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
b75	ln.asm	/^ b75:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
b76	bad_mmap.asm	/^ b76:	01 c2                	add    %eax,%edx$/;"	l
b76	eager_mmap.asm	/^ b76:	48 8b 00             	mov    (%rax),%rax$/;"	l
b76	echo.asm	/^ b76:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
b76	imshow.asm	/^ b76:	8b 85 1c ff ff ff    	mov    -0xe4(%rbp),%eax$/;"	l
b76	kill.asm	/^ b76:	75 10                	jne    b88 <malloc+0xb1>$/;"	l
b76	lazy_mmap.asm	/^ b76:	48 8b 00             	mov    (%rax),%rax$/;"	l
b76	ls.asm	/^     b76:	00 00 00 $/;"	l
b76	mkdir.asm	/^ b76:	48 b8 f0 0e 00 00 00 	movabs $0xef0,%rax$/;"	l
b76	rm.asm	/^ b76:	48 b8 e0 0e 00 00 00 	movabs $0xee0,%rax$/;"	l
b76	sh.asm	/^     b76:	ff d0                	callq  *%rax$/;"	l
b76	stressfs.asm	/^ b76:	00 00 00 $/;"	l
b76	usertests.asm	/^     b76:	00 00 00 $/;"	l
b76	zombie.asm	/^ b76:	48 8b 00             	mov    (%rax),%rax$/;"	l
b77	cat.asm	/^ b77:	90                   	nop$/;"	l
b77	wc.asm	/^ b77:	48 89 c2             	mov    %rax,%rdx$/;"	l
b78	bad_mmap.asm	/^ b78:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b78	cat.asm	/^ b78:	c9                   	leaveq $/;"	l
b78	init.asm	/^ b78:	48 83 7d f8 ff       	cmpq   $0xffffffffffffffff,-0x8(%rbp)$/;"	l
b78	kill.asm	/^ b78:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b78	sh.asm	/^     b78:	85 c0                	test   %eax,%eax$/;"	l
b79	cat.asm	/^ b79:	c3                   	retq   $/;"	l
b79	eager_mmap.asm	/^ b79:	48 8b 10             	mov    (%rax),%rdx$/;"	l
b79	lazy_mmap.asm	/^ b79:	48 8b 10             	mov    (%rax),%rdx$/;"	l
b79	ln.asm	/^ b79:	48 8b 00             	mov    (%rax),%rax$/;"	l
b79	ls.asm	/^     b79:	ff d0                	callq  *%rax$/;"	l
b79	stressfs.asm	/^ b79:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx$/;"	l
b79	usertests.asm	/^     b79:	ff d1                	callq  *%rcx$/;"	l
b79	zombie.asm	/^ b79:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)$/;"	l
b7a	cat.asm	/^ b7a:	55                   	push   %rbp$/;"	l
b7a	echo.asm	/^ b7a:	48 89 10             	mov    %rdx,(%rax)$/;"	l
b7a	grep.asm	/^ b7a:	8b 95 20 ff ff ff    	mov    -0xe0(%rbp),%edx$/;"	l
b7a	sh.asm	/^     b7a:	74 58                	je     bd4 <parseline+0x110>$/;"	l
b7a	wc.asm	/^ b7a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
b7b	cat.asm	/^ b7b:	48 89 e5             	mov    %rsp,%rbp$/;"	l
b7b	ls.asm	/^     b7b:	e9 7a 01 00 00       	jmpq   cfa <printf+0x373>$/;"	l
b7b	usertests.asm	/^     b7b:	48 b8 02 60 00 00 00 	movabs $0x6002,%rax$/;"	l
b7c	bad_mmap.asm	/^ b7c:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
b7c	eager_mmap.asm	/^ b7c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
b7c	imshow.asm	/^ b7c:	be 25 00 00 00       	mov    $0x25,%esi$/;"	l
b7c	kill.asm	/^ b7c:	48 8b 10             	mov    (%rax),%rdx$/;"	l
b7c	lazy_mmap.asm	/^ b7c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
b7c	ln.asm	/^ b7c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
b7c	sh.asm	/^     b7c:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi$/;"	l
b7d	echo.asm	/^ b7d:	eb 2e                	jmp    bad <malloc+0xdf>$/;"	l
b7d	init.asm	/^ b7d:	75 07                	jne    b86 <morecore+0x41>$/;"	l
b7d	mkdir.asm	/^ b7d:	00 00 00 $/;"	l
b7d	rm.asm	/^ b7d:	00 00 00 $/;"	l
b7d	stressfs.asm	/^ b7d:	48 89 10             	mov    %rdx,(%rax)$/;"	l
b7d	zombie.asm	/^ b7d:	75 23                	jne    ba2 <malloc+0x130>$/;"	l
b7e	cat.asm	/^ b7e:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
b7e	wc.asm	/^ b7e:	48 01 c2             	add    %rax,%rdx$/;"	l
b7f	bad_mmap.asm	/^ b7f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
b7f	echo.asm	/^ b7f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b7f	init.asm	/^ b7f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
b7f	kill.asm	/^ b7f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
b7f	zombie.asm	/^ b7f:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
b8	kill.asm	/^  b8:	89 d1                	mov    %edx,%ecx$/;"	l
b80	eager_mmap.asm	/^ b80:	48 89 10             	mov    %rdx,(%rax)$/;"	l
b80	grep.asm	/^ b80:	89 d2                	mov    %edx,%edx$/;"	l
b80	lazy_mmap.asm	/^ b80:	48 89 10             	mov    %rdx,(%rax)$/;"	l
b80	ln.asm	/^ b80:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b80	ls.asm	/^     b80:	83 bd 3c ff ff ff 73 	cmpl   $0x73,-0xc4(%rbp)$/;"	l
b80	mkdir.asm	/^ b80:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%rax)$/;"	l
b80	rm.asm	/^ b80:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%rax)$/;"	l
b80	sh.asm	/^     b80:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
b80	stressfs.asm	/^ b80:	90                   	nop$/;"	l
b81	imshow.asm	/^ b81:	89 c7                	mov    %eax,%edi$/;"	l
b81	stressfs.asm	/^ b81:	c9                   	leaveq $/;"	l
b81	wc.asm	/^ b81:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b82	cat.asm	/^ b82:	89 7d ec             	mov    %edi,-0x14(%rbp)$/;"	l
b82	grep.asm	/^ b82:	48 01 d0             	add    %rdx,%rax$/;"	l
b82	stressfs.asm	/^ b82:	c3                   	retq   $/;"	l
b82	usertests.asm	/^     b82:	00 00 00 $/;"	l
b82	zombie.asm	/^ b82:	89 c7                	mov    %eax,%edi$/;"	l
b83	bad_mmap.asm	/^ b83:	48 8b 10             	mov    (%rax),%rdx$/;"	l
b83	eager_mmap.asm	/^ b83:	eb 0e                	jmp    b93 <free+0xcf>$/;"	l
b83	echo.asm	/^ b83:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
b83	imshow.asm	/^ b83:	48 b8 3e 07 00 00 00 	movabs $0x73e,%rax$/;"	l
b83	kill.asm	/^ b83:	48 89 10             	mov    %rdx,(%rax)$/;"	l
b83	lazy_mmap.asm	/^ b83:	eb 0e                	jmp    b93 <free+0xcf>$/;"	l
b83	stressfs.asm	/^ b83:	55                   	push   %rbp$/;"	l
b84	init.asm	/^ b84:	eb 36                	jmp    bbc <morecore+0x77>$/;"	l
b84	ln.asm	/^ b84:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
b84	sh.asm	/^     b84:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
b84	stressfs.asm	/^ b84:	48 89 e5             	mov    %rsp,%rbp$/;"	l
b84	zombie.asm	/^ b84:	48 b8 f9 09 00 00 00 	movabs $0x9f9,%rax$/;"	l
b85	cat.asm	/^ b85:	81 7d ec ff 0f 00 00 	cmpl   $0xfff,-0x14(%rbp)$/;"	l
b85	eager_mmap.asm	/^ b85:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b85	grep.asm	/^ b85:	8b 95 20 ff ff ff    	mov    -0xe0(%rbp),%edx$/;"	l
b85	lazy_mmap.asm	/^ b85:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b85	usertests.asm	/^     b85:	ff d0                	callq  *%rax$/;"	l
b85	wc.asm	/^ b85:	48 8b 00             	mov    (%rax),%rax$/;"	l
b86	bad_mmap.asm	/^ b86:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b86	echo.asm	/^ b86:	2b 45 ec             	sub    -0x14(%rbp),%eax$/;"	l
b86	init.asm	/^ b86:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b86	kill.asm	/^ b86:	eb 2e                	jmp    bb6 <malloc+0xdf>$/;"	l
b87	ln.asm	/^ b87:	3b 45 ec             	cmp    -0x14(%rbp),%eax$/;"	l
b87	ls.asm	/^     b87:	0f 85 a5 00 00 00    	jne    c32 <printf+0x2ab>$/;"	l
b87	mkdir.asm	/^ b87:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
b87	rm.asm	/^ b87:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
b87	stressfs.asm	/^ b87:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
b87	usertests.asm	/^     b87:	81 7d fc 00 02 00 00 	cmpl   $0x200,-0x4(%rbp)$/;"	l
b88	kill.asm	/^ b88:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b88	wc.asm	/^ b88:	48 39 c2             	cmp    %rax,%rdx$/;"	l
b89	eager_mmap.asm	/^ b89:	48 8b 10             	mov    (%rax),%rdx$/;"	l
b89	echo.asm	/^ b89:	89 c2                	mov    %eax,%edx$/;"	l
b89	lazy_mmap.asm	/^ b89:	48 8b 10             	mov    (%rax),%rdx$/;"	l
b89	sh.asm	/^     b89:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
b8a	bad_mmap.asm	/^ b8a:	48 89 10             	mov    %rdx,(%rax)$/;"	l
b8a	imshow.asm	/^ b8a:	00 00 00 $/;"	l
b8a	init.asm	/^ b8a:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
b8a	ln.asm	/^ b8a:	72 65                	jb     bf1 <malloc+0xfa>$/;"	l
b8b	echo.asm	/^ b8b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b8b	grep.asm	/^ b8b:	83 c2 08             	add    $0x8,%edx$/;"	l
b8b	mkdir.asm	/^ b8b:	48 8b 00             	mov    (%rax),%rax$/;"	l
b8b	rm.asm	/^ b8b:	48 8b 00             	mov    (%rax),%rax$/;"	l
b8b	stressfs.asm	/^ b8b:	89 7d ec             	mov    %edi,-0x14(%rbp)$/;"	l
b8b	wc.asm	/^ b8b:	75 2d                	jne    bba <free+0xc1>$/;"	l
b8b	zombie.asm	/^ b8b:	00 00 00 $/;"	l
b8c	cat.asm	/^ b8c:	77 07                	ja     b95 <morecore+0x1b>$/;"	l
b8c	eager_mmap.asm	/^ b8c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
b8c	kill.asm	/^ b8c:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
b8c	lazy_mmap.asm	/^ b8c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
b8c	ln.asm	/^ b8c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b8d	bad_mmap.asm	/^ b8d:	eb 0b                	jmp    b9a <free+0x11e>$/;"	l
b8d	imshow.asm	/^ b8d:	ff d0                	callq  *%rax$/;"	l
b8d	ls.asm	/^     b8d:	8b 85 20 ff ff ff    	mov    -0xe0(%rbp),%eax$/;"	l
b8d	wc.asm	/^ b8d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
b8e	cat.asm	/^ b8e:	c7 45 ec 00 10 00 00 	movl   $0x1000,-0x14(%rbp)$/;"	l
b8e	grep.asm	/^ b8e:	89 95 20 ff ff ff    	mov    %edx,-0xe0(%rbp)$/;"	l
b8e	init.asm	/^ b8e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
b8e	mkdir.asm	/^ b8e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
b8e	rm.asm	/^ b8e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
b8e	sh.asm	/^     b8e:	48 89 c7             	mov    %rax,%rdi$/;"	l
b8e	stressfs.asm	/^ b8e:	81 7d ec ff 0f 00 00 	cmpl   $0xfff,-0x14(%rbp)$/;"	l
b8e	usertests.asm	/^     b8e:	74 38                	je     bc8 <writetest1+0x22f>$/;"	l
b8e	zombie.asm	/^ b8e:	ff d0                	callq  *%rax$/;"	l
b8f	bad_mmap.asm	/^ b8f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b8f	echo.asm	/^ b8f:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
b8f	imshow.asm	/^ b8f:	8b 85 3c ff ff ff    	mov    -0xc4(%rbp),%eax$/;"	l
b8f	kill.asm	/^ b8f:	2b 45 ec             	sub    -0x14(%rbp),%eax$/;"	l
b9	bad_mmap.asm	/^  b9:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
b9	cat.asm	/^  b9:	90                   	nop$/;"	l
b9	echo.asm	/^  b9:	48 89 75 f8          	mov    %rsi,-0x8(%rbp)$/;"	l
b9	forktest.asm	/^  b9:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)$/;"	l
b9	init.asm	/^  b9:	48 be 26 0d 00 00 00 	movabs $0xd26,%rsi$/;"	l
b9	ls.asm	/^      b9:	89 d3                	mov    %edx,%ebx$/;"	l
b9	sh.asm	/^      b9:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
b90	eager_mmap.asm	/^ b90:	48 89 10             	mov    %rdx,(%rax)$/;"	l
b90	lazy_mmap.asm	/^ b90:	48 89 10             	mov    %rdx,(%rax)$/;"	l
b90	ln.asm	/^ b90:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
b90	usertests.asm	/^     b90:	48 b8 08 88 00 00 00 	movabs $0x8808,%rax$/;"	l
b90	zombie.asm	/^ b90:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
b91	sh.asm	/^     b91:	48 b8 aa 07 00 00 00 	movabs $0x7aa,%rax$/;"	l
b91	wc.asm	/^ b91:	8b 50 08             	mov    0x8(%rax),%edx$/;"	l
b92	echo.asm	/^ b92:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b92	init.asm	/^ b92:	8b 55 ec             	mov    -0x14(%rbp),%edx$/;"	l
b92	kill.asm	/^ b92:	89 c2                	mov    %eax,%edx$/;"	l
b92	mkdir.asm	/^ b92:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b92	rm.asm	/^ b92:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b93	bad_mmap.asm	/^ b93:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
b93	eager_mmap.asm	/^ b93:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b93	lazy_mmap.asm	/^ b93:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b93	ln.asm	/^ b93:	3b 45 ec             	cmp    -0x14(%rbp),%eax$/;"	l
b93	ls.asm	/^     b93:	83 f8 30             	cmp    $0x30,%eax$/;"	l
b94	grep.asm	/^ b94:	eb 12                	jmp    ba8 <printf+0x246>$/;"	l
b94	kill.asm	/^ b94:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b94	wc.asm	/^ b94:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b94	zombie.asm	/^ b94:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)$/;"	l
b95	cat.asm	/^ b95:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
b95	imshow.asm	/^ b95:	0f be d0             	movsbl %al,%edx$/;"	l
b95	init.asm	/^ b95:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
b95	stressfs.asm	/^ b95:	77 07                	ja     b9e <morecore+0x1b>$/;"	l
b96	echo.asm	/^ b96:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
b96	grep.asm	/^ b96:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax$/;"	l
b96	ln.asm	/^ b96:	75 10                	jne    ba8 <malloc+0xb1>$/;"	l
b96	ls.asm	/^     b96:	73 23                	jae    bbb <printf+0x234>$/;"	l
b96	mkdir.asm	/^ b96:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
b96	rm.asm	/^ b96:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
b97	bad_mmap.asm	/^ b97:	48 89 10             	mov    %rdx,(%rax)$/;"	l
b97	eager_mmap.asm	/^ b97:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
b97	lazy_mmap.asm	/^ b97:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
b97	stressfs.asm	/^ b97:	c7 45 ec 00 10 00 00 	movl   $0x1000,-0x14(%rbp)$/;"	l
b97	usertests.asm	/^     b97:	00 00 00 $/;"	l
b98	cat.asm	/^ b98:	c1 e0 04             	shl    $0x4,%eax$/;"	l
b98	imshow.asm	/^ b98:	8b 85 1c ff ff ff    	mov    -0xe4(%rbp),%eax$/;"	l
b98	init.asm	/^ b98:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
b98	kill.asm	/^ b98:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
b98	ln.asm	/^ b98:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b98	ls.asm	/^     b98:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax$/;"	l
b98	sh.asm	/^     b98:	00 00 00 $/;"	l
b98	wc.asm	/^ b98:	48 8b 00             	mov    (%rax),%rax$/;"	l
b99	echo.asm	/^ b99:	89 c0                	mov    %eax,%eax$/;"	l
b99	mkdir.asm	/^ b99:	3b 45 ec             	cmp    -0x14(%rbp),%eax$/;"	l
b99	rm.asm	/^ b99:	3b 45 ec             	cmp    -0x14(%rbp),%eax$/;"	l
b99	zombie.asm	/^ b99:	75 07                	jne    ba2 <malloc+0x130>$/;"	l
b9a	bad_mmap.asm	/^ b9a:	48 b8 40 11 00 00 00 	movabs $0x1140,%rax$/;"	l
b9a	eager_mmap.asm	/^ b9a:	89 c0                	mov    %eax,%eax$/;"	l
b9a	lazy_mmap.asm	/^ b9a:	89 c0                	mov    %eax,%eax$/;"	l
b9a	usertests.asm	/^     b9a:	8b 00                	mov    (%rax),%eax$/;"	l
b9b	cat.asm	/^ b9b:	89 c7                	mov    %eax,%edi$/;"	l
b9b	echo.asm	/^ b9b:	48 c1 e0 04          	shl    $0x4,%rax$/;"	l
b9b	kill.asm	/^ b9b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b9b	sh.asm	/^     b9b:	ff d0                	callq  *%rax$/;"	l
b9b	wc.asm	/^ b9b:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
b9b	zombie.asm	/^ b9b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
b9c	eager_mmap.asm	/^ b9c:	48 c1 e0 04          	shl    $0x4,%rax$/;"	l
b9c	init.asm	/^ b9c:	48 83 c0 10          	add    $0x10,%rax$/;"	l
b9c	lazy_mmap.asm	/^ b9c:	48 c1 e0 04          	shl    $0x4,%rax$/;"	l
b9c	ln.asm	/^ b9c:	48 8b 10             	mov    (%rax),%rdx$/;"	l
b9c	mkdir.asm	/^ b9c:	72 65                	jb     c03 <malloc+0xfa>$/;"	l
b9c	rm.asm	/^ b9c:	72 65                	jb     c03 <malloc+0xfa>$/;"	l
b9c	usertests.asm	/^     b9c:	8b 55 fc             	mov    -0x4(%rbp),%edx$/;"	l
b9d	cat.asm	/^ b9d:	48 b8 74 05 00 00 00 	movabs $0x574,%rax$/;"	l
b9d	grep.asm	/^ b9d:	48 8d 50 08          	lea    0x8(%rax),%rdx$/;"	l
b9d	sh.asm	/^     b9d:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx$/;"	l
b9e	imshow.asm	/^ b9e:	89 d6                	mov    %edx,%esi$/;"	l
b9e	mkdir.asm	/^ b9e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b9e	rm.asm	/^ b9e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
b9e	stressfs.asm	/^ b9e:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
b9e	wc.asm	/^ b9e:	01 c2                	add    %eax,%edx$/;"	l
b9f	echo.asm	/^ b9f:	48 01 45 f8          	add    %rax,-0x8(%rbp)$/;"	l
b9f	kill.asm	/^ b9f:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
b9f	ln.asm	/^ b9f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
b9f	ls.asm	/^     b9f:	8b 95 20 ff ff ff    	mov    -0xe0(%rbp),%edx$/;"	l
b9f	usertests.asm	/^     b9f:	48 be ce 6b 00 00 00 	movabs $0x6bce,%rsi$/;"	l
ba	cat.asm	/^  ba:	c9                   	leaveq $/;"	l
ba	eager_mmap.asm	/^  ba:	bf 01 00 00 00       	mov    $0x1,%edi$/;"	l
ba	kill.asm	/^  ba:	fc                   	cld    $/;"	l
ba	lazy_mmap.asm	/^  ba:	bf 01 00 00 00       	mov    $0x1,%edi$/;"	l
ba	ln.asm	/^  ba:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ba	mkdir.asm	/^  ba:	7c 8e                	jl     4a <main+0x4a>$/;"	l
ba	rm.asm	/^  ba:	7c 8e                	jl     4a <main+0x4a>$/;"	l
ba	usertests.asm	/^      ba:	00 00 00 $/;"	l
ba	zombie.asm	/^  ba:	eb 0a                	jmp    c6 <strcmp+0x1c>$/;"	l
ba0	eager_mmap.asm	/^ ba0:	48 89 c2             	mov    %rax,%rdx$/;"	l
ba0	imshow.asm	/^ ba0:	89 c7                	mov    %eax,%edi$/;"	l
ba0	init.asm	/^ ba0:	48 89 c7             	mov    %rax,%rdi$/;"	l
ba0	lazy_mmap.asm	/^ ba0:	48 89 c2             	mov    %rax,%rdx$/;"	l
ba0	wc.asm	/^ ba0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ba0	zombie.asm	/^ ba0:	eb 18                	jmp    bba <malloc+0x148>$/;"	l
ba1	bad_mmap.asm	/^ ba1:	00 00 00 $/;"	l
ba1	grep.asm	/^ ba1:	48 89 95 28 ff ff ff 	mov    %rdx,-0xd8(%rbp)$/;"	l
ba1	sh.asm	/^     ba1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ba1	stressfs.asm	/^ ba1:	c1 e0 04             	shl    $0x4,%eax$/;"	l
ba2	imshow.asm	/^ ba2:	48 b8 3e 07 00 00 00 	movabs $0x73e,%rax$/;"	l
ba2	kill.asm	/^ ba2:	89 c0                	mov    %eax,%eax$/;"	l
ba2	mkdir.asm	/^ ba2:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
ba2	rm.asm	/^ ba2:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
ba2	zombie.asm	/^ ba2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ba3	eager_mmap.asm	/^ ba3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ba3	echo.asm	/^ ba3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ba3	init.asm	/^ ba3:	48 b8 13 0a 00 00 00 	movabs $0xa13,%rax$/;"	l
ba3	lazy_mmap.asm	/^ ba3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ba3	ln.asm	/^ ba3:	48 89 10             	mov    %rdx,(%rax)$/;"	l
ba4	bad_mmap.asm	/^ ba4:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx$/;"	l
ba4	cat.asm	/^ ba4:	00 00 00 $/;"	l
ba4	kill.asm	/^ ba4:	48 c1 e0 04          	shl    $0x4,%rax$/;"	l
ba4	stressfs.asm	/^ ba4:	89 c7                	mov    %eax,%edi$/;"	l
ba4	wc.asm	/^ ba4:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
ba5	ls.asm	/^     ba5:	89 d2                	mov    %edx,%edx$/;"	l
ba5	mkdir.asm	/^ ba5:	3b 45 ec             	cmp    -0x14(%rbp),%eax$/;"	l
ba5	rm.asm	/^ ba5:	3b 45 ec             	cmp    -0x14(%rbp),%eax$/;"	l
ba5	sh.asm	/^     ba5:	48 89 d6             	mov    %rdx,%rsi$/;"	l
ba6	ln.asm	/^ ba6:	eb 2e                	jmp    bd6 <malloc+0xdf>$/;"	l
ba6	stressfs.asm	/^ ba6:	48 b8 7d 05 00 00 00 	movabs $0x57d,%rax$/;"	l
ba6	usertests.asm	/^     ba6:	00 00 00 $/;"	l
ba6	zombie.asm	/^ ba6:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ba7	cat.asm	/^ ba7:	ff d0                	callq  *%rax$/;"	l
ba7	eager_mmap.asm	/^ ba7:	48 01 d0             	add    %rdx,%rax$/;"	l
ba7	echo.asm	/^ ba7:	8b 55 ec             	mov    -0x14(%rbp),%edx$/;"	l
ba7	lazy_mmap.asm	/^ ba7:	48 01 d0             	add    %rdx,%rax$/;"	l
ba7	ls.asm	/^     ba7:	48 01 d0             	add    %rdx,%rax$/;"	l
ba7	wc.asm	/^ ba7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ba8	bad_mmap.asm	/^ ba8:	48 89 10             	mov    %rdx,(%rax)$/;"	l
ba8	grep.asm	/^ ba8:	48 8b 00             	mov    (%rax),%rax$/;"	l
ba8	kill.asm	/^ ba8:	48 01 45 f8          	add    %rax,-0x8(%rbp)$/;"	l
ba8	ln.asm	/^ ba8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ba8	mkdir.asm	/^ ba8:	75 10                	jne    bba <malloc+0xb1>$/;"	l
ba8	rm.asm	/^ ba8:	75 10                	jne    bba <malloc+0xb1>$/;"	l
ba8	sh.asm	/^     ba8:	48 89 c7             	mov    %rax,%rdi$/;"	l
ba9	cat.asm	/^ ba9:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ba9	imshow.asm	/^ ba9:	00 00 00 $/;"	l
ba9	usertests.asm	/^     ba9:	89 c7                	mov    %eax,%edi$/;"	l
baa	eager_mmap.asm	/^ baa:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax$/;"	l
baa	echo.asm	/^ baa:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
baa	init.asm	/^ baa:	00 00 00 $/;"	l
baa	lazy_mmap.asm	/^ baa:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax$/;"	l
baa	ls.asm	/^     baa:	8b 95 20 ff ff ff    	mov    -0xe0(%rbp),%edx$/;"	l
baa	mkdir.asm	/^ baa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
baa	rm.asm	/^ baa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
baa	zombie.asm	/^ baa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
bab	bad_mmap.asm	/^ bab:	90                   	nop$/;"	l
bab	grep.asm	/^ bab:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)$/;"	l
bab	sh.asm	/^     bab:	48 b8 c4 0a 00 00 00 	movabs $0xac4,%rax$/;"	l
bab	usertests.asm	/^     bab:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
bab	wc.asm	/^ bab:	48 8b 00             	mov    (%rax),%rax$/;"	l
bac	bad_mmap.asm	/^ bac:	c9                   	leaveq $/;"	l
bac	imshow.asm	/^ bac:	ff d0                	callq  *%rax$/;"	l
bac	kill.asm	/^ bac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
bac	ln.asm	/^ bac:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
backcmd	sh.c	/^backcmd(struct cmd *subcmd)$/;"	f
backcmd	sh.c	/^struct backcmd {$/;"	s	file:
bad	bad_mmap.asm	/^ bad:	c3                   	retq   $/;"	l
bad	cat.asm	/^ bad:	48 83 7d f8 ff       	cmpq   $0xffffffffffffffff,-0x8(%rbp)$/;"	l
bad	echo.asm	/^ bad:	48 b8 90 0e 00 00 00 	movabs $0xe90,%rax$/;"	l
bad	init.asm	/^ bad:	ff d0                	callq  *%rax$/;"	l
bad	kernel.asm	/^ bad:$/;"	l
bad	kernel.asm	/^bad:$/;"	l
bad	stressfs.asm	/^ bad:	00 00 00 $/;"	l
bae	bad_mmap.asm	/^ bae:	55                   	push   %rbp$/;"	l
bae	eager_mmap.asm	/^ bae:	75 27                	jne    bd7 <free+0x113>$/;"	l
bae	imshow.asm	/^ bae:	c7 85 40 ff ff ff 00 	movl   $0x0,-0xc0(%rbp)$/;"	l
bae	lazy_mmap.asm	/^ bae:	75 27                	jne    bd7 <free+0x113>$/;"	l
bae	mkdir.asm	/^ bae:	48 8b 10             	mov    (%rax),%rdx$/;"	l
bae	rm.asm	/^ bae:	48 8b 10             	mov    (%rax),%rdx$/;"	l
bae	wc.asm	/^ bae:	48 8b 10             	mov    (%rax),%rdx$/;"	l
bae	zombie.asm	/^ bae:	48 8b 00             	mov    (%rax),%rax$/;"	l
baf	bad_mmap.asm	/^ baf:	48 89 e5             	mov    %rsp,%rbp$/;"	l
baf	init.asm	/^ baf:	48 b8 e0 0f 00 00 00 	movabs $0xfe0,%rax$/;"	l
baf	ln.asm	/^ baf:	2b 45 ec             	sub    -0x14(%rbp),%eax$/;"	l
balloc	fs.c	/^balloc(uint dev)$/;"	f	file:
balloc	mkfs.c	/^balloc(int used)$/;"	f
base	umalloc.c	/^static Header base;$/;"	v	file:
base_15_0	mmu.h	/^  uint base_15_0 : 16; \/\/ Low bits of segment base address$/;"	m	struct:segdesc
base_23_16	mmu.h	/^  uint base_23_16 : 8; \/\/ Middle bits of segment base address$/;"	m	struct:segdesc
base_31_24	mmu.h	/^  uint base_31_24 : 8; \/\/ High bits of segment base address$/;"	m	struct:segdesc
bb	cat.asm	/^  bb:	c3                   	retq   $/;"	l
bb	kill.asm	/^  bb:	f3 aa                	rep stos %al,%es:(%rdi)$/;"	l
bb	ls.asm	/^      bb:	29 c3                	sub    %eax,%ebx$/;"	l
bb	stressfs.asm	/^  bb:	89 c2                	mov    %eax,%edx$/;"	l
bb0	eager_mmap.asm	/^ bb0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
bb0	kill.asm	/^ bb0:	8b 55 ec             	mov    -0x14(%rbp),%edx$/;"	l
bb0	lazy_mmap.asm	/^ bb0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
bb0	ls.asm	/^     bb0:	83 c2 08             	add    $0x8,%edx$/;"	l
bb0	stressfs.asm	/^ bb0:	ff d0                	callq  *%rax$/;"	l
bb0	usertests.asm	/^     bb0:	48 b9 db 61 00 00 00 	movabs $0x61db,%rcx$/;"	l
bb1	mkdir.asm	/^ bb1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
bb1	rm.asm	/^ bb1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
bb1	wc.asm	/^ bb1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
bb1	zombie.asm	/^ bb1:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
bb2	bad_mmap.asm	/^ bb2:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
bb2	cat.asm	/^ bb2:	75 07                	jne    bbb <morecore+0x41>$/;"	l
bb2	grep.asm	/^ bb2:	48 83 bd 48 ff ff ff 	cmpq   $0x0,-0xb8(%rbp)$/;"	l
bb2	ln.asm	/^ bb2:	89 c2                	mov    %eax,%edx$/;"	l
bb2	sh.asm	/^     bb2:	00 00 00 $/;"	l
bb2	stressfs.asm	/^ bb2:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
bb3	kill.asm	/^ bb3:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
bb3	ls.asm	/^     bb3:	89 95 20 ff ff ff    	mov    %edx,-0xe0(%rbp)$/;"	l
bb4	cat.asm	/^ bb4:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
bb4	eager_mmap.asm	/^ bb4:	8b 50 08             	mov    0x8(%rax),%edx$/;"	l
bb4	echo.asm	/^ bb4:	00 00 00 $/;"	l
bb4	lazy_mmap.asm	/^ bb4:	8b 50 08             	mov    0x8(%rax),%edx$/;"	l
bb4	ln.asm	/^ bb4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
bb5	imshow.asm	/^ bb5:	00 00 00 $/;"	l
bb5	mkdir.asm	/^ bb5:	48 89 10             	mov    %rdx,(%rax)$/;"	l
bb5	rm.asm	/^ bb5:	48 89 10             	mov    %rdx,(%rax)$/;"	l
bb5	sh.asm	/^     bb5:	ff d0                	callq  *%rax$/;"	l
bb5	wc.asm	/^ bb5:	48 89 10             	mov    %rdx,(%rax)$/;"	l
bb5	zombie.asm	/^ bb5:	e9 41 ff ff ff       	jmpq   afb <malloc+0x89>$/;"	l
bb6	bad_mmap.asm	/^ bb6:	89 7d ec             	mov    %edi,-0x14(%rbp)$/;"	l
bb6	init.asm	/^ bb6:	00 00 00 $/;"	l
bb6	kill.asm	/^ bb6:	48 b8 b0 0e 00 00 00 	movabs $0xeb0,%rax$/;"	l
bb6	stressfs.asm	/^ bb6:	48 83 7d f8 ff       	cmpq   $0xffffffffffffffff,-0x8(%rbp)$/;"	l
bb7	eager_mmap.asm	/^ bb7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
bb7	echo.asm	/^ bb7:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
bb7	lazy_mmap.asm	/^ bb7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
bb7	sh.asm	/^     bb7:	48 89 c2             	mov    %rax,%rdx$/;"	l
bb7	usertests.asm	/^     bb7:	00 00 00 $/;"	l
bb8	imshow.asm	/^ bb8:	83 85 44 ff ff ff 01 	addl   $0x1,-0xbc(%rbp)$/;"	l
bb8	ln.asm	/^ bb8:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
bb8	mkdir.asm	/^ bb8:	eb 2e                	jmp    be8 <malloc+0xdf>$/;"	l
bb8	rm.asm	/^ bb8:	eb 2e                	jmp    be8 <malloc+0xdf>$/;"	l
bb8	wc.asm	/^ bb8:	eb 0e                	jmp    bc8 <free+0xcf>$/;"	l
bb9	bad_mmap.asm	/^ bb9:	81 7d ec ff 0f 00 00 	cmpl   $0xfff,-0x14(%rbp)$/;"	l
bb9	cat.asm	/^ bb9:	eb 36                	jmp    bf1 <morecore+0x77>$/;"	l
bb9	grep.asm	/^ bb9:	00 $/;"	l
bb9	init.asm	/^ bb9:	48 8b 00             	mov    (%rax),%rax$/;"	l
bb9	ls.asm	/^     bb9:	eb 12                	jmp    bcd <printf+0x246>$/;"	l
bba	grep.asm	/^ bba:	75 3e                	jne    bfa <printf+0x298>$/;"	l
bba	mkdir.asm	/^ bba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
bba	rm.asm	/^ bba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
bba	sh.asm	/^     bba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
bba	usertests.asm	/^     bba:	ff d1                	callq  *%rcx$/;"	l
bba	wc.asm	/^ bba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
bba	zombie.asm	/^ bba:	c9                   	leaveq $/;"	l
bbb	cat.asm	/^ bbb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
bbb	eager_mmap.asm	/^ bbb:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
bbb	echo.asm	/^ bbb:	48 89 10             	mov    %rdx,(%rax)$/;"	l
bbb	lazy_mmap.asm	/^ bbb:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
bbb	ln.asm	/^ bbb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
bbb	ls.asm	/^     bbb:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax$/;"	l
bbb	stressfs.asm	/^ bbb:	75 07                	jne    bc4 <morecore+0x41>$/;"	l
bbb	zombie.asm	/^ bbb:	c3                   	retq   $/;"	l
bbc	grep.asm	/^ bbc:	48 b8 36 10 00 00 00 	movabs $0x1036,%rax$/;"	l
bbc	init.asm	/^ bbc:	c9                   	leaveq $/;"	l
bbc	usertests.asm	/^     bbc:	48 b8 02 60 00 00 00 	movabs $0x6002,%rax$/;"	l
bbd	init.asm	/^ bbd:	c3                   	retq   $/;"	l
bbd	kill.asm	/^ bbd:	00 00 00 $/;"	l
bbd	stressfs.asm	/^ bbd:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
bbe	eager_mmap.asm	/^ bbe:	01 c2                	add    %eax,%edx$/;"	l
bbe	echo.asm	/^ bbe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
bbe	init.asm	/^ bbe:	55                   	push   %rbp$/;"	l
bbe	lazy_mmap.asm	/^ bbe:	01 c2                	add    %eax,%edx$/;"	l
bbe	mkdir.asm	/^ bbe:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
bbe	rm.asm	/^ bbe:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
bbe	sh.asm	/^     bbe:	48 89 d6             	mov    %rdx,%rsi$/;"	l
bbe	wc.asm	/^ bbe:	48 8b 10             	mov    (%rax),%rdx$/;"	l
bbf	cat.asm	/^ bbf:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
bbf	imshow.asm	/^ bbf:	8b 85 44 ff ff ff    	mov    -0xbc(%rbp),%eax$/;"	l
bbf	init.asm	/^ bbf:	48 89 e5             	mov    %rsp,%rbp$/;"	l
bbf	ln.asm	/^ bbf:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
bc	cat.asm	/^  bc:	55                   	push   %rbp$/;"	l
bc	mkdir.asm	/^  bc:	48 b8 e0 03 00 00 00 	movabs $0x3e0,%rax$/;"	l
bc	rm.asm	/^  bc:	48 b8 e0 03 00 00 00 	movabs $0x3e0,%rax$/;"	l
bc	zombie.asm	/^  bc:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)$/;"	l
bc0	bad_mmap.asm	/^ bc0:	77 07                	ja     bc9 <morecore+0x1b>$/;"	l
bc0	eager_mmap.asm	/^ bc0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
bc0	kill.asm	/^ bc0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
bc0	lazy_mmap.asm	/^ bc0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
bc1	mkdir.asm	/^ bc1:	2b 45 ec             	sub    -0x14(%rbp),%eax$/;"	l
bc1	rm.asm	/^ bc1:	2b 45 ec             	sub    -0x14(%rbp),%eax$/;"	l
bc1	sh.asm	/^     bc1:	48 89 c7             	mov    %rax,%rdi$/;"	l
bc1	wc.asm	/^ bc1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
bc2	bad_mmap.asm	/^ bc2:	c7 45 ec 00 10 00 00 	movl   $0x1000,-0x14(%rbp)$/;"	l
bc2	echo.asm	/^ bc2:	48 83 c0 10          	add    $0x10,%rax$/;"	l
bc2	init.asm	/^ bc2:	48 83 ec 30          	sub    $0x30,%rsp$/;"	l
bc2	ln.asm	/^ bc2:	89 c0                	mov    %eax,%eax$/;"	l
bc2	ls.asm	/^     bc2:	48 8d 50 08          	lea    0x8(%rax),%rdx$/;"	l
bc2	stressfs.asm	/^ bc2:	eb 36                	jmp    bfa <morecore+0x77>$/;"	l
bc3	cat.asm	/^ bc3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
bc3	grep.asm	/^ bc3:	00 00 00 $/;"	l
bc3	usertests.asm	/^     bc3:	00 00 00 $/;"	l
bc4	eager_mmap.asm	/^ bc4:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
bc4	kill.asm	/^ bc4:	48 89 10             	mov    %rdx,(%rax)$/;"	l
bc4	lazy_mmap.asm	/^ bc4:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
bc4	ln.asm	/^ bc4:	48 c1 e0 04          	shl    $0x4,%rax$/;"	l
bc4	mkdir.asm	/^ bc4:	89 c2                	mov    %eax,%edx$/;"	l
bc4	rm.asm	/^ bc4:	89 c2                	mov    %eax,%edx$/;"	l
bc4	sh.asm	/^     bc4:	48 b8 e6 06 00 00 00 	movabs $0x6e6,%rax$/;"	l
bc4	stressfs.asm	/^ bc4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
bc5	imshow.asm	/^ bc5:	48 63 d0             	movslq %eax,%rdx$/;"	l
bc5	wc.asm	/^ bc5:	48 89 10             	mov    %rdx,(%rax)$/;"	l
bc6	echo.asm	/^ bc6:	eb 4e                	jmp    c16 <malloc+0x148>$/;"	l
bc6	grep.asm	/^ bc6:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)$/;"	l
bc6	init.asm	/^ bc6:	89 7d dc             	mov    %edi,-0x24(%rbp)$/;"	l
bc6	ls.asm	/^     bc6:	48 89 95 28 ff ff ff 	mov    %rdx,-0xd8(%rbp)$/;"	l
bc6	mkdir.asm	/^ bc6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
bc6	rm.asm	/^ bc6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
bc6	usertests.asm	/^     bc6:	ff d0                	callq  *%rax$/;"	l
bc7	cat.asm	/^ bc7:	8b 55 ec             	mov    -0x14(%rbp),%edx$/;"	l
bc7	eager_mmap.asm	/^ bc7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
bc7	kill.asm	/^ bc7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
bc7	lazy_mmap.asm	/^ bc7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
bc8	echo.asm	/^ bc8:	48 b8 90 0e 00 00 00 	movabs $0xe90,%rax$/;"	l
bc8	imshow.asm	/^ bc8:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax$/;"	l
bc8	ln.asm	/^ bc8:	48 01 45 f8          	add    %rax,-0x8(%rbp)$/;"	l
bc8	stressfs.asm	/^ bc8:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
bc8	usertests.asm	/^     bc8:	48 b8 40 88 00 00 00 	movabs $0x8840,%rax$/;"	l
bc8	wc.asm	/^ bc8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
bc9	bad_mmap.asm	/^ bc9:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
bc9	init.asm	/^ bc9:	8b 45 dc             	mov    -0x24(%rbp),%eax$/;"	l
bca	cat.asm	/^ bca:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
bca	mkdir.asm	/^ bca:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
bca	rm.asm	/^ bca:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
bcache	bio.c	/^} bcache;$/;"	v	typeref:struct:__anon4
bcb	eager_mmap.asm	/^ bcb:	48 8b 10             	mov    (%rax),%rdx$/;"	l
bcb	kill.asm	/^ bcb:	48 83 c0 10          	add    $0x10,%rax$/;"	l
bcb	lazy_mmap.asm	/^ bcb:	48 8b 10             	mov    (%rax),%rdx$/;"	l
bcb	sh.asm	/^     bcb:	00 00 00 $/;"	l
bcc	bad_mmap.asm	/^ bcc:	c1 e0 04             	shl    $0x4,%eax$/;"	l
bcc	init.asm	/^ bcc:	48 83 c0 0f          	add    $0xf,%rax$/;"	l
bcc	ln.asm	/^ bcc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
bcc	stressfs.asm	/^ bcc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
bcc	wc.asm	/^ bcc:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
bcd	cat.asm	/^ bcd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
bcd	grep.asm	/^ bcd:	eb 2b                	jmp    bfa <printf+0x298>$/;"	l
bcd	kernel.asm	/^  bcd = (sb & (1 << 2)) == 0;$/;"	d
bcd	ls.asm	/^     bcd:	48 8b 00             	mov    (%rax),%rax$/;"	l
bcd	mkdir.asm	/^ bcd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
bcd	rm.asm	/^ bcd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
bce	eager_mmap.asm	/^ bce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
bce	lazy_mmap.asm	/^ bce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
bce	sh.asm	/^     bce:	ff d0                	callq  *%rax$/;"	l
bcf	bad_mmap.asm	/^ bcf:	89 c7                	mov    %eax,%edi$/;"	l
bcf	echo.asm	/^ bcf:	00 00 00 $/;"	l
bcf	grep.asm	/^ bcf:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax$/;"	l
bcf	imshow.asm	/^ bcf:	48 01 d0             	add    %rdx,%rax$/;"	l
bcf	kill.asm	/^ bcf:	eb 4e                	jmp    c1f <malloc+0x148>$/;"	l
bcf	usertests.asm	/^     bcf:	00 00 00 $/;"	l
bcf	wc.asm	/^ bcf:	89 c0                	mov    %eax,%eax$/;"	l
bcmd	sh.asm	/^    bcmd = (struct backcmd*)cmd;$/;"	d
bd	cat.asm	/^  bd:	48 89 e5             	mov    %rsp,%rbp$/;"	l
bd	echo.asm	/^  bd:	89 55 f0             	mov    %edx,-0x10(%rbp)$/;"	l
bd	kill.asm	/^  bd:	89 ca                	mov    %ecx,%edx$/;"	l
bd	ls.asm	/^      bd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
bd	stressfs.asm	/^  bd:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
bd	usertests.asm	/^      bd:	ff d2                	callq  *%rdx$/;"	l
bd0	init.asm	/^ bd0:	48 c1 e8 04          	shr    $0x4,%rax$/;"	l
bd0	ln.asm	/^ bd0:	8b 55 ec             	mov    -0x14(%rbp),%edx$/;"	l
bd0	ls.asm	/^     bd0:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)$/;"	l
bd0	sh.asm	/^     bd0:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
bd0	stressfs.asm	/^ bd0:	8b 55 ec             	mov    -0x14(%rbp),%edx$/;"	l
bd1	bad_mmap.asm	/^ bd1:	48 b8 a8 05 00 00 00 	movabs $0x5a8,%rax$/;"	l
bd1	cat.asm	/^ bd1:	48 83 c0 10          	add    $0x10,%rax$/;"	l
bd1	kill.asm	/^ bd1:	48 b8 b0 0e 00 00 00 	movabs $0xeb0,%rax$/;"	l
bd1	mkdir.asm	/^ bd1:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
bd1	rm.asm	/^ bd1:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
bd1	wc.asm	/^ bd1:	48 c1 e0 04          	shl    $0x4,%rax$/;"	l
bd2	eager_mmap.asm	/^ bd2:	48 89 10             	mov    %rdx,(%rax)$/;"	l
bd2	echo.asm	/^ bd2:	48 8b 00             	mov    (%rax),%rax$/;"	l
bd2	imshow.asm	/^ bd2:	0f b6 00             	movzbl (%rax),%eax$/;"	l
bd2	lazy_mmap.asm	/^ bd2:	48 89 10             	mov    %rdx,(%rax)$/;"	l
bd2	usertests.asm	/^     bd2:	8b 00                	mov    (%rax),%eax$/;"	l
bd3	ln.asm	/^ bd3:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
bd3	stressfs.asm	/^ bd3:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
bd4	init.asm	/^ bd4:	83 c0 01             	add    $0x1,%eax$/;"	l
bd4	mkdir.asm	/^ bd4:	89 c0                	mov    %eax,%eax$/;"	l
bd4	rm.asm	/^ bd4:	89 c0                	mov    %eax,%eax$/;"	l
bd4	sh.asm	/^     bd4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
bd4	usertests.asm	/^     bd4:	3b 45 f8             	cmp    -0x8(%rbp),%eax$/;"	l
bd5	cat.asm	/^ bd5:	48 89 c7             	mov    %rax,%rdi$/;"	l
bd5	eager_mmap.asm	/^ bd5:	eb 0b                	jmp    be2 <free+0x11e>$/;"	l
bd5	echo.asm	/^ bd5:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)$/;"	l
bd5	imshow.asm	/^ bd5:	84 c0                	test   %al,%al$/;"	l
bd5	lazy_mmap.asm	/^ bd5:	eb 0b                	jmp    be2 <free+0x11e>$/;"	l
bd5	wc.asm	/^ bd5:	48 89 c2             	mov    %rax,%rdx$/;"	l
bd6	grep.asm	/^ bd6:	0f b6 00             	movzbl (%rax),%eax$/;"	l
bd6	ln.asm	/^ bd6:	48 b8 e0 0e 00 00 00 	movabs $0xee0,%rax$/;"	l
bd6	mkdir.asm	/^ bd6:	48 c1 e0 04          	shl    $0x4,%rax$/;"	l
bd6	rm.asm	/^ bd6:	48 c1 e0 04          	shl    $0x4,%rax$/;"	l
bd6	stressfs.asm	/^ bd6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
bd7	eager_mmap.asm	/^ bd7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
bd7	imshow.asm	/^ bd7:	0f 85 fc fc ff ff    	jne    8d9 <printf+0x9e>$/;"	l
bd7	init.asm	/^ bd7:	89 45 ec             	mov    %eax,-0x14(%rbp)$/;"	l
bd7	lazy_mmap.asm	/^ bd7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
bd7	ls.asm	/^     bd7:	48 83 bd 48 ff ff ff 	cmpq   $0x0,-0xb8(%rbp)$/;"	l
bd7	usertests.asm	/^     bd7:	74 45                	je     c1e <writetest1+0x285>$/;"	l
bd8	bad_mmap.asm	/^ bd8:	00 00 00 $/;"	l
bd8	cat.asm	/^ bd8:	48 b8 48 0a 00 00 00 	movabs $0xa48,%rax$/;"	l
bd8	kill.asm	/^ bd8:	00 00 00 $/;"	l
bd8	sh.asm	/^     bd8:	c9                   	leaveq $/;"	l
bd8	wc.asm	/^ bd8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
bd9	echo.asm	/^ bd9:	75 23                	jne    bfe <malloc+0x130>$/;"	l
bd9	grep.asm	/^ bd9:	0f be d0             	movsbl %al,%edx$/;"	l
bd9	sh.asm	/^     bd9:	c3                   	retq   $/;"	l
bd9	usertests.asm	/^     bd9:	48 b8 40 88 00 00 00 	movabs $0x8840,%rax$/;"	l
bda	init.asm	/^ bda:	48 b8 e0 0f 00 00 00 	movabs $0xfe0,%rax$/;"	l
bda	kernel.asm	/^  bda = (uchar *) P2V(0x400);$/;"	d
bda	mkdir.asm	/^ bda:	48 01 45 f8          	add    %rax,-0x8(%rbp)$/;"	l
bda	rm.asm	/^ bda:	48 01 45 f8          	add    %rax,-0x8(%rbp)$/;"	l
bda	sh.asm	/^     bda:	55                   	push   %rbp$/;"	l
bda	stressfs.asm	/^ bda:	48 83 c0 10          	add    $0x10,%rax$/;"	l
bdb	bad_mmap.asm	/^ bdb:	ff d0                	callq  *%rax$/;"	l
bdb	eager_mmap.asm	/^ bdb:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
bdb	echo.asm	/^ bdb:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
bdb	kill.asm	/^ bdb:	48 8b 00             	mov    (%rax),%rax$/;"	l
bdb	lazy_mmap.asm	/^ bdb:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
bdb	sh.asm	/^     bdb:	48 89 e5             	mov    %rsp,%rbp$/;"	l
bdc	grep.asm	/^ bdc:	8b 85 1c ff ff ff    	mov    -0xe4(%rbp),%eax$/;"	l
bdc	wc.asm	/^ bdc:	48 01 d0             	add    %rdx,%rax$/;"	l
bdd	bad_mmap.asm	/^ bdd:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
bdd	imshow.asm	/^ bdd:	90                   	nop$/;"	l
bdd	ln.asm	/^ bdd:	00 00 00 $/;"	l
bde	echo.asm	/^ bde:	89 c7                	mov    %eax,%edi$/;"	l
bde	imshow.asm	/^ bde:	c9                   	leaveq $/;"	l
bde	kill.asm	/^ bde:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)$/;"	l
bde	ls.asm	/^     bde:	00 $/;"	l
bde	mkdir.asm	/^ bde:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
bde	rm.asm	/^ bde:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
bde	sh.asm	/^     bde:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
bde	stressfs.asm	/^ bde:	48 89 c7             	mov    %rax,%rdi$/;"	l
bdf	cat.asm	/^ bdf:	00 00 00 $/;"	l
bdf	eager_mmap.asm	/^ bdf:	48 89 10             	mov    %rdx,(%rax)$/;"	l
bdf	imshow.asm	/^ bdf:	c3                   	retq   $/;"	l
bdf	lazy_mmap.asm	/^ bdf:	48 89 10             	mov    %rdx,(%rax)$/;"	l
bdf	ls.asm	/^     bdf:	75 3e                	jne    c1f <printf+0x298>$/;"	l
bdf	wc.asm	/^ bdf:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax$/;"	l
be	bad_mmap.asm	/^  be:	48 b9 d7 06 00 00 00 	movabs $0x6d7,%rcx$/;"	l
be	grep.asm	/^  be:	00 00 00 $/;"	l
be	imshow.asm	/^  be:	00 00 00 $/;"	l
be	ln.asm	/^  be:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)$/;"	l
be	sh.asm	/^      be:	48 b9 d7 16 00 00 00 	movabs $0x16d7,%rcx$/;"	l
be	wc.asm	/^  be:	00 00 00 $/;"	l
be0	echo.asm	/^ be0:	48 b8 55 0a 00 00 00 	movabs $0xa55,%rax$/;"	l
be0	imshow.asm	/^ be0:	55                   	push   %rbp$/;"	l
be0	ln.asm	/^ be0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
be0	usertests.asm	/^     be0:	00 00 00 $/;"	l
be1	bad_mmap.asm	/^ be1:	48 83 7d f8 ff       	cmpq   $0xffffffffffffffff,-0x8(%rbp)$/;"	l
be1	imshow.asm	/^ be1:	48 89 e5             	mov    %rsp,%rbp$/;"	l
be1	init.asm	/^ be1:	00 00 00 $/;"	l
be1	ls.asm	/^     be1:	48 b8 6b 10 00 00 00 	movabs $0x106b,%rax$/;"	l
be1	stressfs.asm	/^ be1:	48 b8 51 0a 00 00 00 	movabs $0xa51,%rax$/;"	l
be2	cat.asm	/^ be2:	ff d0                	callq  *%rax$/;"	l
be2	eager_mmap.asm	/^ be2:	48 b8 70 11 00 00 00 	movabs $0x1170,%rax$/;"	l
be2	grep.asm	/^ be2:	89 d6                	mov    %edx,%esi$/;"	l
be2	kill.asm	/^ be2:	75 23                	jne    c07 <malloc+0x130>$/;"	l
be2	lazy_mmap.asm	/^ be2:	48 b8 70 11 00 00 00 	movabs $0x1170,%rax$/;"	l
be2	mkdir.asm	/^ be2:	8b 55 ec             	mov    -0x14(%rbp),%edx$/;"	l
be2	rm.asm	/^ be2:	8b 55 ec             	mov    -0x14(%rbp),%edx$/;"	l
be2	sh.asm	/^     be2:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
be3	usertests.asm	/^     be3:	8b 08                	mov    (%rax),%ecx$/;"	l
be3	wc.asm	/^ be3:	75 27                	jne    c0c <free+0x113>$/;"	l
be4	cat.asm	/^ be4:	48 b8 10 12 00 00 00 	movabs $0x1210,%rax$/;"	l
be4	grep.asm	/^ be4:	89 c7                	mov    %eax,%edi$/;"	l
be4	imshow.asm	/^ be4:	48 83 ec 18          	sub    $0x18,%rsp$/;"	l
be4	init.asm	/^ be4:	48 8b 00             	mov    (%rax),%rax$/;"	l
be4	kill.asm	/^ be4:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
be4	ln.asm	/^ be4:	48 89 10             	mov    %rdx,(%rax)$/;"	l
be5	mkdir.asm	/^ be5:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
be5	rm.asm	/^ be5:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
be5	usertests.asm	/^     be5:	48 b8 08 88 00 00 00 	movabs $0x8808,%rax$/;"	l
be5	wc.asm	/^ be5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
be6	bad_mmap.asm	/^ be6:	75 07                	jne    bef <morecore+0x41>$/;"	l
be6	grep.asm	/^ be6:	48 b8 65 08 00 00 00 	movabs $0x865,%rax$/;"	l
be6	sh.asm	/^     be6:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)$/;"	l
be7	echo.asm	/^ be7:	00 00 00 $/;"	l
be7	init.asm	/^ be7:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
be7	kill.asm	/^ be7:	89 c7                	mov    %eax,%edi$/;"	l
be7	ln.asm	/^ be7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
be8	bad_mmap.asm	/^ be8:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
be8	imshow.asm	/^ be8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
be8	ls.asm	/^     be8:	00 00 00 $/;"	l
be8	mkdir.asm	/^ be8:	48 b8 00 0f 00 00 00 	movabs $0xf00,%rax$/;"	l
be8	rm.asm	/^ be8:	48 b8 f0 0e 00 00 00 	movabs $0xef0,%rax$/;"	l
be8	stressfs.asm	/^ be8:	00 00 00 $/;"	l
be9	eager_mmap.asm	/^ be9:	00 00 00 $/;"	l
be9	kill.asm	/^ be9:	48 b8 5e 0a 00 00 00 	movabs $0xa5e,%rax$/;"	l
be9	lazy_mmap.asm	/^ be9:	00 00 00 $/;"	l
be9	wc.asm	/^ be9:	8b 50 08             	mov    0x8(%rax),%edx$/;"	l
bea	echo.asm	/^ bea:	ff d0                	callq  *%rax$/;"	l
bea	sh.asm	/^     bea:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx$/;"	l
beb	cat.asm	/^ beb:	00 00 00 $/;"	l
beb	init.asm	/^ beb:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)$/;"	l
beb	ln.asm	/^ beb:	48 83 c0 10          	add    $0x10,%rax$/;"	l
beb	ls.asm	/^     beb:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)$/;"	l
beb	stressfs.asm	/^ beb:	ff d0                	callq  *%rax$/;"	l
bec	eager_mmap.asm	/^ bec:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx$/;"	l
bec	echo.asm	/^ bec:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
bec	imshow.asm	/^ bec:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
bec	lazy_mmap.asm	/^ bec:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx$/;"	l
bec	usertests.asm	/^     bec:	00 00 00 $/;"	l
bec	wc.asm	/^ bec:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
bed	bad_mmap.asm	/^ bed:	eb 36                	jmp    c25 <morecore+0x77>$/;"	l
bed	grep.asm	/^ bed:	00 00 00 $/;"	l
bed	stressfs.asm	/^ bed:	48 b8 e0 0f 00 00 00 	movabs $0xfe0,%rax$/;"	l
bee	cat.asm	/^ bee:	48 8b 00             	mov    (%rax),%rax$/;"	l
bee	sh.asm	/^     bee:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
bef	bad_mmap.asm	/^ bef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
bef	ln.asm	/^ bef:	eb 4e                	jmp    c3f <malloc+0x148>$/;"	l
bef	mkdir.asm	/^ bef:	00 00 00 $/;"	l
bef	rm.asm	/^ bef:	00 00 00 $/;"	l
bef	usertests.asm	/^     bef:	8b 00                	mov    (%rax),%eax$/;"	l
begin_op	log.c	/^begin_op(void)$/;"	f
bf	eager_mmap.asm	/^  bf:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
bf	kill.asm	/^  bf:	48 89 fe             	mov    %rdi,%rsi$/;"	l
bf	lazy_mmap.asm	/^  bf:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
bf	usertests.asm	/^      bf:	48 b8 02 60 00 00 00 	movabs $0x6002,%rax$/;"	l
bf0	eager_mmap.asm	/^ bf0:	48 89 10             	mov    %rdx,(%rax)$/;"	l
bf0	echo.asm	/^ bf0:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)$/;"	l
bf0	grep.asm	/^ bf0:	ff d0                	callq  *%rax$/;"	l
bf0	imshow.asm	/^ bf0:	48 83 e8 10          	sub    $0x10,%rax$/;"	l
bf0	init.asm	/^ bf0:	75 4a                	jne    c3c <malloc+0x7e>$/;"	l
bf0	kill.asm	/^ bf0:	00 00 00 $/;"	l
bf0	lazy_mmap.asm	/^ bf0:	48 89 10             	mov    %rdx,(%rax)$/;"	l
bf0	wc.asm	/^ bf0:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
bf1	cat.asm	/^ bf1:	c9                   	leaveq $/;"	l
bf1	ln.asm	/^ bf1:	48 b8 e0 0e 00 00 00 	movabs $0xee0,%rax$/;"	l
bf1	usertests.asm	/^     bf1:	8b 55 f8             	mov    -0x8(%rbp),%edx$/;"	l
bf2	cat.asm	/^ bf2:	c3                   	retq   $/;"	l
bf2	grep.asm	/^ bf2:	48 83 85 48 ff ff ff 	addq   $0x1,-0xb8(%rbp)$/;"	l
bf2	init.asm	/^ bf2:	48 b8 d0 0f 00 00 00 	movabs $0xfd0,%rax$/;"	l
bf2	ls.asm	/^     bf2:	eb 2b                	jmp    c1f <printf+0x298>$/;"	l
bf2	mkdir.asm	/^ bf2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
bf2	rm.asm	/^ bf2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
bf2	sh.asm	/^     bf2:	48 89 d6             	mov    %rdx,%rsi$/;"	l
bf3	bad_mmap.asm	/^ bf3:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
bf3	cat.asm	/^ bf3:	55                   	push   %rbp$/;"	l
bf3	eager_mmap.asm	/^ bf3:	90                   	nop$/;"	l
bf3	kill.asm	/^ bf3:	ff d0                	callq  *%rax$/;"	l
bf3	lazy_mmap.asm	/^ bf3:	90                   	nop$/;"	l
bf3	wc.asm	/^ bf3:	01 c2                	add    %eax,%edx$/;"	l
bf4	cat.asm	/^ bf4:	48 89 e5             	mov    %rsp,%rbp$/;"	l
bf4	eager_mmap.asm	/^ bf4:	c9                   	leaveq $/;"	l
bf4	imshow.asm	/^ bf4:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
bf4	lazy_mmap.asm	/^ bf4:	c9                   	leaveq $/;"	l
bf4	ls.asm	/^     bf4:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax$/;"	l
bf4	stressfs.asm	/^ bf4:	00 00 00 $/;"	l
bf4	usertests.asm	/^     bf4:	48 be e0 6b 00 00 00 	movabs $0x6be0,%rsi$/;"	l
bf5	eager_mmap.asm	/^ bf5:	c3                   	retq   $/;"	l
bf5	echo.asm	/^ bf5:	75 07                	jne    bfe <malloc+0x130>$/;"	l
bf5	kill.asm	/^ bf5:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
bf5	lazy_mmap.asm	/^ bf5:	c3                   	retq   $/;"	l
bf5	sh.asm	/^     bf5:	48 89 c7             	mov    %rax,%rdi$/;"	l
bf5	wc.asm	/^ bf5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
bf6	eager_mmap.asm	/^ bf6:	55                   	push   %rbp$/;"	l
bf6	lazy_mmap.asm	/^ bf6:	55                   	push   %rbp$/;"	l
bf6	mkdir.asm	/^ bf6:	48 89 10             	mov    %rdx,(%rax)$/;"	l
bf6	rm.asm	/^ bf6:	48 89 10             	mov    %rdx,(%rax)$/;"	l
bf7	bad_mmap.asm	/^ bf7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
bf7	cat.asm	/^ bf7:	48 83 ec 30          	sub    $0x30,%rsp$/;"	l
bf7	eager_mmap.asm	/^ bf7:	48 89 e5             	mov    %rsp,%rbp$/;"	l
bf7	echo.asm	/^ bf7:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
bf7	lazy_mmap.asm	/^ bf7:	48 89 e5             	mov    %rsp,%rbp$/;"	l
bf7	stressfs.asm	/^ bf7:	48 8b 00             	mov    (%rax),%rax$/;"	l
bf8	imshow.asm	/^ bf8:	48 b8 30 12 00 00 00 	movabs $0x1230,%rax$/;"	l
bf8	ln.asm	/^ bf8:	00 00 00 $/;"	l
bf8	sh.asm	/^     bf8:	48 b8 e5 0e 00 00 00 	movabs $0xee5,%rax$/;"	l
bf9	grep.asm	/^ bf9:	01 $/;"	l
bf9	init.asm	/^ bf9:	00 00 00 $/;"	l
bf9	kill.asm	/^ bf9:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)$/;"	l
bf9	mkdir.asm	/^ bf9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
bf9	rm.asm	/^ bf9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
bf9	wc.asm	/^ bf9:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
bfa	eager_mmap.asm	/^ bfa:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
bfa	grep.asm	/^ bfa:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax$/;"	l
bfa	lazy_mmap.asm	/^ bfa:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
bfa	stressfs.asm	/^ bfa:	c9                   	leaveq $/;"	l
bfb	bad_mmap.asm	/^ bfb:	8b 55 ec             	mov    -0x14(%rbp),%edx$/;"	l
bfb	cat.asm	/^ bfb:	89 7d dc             	mov    %edi,-0x24(%rbp)$/;"	l
bfb	ln.asm	/^ bfb:	48 8b 00             	mov    (%rax),%rax$/;"	l
bfb	ls.asm	/^     bfb:	0f b6 00             	movzbl (%rax),%eax$/;"	l
bfb	stressfs.asm	/^ bfb:	c3                   	retq   $/;"	l
bfb	usertests.asm	/^     bfb:	00 00 00 $/;"	l
bfc	echo.asm	/^ bfc:	eb 18                	jmp    c16 <malloc+0x148>$/;"	l
bfc	init.asm	/^ bfc:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
bfc	stressfs.asm	/^ bfc:	55                   	push   %rbp$/;"	l
bfc	wc.asm	/^ bfc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
bfd	mkdir.asm	/^ bfd:	48 83 c0 10          	add    $0x10,%rax$/;"	l
bfd	rm.asm	/^ bfd:	48 83 c0 10          	add    $0x10,%rax$/;"	l
bfd	stressfs.asm	/^ bfd:	48 89 e5             	mov    %rsp,%rbp$/;"	l
bfe	bad_mmap.asm	/^ bfe:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
bfe	cat.asm	/^ bfe:	8b 45 dc             	mov    -0x24(%rbp),%eax$/;"	l
bfe	eager_mmap.asm	/^ bfe:	89 7d ec             	mov    %edi,-0x14(%rbp)$/;"	l
bfe	echo.asm	/^ bfe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
bfe	kill.asm	/^ bfe:	75 07                	jne    c07 <malloc+0x130>$/;"	l
bfe	lazy_mmap.asm	/^ bfe:	89 7d ec             	mov    %edi,-0x14(%rbp)$/;"	l
bfe	ln.asm	/^ bfe:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)$/;"	l
bfe	ls.asm	/^     bfe:	0f be d0             	movsbl %al,%edx$/;"	l
bfe	usertests.asm	/^     bfe:	89 c7                	mov    %eax,%edi$/;"	l
bff	imshow.asm	/^ bff:	00 00 00 $/;"	l
bff	sh.asm	/^     bff:	00 00 00 $/;"	l
bfree	fs.c	/^bfree(int dev, uint b)$/;"	f	file:
bget	bio.c	/^bget(uint dev, uint blockno)$/;"	f	file:
bi	kernel.asm	/^  bi = b % BPB;$/;"	d
bigargtest	usertests.c	/^bigargtest(void)$/;"	f
bigdir	usertests.c	/^bigdir(void)$/;"	f
bigfile	usertests.c	/^bigfile(void)$/;"	f
bigwrite	usertests.c	/^bigwrite(void)$/;"	f
binit	bio.c	/^binit(void)$/;"	f
block	log.c	/^  int block[LOGSIZE];$/;"	m	struct:logheader	file:
blockno	buf.h	/^  uint blockno;$/;"	m	struct:buf
bmap	fs.c	/^bmap(struct inode *ip, uint bn)$/;"	f	file:
bmapstart	fs.h	/^  uint bmapstart;    \/\/ Block number of first free map block$/;"	m	struct:superblock
bootmain	bootmain.c	/^bootmain(void)$/;"	f
bp	bad_mmap.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	cat.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	eager_mmap.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	echo.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	grep.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	imshow.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	init.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	kernel.asm	/^    bp = bread(dev, BBLOCK(b, sb));$/;"	d
bp	kernel.asm	/^    bp = bread(dev, IBLOCK(inum, sb));$/;"	d
bp	kernel.asm	/^    bp = bread(ip->dev, IBLOCK(ip->inum, sb));$/;"	d
bp	kernel.asm	/^    bp = bread(ip->dev, addr);$/;"	d
bp	kernel.asm	/^    bp = bread(ip->dev, bmap(ip, off\/BSIZE));$/;"	d
bp	kernel.asm	/^    bp = bread(ip->dev, ip->addrs[NDIRECT]);$/;"	d
bp	kernel.asm	/^  bp = 0;$/;"	d
bp	kernel.asm	/^  bp = bread(dev, 1);$/;"	d
bp	kernel.asm	/^  bp = bread(dev, BBLOCK(b, sb));$/;"	d
bp	kernel.asm	/^  bp = bread(dev, bno);$/;"	d
bp	kernel.asm	/^  bp = bread(ip->dev, IBLOCK(ip->inum, sb));$/;"	d
bp	kill.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	lazy_mmap.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	ln.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	ls.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	mkdir.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	rm.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	sh.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	stressfs.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	usertests.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	wc.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	zombie.asm	/^  bp = (Header*)ap - 1;$/;"	d
bread	bio.c	/^bread(uint dev, uint blockno)$/;"	f
brelse	bio.c	/^brelse(struct buf *b)$/;"	f
bss_end_addr	bootmain.c	/^  uint64 bss_end_addr;$/;"	m	struct:mbheader	file:
bsstest	usertests.c	/^bsstest(void)$/;"	f
buf	bio.c	/^  struct buf buf[NBUF];$/;"	m	struct:__anon4	typeref:struct:__anon4::buf	file:
buf	buf.h	/^struct buf {$/;"	s
buf	cat.c	/^char buf[512];$/;"	v
buf	console.c	/^  char buf[INPUT_BUF];$/;"	m	struct:__anon8	file:
buf	grep.c	/^char buf[1024];$/;"	v
buf	kernel.asm	/^  buf = (char*)p;$/;"	d
buf	usertests.c	/^char buf[8192];$/;"	v
buf	wc.c	/^char buf[512];$/;"	v
bwrite	bio.c	/^bwrite(struct buf *b)$/;"	f
bzero	fs.c	/^bzero(int dev, int bno)$/;"	f	file:
c	bad_mmap.asm	/^    c = fmt[i] & 0xff;$/;"	d
c	cat.asm	/^    c = fmt[i] & 0xff;$/;"	d
c	eager_mmap.asm	/^    c = fmt[i] & 0xff;$/;"	d
c	echo.asm	/^    c = fmt[i] & 0xff;$/;"	d
c	grep.asm	/^    c = fmt[i] & 0xff;$/;"	d
c	grep.asm	/^   c:	89 75 d4             	mov    %esi,-0x2c(%rbp)$/;"	l
c	imshow.asm	/^    c = fmt[i] & 0xff;$/;"	d
c	init.asm	/^    c = fmt[i] & 0xff;$/;"	d
c	kernel.asm	/^        c = (c == '\\r') ? '\\n' : c;$/;"	d
c	kernel.asm	/^    c = fmt[++i] & 0xff;$/;"	d
c	kernel.asm	/^    c = input.buf[input.r++ % INPUT_BUF];$/;"	d
c	kernel.asm	/^  c = &cpus[cpunum()];$/;"	d
c	kernel.asm	/^  c = charcode[shift & (CTL | SHIFT)][data];$/;"	d
c	kill.asm	/^    c = fmt[i] & 0xff;$/;"	d
c	lazy_mmap.asm	/^    c = fmt[i] & 0xff;$/;"	d
c	ln.asm	/^    c = fmt[i] & 0xff;$/;"	d
c	ls.asm	/^    c = fmt[i] & 0xff;$/;"	d
c	mkdir.asm	/^    c = fmt[i] & 0xff;$/;"	d
c	rm.asm	/^    c = fmt[i] & 0xff;$/;"	d
c	sh.asm	/^       c:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)$/;"	l
c	sh.asm	/^    c = fmt[i] & 0xff;$/;"	d
c	stressfs.asm	/^    c = fmt[i] & 0xff;$/;"	d
c	usertests.asm	/^    c = fmt[i] & 0xff;$/;"	d
c	usertests.asm	/^  c = sbrk(-(sbrk(0) - oldbrk));$/;"	d
c	usertests.asm	/^  c = sbrk(-4096);$/;"	d
c	usertests.asm	/^  c = sbrk(0);$/;"	d
c	usertests.asm	/^  c = sbrk(1);$/;"	d
c	usertests.asm	/^  c = sbrk(4096);$/;"	d
c	wc.asm	/^    c = fmt[i] & 0xff;$/;"	d
c	zombie.asm	/^    c = fmt[i] & 0xff;$/;"	d
c0	cat.asm	/^  c0:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
c0	echo.asm	/^  c0:	90                   	nop$/;"	l
c0	forktest.asm	/^  c0:	eb 2b                	jmp    ed <forktest+0x5c>$/;"	l
c0	init.asm	/^  c0:	00 00 00 $/;"	l
c0	stressfs.asm	/^  c0:	01 d0                	add    %edx,%eax$/;"	l
c00	init.asm	/^ c00:	48 b8 e0 0f 00 00 00 	movabs $0xfe0,%rax$/;"	l
c00	kill.asm	/^ c00:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c00	stressfs.asm	/^ c00:	48 83 ec 30          	sub    $0x30,%rsp$/;"	l
c00	usertests.asm	/^     c00:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c00	wc.asm	/^ c00:	48 8b 10             	mov    (%rax),%rdx$/;"	l
c01	bad_mmap.asm	/^ c01:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
c01	cat.asm	/^ c01:	48 83 c0 0f          	add    $0xf,%rax$/;"	l
c01	eager_mmap.asm	/^ c01:	81 7d ec ff 0f 00 00 	cmpl   $0xfff,-0x14(%rbp)$/;"	l
c01	grep.asm	/^ c01:	0f b6 00             	movzbl (%rax),%eax$/;"	l
c01	lazy_mmap.asm	/^ c01:	81 7d ec ff 0f 00 00 	cmpl   $0xfff,-0x14(%rbp)$/;"	l
c01	ls.asm	/^     c01:	8b 85 1c ff ff ff    	mov    -0xe4(%rbp),%eax$/;"	l
c01	mkdir.asm	/^ c01:	eb 4e                	jmp    c51 <malloc+0x148>$/;"	l
c01	rm.asm	/^ c01:	eb 4e                	jmp    c51 <malloc+0x148>$/;"	l
c02	echo.asm	/^ c02:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
c02	imshow.asm	/^ c02:	48 8b 00             	mov    (%rax),%rax$/;"	l
c02	ln.asm	/^ c02:	75 23                	jne    c27 <malloc+0x130>$/;"	l
c02	sh.asm	/^     c02:	ff d0                	callq  *%rax$/;"	l
c03	mkdir.asm	/^ c03:	48 b8 00 0f 00 00 00 	movabs $0xf00,%rax$/;"	l
c03	rm.asm	/^ c03:	48 b8 f0 0e 00 00 00 	movabs $0xef0,%rax$/;"	l
c03	wc.asm	/^ c03:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
c04	grep.asm	/^ c04:	84 c0                	test   %al,%al$/;"	l
c04	ln.asm	/^ c04:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
c04	sh.asm	/^     c04:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
c04	stressfs.asm	/^ c04:	89 7d dc             	mov    %edi,-0x24(%rbp)$/;"	l
c05	bad_mmap.asm	/^ c05:	48 83 c0 10          	add    $0x10,%rax$/;"	l
c05	cat.asm	/^ c05:	48 c1 e8 04          	shr    $0x4,%rax$/;"	l
c05	imshow.asm	/^ c05:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
c05	kill.asm	/^ c05:	eb 18                	jmp    c1f <malloc+0x148>$/;"	l
c05	usertests.asm	/^     c05:	49 b8 db 61 00 00 00 	movabs $0x61db,%r8$/;"	l
c06	echo.asm	/^ c06:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
c06	grep.asm	/^ c06:	75 c7                	jne    bcf <printf+0x26d>$/;"	l
c07	init.asm	/^ c07:	00 00 00 $/;"	l
c07	kill.asm	/^ c07:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
c07	ln.asm	/^ c07:	89 c7                	mov    %eax,%edi$/;"	l
c07	ls.asm	/^     c07:	89 d6                	mov    %edx,%esi$/;"	l
c07	stressfs.asm	/^ c07:	8b 45 dc             	mov    -0x24(%rbp),%eax$/;"	l
c07	wc.asm	/^ c07:	48 89 10             	mov    %rdx,(%rax)$/;"	l
c08	eager_mmap.asm	/^ c08:	77 07                	ja     c11 <morecore+0x1b>$/;"	l
c08	grep.asm	/^ c08:	e9 c8 00 00 00       	jmpq   cd5 <printf+0x373>$/;"	l
c08	lazy_mmap.asm	/^ c08:	77 07                	ja     c11 <morecore+0x1b>$/;"	l
c08	sh.asm	/^     c08:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx$/;"	l
c09	bad_mmap.asm	/^ c09:	48 89 c7             	mov    %rax,%rdi$/;"	l
c09	cat.asm	/^ c09:	83 c0 01             	add    $0x1,%eax$/;"	l
c09	imshow.asm	/^ c09:	eb 2f                	jmp    c3a <free+0x5a>$/;"	l
c09	ln.asm	/^ c09:	48 b8 7e 0a 00 00 00 	movabs $0xa7e,%rax$/;"	l
c09	ls.asm	/^     c09:	89 c7                	mov    %eax,%edi$/;"	l
c0a	eager_mmap.asm	/^ c0a:	c7 45 ec 00 10 00 00 	movl   $0x1000,-0x14(%rbp)$/;"	l
c0a	echo.asm	/^ c0a:	48 8b 00             	mov    (%rax),%rax$/;"	l
c0a	init.asm	/^ c0a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
c0a	lazy_mmap.asm	/^ c0a:	c7 45 ec 00 10 00 00 	movl   $0x1000,-0x14(%rbp)$/;"	l
c0a	mkdir.asm	/^ c0a:	00 00 00 $/;"	l
c0a	rm.asm	/^ c0a:	00 00 00 $/;"	l
c0a	stressfs.asm	/^ c0a:	48 83 c0 0f          	add    $0xf,%rax$/;"	l
c0a	wc.asm	/^ c0a:	eb 0b                	jmp    c17 <free+0x11e>$/;"	l
c0b	imshow.asm	/^ c0b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
c0b	kill.asm	/^ c0b:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
c0b	ls.asm	/^     c0b:	48 b8 8a 08 00 00 00 	movabs $0x88a,%rax$/;"	l
c0c	bad_mmap.asm	/^ c0c:	48 b8 7c 0a 00 00 00 	movabs $0xa7c,%rax$/;"	l
c0c	cat.asm	/^ c0c:	89 45 ec             	mov    %eax,-0x14(%rbp)$/;"	l
c0c	sh.asm	/^     c0c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
c0c	usertests.asm	/^     c0c:	00 00 00 $/;"	l
c0c	wc.asm	/^ c0c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
c0d	echo.asm	/^ c0d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
c0d	grep.asm	/^ c0d:	83 bd 3c ff ff ff 63 	cmpl   $0x63,-0xc4(%rbp)$/;"	l
c0d	mkdir.asm	/^ c0d:	48 8b 00             	mov    (%rax),%rax$/;"	l
c0d	rm.asm	/^ c0d:	48 8b 00             	mov    (%rax),%rax$/;"	l
c0e	init.asm	/^ c0e:	48 89 10             	mov    %rdx,(%rax)$/;"	l
c0e	stressfs.asm	/^ c0e:	48 c1 e8 04          	shr    $0x4,%rax$/;"	l
c0f	cat.asm	/^ c0f:	48 b8 10 12 00 00 00 	movabs $0x1210,%rax$/;"	l
c0f	imshow.asm	/^ c0f:	48 8b 00             	mov    (%rax),%rax$/;"	l
c0f	kill.asm	/^ c0f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
c0f	usertests.asm	/^     c0f:	41 ff d0             	callq  *%r8$/;"	l
c1	echo.asm	/^  c1:	c9                   	leaveq $/;"	l
c1	grep.asm	/^  c1:	ff d0                	callq  *%rax$/;"	l
c1	imshow.asm	/^  c1:	ff d0                	callq  *%rax$/;"	l
c1	ls.asm	/^      c1:	48 89 c7             	mov    %rax,%rdi$/;"	l
c1	wc.asm	/^  c1:	89 c7                	mov    %eax,%edi$/;"	l
c1	zombie.asm	/^  c1:	48 83 45 f0 01       	addq   $0x1,-0x10(%rbp)$/;"	l
c10	ln.asm	/^ c10:	00 00 00 $/;"	l
c10	mkdir.asm	/^ c10:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)$/;"	l
c10	rm.asm	/^ c10:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)$/;"	l
c10	sh.asm	/^     c10:	48 ba 15 1e 00 00 00 	movabs $0x1e15,%rdx$/;"	l
c10	wc.asm	/^ c10:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
c11	eager_mmap.asm	/^ c11:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
c11	echo.asm	/^ c11:	e9 41 ff ff ff       	jmpq   b57 <malloc+0x89>$/;"	l
c11	init.asm	/^ c11:	48 b8 e0 0f 00 00 00 	movabs $0xfe0,%rax$/;"	l
c11	lazy_mmap.asm	/^ c11:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
c12	imshow.asm	/^ c12:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax$/;"	l
c12	ls.asm	/^     c12:	00 00 00 $/;"	l
c12	stressfs.asm	/^ c12:	83 c0 01             	add    $0x1,%eax$/;"	l
c12	usertests.asm	/^     c12:	48 b8 02 60 00 00 00 	movabs $0x6002,%rax$/;"	l
c13	bad_mmap.asm	/^ c13:	00 00 00 $/;"	l
c13	kill.asm	/^ c13:	48 8b 00             	mov    (%rax),%rax$/;"	l
c13	ln.asm	/^ c13:	ff d0                	callq  *%rax$/;"	l
c14	eager_mmap.asm	/^ c14:	c1 e0 04             	shl    $0x4,%eax$/;"	l
c14	grep.asm	/^ c14:	75 5d                	jne    c73 <printf+0x311>$/;"	l
c14	lazy_mmap.asm	/^ c14:	c1 e0 04             	shl    $0x4,%eax$/;"	l
c14	mkdir.asm	/^ c14:	75 23                	jne    c39 <malloc+0x130>$/;"	l
c14	rm.asm	/^ c14:	75 23                	jne    c39 <malloc+0x130>$/;"	l
c14	wc.asm	/^ c14:	48 89 10             	mov    %rdx,(%rax)$/;"	l
c15	ln.asm	/^ c15:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
c15	ls.asm	/^     c15:	ff d0                	callq  *%rax$/;"	l
c15	stressfs.asm	/^ c15:	89 45 ec             	mov    %eax,-0x14(%rbp)$/;"	l
c16	bad_mmap.asm	/^ c16:	ff d0                	callq  *%rax$/;"	l
c16	cat.asm	/^ c16:	00 00 00 $/;"	l
c16	echo.asm	/^ c16:	c9                   	leaveq $/;"	l
c16	grep.asm	/^ c16:	8b 85 20 ff ff ff    	mov    -0xe0(%rbp),%eax$/;"	l
c16	imshow.asm	/^ c16:	77 17                	ja     c2f <free+0x4f>$/;"	l
c16	kill.asm	/^ c16:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
c16	mkdir.asm	/^ c16:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
c16	rm.asm	/^ c16:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
c17	eager_mmap.asm	/^ c17:	89 c7                	mov    %eax,%edi$/;"	l
c17	echo.asm	/^ c17:	c3                   	retq   $/;"	l
c17	lazy_mmap.asm	/^ c17:	89 c7                	mov    %eax,%edi$/;"	l
c17	ls.asm	/^     c17:	48 83 85 48 ff ff ff 	addq   $0x1,-0xb8(%rbp)$/;"	l
c17	sh.asm	/^     c17:	00 00 00 $/;"	l
c17	wc.asm	/^ c17:	48 b8 d0 12 00 00 00 	movabs $0x12d0,%rax$/;"	l
c18	bad_mmap.asm	/^ c18:	48 b8 40 11 00 00 00 	movabs $0x1140,%rax$/;"	l
c18	imshow.asm	/^ c18:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
c18	init.asm	/^ c18:	00 00 00 $/;"	l
c18	stressfs.asm	/^ c18:	48 b8 e0 0f 00 00 00 	movabs $0xfe0,%rax$/;"	l
c19	cat.asm	/^ c19:	48 8b 00             	mov    (%rax),%rax$/;"	l
c19	eager_mmap.asm	/^ c19:	48 b8 f0 05 00 00 00 	movabs $0x5f0,%rax$/;"	l
c19	lazy_mmap.asm	/^ c19:	48 b8 f0 05 00 00 00 	movabs $0x5f0,%rax$/;"	l
c19	ln.asm	/^ c19:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)$/;"	l
c19	mkdir.asm	/^ c19:	89 c7                	mov    %eax,%edi$/;"	l
c19	rm.asm	/^ c19:	89 c7                	mov    %eax,%edi$/;"	l
c19	usertests.asm	/^     c19:	00 00 00 $/;"	l
c1a	kill.asm	/^ c1a:	e9 41 ff ff ff       	jmpq   b60 <malloc+0x89>$/;"	l
c1a	sh.asm	/^     c1a:	48 89 ce             	mov    %rcx,%rsi$/;"	l
c1b	init.asm	/^ c1b:	48 8b 10             	mov    (%rax),%rdx$/;"	l
c1b	mkdir.asm	/^ c1b:	48 b8 90 0a 00 00 00 	movabs $0xa90,%rax$/;"	l
c1b	rm.asm	/^ c1b:	48 b8 90 0a 00 00 00 	movabs $0xa90,%rax$/;"	l
c1c	cat.asm	/^ c1c:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
c1c	grep.asm	/^ c1c:	83 f8 30             	cmp    $0x30,%eax$/;"	l
c1c	imshow.asm	/^ c1c:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax$/;"	l
c1c	usertests.asm	/^     c1c:	ff d0                	callq  *%rax$/;"	l
c1d	sh.asm	/^     c1d:	48 89 c7             	mov    %rax,%rdi$/;"	l
c1e	init.asm	/^ c1e:	48 b8 d0 0f 00 00 00 	movabs $0xfd0,%rax$/;"	l
c1e	ln.asm	/^ c1e:	75 07                	jne    c27 <malloc+0x130>$/;"	l
c1e	ls.asm	/^     c1e:	01 $/;"	l
c1e	usertests.asm	/^     c1e:	83 45 f8 01          	addl   $0x1,-0x8(%rbp)$/;"	l
c1e	wc.asm	/^ c1e:	00 00 00 $/;"	l
c1f	bad_mmap.asm	/^ c1f:	00 00 00 $/;"	l
c1f	grep.asm	/^ c1f:	73 23                	jae    c44 <printf+0x2e2>$/;"	l
c1f	kill.asm	/^ c1f:	c9                   	leaveq $/;"	l
c1f	ls.asm	/^     c1f:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax$/;"	l
c1f	stressfs.asm	/^ c1f:	00 00 00 $/;"	l
c2	echo.asm	/^  c2:	c3                   	retq   $/;"	l
c2	forktest.asm	/^  c2:	48 b8 03 05 00 00 00 	movabs $0x503,%rax$/;"	l
c2	kill.asm	/^  c2:	48 89 75 f8          	mov    %rsi,-0x8(%rbp)$/;"	l
c2	ln.asm	/^  c2:	89 75 f4             	mov    %esi,-0xc(%rbp)$/;"	l
c2	stressfs.asm	/^  c2:	88 45 e8             	mov    %al,-0x18(%rbp)$/;"	l
c20	cat.asm	/^ c20:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)$/;"	l
c20	eager_mmap.asm	/^ c20:	00 00 00 $/;"	l
c20	imshow.asm	/^ c20:	77 2f                	ja     c51 <free+0x71>$/;"	l
c20	kill.asm	/^ c20:	c3                   	retq   $/;"	l
c20	lazy_mmap.asm	/^ c20:	00 00 00 $/;"	l
c20	ln.asm	/^ c20:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c20	sh.asm	/^     c20:	48 b8 51 09 00 00 00 	movabs $0x951,%rax$/;"	l
c21	grep.asm	/^ c21:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax$/;"	l
c21	wc.asm	/^ c21:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx$/;"	l
c22	bad_mmap.asm	/^ c22:	48 8b 00             	mov    (%rax),%rax$/;"	l
c22	imshow.asm	/^ c22:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
c22	mkdir.asm	/^ c22:	00 00 00 $/;"	l
c22	rm.asm	/^ c22:	00 00 00 $/;"	l
c22	stressfs.asm	/^ c22:	48 8b 00             	mov    (%rax),%rax$/;"	l
c22	usertests.asm	/^     c22:	e9 f2 fe ff ff       	jmpq   b19 <writetest1+0x180>$/;"	l
c23	eager_mmap.asm	/^ c23:	ff d0                	callq  *%rax$/;"	l
c23	lazy_mmap.asm	/^ c23:	ff d0                	callq  *%rax$/;"	l
c25	bad_mmap.asm	/^ c25:	c9                   	leaveq $/;"	l
c25	cat.asm	/^ c25:	75 4a                	jne    c71 <malloc+0x7e>$/;"	l
c25	eager_mmap.asm	/^ c25:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
c25	init.asm	/^ c25:	00 00 00 $/;"	l
c25	lazy_mmap.asm	/^ c25:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
c25	ln.asm	/^ c25:	eb 18                	jmp    c3f <malloc+0x148>$/;"	l
c25	mkdir.asm	/^ c25:	ff d0                	callq  *%rax$/;"	l
c25	rm.asm	/^ c25:	ff d0                	callq  *%rax$/;"	l
c25	stressfs.asm	/^ c25:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
c25	wc.asm	/^ c25:	48 89 10             	mov    %rdx,(%rax)$/;"	l
c26	bad_mmap.asm	/^ c26:	c3                   	retq   $/;"	l
c26	imshow.asm	/^ c26:	48 8b 00             	mov    (%rax),%rax$/;"	l
c26	ls.asm	/^     c26:	0f b6 00             	movzbl (%rax),%eax$/;"	l
c27	bad_mmap.asm	/^ c27:	55                   	push   %rbp$/;"	l
c27	cat.asm	/^ c27:	48 b8 00 12 00 00 00 	movabs $0x1200,%rax$/;"	l
c27	ln.asm	/^ c27:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
c27	mkdir.asm	/^ c27:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
c27	rm.asm	/^ c27:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
c27	sh.asm	/^     c27:	00 00 00 $/;"	l
c27	usertests.asm	/^     c27:	90                   	nop$/;"	l
c28	bad_mmap.asm	/^ c28:	48 89 e5             	mov    %rsp,%rbp$/;"	l
c28	grep.asm	/^ c28:	8b 95 20 ff ff ff    	mov    -0xe0(%rbp),%edx$/;"	l
c28	init.asm	/^ c28:	48 89 10             	mov    %rdx,(%rax)$/;"	l
c28	usertests.asm	/^     c28:	8b 45 f4             	mov    -0xc(%rbp),%eax$/;"	l
c28	wc.asm	/^ c28:	90                   	nop$/;"	l
c29	eager_mmap.asm	/^ c29:	48 83 7d f8 ff       	cmpq   $0xffffffffffffffff,-0x8(%rbp)$/;"	l
c29	imshow.asm	/^ c29:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax$/;"	l
c29	lazy_mmap.asm	/^ c29:	48 83 7d f8 ff       	cmpq   $0xffffffffffffffff,-0x8(%rbp)$/;"	l
c29	ls.asm	/^     c29:	84 c0                	test   %al,%al$/;"	l
c29	stressfs.asm	/^ c29:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)$/;"	l
c29	wc.asm	/^ c29:	c9                   	leaveq $/;"	l
c2a	sh.asm	/^     c2a:	ff d0                	callq  *%rax$/;"	l
c2a	wc.asm	/^ c2a:	c3                   	retq   $/;"	l
c2b	bad_mmap.asm	/^ c2b:	48 83 ec 30          	sub    $0x30,%rsp$/;"	l
c2b	init.asm	/^ c2b:	48 b8 d0 0f 00 00 00 	movabs $0xfd0,%rax$/;"	l
c2b	ln.asm	/^ c2b:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
c2b	ls.asm	/^     c2b:	75 c7                	jne    bf4 <printf+0x26d>$/;"	l
c2b	mkdir.asm	/^ c2b:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)$/;"	l
c2b	rm.asm	/^ c2b:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)$/;"	l
c2b	usertests.asm	/^     c2b:	89 c7                	mov    %eax,%edi$/;"	l
c2b	wc.asm	/^ c2b:	55                   	push   %rbp$/;"	l
c2c	sh.asm	/^     c2c:	85 c0                	test   %eax,%eax$/;"	l
c2c	wc.asm	/^ c2c:	48 89 e5             	mov    %rsp,%rbp$/;"	l
c2d	imshow.asm	/^ c2d:	77 22                	ja     c51 <free+0x71>$/;"	l
c2d	ls.asm	/^     c2d:	e9 c8 00 00 00       	jmpq   cfa <printf+0x373>$/;"	l
c2d	usertests.asm	/^     c2d:	48 b8 34 60 00 00 00 	movabs $0x6034,%rax$/;"	l
c2e	cat.asm	/^ c2e:	00 00 00 $/;"	l
c2e	eager_mmap.asm	/^ c2e:	75 07                	jne    c37 <morecore+0x41>$/;"	l
c2e	grep.asm	/^ c2e:	89 d2                	mov    %edx,%edx$/;"	l
c2e	lazy_mmap.asm	/^ c2e:	75 07                	jne    c37 <morecore+0x41>$/;"	l
c2e	sh.asm	/^     c2e:	74 58                	je     c88 <parsepipe+0xae>$/;"	l
c2e	stressfs.asm	/^ c2e:	75 4a                	jne    c7a <malloc+0x7e>$/;"	l
c2f	bad_mmap.asm	/^ c2f:	89 7d dc             	mov    %edi,-0x24(%rbp)$/;"	l
c2f	imshow.asm	/^ c2f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
c2f	ln.asm	/^ c2f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
c2f	wc.asm	/^ c2f:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
c3	echo.asm	/^  c3:	55                   	push   %rbp$/;"	l
c3	grep.asm	/^  c3:	48 89 45 e0          	mov    %rax,-0x20(%rbp)$/;"	l
c3	imshow.asm	/^  c3:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)$/;"	l
c3	init.asm	/^  c3:	bf 01 00 00 00       	mov    $0x1,%edi$/;"	l
c3	mkdir.asm	/^  c3:	00 00 00 $/;"	l
c3	rm.asm	/^  c3:	00 00 00 $/;"	l
c3	wc.asm	/^  c3:	48 b8 99 05 00 00 00 	movabs $0x599,%rax$/;"	l
c30	eager_mmap.asm	/^ c30:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c30	grep.asm	/^ c30:	48 01 d0             	add    %rdx,%rax$/;"	l
c30	lazy_mmap.asm	/^ c30:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c30	mkdir.asm	/^ c30:	75 07                	jne    c39 <malloc+0x130>$/;"	l
c30	rm.asm	/^ c30:	75 07                	jne    c39 <malloc+0x130>$/;"	l
c30	sh.asm	/^     c30:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi$/;"	l
c30	stressfs.asm	/^ c30:	48 b8 d0 0f 00 00 00 	movabs $0xfd0,%rax$/;"	l
c31	cat.asm	/^ c31:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
c32	bad_mmap.asm	/^ c32:	8b 45 dc             	mov    -0x24(%rbp),%eax$/;"	l
c32	init.asm	/^ c32:	00 00 00 $/;"	l
c32	ls.asm	/^     c32:	83 bd 3c ff ff ff 63 	cmpl   $0x63,-0xc4(%rbp)$/;"	l
c32	mkdir.asm	/^ c32:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c32	rm.asm	/^ c32:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c33	grep.asm	/^ c33:	8b 95 20 ff ff ff    	mov    -0xe0(%rbp),%edx$/;"	l
c33	imshow.asm	/^ c33:	48 8b 00             	mov    (%rax),%rax$/;"	l
c33	ln.asm	/^ c33:	48 8b 00             	mov    (%rax),%rax$/;"	l
c33	wc.asm	/^ c33:	89 7d ec             	mov    %edi,-0x14(%rbp)$/;"	l
c34	sh.asm	/^     c34:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
c34	usertests.asm	/^     c34:	00 00 00 $/;"	l
c35	bad_mmap.asm	/^ c35:	48 83 c0 0f          	add    $0xf,%rax$/;"	l
c35	cat.asm	/^ c35:	48 b8 10 12 00 00 00 	movabs $0x1210,%rax$/;"	l
c35	eager_mmap.asm	/^ c35:	eb 36                	jmp    c6d <morecore+0x77>$/;"	l
c35	init.asm	/^ c35:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%rax)$/;"	l
c35	lazy_mmap.asm	/^ c35:	eb 36                	jmp    c6d <morecore+0x77>$/;"	l
c36	imshow.asm	/^ c36:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
c36	ln.asm	/^ c36:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
c36	wc.asm	/^ c36:	81 7d ec ff 0f 00 00 	cmpl   $0xfff,-0x14(%rbp)$/;"	l
c37	eager_mmap.asm	/^ c37:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
c37	lazy_mmap.asm	/^ c37:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
c37	mkdir.asm	/^ c37:	eb 18                	jmp    c51 <malloc+0x148>$/;"	l
c37	rm.asm	/^ c37:	eb 18                	jmp    c51 <malloc+0x148>$/;"	l
c37	stressfs.asm	/^ c37:	00 00 00 $/;"	l
c37	usertests.asm	/^     c37:	ff d0                	callq  *%rax$/;"	l
c38	sh.asm	/^     c38:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
c39	bad_mmap.asm	/^ c39:	48 c1 e8 04          	shr    $0x4,%rax$/;"	l
c39	grep.asm	/^ c39:	83 c2 08             	add    $0x8,%edx$/;"	l
c39	ls.asm	/^     c39:	75 5d                	jne    c98 <printf+0x311>$/;"	l
c39	mkdir.asm	/^ c39:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
c39	rm.asm	/^ c39:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
c39	usertests.asm	/^     c39:	48 bf 5c 6b 00 00 00 	movabs $0x6b5c,%rdi$/;"	l
c3a	imshow.asm	/^ c3a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
c3a	ln.asm	/^ c3a:	e9 41 ff ff ff       	jmpq   b80 <malloc+0x89>$/;"	l
c3a	stressfs.asm	/^ c3a:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
c3b	eager_mmap.asm	/^ c3b:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
c3b	lazy_mmap.asm	/^ c3b:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
c3b	ls.asm	/^     c3b:	8b 85 20 ff ff ff    	mov    -0xe0(%rbp),%eax$/;"	l
c3c	cat.asm	/^ c3c:	00 00 00 $/;"	l
c3c	grep.asm	/^ c3c:	89 95 20 ff ff ff    	mov    %edx,-0xe0(%rbp)$/;"	l
c3c	init.asm	/^ c3c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
c3d	bad_mmap.asm	/^ c3d:	83 c0 01             	add    $0x1,%eax$/;"	l
c3d	mkdir.asm	/^ c3d:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
c3d	rm.asm	/^ c3d:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
c3d	sh.asm	/^     c3d:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c3d	wc.asm	/^ c3d:	77 07                	ja     c46 <morecore+0x1b>$/;"	l
c3e	imshow.asm	/^ c3e:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax$/;"	l
c3e	stressfs.asm	/^ c3e:	48 b8 e0 0f 00 00 00 	movabs $0xfe0,%rax$/;"	l
c3f	cat.asm	/^ c3f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
c3f	eager_mmap.asm	/^ c3f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
c3f	lazy_mmap.asm	/^ c3f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
c3f	ln.asm	/^ c3f:	c9                   	leaveq $/;"	l
c3f	wc.asm	/^ c3f:	c7 45 ec 00 10 00 00 	movl   $0x1000,-0x14(%rbp)$/;"	l
c4	cat.asm	/^  c4:	89 7d ec             	mov    %edi,-0x14(%rbp)$/;"	l
c4	eager_mmap.asm	/^  c4:	48 b9 1f 07 00 00 00 	movabs $0x71f,%rcx$/;"	l
c4	echo.asm	/^  c4:	48 89 e5             	mov    %rsp,%rbp$/;"	l
c4	lazy_mmap.asm	/^  c4:	48 b9 1f 07 00 00 00 	movabs $0x71f,%rcx$/;"	l
c4	ls.asm	/^      c4:	48 b8 62 05 00 00 00 	movabs $0x562,%rax$/;"	l
c40	bad_mmap.asm	/^ c40:	89 45 ec             	mov    %eax,-0x14(%rbp)$/;"	l
c40	init.asm	/^ c40:	48 8b 00             	mov    (%rax),%rax$/;"	l
c40	ln.asm	/^ c40:	c3                   	retq   $/;"	l
c40	usertests.asm	/^     c40:	00 00 00 $/;"	l
c41	ls.asm	/^     c41:	83 f8 30             	cmp    $0x30,%eax$/;"	l
c41	mkdir.asm	/^ c41:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
c41	rm.asm	/^ c41:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
c42	grep.asm	/^ c42:	eb 12                	jmp    c56 <printf+0x2f4>$/;"	l
c42	imshow.asm	/^ c42:	76 c7                	jbe    c0b <free+0x2b>$/;"	l
c42	sh.asm	/^     c42:	48 89 c7             	mov    %rax,%rdi$/;"	l
c43	bad_mmap.asm	/^ c43:	48 b8 40 11 00 00 00 	movabs $0x1140,%rax$/;"	l
c43	cat.asm	/^ c43:	48 89 10             	mov    %rdx,(%rax)$/;"	l
c43	eager_mmap.asm	/^ c43:	8b 55 ec             	mov    -0x14(%rbp),%edx$/;"	l
c43	init.asm	/^ c43:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
c43	lazy_mmap.asm	/^ c43:	8b 55 ec             	mov    -0x14(%rbp),%edx$/;"	l
c43	usertests.asm	/^     c43:	48 b8 66 60 00 00 00 	movabs $0x6066,%rax$/;"	l
c44	grep.asm	/^ c44:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax$/;"	l
c44	imshow.asm	/^ c44:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
c44	ls.asm	/^     c44:	73 23                	jae    c69 <printf+0x2e2>$/;"	l
c45	mkdir.asm	/^ c45:	48 8b 00             	mov    (%rax),%rax$/;"	l
c45	rm.asm	/^ c45:	48 8b 00             	mov    (%rax),%rax$/;"	l
c45	sh.asm	/^     c45:	48 b8 aa 07 00 00 00 	movabs $0x7aa,%rax$/;"	l
c45	stressfs.asm	/^ c45:	00 00 00 $/;"	l
c46	cat.asm	/^ c46:	48 b8 10 12 00 00 00 	movabs $0x1210,%rax$/;"	l
c46	eager_mmap.asm	/^ c46:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
c46	lazy_mmap.asm	/^ c46:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
c46	ls.asm	/^     c46:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax$/;"	l
c46	wc.asm	/^ c46:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
c47	init.asm	/^ c47:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
c48	imshow.asm	/^ c48:	48 8b 00             	mov    (%rax),%rax$/;"	l
c48	mkdir.asm	/^ c48:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
c48	rm.asm	/^ c48:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
c48	stressfs.asm	/^ c48:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
c49	eager_mmap.asm	/^ c49:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
c49	lazy_mmap.asm	/^ c49:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
c49	wc.asm	/^ c49:	c1 e0 04             	shl    $0x4,%eax$/;"	l
c4a	bad_mmap.asm	/^ c4a:	00 00 00 $/;"	l
c4a	usertests.asm	/^     c4a:	00 00 00 $/;"	l
c4b	grep.asm	/^ c4b:	48 8d 50 08          	lea    0x8(%rax),%rdx$/;"	l
c4b	imshow.asm	/^ c4b:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax$/;"	l
c4b	init.asm	/^ c4b:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
c4c	mkdir.asm	/^ c4c:	e9 41 ff ff ff       	jmpq   b92 <malloc+0x89>$/;"	l
c4c	rm.asm	/^ c4c:	e9 41 ff ff ff       	jmpq   b92 <malloc+0x89>$/;"	l
c4c	sh.asm	/^     c4c:	00 00 00 $/;"	l
c4c	stressfs.asm	/^ c4c:	48 89 10             	mov    %rdx,(%rax)$/;"	l
c4c	wc.asm	/^ c4c:	89 c7                	mov    %eax,%edi$/;"	l
c4d	bad_mmap.asm	/^ c4d:	48 8b 00             	mov    (%rax),%rax$/;"	l
c4d	cat.asm	/^ c4d:	00 00 00 $/;"	l
c4d	eager_mmap.asm	/^ c4d:	48 83 c0 10          	add    $0x10,%rax$/;"	l
c4d	lazy_mmap.asm	/^ c4d:	48 83 c0 10          	add    $0x10,%rax$/;"	l
c4d	ls.asm	/^     c4d:	8b 95 20 ff ff ff    	mov    -0xe0(%rbp),%edx$/;"	l
c4d	usertests.asm	/^     c4d:	ff d0                	callq  *%rax$/;"	l
c4e	init.asm	/^ c4e:	3b 45 ec             	cmp    -0x14(%rbp),%eax$/;"	l
c4e	wc.asm	/^ c4e:	48 b8 25 06 00 00 00 	movabs $0x625,%rax$/;"	l
c4f	grep.asm	/^ c4f:	48 89 95 28 ff ff ff 	mov    %rdx,-0xd8(%rbp)$/;"	l
c4f	imshow.asm	/^ c4f:	76 ba                	jbe    c0b <free+0x2b>$/;"	l
c4f	sh.asm	/^     c4f:	ff d0                	callq  *%rax$/;"	l
c4f	stressfs.asm	/^ c4f:	48 b8 e0 0f 00 00 00 	movabs $0xfe0,%rax$/;"	l
c4f	usertests.asm	/^     c4f:	85 c0                	test   %eax,%eax$/;"	l
c5	bad_mmap.asm	/^  c5:	00 00 00 $/;"	l
c5	ln.asm	/^  c5:	89 55 f0             	mov    %edx,-0x10(%rbp)$/;"	l
c5	sh.asm	/^      c5:	00 00 00 $/;"	l
c5	stressfs.asm	/^  c5:	48 8d 45 e0          	lea    -0x20(%rbp),%rax$/;"	l
c50	bad_mmap.asm	/^ c50:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
c50	cat.asm	/^ c50:	48 8b 10             	mov    (%rax),%rdx$/;"	l
c51	eager_mmap.asm	/^ c51:	48 89 c7             	mov    %rax,%rdi$/;"	l
c51	imshow.asm	/^ c51:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
c51	init.asm	/^ c51:	72 65                	jb     cb8 <malloc+0xfa>$/;"	l
c51	lazy_mmap.asm	/^ c51:	48 89 c7             	mov    %rax,%rdi$/;"	l
c51	mkdir.asm	/^ c51:	c9                   	leaveq $/;"	l
c51	rm.asm	/^ c51:	c9                   	leaveq $/;"	l
c51	sh.asm	/^     c51:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx$/;"	l
c51	usertests.asm	/^     c51:	79 35                	jns    c88 <writetest1+0x2ef>$/;"	l
c52	mkdir.asm	/^ c52:	c3                   	retq   $/;"	l
c52	rm.asm	/^ c52:	c3                   	retq   $/;"	l
c53	cat.asm	/^ c53:	48 b8 00 12 00 00 00 	movabs $0x1200,%rax$/;"	l
c53	init.asm	/^ c53:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
c53	ls.asm	/^     c53:	89 d2                	mov    %edx,%edx$/;"	l
c53	usertests.asm	/^     c53:	48 b8 08 88 00 00 00 	movabs $0x8808,%rax$/;"	l
c54	bad_mmap.asm	/^ c54:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)$/;"	l
c54	eager_mmap.asm	/^ c54:	48 b8 c4 0a 00 00 00 	movabs $0xac4,%rax$/;"	l
c54	lazy_mmap.asm	/^ c54:	48 b8 c4 0a 00 00 00 	movabs $0xac4,%rax$/;"	l
c55	imshow.asm	/^ c55:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
c55	ls.asm	/^     c55:	48 01 d0             	add    %rdx,%rax$/;"	l
c55	sh.asm	/^     c55:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
c55	wc.asm	/^ c55:	00 00 00 $/;"	l
c56	grep.asm	/^ c56:	8b 00                	mov    (%rax),%eax$/;"	l
c56	stressfs.asm	/^ c56:	00 00 00 $/;"	l
c57	init.asm	/^ c57:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
c58	grep.asm	/^ c58:	0f be d0             	movsbl %al,%edx$/;"	l
c58	imshow.asm	/^ c58:	89 c0                	mov    %eax,%eax$/;"	l
c58	ls.asm	/^     c58:	8b 95 20 ff ff ff    	mov    -0xe0(%rbp),%edx$/;"	l
c58	wc.asm	/^ c58:	ff d0                	callq  *%rax$/;"	l
c59	bad_mmap.asm	/^ c59:	75 4a                	jne    ca5 <malloc+0x7e>$/;"	l
c59	sh.asm	/^     c59:	48 89 d6             	mov    %rdx,%rsi$/;"	l
c59	stressfs.asm	/^ c59:	48 8b 10             	mov    (%rax),%rdx$/;"	l
c5a	cat.asm	/^ c5a:	00 00 00 $/;"	l
c5a	imshow.asm	/^ c5a:	48 c1 e0 04          	shl    $0x4,%rax$/;"	l
c5a	init.asm	/^ c5a:	3b 45 ec             	cmp    -0x14(%rbp),%eax$/;"	l
c5a	usertests.asm	/^     c5a:	00 00 00 $/;"	l
c5a	wc.asm	/^ c5a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
c5b	bad_mmap.asm	/^ c5b:	48 b8 30 11 00 00 00 	movabs $0x1130,%rax$/;"	l
c5b	eager_mmap.asm	/^ c5b:	00 00 00 $/;"	l
c5b	grep.asm	/^ c5b:	8b 85 1c ff ff ff    	mov    -0xe4(%rbp),%eax$/;"	l
c5b	lazy_mmap.asm	/^ c5b:	00 00 00 $/;"	l
c5c	sh.asm	/^     c5c:	48 89 c7             	mov    %rax,%rdi$/;"	l
c5c	stressfs.asm	/^ c5c:	48 b8 d0 0f 00 00 00 	movabs $0xfd0,%rax$/;"	l
c5d	cat.asm	/^ c5d:	48 89 10             	mov    %rdx,(%rax)$/;"	l
c5d	init.asm	/^ c5d:	75 10                	jne    c6f <malloc+0xb1>$/;"	l
c5d	usertests.asm	/^     c5d:	8b 00                	mov    (%rax),%eax$/;"	l
c5e	eager_mmap.asm	/^ c5e:	ff d0                	callq  *%rax$/;"	l
c5e	imshow.asm	/^ c5e:	48 89 c2             	mov    %rax,%rdx$/;"	l
c5e	lazy_mmap.asm	/^ c5e:	ff d0                	callq  *%rax$/;"	l
c5e	ls.asm	/^     c5e:	83 c2 08             	add    $0x8,%edx$/;"	l
c5e	wc.asm	/^ c5e:	48 83 7d f8 ff       	cmpq   $0xffffffffffffffff,-0x8(%rbp)$/;"	l
c5f	init.asm	/^ c5f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
c5f	sh.asm	/^     c5f:	48 b8 da 0b 00 00 00 	movabs $0xbda,%rax$/;"	l
c5f	usertests.asm	/^     c5f:	48 be 00 6c 00 00 00 	movabs $0x6c00,%rsi$/;"	l
c6	kill.asm	/^  c6:	89 55 f0             	mov    %edx,-0x10(%rbp)$/;"	l
c6	mkdir.asm	/^  c6:	ff d0                	callq  *%rax$/;"	l
c6	rm.asm	/^  c6:	ff d0                	callq  *%rax$/;"	l
c6	usertests.asm	/^      c6:	00 00 00 $/;"	l
c6	zombie.asm	/^  c6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
c60	cat.asm	/^ c60:	48 b8 00 12 00 00 00 	movabs $0x1200,%rax$/;"	l
c60	eager_mmap.asm	/^ c60:	48 b8 70 11 00 00 00 	movabs $0x1170,%rax$/;"	l
c60	lazy_mmap.asm	/^ c60:	48 b8 70 11 00 00 00 	movabs $0x1170,%rax$/;"	l
c61	grep.asm	/^ c61:	89 d6                	mov    %edx,%esi$/;"	l
c61	imshow.asm	/^ c61:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
c61	ls.asm	/^     c61:	89 95 20 ff ff ff    	mov    %edx,-0xe0(%rbp)$/;"	l
c62	bad_mmap.asm	/^ c62:	00 00 00 $/;"	l
c63	grep.asm	/^ c63:	89 c7                	mov    %eax,%edi$/;"	l
c63	init.asm	/^ c63:	48 8b 10             	mov    (%rax),%rdx$/;"	l
c63	stressfs.asm	/^ c63:	00 00 00 $/;"	l
c63	wc.asm	/^ c63:	75 07                	jne    c6c <morecore+0x41>$/;"	l
c65	bad_mmap.asm	/^ c65:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
c65	grep.asm	/^ c65:	48 b8 65 08 00 00 00 	movabs $0x865,%rax$/;"	l
c65	imshow.asm	/^ c65:	48 01 c2             	add    %rax,%rdx$/;"	l
c65	wc.asm	/^ c65:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c66	init.asm	/^ c66:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
c66	sh.asm	/^     c66:	00 00 00 $/;"	l
c66	stressfs.asm	/^ c66:	48 89 10             	mov    %rdx,(%rax)$/;"	l
c66	usertests.asm	/^     c66:	00 00 00 $/;"	l
c67	cat.asm	/^ c67:	00 00 00 $/;"	l
c67	eager_mmap.asm	/^ c67:	00 00 00 $/;"	l
c67	lazy_mmap.asm	/^ c67:	00 00 00 $/;"	l
c67	ls.asm	/^     c67:	eb 12                	jmp    c7b <printf+0x2f4>$/;"	l
c68	imshow.asm	/^ c68:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
c69	bad_mmap.asm	/^ c69:	48 b8 40 11 00 00 00 	movabs $0x1140,%rax$/;"	l
c69	ls.asm	/^     c69:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax$/;"	l
c69	sh.asm	/^     c69:	ff d0                	callq  *%rax$/;"	l
c69	stressfs.asm	/^ c69:	48 b8 d0 0f 00 00 00 	movabs $0xfd0,%rax$/;"	l
c69	usertests.asm	/^     c69:	89 c7                	mov    %eax,%edi$/;"	l
c6a	cat.asm	/^ c6a:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%rax)$/;"	l
c6a	eager_mmap.asm	/^ c6a:	48 8b 00             	mov    (%rax),%rax$/;"	l
c6a	init.asm	/^ c6a:	48 89 10             	mov    %rdx,(%rax)$/;"	l
c6a	lazy_mmap.asm	/^ c6a:	48 8b 00             	mov    (%rax),%rax$/;"	l
c6a	wc.asm	/^ c6a:	eb 36                	jmp    ca2 <morecore+0x77>$/;"	l
c6b	sh.asm	/^     c6b:	48 89 c2             	mov    %rax,%rdx$/;"	l
c6b	usertests.asm	/^     c6b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c6c	grep.asm	/^ c6c:	00 00 00 $/;"	l
c6c	imshow.asm	/^ c6c:	48 8b 00             	mov    (%rax),%rax$/;"	l
c6c	wc.asm	/^ c6c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
c6d	eager_mmap.asm	/^ c6d:	c9                   	leaveq $/;"	l
c6d	init.asm	/^ c6d:	eb 2e                	jmp    c9d <malloc+0xdf>$/;"	l
c6d	lazy_mmap.asm	/^ c6d:	c9                   	leaveq $/;"	l
c6e	eager_mmap.asm	/^ c6e:	c3                   	retq   $/;"	l
c6e	lazy_mmap.asm	/^ c6e:	c3                   	retq   $/;"	l
c6e	sh.asm	/^     c6e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
c6f	eager_mmap.asm	/^ c6f:	55                   	push   %rbp$/;"	l
c6f	grep.asm	/^ c6f:	ff d0                	callq  *%rax$/;"	l
c6f	imshow.asm	/^ c6f:	48 39 c2             	cmp    %rax,%rdx$/;"	l
c6f	init.asm	/^ c6f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
c6f	lazy_mmap.asm	/^ c6f:	55                   	push   %rbp$/;"	l
c7	cat.asm	/^  c7:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)$/;"	l
c7	echo.asm	/^  c7:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
c7	grep.asm	/^  c7:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)$/;"	l
c70	bad_mmap.asm	/^ c70:	00 00 00 $/;"	l
c70	eager_mmap.asm	/^ c70:	48 89 e5             	mov    %rsp,%rbp$/;"	l
c70	lazy_mmap.asm	/^ c70:	48 89 e5             	mov    %rsp,%rbp$/;"	l
c70	ls.asm	/^     c70:	48 8d 50 08          	lea    0x8(%rax),%rdx$/;"	l
c70	stressfs.asm	/^ c70:	00 00 00 $/;"	l
c70	usertests.asm	/^     c70:	48 ba db 61 00 00 00 	movabs $0x61db,%rdx$/;"	l
c70	wc.asm	/^ c70:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
c71	cat.asm	/^ c71:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
c71	grep.asm	/^ c71:	eb 62                	jmp    cd5 <printf+0x373>$/;"	l
c72	imshow.asm	/^ c72:	75 2d                	jne    ca1 <free+0xc1>$/;"	l
c72	sh.asm	/^     c72:	48 89 d6             	mov    %rdx,%rsi$/;"	l
c73	bad_mmap.asm	/^ c73:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
c73	eager_mmap.asm	/^ c73:	48 83 ec 30          	sub    $0x30,%rsp$/;"	l
c73	grep.asm	/^ c73:	83 bd 3c ff ff ff 25 	cmpl   $0x25,-0xc4(%rbp)$/;"	l
c73	init.asm	/^ c73:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
c73	lazy_mmap.asm	/^ c73:	48 83 ec 30          	sub    $0x30,%rsp$/;"	l
c73	stressfs.asm	/^ c73:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%rax)$/;"	l
c74	imshow.asm	/^ c74:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
c74	ls.asm	/^     c74:	48 89 95 28 ff ff ff 	mov    %rdx,-0xd8(%rbp)$/;"	l
c74	wc.asm	/^ c74:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
c75	cat.asm	/^ c75:	48 8b 00             	mov    (%rax),%rax$/;"	l
c75	sh.asm	/^     c75:	48 89 c7             	mov    %rax,%rdi$/;"	l
c76	init.asm	/^ c76:	2b 45 ec             	sub    -0x14(%rbp),%eax$/;"	l
c77	bad_mmap.asm	/^ c77:	48 89 10             	mov    %rdx,(%rax)$/;"	l
c77	eager_mmap.asm	/^ c77:	89 7d dc             	mov    %edi,-0x24(%rbp)$/;"	l
c77	lazy_mmap.asm	/^ c77:	89 7d dc             	mov    %edi,-0x24(%rbp)$/;"	l
c77	usertests.asm	/^     c77:	00 00 00 $/;"	l
c78	cat.asm	/^ c78:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
c78	imshow.asm	/^ c78:	8b 50 08             	mov    0x8(%rax),%edx$/;"	l
c78	sh.asm	/^     c78:	48 b8 7c 06 00 00 00 	movabs $0x67c,%rax$/;"	l
c78	wc.asm	/^ c78:	8b 55 ec             	mov    -0x14(%rbp),%edx$/;"	l
c79	init.asm	/^ c79:	89 c2                	mov    %eax,%edx$/;"	l
c7a	bad_mmap.asm	/^ c7a:	48 b8 40 11 00 00 00 	movabs $0x1140,%rax$/;"	l
c7a	eager_mmap.asm	/^ c7a:	8b 45 dc             	mov    -0x24(%rbp),%eax$/;"	l
c7a	grep.asm	/^ c7a:	75 21                	jne    c9d <printf+0x33b>$/;"	l
c7a	lazy_mmap.asm	/^ c7a:	8b 45 dc             	mov    -0x24(%rbp),%eax$/;"	l
c7a	stressfs.asm	/^ c7a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
c7a	usertests.asm	/^     c7a:	ff d2                	callq  *%rdx$/;"	l
c7b	imshow.asm	/^ c7b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
c7b	init.asm	/^ c7b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
c7b	ls.asm	/^     c7b:	8b 00                	mov    (%rax),%eax$/;"	l
c7b	wc.asm	/^ c7b:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
c7c	cat.asm	/^ c7c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
c7c	grep.asm	/^ c7c:	8b 85 3c ff ff ff    	mov    -0xc4(%rbp),%eax$/;"	l
c7c	usertests.asm	/^     c7c:	48 b8 02 60 00 00 00 	movabs $0x6002,%rax$/;"	l
c7d	eager_mmap.asm	/^ c7d:	48 83 c0 0f          	add    $0xf,%rax$/;"	l
c7d	lazy_mmap.asm	/^ c7d:	48 83 c0 0f          	add    $0xf,%rax$/;"	l
c7d	ls.asm	/^     c7d:	0f be d0             	movsbl %al,%edx$/;"	l
c7e	stressfs.asm	/^ c7e:	48 8b 00             	mov    (%rax),%rax$/;"	l
c7e	wc.asm	/^ c7e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
c7f	imshow.asm	/^ c7f:	48 8b 00             	mov    (%rax),%rax$/;"	l
c7f	init.asm	/^ c7f:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
c7f	sh.asm	/^     c7f:	00 00 00 $/;"	l
c8	bad_mmap.asm	/^  c8:	ff d1                	callq  *%rcx$/;"	l
c8	init.asm	/^  c8:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c8	ln.asm	/^  c8:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx$/;"	l
c8	mkdir.asm	/^  c8:	55                   	push   %rbp$/;"	l
c8	rm.asm	/^  c8:	55                   	push   %rbp$/;"	l
c8	sh.asm	/^      c8:	ff d1                	callq  *%rcx$/;"	l
c80	cat.asm	/^ c80:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
c80	ls.asm	/^     c80:	8b 85 1c ff ff ff    	mov    -0xe4(%rbp),%eax$/;"	l
c81	bad_mmap.asm	/^ c81:	00 00 00 $/;"	l
c81	eager_mmap.asm	/^ c81:	48 c1 e8 04          	shr    $0x4,%rax$/;"	l
c81	lazy_mmap.asm	/^ c81:	48 c1 e8 04          	shr    $0x4,%rax$/;"	l
c81	stressfs.asm	/^ c81:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
c82	grep.asm	/^ c82:	0f be d0             	movsbl %al,%edx$/;"	l
c82	imshow.asm	/^ c82:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
c82	init.asm	/^ c82:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
c82	sh.asm	/^     c82:	ff d0                	callq  *%rax$/;"	l
c82	wc.asm	/^ c82:	48 83 c0 10          	add    $0x10,%rax$/;"	l
c83	cat.asm	/^ c83:	3b 45 ec             	cmp    -0x14(%rbp),%eax$/;"	l
c83	usertests.asm	/^     c83:	00 00 00 $/;"	l
c84	bad_mmap.asm	/^ c84:	48 8b 10             	mov    (%rax),%rdx$/;"	l
c84	sh.asm	/^     c84:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
c85	eager_mmap.asm	/^ c85:	83 c0 01             	add    $0x1,%eax$/;"	l
c85	grep.asm	/^ c85:	8b 85 1c ff ff ff    	mov    -0xe4(%rbp),%eax$/;"	l
c85	imshow.asm	/^ c85:	01 c2                	add    %eax,%edx$/;"	l
c85	lazy_mmap.asm	/^ c85:	83 c0 01             	add    $0x1,%eax$/;"	l
c85	stressfs.asm	/^ c85:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
c86	cat.asm	/^ c86:	72 65                	jb     ced <malloc+0xfa>$/;"	l
c86	init.asm	/^ c86:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
c86	ls.asm	/^     c86:	89 d6                	mov    %edx,%esi$/;"	l
c86	usertests.asm	/^     c86:	ff d0                	callq  *%rax$/;"	l
c86	wc.asm	/^ c86:	48 89 c7             	mov    %rax,%rdi$/;"	l
c87	bad_mmap.asm	/^ c87:	48 b8 30 11 00 00 00 	movabs $0x1130,%rax$/;"	l
c87	imshow.asm	/^ c87:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
c88	cat.asm	/^ c88:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
c88	eager_mmap.asm	/^ c88:	89 45 ec             	mov    %eax,-0x14(%rbp)$/;"	l
c88	lazy_mmap.asm	/^ c88:	89 45 ec             	mov    %eax,-0x14(%rbp)$/;"	l
c88	ls.asm	/^     c88:	89 c7                	mov    %eax,%edi$/;"	l
c88	sh.asm	/^     c88:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
c88	usertests.asm	/^     c88:	48 b8 08 88 00 00 00 	movabs $0x8808,%rax$/;"	l
c89	init.asm	/^ c89:	89 c0                	mov    %eax,%eax$/;"	l
c89	stressfs.asm	/^ c89:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
c89	wc.asm	/^ c89:	48 b8 f9 0a 00 00 00 	movabs $0xaf9,%rax$/;"	l
c8a	ls.asm	/^     c8a:	48 b8 8a 08 00 00 00 	movabs $0x88a,%rax$/;"	l
c8b	eager_mmap.asm	/^ c8b:	48 b8 70 11 00 00 00 	movabs $0x1170,%rax$/;"	l
c8b	grep.asm	/^ c8b:	89 d6                	mov    %edx,%esi$/;"	l
c8b	imshow.asm	/^ c8b:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
c8b	init.asm	/^ c8b:	48 c1 e0 04          	shl    $0x4,%rax$/;"	l
c8b	lazy_mmap.asm	/^ c8b:	48 b8 70 11 00 00 00 	movabs $0x1170,%rax$/;"	l
c8c	cat.asm	/^ c8c:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
c8c	sh.asm	/^     c8c:	c9                   	leaveq $/;"	l
c8c	stressfs.asm	/^ c8c:	3b 45 ec             	cmp    -0x14(%rbp),%eax$/;"	l
c8d	grep.asm	/^ c8d:	89 c7                	mov    %eax,%edi$/;"	l
c8d	sh.asm	/^     c8d:	c3                   	retq   $/;"	l
c8e	bad_mmap.asm	/^ c8e:	00 00 00 $/;"	l
c8e	imshow.asm	/^ c8e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
c8e	sh.asm	/^     c8e:	55                   	push   %rbp$/;"	l
c8f	cat.asm	/^ c8f:	3b 45 ec             	cmp    -0x14(%rbp),%eax$/;"	l
c8f	grep.asm	/^ c8f:	48 b8 65 08 00 00 00 	movabs $0x865,%rax$/;"	l
c8f	init.asm	/^ c8f:	48 01 45 f8          	add    %rax,-0x8(%rbp)$/;"	l
c8f	sh.asm	/^     c8f:	48 89 e5             	mov    %rsp,%rbp$/;"	l
c8f	stressfs.asm	/^ c8f:	72 65                	jb     cf6 <malloc+0xfa>$/;"	l
c8f	usertests.asm	/^     c8f:	00 00 00 $/;"	l
c9	forktest.asm	/^  c9:	00 00 00 $/;"	l
c9	kill.asm	/^  c9:	90                   	nop$/;"	l
c9	mkdir.asm	/^  c9:	48 89 e5             	mov    %rsp,%rbp$/;"	l
c9	rm.asm	/^  c9:	48 89 e5             	mov    %rsp,%rbp$/;"	l
c9	stressfs.asm	/^  c9:	be 02 02 00 00       	mov    $0x202,%esi$/;"	l
c9	usertests.asm	/^      c9:	ff d0                	callq  *%rax$/;"	l
c90	wc.asm	/^ c90:	00 00 00 $/;"	l
c91	bad_mmap.asm	/^ c91:	48 89 10             	mov    %rdx,(%rax)$/;"	l
c91	ls.asm	/^     c91:	00 00 00 $/;"	l
c91	stressfs.asm	/^ c91:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
c92	cat.asm	/^ c92:	75 10                	jne    ca4 <malloc+0xb1>$/;"	l
c92	eager_mmap.asm	/^ c92:	00 00 00 $/;"	l
c92	imshow.asm	/^ c92:	48 8b 00             	mov    (%rax),%rax$/;"	l
c92	lazy_mmap.asm	/^ c92:	00 00 00 $/;"	l
c92	sh.asm	/^     c92:	48 83 ec 40          	sub    $0x40,%rsp$/;"	l
c92	usertests.asm	/^     c92:	8b 00                	mov    (%rax),%eax$/;"	l
c93	init.asm	/^ c93:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
c93	wc.asm	/^ c93:	ff d0                	callq  *%rax$/;"	l
c94	bad_mmap.asm	/^ c94:	48 b8 30 11 00 00 00 	movabs $0x1130,%rax$/;"	l
c94	cat.asm	/^ c94:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
c94	ls.asm	/^     c94:	ff d0                	callq  *%rax$/;"	l
c94	usertests.asm	/^     c94:	48 be 13 6c 00 00 00 	movabs $0x6c13,%rsi$/;"	l
c95	eager_mmap.asm	/^ c95:	48 8b 00             	mov    (%rax),%rax$/;"	l
c95	imshow.asm	/^ c95:	48 8b 10             	mov    (%rax),%rdx$/;"	l
c95	lazy_mmap.asm	/^ c95:	48 8b 00             	mov    (%rax),%rax$/;"	l
c95	stressfs.asm	/^ c95:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
c95	wc.asm	/^ c95:	48 b8 d0 12 00 00 00 	movabs $0x12d0,%rax$/;"	l
c96	grep.asm	/^ c96:	00 00 00 $/;"	l
c96	ls.asm	/^     c96:	eb 62                	jmp    cfa <printf+0x373>$/;"	l
c96	sh.asm	/^     c96:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)$/;"	l
c97	init.asm	/^ c97:	8b 55 ec             	mov    -0x14(%rbp),%edx$/;"	l
c98	cat.asm	/^ c98:	48 8b 10             	mov    (%rax),%rdx$/;"	l
c98	eager_mmap.asm	/^ c98:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
c98	imshow.asm	/^ c98:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
c98	lazy_mmap.asm	/^ c98:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
c98	ls.asm	/^     c98:	83 bd 3c ff ff ff 25 	cmpl   $0x25,-0xc4(%rbp)$/;"	l
c98	stressfs.asm	/^ c98:	3b 45 ec             	cmp    -0x14(%rbp),%eax$/;"	l
c99	grep.asm	/^ c99:	ff d0                	callq  *%rax$/;"	l
c9a	init.asm	/^ c9a:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
c9a	sh.asm	/^     c9a:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)$/;"	l
c9b	bad_mmap.asm	/^ c9b:	00 00 00 $/;"	l
c9b	cat.asm	/^ c9b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
c9b	grep.asm	/^ c9b:	eb 38                	jmp    cd5 <printf+0x373>$/;"	l
c9b	stressfs.asm	/^ c9b:	75 10                	jne    cad <malloc+0xb1>$/;"	l
c9b	usertests.asm	/^     c9b:	00 00 00 $/;"	l
c9c	eager_mmap.asm	/^ c9c:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)$/;"	l
c9c	imshow.asm	/^ c9c:	48 89 10             	mov    %rdx,(%rax)$/;"	l
c9c	lazy_mmap.asm	/^ c9c:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)$/;"	l
c9c	wc.asm	/^ c9c:	00 00 00 $/;"	l
c9d	grep.asm	/^ c9d:	8b 85 1c ff ff ff    	mov    -0xe4(%rbp),%eax$/;"	l
c9d	init.asm	/^ c9d:	48 b8 e0 0f 00 00 00 	movabs $0xfe0,%rax$/;"	l
c9d	stressfs.asm	/^ c9d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
c9e	bad_mmap.asm	/^ c9e:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%rax)$/;"	l
c9e	sh.asm	/^     c9e:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)$/;"	l
c9e	usertests.asm	/^     c9e:	89 c7                	mov    %eax,%edi$/;"	l
c9f	cat.asm	/^ c9f:	48 89 10             	mov    %rdx,(%rax)$/;"	l
c9f	imshow.asm	/^ c9f:	eb 0e                	jmp    caf <free+0xcf>$/;"	l
c9f	ls.asm	/^     c9f:	75 21                	jne    cc2 <printf+0x33b>$/;"	l
c9f	wc.asm	/^ c9f:	48 8b 00             	mov    (%rax),%rax$/;"	l
ca	bad_mmap.asm	/^  ca:	48 be 0f 0e 00 00 00 	movabs $0xe0f,%rsi$/;"	l
ca	imshow.asm	/^  ca:	e9 a6 00 00 00       	jmpq   175 <main+0x175>$/;"	l
ca	kill.asm	/^  ca:	c9                   	leaveq $/;"	l
ca	sh.asm	/^      ca:	e9 62 02 00 00       	jmpq   331 <runcmd+0x331>$/;"	l
ca	wc.asm	/^  ca:	00 00 00 $/;"	l
ca	zombie.asm	/^  ca:	0f b6 00             	movzbl (%rax),%eax$/;"	l
ca0	usertests.asm	/^     ca0:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ca1	eager_mmap.asm	/^ ca1:	75 4a                	jne    ced <malloc+0x7e>$/;"	l
ca1	imshow.asm	/^ ca1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ca1	lazy_mmap.asm	/^ ca1:	75 4a                	jne    ced <malloc+0x7e>$/;"	l
ca1	ls.asm	/^     ca1:	8b 85 3c ff ff ff    	mov    -0xc4(%rbp),%eax$/;"	l
ca1	stressfs.asm	/^ ca1:	48 8b 10             	mov    (%rax),%rdx$/;"	l
ca2	cat.asm	/^ ca2:	eb 2e                	jmp    cd2 <malloc+0xdf>$/;"	l
ca2	sh.asm	/^     ca2:	e9 f8 00 00 00       	jmpq   d9f <parseredirs+0x111>$/;"	l
ca2	wc.asm	/^ ca2:	c9                   	leaveq $/;"	l
ca3	eager_mmap.asm	/^ ca3:	48 b8 60 11 00 00 00 	movabs $0x1160,%rax$/;"	l
ca3	grep.asm	/^ ca3:	be 25 00 00 00       	mov    $0x25,%esi$/;"	l
ca3	lazy_mmap.asm	/^ ca3:	48 b8 60 11 00 00 00 	movabs $0x1160,%rax$/;"	l
ca3	wc.asm	/^ ca3:	c3                   	retq   $/;"	l
ca4	cat.asm	/^ ca4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ca4	init.asm	/^ ca4:	00 00 00 $/;"	l
ca4	stressfs.asm	/^ ca4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ca4	wc.asm	/^ ca4:	55                   	push   %rbp$/;"	l
ca5	bad_mmap.asm	/^ ca5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ca5	imshow.asm	/^ ca5:	48 8b 10             	mov    (%rax),%rdx$/;"	l
ca5	usertests.asm	/^     ca5:	48 ba db 61 00 00 00 	movabs $0x61db,%rdx$/;"	l
ca5	wc.asm	/^ ca5:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ca7	init.asm	/^ ca7:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
ca7	ls.asm	/^     ca7:	0f be d0             	movsbl %al,%edx$/;"	l
ca7	sh.asm	/^     ca7:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi$/;"	l
ca8	cat.asm	/^ ca8:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
ca8	grep.asm	/^ ca8:	89 c7                	mov    %eax,%edi$/;"	l
ca8	imshow.asm	/^ ca8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ca8	stressfs.asm	/^ ca8:	48 89 10             	mov    %rdx,(%rax)$/;"	l
ca8	wc.asm	/^ ca8:	48 83 ec 30          	sub    $0x30,%rsp$/;"	l
ca9	bad_mmap.asm	/^ ca9:	48 8b 00             	mov    (%rax),%rax$/;"	l
caa	eager_mmap.asm	/^ caa:	00 00 00 $/;"	l
caa	grep.asm	/^ caa:	48 b8 65 08 00 00 00 	movabs $0x865,%rax$/;"	l
caa	lazy_mmap.asm	/^ caa:	00 00 00 $/;"	l
caa	ls.asm	/^     caa:	8b 85 1c ff ff ff    	mov    -0xe4(%rbp),%eax$/;"	l
cab	cat.asm	/^ cab:	2b 45 ec             	sub    -0x14(%rbp),%eax$/;"	l
cab	init.asm	/^ cab:	48 89 10             	mov    %rdx,(%rax)$/;"	l
cab	sh.asm	/^     cab:	48 8b 45 d0          	mov    -0x30(%rbp),%rax$/;"	l
cab	stressfs.asm	/^ cab:	eb 2e                	jmp    cdb <malloc+0xdf>$/;"	l
cac	bad_mmap.asm	/^ cac:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
cac	imshow.asm	/^ cac:	48 89 10             	mov    %rdx,(%rax)$/;"	l
cac	usertests.asm	/^     cac:	00 00 00 $/;"	l
cac	wc.asm	/^ cac:	89 7d dc             	mov    %edi,-0x24(%rbp)$/;"	l
cad	eager_mmap.asm	/^ cad:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
cad	lazy_mmap.asm	/^ cad:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
cad	stressfs.asm	/^ cad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
cae	cat.asm	/^ cae:	89 c2                	mov    %eax,%edx$/;"	l
cae	init.asm	/^ cae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
caf	imshow.asm	/^ caf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
caf	sh.asm	/^     caf:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
caf	usertests.asm	/^     caf:	ff d2                	callq  *%rdx$/;"	l
caf	wc.asm	/^ caf:	8b 45 dc             	mov    -0x24(%rbp),%eax$/;"	l
cat	cat.c	/^cat(int fd)$/;"	f
cb	cat.asm	/^  cb:	83 7d ec 01          	cmpl   $0x1,-0x14(%rbp)$/;"	l
cb	eager_mmap.asm	/^  cb:	00 00 00 $/;"	l
cb	echo.asm	/^  cb:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
cb	kill.asm	/^  cb:	c3                   	retq   $/;"	l
cb	lazy_mmap.asm	/^  cb:	00 00 00 $/;"	l
cb	ls.asm	/^      cb:	00 00 00 $/;"	l
cb	usertests.asm	/^      cb:	48 bf c5 68 00 00 00 	movabs $0x68c5,%rdi$/;"	l
cb0	bad_mmap.asm	/^ cb0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
cb0	cat.asm	/^ cb0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
cb0	ls.asm	/^     cb0:	89 d6                	mov    %edx,%esi$/;"	l
cb1	eager_mmap.asm	/^ cb1:	48 b8 70 11 00 00 00 	movabs $0x1170,%rax$/;"	l
cb1	grep.asm	/^ cb1:	00 00 00 $/;"	l
cb1	lazy_mmap.asm	/^ cb1:	48 b8 70 11 00 00 00 	movabs $0x1170,%rax$/;"	l
cb1	stressfs.asm	/^ cb1:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
cb1	usertests.asm	/^     cb1:	90                   	nop$/;"	l
cb2	init.asm	/^ cb2:	48 83 c0 10          	add    $0x10,%rax$/;"	l
cb2	ls.asm	/^     cb2:	89 c7                	mov    %eax,%edi$/;"	l
cb2	usertests.asm	/^     cb2:	c9                   	leaveq $/;"	l
cb2	wc.asm	/^ cb2:	48 83 c0 0f          	add    $0xf,%rax$/;"	l
cb3	imshow.asm	/^ cb3:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
cb3	usertests.asm	/^     cb3:	c3                   	retq   $/;"	l
cb4	bad_mmap.asm	/^ cb4:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
cb4	cat.asm	/^ cb4:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
cb4	grep.asm	/^ cb4:	ff d0                	callq  *%rax$/;"	l
cb4	ls.asm	/^     cb4:	48 b8 8a 08 00 00 00 	movabs $0x88a,%rax$/;"	l
cb4	sh.asm	/^     cb4:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
cb4	stressfs.asm	/^ cb4:	2b 45 ec             	sub    -0x14(%rbp),%eax$/;"	l
cb4	usertests.asm	/^     cb4:	55                   	push   %rbp$/;"	l
cb5	usertests.asm	/^     cb5:	48 89 e5             	mov    %rsp,%rbp$/;"	l
cb6	grep.asm	/^ cb6:	8b 85 3c ff ff ff    	mov    -0xc4(%rbp),%eax$/;"	l
cb6	imshow.asm	/^ cb6:	89 c0                	mov    %eax,%eax$/;"	l
cb6	init.asm	/^ cb6:	eb 4e                	jmp    d06 <malloc+0x148>$/;"	l
cb6	wc.asm	/^ cb6:	48 c1 e8 04          	shr    $0x4,%rax$/;"	l
cb7	bad_mmap.asm	/^ cb7:	3b 45 ec             	cmp    -0x14(%rbp),%eax$/;"	l
cb7	cat.asm	/^ cb7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
cb7	stressfs.asm	/^ cb7:	89 c2                	mov    %eax,%edx$/;"	l
cb8	eager_mmap.asm	/^ cb8:	00 00 00 $/;"	l
cb8	imshow.asm	/^ cb8:	48 c1 e0 04          	shl    $0x4,%rax$/;"	l
cb8	init.asm	/^ cb8:	48 b8 e0 0f 00 00 00 	movabs $0xfe0,%rax$/;"	l
cb8	lazy_mmap.asm	/^ cb8:	00 00 00 $/;"	l
cb8	usertests.asm	/^     cb8:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
cb9	sh.asm	/^     cb9:	48 89 c7             	mov    %rax,%rdi$/;"	l
cb9	stressfs.asm	/^ cb9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
cba	bad_mmap.asm	/^ cba:	72 65                	jb     d21 <malloc+0xfa>$/;"	l
cba	wc.asm	/^ cba:	83 c0 01             	add    $0x1,%eax$/;"	l
cbb	cat.asm	/^ cbb:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
cbb	eager_mmap.asm	/^ cbb:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
cbb	lazy_mmap.asm	/^ cbb:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
cbb	ls.asm	/^     cbb:	00 00 00 $/;"	l
cbc	bad_mmap.asm	/^ cbc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
cbc	grep.asm	/^ cbc:	0f be d0             	movsbl %al,%edx$/;"	l
cbc	imshow.asm	/^ cbc:	48 89 c2             	mov    %rax,%rdx$/;"	l
cbc	sh.asm	/^     cbc:	48 b8 aa 07 00 00 00 	movabs $0x7aa,%rax$/;"	l
cbc	usertests.asm	/^     cbc:	48 b8 08 88 00 00 00 	movabs $0x8808,%rax$/;"	l
cbd	stressfs.asm	/^ cbd:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
cbd	wc.asm	/^ cbd:	89 45 ec             	mov    %eax,-0x14(%rbp)$/;"	l
cbe	cat.asm	/^ cbe:	89 c0                	mov    %eax,%eax$/;"	l
cbe	ls.asm	/^     cbe:	ff d0                	callq  *%rax$/;"	l
cbf	eager_mmap.asm	/^ cbf:	48 89 10             	mov    %rdx,(%rax)$/;"	l
cbf	grep.asm	/^ cbf:	8b 85 1c ff ff ff    	mov    -0xe4(%rbp),%eax$/;"	l
cbf	imshow.asm	/^ cbf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
cbf	init.asm	/^ cbf:	00 00 00 $/;"	l
cbf	lazy_mmap.asm	/^ cbf:	48 89 10             	mov    %rdx,(%rax)$/;"	l
cc	bad_mmap.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	cat.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	eager_mmap.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	echo.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	forktest.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	forktest.asm	/^  cc:	ff d0                	callq  *%rax$/;"	l
cc	grep.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	grep.asm	/^  cc:	0f 85 72 ff ff ff    	jne    44 <grep+0x44>$/;"	l
cc	imshow.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	init.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	kill.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	kill.asm	/^  cc:	55                   	push   %rbp$/;"	l
cc	lazy_mmap.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	ln.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	ln.asm	/^  cc:	8b 55 f0             	mov    -0x10(%rbp),%edx$/;"	l
cc	ls.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	mkdir.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	mkdir.asm	/^  cc:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
cc	rm.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	rm.asm	/^  cc:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
cc	sh.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	stressfs.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	usertests.asm	/^        cc = sizeof(buf);$/;"	d
cc	usertests.asm	/^      cc = cc * 2;$/;"	d
cc	usertests.asm	/^    cc = 1;$/;"	d
cc	usertests.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	usertests.asm	/^    cc = read(fd, buf, 300);$/;"	d
cc	usertests.asm	/^  cc = read(fd, buf, sizeof(buf));$/;"	d
cc	wc.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	zombie.asm	/^    cc = read(0, &c, 1);$/;"	d
cc0	bad_mmap.asm	/^ cc0:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
cc0	cat.asm	/^ cc0:	48 c1 e0 04          	shl    $0x4,%rax$/;"	l
cc0	ls.asm	/^     cc0:	eb 38                	jmp    cfa <printf+0x373>$/;"	l
cc0	stressfs.asm	/^ cc0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
cc0	wc.asm	/^ cc0:	48 b8 d0 12 00 00 00 	movabs $0x12d0,%rax$/;"	l
cc2	eager_mmap.asm	/^ cc2:	48 b8 70 11 00 00 00 	movabs $0x1170,%rax$/;"	l
cc2	init.asm	/^ cc2:	48 8b 00             	mov    (%rax),%rax$/;"	l
cc2	lazy_mmap.asm	/^ cc2:	48 b8 70 11 00 00 00 	movabs $0x1170,%rax$/;"	l
cc2	ls.asm	/^     cc2:	8b 85 1c ff ff ff    	mov    -0xe4(%rbp),%eax$/;"	l
cc3	bad_mmap.asm	/^ cc3:	3b 45 ec             	cmp    -0x14(%rbp),%eax$/;"	l
cc3	imshow.asm	/^ cc3:	48 01 d0             	add    %rdx,%rax$/;"	l
cc3	sh.asm	/^     cc3:	00 00 00 $/;"	l
cc3	usertests.asm	/^     cc3:	00 00 00 $/;"	l
cc4	cat.asm	/^ cc4:	48 01 45 f8          	add    %rax,-0x8(%rbp)$/;"	l
cc4	stressfs.asm	/^ cc4:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
cc5	grep.asm	/^ cc5:	89 d6                	mov    %edx,%esi$/;"	l
cc5	init.asm	/^ cc5:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)$/;"	l
cc6	bad_mmap.asm	/^ cc6:	75 10                	jne    cd8 <malloc+0xb1>$/;"	l
cc6	imshow.asm	/^ cc6:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax$/;"	l
cc6	sh.asm	/^     cc6:	ff d0                	callq  *%rax$/;"	l
cc6	usertests.asm	/^     cc6:	8b 00                	mov    (%rax),%eax$/;"	l
cc7	grep.asm	/^ cc7:	89 c7                	mov    %eax,%edi$/;"	l
cc7	stressfs.asm	/^ cc7:	89 c0                	mov    %eax,%eax$/;"	l
cc7	wc.asm	/^ cc7:	00 00 00 $/;"	l
cc8	bad_mmap.asm	/^ cc8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
cc8	cat.asm	/^ cc8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
cc8	ls.asm	/^     cc8:	be 25 00 00 00       	mov    $0x25,%esi$/;"	l
cc8	sh.asm	/^     cc8:	89 45 fc             	mov    %eax,-0x4(%rbp)$/;"	l
cc8	usertests.asm	/^     cc8:	48 be 28 6c 00 00 00 	movabs $0x6c28,%rsi$/;"	l
cc9	eager_mmap.asm	/^ cc9:	00 00 00 $/;"	l
cc9	grep.asm	/^ cc9:	48 b8 65 08 00 00 00 	movabs $0x865,%rax$/;"	l
cc9	init.asm	/^ cc9:	75 23                	jne    cee <malloc+0x130>$/;"	l
cc9	lazy_mmap.asm	/^ cc9:	00 00 00 $/;"	l
cc9	stressfs.asm	/^ cc9:	48 c1 e0 04          	shl    $0x4,%rax$/;"	l
cca	imshow.asm	/^ cca:	75 27                	jne    cf3 <free+0x113>$/;"	l
cca	wc.asm	/^ cca:	48 8b 00             	mov    (%rax),%rax$/;"	l
ccb	init.asm	/^ ccb:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
ccb	sh.asm	/^     ccb:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx$/;"	l
ccc	bad_mmap.asm	/^ ccc:	48 8b 10             	mov    (%rax),%rdx$/;"	l
ccc	cat.asm	/^ ccc:	8b 55 ec             	mov    -0x14(%rbp),%edx$/;"	l
ccc	eager_mmap.asm	/^ ccc:	48 8b 10             	mov    (%rax),%rdx$/;"	l
ccc	imshow.asm	/^ ccc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ccc	lazy_mmap.asm	/^ ccc:	48 8b 10             	mov    (%rax),%rdx$/;"	l
ccd	ls.asm	/^     ccd:	89 c7                	mov    %eax,%edi$/;"	l
ccd	stressfs.asm	/^ ccd:	48 01 45 f8          	add    %rax,-0x8(%rbp)$/;"	l
ccd	wc.asm	/^ ccd:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
cce	init.asm	/^ cce:	89 c7                	mov    %eax,%edi$/;"	l
ccf	bad_mmap.asm	/^ ccf:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ccf	cat.asm	/^ ccf:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
ccf	eager_mmap.asm	/^ ccf:	48 b8 60 11 00 00 00 	movabs $0x1160,%rax$/;"	l
ccf	lazy_mmap.asm	/^ ccf:	48 b8 60 11 00 00 00 	movabs $0x1160,%rax$/;"	l
ccf	ls.asm	/^     ccf:	48 b8 8a 08 00 00 00 	movabs $0x88a,%rax$/;"	l
ccf	sh.asm	/^     ccf:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx$/;"	l
ccf	usertests.asm	/^     ccf:	00 00 00 $/;"	l
cd	init.asm	/^  cd:	48 ba 6e 06 00 00 00 	movabs $0x66e,%rdx$/;"	l
cd	kill.asm	/^  cd:	48 89 e5             	mov    %rsp,%rbp$/;"	l
cd	wc.asm	/^  cd:	ff d0                	callq  *%rax$/;"	l
cd	zombie.asm	/^  cd:	84 c0                	test   %al,%al$/;"	l
cd0	grep.asm	/^ cd0:	00 00 00 $/;"	l
cd0	imshow.asm	/^ cd0:	8b 50 08             	mov    0x8(%rax),%edx$/;"	l
cd0	init.asm	/^ cd0:	48 b8 45 0b 00 00 00 	movabs $0xb45,%rax$/;"	l
cd1	stressfs.asm	/^ cd1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
cd1	wc.asm	/^ cd1:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)$/;"	l
cd2	cat.asm	/^ cd2:	48 b8 10 12 00 00 00 	movabs $0x1210,%rax$/;"	l
cd2	usertests.asm	/^     cd2:	89 c7                	mov    %eax,%edi$/;"	l
cd3	bad_mmap.asm	/^ cd3:	48 89 10             	mov    %rdx,(%rax)$/;"	l
cd3	grep.asm	/^ cd3:	ff d0                	callq  *%rax$/;"	l
cd3	imshow.asm	/^ cd3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
cd3	sh.asm	/^     cd3:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi$/;"	l
cd4	usertests.asm	/^     cd4:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
cd5	grep.asm	/^ cd5:	c7 85 40 ff ff ff 00 	movl   $0x0,-0xc0(%rbp)$/;"	l
cd5	stressfs.asm	/^ cd5:	8b 55 ec             	mov    -0x14(%rbp),%edx$/;"	l
cd6	bad_mmap.asm	/^ cd6:	eb 2e                	jmp    d06 <malloc+0xdf>$/;"	l
cd6	eager_mmap.asm	/^ cd6:	00 00 00 $/;"	l
cd6	lazy_mmap.asm	/^ cd6:	00 00 00 $/;"	l
cd6	ls.asm	/^     cd6:	00 00 00 $/;"	l
cd6	wc.asm	/^ cd6:	75 4a                	jne    d22 <malloc+0x7e>$/;"	l
cd7	imshow.asm	/^ cd7:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
cd7	init.asm	/^ cd7:	00 00 00 $/;"	l
cd7	sh.asm	/^     cd7:	48 8b 45 d0          	mov    -0x30(%rbp),%rax$/;"	l
cd8	bad_mmap.asm	/^ cd8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
cd8	stressfs.asm	/^ cd8:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
cd8	wc.asm	/^ cd8:	48 b8 c0 12 00 00 00 	movabs $0x12c0,%rax$/;"	l
cd9	cat.asm	/^ cd9:	00 00 00 $/;"	l
cd9	eager_mmap.asm	/^ cd9:	48 89 10             	mov    %rdx,(%rax)$/;"	l
cd9	lazy_mmap.asm	/^ cd9:	48 89 10             	mov    %rdx,(%rax)$/;"	l
cd9	ls.asm	/^     cd9:	ff d0                	callq  *%rax$/;"	l
cd9	usertests.asm	/^     cd9:	48 ba db 61 00 00 00 	movabs $0x61db,%rdx$/;"	l
cda	imshow.asm	/^ cda:	01 c2                	add    %eax,%edx$/;"	l
cda	init.asm	/^ cda:	ff d0                	callq  *%rax$/;"	l
cdb	ls.asm	/^     cdb:	8b 85 3c ff ff ff    	mov    -0xc4(%rbp),%eax$/;"	l
cdb	sh.asm	/^     cdb:	48 89 c7             	mov    %rax,%rdi$/;"	l
cdb	stressfs.asm	/^ cdb:	48 b8 e0 0f 00 00 00 	movabs $0xfe0,%rax$/;"	l
cdc	bad_mmap.asm	/^ cdc:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
cdc	cat.asm	/^ cdc:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
cdc	eager_mmap.asm	/^ cdc:	48 b8 60 11 00 00 00 	movabs $0x1160,%rax$/;"	l
cdc	grep.asm	/^ cdc:	00 00 00 $/;"	l
cdc	imshow.asm	/^ cdc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
cdc	init.asm	/^ cdc:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
cdc	lazy_mmap.asm	/^ cdc:	48 b8 60 11 00 00 00 	movabs $0x1160,%rax$/;"	l
cde	sh.asm	/^     cde:	48 b8 aa 07 00 00 00 	movabs $0x7aa,%rax$/;"	l
cdf	bad_mmap.asm	/^ cdf:	2b 45 ec             	sub    -0x14(%rbp),%eax$/;"	l
cdf	grep.asm	/^ cdf:	83 85 44 ff ff ff 01 	addl   $0x1,-0xbc(%rbp)$/;"	l
cdf	wc.asm	/^ cdf:	00 00 00 $/;"	l
ce	eager_mmap.asm	/^  ce:	ff d1                	callq  *%rcx$/;"	l
ce	forktest.asm	/^  ce:	89 45 f8             	mov    %eax,-0x8(%rbp)$/;"	l
ce	lazy_mmap.asm	/^  ce:	ff d1                	callq  *%rcx$/;"	l
ce	ls.asm	/^      ce:	ff d0                	callq  *%rax$/;"	l
ce	stressfs.asm	/^  ce:	48 89 c7             	mov    %rax,%rdi$/;"	l
ce0	cat.asm	/^ ce0:	48 89 10             	mov    %rdx,(%rax)$/;"	l
ce0	imshow.asm	/^ ce0:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
ce0	init.asm	/^ ce0:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)$/;"	l
ce0	usertests.asm	/^     ce0:	00 00 00 $/;"	l
ce1	ls.asm	/^     ce1:	0f be d0             	movsbl %al,%edx$/;"	l
ce2	bad_mmap.asm	/^ ce2:	89 c2                	mov    %eax,%edx$/;"	l
ce2	stressfs.asm	/^ ce2:	00 00 00 $/;"	l
ce2	wc.asm	/^ ce2:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ce3	cat.asm	/^ ce3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ce3	eager_mmap.asm	/^ ce3:	00 00 00 $/;"	l
ce3	imshow.asm	/^ ce3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ce3	lazy_mmap.asm	/^ ce3:	00 00 00 $/;"	l
ce3	usertests.asm	/^     ce3:	ff d2                	callq  *%rdx$/;"	l
ce4	bad_mmap.asm	/^ ce4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ce4	ls.asm	/^     ce4:	8b 85 1c ff ff ff    	mov    -0xe4(%rbp),%eax$/;"	l
ce5	init.asm	/^ ce5:	75 07                	jne    cee <malloc+0x130>$/;"	l
ce5	sh.asm	/^     ce5:	00 00 00 $/;"	l
ce5	stressfs.asm	/^ ce5:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
ce5	usertests.asm	/^     ce5:	48 b8 40 a8 00 00 00 	movabs $0xa840,%rax$/;"	l
ce6	eager_mmap.asm	/^ ce6:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%rax)$/;"	l
ce6	grep.asm	/^ ce6:	8b 85 44 ff ff ff    	mov    -0xbc(%rbp),%eax$/;"	l
ce6	lazy_mmap.asm	/^ ce6:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%rax)$/;"	l
ce6	wc.asm	/^ ce6:	48 b8 d0 12 00 00 00 	movabs $0x12d0,%rax$/;"	l
ce7	cat.asm	/^ ce7:	48 83 c0 10          	add    $0x10,%rax$/;"	l
ce7	imshow.asm	/^ ce7:	48 8b 10             	mov    (%rax),%rdx$/;"	l
ce7	init.asm	/^ ce7:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ce8	bad_mmap.asm	/^ ce8:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
ce8	sh.asm	/^     ce8:	ff d0                	callq  *%rax$/;"	l
ce9	stressfs.asm	/^ ce9:	48 89 10             	mov    %rdx,(%rax)$/;"	l
cea	imshow.asm	/^ cea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
cea	ls.asm	/^     cea:	89 d6                	mov    %edx,%esi$/;"	l
cea	sh.asm	/^     cea:	83 f8 61             	cmp    $0x61,%eax$/;"	l
ceb	bad_mmap.asm	/^ ceb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ceb	cat.asm	/^ ceb:	eb 4e                	jmp    d3b <malloc+0x148>$/;"	l
cec	grep.asm	/^ cec:	48 63 d0             	movslq %eax,%rdx$/;"	l
cec	init.asm	/^ cec:	eb 18                	jmp    d06 <malloc+0x148>$/;"	l
cec	ls.asm	/^     cec:	89 c7                	mov    %eax,%edi$/;"	l
cec	stressfs.asm	/^ cec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
cec	usertests.asm	/^     cec:	00 00 00 $/;"	l
ced	cat.asm	/^ ced:	48 b8 10 12 00 00 00 	movabs $0x1210,%rax$/;"	l
ced	eager_mmap.asm	/^ ced:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ced	lazy_mmap.asm	/^ ced:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ced	sh.asm	/^     ced:	74 16                	je     d05 <parseredirs+0x77>$/;"	l
ced	wc.asm	/^ ced:	00 00 00 $/;"	l
cee	imshow.asm	/^ cee:	48 89 10             	mov    %rdx,(%rax)$/;"	l
cee	init.asm	/^ cee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
cee	ls.asm	/^     cee:	48 b8 8a 08 00 00 00 	movabs $0x88a,%rax$/;"	l
cef	bad_mmap.asm	/^ cef:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
cef	grep.asm	/^ cef:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax$/;"	l
cef	sh.asm	/^     cef:	48 bf 17 1e 00 00 00 	movabs $0x1e17,%rdi$/;"	l
cef	usertests.asm	/^     cef:	c6 00 61             	movb   $0x61,(%rax)$/;"	l
cf	cat.asm	/^  cf:	7f 1d                	jg     ee <main+0x32>$/;"	l
cf	echo.asm	/^  cf:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)$/;"	l
cf	imshow.asm	/^  cf:	48 8d 8d f0 fb ff ff 	lea    -0x410(%rbp),%rcx$/;"	l
cf	ln.asm	/^  cf:	8b 45 f4             	mov    -0xc(%rbp),%eax$/;"	l
cf	sh.asm	/^      cf:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
cf	wc.asm	/^  cf:	89 45 e8             	mov    %eax,-0x18(%rbp)$/;"	l
cf	zombie.asm	/^  cf:	74 12                	je     e3 <strcmp+0x39>$/;"	l
cf0	stressfs.asm	/^ cf0:	48 83 c0 10          	add    $0x10,%rax$/;"	l
cf0	wc.asm	/^ cf0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
cf1	eager_mmap.asm	/^ cf1:	48 8b 00             	mov    (%rax),%rax$/;"	l
cf1	imshow.asm	/^ cf1:	eb 0b                	jmp    cfe <free+0x11e>$/;"	l
cf1	lazy_mmap.asm	/^ cf1:	48 8b 00             	mov    (%rax),%rax$/;"	l
cf2	bad_mmap.asm	/^ cf2:	89 c0                	mov    %eax,%eax$/;"	l
cf2	init.asm	/^ cf2:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
cf2	usertests.asm	/^     cf2:	48 b8 40 a8 00 00 00 	movabs $0xa840,%rax$/;"	l
cf3	imshow.asm	/^ cf3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
cf4	bad_mmap.asm	/^ cf4:	48 c1 e0 04          	shl    $0x4,%rax$/;"	l
cf4	cat.asm	/^ cf4:	00 00 00 $/;"	l
cf4	eager_mmap.asm	/^ cf4:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
cf4	lazy_mmap.asm	/^ cf4:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
cf4	stressfs.asm	/^ cf4:	eb 4e                	jmp    d44 <malloc+0x148>$/;"	l
cf4	wc.asm	/^ cf4:	48 89 10             	mov    %rdx,(%rax)$/;"	l
cf5	ls.asm	/^     cf5:	00 00 00 $/;"	l
cf6	grep.asm	/^ cf6:	48 01 d0             	add    %rdx,%rax$/;"	l
cf6	init.asm	/^ cf6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
cf6	sh.asm	/^     cf6:	00 00 00 $/;"	l
cf6	stressfs.asm	/^ cf6:	48 b8 e0 0f 00 00 00 	movabs $0xfe0,%rax$/;"	l
cf7	cat.asm	/^ cf7:	48 8b 00             	mov    (%rax),%rax$/;"	l
cf7	imshow.asm	/^ cf7:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
cf7	wc.asm	/^ cf7:	48 b8 d0 12 00 00 00 	movabs $0x12d0,%rax$/;"	l
cf8	bad_mmap.asm	/^ cf8:	48 01 45 f8          	add    %rax,-0x8(%rbp)$/;"	l
cf8	eager_mmap.asm	/^ cf8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
cf8	lazy_mmap.asm	/^ cf8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
cf8	ls.asm	/^     cf8:	ff d0                	callq  *%rax$/;"	l
cf9	grep.asm	/^ cf9:	0f b6 00             	movzbl (%rax),%eax$/;"	l
cf9	sh.asm	/^     cf9:	48 b8 26 05 00 00 00 	movabs $0x526,%rax$/;"	l
cf9	usertests.asm	/^     cf9:	00 00 00 $/;"	l
cfa	cat.asm	/^ cfa:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)$/;"	l
cfa	init.asm	/^ cfa:	48 8b 00             	mov    (%rax),%rax$/;"	l
cfa	ls.asm	/^     cfa:	c7 85 40 ff ff ff 00 	movl   $0x0,-0xc0(%rbp)$/;"	l
cfb	imshow.asm	/^ cfb:	48 89 10             	mov    %rdx,(%rax)$/;"	l
cfc	bad_mmap.asm	/^ cfc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
cfc	eager_mmap.asm	/^ cfc:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
cfc	grep.asm	/^ cfc:	84 c0                	test   %al,%al$/;"	l
cfc	lazy_mmap.asm	/^ cfc:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
cfc	usertests.asm	/^     cfc:	c6 40 02 00          	movb   $0x0,0x2(%rax)$/;"	l
cfd	init.asm	/^ cfd:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
cfd	stressfs.asm	/^ cfd:	00 00 00 $/;"	l
cfe	cat.asm	/^ cfe:	75 23                	jne    d23 <malloc+0x130>$/;"	l
cfe	grep.asm	/^ cfe:	0f 85 fc fc ff ff    	jne    a00 <printf+0x9e>$/;"	l
cfe	imshow.asm	/^ cfe:	48 b8 30 12 00 00 00 	movabs $0x1230,%rax$/;"	l
cfe	wc.asm	/^ cfe:	00 00 00 $/;"	l
cff	eager_mmap.asm	/^ cff:	3b 45 ec             	cmp    -0x14(%rbp),%eax$/;"	l
cff	lazy_mmap.asm	/^ cff:	3b 45 ec             	cmp    -0x14(%rbp),%eax$/;"	l
cgaputc	console.c	/^cgaputc(int c)$/;"	f	file:
chan	proc.h	/^  void *chan;                  \/\/ If non-zero, sleeping on chan$/;"	m	struct:proc
char	cat.asm	/^char buf[512];$/;"	l
char	grep.asm	/^char buf[1024];$/;"	l
char	init.asm	/^char *argv[] = { "sh", 0 };$/;"	l
char	sh.asm	/^char symbols[] = "<|>&;()";$/;"	l
char	sh.asm	/^char whitespace[] = " \\t\\r\\n\\v";$/;"	l
char	usertests.asm	/^char uninit[10000];$/;"	l
char	wc.asm	/^char buf[512];$/;"	l
checksum	bootmain.c	/^  uint64 checksum;$/;"	m	struct:mbheader	file:
checksum	mp.h	/^  uchar checksum;               \/\/ all bytes must add up to 0$/;"	m	struct:mp
checksum	mp.h	/^  uchar checksum;               \/\/ all bytes must add up to 0$/;"	m	struct:mpconf
clearpteu	vm.c	/^clearpteu(pde_t *pgdir, char *uva)$/;"	f
cli	x86.h	/^cli(void)$/;"	f
cmd	sh.asm	/^      cmd = redircmd(cmd, q, eq, O_RDONLY, 0);$/;"	d
cmd	sh.asm	/^      cmd = redircmd(cmd, q, eq, O_WRONLY|O_CREATE, 1);$/;"	d
cmd	sh.asm	/^    cmd = backcmd(cmd);$/;"	d
cmd	sh.asm	/^    cmd = listcmd(cmd, parseline(ps, es));$/;"	d
cmd	sh.asm	/^    cmd = pipecmd(cmd, parsepipe(ps, es));$/;"	d
cmd	sh.asm	/^  cmd = (struct execcmd*)ret;$/;"	d
cmd	sh.asm	/^  cmd = malloc(sizeof(*cmd));$/;"	d
cmd	sh.asm	/^  cmd = parseexec(ps, es);$/;"	d
cmd	sh.asm	/^  cmd = parseline(&s, es);$/;"	d
cmd	sh.asm	/^  cmd = parseline(ps, es);$/;"	d
cmd	sh.asm	/^  cmd = parsepipe(ps, es);$/;"	d
cmd	sh.asm	/^  cmd = parseredirs(cmd, ps, es);$/;"	d
cmd	sh.c	/^  struct cmd *cmd;$/;"	m	struct:backcmd	typeref:struct:backcmd::cmd	file:
cmd	sh.c	/^  struct cmd *cmd;$/;"	m	struct:redircmd	typeref:struct:redircmd::cmd	file:
cmd	sh.c	/^struct cmd {$/;"	s	file:
cmos_read	lapic.c	/^static uint cmos_read(uint reg)$/;"	f	file:
cmostime	lapic.c	/^void cmostime(struct rtcdate *r)$/;"	f
code	kernel.asm	/^  code = P2V(0x7000);$/;"	d
commit	log.c	/^commit()$/;"	f	file:
committing	log.c	/^  int committing;  \/\/ in commit(), please wait.$/;"	m	struct:log	file:
concreate	usertests.c	/^concreate(void)$/;"	f
conf	kernel.asm	/^  conf = (struct mpconf*) P2V((addr_t) mp->physaddr);$/;"	d
cons	console.c	/^} cons;$/;"	v	typeref:struct:__anon7	file:
consoleinit	console.c	/^consoleinit(void)$/;"	f
consoleintr	console.c	/^consoleintr(int (*getc)(void))$/;"	f
consoleread	console.c	/^consoleread(struct inode *ip, char *dst, int n)$/;"	f
consolewrite	console.c	/^consolewrite(struct inode *ip, char *buf, int n)$/;"	f
consputc	console.c	/^consputc(int c)$/;"	f
contentBuf	display.c	/^ushort contentBuf[2000];$/;"	v
context	proc.h	/^  struct context *context;     \/\/ swtch() here to run process$/;"	m	struct:proc	typeref:struct:proc::context
context	proc.h	/^struct context {$/;"	s
copyout	vm.c	/^copyout(pde_t *pgdir, uint va, void *p, uint len)$/;"	f
copyuvm	vm.c	/^copyuvm(pde_t *pgdir, uint sz)$/;"	f
cprintf	console.c	/^cprintf(char *fmt, ...)$/;"	f
cpu	kernel.asm	/^  cpu = c;$/;"	d
cpu	proc.h	/^struct cpu {$/;"	s
cpu	spinlock.h	/^  struct cpu *cpu;   \/\/ The cpu holding the lock.$/;"	m	struct:spinlock	typeref:struct:spinlock::cpu
cpu	vm.c	/^__thread struct cpu *cpu;$/;"	v	typeref:struct:cpu
cpunum	lapic.c	/^cpunum(void)$/;"	f
cpus	mp.c	/^struct cpu cpus[NCPU];$/;"	v	typeref:struct:cpu
cr3	mmu.h	/^  void *cr3;         \/\/ Page directory base$/;"	m	struct:taskstate
create	sysfile.c	/^create(char *path, short type, short major, short minor)$/;"	f	file:
createdelete	usertests.c	/^createdelete(void)$/;"	f
createtest	usertests.c	/^createtest(void)$/;"	f
crt	console.c	/^static ushort *crt = (ushort*)P2V(0xb8000);  \/\/ CGA memory$/;"	v	file:
crt	display.c	/^static ushort *crt = (ushort*)P2V(0xb8000);$/;"	v	file:
cs	mmu.h	/^  uint cs : 16;         \/\/ code segment selector$/;"	m	struct:gatedesc
cs	mmu.h	/^  ushort cs;$/;"	m	struct:taskstate
cs	x86.h	/^   uint64 cs;$/;"	m	struct:trapframe
ctlmap	kbd.h	/^static uchar ctlmap[256] =$/;"	v
curPosition	display.c	/^int curPosition = 0;$/;"	v
curPosition	kernel.asm	/^	curPosition = inb(CRTPORT+1)<<8;$/;"	d
cwd	proc.h	/^  struct inode *cwd;           \/\/ Current directory$/;"	m	struct:proc	typeref:struct:proc::inode
d	cat.asm	/^   d:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
d	init.asm	/^   d:	48 bf 0b 0d 00 00 00 	movabs $0xd0b,%rdi$/;"	l
d	kernel.asm	/^  d = dst;$/;"	d
d	ls.asm	/^       d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
d0	eager_mmap.asm	/^  d0:	48 be 52 0e 00 00 00 	movabs $0xe52,%rsi$/;"	l
d0	kill.asm	/^  d0:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
d0	lazy_mmap.asm	/^  d0:	48 be 52 0e 00 00 00 	movabs $0xe52,%rsi$/;"	l
d0	ls.asm	/^      d0:	89 c2                	mov    %eax,%edx$/;"	l
d0	mkdir.asm	/^  d0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)$/;"	l
d0	rm.asm	/^  d0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)$/;"	l
d00	bad_mmap.asm	/^ d00:	8b 55 ec             	mov    -0x14(%rbp),%edx$/;"	l
d00	cat.asm	/^ d00:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
d00	sh.asm	/^     d00:	00 00 00 $/;"	l
d00	stressfs.asm	/^ d00:	48 8b 00             	mov    (%rax),%rax$/;"	l
d00	usertests.asm	/^     d00:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)$/;"	l
d01	init.asm	/^ d01:	e9 41 ff ff ff       	jmpq   c47 <malloc+0x89>$/;"	l
d01	ls.asm	/^     d01:	00 00 00 $/;"	l
d01	wc.asm	/^ d01:	48 8b 10             	mov    (%rax),%rdx$/;"	l
d02	eager_mmap.asm	/^ d02:	72 65                	jb     d69 <malloc+0xfa>$/;"	l
d02	lazy_mmap.asm	/^ d02:	72 65                	jb     d69 <malloc+0xfa>$/;"	l
d03	bad_mmap.asm	/^ d03:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
d03	cat.asm	/^ d03:	89 c7                	mov    %eax,%edi$/;"	l
d03	sh.asm	/^     d03:	ff d0                	callq  *%rax$/;"	l
d03	stressfs.asm	/^ d03:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)$/;"	l
d04	eager_mmap.asm	/^ d04:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
d04	grep.asm	/^ d04:	90                   	nop$/;"	l
d04	lazy_mmap.asm	/^ d04:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
d04	ls.asm	/^     d04:	83 85 44 ff ff ff 01 	addl   $0x1,-0xbc(%rbp)$/;"	l
d04	wc.asm	/^ d04:	48 b8 c0 12 00 00 00 	movabs $0x12c0,%rax$/;"	l
d05	cat.asm	/^ d05:	48 b8 7a 0b 00 00 00 	movabs $0xb7a,%rax$/;"	l
d05	grep.asm	/^ d05:	c9                   	leaveq $/;"	l
d05	imshow.asm	/^ d05:	00 00 00 $/;"	l
d05	sh.asm	/^     d05:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
d06	bad_mmap.asm	/^ d06:	48 b8 40 11 00 00 00 	movabs $0x1140,%rax$/;"	l
d06	grep.asm	/^ d06:	c3                   	retq   $/;"	l
d06	init.asm	/^ d06:	c9                   	leaveq $/;"	l
d07	grep.asm	/^ d07:	55                   	push   %rbp$/;"	l
d07	init.asm	/^ d07:	c3                   	retq   $/;"	l
d07	stressfs.asm	/^ d07:	75 23                	jne    d2c <malloc+0x130>$/;"	l
d07	usertests.asm	/^     d07:	eb 48                	jmp    d51 <createtest+0x9d>$/;"	l
d08	eager_mmap.asm	/^ d08:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
d08	grep.asm	/^ d08:	48 89 e5             	mov    %rsp,%rbp$/;"	l
d08	imshow.asm	/^ d08:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx$/;"	l
d08	lazy_mmap.asm	/^ d08:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
d08	sh.asm	/^     d08:	83 f8 3c             	cmp    $0x3c,%eax$/;"	l
d09	stressfs.asm	/^ d09:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
d09	usertests.asm	/^     d09:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
d0b	eager_mmap.asm	/^ d0b:	3b 45 ec             	cmp    -0x14(%rbp),%eax$/;"	l
d0b	grep.asm	/^ d0b:	48 83 ec 18          	sub    $0x18,%rsp$/;"	l
d0b	lazy_mmap.asm	/^ d0b:	3b 45 ec             	cmp    -0x14(%rbp),%eax$/;"	l
d0b	ls.asm	/^     d0b:	8b 85 44 ff ff ff    	mov    -0xbc(%rbp),%eax$/;"	l
d0b	sh.asm	/^     d0b:	74 0f                	je     d1c <parseredirs+0x8e>$/;"	l
d0b	wc.asm	/^ d0b:	00 00 00 $/;"	l
d0c	cat.asm	/^ d0c:	00 00 00 $/;"	l
d0c	imshow.asm	/^ d0c:	48 89 10             	mov    %rdx,(%rax)$/;"	l
d0c	stressfs.asm	/^ d0c:	89 c7                	mov    %eax,%edi$/;"	l
d0c	usertests.asm	/^     d0c:	83 c0 30             	add    $0x30,%eax$/;"	l
d0d	bad_mmap.asm	/^ d0d:	00 00 00 $/;"	l
d0d	sh.asm	/^     d0d:	83 f8 3e             	cmp    $0x3e,%eax$/;"	l
d0e	eager_mmap.asm	/^ d0e:	75 10                	jne    d20 <malloc+0xb1>$/;"	l
d0e	lazy_mmap.asm	/^ d0e:	75 10                	jne    d20 <malloc+0xb1>$/;"	l
d0e	stressfs.asm	/^ d0e:	48 b8 83 0b 00 00 00 	movabs $0xb83,%rax$/;"	l
d0e	wc.asm	/^ d0e:	48 89 10             	mov    %rdx,(%rax)$/;"	l
d0f	cat.asm	/^ d0f:	ff d0                	callq  *%rax$/;"	l
d0f	grep.asm	/^ d0f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
d0f	imshow.asm	/^ d0f:	90                   	nop$/;"	l
d0f	usertests.asm	/^     d0f:	89 c2                	mov    %eax,%edx$/;"	l
d1	bad_mmap.asm	/^  d1:	00 00 00 $/;"	l
d1	cat.asm	/^  d1:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
d1	forktest.asm	/^  d1:	83 7d f8 00          	cmpl   $0x0,-0x8(%rbp)$/;"	l
d1	stressfs.asm	/^  d1:	48 b8 23 05 00 00 00 	movabs $0x523,%rax$/;"	l
d1	zombie.asm	/^  d1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
d10	bad_mmap.asm	/^ d10:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
d10	eager_mmap.asm	/^ d10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
d10	imshow.asm	/^ d10:	c9                   	leaveq $/;"	l
d10	lazy_mmap.asm	/^ d10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
d10	sh.asm	/^     d10:	74 36                	je     d48 <parseredirs+0xba>$/;"	l
d11	cat.asm	/^ d11:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
d11	imshow.asm	/^ d11:	c3                   	retq   $/;"	l
d11	ls.asm	/^     d11:	48 63 d0             	movslq %eax,%rdx$/;"	l
d11	usertests.asm	/^     d11:	48 b8 40 a8 00 00 00 	movabs $0xa840,%rax$/;"	l
d11	wc.asm	/^ d11:	48 b8 c0 12 00 00 00 	movabs $0x12c0,%rax$/;"	l
d12	imshow.asm	/^ d12:	55                   	push   %rbp$/;"	l
d12	sh.asm	/^     d12:	83 f8 2b             	cmp    $0x2b,%eax$/;"	l
d13	grep.asm	/^ d13:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
d13	imshow.asm	/^ d13:	48 89 e5             	mov    %rsp,%rbp$/;"	l
d14	bad_mmap.asm	/^ d14:	48 89 10             	mov    %rdx,(%rax)$/;"	l
d14	eager_mmap.asm	/^ d14:	48 8b 10             	mov    (%rax),%rdx$/;"	l
d14	lazy_mmap.asm	/^ d14:	48 8b 10             	mov    (%rax),%rdx$/;"	l
d14	ls.asm	/^     d14:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax$/;"	l
d15	cat.asm	/^ d15:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)$/;"	l
d15	sh.asm	/^     d15:	74 5d                	je     d74 <parseredirs+0xe6>$/;"	l
d15	stressfs.asm	/^ d15:	00 00 00 $/;"	l
d16	imshow.asm	/^ d16:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
d17	bad_mmap.asm	/^ d17:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
d17	eager_mmap.asm	/^ d17:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
d17	grep.asm	/^ d17:	48 83 e8 10          	sub    $0x10,%rax$/;"	l
d17	lazy_mmap.asm	/^ d17:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
d17	sh.asm	/^     d17:	e9 83 00 00 00       	jmpq   d9f <parseredirs+0x111>$/;"	l
d18	stressfs.asm	/^ d18:	ff d0                	callq  *%rax$/;"	l
d18	usertests.asm	/^     d18:	00 00 00 $/;"	l
d18	wc.asm	/^ d18:	00 00 00 $/;"	l
d1a	cat.asm	/^ d1a:	75 07                	jne    d23 <malloc+0x130>$/;"	l
d1a	imshow.asm	/^ d1a:	89 7d ec             	mov    %edi,-0x14(%rbp)$/;"	l
d1a	stressfs.asm	/^ d1a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
d1b	bad_mmap.asm	/^ d1b:	48 83 c0 10          	add    $0x10,%rax$/;"	l
d1b	eager_mmap.asm	/^ d1b:	48 89 10             	mov    %rdx,(%rax)$/;"	l
d1b	grep.asm	/^ d1b:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
d1b	lazy_mmap.asm	/^ d1b:	48 89 10             	mov    %rdx,(%rax)$/;"	l
d1b	ls.asm	/^     d1b:	48 01 d0             	add    %rdx,%rax$/;"	l
d1b	usertests.asm	/^     d1b:	88 50 01             	mov    %dl,0x1(%rax)$/;"	l
d1b	wc.asm	/^ d1b:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%rax)$/;"	l
d1c	cat.asm	/^ d1c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
d1c	sh.asm	/^     d1c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx$/;"	l
d1d	imshow.asm	/^ d1d:	81 7d ec ff 0f 00 00 	cmpl   $0xfff,-0x14(%rbp)$/;"	l
d1e	eager_mmap.asm	/^ d1e:	eb 2e                	jmp    d4e <malloc+0xdf>$/;"	l
d1e	lazy_mmap.asm	/^ d1e:	eb 2e                	jmp    d4e <malloc+0xdf>$/;"	l
d1e	ls.asm	/^     d1e:	0f b6 00             	movzbl (%rax),%eax$/;"	l
d1e	stressfs.asm	/^ d1e:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)$/;"	l
d1e	usertests.asm	/^     d1e:	be 02 02 00 00       	mov    $0x202,%esi$/;"	l
d1f	bad_mmap.asm	/^ d1f:	eb 4e                	jmp    d6f <malloc+0x148>$/;"	l
d1f	grep.asm	/^ d1f:	48 b8 30 17 00 00 00 	movabs $0x1730,%rax$/;"	l
d2	grep.asm	/^  d2:	48 b8 20 13 00 00 00 	movabs $0x1320,%rax$/;"	l
d2	ln.asm	/^  d2:	48 89 ce             	mov    %rcx,%rsi$/;"	l
d2	ls.asm	/^      d2:	48 b8 30 13 00 00 00 	movabs $0x1330,%rax$/;"	l
d2	usertests.asm	/^      d2:	00 00 00 $/;"	l
d2	wc.asm	/^  d2:	83 7d e8 00          	cmpl   $0x0,-0x18(%rbp)$/;"	l
d20	eager_mmap.asm	/^ d20:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
d20	lazy_mmap.asm	/^ d20:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
d20	sh.asm	/^     d20:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi$/;"	l
d21	bad_mmap.asm	/^ d21:	48 b8 40 11 00 00 00 	movabs $0x1140,%rax$/;"	l
d21	cat.asm	/^ d21:	eb 18                	jmp    d3b <malloc+0x148>$/;"	l
d21	ls.asm	/^     d21:	84 c0                	test   %al,%al$/;"	l
d22	wc.asm	/^ d22:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
d23	cat.asm	/^ d23:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
d23	ls.asm	/^     d23:	0f 85 fc fc ff ff    	jne    a25 <printf+0x9e>$/;"	l
d23	stressfs.asm	/^ d23:	75 07                	jne    d2c <malloc+0x130>$/;"	l
d23	usertests.asm	/^     d23:	48 bf 40 a8 00 00 00 	movabs $0xa840,%rdi$/;"	l
d24	eager_mmap.asm	/^ d24:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
d24	imshow.asm	/^ d24:	77 07                	ja     d2d <morecore+0x1b>$/;"	l
d24	lazy_mmap.asm	/^ d24:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
d24	sh.asm	/^     d24:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
d25	stressfs.asm	/^ d25:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
d26	grep.asm	/^ d26:	00 00 00 $/;"	l
d26	imshow.asm	/^ d26:	c7 45 ec 00 10 00 00 	movl   $0x1000,-0x14(%rbp)$/;"	l
d26	wc.asm	/^ d26:	48 8b 00             	mov    (%rax),%rax$/;"	l
d27	cat.asm	/^ d27:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
d27	eager_mmap.asm	/^ d27:	2b 45 ec             	sub    -0x14(%rbp),%eax$/;"	l
d27	lazy_mmap.asm	/^ d27:	2b 45 ec             	sub    -0x14(%rbp),%eax$/;"	l
d28	bad_mmap.asm	/^ d28:	00 00 00 $/;"	l
d28	sh.asm	/^     d28:	41 b8 00 00 00 00    	mov    $0x0,%r8d$/;"	l
d29	grep.asm	/^ d29:	48 8b 00             	mov    (%rax),%rax$/;"	l
d29	ls.asm	/^     d29:	90                   	nop$/;"	l
d29	wc.asm	/^ d29:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
d2a	eager_mmap.asm	/^ d2a:	89 c2                	mov    %eax,%edx$/;"	l
d2a	lazy_mmap.asm	/^ d2a:	89 c2                	mov    %eax,%edx$/;"	l
d2a	ls.asm	/^     d2a:	c9                   	leaveq $/;"	l
d2a	stressfs.asm	/^ d2a:	eb 18                	jmp    d44 <malloc+0x148>$/;"	l
d2a	usertests.asm	/^     d2a:	00 00 00 $/;"	l
d2b	bad_mmap.asm	/^ d2b:	48 8b 00             	mov    (%rax),%rax$/;"	l
d2b	cat.asm	/^ d2b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
d2b	ls.asm	/^     d2b:	c3                   	retq   $/;"	l
d2c	eager_mmap.asm	/^ d2c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
d2c	grep.asm	/^ d2c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
d2c	lazy_mmap.asm	/^ d2c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
d2c	ls.asm	/^     d2c:	55                   	push   %rbp$/;"	l
d2c	stressfs.asm	/^ d2c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
d2d	imshow.asm	/^ d2d:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
d2d	ls.asm	/^     d2d:	48 89 e5             	mov    %rsp,%rbp$/;"	l
d2d	usertests.asm	/^     d2d:	48 b8 52 60 00 00 00 	movabs $0x6052,%rax$/;"	l
d2d	wc.asm	/^ d2d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
d2e	bad_mmap.asm	/^ d2e:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)$/;"	l
d2e	sh.asm	/^     d2e:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
d2f	cat.asm	/^ d2f:	48 8b 00             	mov    (%rax),%rax$/;"	l
d3	echo.asm	/^  d3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
d3	sh.asm	/^      d3:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
d30	eager_mmap.asm	/^ d30:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
d30	grep.asm	/^ d30:	eb 2f                	jmp    d61 <free+0x5a>$/;"	l
d30	imshow.asm	/^ d30:	c1 e0 04             	shl    $0x4,%eax$/;"	l
d30	lazy_mmap.asm	/^ d30:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
d30	ls.asm	/^     d30:	48 83 ec 18          	sub    $0x18,%rsp$/;"	l
d30	stressfs.asm	/^ d30:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
d31	wc.asm	/^ d31:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
d32	bad_mmap.asm	/^ d32:	75 23                	jne    d57 <malloc+0x130>$/;"	l
d32	cat.asm	/^ d32:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
d32	grep.asm	/^ d32:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
d33	eager_mmap.asm	/^ d33:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
d33	imshow.asm	/^ d33:	89 c7                	mov    %eax,%edi$/;"	l
d33	lazy_mmap.asm	/^ d33:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
d33	sh.asm	/^     d33:	48 89 c7             	mov    %rax,%rdi$/;"	l
d34	bad_mmap.asm	/^ d34:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
d34	ls.asm	/^     d34:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
d34	stressfs.asm	/^ d34:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
d34	usertests.asm	/^     d34:	00 00 00 $/;"	l
d34	wc.asm	/^ d34:	3b 45 ec             	cmp    -0x14(%rbp),%eax$/;"	l
d35	imshow.asm	/^ d35:	48 b8 0c 07 00 00 00 	movabs $0x70c,%rax$/;"	l
d36	cat.asm	/^ d36:	e9 41 ff ff ff       	jmpq   c7c <malloc+0x89>$/;"	l
d36	grep.asm	/^ d36:	48 8b 00             	mov    (%rax),%rax$/;"	l
d36	sh.asm	/^     d36:	48 b8 e7 05 00 00 00 	movabs $0x5e7,%rax$/;"	l
d37	bad_mmap.asm	/^ d37:	89 c7                	mov    %eax,%edi$/;"	l
d37	eager_mmap.asm	/^ d37:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
d37	lazy_mmap.asm	/^ d37:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
d37	usertests.asm	/^     d37:	ff d0                	callq  *%rax$/;"	l
d37	wc.asm	/^ d37:	72 65                	jb     d9e <malloc+0xfa>$/;"	l
d38	ls.asm	/^     d38:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
d38	stressfs.asm	/^ d38:	48 8b 00             	mov    (%rax),%rax$/;"	l
d39	bad_mmap.asm	/^ d39:	48 b8 ae 0b 00 00 00 	movabs $0xbae,%rax$/;"	l
d39	grep.asm	/^ d39:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax$/;"	l
d39	usertests.asm	/^     d39:	89 45 f8             	mov    %eax,-0x8(%rbp)$/;"	l
d39	wc.asm	/^ d39:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
d3a	eager_mmap.asm	/^ d3a:	89 c0                	mov    %eax,%eax$/;"	l
d3a	lazy_mmap.asm	/^ d3a:	89 c0                	mov    %eax,%eax$/;"	l
d3b	cat.asm	/^ d3b:	c9                   	leaveq $/;"	l
d3b	stressfs.asm	/^ d3b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
d3c	cat.asm	/^ d3c:	c3                   	retq   $/;"	l
d3c	eager_mmap.asm	/^ d3c:	48 c1 e0 04          	shl    $0x4,%rax$/;"	l
d3c	imshow.asm	/^ d3c:	00 00 00 $/;"	l
d3c	lazy_mmap.asm	/^ d3c:	48 c1 e0 04          	shl    $0x4,%rax$/;"	l
d3c	ls.asm	/^     d3c:	48 83 e8 10          	sub    $0x10,%rax$/;"	l
d3c	usertests.asm	/^     d3c:	8b 45 f8             	mov    -0x8(%rbp),%eax$/;"	l
d3d	grep.asm	/^ d3d:	77 17                	ja     d56 <free+0x4f>$/;"	l
d3d	sh.asm	/^     d3d:	00 00 00 $/;"	l
d3d	wc.asm	/^ d3d:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
d3f	grep.asm	/^ d3f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
d3f	imshow.asm	/^ d3f:	ff d0                	callq  *%rax$/;"	l
d3f	stressfs.asm	/^ d3f:	e9 41 ff ff ff       	jmpq   c85 <malloc+0x89>$/;"	l
d3f	usertests.asm	/^     d3f:	89 c7                	mov    %eax,%edi$/;"	l
d4	bad_mmap.asm	/^  d4:	bf 01 00 00 00       	mov    $0x1,%edi$/;"	l
d4	init.asm	/^  d4:	00 00 00 $/;"	l
d4	kill.asm	/^  d4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
d4	mkdir.asm	/^  d4:	89 75 f4             	mov    %esi,-0xc(%rbp)$/;"	l
d4	rm.asm	/^  d4:	89 75 f4             	mov    %esi,-0xc(%rbp)$/;"	l
d40	bad_mmap.asm	/^ d40:	00 00 00 $/;"	l
d40	eager_mmap.asm	/^ d40:	48 01 45 f8          	add    %rax,-0x8(%rbp)$/;"	l
d40	lazy_mmap.asm	/^ d40:	48 01 45 f8          	add    %rax,-0x8(%rbp)$/;"	l
d40	ls.asm	/^     d40:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
d40	sh.asm	/^     d40:	ff d0                	callq  *%rax$/;"	l
d40	wc.asm	/^ d40:	3b 45 ec             	cmp    -0x14(%rbp),%eax$/;"	l
d41	imshow.asm	/^ d41:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
d41	usertests.asm	/^     d41:	48 b8 34 60 00 00 00 	movabs $0x6034,%rax$/;"	l
d42	sh.asm	/^     d42:	48 89 45 d8          	mov    %rax,-0x28(%rbp)$/;"	l
d43	bad_mmap.asm	/^ d43:	ff d0                	callq  *%rax$/;"	l
d43	grep.asm	/^ d43:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax$/;"	l
d43	wc.asm	/^ d43:	75 10                	jne    d55 <malloc+0xb1>$/;"	l
d44	eager_mmap.asm	/^ d44:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
d44	lazy_mmap.asm	/^ d44:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
d44	ls.asm	/^     d44:	48 b8 50 13 00 00 00 	movabs $0x1350,%rax$/;"	l
d44	stressfs.asm	/^ d44:	c9                   	leaveq $/;"	l
d45	bad_mmap.asm	/^ d45:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
d45	imshow.asm	/^ d45:	48 83 7d f8 ff       	cmpq   $0xffffffffffffffff,-0x8(%rbp)$/;"	l
d45	stressfs.asm	/^ d45:	c3                   	retq   $/;"	l
d45	wc.asm	/^ d45:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
d46	sh.asm	/^     d46:	eb 57                	jmp    d9f <parseredirs+0x111>$/;"	l
d47	grep.asm	/^ d47:	77 2f                	ja     d78 <free+0x71>$/;"	l
d48	eager_mmap.asm	/^ d48:	8b 55 ec             	mov    -0x14(%rbp),%edx$/;"	l
d48	lazy_mmap.asm	/^ d48:	8b 55 ec             	mov    -0x14(%rbp),%edx$/;"	l
d48	sh.asm	/^     d48:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx$/;"	l
d48	usertests.asm	/^     d48:	00 00 00 $/;"	l
d49	bad_mmap.asm	/^ d49:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)$/;"	l
d49	grep.asm	/^ d49:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
d49	wc.asm	/^ d49:	48 8b 10             	mov    (%rax),%rdx$/;"	l
d4a	imshow.asm	/^ d4a:	75 07                	jne    d53 <morecore+0x41>$/;"	l
d4b	eager_mmap.asm	/^ d4b:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
d4b	lazy_mmap.asm	/^ d4b:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
d4b	ls.asm	/^     d4b:	00 00 00 $/;"	l
d4b	usertests.asm	/^     d4b:	ff d0                	callq  *%rax$/;"	l
d4c	imshow.asm	/^ d4c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
d4c	sh.asm	/^     d4c:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi$/;"	l
d4c	wc.asm	/^ d4c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
d4d	grep.asm	/^ d4d:	48 8b 00             	mov    (%rax),%rax$/;"	l
d4d	usertests.asm	/^     d4d:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)$/;"	l
d4e	bad_mmap.asm	/^ d4e:	75 07                	jne    d57 <malloc+0x130>$/;"	l
d4e	eager_mmap.asm	/^ d4e:	48 b8 70 11 00 00 00 	movabs $0x1170,%rax$/;"	l
d4e	lazy_mmap.asm	/^ d4e:	48 b8 70 11 00 00 00 	movabs $0x1170,%rax$/;"	l
d4e	ls.asm	/^     d4e:	48 8b 00             	mov    (%rax),%rax$/;"	l
d5	forktest.asm	/^  d5:	78 21                	js     f8 <forktest+0x67>$/;"	l
d5	ln.asm	/^  d5:	48 89 f7             	mov    %rsi,%rdi$/;"	l
d5	usertests.asm	/^      d5:	48 b8 66 60 00 00 00 	movabs $0x6066,%rax$/;"	l
d5	zombie.asm	/^  d5:	0f b6 10             	movzbl (%rax),%edx$/;"	l
d50	bad_mmap.asm	/^ d50:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
d50	grep.asm	/^ d50:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax$/;"	l
d50	sh.asm	/^     d50:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
d50	wc.asm	/^ d50:	48 89 10             	mov    %rdx,(%rax)$/;"	l
d51	imshow.asm	/^ d51:	eb 36                	jmp    d89 <morecore+0x77>$/;"	l
d51	ls.asm	/^     d51:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
d51	usertests.asm	/^     d51:	83 7d fc 33          	cmpl   $0x33,-0x4(%rbp)$/;"	l
d53	imshow.asm	/^ d53:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
d53	wc.asm	/^ d53:	eb 2e                	jmp    d83 <malloc+0xdf>$/;"	l
d54	grep.asm	/^ d54:	77 22                	ja     d78 <free+0x71>$/;"	l
d54	sh.asm	/^     d54:	41 b8 01 00 00 00    	mov    $0x1,%r8d$/;"	l
d55	bad_mmap.asm	/^ d55:	eb 18                	jmp    d6f <malloc+0x148>$/;"	l
d55	eager_mmap.asm	/^ d55:	00 00 00 $/;"	l
d55	lazy_mmap.asm	/^ d55:	00 00 00 $/;"	l
d55	ls.asm	/^     d55:	eb 2f                	jmp    d86 <free+0x5a>$/;"	l
d55	usertests.asm	/^     d55:	7e b2                	jle    d09 <createtest+0x55>$/;"	l
d55	wc.asm	/^ d55:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
d56	grep.asm	/^ d56:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
d57	bad_mmap.asm	/^ d57:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
d57	imshow.asm	/^ d57:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
d57	ls.asm	/^     d57:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
d57	usertests.asm	/^     d57:	48 b8 40 a8 00 00 00 	movabs $0xa840,%rax$/;"	l
d58	eager_mmap.asm	/^ d58:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
d58	lazy_mmap.asm	/^ d58:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
d59	wc.asm	/^ d59:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
d5a	grep.asm	/^ d5a:	48 8b 00             	mov    (%rax),%rax$/;"	l
d5a	sh.asm	/^     d5a:	b9 01 02 00 00       	mov    $0x201,%ecx$/;"	l
d5b	bad_mmap.asm	/^ d5b:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
d5b	imshow.asm	/^ d5b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
d5b	ls.asm	/^     d5b:	48 8b 00             	mov    (%rax),%rax$/;"	l
d5c	eager_mmap.asm	/^ d5c:	48 89 10             	mov    %rdx,(%rax)$/;"	l
d5c	lazy_mmap.asm	/^ d5c:	48 89 10             	mov    %rdx,(%rax)$/;"	l
d5c	wc.asm	/^ d5c:	2b 45 ec             	sub    -0x14(%rbp),%eax$/;"	l
d5d	grep.asm	/^ d5d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
d5e	ls.asm	/^     d5e:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax$/;"	l
d5e	usertests.asm	/^     d5e:	00 00 00 $/;"	l
d5f	bad_mmap.asm	/^ d5f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
d5f	eager_mmap.asm	/^ d5f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
d5f	imshow.asm	/^ d5f:	8b 55 ec             	mov    -0x14(%rbp),%edx$/;"	l
d5f	lazy_mmap.asm	/^ d5f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
d5f	sh.asm	/^     d5f:	48 89 c7             	mov    %rax,%rdi$/;"	l
d5f	wc.asm	/^ d5f:	89 c2                	mov    %eax,%edx$/;"	l
d6	cat.asm	/^  d6:	48 b8 00 00 00 00 00 	movabs $0x0,%rax$/;"	l
d6	imshow.asm	/^  d6:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
d6	wc.asm	/^  d6:	0f 8f 52 ff ff ff    	jg     2e <wc+0x2e>$/;"	l
d61	grep.asm	/^ d61:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
d61	usertests.asm	/^     d61:	c6 00 61             	movb   $0x61,(%rax)$/;"	l
d61	wc.asm	/^ d61:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
d62	imshow.asm	/^ d62:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
d62	ls.asm	/^     d62:	77 17                	ja     d7b <free+0x4f>$/;"	l
d62	sh.asm	/^     d62:	48 b8 e7 05 00 00 00 	movabs $0x5e7,%rax$/;"	l
d63	bad_mmap.asm	/^ d63:	48 8b 00             	mov    (%rax),%rax$/;"	l
d63	eager_mmap.asm	/^ d63:	48 83 c0 10          	add    $0x10,%rax$/;"	l
d63	lazy_mmap.asm	/^ d63:	48 83 c0 10          	add    $0x10,%rax$/;"	l
d64	ls.asm	/^     d64:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
d64	usertests.asm	/^     d64:	48 b8 40 a8 00 00 00 	movabs $0xa840,%rax$/;"	l
d65	grep.asm	/^ d65:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax$/;"	l
d65	imshow.asm	/^ d65:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
d65	wc.asm	/^ d65:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
d66	bad_mmap.asm	/^ d66:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
d67	eager_mmap.asm	/^ d67:	eb 4e                	jmp    db7 <malloc+0x148>$/;"	l
d67	lazy_mmap.asm	/^ d67:	eb 4e                	jmp    db7 <malloc+0x148>$/;"	l
d68	ls.asm	/^     d68:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax$/;"	l
d68	wc.asm	/^ d68:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
d69	eager_mmap.asm	/^ d69:	48 b8 70 11 00 00 00 	movabs $0x1170,%rax$/;"	l
d69	grep.asm	/^ d69:	76 c7                	jbe    d32 <free+0x2b>$/;"	l
d69	imshow.asm	/^ d69:	48 83 c0 10          	add    $0x10,%rax$/;"	l
d69	lazy_mmap.asm	/^ d69:	48 b8 70 11 00 00 00 	movabs $0x1170,%rax$/;"	l
d69	sh.asm	/^     d69:	00 00 00 $/;"	l
d6a	bad_mmap.asm	/^ d6a:	e9 41 ff ff ff       	jmpq   cb0 <malloc+0x89>$/;"	l
d6b	grep.asm	/^ d6b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
d6b	usertests.asm	/^     d6b:	00 00 00 $/;"	l
d6c	ls.asm	/^     d6c:	77 2f                	ja     d9d <free+0x71>$/;"	l
d6c	sh.asm	/^     d6c:	ff d0                	callq  *%rax$/;"	l
d6c	wc.asm	/^ d6c:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
d6d	imshow.asm	/^ d6d:	48 89 c7             	mov    %rax,%rdi$/;"	l
d6e	ls.asm	/^     d6e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
d6e	sh.asm	/^     d6e:	48 89 45 d8          	mov    %rax,-0x28(%rbp)$/;"	l
d6e	usertests.asm	/^     d6e:	c6 40 02 00          	movb   $0x0,0x2(%rax)$/;"	l
d6f	bad_mmap.asm	/^ d6f:	c9                   	leaveq $/;"	l
d6f	grep.asm	/^ d6f:	48 8b 00             	mov    (%rax),%rax$/;"	l
d6f	wc.asm	/^ d6f:	89 c0                	mov    %eax,%eax$/;"	l
d7	eager_mmap.asm	/^  d7:	00 00 00 $/;"	l
d7	echo.asm	/^  d7:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
d7	forktest.asm	/^  d7:	83 7d f8 00          	cmpl   $0x0,-0x8(%rbp)$/;"	l
d7	init.asm	/^  d7:	ff d2                	callq  *%rdx$/;"	l
d7	lazy_mmap.asm	/^  d7:	00 00 00 $/;"	l
d7	mkdir.asm	/^  d7:	89 55 f0             	mov    %edx,-0x10(%rbp)$/;"	l
d7	rm.asm	/^  d7:	89 55 f0             	mov    %edx,-0x10(%rbp)$/;"	l
d7	sh.asm	/^      d7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
d70	bad_mmap.asm	/^ d70:	c3                   	retq   $/;"	l
d70	eager_mmap.asm	/^ d70:	00 00 00 $/;"	l
d70	imshow.asm	/^ d70:	48 b8 e0 0b 00 00 00 	movabs $0xbe0,%rax$/;"	l
d70	lazy_mmap.asm	/^ d70:	00 00 00 $/;"	l
d71	wc.asm	/^ d71:	48 c1 e0 04          	shl    $0x4,%rax$/;"	l
d72	grep.asm	/^ d72:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax$/;"	l
d72	ls.asm	/^     d72:	48 8b 00             	mov    (%rax),%rax$/;"	l
d72	sh.asm	/^     d72:	eb 2b                	jmp    d9f <parseredirs+0x111>$/;"	l
d72	usertests.asm	/^     d72:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)$/;"	l
d73	eager_mmap.asm	/^ d73:	48 8b 00             	mov    (%rax),%rax$/;"	l
d73	lazy_mmap.asm	/^ d73:	48 8b 00             	mov    (%rax),%rax$/;"	l
d74	sh.asm	/^     d74:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx$/;"	l
d75	ls.asm	/^     d75:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax$/;"	l
d75	wc.asm	/^ d75:	48 01 45 f8          	add    %rax,-0x8(%rbp)$/;"	l
d76	eager_mmap.asm	/^ d76:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)$/;"	l
d76	grep.asm	/^ d76:	76 ba                	jbe    d32 <free+0x2b>$/;"	l
d76	lazy_mmap.asm	/^ d76:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)$/;"	l
d77	imshow.asm	/^ d77:	00 00 00 $/;"	l
d78	grep.asm	/^ d78:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
d78	sh.asm	/^     d78:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi$/;"	l
d79	ls.asm	/^     d79:	77 22                	ja     d9d <free+0x71>$/;"	l
d79	usertests.asm	/^     d79:	eb 2f                	jmp    daa <createtest+0xf6>$/;"	l
d79	wc.asm	/^ d79:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
d7a	eager_mmap.asm	/^ d7a:	75 23                	jne    d9f <malloc+0x130>$/;"	l
d7a	imshow.asm	/^ d7a:	ff d0                	callq  *%rax$/;"	l
d7a	lazy_mmap.asm	/^ d7a:	75 23                	jne    d9f <malloc+0x130>$/;"	l
d7b	ls.asm	/^     d7b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
d7b	usertests.asm	/^     d7b:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
d7c	eager_mmap.asm	/^ d7c:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
d7c	grep.asm	/^ d7c:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
d7c	imshow.asm	/^ d7c:	48 b8 30 12 00 00 00 	movabs $0x1230,%rax$/;"	l
d7c	lazy_mmap.asm	/^ d7c:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
d7c	sh.asm	/^     d7c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
d7d	wc.asm	/^ d7d:	8b 55 ec             	mov    -0x14(%rbp),%edx$/;"	l
d7e	usertests.asm	/^     d7e:	83 c0 30             	add    $0x30,%eax$/;"	l
d7f	eager_mmap.asm	/^ d7f:	89 c7                	mov    %eax,%edi$/;"	l
d7f	grep.asm	/^ d7f:	89 c0                	mov    %eax,%eax$/;"	l
d7f	lazy_mmap.asm	/^ d7f:	89 c7                	mov    %eax,%edi$/;"	l
d7f	ls.asm	/^     d7f:	48 8b 00             	mov    (%rax),%rax$/;"	l
d8	kill.asm	/^  d8:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)$/;"	l
d8	ln.asm	/^  d8:	89 d1                	mov    %edx,%ecx$/;"	l
d8	stressfs.asm	/^  d8:	00 00 00 $/;"	l
d8	zombie.asm	/^  d8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
d80	sh.asm	/^     d80:	41 b8 01 00 00 00    	mov    $0x1,%r8d$/;"	l
d80	wc.asm	/^ d80:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
d81	eager_mmap.asm	/^ d81:	48 b8 f6 0b 00 00 00 	movabs $0xbf6,%rax$/;"	l
d81	grep.asm	/^ d81:	48 c1 e0 04          	shl    $0x4,%rax$/;"	l
d81	lazy_mmap.asm	/^ d81:	48 b8 f6 0b 00 00 00 	movabs $0xbf6,%rax$/;"	l
d81	usertests.asm	/^     d81:	89 c2                	mov    %eax,%edx$/;"	l
d82	ls.asm	/^     d82:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
d83	imshow.asm	/^ d83:	00 00 00 $/;"	l
d83	usertests.asm	/^     d83:	48 b8 40 a8 00 00 00 	movabs $0xa840,%rax$/;"	l
d83	wc.asm	/^ d83:	48 b8 d0 12 00 00 00 	movabs $0x12d0,%rax$/;"	l
d85	grep.asm	/^ d85:	48 89 c2             	mov    %rax,%rdx$/;"	l
d86	imshow.asm	/^ d86:	48 8b 00             	mov    (%rax),%rax$/;"	l
d86	ls.asm	/^     d86:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
d86	sh.asm	/^     d86:	b9 01 02 00 00       	mov    $0x201,%ecx$/;"	l
d88	eager_mmap.asm	/^ d88:	00 00 00 $/;"	l
d88	grep.asm	/^ d88:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
d88	lazy_mmap.asm	/^ d88:	00 00 00 $/;"	l
d89	imshow.asm	/^ d89:	c9                   	leaveq $/;"	l
d8a	imshow.asm	/^ d8a:	c3                   	retq   $/;"	l
d8a	ls.asm	/^     d8a:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax$/;"	l
d8a	usertests.asm	/^     d8a:	00 00 00 $/;"	l
d8a	wc.asm	/^ d8a:	00 00 00 $/;"	l
d8b	eager_mmap.asm	/^ d8b:	ff d0                	callq  *%rax$/;"	l
d8b	imshow.asm	/^ d8b:	55                   	push   %rbp$/;"	l
d8b	lazy_mmap.asm	/^ d8b:	ff d0                	callq  *%rax$/;"	l
d8b	sh.asm	/^     d8b:	48 89 c7             	mov    %rax,%rdi$/;"	l
d8c	grep.asm	/^ d8c:	48 01 c2             	add    %rax,%rdx$/;"	l
d8c	imshow.asm	/^ d8c:	48 89 e5             	mov    %rsp,%rbp$/;"	l
d8d	eager_mmap.asm	/^ d8d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
d8d	lazy_mmap.asm	/^ d8d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
d8d	usertests.asm	/^     d8d:	88 50 01             	mov    %dl,0x1(%rax)$/;"	l
d8d	wc.asm	/^ d8d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
d8e	ls.asm	/^     d8e:	76 c7                	jbe    d57 <free+0x2b>$/;"	l
d8e	sh.asm	/^     d8e:	48 b8 e7 05 00 00 00 	movabs $0x5e7,%rax$/;"	l
d8f	grep.asm	/^ d8f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
d8f	imshow.asm	/^ d8f:	48 83 ec 30          	sub    $0x30,%rsp$/;"	l
d9	bad_mmap.asm	/^  d9:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
d9	grep.asm	/^  d9:	00 00 00 $/;"	l
d9	imshow.asm	/^  d9:	ba e8 03 00 00       	mov    $0x3e8,%edx$/;"	l
d9	init.asm	/^  d9:	48 b8 95 04 00 00 00 	movabs $0x495,%rax$/;"	l
d9	ls.asm	/^      d9:	00 00 00 $/;"	l
d90	ls.asm	/^     d90:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
d90	usertests.asm	/^     d90:	48 bf 40 a8 00 00 00 	movabs $0xa840,%rdi$/;"	l
d91	eager_mmap.asm	/^ d91:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)$/;"	l
d91	lazy_mmap.asm	/^ d91:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)$/;"	l
d91	wc.asm	/^ d91:	48 89 10             	mov    %rdx,(%rax)$/;"	l
d93	grep.asm	/^ d93:	48 8b 00             	mov    (%rax),%rax$/;"	l
d93	imshow.asm	/^ d93:	89 7d dc             	mov    %edi,-0x24(%rbp)$/;"	l
d94	ls.asm	/^     d94:	48 8b 00             	mov    (%rax),%rax$/;"	l
d94	wc.asm	/^ d94:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
d95	sh.asm	/^     d95:	00 00 00 $/;"	l
d96	eager_mmap.asm	/^ d96:	75 07                	jne    d9f <malloc+0x130>$/;"	l
d96	grep.asm	/^ d96:	48 39 c2             	cmp    %rax,%rdx$/;"	l
d96	imshow.asm	/^ d96:	8b 45 dc             	mov    -0x24(%rbp),%eax$/;"	l
d96	lazy_mmap.asm	/^ d96:	75 07                	jne    d9f <malloc+0x130>$/;"	l
d97	ls.asm	/^     d97:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax$/;"	l
d97	usertests.asm	/^     d97:	00 00 00 $/;"	l
d98	eager_mmap.asm	/^ d98:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
d98	lazy_mmap.asm	/^ d98:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
d98	sh.asm	/^     d98:	ff d0                	callq  *%rax$/;"	l
d98	wc.asm	/^ d98:	48 83 c0 10          	add    $0x10,%rax$/;"	l
d99	grep.asm	/^ d99:	75 2d                	jne    dc8 <free+0xc1>$/;"	l
d99	imshow.asm	/^ d99:	48 83 c0 0f          	add    $0xf,%rax$/;"	l
d9a	sh.asm	/^     d9a:	48 89 45 d8          	mov    %rax,-0x28(%rbp)$/;"	l
d9a	usertests.asm	/^     d9a:	48 b8 66 60 00 00 00 	movabs $0x6066,%rax$/;"	l
d9b	grep.asm	/^ d9b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
d9b	ls.asm	/^     d9b:	76 ba                	jbe    d57 <free+0x2b>$/;"	l
d9c	wc.asm	/^ d9c:	eb 4e                	jmp    dec <malloc+0x148>$/;"	l
d9d	eager_mmap.asm	/^ d9d:	eb 18                	jmp    db7 <malloc+0x148>$/;"	l
d9d	imshow.asm	/^ d9d:	48 c1 e8 04          	shr    $0x4,%rax$/;"	l
d9d	lazy_mmap.asm	/^ d9d:	eb 18                	jmp    db7 <malloc+0x148>$/;"	l
d9d	ls.asm	/^     d9d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
d9e	sh.asm	/^     d9e:	90                   	nop$/;"	l
d9e	wc.asm	/^ d9e:	48 b8 d0 12 00 00 00 	movabs $0x12d0,%rax$/;"	l
d9f	eager_mmap.asm	/^ d9f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
d9f	grep.asm	/^ d9f:	8b 50 08             	mov    0x8(%rax),%edx$/;"	l
d9f	lazy_mmap.asm	/^ d9f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
d9f	sh.asm	/^     d9f:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx$/;"	l
da	eager_mmap.asm	/^  da:	bf 01 00 00 00       	mov    $0x1,%edi$/;"	l
da	lazy_mmap.asm	/^  da:	bf 01 00 00 00       	mov    $0x1,%edi$/;"	l
da	ln.asm	/^  da:	fc                   	cld    $/;"	l
da	mkdir.asm	/^  da:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx$/;"	l
da	rm.asm	/^  da:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx$/;"	l
da1	imshow.asm	/^ da1:	83 c0 01             	add    $0x1,%eax$/;"	l
da1	ls.asm	/^     da1:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
da1	usertests.asm	/^     da1:	00 00 00 $/;"	l
da2	grep.asm	/^ da2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
da3	eager_mmap.asm	/^ da3:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
da3	lazy_mmap.asm	/^ da3:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
da3	sh.asm	/^     da3:	48 8b 45 d0          	mov    -0x30(%rbp),%rax$/;"	l
da4	imshow.asm	/^ da4:	89 45 ec             	mov    %eax,-0x14(%rbp)$/;"	l
da4	ls.asm	/^     da4:	89 c0                	mov    %eax,%eax$/;"	l
da4	usertests.asm	/^     da4:	ff d0                	callq  *%rax$/;"	l
da5	wc.asm	/^ da5:	00 00 00 $/;"	l
da6	grep.asm	/^ da6:	48 8b 00             	mov    (%rax),%rax$/;"	l
da6	ls.asm	/^     da6:	48 c1 e0 04          	shl    $0x4,%rax$/;"	l
da6	usertests.asm	/^     da6:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)$/;"	l
da7	eager_mmap.asm	/^ da7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
da7	imshow.asm	/^ da7:	48 b8 30 12 00 00 00 	movabs $0x1230,%rax$/;"	l
da7	lazy_mmap.asm	/^ da7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
da7	sh.asm	/^     da7:	48 ba 34 1e 00 00 00 	movabs $0x1e34,%rdx$/;"	l
da8	wc.asm	/^ da8:	48 8b 00             	mov    (%rax),%rax$/;"	l
da9	grep.asm	/^ da9:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
daa	ls.asm	/^     daa:	48 89 c2             	mov    %rax,%rdx$/;"	l
daa	usertests.asm	/^     daa:	83 7d fc 33          	cmpl   $0x33,-0x4(%rbp)$/;"	l
dab	eager_mmap.asm	/^ dab:	48 8b 00             	mov    (%rax),%rax$/;"	l
dab	lazy_mmap.asm	/^ dab:	48 8b 00             	mov    (%rax),%rax$/;"	l
dab	wc.asm	/^ dab:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)$/;"	l
dac	grep.asm	/^ dac:	01 c2                	add    %eax,%edx$/;"	l
dad	ls.asm	/^     dad:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
dae	eager_mmap.asm	/^ dae:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
dae	grep.asm	/^ dae:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
dae	imshow.asm	/^ dae:	00 00 00 $/;"	l
dae	lazy_mmap.asm	/^ dae:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
dae	sh.asm	/^     dae:	00 00 00 $/;"	l
dae	usertests.asm	/^     dae:	7e cb                	jle    d7b <createtest+0xc7>$/;"	l
daf	wc.asm	/^ daf:	75 23                	jne    dd4 <malloc+0x130>$/;"	l
data	buf.h	/^  uchar data[BSIZE];$/;"	m	struct:buf
data	ioapic.c	/^  uint data;$/;"	m	struct:ioapic	file:
data	kernel.asm	/^    data = (shift & E0ESC ? data : data & 0x7F);$/;"	d
data	kernel.asm	/^  data = inb(KBDATAP);$/;"	d
data	pipe.c	/^  char data[PIPESIZE];$/;"	m	struct:pipe	file:
day	date.h	/^  uint day;$/;"	m	struct:rtcdate
db	echo.asm	/^  db:	90                   	nop$/;"	l
db	forktest.asm	/^  db:	75 0c                	jne    e9 <forktest+0x58>$/;"	l
db	ln.asm	/^  db:	f3 aa                	rep stos %al,%es:(%rdi)$/;"	l
db	mmu.h	/^  uint db : 1;         \/\/ 0 = 16-bit segment, 1 = 32-bit segment$/;"	m	struct:segdesc
db	sh.asm	/^      db:	8b 40 24             	mov    0x24(%rax),%eax$/;"	l
db	stressfs.asm	/^  db:	ff d0                	callq  *%rax$/;"	l
db0	usertests.asm	/^     db0:	48 b8 08 88 00 00 00 	movabs $0x8808,%rax$/;"	l
db1	imshow.asm	/^ db1:	48 8b 00             	mov    (%rax),%rax$/;"	l
db1	ls.asm	/^     db1:	48 01 c2             	add    %rax,%rdx$/;"	l
db1	sh.asm	/^     db1:	48 89 ce             	mov    %rcx,%rsi$/;"	l
db1	wc.asm	/^ db1:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
db2	eager_mmap.asm	/^ db2:	e9 41 ff ff ff       	jmpq   cf8 <malloc+0x89>$/;"	l
db2	grep.asm	/^ db2:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
db2	lazy_mmap.asm	/^ db2:	e9 41 ff ff ff       	jmpq   cf8 <malloc+0x89>$/;"	l
db4	imshow.asm	/^ db4:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
db4	ls.asm	/^     db4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
db4	sh.asm	/^     db4:	48 89 c7             	mov    %rax,%rdi$/;"	l
db4	wc.asm	/^ db4:	89 c7                	mov    %eax,%edi$/;"	l
db5	grep.asm	/^ db5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
db6	wc.asm	/^ db6:	48 b8 2b 0c 00 00 00 	movabs $0xc2b,%rax$/;"	l
db7	eager_mmap.asm	/^ db7:	c9                   	leaveq $/;"	l
db7	lazy_mmap.asm	/^ db7:	c9                   	leaveq $/;"	l
db7	sh.asm	/^     db7:	48 b8 51 09 00 00 00 	movabs $0x951,%rax$/;"	l
db7	usertests.asm	/^     db7:	00 00 00 $/;"	l
db8	eager_mmap.asm	/^ db8:	c3                   	retq   $/;"	l
db8	imshow.asm	/^ db8:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)$/;"	l
db8	lazy_mmap.asm	/^ db8:	c3                   	retq   $/;"	l
db8	ls.asm	/^     db8:	48 8b 00             	mov    (%rax),%rax$/;"	l
db9	grep.asm	/^ db9:	48 8b 00             	mov    (%rax),%rax$/;"	l
dba	usertests.asm	/^     dba:	8b 00                	mov    (%rax),%eax$/;"	l
dbb	ls.asm	/^     dbb:	48 39 c2             	cmp    %rax,%rdx$/;"	l
dbc	grep.asm	/^ dbc:	48 8b 10             	mov    (%rax),%rdx$/;"	l
dbc	usertests.asm	/^     dbc:	48 be 50 6c 00 00 00 	movabs $0x6c50,%rsi$/;"	l
dbd	imshow.asm	/^ dbd:	75 4a                	jne    e09 <malloc+0x7e>$/;"	l
dbd	wc.asm	/^ dbd:	00 00 00 $/;"	l
dbe	ls.asm	/^     dbe:	75 2d                	jne    ded <free+0xc1>$/;"	l
dbe	sh.asm	/^     dbe:	00 00 00 $/;"	l
dbf	grep.asm	/^ dbf:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
dbf	imshow.asm	/^ dbf:	48 b8 20 12 00 00 00 	movabs $0x1220,%rax$/;"	l
dc	echo.asm	/^  dc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
dc	grep.asm	/^  dc:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)$/;"	l
dc	kill.asm	/^  dc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
dc	ls.asm	/^      dc:	48 01 d0             	add    %rdx,%rax$/;"	l
dc	usertests.asm	/^      dc:	00 00 00 $/;"	l
dc	wc.asm	/^  dc:	83 7d e8 00          	cmpl   $0x0,-0x18(%rbp)$/;"	l
dc	zombie.asm	/^  dc:	0f b6 00             	movzbl (%rax),%eax$/;"	l
dc0	ls.asm	/^     dc0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
dc0	wc.asm	/^ dc0:	ff d0                	callq  *%rax$/;"	l
dc1	sh.asm	/^     dc1:	ff d0                	callq  *%rax$/;"	l
dc2	wc.asm	/^ dc2:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
dc3	grep.asm	/^ dc3:	48 89 10             	mov    %rdx,(%rax)$/;"	l
dc3	sh.asm	/^     dc3:	85 c0                	test   %eax,%eax$/;"	l
dc3	usertests.asm	/^     dc3:	00 00 00 $/;"	l
dc4	ls.asm	/^     dc4:	8b 50 08             	mov    0x8(%rax),%edx$/;"	l
dc5	sh.asm	/^     dc5:	0f 85 dc fe ff ff    	jne    ca7 <parseredirs+0x19>$/;"	l
dc6	grep.asm	/^ dc6:	eb 0e                	jmp    dd6 <free+0xcf>$/;"	l
dc6	imshow.asm	/^ dc6:	00 00 00 $/;"	l
dc6	usertests.asm	/^     dc6:	89 c7                	mov    %eax,%edi$/;"	l
dc6	wc.asm	/^ dc6:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)$/;"	l
dc7	ls.asm	/^     dc7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
dc8	grep.asm	/^ dc8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
dc8	usertests.asm	/^     dc8:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
dc9	imshow.asm	/^ dc9:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
dcb	ls.asm	/^     dcb:	48 8b 00             	mov    (%rax),%rax$/;"	l
dcb	sh.asm	/^     dcb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
dcb	wc.asm	/^ dcb:	75 07                	jne    dd4 <malloc+0x130>$/;"	l
dcc	grep.asm	/^ dcc:	48 8b 10             	mov    (%rax),%rdx$/;"	l
dcd	imshow.asm	/^ dcd:	48 b8 30 12 00 00 00 	movabs $0x1230,%rax$/;"	l
dcd	usertests.asm	/^     dcd:	48 ba db 61 00 00 00 	movabs $0x61db,%rdx$/;"	l
dcd	wc.asm	/^ dcd:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
dce	ls.asm	/^     dce:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
dcf	grep.asm	/^ dcf:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
dcf	sh.asm	/^     dcf:	c9                   	leaveq $/;"	l
dd	cat.asm	/^  dd:	00 00 00 $/;"	l
dd	forktest.asm	/^  dd:	48 b8 0d 05 00 00 00 	movabs $0x50d,%rax$/;"	l
dd	ln.asm	/^  dd:	89 ca                	mov    %ecx,%edx$/;"	l
dd	stressfs.asm	/^  dd:	89 45 f8             	mov    %eax,-0x8(%rbp)$/;"	l
dd0	sh.asm	/^     dd0:	c3                   	retq   $/;"	l
dd1	ls.asm	/^     dd1:	01 c2                	add    %eax,%edx$/;"	l
dd1	sh.asm	/^     dd1:	55                   	push   %rbp$/;"	l
dd2	sh.asm	/^     dd2:	48 89 e5             	mov    %rsp,%rbp$/;"	l
dd2	wc.asm	/^ dd2:	eb 18                	jmp    dec <malloc+0x148>$/;"	l
dd3	grep.asm	/^ dd3:	48 89 10             	mov    %rdx,(%rax)$/;"	l
dd3	ls.asm	/^     dd3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
dd4	imshow.asm	/^ dd4:	00 00 00 $/;"	l
dd4	usertests.asm	/^     dd4:	00 00 00 $/;"	l
dd4	wc.asm	/^ dd4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
dd5	sh.asm	/^     dd5:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
dd6	grep.asm	/^ dd6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
dd7	imshow.asm	/^ dd7:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
dd7	ls.asm	/^     dd7:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
dd7	usertests.asm	/^     dd7:	ff d2                	callq  *%rdx$/;"	l
dd8	wc.asm	/^ dd8:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
dd9	sh.asm	/^     dd9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
dd9	usertests.asm	/^     dd9:	90                   	nop$/;"	l
dda	grep.asm	/^ dda:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
dda	ls.asm	/^     dda:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
dda	usertests.asm	/^     dda:	c9                   	leaveq $/;"	l
ddb	imshow.asm	/^ ddb:	48 89 10             	mov    %rdx,(%rax)$/;"	l
ddb	usertests.asm	/^     ddb:	c3                   	retq   $/;"	l
ddc	usertests.asm	/^     ddc:	55                   	push   %rbp$/;"	l
ddc	wc.asm	/^ ddc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ddd	grep.asm	/^ ddd:	89 c0                	mov    %eax,%eax$/;"	l
ddd	sh.asm	/^     ddd:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)$/;"	l
ddd	usertests.asm	/^     ddd:	48 89 e5             	mov    %rsp,%rbp$/;"	l
dde	imshow.asm	/^ dde:	48 b8 30 12 00 00 00 	movabs $0x1230,%rax$/;"	l
dde	ls.asm	/^     dde:	48 8b 00             	mov    (%rax),%rax$/;"	l
ddf	grep.asm	/^ ddf:	48 c1 e0 04          	shl    $0x4,%rax$/;"	l
de	bad_mmap.asm	/^  de:	48 ba d7 06 00 00 00 	movabs $0x6d7,%rdx$/;"	l
de	imshow.asm	/^  de:	48 89 ce             	mov    %rcx,%rsi$/;"	l
de	mkdir.asm	/^  de:	8b 55 f0             	mov    -0x10(%rbp),%edx$/;"	l
de	rm.asm	/^  de:	8b 55 f0             	mov    -0x10(%rbp),%edx$/;"	l
de	sh.asm	/^      de:	89 c7                	mov    %eax,%edi$/;"	l
de0	usertests.asm	/^     de0:	48 b8 08 88 00 00 00 	movabs $0x8808,%rax$/;"	l
de0	wc.asm	/^ de0:	48 8b 00             	mov    (%rax),%rax$/;"	l
de1	ls.asm	/^     de1:	48 8b 10             	mov    (%rax),%rdx$/;"	l
de1	sh.asm	/^     de1:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx$/;"	l
de3	grep.asm	/^ de3:	48 89 c2             	mov    %rax,%rdx$/;"	l
de3	wc.asm	/^ de3:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
de4	ls.asm	/^     de4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
de5	imshow.asm	/^ de5:	00 00 00 $/;"	l
de5	sh.asm	/^     de5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
de6	grep.asm	/^ de6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
de7	usertests.asm	/^     de7:	00 00 00 $/;"	l
de7	wc.asm	/^ de7:	e9 41 ff ff ff       	jmpq   d2d <malloc+0x89>$/;"	l
de8	imshow.asm	/^ de8:	48 8b 10             	mov    (%rax),%rdx$/;"	l
de8	ls.asm	/^     de8:	48 89 10             	mov    %rdx,(%rax)$/;"	l
de9	sh.asm	/^     de9:	48 ba 37 1e 00 00 00 	movabs $0x1e37,%rdx$/;"	l
dea	grep.asm	/^ dea:	48 01 d0             	add    %rdx,%rax$/;"	l
dea	usertests.asm	/^     dea:	8b 00                	mov    (%rax),%eax$/;"	l
deallocuvm	vm.c	/^deallocuvm(pde_t *pgdir, uint64 oldsz, uint64 newsz)$/;"	f
deb	imshow.asm	/^ deb:	48 b8 20 12 00 00 00 	movabs $0x1220,%rax$/;"	l
deb	ls.asm	/^     deb:	eb 0e                	jmp    dfb <free+0xcf>$/;"	l
dec	usertests.asm	/^     dec:	48 be 76 6c 00 00 00 	movabs $0x6c76,%rsi$/;"	l
dec	wc.asm	/^ dec:	c9                   	leaveq $/;"	l
ded	grep.asm	/^ ded:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax$/;"	l
ded	ls.asm	/^     ded:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ded	wc.asm	/^ ded:	c3                   	retq   $/;"	l
default	kernel.asm	/^	default:$/;"	l
default	kernel.asm	/^    default:$/;"	l
default	kernel.asm	/^  default:$/;"	l
default	sh.asm	/^  default:$/;"	l
dev	buf.h	/^  uint dev;$/;"	m	struct:buf
dev	file.h	/^  uint dev;           \/\/ Device number$/;"	m	struct:inode
dev	log.c	/^  int dev;$/;"	m	struct:log	file:
dev	stat.h	/^  int dev;     \/\/ File system's disk device$/;"	m	struct:stat
devsw	file.c	/^struct devsw devsw[NDEV];$/;"	v	typeref:struct:devsw
devsw	file.h	/^struct devsw {$/;"	s
df	eager_mmap.asm	/^  df:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
df	lazy_mmap.asm	/^  df:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
df	ln.asm	/^  df:	48 89 fe             	mov    %rdi,%rsi$/;"	l
df	ls.asm	/^      df:	89 da                	mov    %ebx,%edx$/;"	l
df	usertests.asm	/^      df:	ff d0                	callq  *%rax$/;"	l
df	zombie.asm	/^  df:	38 c2                	cmp    %al,%dl$/;"	l
df0	sh.asm	/^     df0:	00 00 00 $/;"	l
df1	grep.asm	/^ df1:	75 27                	jne    e1a <free+0x113>$/;"	l
df1	ls.asm	/^     df1:	48 8b 10             	mov    (%rax),%rdx$/;"	l
df2	imshow.asm	/^ df2:	00 00 00 $/;"	l
df3	grep.asm	/^ df3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
df3	sh.asm	/^     df3:	48 89 ce             	mov    %rcx,%rsi$/;"	l
df3	usertests.asm	/^     df3:	00 00 00 $/;"	l
df4	ls.asm	/^     df4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
df5	imshow.asm	/^ df5:	48 89 10             	mov    %rdx,(%rax)$/;"	l
df6	sh.asm	/^     df6:	48 89 c7             	mov    %rax,%rdi$/;"	l
df6	usertests.asm	/^     df6:	89 c7                	mov    %eax,%edi$/;"	l
df7	grep.asm	/^ df7:	8b 50 08             	mov    0x8(%rax),%edx$/;"	l
df8	imshow.asm	/^ df8:	48 b8 20 12 00 00 00 	movabs $0x1220,%rax$/;"	l
df8	ls.asm	/^     df8:	48 89 10             	mov    %rdx,(%rax)$/;"	l
df8	usertests.asm	/^     df8:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
df9	sh.asm	/^     df9:	48 b8 51 09 00 00 00 	movabs $0x951,%rax$/;"	l
dfa	grep.asm	/^ dfa:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
dfb	ls.asm	/^     dfb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
dfd	usertests.asm	/^     dfd:	48 ba db 61 00 00 00 	movabs $0x61db,%rdx$/;"	l
dfe	grep.asm	/^ dfe:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
dff	imshow.asm	/^ dff:	00 00 00 $/;"	l
dff	ls.asm	/^     dff:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
digits	console.c	/^static char digits[] = "0123456789abcdef";$/;"	v	file:
dinode	fs.h	/^struct dinode {$/;"	s
dip	kernel.asm	/^    dip = (struct dinode*)bp->data + inum%IPB;$/;"	d
dip	kernel.asm	/^    dip = (struct dinode*)bp->data + ip->inum%IPB;$/;"	d
dip	kernel.asm	/^  dip = (struct dinode*)bp->data + ip->inum%IPB;$/;"	d
dirent	fs.h	/^struct dirent {$/;"	s
dirfile	usertests.c	/^dirfile(void)$/;"	f
dirlink	fs.c	/^dirlink(struct inode *dp, char *name, uint inum)$/;"	f
dirlookup	fs.c	/^dirlookup(struct inode *dp, char *name, uint *poff)$/;"	f
dirtest	usertests.c	/^void dirtest(void)$/;"	f
disksize	memide.c	/^static int disksize;$/;"	v	file:
disp	display.c	/^} disp;$/;"	v	typeref:struct:__anon10	file:
displayinit	display.c	/^void displayinit(void)$/;"	f
displayioctl	display.c	/^int displayioctl(struct file * f,int param,int value)$/;"	f
displayread	display.c	/^displayread(struct file *f, char *buf, int n)$/;"	f
displaywrite	display.c	/^displaywrite(struct file *f, char *buf, int n)$/;"	f
do_commit	kernel.asm	/^    do_commit = 1;$/;"	d
dpl	mmu.h	/^  uint dpl : 2;         \/\/ descriptor(meaning new) privilege level$/;"	m	struct:gatedesc
dpl	mmu.h	/^  uint dpl : 2;        \/\/ Descriptor Privilege Level$/;"	m	struct:segdesc
ds	mmu.h	/^  ushort ds;$/;"	m	struct:taskstate
dst	bad_mmap.asm	/^  dst = vdst;$/;"	d
dst	cat.asm	/^  dst = vdst;$/;"	d
dst	eager_mmap.asm	/^  dst = vdst;$/;"	d
dst	echo.asm	/^  dst = vdst;$/;"	d
dst	forktest.asm	/^  dst = vdst;$/;"	d
dst	grep.asm	/^  dst = vdst;$/;"	d
dst	imshow.asm	/^  dst = vdst;$/;"	d
dst	init.asm	/^  dst = vdst;$/;"	d
dst	kill.asm	/^  dst = vdst;$/;"	d
dst	lazy_mmap.asm	/^  dst = vdst;$/;"	d
dst	ln.asm	/^  dst = vdst;$/;"	d
dst	ls.asm	/^  dst = vdst;$/;"	d
dst	mkdir.asm	/^  dst = vdst;$/;"	d
dst	rm.asm	/^  dst = vdst;$/;"	d
dst	sh.asm	/^  dst = vdst;$/;"	d
dst	stressfs.asm	/^  dst = vdst;$/;"	d
dst	usertests.asm	/^  dst = vdst;$/;"	d
dst	wc.asm	/^  dst = vdst;$/;"	d
dst	zombie.asm	/^  dst = vdst;$/;"	d
e	console.c	/^  uint e;  \/\/ Edit index$/;"	m	struct:__anon8	file:
e	initcode.asm	/^   e:	48 c7 c0 07 00 00 00 	mov    $0x7,%rax$/;"	l
e	kernel.asm	/^  e = addr+len;$/;"	d
e	usertests.asm	/^       e:	8b 00                	mov    (%rax),%eax$/;"	l
e	zombie.asm	/^   e:	ff d0                	callq  *%rax$/;"	l
e0	cat.asm	/^  e0:	ff d0                	callq  *%rax$/;"	l
e0	echo.asm	/^  e0:	48 8d 50 01          	lea    0x1(%rax),%rdx$/;"	l
e0	grep.asm	/^  e0:	75 07                	jne    e9 <grep+0xe9>$/;"	l
e0	init.asm	/^  e0:	00 00 00 $/;"	l
e0	kill.asm	/^  e0:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
e0	sh.asm	/^      e0:	48 b8 30 15 00 00 00 	movabs $0x1530,%rax$/;"	l
e0	stressfs.asm	/^  e0:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)$/;"	l
e0	wc.asm	/^  e0:	79 2c                	jns    10e <wc+0x10e>$/;"	l
e00	sh.asm	/^     e00:	00 00 00 $/;"	l
e01	grep.asm	/^ e01:	01 c2                	add    %eax,%edx$/;"	l
e02	imshow.asm	/^ e02:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%rax)$/;"	l
e02	ls.asm	/^     e02:	89 c0                	mov    %eax,%eax$/;"	l
e03	grep.asm	/^ e03:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
e03	sh.asm	/^     e03:	ff d0                	callq  *%rax$/;"	l
e04	ls.asm	/^     e04:	48 c1 e0 04          	shl    $0x4,%rax$/;"	l
e04	usertests.asm	/^     e04:	00 00 00 $/;"	l
e05	sh.asm	/^     e05:	85 c0                	test   %eax,%eax$/;"	l
e07	grep.asm	/^ e07:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
e07	sh.asm	/^     e07:	75 16                	jne    e1f <parseblock+0x4e>$/;"	l
e07	usertests.asm	/^     e07:	ff d2                	callq  *%rdx$/;"	l
e08	ls.asm	/^     e08:	48 89 c2             	mov    %rax,%rdx$/;"	l
e09	imshow.asm	/^ e09:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
e09	sh.asm	/^     e09:	48 bf 39 1e 00 00 00 	movabs $0x1e39,%rdi$/;"	l
e09	usertests.asm	/^     e09:	48 bf 82 6c 00 00 00 	movabs $0x6c82,%rdi$/;"	l
e0a	grep.asm	/^ e0a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
e0b	ls.asm	/^     e0b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
e0d	imshow.asm	/^ e0d:	48 8b 00             	mov    (%rax),%rax$/;"	l
e0e	grep.asm	/^ e0e:	48 8b 10             	mov    (%rax),%rdx$/;"	l
e0f	ls.asm	/^     e0f:	48 01 d0             	add    %rdx,%rax$/;"	l
e1	imshow.asm	/^  e1:	89 c7                	mov    %eax,%edi$/;"	l
e1	ls.asm	/^      e1:	be 20 00 00 00       	mov    $0x20,%esi$/;"	l
e1	mkdir.asm	/^  e1:	8b 45 f4             	mov    -0xc(%rbp),%eax$/;"	l
e1	rm.asm	/^  e1:	8b 45 f4             	mov    -0xc(%rbp),%eax$/;"	l
e1	usertests.asm	/^      e1:	85 c0                	test   %eax,%eax$/;"	l
e1	zombie.asm	/^  e1:	74 d9                	je     bc <strcmp+0x12>$/;"	l
e10	imshow.asm	/^ e10:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
e10	sh.asm	/^     e10:	00 00 00 $/;"	l
e10	usertests.asm	/^     e10:	00 00 00 $/;"	l
e11	grep.asm	/^ e11:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
e12	ls.asm	/^     e12:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax$/;"	l
e13	sh.asm	/^     e13:	48 b8 26 05 00 00 00 	movabs $0x526,%rax$/;"	l
e13	usertests.asm	/^     e13:	48 b8 84 60 00 00 00 	movabs $0x6084,%rax$/;"	l
e14	imshow.asm	/^ e14:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
e15	grep.asm	/^ e15:	48 89 10             	mov    %rdx,(%rax)$/;"	l
e16	ls.asm	/^     e16:	75 27                	jne    e3f <free+0x113>$/;"	l
e18	grep.asm	/^ e18:	eb 0b                	jmp    e25 <free+0x11e>$/;"	l
e18	imshow.asm	/^ e18:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
e18	ls.asm	/^     e18:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
e1a	grep.asm	/^ e1a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
e1a	sh.asm	/^     e1a:	00 00 00 $/;"	l
e1a	usertests.asm	/^     e1a:	00 00 00 $/;"	l
e1b	imshow.asm	/^ e1b:	3b 45 ec             	cmp    -0x14(%rbp),%eax$/;"	l
e1c	ls.asm	/^     e1c:	8b 50 08             	mov    0x8(%rax),%edx$/;"	l
e1d	sh.asm	/^     e1d:	ff d0                	callq  *%rax$/;"	l
e1d	usertests.asm	/^     e1d:	ff d0                	callq  *%rax$/;"	l
e1e	grep.asm	/^ e1e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
e1e	imshow.asm	/^ e1e:	72 65                	jb     e85 <malloc+0xfa>$/;"	l
e1f	ls.asm	/^     e1f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
e1f	sh.asm	/^     e1f:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi$/;"	l
e1f	usertests.asm	/^     e1f:	85 c0                	test   %eax,%eax$/;"	l
e2	cat.asm	/^  e2:	48 b8 ca 04 00 00 00 	movabs $0x4ca,%rax$/;"	l
e2	grep.asm	/^  e2:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)$/;"	l
e2	ln.asm	/^  e2:	48 89 75 f8          	mov    %rsi,-0x8(%rbp)$/;"	l
e2	wc.asm	/^  e2:	48 be f4 0d 00 00 00 	movabs $0xdf4,%rsi$/;"	l
e20	imshow.asm	/^ e20:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
e21	usertests.asm	/^     e21:	79 35                	jns    e58 <dirtest+0x7c>$/;"	l
e22	grep.asm	/^ e22:	48 89 10             	mov    %rdx,(%rax)$/;"	l
e23	ls.asm	/^     e23:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
e23	sh.asm	/^     e23:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
e23	usertests.asm	/^     e23:	48 b8 08 88 00 00 00 	movabs $0x8808,%rax$/;"	l
e24	imshow.asm	/^ e24:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
e25	grep.asm	/^ e25:	48 b8 30 17 00 00 00 	movabs $0x1730,%rax$/;"	l
e26	ls.asm	/^     e26:	01 c2                	add    %eax,%edx$/;"	l
e27	imshow.asm	/^ e27:	3b 45 ec             	cmp    -0x14(%rbp),%eax$/;"	l
e27	sh.asm	/^     e27:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
e28	ls.asm	/^     e28:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
e2a	imshow.asm	/^ e2a:	75 10                	jne    e3c <malloc+0xb1>$/;"	l
e2a	usertests.asm	/^     e2a:	00 00 00 $/;"	l
e2c	grep.asm	/^ e2c:	00 00 00 $/;"	l
e2c	imshow.asm	/^ e2c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
e2c	ls.asm	/^     e2c:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
e2c	sh.asm	/^     e2c:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
e2d	usertests.asm	/^     e2d:	8b 00                	mov    (%rax),%eax$/;"	l
e2f	grep.asm	/^ e2f:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx$/;"	l
e2f	ls.asm	/^     e2f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
e2f	usertests.asm	/^     e2f:	48 be a1 68 00 00 00 	movabs $0x68a1,%rsi$/;"	l
e3	imshow.asm	/^  e3:	48 b8 80 06 00 00 00 	movabs $0x680,%rax$/;"	l
e3	init.asm	/^  e3:	ff d0                	callq  *%rax$/;"	l
e3	usertests.asm	/^      e3:	79 35                	jns    11a <iputtest+0x11a>$/;"	l
e3	zombie.asm	/^  e3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
e30	imshow.asm	/^ e30:	48 8b 10             	mov    (%rax),%rdx$/;"	l
e31	sh.asm	/^     e31:	48 89 c7             	mov    %rax,%rdi$/;"	l
e33	grep.asm	/^ e33:	48 89 10             	mov    %rdx,(%rax)$/;"	l
e33	imshow.asm	/^ e33:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
e33	ls.asm	/^     e33:	48 8b 10             	mov    (%rax),%rdx$/;"	l
e34	sh.asm	/^     e34:	48 b8 aa 07 00 00 00 	movabs $0x7aa,%rax$/;"	l
e36	grep.asm	/^ e36:	90                   	nop$/;"	l
e36	ls.asm	/^     e36:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
e36	usertests.asm	/^     e36:	00 00 00 $/;"	l
e37	grep.asm	/^ e37:	c9                   	leaveq $/;"	l
e37	imshow.asm	/^ e37:	48 89 10             	mov    %rdx,(%rax)$/;"	l
e38	grep.asm	/^ e38:	c3                   	retq   $/;"	l
e39	grep.asm	/^ e39:	55                   	push   %rbp$/;"	l
e39	usertests.asm	/^     e39:	89 c7                	mov    %eax,%edi$/;"	l
e3a	grep.asm	/^ e3a:	48 89 e5             	mov    %rsp,%rbp$/;"	l
e3a	imshow.asm	/^ e3a:	eb 2e                	jmp    e6a <malloc+0xdf>$/;"	l
e3a	ls.asm	/^     e3a:	48 89 10             	mov    %rdx,(%rax)$/;"	l
e3b	sh.asm	/^     e3b:	00 00 00 $/;"	l
e3b	usertests.asm	/^     e3b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
e3c	imshow.asm	/^ e3c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
e3d	grep.asm	/^ e3d:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
e3d	ls.asm	/^     e3d:	eb 0b                	jmp    e4a <free+0x11e>$/;"	l
e3e	sh.asm	/^     e3e:	ff d0                	callq  *%rax$/;"	l
e3f	ls.asm	/^     e3f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
e4	eager_mmap.asm	/^  e4:	48 ba 1f 07 00 00 00 	movabs $0x71f,%rdx$/;"	l
e4	echo.asm	/^  e4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)$/;"	l
e4	forktest.asm	/^  e4:	00 00 00 $/;"	l
e4	kill.asm	/^  e4:	90                   	nop$/;"	l
e4	lazy_mmap.asm	/^  e4:	48 ba 1f 07 00 00 00 	movabs $0x71f,%rdx$/;"	l
e4	mkdir.asm	/^  e4:	48 89 ce             	mov    %rcx,%rsi$/;"	l
e4	rm.asm	/^  e4:	48 89 ce             	mov    %rcx,%rsi$/;"	l
e40	imshow.asm	/^ e40:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
e40	sh.asm	/^     e40:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx$/;"	l
e40	usertests.asm	/^     e40:	48 ba db 61 00 00 00 	movabs $0x61db,%rdx$/;"	l
e41	grep.asm	/^ e41:	89 7d ec             	mov    %edi,-0x14(%rbp)$/;"	l
e43	imshow.asm	/^ e43:	2b 45 ec             	sub    -0x14(%rbp),%eax$/;"	l
e43	ls.asm	/^     e43:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
e44	grep.asm	/^ e44:	81 7d ec ff 0f 00 00 	cmpl   $0xfff,-0x14(%rbp)$/;"	l
e44	sh.asm	/^     e44:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
e46	imshow.asm	/^ e46:	89 c2                	mov    %eax,%edx$/;"	l
e47	ls.asm	/^     e47:	48 89 10             	mov    %rdx,(%rax)$/;"	l
e47	usertests.asm	/^     e47:	00 00 00 $/;"	l
e48	imshow.asm	/^ e48:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
e48	sh.asm	/^     e48:	48 89 d6             	mov    %rdx,%rsi$/;"	l
e4a	ls.asm	/^     e4a:	48 b8 50 13 00 00 00 	movabs $0x1350,%rax$/;"	l
e4a	usertests.asm	/^     e4a:	ff d2                	callq  *%rdx$/;"	l
e4b	grep.asm	/^ e4b:	77 07                	ja     e54 <morecore+0x1b>$/;"	l
e4b	sh.asm	/^     e4b:	48 89 c7             	mov    %rax,%rdi$/;"	l
e4c	imshow.asm	/^ e4c:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
e4c	usertests.asm	/^     e4c:	48 b8 02 60 00 00 00 	movabs $0x6002,%rax$/;"	l
e4d	grep.asm	/^ e4d:	c7 45 ec 00 10 00 00 	movl   $0x1000,-0x14(%rbp)$/;"	l
e4e	sh.asm	/^     e4e:	48 b8 c4 0a 00 00 00 	movabs $0xac4,%rax$/;"	l
e4f	imshow.asm	/^ e4f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
e5	bad_mmap.asm	/^  e5:	00 00 00 $/;"	l
e5	init.asm	/^  e5:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)$/;"	l
e5	kill.asm	/^  e5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
e5	usertests.asm	/^      e5:	48 b8 08 88 00 00 00 	movabs $0x8808,%rax$/;"	l
e51	ls.asm	/^     e51:	00 00 00 $/;"	l
e53	imshow.asm	/^ e53:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
e53	usertests.asm	/^     e53:	00 00 00 $/;"	l
e54	grep.asm	/^ e54:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
e54	ls.asm	/^     e54:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx$/;"	l
e55	sh.asm	/^     e55:	00 00 00 $/;"	l
e56	imshow.asm	/^ e56:	89 c0                	mov    %eax,%eax$/;"	l
e56	usertests.asm	/^     e56:	ff d0                	callq  *%rax$/;"	l
e57	grep.asm	/^ e57:	c1 e0 04             	shl    $0x4,%eax$/;"	l
e58	imshow.asm	/^ e58:	48 c1 e0 04          	shl    $0x4,%rax$/;"	l
e58	ls.asm	/^     e58:	48 89 10             	mov    %rdx,(%rax)$/;"	l
e58	sh.asm	/^     e58:	ff d0                	callq  *%rax$/;"	l
e58	usertests.asm	/^     e58:	48 bf 82 6c 00 00 00 	movabs $0x6c82,%rdi$/;"	l
e5a	grep.asm	/^ e5a:	89 c7                	mov    %eax,%edi$/;"	l
e5a	sh.asm	/^     e5a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
e5b	ls.asm	/^     e5b:	90                   	nop$/;"	l
e5c	grep.asm	/^ e5c:	48 b8 33 08 00 00 00 	movabs $0x833,%rax$/;"	l
e5c	imshow.asm	/^ e5c:	48 01 45 f8          	add    %rax,-0x8(%rbp)$/;"	l
e5c	ls.asm	/^     e5c:	c9                   	leaveq $/;"	l
e5d	ls.asm	/^     e5d:	c3                   	retq   $/;"	l
e5e	ls.asm	/^     e5e:	55                   	push   %rbp$/;"	l
e5e	sh.asm	/^     e5e:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx$/;"	l
e5f	ls.asm	/^     e5f:	48 89 e5             	mov    %rsp,%rbp$/;"	l
e5f	usertests.asm	/^     e5f:	00 00 00 $/;"	l
e6	ln.asm	/^  e6:	89 55 f0             	mov    %edx,-0x10(%rbp)$/;"	l
e6	ls.asm	/^      e6:	48 89 c7             	mov    %rax,%rdi$/;"	l
e60	imshow.asm	/^ e60:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
e62	ls.asm	/^     e62:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
e62	sh.asm	/^     e62:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
e62	usertests.asm	/^     e62:	48 b8 8e 60 00 00 00 	movabs $0x608e,%rax$/;"	l
e63	grep.asm	/^ e63:	00 00 00 $/;"	l
e64	imshow.asm	/^ e64:	8b 55 ec             	mov    -0x14(%rbp),%edx$/;"	l
e66	grep.asm	/^ e66:	ff d0                	callq  *%rax$/;"	l
e66	ls.asm	/^     e66:	89 7d ec             	mov    %edi,-0x14(%rbp)$/;"	l
e66	sh.asm	/^     e66:	48 ba 44 1e 00 00 00 	movabs $0x1e44,%rdx$/;"	l
e67	imshow.asm	/^ e67:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
e68	grep.asm	/^ e68:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
e69	ls.asm	/^     e69:	81 7d ec ff 0f 00 00 	cmpl   $0xfff,-0x14(%rbp)$/;"	l
e69	usertests.asm	/^     e69:	00 00 00 $/;"	l
e6a	imshow.asm	/^ e6a:	48 b8 30 12 00 00 00 	movabs $0x1230,%rax$/;"	l
e6c	grep.asm	/^ e6c:	48 83 7d f8 ff       	cmpq   $0xffffffffffffffff,-0x8(%rbp)$/;"	l
e6c	usertests.asm	/^     e6c:	ff d0                	callq  *%rax$/;"	l
e6d	sh.asm	/^     e6d:	00 00 00 $/;"	l
e6e	usertests.asm	/^     e6e:	85 c0                	test   %eax,%eax$/;"	l
e7	forktest.asm	/^  e7:	ff d0                	callq  *%rax$/;"	l
e7	mkdir.asm	/^  e7:	48 89 f7             	mov    %rsi,%rdi$/;"	l
e7	rm.asm	/^  e7:	48 89 f7             	mov    %rsi,%rdi$/;"	l
e7	sh.asm	/^      e7:	00 00 00 $/;"	l
e7	stressfs.asm	/^  e7:	eb 24                	jmp    10d <main+0x10d>$/;"	l
e7	zombie.asm	/^  e7:	0f b6 00             	movzbl (%rax),%eax$/;"	l
e70	ls.asm	/^     e70:	77 07                	ja     e79 <morecore+0x1b>$/;"	l
e70	sh.asm	/^     e70:	48 89 ce             	mov    %rcx,%rsi$/;"	l
e70	usertests.asm	/^     e70:	79 35                	jns    ea7 <dirtest+0xcb>$/;"	l
e71	grep.asm	/^ e71:	75 07                	jne    e7a <morecore+0x41>$/;"	l
e71	imshow.asm	/^ e71:	00 00 00 $/;"	l
e72	ls.asm	/^     e72:	c7 45 ec 00 10 00 00 	movl   $0x1000,-0x14(%rbp)$/;"	l
e72	usertests.asm	/^     e72:	48 b8 08 88 00 00 00 	movabs $0x8808,%rax$/;"	l
e73	grep.asm	/^ e73:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
e73	sh.asm	/^     e73:	48 89 c7             	mov    %rax,%rdi$/;"	l
e74	imshow.asm	/^ e74:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
e76	sh.asm	/^     e76:	48 b8 51 09 00 00 00 	movabs $0x951,%rax$/;"	l
e78	grep.asm	/^ e78:	eb 36                	jmp    eb0 <morecore+0x77>$/;"	l
e78	imshow.asm	/^ e78:	48 89 10             	mov    %rdx,(%rax)$/;"	l
e79	ls.asm	/^     e79:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
e79	usertests.asm	/^     e79:	00 00 00 $/;"	l
e7a	grep.asm	/^ e7a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
e7b	imshow.asm	/^ e7b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
e7c	ls.asm	/^     e7c:	c1 e0 04             	shl    $0x4,%eax$/;"	l
e7c	usertests.asm	/^     e7c:	8b 00                	mov    (%rax),%eax$/;"	l
e7d	sh.asm	/^     e7d:	00 00 00 $/;"	l
e7e	grep.asm	/^ e7e:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
e7e	usertests.asm	/^     e7e:	48 be 87 6c 00 00 00 	movabs $0x6c87,%rsi$/;"	l
e7f	imshow.asm	/^ e7f:	48 83 c0 10          	add    $0x10,%rax$/;"	l
e7f	ls.asm	/^     e7f:	89 c7                	mov    %eax,%edi$/;"	l
e8	bad_mmap.asm	/^  e8:	ff d2                	callq  *%rdx$/;"	l
e8	echo.asm	/^  e8:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx$/;"	l
e80	sh.asm	/^     e80:	ff d0                	callq  *%rax$/;"	l
e81	ls.asm	/^     e81:	48 b8 58 08 00 00 00 	movabs $0x858,%rax$/;"	l
e82	grep.asm	/^ e82:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
e82	sh.asm	/^     e82:	85 c0                	test   %eax,%eax$/;"	l
e83	imshow.asm	/^ e83:	eb 4e                	jmp    ed3 <malloc+0x148>$/;"	l
e84	sh.asm	/^     e84:	75 16                	jne    e9c <parseblock+0xcb>$/;"	l
e85	imshow.asm	/^ e85:	48 b8 30 12 00 00 00 	movabs $0x1230,%rax$/;"	l
e85	usertests.asm	/^     e85:	00 00 00 $/;"	l
e86	grep.asm	/^ e86:	8b 55 ec             	mov    -0x14(%rbp),%edx$/;"	l
e86	sh.asm	/^     e86:	48 bf 46 1e 00 00 00 	movabs $0x1e46,%rdi$/;"	l
e88	ls.asm	/^     e88:	00 00 00 $/;"	l
e88	usertests.asm	/^     e88:	89 c7                	mov    %eax,%edi$/;"	l
e89	grep.asm	/^ e89:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
e8a	usertests.asm	/^     e8a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
e8b	ls.asm	/^     e8b:	ff d0                	callq  *%rax$/;"	l
e8c	grep.asm	/^ e8c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
e8c	imshow.asm	/^ e8c:	00 00 00 $/;"	l
e8d	ls.asm	/^     e8d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
e8d	sh.asm	/^     e8d:	00 00 00 $/;"	l
e8f	imshow.asm	/^ e8f:	48 8b 00             	mov    (%rax),%rax$/;"	l
e8f	usertests.asm	/^     e8f:	48 ba db 61 00 00 00 	movabs $0x61db,%rdx$/;"	l
e9	cat.asm	/^  e9:	00 00 00 $/;"	l
e9	forktest.asm	/^  e9:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)$/;"	l
e9	grep.asm	/^  e9:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)$/;"	l
e9	init.asm	/^  e9:	75 6c                	jne    157 <main+0x157>$/;"	l
e9	kill.asm	/^  e9:	48 8d 50 01          	lea    0x1(%rax),%rdx$/;"	l
e9	ln.asm	/^  e9:	90                   	nop$/;"	l
e9	ls.asm	/^      e9:	48 b8 94 05 00 00 00 	movabs $0x594,%rax$/;"	l
e9	stressfs.asm	/^  e9:	48 8d 8d e0 fd ff ff 	lea    -0x220(%rbp),%rcx$/;"	l
e9	wc.asm	/^  e9:	00 00 00 $/;"	l
e90	grep.asm	/^ e90:	48 83 c0 10          	add    $0x10,%rax$/;"	l
e90	sh.asm	/^     e90:	48 b8 26 05 00 00 00 	movabs $0x526,%rax$/;"	l
e91	ls.asm	/^     e91:	48 83 7d f8 ff       	cmpq   $0xffffffffffffffff,-0x8(%rbp)$/;"	l
e92	imshow.asm	/^ e92:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)$/;"	l
e94	grep.asm	/^ e94:	48 89 c7             	mov    %rax,%rdi$/;"	l
e96	imshow.asm	/^ e96:	75 23                	jne    ebb <malloc+0x130>$/;"	l
e96	ls.asm	/^     e96:	75 07                	jne    e9f <morecore+0x41>$/;"	l
e96	usertests.asm	/^     e96:	00 00 00 $/;"	l
e97	grep.asm	/^ e97:	48 b8 07 0d 00 00 00 	movabs $0xd07,%rax$/;"	l
e97	sh.asm	/^     e97:	00 00 00 $/;"	l
e98	imshow.asm	/^ e98:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
e98	ls.asm	/^     e98:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
e99	usertests.asm	/^     e99:	ff d2                	callq  *%rdx$/;"	l
e9a	sh.asm	/^     e9a:	ff d0                	callq  *%rax$/;"	l
e9b	imshow.asm	/^ e9b:	89 c7                	mov    %eax,%edi$/;"	l
e9b	usertests.asm	/^     e9b:	48 b8 02 60 00 00 00 	movabs $0x6002,%rax$/;"	l
e9c	sh.asm	/^     e9c:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi$/;"	l
e9d	imshow.asm	/^ e9d:	48 b8 12 0d 00 00 00 	movabs $0xd12,%rax$/;"	l
e9d	ls.asm	/^     e9d:	eb 36                	jmp    ed5 <morecore+0x77>$/;"	l
e9e	grep.asm	/^ e9e:	00 00 00 $/;"	l
e9f	ls.asm	/^     e9f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ea	bad_mmap.asm	/^  ea:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ea	imshow.asm	/^  ea:	00 00 00 $/;"	l
ea	ln.asm	/^  ea:	c9                   	leaveq $/;"	l
ea	mkdir.asm	/^  ea:	89 d1                	mov    %edx,%ecx$/;"	l
ea	rm.asm	/^  ea:	89 d1                	mov    %edx,%ecx$/;"	l
ea	sh.asm	/^      ea:	ff d0                	callq  *%rax$/;"	l
ea	zombie.asm	/^  ea:	0f b6 d0             	movzbl %al,%edx$/;"	l
ea0	sh.asm	/^     ea0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ea1	grep.asm	/^ ea1:	ff d0                	callq  *%rax$/;"	l
ea2	usertests.asm	/^     ea2:	00 00 00 $/;"	l
ea3	grep.asm	/^ ea3:	48 b8 30 17 00 00 00 	movabs $0x1730,%rax$/;"	l
ea3	ls.asm	/^     ea3:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ea4	imshow.asm	/^ ea4:	00 00 00 $/;"	l
ea4	sh.asm	/^     ea4:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
ea5	usertests.asm	/^     ea5:	ff d0                	callq  *%rax$/;"	l
ea7	imshow.asm	/^ ea7:	ff d0                	callq  *%rax$/;"	l
ea7	ls.asm	/^     ea7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ea7	usertests.asm	/^     ea7:	48 bf 9a 6c 00 00 00 	movabs $0x6c9a,%rdi$/;"	l
ea9	imshow.asm	/^ ea9:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ea9	sh.asm	/^     ea9:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
eaa	grep.asm	/^ eaa:	00 00 00 $/;"	l
eab	ls.asm	/^     eab:	8b 55 ec             	mov    -0x14(%rbp),%edx$/;"	l
ead	grep.asm	/^ ead:	48 8b 00             	mov    (%rax),%rax$/;"	l
ead	imshow.asm	/^ ead:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)$/;"	l
eae	ls.asm	/^     eae:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
eae	sh.asm	/^     eae:	48 89 c7             	mov    %rax,%rdi$/;"	l
eae	usertests.asm	/^     eae:	00 00 00 $/;"	l
eargv	sh.c	/^  char *eargv[MAXARGS];$/;"	m	struct:execcmd	file:
eax	mmu.h	/^  uint eax;          \/\/ More saved state (registers)$/;"	m	struct:taskstate
eb	eager_mmap.asm	/^  eb:	00 00 00 $/;"	l
eb	init.asm	/^  eb:	48 be a0 0f 00 00 00 	movabs $0xfa0,%rsi$/;"	l
eb	lazy_mmap.asm	/^  eb:	00 00 00 $/;"	l
eb	ln.asm	/^  eb:	c3                   	retq   $/;"	l
eb0	grep.asm	/^ eb0:	c9                   	leaveq $/;"	l
eb1	grep.asm	/^ eb1:	c3                   	retq   $/;"	l
eb1	ls.asm	/^     eb1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
eb1	sh.asm	/^     eb1:	48 b8 aa 07 00 00 00 	movabs $0x7aa,%rax$/;"	l
eb1	usertests.asm	/^     eb1:	48 b8 8e 60 00 00 00 	movabs $0x608e,%rax$/;"	l
eb2	grep.asm	/^ eb2:	55                   	push   %rbp$/;"	l
eb2	imshow.asm	/^ eb2:	75 07                	jne    ebb <malloc+0x130>$/;"	l
eb3	grep.asm	/^ eb3:	48 89 e5             	mov    %rsp,%rbp$/;"	l
eb4	imshow.asm	/^ eb4:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
eb5	ls.asm	/^     eb5:	48 83 c0 10          	add    $0x10,%rax$/;"	l
eb6	grep.asm	/^ eb6:	48 83 ec 30          	sub    $0x30,%rsp$/;"	l
eb8	sh.asm	/^     eb8:	00 00 00 $/;"	l
eb8	usertests.asm	/^     eb8:	00 00 00 $/;"	l
eb9	imshow.asm	/^ eb9:	eb 18                	jmp    ed3 <malloc+0x148>$/;"	l
eb9	ls.asm	/^     eb9:	48 89 c7             	mov    %rax,%rdi$/;"	l
eba	grep.asm	/^ eba:	89 7d dc             	mov    %edi,-0x24(%rbp)$/;"	l
ebb	imshow.asm	/^ ebb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ebb	sh.asm	/^     ebb:	ff d0                	callq  *%rax$/;"	l
ebb	usertests.asm	/^     ebb:	ff d0                	callq  *%rax$/;"	l
ebc	ls.asm	/^     ebc:	48 b8 2c 0d 00 00 00 	movabs $0xd2c,%rax$/;"	l
ebd	grep.asm	/^ ebd:	8b 45 dc             	mov    -0x24(%rbp),%eax$/;"	l
ebd	sh.asm	/^     ebd:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx$/;"	l
ebd	usertests.asm	/^     ebd:	85 c0                	test   %eax,%eax$/;"	l
ebf	imshow.asm	/^ ebf:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ebf	usertests.asm	/^     ebf:	79 35                	jns    ef6 <dirtest+0x11a>$/;"	l
ebp	kernel.asm	/^    ebp = (addr_t*)ebp[0]; \/\/ saved %ebp$/;"	d
ebp	kernel.asm	/^    ebp = (uint*)ebp[0]; \/\/ saved %ebp$/;"	d
ebp	mmu.h	/^  uint *ebp;$/;"	m	struct:taskstate
ebp	proc.h	/^  addr_t ebp; \/\/rbp$/;"	m	struct:context
ebx	mmu.h	/^  uint ebx;$/;"	m	struct:taskstate
ec	cat.asm	/^  ec:	ff d0                	callq  *%rax$/;"	l
ec	echo.asm	/^  ec:	48 8d 4a 01          	lea    0x1(%rdx),%rcx$/;"	l
ec	ln.asm	/^  ec:	55                   	push   %rbp$/;"	l
ec	mkdir.asm	/^  ec:	fc                   	cld    $/;"	l
ec	rm.asm	/^  ec:	fc                   	cld    $/;"	l
ec	sh.asm	/^      ec:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ec	usertests.asm	/^      ec:	00 00 00 $/;"	l
ec	wc.asm	/^  ec:	bf 01 00 00 00       	mov    $0x1,%edi$/;"	l
ec0	grep.asm	/^ ec0:	48 83 c0 0f          	add    $0xf,%rax$/;"	l
ec1	sh.asm	/^     ec1:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx$/;"	l
ec1	usertests.asm	/^     ec1:	48 b8 08 88 00 00 00 	movabs $0x8808,%rax$/;"	l
ec3	imshow.asm	/^ ec3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ec3	ls.asm	/^     ec3:	00 00 00 $/;"	l
ec4	grep.asm	/^ ec4:	48 c1 e8 04          	shr    $0x4,%rax$/;"	l
ec5	sh.asm	/^     ec5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ec6	ls.asm	/^     ec6:	ff d0                	callq  *%rax$/;"	l
ec7	imshow.asm	/^ ec7:	48 8b 00             	mov    (%rax),%rax$/;"	l
ec8	grep.asm	/^ ec8:	83 c0 01             	add    $0x1,%eax$/;"	l
ec8	ls.asm	/^     ec8:	48 b8 50 13 00 00 00 	movabs $0x1350,%rax$/;"	l
ec8	usertests.asm	/^     ec8:	00 00 00 $/;"	l
ec9	sh.asm	/^     ec9:	48 89 ce             	mov    %rcx,%rsi$/;"	l
eca	imshow.asm	/^ eca:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ecb	grep.asm	/^ ecb:	89 45 ec             	mov    %eax,-0x14(%rbp)$/;"	l
ecb	usertests.asm	/^     ecb:	8b 00                	mov    (%rax),%eax$/;"	l
ecc	sh.asm	/^     ecc:	48 89 c7             	mov    %rax,%rdi$/;"	l
ecd	usertests.asm	/^     ecd:	48 be 9d 6c 00 00 00 	movabs $0x6c9d,%rsi$/;"	l
ece	grep.asm	/^ ece:	48 b8 30 17 00 00 00 	movabs $0x1730,%rax$/;"	l
ece	imshow.asm	/^ ece:	e9 41 ff ff ff       	jmpq   e14 <malloc+0x89>$/;"	l
ecf	ls.asm	/^     ecf:	00 00 00 $/;"	l
ecf	sh.asm	/^     ecf:	48 b8 8e 0c 00 00 00 	movabs $0xc8e,%rax$/;"	l
echoargv	usertests.c	/^char *echoargv[] = { "echo", "ALL", "TESTS", "PASSED", 0 };$/;"	v
ecmd	sh.asm	/^    ecmd = (struct execcmd*)cmd;$/;"	d
ecx	mmu.h	/^  uint ecx;$/;"	m	struct:taskstate
ed	forktest.asm	/^  ed:	81 7d fc e7 03 00 00 	cmpl   $0x3e7,-0x4(%rbp)$/;"	l
ed	grep.asm	/^  ed:	7e 3c                	jle    12b <grep+0x12b>$/;"	l
ed	imshow.asm	/^  ed:	ff d0                	callq  *%rax$/;"	l
ed	kill.asm	/^  ed:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)$/;"	l
ed	ln.asm	/^  ed:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ed	mkdir.asm	/^  ed:	f3 aa                	rep stos %al,%es:(%rdi)$/;"	l
ed	rm.asm	/^  ed:	f3 aa                	rep stos %al,%es:(%rdi)$/;"	l
ed	zombie.asm	/^  ed:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ed2	ls.asm	/^     ed2:	48 8b 00             	mov    (%rax),%rax$/;"	l
ed3	imshow.asm	/^ ed3:	c9                   	leaveq $/;"	l
ed4	imshow.asm	/^ ed4:	c3                   	retq   $/;"	l
ed4	usertests.asm	/^     ed4:	00 00 00 $/;"	l
ed5	grep.asm	/^ ed5:	00 00 00 $/;"	l
ed5	ls.asm	/^     ed5:	c9                   	leaveq $/;"	l
ed6	ls.asm	/^     ed6:	c3                   	retq   $/;"	l
ed6	sh.asm	/^     ed6:	00 00 00 $/;"	l
ed7	ls.asm	/^     ed7:	55                   	push   %rbp$/;"	l
ed7	usertests.asm	/^     ed7:	89 c7                	mov    %eax,%edi$/;"	l
ed8	grep.asm	/^ ed8:	48 8b 00             	mov    (%rax),%rax$/;"	l
ed8	ls.asm	/^     ed8:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ed9	sh.asm	/^     ed9:	ff d0                	callq  *%rax$/;"	l
ed9	usertests.asm	/^     ed9:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
edb	grep.asm	/^ edb:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
edb	ls.asm	/^     edb:	48 83 ec 30          	sub    $0x30,%rsp$/;"	l
edb	sh.asm	/^     edb:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ede	usertests.asm	/^     ede:	48 ba db 61 00 00 00 	movabs $0x61db,%rdx$/;"	l
edf	grep.asm	/^ edf:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)$/;"	l
edf	ls.asm	/^     edf:	89 7d dc             	mov    %edi,-0x24(%rbp)$/;"	l
edf	sh.asm	/^     edf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
edi	mmu.h	/^  uint edi;$/;"	m	struct:taskstate
edx	mmu.h	/^  uint edx;$/;"	m	struct:taskstate
ee	cat.asm	/^  ee:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%rbp)$/;"	l
ee	eager_mmap.asm	/^  ee:	ff d2                	callq  *%rdx$/;"	l
ee	lazy_mmap.asm	/^  ee:	ff d2                	callq  *%rdx$/;"	l
ee2	ls.asm	/^     ee2:	8b 45 dc             	mov    -0x24(%rbp),%eax$/;"	l
ee3	sh.asm	/^     ee3:	c9                   	leaveq $/;"	l
ee4	grep.asm	/^ ee4:	75 4a                	jne    f30 <malloc+0x7e>$/;"	l
ee4	sh.asm	/^     ee4:	c3                   	retq   $/;"	l
ee5	ls.asm	/^     ee5:	48 83 c0 0f          	add    $0xf,%rax$/;"	l
ee5	sh.asm	/^     ee5:	55                   	push   %rbp$/;"	l
ee5	usertests.asm	/^     ee5:	00 00 00 $/;"	l
ee6	grep.asm	/^ ee6:	48 b8 20 17 00 00 00 	movabs $0x1720,%rax$/;"	l
ee6	sh.asm	/^     ee6:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ee8	usertests.asm	/^     ee8:	ff d2                	callq  *%rdx$/;"	l
ee9	ls.asm	/^     ee9:	48 c1 e8 04          	shr    $0x4,%rax$/;"	l
ee9	sh.asm	/^     ee9:	48 83 ec 40          	sub    $0x40,%rsp$/;"	l
eea	usertests.asm	/^     eea:	48 b8 02 60 00 00 00 	movabs $0x6002,%rax$/;"	l
eed	grep.asm	/^ eed:	00 00 00 $/;"	l
eed	ls.asm	/^     eed:	83 c0 01             	add    $0x1,%eax$/;"	l
eed	sh.asm	/^     eed:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)$/;"	l
ef	bad_mmap.asm	/^  ef:	48 bf 24 0e 00 00 00 	movabs $0xe24,%rdi$/;"	l
ef	grep.asm	/^  ef:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ef	imshow.asm	/^  ef:	89 45 e8             	mov    %eax,-0x18(%rbp)$/;"	l
ef	mkdir.asm	/^  ef:	89 ca                	mov    %ecx,%edx$/;"	l
ef	rm.asm	/^  ef:	89 ca                	mov    %ecx,%edx$/;"	l
ef	usertests.asm	/^      ef:	8b 00                	mov    (%rax),%eax$/;"	l
ef0	grep.asm	/^ ef0:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ef0	ls.asm	/^     ef0:	89 45 ec             	mov    %eax,-0x14(%rbp)$/;"	l
ef1	sh.asm	/^     ef1:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)$/;"	l
ef1	usertests.asm	/^     ef1:	00 00 00 $/;"	l
ef3	ls.asm	/^     ef3:	48 b8 50 13 00 00 00 	movabs $0x1350,%rax$/;"	l
ef4	grep.asm	/^ ef4:	48 b8 30 17 00 00 00 	movabs $0x1730,%rax$/;"	l
ef4	usertests.asm	/^     ef4:	ff d0                	callq  *%rax$/;"	l
ef5	sh.asm	/^     ef5:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx$/;"	l
ef6	usertests.asm	/^     ef6:	48 bf 82 6c 00 00 00 	movabs $0x6c82,%rdi$/;"	l
ef9	sh.asm	/^     ef9:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
efa	ls.asm	/^     efa:	00 00 00 $/;"	l
efb	grep.asm	/^ efb:	00 00 00 $/;"	l
efd	ls.asm	/^     efd:	48 8b 00             	mov    (%rax),%rax$/;"	l
efd	sh.asm	/^     efd:	48 ba 37 1e 00 00 00 	movabs $0x1e37,%rdx$/;"	l
efd	usertests.asm	/^     efd:	00 00 00 $/;"	l
efe	grep.asm	/^ efe:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
efile	sh.c	/^  char *efile;$/;"	m	struct:redircmd	file:
eflags	kernel.asm	/^  eflags = readeflags();$/;"	d
eflags	mmu.h	/^  uint eflags;$/;"	m	struct:taskstate
ehsize	elf.h	/^  ushort ehsize;$/;"	m	struct:elfhdr
eip	mmu.h	/^  uint *eip;         \/\/ Saved state from last task switch$/;"	m	struct:taskstate
eip	proc.h	/^  addr_t eip; \/\/rip;$/;"	m	struct:context
elf	elf.h	/^  uchar elf[12];$/;"	m	struct:elfhdr
elfhdr	elf.h	/^struct elfhdr {$/;"	s
empty	kernel.asm	/^      empty = ip;$/;"	d
empty	kernel.asm	/^  empty = 0;$/;"	d
end_op	log.c	/^end_op(void)$/;"	f
entry	elf.h	/^  addr_t entry;$/;"	m	struct:elfhdr
entry	mp.h	/^  ushort entry;                 \/\/ entry count$/;"	m	struct:mpconf
entry32mp	entry.S	/^entry32mp:$/;"	l
entry32mp	kernel.asm	/^entry32mp:$/;"	l
entry64high	entry.S	/^entry64high:$/;"	l
entry64high	kernel.asm	/^entry64high:$/;"	l
entry64low	entry.S	/^entry64low:$/;"	l
entry64low	kernel.asm	/^entry64low:$/;"	l
entry64mp	entry.S	/^entry64mp:$/;"	l
entry64mp	kernel.asm	/^entry64mp:$/;"	l
entry_addr	bootmain.c	/^  uint64 entry_addr;$/;"	m	struct:mbheader	file:
ep	kernel.asm	/^  ep = (char*)proc->sz;$/;"	d
err	x86.h	/^   uint64 err;$/;"	m	struct:trapframe
es	mmu.h	/^  ushort es;         \/\/ Even more saved state (segment selectors)$/;"	m	struct:taskstate
es	sh.asm	/^  es = s + strlen(s);$/;"	d
esi	mmu.h	/^  uint esi;$/;"	m	struct:taskstate
esp	mmu.h	/^  uint *esp;$/;"	m	struct:taskstate
esp0	mmu.h	/^  uint esp0;         \/\/ Stack pointers and segment selectors$/;"	m	struct:taskstate
esp1	mmu.h	/^  uint *esp1;$/;"	m	struct:taskstate
esp2	mmu.h	/^  uint *esp2;$/;"	m	struct:taskstate
exec	exec.c	/^exec(char *path, char **argv)$/;"	f
execcmd	sh.c	/^execcmd(void)$/;"	f
execcmd	sh.c	/^struct execcmd {$/;"	s	file:
exectest	usertests.c	/^exectest(void)$/;"	f
exit	initcode.S	/^exit:$/;"	l
exit	initcode.asm	/^exit:$/;"	l
exit	proc.c	/^exit(void)$/;"	f
exitiputtest	usertests.c	/^exitiputtest(void)$/;"	f
exitwait	usertests.c	/^exitwait(void)$/;"	f
extern	kernel.asm	/^extern addr_t vectors[];  \/\/ in vectors.S: array of 256 entry pointers$/;"	l
f	Makefile	/^	dd if=\/dev\/zero of=xv6.img count=10000$/;"	m
f	Makefile	/^	dd if=\/dev\/zero of=xv6memfs.img count=10000$/;"	m
f	Makefile	/^	dd if=bootblock of=xv6.img conv=notrunc$/;"	m
f	Makefile	/^	dd if=bootblock of=xv6memfs.img conv=notrunc$/;"	m
f	Makefile	/^	dd if=kernel of=xv6.img seek=1 conv=notrunc$/;"	m
f	Makefile	/^	dd if=kernelmemfs of=xv6memfs.img seek=1 conv=notrunc$/;"	m
f	bad_mmap.asm	/^   f:	48 be 78 0d 00 00 00 	movabs $0xd78,%rsi$/;"	l
f	eager_mmap.asm	/^   f:	48 be c0 0d 00 00 00 	movabs $0xdc0,%rsi$/;"	l
f	echo.asm	/^   f:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%rbp)$/;"	l
f	grep.asm	/^   f:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)$/;"	l
f	kill.asm	/^   f:	83 7d ec 01          	cmpl   $0x1,-0x14(%rbp)$/;"	l
f	lazy_mmap.asm	/^   f:	48 be c0 0d 00 00 00 	movabs $0xdc0,%rsi$/;"	l
f	ln.asm	/^   f:	83 7d fc 03          	cmpl   $0x3,-0x4(%rbp)$/;"	l
f	mkdir.asm	/^   f:	83 7d ec 01          	cmpl   $0x1,-0x14(%rbp)$/;"	l
f	rm.asm	/^   f:	83 7d ec 01          	cmpl   $0x1,-0x14(%rbp)$/;"	l
f	wc.asm	/^   f:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)$/;"	l
f0	eager_mmap.asm	/^  f0:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0	echo.asm	/^  f0:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)$/;"	l
f0	lazy_mmap.asm	/^  f0:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0	ln.asm	/^  f0:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
f0	ls.asm	/^      f0:	00 00 00 $/;"	l
f0	sh.asm	/^      f0:	8b 50 20             	mov    0x20(%rax),%edx$/;"	l
f0	stressfs.asm	/^  f0:	8b 45 f8             	mov    -0x8(%rbp),%eax$/;"	l
f00	ls.asm	/^     f00:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
f00	usertests.asm	/^     f00:	48 b8 66 60 00 00 00 	movabs $0x6066,%rax$/;"	l
f02	grep.asm	/^ f02:	48 89 10             	mov    %rdx,(%rax)$/;"	l
f04	ls.asm	/^     f04:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)$/;"	l
f04	sh.asm	/^     f04:	00 00 00 $/;"	l
f05	grep.asm	/^ f05:	48 b8 30 17 00 00 00 	movabs $0x1730,%rax$/;"	l
f07	sh.asm	/^     f07:	48 89 ce             	mov    %rcx,%rsi$/;"	l
f07	usertests.asm	/^     f07:	00 00 00 $/;"	l
f09	ls.asm	/^     f09:	75 4a                	jne    f55 <malloc+0x7e>$/;"	l
f0a	sh.asm	/^     f0a:	48 89 c7             	mov    %rax,%rdi$/;"	l
f0a	usertests.asm	/^     f0a:	ff d0                	callq  *%rax$/;"	l
f0b	ls.asm	/^     f0b:	48 b8 40 13 00 00 00 	movabs $0x1340,%rax$/;"	l
f0c	grep.asm	/^ f0c:	00 00 00 $/;"	l
f0c	usertests.asm	/^     f0c:	85 c0                	test   %eax,%eax$/;"	l
f0d	sh.asm	/^     f0d:	48 b8 51 09 00 00 00 	movabs $0x951,%rax$/;"	l
f0e	usertests.asm	/^     f0e:	79 35                	jns    f45 <dirtest+0x169>$/;"	l
f0f	grep.asm	/^ f0f:	48 8b 10             	mov    (%rax),%rdx$/;"	l
f1	kill.asm	/^  f1:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx$/;"	l
f1	mkdir.asm	/^  f1:	48 89 fe             	mov    %rdi,%rsi$/;"	l
f1	rm.asm	/^  f1:	48 89 fe             	mov    %rdi,%rsi$/;"	l
f1	usertests.asm	/^      f1:	48 be d0 68 00 00 00 	movabs $0x68d0,%rsi$/;"	l
f1	wc.asm	/^  f1:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f1	zombie.asm	/^  f1:	0f b6 00             	movzbl (%rax),%eax$/;"	l
f10	usertests.asm	/^     f10:	48 b8 08 88 00 00 00 	movabs $0x8808,%rax$/;"	l
f12	grep.asm	/^ f12:	48 b8 20 17 00 00 00 	movabs $0x1720,%rax$/;"	l
f12	ls.asm	/^     f12:	00 00 00 $/;"	l
f14	sh.asm	/^     f14:	00 00 00 $/;"	l
f15	ls.asm	/^     f15:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
f17	sh.asm	/^     f17:	ff d0                	callq  *%rax$/;"	l
f17	usertests.asm	/^     f17:	00 00 00 $/;"	l
f19	grep.asm	/^ f19:	00 00 00 $/;"	l
f19	ls.asm	/^     f19:	48 b8 50 13 00 00 00 	movabs $0x1350,%rax$/;"	l
f19	sh.asm	/^     f19:	85 c0                	test   %eax,%eax$/;"	l
f1a	usertests.asm	/^     f1a:	8b 00                	mov    (%rax),%eax$/;"	l
f1b	sh.asm	/^     f1b:	74 1f                	je     f3c <parseexec+0x57>$/;"	l
f1c	grep.asm	/^ f1c:	48 89 10             	mov    %rdx,(%rax)$/;"	l
f1c	usertests.asm	/^     f1c:	48 be ae 6c 00 00 00 	movabs $0x6cae,%rsi$/;"	l
f1d	sh.asm	/^     f1d:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx$/;"	l
f1f	grep.asm	/^ f1f:	48 b8 20 17 00 00 00 	movabs $0x1720,%rax$/;"	l
f2	grep.asm	/^  f2:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx$/;"	l
f2	imshow.asm	/^  f2:	81 7d e8 e8 03 00 00 	cmpl   $0x3e8,-0x18(%rbp)$/;"	l
f2	init.asm	/^  f2:	00 00 00 $/;"	l
f20	ls.asm	/^     f20:	00 00 00 $/;"	l
f21	sh.asm	/^     f21:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
f23	ls.asm	/^     f23:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
f23	usertests.asm	/^     f23:	00 00 00 $/;"	l
f25	sh.asm	/^     f25:	48 89 d6             	mov    %rdx,%rsi$/;"	l
f26	grep.asm	/^ f26:	00 00 00 $/;"	l
f26	usertests.asm	/^     f26:	89 c7                	mov    %eax,%edi$/;"	l
f27	ls.asm	/^     f27:	48 89 10             	mov    %rdx,(%rax)$/;"	l
f28	sh.asm	/^     f28:	48 89 c7             	mov    %rax,%rdi$/;"	l
f28	usertests.asm	/^     f28:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f29	grep.asm	/^ f29:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%rax)$/;"	l
f2a	ls.asm	/^     f2a:	48 b8 50 13 00 00 00 	movabs $0x1350,%rax$/;"	l
f2b	sh.asm	/^     f2b:	48 b8 d1 0d 00 00 00 	movabs $0xdd1,%rax$/;"	l
f2d	usertests.asm	/^     f2d:	48 ba db 61 00 00 00 	movabs $0x61db,%rdx$/;"	l
f3	ls.asm	/^      f3:	ff d0                	callq  *%rax$/;"	l
f3	sh.asm	/^      f3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
f3	stressfs.asm	/^  f3:	ba 00 02 00 00       	mov    $0x200,%edx$/;"	l
f30	grep.asm	/^ f30:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
f31	ls.asm	/^     f31:	00 00 00 $/;"	l
f32	sh.asm	/^     f32:	00 00 00 $/;"	l
f34	grep.asm	/^ f34:	48 8b 00             	mov    (%rax),%rax$/;"	l
f34	ls.asm	/^     f34:	48 8b 10             	mov    (%rax),%rdx$/;"	l
f34	usertests.asm	/^     f34:	00 00 00 $/;"	l
f35	sh.asm	/^     f35:	ff d0                	callq  *%rax$/;"	l
f37	grep.asm	/^ f37:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
f37	ls.asm	/^     f37:	48 b8 40 13 00 00 00 	movabs $0x1340,%rax$/;"	l
f37	sh.asm	/^     f37:	e9 57 01 00 00       	jmpq   1093 <parseexec+0x1ae>$/;"	l
f37	usertests.asm	/^     f37:	ff d2                	callq  *%rdx$/;"	l
f39	usertests.asm	/^     f39:	48 b8 02 60 00 00 00 	movabs $0x6002,%rax$/;"	l
f3b	grep.asm	/^ f3b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
f3c	sh.asm	/^     f3c:	48 b8 9d 05 00 00 00 	movabs $0x59d,%rax$/;"	l
f3e	ls.asm	/^     f3e:	00 00 00 $/;"	l
f3f	grep.asm	/^ f3f:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
f4	echo.asm	/^  f4:	0f b6 12             	movzbl (%rdx),%edx$/;"	l
f4	forktest.asm	/^  f4:	7e cc                	jle    c2 <forktest+0x31>$/;"	l
f4	ln.asm	/^  f4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
f4	mkdir.asm	/^  f4:	48 89 75 f8          	mov    %rsi,-0x8(%rbp)$/;"	l
f4	rm.asm	/^  f4:	48 89 75 f8          	mov    %rsi,-0x8(%rbp)$/;"	l
f4	zombie.asm	/^  f4:	0f b6 c0             	movzbl %al,%eax$/;"	l
f40	usertests.asm	/^     f40:	00 00 00 $/;"	l
f41	ls.asm	/^     f41:	48 89 10             	mov    %rdx,(%rax)$/;"	l
f42	grep.asm	/^ f42:	3b 45 ec             	cmp    -0x14(%rbp),%eax$/;"	l
f43	sh.asm	/^     f43:	00 00 00 $/;"	l
f43	usertests.asm	/^     f43:	ff d0                	callq  *%rax$/;"	l
f44	ls.asm	/^     f44:	48 b8 40 13 00 00 00 	movabs $0x1340,%rax$/;"	l
f45	grep.asm	/^ f45:	72 65                	jb     fac <malloc+0xfa>$/;"	l
f45	usertests.asm	/^     f45:	48 b8 08 88 00 00 00 	movabs $0x8808,%rax$/;"	l
f46	sh.asm	/^     f46:	ff d0                	callq  *%rax$/;"	l
f47	grep.asm	/^ f47:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
f48	sh.asm	/^     f48:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
f4b	grep.asm	/^ f4b:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
f4b	ls.asm	/^     f4b:	00 00 00 $/;"	l
f4c	sh.asm	/^     f4c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
f4c	usertests.asm	/^     f4c:	00 00 00 $/;"	l
f4e	grep.asm	/^ f4e:	3b 45 ec             	cmp    -0x14(%rbp),%eax$/;"	l
f4e	ls.asm	/^     f4e:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%rax)$/;"	l
f4f	usertests.asm	/^     f4f:	8b 00                	mov    (%rax),%eax$/;"	l
f5	cat.asm	/^  f5:	e9 a0 00 00 00       	jmpq   19a <main+0xde>$/;"	l
f5	eager_mmap.asm	/^  f5:	48 bf 67 0e 00 00 00 	movabs $0xe67,%rdi$/;"	l
f5	init.asm	/^  f5:	48 bf 08 0d 00 00 00 	movabs $0xd08,%rdi$/;"	l
f5	kill.asm	/^  f5:	48 8d 4a 01          	lea    0x1(%rdx),%rcx$/;"	l
f5	lazy_mmap.asm	/^  f5:	48 bf 67 0e 00 00 00 	movabs $0xe67,%rdi$/;"	l
f5	ls.asm	/^      f5:	48 b8 30 13 00 00 00 	movabs $0x1330,%rax$/;"	l
f50	sh.asm	/^     f50:	48 89 45 e8          	mov    %rax,-0x18(%rbp)$/;"	l
f51	grep.asm	/^ f51:	75 10                	jne    f63 <malloc+0xb1>$/;"	l
f51	usertests.asm	/^     f51:	48 be c2 6c 00 00 00 	movabs $0x6cc2,%rsi$/;"	l
f53	grep.asm	/^ f53:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
f54	sh.asm	/^     f54:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)$/;"	l
f55	ls.asm	/^     f55:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
f57	grep.asm	/^ f57:	48 8b 10             	mov    (%rax),%rdx$/;"	l
f58	usertests.asm	/^     f58:	00 00 00 $/;"	l
f59	ls.asm	/^     f59:	48 8b 00             	mov    (%rax),%rax$/;"	l
f5a	grep.asm	/^ f5a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
f5b	sh.asm	/^     f5b:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx$/;"	l
f5b	usertests.asm	/^     f5b:	89 c7                	mov    %eax,%edi$/;"	l
f5c	ls.asm	/^     f5c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
f5d	usertests.asm	/^     f5d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f5e	grep.asm	/^ f5e:	48 89 10             	mov    %rdx,(%rax)$/;"	l
f5f	sh.asm	/^     f5f:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx$/;"	l
f6	bad_mmap.asm	/^  f6:	00 00 00 $/;"	l
f6	forktest.asm	/^  f6:	eb 01                	jmp    f9 <forktest+0x68>$/;"	l
f6	grep.asm	/^  f6:	48 ba 20 13 00 00 00 	movabs $0x1320,%rdx$/;"	l
f6	wc.asm	/^  f6:	48 ba 54 07 00 00 00 	movabs $0x754,%rdx$/;"	l
f60	ls.asm	/^     f60:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
f61	grep.asm	/^ f61:	eb 2e                	jmp    f91 <malloc+0xdf>$/;"	l
f62	usertests.asm	/^     f62:	48 ba db 61 00 00 00 	movabs $0x61db,%rdx$/;"	l
f63	grep.asm	/^ f63:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
f63	sh.asm	/^     f63:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
f64	ls.asm	/^     f64:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
f67	grep.asm	/^ f67:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
f67	ls.asm	/^     f67:	3b 45 ec             	cmp    -0x14(%rbp),%eax$/;"	l
f67	sh.asm	/^     f67:	48 89 ce             	mov    %rcx,%rsi$/;"	l
f69	usertests.asm	/^     f69:	00 00 00 $/;"	l
f6a	grep.asm	/^ f6a:	2b 45 ec             	sub    -0x14(%rbp),%eax$/;"	l
f6a	ls.asm	/^     f6a:	72 65                	jb     fd1 <malloc+0xfa>$/;"	l
f6a	sh.asm	/^     f6a:	48 89 c7             	mov    %rax,%rdi$/;"	l
f6c	ls.asm	/^     f6c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
f6c	usertests.asm	/^     f6c:	ff d2                	callq  *%rdx$/;"	l
f6d	grep.asm	/^ f6d:	89 c2                	mov    %eax,%edx$/;"	l
f6d	sh.asm	/^     f6d:	48 b8 8e 0c 00 00 00 	movabs $0xc8e,%rax$/;"	l
f6e	usertests.asm	/^     f6e:	90                   	nop$/;"	l
f6f	grep.asm	/^ f6f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
f6f	usertests.asm	/^     f6f:	5d                   	pop    %rbp$/;"	l
f7	echo.asm	/^  f7:	88 10                	mov    %dl,(%rax)$/;"	l
f7	sh.asm	/^      f7:	48 8b 40 10          	mov    0x10(%rax),%rax$/;"	l
f7	zombie.asm	/^  f7:	29 c2                	sub    %eax,%edx$/;"	l
f70	ls.asm	/^     f70:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
f70	usertests.asm	/^     f70:	c3                   	retq   $/;"	l
f71	usertests.asm	/^     f71:	55                   	push   %rbp$/;"	l
f72	usertests.asm	/^     f72:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f73	grep.asm	/^ f73:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
f73	ls.asm	/^     f73:	3b 45 ec             	cmp    -0x14(%rbp),%eax$/;"	l
f74	sh.asm	/^     f74:	00 00 00 $/;"	l
f75	usertests.asm	/^     f75:	48 b8 08 88 00 00 00 	movabs $0x8808,%rax$/;"	l
f76	grep.asm	/^ f76:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
f76	ls.asm	/^     f76:	75 10                	jne    f88 <malloc+0xb1>$/;"	l
f77	sh.asm	/^     f77:	ff d0                	callq  *%rax$/;"	l
f78	ls.asm	/^     f78:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
f79	sh.asm	/^     f79:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
f7a	grep.asm	/^ f7a:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
f7c	ls.asm	/^     f7c:	48 8b 10             	mov    (%rax),%rdx$/;"	l
f7c	usertests.asm	/^     f7c:	00 00 00 $/;"	l
f7d	grep.asm	/^ f7d:	89 c0                	mov    %eax,%eax$/;"	l
f7d	sh.asm	/^     f7d:	e9 b4 00 00 00       	jmpq   1036 <parseexec+0x151>$/;"	l
f7f	grep.asm	/^ f7f:	48 c1 e0 04          	shl    $0x4,%rax$/;"	l
f7f	ls.asm	/^     f7f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
f7f	usertests.asm	/^     f7f:	8b 00                	mov    (%rax),%eax$/;"	l
f8	forktest.asm	/^  f8:	90                   	nop$/;"	l
f8	ln.asm	/^  f8:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)$/;"	l
f8	mkdir.asm	/^  f8:	89 55 f0             	mov    %edx,-0x10(%rbp)$/;"	l
f8	rm.asm	/^  f8:	89 55 f0             	mov    %edx,-0x10(%rbp)$/;"	l
f8	stressfs.asm	/^  f8:	48 89 ce             	mov    %rcx,%rsi$/;"	l
f8	usertests.asm	/^      f8:	00 00 00 $/;"	l
f81	usertests.asm	/^     f81:	48 be d1 6c 00 00 00 	movabs $0x6cd1,%rsi$/;"	l
f82	sh.asm	/^     f82:	48 8d 4d d0          	lea    -0x30(%rbp),%rcx$/;"	l
f83	grep.asm	/^ f83:	48 01 45 f8          	add    %rax,-0x8(%rbp)$/;"	l
f83	ls.asm	/^     f83:	48 89 10             	mov    %rdx,(%rax)$/;"	l
f86	ls.asm	/^     f86:	eb 2e                	jmp    fb6 <malloc+0xdf>$/;"	l
f86	sh.asm	/^     f86:	48 8d 55 d8          	lea    -0x28(%rbp),%rdx$/;"	l
f87	grep.asm	/^ f87:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
f88	ls.asm	/^     f88:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
f88	usertests.asm	/^     f88:	00 00 00 $/;"	l
f8a	sh.asm	/^     f8a:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi$/;"	l
f8b	grep.asm	/^ f8b:	8b 55 ec             	mov    -0x14(%rbp),%edx$/;"	l
f8b	usertests.asm	/^     f8b:	89 c7                	mov    %eax,%edi$/;"	l
f8c	ls.asm	/^     f8c:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
f8d	usertests.asm	/^     f8d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f8e	grep.asm	/^ f8e:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
f8e	sh.asm	/^     f8e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
f8f	ls.asm	/^     f8f:	2b 45 ec             	sub    -0x14(%rbp),%eax$/;"	l
f9	bad_mmap.asm	/^  f9:	48 b8 4e 05 00 00 00 	movabs $0x54e,%rax$/;"	l
f9	echo.asm	/^  f9:	0f b6 00             	movzbl (%rax),%eax$/;"	l
f9	forktest.asm	/^  f9:	81 7d fc e8 03 00 00 	cmpl   $0x3e8,-0x4(%rbp)$/;"	l
f9	imshow.asm	/^  f9:	74 25                	je     120 <main+0x120>$/;"	l
f9	kill.asm	/^  f9:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)$/;"	l
f9	zombie.asm	/^  f9:	89 d0                	mov    %edx,%eax$/;"	l
f91	grep.asm	/^ f91:	48 b8 30 17 00 00 00 	movabs $0x1730,%rax$/;"	l
f92	ls.asm	/^     f92:	89 c2                	mov    %eax,%edx$/;"	l
f92	sh.asm	/^     f92:	48 89 c7             	mov    %rax,%rdi$/;"	l
f92	usertests.asm	/^     f92:	48 ba db 61 00 00 00 	movabs $0x61db,%rdx$/;"	l
f94	ls.asm	/^     f94:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
f95	sh.asm	/^     f95:	48 b8 aa 07 00 00 00 	movabs $0x7aa,%rax$/;"	l
f98	grep.asm	/^ f98:	00 00 00 $/;"	l
f98	ls.asm	/^     f98:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
f99	usertests.asm	/^     f99:	00 00 00 $/;"	l
f9b	grep.asm	/^ f9b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
f9b	ls.asm	/^     f9b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
f9c	sh.asm	/^     f9c:	00 00 00 $/;"	l
f9c	usertests.asm	/^     f9c:	ff d2                	callq  *%rdx$/;"	l
f9e	usertests.asm	/^     f9e:	48 be e0 87 00 00 00 	movabs $0x87e0,%rsi$/;"	l
f9f	grep.asm	/^ f9f:	48 89 10             	mov    %rdx,(%rax)$/;"	l
f9f	ls.asm	/^     f9f:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
f9f	sh.asm	/^     f9f:	ff d0                	callq  *%rax$/;"	l
fa	cat.asm	/^  fa:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
fa1	sh.asm	/^     fa1:	89 45 e4             	mov    %eax,-0x1c(%rbp)$/;"	l
fa2	grep.asm	/^ fa2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
fa2	ls.asm	/^     fa2:	89 c0                	mov    %eax,%eax$/;"	l
fa4	ls.asm	/^     fa4:	48 c1 e0 04          	shl    $0x4,%rax$/;"	l
fa4	sh.asm	/^     fa4:	83 7d e4 00          	cmpl   $0x0,-0x1c(%rbp)$/;"	l
fa5	usertests.asm	/^     fa5:	00 00 00 $/;"	l
fa6	grep.asm	/^ fa6:	48 83 c0 10          	add    $0x10,%rax$/;"	l
fa8	ls.asm	/^     fa8:	48 01 45 f8          	add    %rax,-0x8(%rbp)$/;"	l
fa8	sh.asm	/^     fa8:	0f 84 b6 00 00 00    	je     1064 <parseexec+0x17f>$/;"	l
fa8	usertests.asm	/^     fa8:	48 bf 78 68 00 00 00 	movabs $0x6878,%rdi$/;"	l
faa	grep.asm	/^ faa:	eb 4e                	jmp    ffa <malloc+0x148>$/;"	l
fac	grep.asm	/^ fac:	48 b8 30 17 00 00 00 	movabs $0x1730,%rax$/;"	l
fac	ls.asm	/^     fac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
fae	sh.asm	/^     fae:	83 7d e4 61          	cmpl   $0x61,-0x1c(%rbp)$/;"	l
faf	usertests.asm	/^     faf:	00 00 00 $/;"	l
fb	imshow.asm	/^  fb:	8b 45 e8             	mov    -0x18(%rbp),%eax$/;"	l
fb	mkdir.asm	/^  fb:	90                   	nop$/;"	l
fb	rm.asm	/^  fb:	90                   	nop$/;"	l
fb	sh.asm	/^      fb:	89 d6                	mov    %edx,%esi$/;"	l
fb	stressfs.asm	/^  fb:	89 c7                	mov    %eax,%edi$/;"	l
fb	usertests.asm	/^      fb:	89 c7                	mov    %eax,%edi$/;"	l
fb	zombie.asm	/^  fb:	c9                   	leaveq $/;"	l
fb0	ls.asm	/^     fb0:	8b 55 ec             	mov    -0x14(%rbp),%edx$/;"	l
fb2	sh.asm	/^     fb2:	74 16                	je     fca <parseexec+0xe5>$/;"	l
fb2	usertests.asm	/^     fb2:	48 b8 48 60 00 00 00 	movabs $0x6048,%rax$/;"	l
fb3	grep.asm	/^ fb3:	00 00 00 $/;"	l
fb3	ls.asm	/^     fb3:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
fb4	sh.asm	/^     fb4:	48 bf 0a 1e 00 00 00 	movabs $0x1e0a,%rdi$/;"	l
fb6	grep.asm	/^ fb6:	48 8b 00             	mov    (%rax),%rax$/;"	l
fb6	ls.asm	/^     fb6:	48 b8 50 13 00 00 00 	movabs $0x1350,%rax$/;"	l
fb9	grep.asm	/^ fb9:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)$/;"	l
fb9	usertests.asm	/^     fb9:	00 00 00 $/;"	l
fbb	sh.asm	/^     fbb:	00 00 00 $/;"	l
fbc	usertests.asm	/^     fbc:	ff d0                	callq  *%rax$/;"	l
fbd	grep.asm	/^ fbd:	75 23                	jne    fe2 <malloc+0x130>$/;"	l
fbd	ls.asm	/^     fbd:	00 00 00 $/;"	l
fbe	sh.asm	/^     fbe:	48 b8 26 05 00 00 00 	movabs $0x526,%rax$/;"	l
fbe	usertests.asm	/^     fbe:	85 c0                	test   %eax,%eax$/;"	l
fbf	grep.asm	/^ fbf:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
fc	eager_mmap.asm	/^  fc:	00 00 00 $/;"	l
fc	echo.asm	/^  fc:	84 c0                	test   %al,%al$/;"	l
fc	init.asm	/^  fc:	00 00 00 $/;"	l
fc	lazy_mmap.asm	/^  fc:	00 00 00 $/;"	l
fc	ln.asm	/^  fc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
fc	ls.asm	/^      fc:	00 00 00 $/;"	l
fc	mkdir.asm	/^  fc:	c9                   	leaveq $/;"	l
fc	rm.asm	/^  fc:	c9                   	leaveq $/;"	l
fc	zombie.asm	/^  fc:	c3                   	retq   $/;"	l
fc0	ls.asm	/^     fc0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
fc0	usertests.asm	/^     fc0:	79 35                	jns    ff7 <exectest+0x86>$/;"	l
fc2	grep.asm	/^ fc2:	89 c7                	mov    %eax,%edi$/;"	l
fc2	usertests.asm	/^     fc2:	48 b8 08 88 00 00 00 	movabs $0x8808,%rax$/;"	l
fc4	grep.asm	/^ fc4:	48 b8 39 0e 00 00 00 	movabs $0xe39,%rax$/;"	l
fc4	ls.asm	/^     fc4:	48 89 10             	mov    %rdx,(%rax)$/;"	l
fc5	sh.asm	/^     fc5:	00 00 00 $/;"	l
fc7	ls.asm	/^     fc7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
fc8	sh.asm	/^     fc8:	ff d0                	callq  *%rax$/;"	l
fc9	usertests.asm	/^     fc9:	00 00 00 $/;"	l
fca	sh.asm	/^     fca:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx$/;"	l
fcb	grep.asm	/^ fcb:	00 00 00 $/;"	l
fcb	ls.asm	/^     fcb:	48 83 c0 10          	add    $0x10,%rax$/;"	l
fcc	usertests.asm	/^     fcc:	8b 00                	mov    (%rax),%eax$/;"	l
fce	grep.asm	/^ fce:	ff d0                	callq  *%rax$/;"	l
fce	sh.asm	/^     fce:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
fce	usertests.asm	/^     fce:	48 be dc 6c 00 00 00 	movabs $0x6cdc,%rsi$/;"	l
fcf	ls.asm	/^     fcf:	eb 4e                	jmp    101f <malloc+0x148>$/;"	l
fd	bad_mmap.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	cat.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	cat.asm	/^  fd:	48 98                	cltq   $/;"	l
fd	eager_mmap.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	echo.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	forktest.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	grep.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	grep.asm	/^  fd:	00 00 00 $/;"	l
fd	imshow.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	init.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	kill.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	kill.asm	/^  fd:	0f b6 12             	movzbl (%rdx),%edx$/;"	l
fd	lazy_mmap.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	ln.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	ls.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	mkdir.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	mkdir.asm	/^  fd:	c3                   	retq   $/;"	l
fd	rm.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	rm.asm	/^  fd:	c3                   	retq   $/;"	l
fd	sh.asm	/^      fd:	48 89 c7             	mov    %rax,%rdi$/;"	l
fd	sh.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	sh.c	/^  int fd;$/;"	m	struct:redircmd	file:
fd	stressfs.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	stressfs.asm	/^  fd = open(path, O_CREATE | O_RDWR);$/;"	d
fd	stressfs.asm	/^  fd = open(path, O_RDONLY);$/;"	d
fd	stressfs.asm	/^  fd:	48 b8 fb 04 00 00 00 	movabs $0x4fb,%rax$/;"	l
fd	usertests.asm	/^        fd = open(name, O_CREATE | O_RDWR);$/;"	d
fd	usertests.asm	/^      fd = open(file, O_CREATE | O_RDWR);$/;"	d
fd	usertests.asm	/^      fd = open(fname, O_CREATE | O_RDWR);$/;"	d
fd	usertests.asm	/^      fd = open(name, 0);$/;"	d
fd	usertests.asm	/^      fd:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
fd	usertests.asm	/^    fd = open("", O_CREATE);$/;"	d
fd	usertests.asm	/^    fd = open("bigarg-ok", O_CREATE);$/;"	d
fd	usertests.asm	/^    fd = open("bigwrite", O_CREATE | O_RDWR);$/;"	d
fd	usertests.asm	/^    fd = open("xx", O_CREATE);$/;"	d
fd	usertests.asm	/^    fd = open(fname, 0);$/;"	d
fd	usertests.asm	/^    fd = open(name, O_CREATE|O_RDWR);$/;"	d
fd	usertests.asm	/^  fd = open(".", 0);$/;"	d
fd	usertests.asm	/^  fd = open(".", O_RDWR);$/;"	d
fd	usertests.asm	/^  fd = open("123456789012345\/123456789012345\/123456789012345", O_CREATE);$/;"	d
fd	usertests.asm	/^  fd = open("12345678901234\/12345678901234\/12345678901234", 0);$/;"	d
fd	usertests.asm	/^  fd = open("bd", O_CREATE);$/;"	d
fd	usertests.asm	/^  fd = open("big", O_CREATE|O_RDWR);$/;"	d
fd	usertests.asm	/^  fd = open("big", O_RDONLY);$/;"	d
fd	usertests.asm	/^  fd = open("bigarg-ok", 0);$/;"	d
fd	usertests.asm	/^  fd = open("bigfile", 0);$/;"	d
fd	usertests.asm	/^  fd = open("bigfile", O_CREATE | O_RDWR);$/;"	d
fd	usertests.asm	/^  fd = open("dd\/dd\/..\/ff", 0);$/;"	d
fd	usertests.asm	/^  fd = open("dd\/dd\/ff", O_CREATE | O_RDWR);$/;"	d
fd	usertests.asm	/^  fd = open("dd\/dd\/ffff", 0);$/;"	d
fd	usertests.asm	/^  fd = open("dd\/ff", O_CREATE | O_RDWR);$/;"	d
fd	usertests.asm	/^  fd = open("dirfile", O_CREATE);$/;"	d
fd	usertests.asm	/^  fd = open("dirfile\/xx", 0);$/;"	d
fd	usertests.asm	/^  fd = open("dirfile\/xx", O_CREATE);$/;"	d
fd	usertests.asm	/^  fd = open("doesnotexist", 0);$/;"	d
fd	usertests.asm	/^  fd = open("echo", 0);$/;"	d
fd	usertests.asm	/^  fd = open("init", O_RDONLY);$/;"	d
fd	usertests.asm	/^  fd = open("lf1", O_CREATE|O_RDWR);$/;"	d
fd	usertests.asm	/^  fd = open("lf2", 0);$/;"	d
fd	usertests.asm	/^  fd = open("sharedfd", 0);$/;"	d
fd	usertests.asm	/^  fd = open("sharedfd", O_CREATE|O_RDWR);$/;"	d
fd	usertests.asm	/^  fd = open("small", O_CREATE|O_RDWR);$/;"	d
fd	usertests.asm	/^  fd = open("small", O_RDONLY);$/;"	d
fd	usertests.asm	/^  fd = open("unlinkread", O_CREATE | O_RDWR);$/;"	d
fd	usertests.asm	/^  fd = open("unlinkread", O_RDWR);$/;"	d
fd	usertests.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	wc.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	wc.asm	/^  fd:	00 00 00 $/;"	l
fd	zombie.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	zombie.asm	/^  fd:	55                   	push   %rbp$/;"	l
fd0	grep.asm	/^ fd0:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
fd0	kernel.asm	/^  fd0 = -1;$/;"	d
fd1	ls.asm	/^     fd1:	48 b8 50 13 00 00 00 	movabs $0x1350,%rax$/;"	l
fd1	usertests.asm	/^  fd1 = open("unlinkread", O_CREATE | O_RDWR);$/;"	d
fd2	sh.asm	/^     fd2:	8b 55 fc             	mov    -0x4(%rbp),%edx$/;"	l
fd4	grep.asm	/^ fd4:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)$/;"	l
fd5	sh.asm	/^     fd5:	48 63 d2             	movslq %edx,%rdx$/;"	l
fd5	usertests.asm	/^     fd5:	00 00 00 $/;"	l
fd8	ls.asm	/^     fd8:	00 00 00 $/;"	l
fd8	sh.asm	/^     fd8:	48 89 4c d0 08       	mov    %rcx,0x8(%rax,%rdx,8)$/;"	l
fd8	usertests.asm	/^     fd8:	89 c7                	mov    %eax,%edi$/;"	l
fd9	grep.asm	/^ fd9:	75 07                	jne    fe2 <malloc+0x130>$/;"	l
fda	usertests.asm	/^     fda:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
fdalloc	sysfile.c	/^fdalloc(struct file *f)$/;"	f	file:
fdb	grep.asm	/^ fdb:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
fdb	ls.asm	/^     fdb:	48 8b 00             	mov    (%rax),%rax$/;"	l
fdd	sh.asm	/^     fdd:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx$/;"	l
fde	ls.asm	/^     fde:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)$/;"	l
fdf	usertests.asm	/^     fdf:	48 ba db 61 00 00 00 	movabs $0x61db,%rdx$/;"	l
fe	echo.asm	/^  fe:	75 dc                	jne    dc <strcpy+0x19>$/;"	l
fe	imshow.asm	/^  fe:	89 c2                	mov    %eax,%edx$/;"	l
fe	mkdir.asm	/^  fe:	55                   	push   %rbp$/;"	l
fe	rm.asm	/^  fe:	55                   	push   %rbp$/;"	l
fe	zombie.asm	/^  fe:	48 89 e5             	mov    %rsp,%rbp$/;"	l
fe0	grep.asm	/^ fe0:	eb 18                	jmp    ffa <malloc+0x148>$/;"	l
fe1	sh.asm	/^     fe1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
fe2	grep.asm	/^ fe2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
fe2	ls.asm	/^     fe2:	75 23                	jne    1007 <malloc+0x130>$/;"	l
fe4	ls.asm	/^     fe4:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
fe5	sh.asm	/^     fe5:	8b 4d fc             	mov    -0x4(%rbp),%ecx$/;"	l
fe6	grep.asm	/^ fe6:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
fe6	usertests.asm	/^     fe6:	00 00 00 $/;"	l
fe7	ls.asm	/^     fe7:	89 c7                	mov    %eax,%edi$/;"	l
fe8	sh.asm	/^     fe8:	48 63 c9             	movslq %ecx,%rcx$/;"	l
fe9	ls.asm	/^     fe9:	48 b8 5e 0e 00 00 00 	movabs $0xe5e,%rax$/;"	l
fe9	usertests.asm	/^     fe9:	ff d2                	callq  *%rdx$/;"	l
fea	grep.asm	/^ fea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
feature	mp.h	/^  uint feature;                 \/\/ feature flags from CPUID instruction$/;"	m	struct:mpproc
feb	sh.asm	/^     feb:	48 83 c1 0a          	add    $0xa,%rcx$/;"	l
feb	usertests.asm	/^     feb:	48 b8 02 60 00 00 00 	movabs $0x6002,%rax$/;"	l
fee	grep.asm	/^ fee:	48 8b 00             	mov    (%rax),%rax$/;"	l
fef	sh.asm	/^     fef:	48 89 54 c8 08       	mov    %rdx,0x8(%rax,%rcx,8)$/;"	l
fetchaddr	syscall.c	/^fetchaddr(addr_t addr, addr_t *ip)$/;"	f
fetcharg	syscall.c	/^fetcharg(int n)$/;"	f	file:
fetchint	syscall.c	/^fetchint(addr_t addr, int *ip)$/;"	f
fetchstr	syscall.c	/^fetchstr(addr_t addr, char **pp)$/;"	f
ff	cat.asm	/^  ff:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx$/;"	l
ff	eager_mmap.asm	/^  ff:	48 b8 96 05 00 00 00 	movabs $0x596,%rax$/;"	l
ff	init.asm	/^  ff:	48 b8 db 04 00 00 00 	movabs $0x4db,%rax$/;"	l
ff	kernel.asm	/^  ff = *f;$/;"	d
ff	lazy_mmap.asm	/^  ff:	48 b8 96 05 00 00 00 	movabs $0x596,%rax$/;"	l
ff	ls.asm	/^      ff:	48 83 c4 28          	add    $0x28,%rsp$/;"	l
ff	mkdir.asm	/^  ff:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ff	rm.asm	/^  ff:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ff0	ls.asm	/^     ff0:	00 00 00 $/;"	l
ff1	grep.asm	/^ ff1:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ff2	usertests.asm	/^     ff2:	00 00 00 $/;"	l
ff3	ls.asm	/^     ff3:	ff d0                	callq  *%rax$/;"	l
ff4	sh.asm	/^     ff4:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)$/;"	l
ff5	grep.asm	/^ ff5:	e9 41 ff ff ff       	jmpq   f3b <malloc+0x89>$/;"	l
ff5	ls.asm	/^     ff5:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ff5	usertests.asm	/^     ff5:	ff d0                	callq  *%rax$/;"	l
ff7	usertests.asm	/^     ff7:	90                   	nop$/;"	l
ff8	sh.asm	/^     ff8:	83 7d fc 09          	cmpl   $0x9,-0x4(%rbp)$/;"	l
ff8	usertests.asm	/^     ff8:	5d                   	pop    %rbp$/;"	l
ff9	ls.asm	/^     ff9:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)$/;"	l
ff9	usertests.asm	/^     ff9:	c3                   	retq   $/;"	l
ffa	grep.asm	/^ ffa:	c9                   	leaveq $/;"	l
ffa	usertests.asm	/^     ffa:	55                   	push   %rbp$/;"	l
ffb	grep.asm	/^ ffb:	c3                   	retq   $/;"	l
ffb	usertests.asm	/^     ffb:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffc	sh.asm	/^     ffc:	7e 16                	jle    1014 <parseexec+0x12f>$/;"	l
ffe	ls.asm	/^     ffe:	75 07                	jne    1007 <malloc+0x130>$/;"	l
ffe	sh.asm	/^     ffe:	48 bf 59 1e 00 00 00 	movabs $0x1e59,%rdi$/;"	l
ffe	usertests.asm	/^     ffe:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ffff800000100000	kernel.asm	/^ffff800000100000 <begin>:$/;"	l
ffff800000100000	kernel.asm	/^ffff800000100000:	02 b0 ad 1b 00 00    	add    0x1bad(%rax),%dh$/;"	l
ffff800000100006	kernel.asm	/^ffff800000100006:	01 00                	add    %eax,(%rax)$/;"	l
ffff800000100008	kernel.asm	/^ffff800000100008:	fe 4f 51             	decb   0x51(%rdi)$/;"	l
ffff80000010000b	kernel.asm	/^ffff80000010000b:	e4 00                	in     $0x0,%al$/;"	l
ffff80000010000d	kernel.asm	/^ffff80000010000d:	00 10                	add    %dl,(%rax)$/;"	l
ffff80000010000f	kernel.asm	/^ffff80000010000f:	00 00                	add    %al,(%rax)$/;"	l
ffff800000100011	kernel.asm	/^ffff800000100011:	00 10                	add    %dl,(%rax)$/;"	l
ffff800000100013	kernel.asm	/^ffff800000100013:	00 00                	add    %al,(%rax)$/;"	l
ffff800000100015	kernel.asm	/^ffff800000100015:	10 11                	adc    %dl,(%rcx)$/;"	l
ffff800000100017	kernel.asm	/^ffff800000100017:	00 00                	add    %al,(%rax)$/;"	l
ffff800000100019	kernel.asm	/^ffff800000100019:	00 12                	add    %dl,(%rdx)$/;"	l
ffff80000010001b	kernel.asm	/^ffff80000010001b:	00 20                	add    %ah,(%rax)$/;"	l
ffff80000010001d	kernel.asm	/^ffff80000010001d:	00 10                	add    %dl,(%rax)$/;"	l
ffff800000100020	kernel.asm	/^ffff800000100020 <mboot_entry>:$/;"	l
ffff800000100020	kernel.asm	/^ffff800000100020:	31 c0                	xor    %eax,%eax$/;"	l
ffff800000100022	kernel.asm	/^ffff800000100022:	bf 00 10 00 00       	mov    $0x1000,%edi$/;"	l
ffff800000100027	kernel.asm	/^ffff800000100027:	b9 00 20 00 00       	mov    $0x2000,%ecx$/;"	l
ffff80000010002c	kernel.asm	/^ffff80000010002c:	f3 aa                	rep stos %al,%es:(%rdi)$/;"	l
ffff80000010002e	kernel.asm	/^ffff80000010002e:	b8 03 20 00 00       	mov    $0x2003,%eax$/;"	l
ffff800000100033	kernel.asm	/^ffff800000100033:	a3 00 10 00 00 a3 00 	movabs %eax,0x1800a300001000$/;"	l
ffff80000010003a	kernel.asm	/^ffff80000010003a:	18 00 $/;"	l
ffff80000010003c	kernel.asm	/^ffff80000010003c:	00 b8 83 00 00 00    	add    %bh,0x83(%rax)$/;"	l
ffff800000100042	kernel.asm	/^ffff800000100042:	a3                   	.byte 0xa3$/;"	l
ffff800000100043	kernel.asm	/^ffff800000100043:	00 20                	add    %ah,(%rax)$/;"	l
ffff800000100045	kernel.asm	/^ffff800000100045:	00 00                	add    %al,(%rax)$/;"	l
ffff800000100047	kernel.asm	/^ffff800000100047:	31 db                	xor    %ebx,%ebx$/;"	l
ffff800000100049	kernel.asm	/^ffff800000100049 <entry32mp>:$/;"	l
ffff800000100049	kernel.asm	/^ffff800000100049:	b8 00 10 00 00       	mov    $0x1000,%eax$/;"	l
ffff80000010004e	kernel.asm	/^ffff80000010004e:	0f 22 d8             	mov    %rax,%cr3$/;"	l
ffff800000100051	kernel.asm	/^ffff800000100051:	0f 01 15 90 00 10 00 	lgdt   0x100090(%rip)        # ffff8000002000e8 <end+0xe00e8>$/;"	l
ffff800000100058	kernel.asm	/^ffff800000100058:	0f 20 e0             	mov    %cr4,%rax$/;"	l
ffff80000010005b	kernel.asm	/^ffff80000010005b:	0f ba e8 05          	bts    $0x5,%eax$/;"	l
ffff80000010005f	kernel.asm	/^ffff80000010005f:	0f 22 e0             	mov    %rax,%cr4$/;"	l
ffff800000100062	kernel.asm	/^ffff800000100062:	b9 80 00 00 c0       	mov    $0xc0000080,%ecx$/;"	l
ffff800000100067	kernel.asm	/^ffff800000100067:	0f 32                	rdmsr  $/;"	l
ffff800000100069	kernel.asm	/^ffff800000100069:	0f ba e8 00          	bts    $0x0,%eax$/;"	l
ffff80000010006d	kernel.asm	/^ffff80000010006d:	0f ba e8 08          	bts    $0x8,%eax$/;"	l
ffff800000100071	kernel.asm	/^ffff800000100071:	0f 30                	wrmsr  $/;"	l
ffff800000100073	kernel.asm	/^ffff800000100073:	0f 20 c0             	mov    %cr0,%rax$/;"	l
ffff800000100076	kernel.asm	/^ffff800000100076:	0d 02 00 01 80       	or     $0x80010002,%eax$/;"	l
ffff80000010007b	kernel.asm	/^ffff80000010007b:	0f 22 c0             	mov    %rax,%cr0$/;"	l
ffff80000010007e	kernel.asm	/^ffff80000010007e:	ea                   	(bad)  $/;"	l
ffff80000010007f	kernel.asm	/^ffff80000010007f:	c0 00 10             	rolb   $0x10,(%rax)$/;"	l
ffff800000100082	kernel.asm	/^ffff800000100082:	00 08                	add    %cl,(%rax)$/;"	l
ffff800000100084	kernel.asm	/^ffff800000100084:	00 90 66 2e 0f 1f    	add    %dl,0x1f0f2e66(%rax)$/;"	l
ffff80000010008a	kernel.asm	/^ffff80000010008a:	84 00                	test   %al,(%rax)$/;"	l
ffff80000010008c	kernel.asm	/^ffff80000010008c:	00 00                	add    %al,(%rax)$/;"	l
ffff800000100090	kernel.asm	/^ffff800000100090 <gdtr64>:$/;"	l
ffff800000100090	kernel.asm	/^ffff800000100090:	17                   	(bad)  $/;"	l
ffff800000100091	kernel.asm	/^ffff800000100091:	00 a0 00 10 00 00    	add    %ah,0x1000(%rax)$/;"	l
ffff800000100097	kernel.asm	/^ffff800000100097:	00 00                	add    %al,(%rax)$/;"	l
ffff800000100099	kernel.asm	/^ffff800000100099:	00 66 0f             	add    %ah,0xf(%rsi)$/;"	l
ffff80000010009c	kernel.asm	/^ffff80000010009c:	1f                   	(bad)  $/;"	l
ffff80000010009d	kernel.asm	/^ffff80000010009d:	44 00 00             	add    %r8b,(%rax)$/;"	l
ffff8000001000a0	kernel.asm	/^ffff8000001000a0 <gdt64_begin>:$/;"	l
ffff8000001000ac	kernel.asm	/^ffff8000001000ac:	00 98 20 00 00 00    	add    %bl,0x20(%rax)$/;"	l
ffff8000001000b2	kernel.asm	/^ffff8000001000b2:	00 00                	add    %al,(%rax)$/;"	l
ffff8000001000b4	kernel.asm	/^ffff8000001000b4:	00                   	.byte 0x0$/;"	l
ffff8000001000b5	kernel.asm	/^ffff8000001000b5:	90                   	nop$/;"	l
ffff8000001000b8	kernel.asm	/^ffff8000001000b8 <gdt64_end>:$/;"	l
ffff8000001000b8	kernel.asm	/^ffff8000001000b8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)$/;"	l
ffff8000001000bf	kernel.asm	/^ffff8000001000bf:	00 $/;"	l
ffff8000001000c0	kernel.asm	/^ffff8000001000c0 <entry64low>:$/;"	l
ffff8000001000c0	kernel.asm	/^ffff8000001000c0:	48 b8 cc 00 10 00 00 	movabs $0xffff8000001000cc,%rax$/;"	l
ffff8000001000c7	kernel.asm	/^ffff8000001000c7:	80 ff ff $/;"	l
ffff8000001000ca	kernel.asm	/^ffff8000001000ca:	ff e0                	jmpq   *%rax$/;"	l
ffff8000001000cc	kernel.asm	/^ffff8000001000cc <_start>:$/;"	l
ffff8000001000cc	kernel.asm	/^ffff8000001000cc:	48 31 c0             	xor    %rax,%rax$/;"	l
ffff8000001000cf	kernel.asm	/^ffff8000001000cf:	8e d0                	mov    %eax,%ss$/;"	l
ffff8000001000d1	kernel.asm	/^ffff8000001000d1:	8e d8                	mov    %eax,%ds$/;"	l
ffff8000001000d3	kernel.asm	/^ffff8000001000d3:	8e c0                	mov    %eax,%es$/;"	l
ffff8000001000d5	kernel.asm	/^ffff8000001000d5:	8e e0                	mov    %eax,%fs$/;"	l
ffff8000001000d7	kernel.asm	/^ffff8000001000d7:	8e e8                	mov    %eax,%gs$/;"	l
ffff8000001000d9	kernel.asm	/^ffff8000001000d9:	85 db                	test   %ebx,%ebx$/;"	l
ffff8000001000db	kernel.asm	/^ffff8000001000db:	75 14                	jne    ffff8000001000f1 <entry64mp>$/;"	l
ffff8000001000dd	kernel.asm	/^ffff8000001000dd:	48 b8 00 00 01 00 00 	movabs $0xffff800000010000,%rax$/;"	l
ffff8000001000e4	kernel.asm	/^ffff8000001000e4:	80 ff ff $/;"	l
ffff8000001000e7	kernel.asm	/^ffff8000001000e7:	48 89 c4             	mov    %rax,%rsp$/;"	l
ffff8000001000ea	kernel.asm	/^ffff8000001000ea:	e9 df 56 00 00       	jmpq   ffff8000001057ce <main>$/;"	l
ffff8000001000ef	kernel.asm	/^ffff8000001000ef <__deadloop>:$/;"	l
ffff8000001000ef	kernel.asm	/^ffff8000001000ef:	eb fe                	jmp    ffff8000001000ef <__deadloop>$/;"	l
ffff8000001000f1	kernel.asm	/^ffff8000001000f1 <entry64mp>:$/;"	l
ffff8000001000f1	kernel.asm	/^ffff8000001000f1:	48 c7 c0 00 70 00 00 	mov    $0x7000,%rax$/;"	l
ffff8000001000f8	kernel.asm	/^ffff8000001000f8:	48 8b 60 f0          	mov    -0x10(%rax),%rsp$/;"	l
ffff8000001000fc	kernel.asm	/^ffff8000001000fc:	e9 06 58 00 00       	jmpq   ffff800000105907 <mpenter>$/;"	l
ffff800000100101	kernel.asm	/^ffff800000100101 <wrmsr>:$/;"	l
ffff800000100101	kernel.asm	/^ffff800000100101:	48 89 f9             	mov    %rdi,%rcx$/;"	l
ffff800000100104	kernel.asm	/^ffff800000100104:	48 89 f0             	mov    %rsi,%rax$/;"	l
ffff800000100107	kernel.asm	/^ffff800000100107:	48 c1 ee 20          	shr    $0x20,%rsi$/;"	l
ffff80000010010b	kernel.asm	/^ffff80000010010b:	48 89 f2             	mov    %rsi,%rdx$/;"	l
ffff80000010010e	kernel.asm	/^ffff80000010010e:	0f 30                	wrmsr  $/;"	l
ffff800000100110	kernel.asm	/^ffff800000100110:	c3                   	retq   $/;"	l
ffff800000100111	kernel.asm	/^ffff800000100111 <ignore_sysret>:$/;"	l
ffff800000100111	kernel.asm	/^ffff800000100111:	48 c7 c0 da ff ff ff 	mov    $0xffffffffffffffda,%rax$/;"	l
ffff800000100118	kernel.asm	/^ffff800000100118:	0f 07                	sysret $/;"	l
ffff80000010011a	kernel.asm	/^ffff80000010011a <syscall_entry>:$/;"	l
ffff80000010011a	kernel.asm	/^ffff80000010011a:	48 89 44 24 f8       	mov    %rax,-0x8(%rsp)$/;"	l
ffff80000010011f	kernel.asm	/^ffff80000010011f:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000100126	kernel.asm	/^ffff800000100126:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff80000010012a	kernel.asm	/^ffff80000010012a:	48 8b 40 10          	mov    0x10(%rax),%rax$/;"	l
ffff80000010012e	kernel.asm	/^ffff80000010012e:	48 05 00 10 00 00    	add    $0x1000,%rax$/;"	l
ffff800000100134	kernel.asm	/^ffff800000100134:	48 83 e8 10          	sub    $0x10,%rax$/;"	l
ffff800000100138	kernel.asm	/^ffff800000100138:	48 89 20             	mov    %rsp,(%rax)$/;"	l
ffff80000010013b	kernel.asm	/^ffff80000010013b:	48 89 c4             	mov    %rax,%rsp$/;"	l
ffff80000010013e	kernel.asm	/^ffff80000010013e:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff800000100141	kernel.asm	/^ffff800000100141:	48 8b 40 f8          	mov    -0x8(%rax),%rax$/;"	l
ffff800000100145	kernel.asm	/^ffff800000100145:	41 53                	push   %r11$/;"	l
ffff800000100147	kernel.asm	/^ffff800000100147:	6a 2b                	pushq  $0x2b$/;"	l
ffff800000100149	kernel.asm	/^ffff800000100149:	51                   	push   %rcx$/;"	l
ffff80000010014a	kernel.asm	/^ffff80000010014a:	6a 00                	pushq  $0x0$/;"	l
ffff80000010014c	kernel.asm	/^ffff80000010014c:	6a 40                	pushq  $0x40$/;"	l
ffff80000010014e	kernel.asm	/^ffff80000010014e:	e9 7e 9b 00 00       	jmpq   ffff800000109cd1 <syscall_trap>$/;"	l
ffff800000100153	kernel.asm	/^ffff800000100153 <binit>:$/;"	l
ffff800000100153	kernel.asm	/^ffff800000100153:	55                   	push   %rbp$/;"	l
ffff800000100154	kernel.asm	/^ffff800000100154:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000100157	kernel.asm	/^ffff800000100157:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff80000010015b	kernel.asm	/^ffff80000010015b:	48 be 68 d4 10 00 00 	movabs $0xffff80000010d468,%rsi$/;"	l
ffff800000100162	kernel.asm	/^ffff800000100162:	80 ff ff $/;"	l
ffff800000100165	kernel.asm	/^ffff800000100165:	48 bf 00 10 11 00 00 	movabs $0xffff800000111000,%rdi$/;"	l
ffff80000010016c	kernel.asm	/^ffff80000010016c:	80 ff ff $/;"	l
ffff80000010016f	kernel.asm	/^ffff80000010016f:	48 b8 a1 77 10 00 00 	movabs $0xffff8000001077a1,%rax$/;"	l
ffff800000100176	kernel.asm	/^ffff800000100176:	80 ff ff $/;"	l
ffff800000100179	kernel.asm	/^ffff800000100179:	ff d0                	callq  *%rax$/;"	l
ffff80000010017b	kernel.asm	/^ffff80000010017b:	48 b8 00 10 11 00 00 	movabs $0xffff800000111000,%rax$/;"	l
ffff800000100182	kernel.asm	/^ffff800000100182:	80 ff ff $/;"	l
ffff800000100185	kernel.asm	/^ffff800000100185:	48 b9 08 61 11 00 00 	movabs $0xffff800000116108,%rcx$/;"	l
ffff80000010018c	kernel.asm	/^ffff80000010018c:	80 ff ff $/;"	l
ffff80000010018f	kernel.asm	/^ffff80000010018f:	48 89 88 a0 51 00 00 	mov    %rcx,0x51a0(%rax)$/;"	l
ffff800000100196	kernel.asm	/^ffff800000100196:	48 b8 00 10 11 00 00 	movabs $0xffff800000111000,%rax$/;"	l
ffff80000010019d	kernel.asm	/^ffff80000010019d:	80 ff ff $/;"	l
ffff8000001001a0	kernel.asm	/^ffff8000001001a0:	48 b9 08 61 11 00 00 	movabs $0xffff800000116108,%rcx$/;"	l
ffff8000001001a7	kernel.asm	/^ffff8000001001a7:	80 ff ff $/;"	l
ffff8000001001aa	kernel.asm	/^ffff8000001001aa:	48 89 88 a8 51 00 00 	mov    %rcx,0x51a8(%rax)$/;"	l
ffff8000001001b1	kernel.asm	/^ffff8000001001b1:	48 b8 68 10 11 00 00 	movabs $0xffff800000111068,%rax$/;"	l
ffff8000001001b8	kernel.asm	/^ffff8000001001b8:	80 ff ff $/;"	l
ffff8000001001bb	kernel.asm	/^ffff8000001001bb:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff8000001001bf	kernel.asm	/^ffff8000001001bf:	e9 8b 00 00 00       	jmpq   ffff80000010024f <binit+0xfc>$/;"	l
ffff8000001001c4	kernel.asm	/^ffff8000001001c4:	48 b8 00 10 11 00 00 	movabs $0xffff800000111000,%rax$/;"	l
ffff8000001001cb	kernel.asm	/^ffff8000001001cb:	80 ff ff $/;"	l
ffff8000001001ce	kernel.asm	/^ffff8000001001ce:	48 8b 90 a8 51 00 00 	mov    0x51a8(%rax),%rdx$/;"	l
ffff8000001001d5	kernel.asm	/^ffff8000001001d5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001001d9	kernel.asm	/^ffff8000001001d9:	48 89 90 a0 00 00 00 	mov    %rdx,0xa0(%rax)$/;"	l
ffff8000001001e0	kernel.asm	/^ffff8000001001e0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001001e4	kernel.asm	/^ffff8000001001e4:	48 be 08 61 11 00 00 	movabs $0xffff800000116108,%rsi$/;"	l
ffff8000001001eb	kernel.asm	/^ffff8000001001eb:	80 ff ff $/;"	l
ffff8000001001ee	kernel.asm	/^ffff8000001001ee:	48 89 b0 98 00 00 00 	mov    %rsi,0x98(%rax)$/;"	l
ffff8000001001f5	kernel.asm	/^ffff8000001001f5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001001f9	kernel.asm	/^ffff8000001001f9:	48 83 c0 10          	add    $0x10,%rax$/;"	l
ffff8000001001fd	kernel.asm	/^ffff8000001001fd:	48 be 6f d4 10 00 00 	movabs $0xffff80000010d46f,%rsi$/;"	l
ffff800000100204	kernel.asm	/^ffff800000100204:	80 ff ff $/;"	l
ffff800000100207	kernel.asm	/^ffff800000100207:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010020a	kernel.asm	/^ffff80000010020a:	48 b8 ce 75 10 00 00 	movabs $0xffff8000001075ce,%rax$/;"	l
ffff800000100211	kernel.asm	/^ffff800000100211:	80 ff ff $/;"	l
ffff800000100214	kernel.asm	/^ffff800000100214:	ff d0                	callq  *%rax$/;"	l
ffff800000100216	kernel.asm	/^ffff800000100216:	48 b8 00 10 11 00 00 	movabs $0xffff800000111000,%rax$/;"	l
ffff80000010021d	kernel.asm	/^ffff80000010021d:	80 ff ff $/;"	l
ffff800000100220	kernel.asm	/^ffff800000100220:	48 8b 80 a8 51 00 00 	mov    0x51a8(%rax),%rax$/;"	l
ffff800000100227	kernel.asm	/^ffff800000100227:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx$/;"	l
ffff80000010022b	kernel.asm	/^ffff80000010022b:	48 89 90 98 00 00 00 	mov    %rdx,0x98(%rax)$/;"	l
ffff800000100232	kernel.asm	/^ffff800000100232:	48 b8 00 10 11 00 00 	movabs $0xffff800000111000,%rax$/;"	l
ffff800000100239	kernel.asm	/^ffff800000100239:	80 ff ff $/;"	l
ffff80000010023c	kernel.asm	/^ffff80000010023c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx$/;"	l
ffff800000100240	kernel.asm	/^ffff800000100240:	48 89 90 a8 51 00 00 	mov    %rdx,0x51a8(%rax)$/;"	l
ffff800000100247	kernel.asm	/^ffff800000100247:	48 81 45 f8 b0 02 00 	addq   $0x2b0,-0x8(%rbp)$/;"	l
ffff80000010024e	kernel.asm	/^ffff80000010024e:	00 $/;"	l
ffff80000010024f	kernel.asm	/^ffff80000010024f:	48 b8 08 61 11 00 00 	movabs $0xffff800000116108,%rax$/;"	l
ffff800000100256	kernel.asm	/^ffff800000100256:	80 ff ff $/;"	l
ffff800000100259	kernel.asm	/^ffff800000100259:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)$/;"	l
ffff80000010025d	kernel.asm	/^ffff80000010025d:	0f 82 61 ff ff ff    	jb     ffff8000001001c4 <binit+0x71>$/;"	l
ffff800000100263	kernel.asm	/^ffff800000100263:	90                   	nop$/;"	l
ffff800000100264	kernel.asm	/^ffff800000100264:	c9                   	leaveq $/;"	l
ffff800000100265	kernel.asm	/^ffff800000100265:	c3                   	retq   $/;"	l
ffff800000100266	kernel.asm	/^ffff800000100266 <bget>:$/;"	l
ffff800000100266	kernel.asm	/^ffff800000100266:	55                   	push   %rbp$/;"	l
ffff800000100267	kernel.asm	/^ffff800000100267:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010026a	kernel.asm	/^ffff80000010026a:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ffff80000010026e	kernel.asm	/^ffff80000010026e:	89 7d ec             	mov    %edi,-0x14(%rbp)$/;"	l
ffff800000100271	kernel.asm	/^ffff800000100271:	89 75 e8             	mov    %esi,-0x18(%rbp)$/;"	l
ffff800000100274	kernel.asm	/^ffff800000100274:	48 bf 00 10 11 00 00 	movabs $0xffff800000111000,%rdi$/;"	l
ffff80000010027b	kernel.asm	/^ffff80000010027b:	80 ff ff $/;"	l
ffff80000010027e	kernel.asm	/^ffff80000010027e:	48 b8 d6 77 10 00 00 	movabs $0xffff8000001077d6,%rax$/;"	l
ffff800000100285	kernel.asm	/^ffff800000100285:	80 ff ff $/;"	l
ffff800000100288	kernel.asm	/^ffff800000100288:	ff d0                	callq  *%rax$/;"	l
ffff80000010028a	kernel.asm	/^ffff80000010028a:	48 b8 00 10 11 00 00 	movabs $0xffff800000111000,%rax$/;"	l
ffff800000100291	kernel.asm	/^ffff800000100291:	80 ff ff $/;"	l
ffff800000100294	kernel.asm	/^ffff800000100294:	48 8b 80 a8 51 00 00 	mov    0x51a8(%rax),%rax$/;"	l
ffff80000010029b	kernel.asm	/^ffff80000010029b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff80000010029f	kernel.asm	/^ffff80000010029f:	eb 74                	jmp    ffff800000100315 <bget+0xaf>$/;"	l
ffff8000001002a1	kernel.asm	/^ffff8000001002a1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001002a5	kernel.asm	/^ffff8000001002a5:	8b 40 04             	mov    0x4(%rax),%eax$/;"	l
ffff8000001002a8	kernel.asm	/^ffff8000001002a8:	3b 45 ec             	cmp    -0x14(%rbp),%eax$/;"	l
ffff8000001002ab	kernel.asm	/^ffff8000001002ab:	75 59                	jne    ffff800000100306 <bget+0xa0>$/;"	l
ffff8000001002ad	kernel.asm	/^ffff8000001002ad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001002b1	kernel.asm	/^ffff8000001002b1:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
ffff8000001002b4	kernel.asm	/^ffff8000001002b4:	3b 45 e8             	cmp    -0x18(%rbp),%eax$/;"	l
ffff8000001002b7	kernel.asm	/^ffff8000001002b7:	75 4d                	jne    ffff800000100306 <bget+0xa0>$/;"	l
ffff8000001002b9	kernel.asm	/^ffff8000001002b9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001002bd	kernel.asm	/^ffff8000001002bd:	8b 80 90 00 00 00    	mov    0x90(%rax),%eax$/;"	l
ffff8000001002c3	kernel.asm	/^ffff8000001002c3:	8d 50 01             	lea    0x1(%rax),%edx$/;"	l
ffff8000001002c6	kernel.asm	/^ffff8000001002c6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001002ca	kernel.asm	/^ffff8000001002ca:	89 90 90 00 00 00    	mov    %edx,0x90(%rax)$/;"	l
ffff8000001002d0	kernel.asm	/^ffff8000001002d0:	48 bf 00 10 11 00 00 	movabs $0xffff800000111000,%rdi$/;"	l
ffff8000001002d7	kernel.asm	/^ffff8000001002d7:	80 ff ff $/;"	l
ffff8000001002da	kernel.asm	/^ffff8000001002da:	48 b8 6f 78 10 00 00 	movabs $0xffff80000010786f,%rax$/;"	l
ffff8000001002e1	kernel.asm	/^ffff8000001002e1:	80 ff ff $/;"	l
ffff8000001002e4	kernel.asm	/^ffff8000001002e4:	ff d0                	callq  *%rax$/;"	l
ffff8000001002e6	kernel.asm	/^ffff8000001002e6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001002ea	kernel.asm	/^ffff8000001002ea:	48 83 c0 10          	add    $0x10,%rax$/;"	l
ffff8000001002ee	kernel.asm	/^ffff8000001002ee:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001002f1	kernel.asm	/^ffff8000001002f1:	48 b8 23 76 10 00 00 	movabs $0xffff800000107623,%rax$/;"	l
ffff8000001002f8	kernel.asm	/^ffff8000001002f8:	80 ff ff $/;"	l
ffff8000001002fb	kernel.asm	/^ffff8000001002fb:	ff d0                	callq  *%rax$/;"	l
ffff8000001002fd	kernel.asm	/^ffff8000001002fd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000100301	kernel.asm	/^ffff800000100301:	e9 f0 00 00 00       	jmpq   ffff8000001003f6 <bget+0x190>$/;"	l
ffff800000100306	kernel.asm	/^ffff800000100306:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010030a	kernel.asm	/^ffff80000010030a:	48 8b 80 a0 00 00 00 	mov    0xa0(%rax),%rax$/;"	l
ffff800000100311	kernel.asm	/^ffff800000100311:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff800000100315	kernel.asm	/^ffff800000100315:	48 b8 08 61 11 00 00 	movabs $0xffff800000116108,%rax$/;"	l
ffff80000010031c	kernel.asm	/^ffff80000010031c:	80 ff ff $/;"	l
ffff80000010031f	kernel.asm	/^ffff80000010031f:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)$/;"	l
ffff800000100323	kernel.asm	/^ffff800000100323:	0f 85 78 ff ff ff    	jne    ffff8000001002a1 <bget+0x3b>$/;"	l
ffff800000100329	kernel.asm	/^ffff800000100329:	48 b8 00 10 11 00 00 	movabs $0xffff800000111000,%rax$/;"	l
ffff800000100330	kernel.asm	/^ffff800000100330:	80 ff ff $/;"	l
ffff800000100333	kernel.asm	/^ffff800000100333:	48 8b 80 a0 51 00 00 	mov    0x51a0(%rax),%rax$/;"	l
ffff80000010033a	kernel.asm	/^ffff80000010033a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff80000010033e	kernel.asm	/^ffff80000010033e:	e9 89 00 00 00       	jmpq   ffff8000001003cc <bget+0x166>$/;"	l
ffff800000100343	kernel.asm	/^ffff800000100343:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000100347	kernel.asm	/^ffff800000100347:	8b 80 90 00 00 00    	mov    0x90(%rax),%eax$/;"	l
ffff80000010034d	kernel.asm	/^ffff80000010034d:	85 c0                	test   %eax,%eax$/;"	l
ffff80000010034f	kernel.asm	/^ffff80000010034f:	75 6c                	jne    ffff8000001003bd <bget+0x157>$/;"	l
ffff800000100351	kernel.asm	/^ffff800000100351:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000100355	kernel.asm	/^ffff800000100355:	8b 00                	mov    (%rax),%eax$/;"	l
ffff800000100357	kernel.asm	/^ffff800000100357:	83 e0 04             	and    $0x4,%eax$/;"	l
ffff80000010035a	kernel.asm	/^ffff80000010035a:	85 c0                	test   %eax,%eax$/;"	l
ffff80000010035c	kernel.asm	/^ffff80000010035c:	75 5f                	jne    ffff8000001003bd <bget+0x157>$/;"	l
ffff80000010035e	kernel.asm	/^ffff80000010035e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000100362	kernel.asm	/^ffff800000100362:	8b 55 ec             	mov    -0x14(%rbp),%edx$/;"	l
ffff800000100365	kernel.asm	/^ffff800000100365:	89 50 04             	mov    %edx,0x4(%rax)$/;"	l
ffff800000100368	kernel.asm	/^ffff800000100368:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010036c	kernel.asm	/^ffff80000010036c:	8b 55 e8             	mov    -0x18(%rbp),%edx$/;"	l
ffff80000010036f	kernel.asm	/^ffff80000010036f:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
ffff800000100372	kernel.asm	/^ffff800000100372:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000100376	kernel.asm	/^ffff800000100376:	c7 00 00 00 00 00    	movl   $0x0,(%rax)$/;"	l
ffff80000010037c	kernel.asm	/^ffff80000010037c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000100380	kernel.asm	/^ffff800000100380:	c7 80 90 00 00 00 01 	movl   $0x1,0x90(%rax)$/;"	l
ffff800000100387	kernel.asm	/^ffff800000100387:	00 00 00 $/;"	l
ffff80000010038a	kernel.asm	/^ffff80000010038a:	48 bf 00 10 11 00 00 	movabs $0xffff800000111000,%rdi$/;"	l
ffff800000100391	kernel.asm	/^ffff800000100391:	80 ff ff $/;"	l
ffff800000100394	kernel.asm	/^ffff800000100394:	48 b8 6f 78 10 00 00 	movabs $0xffff80000010786f,%rax$/;"	l
ffff80000010039b	kernel.asm	/^ffff80000010039b:	80 ff ff $/;"	l
ffff80000010039e	kernel.asm	/^ffff80000010039e:	ff d0                	callq  *%rax$/;"	l
ffff8000001003a0	kernel.asm	/^ffff8000001003a0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001003a4	kernel.asm	/^ffff8000001003a4:	48 83 c0 10          	add    $0x10,%rax$/;"	l
ffff8000001003a8	kernel.asm	/^ffff8000001003a8:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001003ab	kernel.asm	/^ffff8000001003ab:	48 b8 23 76 10 00 00 	movabs $0xffff800000107623,%rax$/;"	l
ffff8000001003b2	kernel.asm	/^ffff8000001003b2:	80 ff ff $/;"	l
ffff8000001003b5	kernel.asm	/^ffff8000001003b5:	ff d0                	callq  *%rax$/;"	l
ffff8000001003b7	kernel.asm	/^ffff8000001003b7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001003bb	kernel.asm	/^ffff8000001003bb:	eb 39                	jmp    ffff8000001003f6 <bget+0x190>$/;"	l
ffff8000001003bd	kernel.asm	/^ffff8000001003bd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001003c1	kernel.asm	/^ffff8000001003c1:	48 8b 80 98 00 00 00 	mov    0x98(%rax),%rax$/;"	l
ffff8000001003c8	kernel.asm	/^ffff8000001003c8:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff8000001003cc	kernel.asm	/^ffff8000001003cc:	48 b8 08 61 11 00 00 	movabs $0xffff800000116108,%rax$/;"	l
ffff8000001003d3	kernel.asm	/^ffff8000001003d3:	80 ff ff $/;"	l
ffff8000001003d6	kernel.asm	/^ffff8000001003d6:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)$/;"	l
ffff8000001003da	kernel.asm	/^ffff8000001003da:	0f 85 63 ff ff ff    	jne    ffff800000100343 <bget+0xdd>$/;"	l
ffff8000001003e0	kernel.asm	/^ffff8000001003e0:	48 bf 76 d4 10 00 00 	movabs $0xffff80000010d476,%rdi$/;"	l
ffff8000001003e7	kernel.asm	/^ffff8000001003e7:	80 ff ff $/;"	l
ffff8000001003ea	kernel.asm	/^ffff8000001003ea:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff8000001003f1	kernel.asm	/^ffff8000001003f1:	80 ff ff $/;"	l
ffff8000001003f4	kernel.asm	/^ffff8000001003f4:	ff d0                	callq  *%rax$/;"	l
ffff8000001003f6	kernel.asm	/^ffff8000001003f6:	c9                   	leaveq $/;"	l
ffff8000001003f7	kernel.asm	/^ffff8000001003f7:	c3                   	retq   $/;"	l
ffff8000001003f8	kernel.asm	/^ffff8000001003f8 <bread>:$/;"	l
ffff8000001003f8	kernel.asm	/^ffff8000001003f8:	55                   	push   %rbp$/;"	l
ffff8000001003f9	kernel.asm	/^ffff8000001003f9:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff8000001003fc	kernel.asm	/^ffff8000001003fc:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ffff800000100400	kernel.asm	/^ffff800000100400:	89 7d ec             	mov    %edi,-0x14(%rbp)$/;"	l
ffff800000100403	kernel.asm	/^ffff800000100403:	89 75 e8             	mov    %esi,-0x18(%rbp)$/;"	l
ffff800000100406	kernel.asm	/^ffff800000100406:	8b 55 e8             	mov    -0x18(%rbp),%edx$/;"	l
ffff800000100409	kernel.asm	/^ffff800000100409:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
ffff80000010040c	kernel.asm	/^ffff80000010040c:	89 d6                	mov    %edx,%esi$/;"	l
ffff80000010040e	kernel.asm	/^ffff80000010040e:	89 c7                	mov    %eax,%edi$/;"	l
ffff800000100410	kernel.asm	/^ffff800000100410:	48 b8 66 02 10 00 00 	movabs $0xffff800000100266,%rax$/;"	l
ffff800000100417	kernel.asm	/^ffff800000100417:	80 ff ff $/;"	l
ffff80000010041a	kernel.asm	/^ffff80000010041a:	ff d0                	callq  *%rax$/;"	l
ffff80000010041c	kernel.asm	/^ffff80000010041c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff800000100420	kernel.asm	/^ffff800000100420:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000100424	kernel.asm	/^ffff800000100424:	8b 00                	mov    (%rax),%eax$/;"	l
ffff800000100426	kernel.asm	/^ffff800000100426:	83 e0 02             	and    $0x2,%eax$/;"	l
ffff800000100429	kernel.asm	/^ffff800000100429:	85 c0                	test   %eax,%eax$/;"	l
ffff80000010042b	kernel.asm	/^ffff80000010042b:	75 13                	jne    ffff800000100440 <bread+0x48>$/;"	l
ffff80000010042d	kernel.asm	/^ffff80000010042d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000100431	kernel.asm	/^ffff800000100431:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000100434	kernel.asm	/^ffff800000100434:	48 b8 b7 40 10 00 00 	movabs $0xffff8000001040b7,%rax$/;"	l
ffff80000010043b	kernel.asm	/^ffff80000010043b:	80 ff ff $/;"	l
ffff80000010043e	kernel.asm	/^ffff80000010043e:	ff d0                	callq  *%rax$/;"	l
ffff800000100440	kernel.asm	/^ffff800000100440:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000100444	kernel.asm	/^ffff800000100444:	c9                   	leaveq $/;"	l
ffff800000100445	kernel.asm	/^ffff800000100445:	c3                   	retq   $/;"	l
ffff800000100446	kernel.asm	/^ffff800000100446 <bwrite>:$/;"	l
ffff800000100446	kernel.asm	/^ffff800000100446:	55                   	push   %rbp$/;"	l
ffff800000100447	kernel.asm	/^ffff800000100447:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010044a	kernel.asm	/^ffff80000010044a:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff80000010044e	kernel.asm	/^ffff80000010044e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)$/;"	l
ffff800000100452	kernel.asm	/^ffff800000100452:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000100456	kernel.asm	/^ffff800000100456:	48 83 c0 10          	add    $0x10,%rax$/;"	l
ffff80000010045a	kernel.asm	/^ffff80000010045a:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010045d	kernel.asm	/^ffff80000010045d:	48 b8 0e 77 10 00 00 	movabs $0xffff80000010770e,%rax$/;"	l
ffff800000100464	kernel.asm	/^ffff800000100464:	80 ff ff $/;"	l
ffff800000100467	kernel.asm	/^ffff800000100467:	ff d0                	callq  *%rax$/;"	l
ffff800000100469	kernel.asm	/^ffff800000100469:	85 c0                	test   %eax,%eax$/;"	l
ffff80000010046b	kernel.asm	/^ffff80000010046b:	75 16                	jne    ffff800000100483 <bwrite+0x3d>$/;"	l
ffff80000010046d	kernel.asm	/^ffff80000010046d:	48 bf 87 d4 10 00 00 	movabs $0xffff80000010d487,%rdi$/;"	l
ffff800000100474	kernel.asm	/^ffff800000100474:	80 ff ff $/;"	l
ffff800000100477	kernel.asm	/^ffff800000100477:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff80000010047e	kernel.asm	/^ffff80000010047e:	80 ff ff $/;"	l
ffff800000100481	kernel.asm	/^ffff800000100481:	ff d0                	callq  *%rax$/;"	l
ffff800000100483	kernel.asm	/^ffff800000100483:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000100487	kernel.asm	/^ffff800000100487:	8b 00                	mov    (%rax),%eax$/;"	l
ffff800000100489	kernel.asm	/^ffff800000100489:	83 c8 04             	or     $0x4,%eax$/;"	l
ffff80000010048c	kernel.asm	/^ffff80000010048c:	89 c2                	mov    %eax,%edx$/;"	l
ffff80000010048e	kernel.asm	/^ffff80000010048e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000100492	kernel.asm	/^ffff800000100492:	89 10                	mov    %edx,(%rax)$/;"	l
ffff800000100494	kernel.asm	/^ffff800000100494:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000100498	kernel.asm	/^ffff800000100498:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010049b	kernel.asm	/^ffff80000010049b:	48 b8 b7 40 10 00 00 	movabs $0xffff8000001040b7,%rax$/;"	l
ffff8000001004a2	kernel.asm	/^ffff8000001004a2:	80 ff ff $/;"	l
ffff8000001004a5	kernel.asm	/^ffff8000001004a5:	ff d0                	callq  *%rax$/;"	l
ffff8000001004a7	kernel.asm	/^ffff8000001004a7:	90                   	nop$/;"	l
ffff8000001004a8	kernel.asm	/^ffff8000001004a8:	c9                   	leaveq $/;"	l
ffff8000001004a9	kernel.asm	/^ffff8000001004a9:	c3                   	retq   $/;"	l
ffff8000001004aa	kernel.asm	/^ffff8000001004aa <brelse>:$/;"	l
ffff8000001004aa	kernel.asm	/^ffff8000001004aa:	55                   	push   %rbp$/;"	l
ffff8000001004ab	kernel.asm	/^ffff8000001004ab:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff8000001004ae	kernel.asm	/^ffff8000001004ae:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff8000001004b2	kernel.asm	/^ffff8000001004b2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)$/;"	l
ffff8000001004b6	kernel.asm	/^ffff8000001004b6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001004ba	kernel.asm	/^ffff8000001004ba:	48 83 c0 10          	add    $0x10,%rax$/;"	l
ffff8000001004be	kernel.asm	/^ffff8000001004be:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001004c1	kernel.asm	/^ffff8000001004c1:	48 b8 0e 77 10 00 00 	movabs $0xffff80000010770e,%rax$/;"	l
ffff8000001004c8	kernel.asm	/^ffff8000001004c8:	80 ff ff $/;"	l
ffff8000001004cb	kernel.asm	/^ffff8000001004cb:	ff d0                	callq  *%rax$/;"	l
ffff8000001004cd	kernel.asm	/^ffff8000001004cd:	85 c0                	test   %eax,%eax$/;"	l
ffff8000001004cf	kernel.asm	/^ffff8000001004cf:	75 16                	jne    ffff8000001004e7 <brelse+0x3d>$/;"	l
ffff8000001004d1	kernel.asm	/^ffff8000001004d1:	48 bf 8e d4 10 00 00 	movabs $0xffff80000010d48e,%rdi$/;"	l
ffff8000001004d8	kernel.asm	/^ffff8000001004d8:	80 ff ff $/;"	l
ffff8000001004db	kernel.asm	/^ffff8000001004db:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff8000001004e2	kernel.asm	/^ffff8000001004e2:	80 ff ff $/;"	l
ffff8000001004e5	kernel.asm	/^ffff8000001004e5:	ff d0                	callq  *%rax$/;"	l
ffff8000001004e7	kernel.asm	/^ffff8000001004e7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001004eb	kernel.asm	/^ffff8000001004eb:	48 83 c0 10          	add    $0x10,%rax$/;"	l
ffff8000001004ef	kernel.asm	/^ffff8000001004ef:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001004f2	kernel.asm	/^ffff8000001004f2:	48 b8 a9 76 10 00 00 	movabs $0xffff8000001076a9,%rax$/;"	l
ffff8000001004f9	kernel.asm	/^ffff8000001004f9:	80 ff ff $/;"	l
ffff8000001004fc	kernel.asm	/^ffff8000001004fc:	ff d0                	callq  *%rax$/;"	l
ffff8000001004fe	kernel.asm	/^ffff8000001004fe:	48 bf 00 10 11 00 00 	movabs $0xffff800000111000,%rdi$/;"	l
ffff800000100505	kernel.asm	/^ffff800000100505:	80 ff ff $/;"	l
ffff800000100508	kernel.asm	/^ffff800000100508:	48 b8 d6 77 10 00 00 	movabs $0xffff8000001077d6,%rax$/;"	l
ffff80000010050f	kernel.asm	/^ffff80000010050f:	80 ff ff $/;"	l
ffff800000100512	kernel.asm	/^ffff800000100512:	ff d0                	callq  *%rax$/;"	l
ffff800000100514	kernel.asm	/^ffff800000100514:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000100518	kernel.asm	/^ffff800000100518:	8b 80 90 00 00 00    	mov    0x90(%rax),%eax$/;"	l
ffff80000010051e	kernel.asm	/^ffff80000010051e:	8d 50 ff             	lea    -0x1(%rax),%edx$/;"	l
ffff800000100521	kernel.asm	/^ffff800000100521:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000100525	kernel.asm	/^ffff800000100525:	89 90 90 00 00 00    	mov    %edx,0x90(%rax)$/;"	l
ffff80000010052b	kernel.asm	/^ffff80000010052b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010052f	kernel.asm	/^ffff80000010052f:	8b 80 90 00 00 00    	mov    0x90(%rax),%eax$/;"	l
ffff800000100535	kernel.asm	/^ffff800000100535:	85 c0                	test   %eax,%eax$/;"	l
ffff800000100537	kernel.asm	/^ffff800000100537:	0f 85 9c 00 00 00    	jne    ffff8000001005d9 <brelse+0x12f>$/;"	l
ffff80000010053d	kernel.asm	/^ffff80000010053d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000100541	kernel.asm	/^ffff800000100541:	48 8b 80 a0 00 00 00 	mov    0xa0(%rax),%rax$/;"	l
ffff800000100548	kernel.asm	/^ffff800000100548:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx$/;"	l
ffff80000010054c	kernel.asm	/^ffff80000010054c:	48 8b 92 98 00 00 00 	mov    0x98(%rdx),%rdx$/;"	l
ffff800000100553	kernel.asm	/^ffff800000100553:	48 89 90 98 00 00 00 	mov    %rdx,0x98(%rax)$/;"	l
ffff80000010055a	kernel.asm	/^ffff80000010055a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010055e	kernel.asm	/^ffff80000010055e:	48 8b 80 98 00 00 00 	mov    0x98(%rax),%rax$/;"	l
ffff800000100565	kernel.asm	/^ffff800000100565:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx$/;"	l
ffff800000100569	kernel.asm	/^ffff800000100569:	48 8b 92 a0 00 00 00 	mov    0xa0(%rdx),%rdx$/;"	l
ffff800000100570	kernel.asm	/^ffff800000100570:	48 89 90 a0 00 00 00 	mov    %rdx,0xa0(%rax)$/;"	l
ffff800000100577	kernel.asm	/^ffff800000100577:	48 b8 00 10 11 00 00 	movabs $0xffff800000111000,%rax$/;"	l
ffff80000010057e	kernel.asm	/^ffff80000010057e:	80 ff ff $/;"	l
ffff800000100581	kernel.asm	/^ffff800000100581:	48 8b 90 a8 51 00 00 	mov    0x51a8(%rax),%rdx$/;"	l
ffff800000100588	kernel.asm	/^ffff800000100588:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010058c	kernel.asm	/^ffff80000010058c:	48 89 90 a0 00 00 00 	mov    %rdx,0xa0(%rax)$/;"	l
ffff800000100593	kernel.asm	/^ffff800000100593:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000100597	kernel.asm	/^ffff800000100597:	48 b9 08 61 11 00 00 	movabs $0xffff800000116108,%rcx$/;"	l
ffff80000010059e	kernel.asm	/^ffff80000010059e:	80 ff ff $/;"	l
ffff8000001005a1	kernel.asm	/^ffff8000001005a1:	48 89 88 98 00 00 00 	mov    %rcx,0x98(%rax)$/;"	l
ffff8000001005a8	kernel.asm	/^ffff8000001005a8:	48 b8 00 10 11 00 00 	movabs $0xffff800000111000,%rax$/;"	l
ffff8000001005af	kernel.asm	/^ffff8000001005af:	80 ff ff $/;"	l
ffff8000001005b2	kernel.asm	/^ffff8000001005b2:	48 8b 80 a8 51 00 00 	mov    0x51a8(%rax),%rax$/;"	l
ffff8000001005b9	kernel.asm	/^ffff8000001005b9:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx$/;"	l
ffff8000001005bd	kernel.asm	/^ffff8000001005bd:	48 89 90 98 00 00 00 	mov    %rdx,0x98(%rax)$/;"	l
ffff8000001005c4	kernel.asm	/^ffff8000001005c4:	48 b8 00 10 11 00 00 	movabs $0xffff800000111000,%rax$/;"	l
ffff8000001005cb	kernel.asm	/^ffff8000001005cb:	80 ff ff $/;"	l
ffff8000001005ce	kernel.asm	/^ffff8000001005ce:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx$/;"	l
ffff8000001005d2	kernel.asm	/^ffff8000001005d2:	48 89 90 a8 51 00 00 	mov    %rdx,0x51a8(%rax)$/;"	l
ffff8000001005d9	kernel.asm	/^ffff8000001005d9:	48 bf 00 10 11 00 00 	movabs $0xffff800000111000,%rdi$/;"	l
ffff8000001005e0	kernel.asm	/^ffff8000001005e0:	80 ff ff $/;"	l
ffff8000001005e3	kernel.asm	/^ffff8000001005e3:	48 b8 6f 78 10 00 00 	movabs $0xffff80000010786f,%rax$/;"	l
ffff8000001005ea	kernel.asm	/^ffff8000001005ea:	80 ff ff $/;"	l
ffff8000001005ed	kernel.asm	/^ffff8000001005ed:	ff d0                	callq  *%rax$/;"	l
ffff8000001005ef	kernel.asm	/^ffff8000001005ef:	90                   	nop$/;"	l
ffff8000001005f0	kernel.asm	/^ffff8000001005f0:	c9                   	leaveq $/;"	l
ffff8000001005f1	kernel.asm	/^ffff8000001005f1:	c3                   	retq   $/;"	l
ffff8000001005f2	kernel.asm	/^ffff8000001005f2 <inb>:$/;"	l
ffff8000001005f2	kernel.asm	/^ffff8000001005f2:	55                   	push   %rbp$/;"	l
ffff8000001005f3	kernel.asm	/^ffff8000001005f3:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff8000001005f6	kernel.asm	/^ffff8000001005f6:	48 83 ec 18          	sub    $0x18,%rsp$/;"	l
ffff8000001005fa	kernel.asm	/^ffff8000001005fa:	89 f8                	mov    %edi,%eax$/;"	l
ffff8000001005fc	kernel.asm	/^ffff8000001005fc:	66 89 45 ec          	mov    %ax,-0x14(%rbp)$/;"	l
ffff800000100600	kernel.asm	/^ffff800000100600:	0f b7 45 ec          	movzwl -0x14(%rbp),%eax$/;"	l
ffff800000100604	kernel.asm	/^ffff800000100604:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000100606	kernel.asm	/^ffff800000100606:	ec                   	in     (%dx),%al$/;"	l
ffff800000100607	kernel.asm	/^ffff800000100607:	88 45 ff             	mov    %al,-0x1(%rbp)$/;"	l
ffff80000010060a	kernel.asm	/^ffff80000010060a:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax$/;"	l
ffff80000010060e	kernel.asm	/^ffff80000010060e:	c9                   	leaveq $/;"	l
ffff80000010060f	kernel.asm	/^ffff80000010060f:	c3                   	retq   $/;"	l
ffff800000100610	kernel.asm	/^ffff800000100610 <outb>:$/;"	l
ffff800000100610	kernel.asm	/^ffff800000100610:	55                   	push   %rbp$/;"	l
ffff800000100611	kernel.asm	/^ffff800000100611:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000100614	kernel.asm	/^ffff800000100614:	48 83 ec 08          	sub    $0x8,%rsp$/;"	l
ffff800000100618	kernel.asm	/^ffff800000100618:	89 fa                	mov    %edi,%edx$/;"	l
ffff80000010061a	kernel.asm	/^ffff80000010061a:	89 f0                	mov    %esi,%eax$/;"	l
ffff80000010061c	kernel.asm	/^ffff80000010061c:	66 89 55 fc          	mov    %dx,-0x4(%rbp)$/;"	l
ffff800000100620	kernel.asm	/^ffff800000100620:	88 45 f8             	mov    %al,-0x8(%rbp)$/;"	l
ffff800000100623	kernel.asm	/^ffff800000100623:	0f b6 45 f8          	movzbl -0x8(%rbp),%eax$/;"	l
ffff800000100627	kernel.asm	/^ffff800000100627:	0f b7 55 fc          	movzwl -0x4(%rbp),%edx$/;"	l
ffff80000010062b	kernel.asm	/^ffff80000010062b:	ee                   	out    %al,(%dx)$/;"	l
ffff80000010062c	kernel.asm	/^ffff80000010062c:	90                   	nop$/;"	l
ffff80000010062d	kernel.asm	/^ffff80000010062d:	c9                   	leaveq $/;"	l
ffff80000010062e	kernel.asm	/^ffff80000010062e:	c3                   	retq   $/;"	l
ffff80000010062f	kernel.asm	/^ffff80000010062f <lidt>:$/;"	l
ffff80000010062f	kernel.asm	/^ffff80000010062f:	55                   	push   %rbp$/;"	l
ffff800000100630	kernel.asm	/^ffff800000100630:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000100633	kernel.asm	/^ffff800000100633:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ffff800000100637	kernel.asm	/^ffff800000100637:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
ffff80000010063b	kernel.asm	/^ffff80000010063b:	89 75 e4             	mov    %esi,-0x1c(%rbp)$/;"	l
ffff80000010063e	kernel.asm	/^ffff80000010063e:	8b 45 e4             	mov    -0x1c(%rbp),%eax$/;"	l
ffff800000100641	kernel.asm	/^ffff800000100641:	83 e8 01             	sub    $0x1,%eax$/;"	l
ffff800000100644	kernel.asm	/^ffff800000100644:	66 89 45 f0          	mov    %ax,-0x10(%rbp)$/;"	l
ffff800000100648	kernel.asm	/^ffff800000100648:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010064c	kernel.asm	/^ffff80000010064c:	66 89 45 f2          	mov    %ax,-0xe(%rbp)$/;"	l
ffff800000100650	kernel.asm	/^ffff800000100650:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000100654	kernel.asm	/^ffff800000100654:	48 c1 e8 10          	shr    $0x10,%rax$/;"	l
ffff800000100658	kernel.asm	/^ffff800000100658:	66 89 45 f4          	mov    %ax,-0xc(%rbp)$/;"	l
ffff80000010065c	kernel.asm	/^ffff80000010065c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000100660	kernel.asm	/^ffff800000100660:	48 c1 e8 20          	shr    $0x20,%rax$/;"	l
ffff800000100664	kernel.asm	/^ffff800000100664:	66 89 45 f6          	mov    %ax,-0xa(%rbp)$/;"	l
ffff800000100668	kernel.asm	/^ffff800000100668:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010066c	kernel.asm	/^ffff80000010066c:	48 c1 e8 30          	shr    $0x30,%rax$/;"	l
ffff800000100670	kernel.asm	/^ffff800000100670:	66 89 45 f8          	mov    %ax,-0x8(%rbp)$/;"	l
ffff800000100674	kernel.asm	/^ffff800000100674:	48 8d 45 f0          	lea    -0x10(%rbp),%rax$/;"	l
ffff800000100678	kernel.asm	/^ffff800000100678:	0f 01 18             	lidt   (%rax)$/;"	l
ffff80000010067b	kernel.asm	/^ffff80000010067b:	90                   	nop$/;"	l
ffff80000010067c	kernel.asm	/^ffff80000010067c:	c9                   	leaveq $/;"	l
ffff80000010067d	kernel.asm	/^ffff80000010067d:	c3                   	retq   $/;"	l
ffff80000010067e	kernel.asm	/^ffff80000010067e <cli>:$/;"	l
ffff80000010067e	kernel.asm	/^ffff80000010067e:	55                   	push   %rbp$/;"	l
ffff80000010067f	kernel.asm	/^ffff80000010067f:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000100682	kernel.asm	/^ffff800000100682:	fa                   	cli    $/;"	l
ffff800000100683	kernel.asm	/^ffff800000100683:	90                   	nop$/;"	l
ffff800000100684	kernel.asm	/^ffff800000100684:	5d                   	pop    %rbp$/;"	l
ffff800000100685	kernel.asm	/^ffff800000100685:	c3                   	retq   $/;"	l
ffff800000100686	kernel.asm	/^ffff800000100686 <printptr>:$/;"	l
ffff800000100686	kernel.asm	/^ffff800000100686:	55                   	push   %rbp$/;"	l
ffff800000100687	kernel.asm	/^ffff800000100687:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010068a	kernel.asm	/^ffff80000010068a:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ffff80000010068e	kernel.asm	/^ffff80000010068e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
ffff800000100692	kernel.asm	/^ffff800000100692:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)$/;"	l
ffff800000100699	kernel.asm	/^ffff800000100699:	eb 33                	jmp    ffff8000001006ce <printptr+0x48>$/;"	l
ffff80000010069b	kernel.asm	/^ffff80000010069b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010069f	kernel.asm	/^ffff80000010069f:	48 c1 e8 3c          	shr    $0x3c,%rax$/;"	l
ffff8000001006a3	kernel.asm	/^ffff8000001006a3:	48 89 c2             	mov    %rax,%rdx$/;"	l
ffff8000001006a6	kernel.asm	/^ffff8000001006a6:	48 b8 00 e0 10 00 00 	movabs $0xffff80000010e000,%rax$/;"	l
ffff8000001006ad	kernel.asm	/^ffff8000001006ad:	80 ff ff $/;"	l
ffff8000001006b0	kernel.asm	/^ffff8000001006b0:	0f b6 04 10          	movzbl (%rax,%rdx,1),%eax$/;"	l
ffff8000001006b4	kernel.asm	/^ffff8000001006b4:	0f be c0             	movsbl %al,%eax$/;"	l
ffff8000001006b7	kernel.asm	/^ffff8000001006b7:	89 c7                	mov    %eax,%edi$/;"	l
ffff8000001006b9	kernel.asm	/^ffff8000001006b9:	48 b8 3b 0e 10 00 00 	movabs $0xffff800000100e3b,%rax$/;"	l
ffff8000001006c0	kernel.asm	/^ffff8000001006c0:	80 ff ff $/;"	l
ffff8000001006c3	kernel.asm	/^ffff8000001006c3:	ff d0                	callq  *%rax$/;"	l
ffff8000001006c5	kernel.asm	/^ffff8000001006c5:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)$/;"	l
ffff8000001006c9	kernel.asm	/^ffff8000001006c9:	48 c1 65 e8 04       	shlq   $0x4,-0x18(%rbp)$/;"	l
ffff8000001006ce	kernel.asm	/^ffff8000001006ce:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff8000001006d1	kernel.asm	/^ffff8000001006d1:	83 f8 0f             	cmp    $0xf,%eax$/;"	l
ffff8000001006d4	kernel.asm	/^ffff8000001006d4:	76 c5                	jbe    ffff80000010069b <printptr+0x15>$/;"	l
ffff8000001006d6	kernel.asm	/^ffff8000001006d6:	90                   	nop$/;"	l
ffff8000001006d7	kernel.asm	/^ffff8000001006d7:	c9                   	leaveq $/;"	l
ffff8000001006d8	kernel.asm	/^ffff8000001006d8:	c3                   	retq   $/;"	l
ffff8000001006d9	kernel.asm	/^ffff8000001006d9 <printint>:$/;"	l
ffff8000001006d9	kernel.asm	/^ffff8000001006d9:	55                   	push   %rbp$/;"	l
ffff8000001006da	kernel.asm	/^ffff8000001006da:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff8000001006dd	kernel.asm	/^ffff8000001006dd:	48 83 ec 40          	sub    $0x40,%rsp$/;"	l
ffff8000001006e1	kernel.asm	/^ffff8000001006e1:	89 7d cc             	mov    %edi,-0x34(%rbp)$/;"	l
ffff8000001006e4	kernel.asm	/^ffff8000001006e4:	89 75 c8             	mov    %esi,-0x38(%rbp)$/;"	l
ffff8000001006e7	kernel.asm	/^ffff8000001006e7:	89 55 c4             	mov    %edx,-0x3c(%rbp)$/;"	l
ffff8000001006ea	kernel.asm	/^ffff8000001006ea:	83 7d c4 00          	cmpl   $0x0,-0x3c(%rbp)$/;"	l
ffff8000001006ee	kernel.asm	/^ffff8000001006ee:	74 1f                	je     ffff80000010070f <printint+0x36>$/;"	l
ffff8000001006f0	kernel.asm	/^ffff8000001006f0:	8b 45 cc             	mov    -0x34(%rbp),%eax$/;"	l
ffff8000001006f3	kernel.asm	/^ffff8000001006f3:	c1 e8 1f             	shr    $0x1f,%eax$/;"	l
ffff8000001006f6	kernel.asm	/^ffff8000001006f6:	0f b6 c0             	movzbl %al,%eax$/;"	l
ffff8000001006f9	kernel.asm	/^ffff8000001006f9:	89 45 c4             	mov    %eax,-0x3c(%rbp)$/;"	l
ffff8000001006fc	kernel.asm	/^ffff8000001006fc:	83 7d c4 00          	cmpl   $0x0,-0x3c(%rbp)$/;"	l
ffff800000100700	kernel.asm	/^ffff800000100700:	74 0d                	je     ffff80000010070f <printint+0x36>$/;"	l
ffff800000100702	kernel.asm	/^ffff800000100702:	8b 45 cc             	mov    -0x34(%rbp),%eax$/;"	l
ffff800000100705	kernel.asm	/^ffff800000100705:	f7 d8                	neg    %eax$/;"	l
ffff800000100707	kernel.asm	/^ffff800000100707:	48 98                	cltq   $/;"	l
ffff800000100709	kernel.asm	/^ffff800000100709:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ffff80000010070d	kernel.asm	/^ffff80000010070d:	eb 09                	jmp    ffff800000100718 <printint+0x3f>$/;"	l
ffff80000010070f	kernel.asm	/^ffff80000010070f:	8b 45 cc             	mov    -0x34(%rbp),%eax$/;"	l
ffff800000100712	kernel.asm	/^ffff800000100712:	48 98                	cltq   $/;"	l
ffff800000100714	kernel.asm	/^ffff800000100714:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ffff800000100718	kernel.asm	/^ffff800000100718:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)$/;"	l
ffff80000010071f	kernel.asm	/^ffff80000010071f:	8b 4d fc             	mov    -0x4(%rbp),%ecx$/;"	l
ffff800000100722	kernel.asm	/^ffff800000100722:	8d 41 01             	lea    0x1(%rcx),%eax$/;"	l
ffff800000100725	kernel.asm	/^ffff800000100725:	89 45 fc             	mov    %eax,-0x4(%rbp)$/;"	l
ffff800000100728	kernel.asm	/^ffff800000100728:	8b 45 c8             	mov    -0x38(%rbp),%eax$/;"	l
ffff80000010072b	kernel.asm	/^ffff80000010072b:	48 63 f0             	movslq %eax,%rsi$/;"	l
ffff80000010072e	kernel.asm	/^ffff80000010072e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000100732	kernel.asm	/^ffff800000100732:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
ffff800000100737	kernel.asm	/^ffff800000100737:	48 f7 f6             	div    %rsi$/;"	l
ffff80000010073a	kernel.asm	/^ffff80000010073a:	48 b8 00 e0 10 00 00 	movabs $0xffff80000010e000,%rax$/;"	l
ffff800000100741	kernel.asm	/^ffff800000100741:	80 ff ff $/;"	l
ffff800000100744	kernel.asm	/^ffff800000100744:	0f b6 14 10          	movzbl (%rax,%rdx,1),%edx$/;"	l
ffff800000100748	kernel.asm	/^ffff800000100748:	48 63 c1             	movslq %ecx,%rax$/;"	l
ffff80000010074b	kernel.asm	/^ffff80000010074b:	88 54 05 d0          	mov    %dl,-0x30(%rbp,%rax,1)$/;"	l
ffff80000010074f	kernel.asm	/^ffff80000010074f:	8b 45 c8             	mov    -0x38(%rbp),%eax$/;"	l
ffff800000100752	kernel.asm	/^ffff800000100752:	48 63 f8             	movslq %eax,%rdi$/;"	l
ffff800000100755	kernel.asm	/^ffff800000100755:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000100759	kernel.asm	/^ffff800000100759:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
ffff80000010075e	kernel.asm	/^ffff80000010075e:	48 f7 f7             	div    %rdi$/;"	l
ffff800000100761	kernel.asm	/^ffff800000100761:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ffff800000100765	kernel.asm	/^ffff800000100765:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)$/;"	l
ffff80000010076a	kernel.asm	/^ffff80000010076a:	75 b3                	jne    ffff80000010071f <printint+0x46>$/;"	l
ffff80000010076c	kernel.asm	/^ffff80000010076c:	83 7d c4 00          	cmpl   $0x0,-0x3c(%rbp)$/;"	l
ffff800000100770	kernel.asm	/^ffff800000100770:	74 2d                	je     ffff80000010079f <printint+0xc6>$/;"	l
ffff800000100772	kernel.asm	/^ffff800000100772:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff800000100775	kernel.asm	/^ffff800000100775:	8d 50 01             	lea    0x1(%rax),%edx$/;"	l
ffff800000100778	kernel.asm	/^ffff800000100778:	89 55 fc             	mov    %edx,-0x4(%rbp)$/;"	l
ffff80000010077b	kernel.asm	/^ffff80000010077b:	48 98                	cltq   $/;"	l
ffff80000010077d	kernel.asm	/^ffff80000010077d:	c6 44 05 d0 2d       	movb   $0x2d,-0x30(%rbp,%rax,1)$/;"	l
ffff800000100782	kernel.asm	/^ffff800000100782:	eb 1b                	jmp    ffff80000010079f <printint+0xc6>$/;"	l
ffff800000100784	kernel.asm	/^ffff800000100784:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff800000100787	kernel.asm	/^ffff800000100787:	48 98                	cltq   $/;"	l
ffff800000100789	kernel.asm	/^ffff800000100789:	0f b6 44 05 d0       	movzbl -0x30(%rbp,%rax,1),%eax$/;"	l
ffff80000010078e	kernel.asm	/^ffff80000010078e:	0f be c0             	movsbl %al,%eax$/;"	l
ffff800000100791	kernel.asm	/^ffff800000100791:	89 c7                	mov    %eax,%edi$/;"	l
ffff800000100793	kernel.asm	/^ffff800000100793:	48 b8 3b 0e 10 00 00 	movabs $0xffff800000100e3b,%rax$/;"	l
ffff80000010079a	kernel.asm	/^ffff80000010079a:	80 ff ff $/;"	l
ffff80000010079d	kernel.asm	/^ffff80000010079d:	ff d0                	callq  *%rax$/;"	l
ffff80000010079f	kernel.asm	/^ffff80000010079f:	83 6d fc 01          	subl   $0x1,-0x4(%rbp)$/;"	l
ffff8000001007a3	kernel.asm	/^ffff8000001007a3:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)$/;"	l
ffff8000001007a7	kernel.asm	/^ffff8000001007a7:	79 db                	jns    ffff800000100784 <printint+0xab>$/;"	l
ffff8000001007a9	kernel.asm	/^ffff8000001007a9:	90                   	nop$/;"	l
ffff8000001007aa	kernel.asm	/^ffff8000001007aa:	c9                   	leaveq $/;"	l
ffff8000001007ab	kernel.asm	/^ffff8000001007ab:	c3                   	retq   $/;"	l
ffff8000001007ac	kernel.asm	/^ffff8000001007ac <cprintf>:$/;"	l
ffff8000001007ac	kernel.asm	/^ffff8000001007ac:	55                   	push   %rbp$/;"	l
ffff8000001007ad	kernel.asm	/^ffff8000001007ad:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff8000001007b0	kernel.asm	/^ffff8000001007b0:	48 81 ec f0 00 00 00 	sub    $0xf0,%rsp$/;"	l
ffff8000001007b7	kernel.asm	/^ffff8000001007b7:	48 89 bd 18 ff ff ff 	mov    %rdi,-0xe8(%rbp)$/;"	l
ffff8000001007be	kernel.asm	/^ffff8000001007be:	48 89 b5 58 ff ff ff 	mov    %rsi,-0xa8(%rbp)$/;"	l
ffff8000001007c5	kernel.asm	/^ffff8000001007c5:	48 89 95 60 ff ff ff 	mov    %rdx,-0xa0(%rbp)$/;"	l
ffff8000001007cc	kernel.asm	/^ffff8000001007cc:	48 89 8d 68 ff ff ff 	mov    %rcx,-0x98(%rbp)$/;"	l
ffff8000001007d3	kernel.asm	/^ffff8000001007d3:	4c 89 85 70 ff ff ff 	mov    %r8,-0x90(%rbp)$/;"	l
ffff8000001007da	kernel.asm	/^ffff8000001007da:	4c 89 8d 78 ff ff ff 	mov    %r9,-0x88(%rbp)$/;"	l
ffff8000001007e1	kernel.asm	/^ffff8000001007e1:	84 c0                	test   %al,%al$/;"	l
ffff8000001007e3	kernel.asm	/^ffff8000001007e3:	74 20                	je     ffff800000100805 <cprintf+0x59>$/;"	l
ffff8000001007e5	kernel.asm	/^ffff8000001007e5:	0f 29 45 80          	movaps %xmm0,-0x80(%rbp)$/;"	l
ffff8000001007e9	kernel.asm	/^ffff8000001007e9:	0f 29 4d 90          	movaps %xmm1,-0x70(%rbp)$/;"	l
ffff8000001007ed	kernel.asm	/^ffff8000001007ed:	0f 29 55 a0          	movaps %xmm2,-0x60(%rbp)$/;"	l
ffff8000001007f1	kernel.asm	/^ffff8000001007f1:	0f 29 5d b0          	movaps %xmm3,-0x50(%rbp)$/;"	l
ffff8000001007f5	kernel.asm	/^ffff8000001007f5:	0f 29 65 c0          	movaps %xmm4,-0x40(%rbp)$/;"	l
ffff8000001007f9	kernel.asm	/^ffff8000001007f9:	0f 29 6d d0          	movaps %xmm5,-0x30(%rbp)$/;"	l
ffff8000001007fd	kernel.asm	/^ffff8000001007fd:	0f 29 75 e0          	movaps %xmm6,-0x20(%rbp)$/;"	l
ffff800000100801	kernel.asm	/^ffff800000100801:	0f 29 7d f0          	movaps %xmm7,-0x10(%rbp)$/;"	l
ffff800000100805	kernel.asm	/^ffff800000100805:	c7 85 20 ff ff ff 08 	movl   $0x8,-0xe0(%rbp)$/;"	l
ffff80000010080c	kernel.asm	/^ffff80000010080c:	00 00 00 $/;"	l
ffff80000010080f	kernel.asm	/^ffff80000010080f:	c7 85 24 ff ff ff 30 	movl   $0x30,-0xdc(%rbp)$/;"	l
ffff800000100816	kernel.asm	/^ffff800000100816:	00 00 00 $/;"	l
ffff800000100819	kernel.asm	/^ffff800000100819:	48 8d 45 10          	lea    0x10(%rbp),%rax$/;"	l
ffff80000010081d	kernel.asm	/^ffff80000010081d:	48 89 85 28 ff ff ff 	mov    %rax,-0xd8(%rbp)$/;"	l
ffff800000100824	kernel.asm	/^ffff800000100824:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax$/;"	l
ffff80000010082b	kernel.asm	/^ffff80000010082b:	48 89 85 30 ff ff ff 	mov    %rax,-0xd0(%rbp)$/;"	l
ffff800000100832	kernel.asm	/^ffff800000100832:	48 b8 c0 64 11 00 00 	movabs $0xffff8000001164c0,%rax$/;"	l
ffff800000100839	kernel.asm	/^ffff800000100839:	80 ff ff $/;"	l
ffff80000010083c	kernel.asm	/^ffff80000010083c:	8b 40 68             	mov    0x68(%rax),%eax$/;"	l
ffff80000010083f	kernel.asm	/^ffff80000010083f:	89 85 3c ff ff ff    	mov    %eax,-0xc4(%rbp)$/;"	l
ffff800000100845	kernel.asm	/^ffff800000100845:	83 bd 3c ff ff ff 00 	cmpl   $0x0,-0xc4(%rbp)$/;"	l
ffff80000010084c	kernel.asm	/^ffff80000010084c:	74 16                	je     ffff800000100864 <cprintf+0xb8>$/;"	l
ffff80000010084e	kernel.asm	/^ffff80000010084e:	48 bf c0 64 11 00 00 	movabs $0xffff8000001164c0,%rdi$/;"	l
ffff800000100855	kernel.asm	/^ffff800000100855:	80 ff ff $/;"	l
ffff800000100858	kernel.asm	/^ffff800000100858:	48 b8 d6 77 10 00 00 	movabs $0xffff8000001077d6,%rax$/;"	l
ffff80000010085f	kernel.asm	/^ffff80000010085f:	80 ff ff $/;"	l
ffff800000100862	kernel.asm	/^ffff800000100862:	ff d0                	callq  *%rax$/;"	l
ffff800000100864	kernel.asm	/^ffff800000100864:	48 83 bd 18 ff ff ff 	cmpq   $0x0,-0xe8(%rbp)$/;"	l
ffff80000010086b	kernel.asm	/^ffff80000010086b:	00 $/;"	l
ffff80000010086c	kernel.asm	/^ffff80000010086c:	75 16                	jne    ffff800000100884 <cprintf+0xd8>$/;"	l
ffff80000010086e	kernel.asm	/^ffff80000010086e:	48 bf 95 d4 10 00 00 	movabs $0xffff80000010d495,%rdi$/;"	l
ffff800000100875	kernel.asm	/^ffff800000100875:	80 ff ff $/;"	l
ffff800000100878	kernel.asm	/^ffff800000100878:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff80000010087f	kernel.asm	/^ffff80000010087f:	80 ff ff $/;"	l
ffff800000100882	kernel.asm	/^ffff800000100882:	ff d0                	callq  *%rax$/;"	l
ffff800000100884	kernel.asm	/^ffff800000100884:	c7 85 4c ff ff ff 00 	movl   $0x0,-0xb4(%rbp)$/;"	l
ffff80000010088b	kernel.asm	/^ffff80000010088b:	00 00 00 $/;"	l
ffff80000010088e	kernel.asm	/^ffff80000010088e:	e9 83 02 00 00       	jmpq   ffff800000100b16 <cprintf+0x36a>$/;"	l
ffff800000100893	kernel.asm	/^ffff800000100893:	83 bd 38 ff ff ff 25 	cmpl   $0x25,-0xc8(%rbp)$/;"	l
ffff80000010089a	kernel.asm	/^ffff80000010089a:	74 19                	je     ffff8000001008b5 <cprintf+0x109>$/;"	l
ffff80000010089c	kernel.asm	/^ffff80000010089c:	8b 85 38 ff ff ff    	mov    -0xc8(%rbp),%eax$/;"	l
ffff8000001008a2	kernel.asm	/^ffff8000001008a2:	89 c7                	mov    %eax,%edi$/;"	l
ffff8000001008a4	kernel.asm	/^ffff8000001008a4:	48 b8 3b 0e 10 00 00 	movabs $0xffff800000100e3b,%rax$/;"	l
ffff8000001008ab	kernel.asm	/^ffff8000001008ab:	80 ff ff $/;"	l
ffff8000001008ae	kernel.asm	/^ffff8000001008ae:	ff d0                	callq  *%rax$/;"	l
ffff8000001008b0	kernel.asm	/^ffff8000001008b0:	e9 5a 02 00 00       	jmpq   ffff800000100b0f <cprintf+0x363>$/;"	l
ffff8000001008b5	kernel.asm	/^ffff8000001008b5:	83 85 4c ff ff ff 01 	addl   $0x1,-0xb4(%rbp)$/;"	l
ffff8000001008bc	kernel.asm	/^ffff8000001008bc:	8b 85 4c ff ff ff    	mov    -0xb4(%rbp),%eax$/;"	l
ffff8000001008c2	kernel.asm	/^ffff8000001008c2:	48 63 d0             	movslq %eax,%rdx$/;"	l
ffff8000001008c5	kernel.asm	/^ffff8000001008c5:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax$/;"	l
ffff8000001008cc	kernel.asm	/^ffff8000001008cc:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff8000001008cf	kernel.asm	/^ffff8000001008cf:	0f b6 00             	movzbl (%rax),%eax$/;"	l
ffff8000001008d2	kernel.asm	/^ffff8000001008d2:	0f be c0             	movsbl %al,%eax$/;"	l
ffff8000001008d5	kernel.asm	/^ffff8000001008d5:	25 ff 00 00 00       	and    $0xff,%eax$/;"	l
ffff8000001008da	kernel.asm	/^ffff8000001008da:	89 85 38 ff ff ff    	mov    %eax,-0xc8(%rbp)$/;"	l
ffff8000001008e0	kernel.asm	/^ffff8000001008e0:	83 bd 38 ff ff ff 00 	cmpl   $0x0,-0xc8(%rbp)$/;"	l
ffff8000001008e7	kernel.asm	/^ffff8000001008e7:	0f 84 5c 02 00 00    	je     ffff800000100b49 <cprintf+0x39d>$/;"	l
ffff8000001008ed	kernel.asm	/^ffff8000001008ed:	8b 85 38 ff ff ff    	mov    -0xc8(%rbp),%eax$/;"	l
ffff8000001008f3	kernel.asm	/^ffff8000001008f3:	83 f8 70             	cmp    $0x70,%eax$/;"	l
ffff8000001008f6	kernel.asm	/^ffff8000001008f6:	0f 84 e9 00 00 00    	je     ffff8000001009e5 <cprintf+0x239>$/;"	l
ffff8000001008fc	kernel.asm	/^ffff8000001008fc:	83 f8 70             	cmp    $0x70,%eax$/;"	l
ffff8000001008ff	kernel.asm	/^ffff8000001008ff:	7f 13                	jg     ffff800000100914 <cprintf+0x168>$/;"	l
ffff800000100901	kernel.asm	/^ffff800000100901:	83 f8 25             	cmp    $0x25,%eax$/;"	l
ffff800000100904	kernel.asm	/^ffff800000100904:	0f 84 cc 01 00 00    	je     ffff800000100ad6 <cprintf+0x32a>$/;"	l
ffff80000010090a	kernel.asm	/^ffff80000010090a:	83 f8 64             	cmp    $0x64,%eax$/;"	l
ffff80000010090d	kernel.asm	/^ffff80000010090d:	74 18                	je     ffff800000100927 <cprintf+0x17b>$/;"	l
ffff80000010090f	kernel.asm	/^ffff80000010090f:	e9 d5 01 00 00       	jmpq   ffff800000100ae9 <cprintf+0x33d>$/;"	l
ffff800000100914	kernel.asm	/^ffff800000100914:	83 f8 73             	cmp    $0x73,%eax$/;"	l
ffff800000100917	kernel.asm	/^ffff800000100917:	0f 84 1f 01 00 00    	je     ffff800000100a3c <cprintf+0x290>$/;"	l
ffff80000010091d	kernel.asm	/^ffff80000010091d:	83 f8 78             	cmp    $0x78,%eax$/;"	l
ffff800000100920	kernel.asm	/^ffff800000100920:	74 64                	je     ffff800000100986 <cprintf+0x1da>$/;"	l
ffff800000100922	kernel.asm	/^ffff800000100922:	e9 c2 01 00 00       	jmpq   ffff800000100ae9 <cprintf+0x33d>$/;"	l
ffff800000100927	kernel.asm	/^ffff800000100927:	8b 85 20 ff ff ff    	mov    -0xe0(%rbp),%eax$/;"	l
ffff80000010092d	kernel.asm	/^ffff80000010092d:	83 f8 30             	cmp    $0x30,%eax$/;"	l
ffff800000100930	kernel.asm	/^ffff800000100930:	73 23                	jae    ffff800000100955 <cprintf+0x1a9>$/;"	l
ffff800000100932	kernel.asm	/^ffff800000100932:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax$/;"	l
ffff800000100939	kernel.asm	/^ffff800000100939:	8b 95 20 ff ff ff    	mov    -0xe0(%rbp),%edx$/;"	l
ffff80000010093f	kernel.asm	/^ffff80000010093f:	89 d2                	mov    %edx,%edx$/;"	l
ffff800000100941	kernel.asm	/^ffff800000100941:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff800000100944	kernel.asm	/^ffff800000100944:	8b 95 20 ff ff ff    	mov    -0xe0(%rbp),%edx$/;"	l
ffff80000010094a	kernel.asm	/^ffff80000010094a:	83 c2 08             	add    $0x8,%edx$/;"	l
ffff80000010094d	kernel.asm	/^ffff80000010094d:	89 95 20 ff ff ff    	mov    %edx,-0xe0(%rbp)$/;"	l
ffff800000100953	kernel.asm	/^ffff800000100953:	eb 12                	jmp    ffff800000100967 <cprintf+0x1bb>$/;"	l
ffff800000100955	kernel.asm	/^ffff800000100955:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax$/;"	l
ffff80000010095c	kernel.asm	/^ffff80000010095c:	48 8d 50 08          	lea    0x8(%rax),%rdx$/;"	l
ffff800000100960	kernel.asm	/^ffff800000100960:	48 89 95 28 ff ff ff 	mov    %rdx,-0xd8(%rbp)$/;"	l
ffff800000100967	kernel.asm	/^ffff800000100967:	8b 00                	mov    (%rax),%eax$/;"	l
ffff800000100969	kernel.asm	/^ffff800000100969:	ba 01 00 00 00       	mov    $0x1,%edx$/;"	l
ffff80000010096e	kernel.asm	/^ffff80000010096e:	be 0a 00 00 00       	mov    $0xa,%esi$/;"	l
ffff800000100973	kernel.asm	/^ffff800000100973:	89 c7                	mov    %eax,%edi$/;"	l
ffff800000100975	kernel.asm	/^ffff800000100975:	48 b8 d9 06 10 00 00 	movabs $0xffff8000001006d9,%rax$/;"	l
ffff80000010097c	kernel.asm	/^ffff80000010097c:	80 ff ff $/;"	l
ffff80000010097f	kernel.asm	/^ffff80000010097f:	ff d0                	callq  *%rax$/;"	l
ffff800000100981	kernel.asm	/^ffff800000100981:	e9 89 01 00 00       	jmpq   ffff800000100b0f <cprintf+0x363>$/;"	l
ffff800000100986	kernel.asm	/^ffff800000100986:	8b 85 20 ff ff ff    	mov    -0xe0(%rbp),%eax$/;"	l
ffff80000010098c	kernel.asm	/^ffff80000010098c:	83 f8 30             	cmp    $0x30,%eax$/;"	l
ffff80000010098f	kernel.asm	/^ffff80000010098f:	73 23                	jae    ffff8000001009b4 <cprintf+0x208>$/;"	l
ffff800000100991	kernel.asm	/^ffff800000100991:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax$/;"	l
ffff800000100998	kernel.asm	/^ffff800000100998:	8b 95 20 ff ff ff    	mov    -0xe0(%rbp),%edx$/;"	l
ffff80000010099e	kernel.asm	/^ffff80000010099e:	89 d2                	mov    %edx,%edx$/;"	l
ffff8000001009a0	kernel.asm	/^ffff8000001009a0:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff8000001009a3	kernel.asm	/^ffff8000001009a3:	8b 95 20 ff ff ff    	mov    -0xe0(%rbp),%edx$/;"	l
ffff8000001009a9	kernel.asm	/^ffff8000001009a9:	83 c2 08             	add    $0x8,%edx$/;"	l
ffff8000001009ac	kernel.asm	/^ffff8000001009ac:	89 95 20 ff ff ff    	mov    %edx,-0xe0(%rbp)$/;"	l
ffff8000001009b2	kernel.asm	/^ffff8000001009b2:	eb 12                	jmp    ffff8000001009c6 <cprintf+0x21a>$/;"	l
ffff8000001009b4	kernel.asm	/^ffff8000001009b4:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax$/;"	l
ffff8000001009bb	kernel.asm	/^ffff8000001009bb:	48 8d 50 08          	lea    0x8(%rax),%rdx$/;"	l
ffff8000001009bf	kernel.asm	/^ffff8000001009bf:	48 89 95 28 ff ff ff 	mov    %rdx,-0xd8(%rbp)$/;"	l
ffff8000001009c6	kernel.asm	/^ffff8000001009c6:	8b 00                	mov    (%rax),%eax$/;"	l
ffff8000001009c8	kernel.asm	/^ffff8000001009c8:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
ffff8000001009cd	kernel.asm	/^ffff8000001009cd:	be 10 00 00 00       	mov    $0x10,%esi$/;"	l
ffff8000001009d2	kernel.asm	/^ffff8000001009d2:	89 c7                	mov    %eax,%edi$/;"	l
ffff8000001009d4	kernel.asm	/^ffff8000001009d4:	48 b8 d9 06 10 00 00 	movabs $0xffff8000001006d9,%rax$/;"	l
ffff8000001009db	kernel.asm	/^ffff8000001009db:	80 ff ff $/;"	l
ffff8000001009de	kernel.asm	/^ffff8000001009de:	ff d0                	callq  *%rax$/;"	l
ffff8000001009e0	kernel.asm	/^ffff8000001009e0:	e9 2a 01 00 00       	jmpq   ffff800000100b0f <cprintf+0x363>$/;"	l
ffff8000001009e5	kernel.asm	/^ffff8000001009e5:	8b 85 20 ff ff ff    	mov    -0xe0(%rbp),%eax$/;"	l
ffff8000001009eb	kernel.asm	/^ffff8000001009eb:	83 f8 30             	cmp    $0x30,%eax$/;"	l
ffff8000001009ee	kernel.asm	/^ffff8000001009ee:	73 23                	jae    ffff800000100a13 <cprintf+0x267>$/;"	l
ffff8000001009f0	kernel.asm	/^ffff8000001009f0:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax$/;"	l
ffff8000001009f7	kernel.asm	/^ffff8000001009f7:	8b 95 20 ff ff ff    	mov    -0xe0(%rbp),%edx$/;"	l
ffff8000001009fd	kernel.asm	/^ffff8000001009fd:	89 d2                	mov    %edx,%edx$/;"	l
ffff8000001009ff	kernel.asm	/^ffff8000001009ff:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff800000100a02	kernel.asm	/^ffff800000100a02:	8b 95 20 ff ff ff    	mov    -0xe0(%rbp),%edx$/;"	l
ffff800000100a08	kernel.asm	/^ffff800000100a08:	83 c2 08             	add    $0x8,%edx$/;"	l
ffff800000100a0b	kernel.asm	/^ffff800000100a0b:	89 95 20 ff ff ff    	mov    %edx,-0xe0(%rbp)$/;"	l
ffff800000100a11	kernel.asm	/^ffff800000100a11:	eb 12                	jmp    ffff800000100a25 <cprintf+0x279>$/;"	l
ffff800000100a13	kernel.asm	/^ffff800000100a13:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax$/;"	l
ffff800000100a1a	kernel.asm	/^ffff800000100a1a:	48 8d 50 08          	lea    0x8(%rax),%rdx$/;"	l
ffff800000100a1e	kernel.asm	/^ffff800000100a1e:	48 89 95 28 ff ff ff 	mov    %rdx,-0xd8(%rbp)$/;"	l
ffff800000100a25	kernel.asm	/^ffff800000100a25:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff800000100a28	kernel.asm	/^ffff800000100a28:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000100a2b	kernel.asm	/^ffff800000100a2b:	48 b8 86 06 10 00 00 	movabs $0xffff800000100686,%rax$/;"	l
ffff800000100a32	kernel.asm	/^ffff800000100a32:	80 ff ff $/;"	l
ffff800000100a35	kernel.asm	/^ffff800000100a35:	ff d0                	callq  *%rax$/;"	l
ffff800000100a37	kernel.asm	/^ffff800000100a37:	e9 d3 00 00 00       	jmpq   ffff800000100b0f <cprintf+0x363>$/;"	l
ffff800000100a3c	kernel.asm	/^ffff800000100a3c:	8b 85 20 ff ff ff    	mov    -0xe0(%rbp),%eax$/;"	l
ffff800000100a42	kernel.asm	/^ffff800000100a42:	83 f8 30             	cmp    $0x30,%eax$/;"	l
ffff800000100a45	kernel.asm	/^ffff800000100a45:	73 23                	jae    ffff800000100a6a <cprintf+0x2be>$/;"	l
ffff800000100a47	kernel.asm	/^ffff800000100a47:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax$/;"	l
ffff800000100a4e	kernel.asm	/^ffff800000100a4e:	8b 95 20 ff ff ff    	mov    -0xe0(%rbp),%edx$/;"	l
ffff800000100a54	kernel.asm	/^ffff800000100a54:	89 d2                	mov    %edx,%edx$/;"	l
ffff800000100a56	kernel.asm	/^ffff800000100a56:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff800000100a59	kernel.asm	/^ffff800000100a59:	8b 95 20 ff ff ff    	mov    -0xe0(%rbp),%edx$/;"	l
ffff800000100a5f	kernel.asm	/^ffff800000100a5f:	83 c2 08             	add    $0x8,%edx$/;"	l
ffff800000100a62	kernel.asm	/^ffff800000100a62:	89 95 20 ff ff ff    	mov    %edx,-0xe0(%rbp)$/;"	l
ffff800000100a68	kernel.asm	/^ffff800000100a68:	eb 12                	jmp    ffff800000100a7c <cprintf+0x2d0>$/;"	l
ffff800000100a6a	kernel.asm	/^ffff800000100a6a:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax$/;"	l
ffff800000100a71	kernel.asm	/^ffff800000100a71:	48 8d 50 08          	lea    0x8(%rax),%rdx$/;"	l
ffff800000100a75	kernel.asm	/^ffff800000100a75:	48 89 95 28 ff ff ff 	mov    %rdx,-0xd8(%rbp)$/;"	l
ffff800000100a7c	kernel.asm	/^ffff800000100a7c:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff800000100a7f	kernel.asm	/^ffff800000100a7f:	48 89 85 40 ff ff ff 	mov    %rax,-0xc0(%rbp)$/;"	l
ffff800000100a86	kernel.asm	/^ffff800000100a86:	48 83 bd 40 ff ff ff 	cmpq   $0x0,-0xc0(%rbp)$/;"	l
ffff800000100a8d	kernel.asm	/^ffff800000100a8d:	00 $/;"	l
ffff800000100a8e	kernel.asm	/^ffff800000100a8e:	75 36                	jne    ffff800000100ac6 <cprintf+0x31a>$/;"	l
ffff800000100a90	kernel.asm	/^ffff800000100a90:	48 b8 9e d4 10 00 00 	movabs $0xffff80000010d49e,%rax$/;"	l
ffff800000100a97	kernel.asm	/^ffff800000100a97:	80 ff ff $/;"	l
ffff800000100a9a	kernel.asm	/^ffff800000100a9a:	48 89 85 40 ff ff ff 	mov    %rax,-0xc0(%rbp)$/;"	l
ffff800000100aa1	kernel.asm	/^ffff800000100aa1:	eb 23                	jmp    ffff800000100ac6 <cprintf+0x31a>$/;"	l
ffff800000100aa3	kernel.asm	/^ffff800000100aa3:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax$/;"	l
ffff800000100aaa	kernel.asm	/^ffff800000100aaa:	0f b6 00             	movzbl (%rax),%eax$/;"	l
ffff800000100aad	kernel.asm	/^ffff800000100aad:	0f be c0             	movsbl %al,%eax$/;"	l
ffff800000100ab0	kernel.asm	/^ffff800000100ab0:	89 c7                	mov    %eax,%edi$/;"	l
ffff800000100ab2	kernel.asm	/^ffff800000100ab2:	48 b8 3b 0e 10 00 00 	movabs $0xffff800000100e3b,%rax$/;"	l
ffff800000100ab9	kernel.asm	/^ffff800000100ab9:	80 ff ff $/;"	l
ffff800000100abc	kernel.asm	/^ffff800000100abc:	ff d0                	callq  *%rax$/;"	l
ffff800000100abe	kernel.asm	/^ffff800000100abe:	48 83 85 40 ff ff ff 	addq   $0x1,-0xc0(%rbp)$/;"	l
ffff800000100ac5	kernel.asm	/^ffff800000100ac5:	01 $/;"	l
ffff800000100ac6	kernel.asm	/^ffff800000100ac6:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax$/;"	l
ffff800000100acd	kernel.asm	/^ffff800000100acd:	0f b6 00             	movzbl (%rax),%eax$/;"	l
ffff800000100ad0	kernel.asm	/^ffff800000100ad0:	84 c0                	test   %al,%al$/;"	l
ffff800000100ad2	kernel.asm	/^ffff800000100ad2:	75 cf                	jne    ffff800000100aa3 <cprintf+0x2f7>$/;"	l
ffff800000100ad4	kernel.asm	/^ffff800000100ad4:	eb 39                	jmp    ffff800000100b0f <cprintf+0x363>$/;"	l
ffff800000100ad6	kernel.asm	/^ffff800000100ad6:	bf 25 00 00 00       	mov    $0x25,%edi$/;"	l
ffff800000100adb	kernel.asm	/^ffff800000100adb:	48 b8 3b 0e 10 00 00 	movabs $0xffff800000100e3b,%rax$/;"	l
ffff800000100ae2	kernel.asm	/^ffff800000100ae2:	80 ff ff $/;"	l
ffff800000100ae5	kernel.asm	/^ffff800000100ae5:	ff d0                	callq  *%rax$/;"	l
ffff800000100ae7	kernel.asm	/^ffff800000100ae7:	eb 26                	jmp    ffff800000100b0f <cprintf+0x363>$/;"	l
ffff800000100ae9	kernel.asm	/^ffff800000100ae9:	bf 25 00 00 00       	mov    $0x25,%edi$/;"	l
ffff800000100aee	kernel.asm	/^ffff800000100aee:	48 b8 3b 0e 10 00 00 	movabs $0xffff800000100e3b,%rax$/;"	l
ffff800000100af5	kernel.asm	/^ffff800000100af5:	80 ff ff $/;"	l
ffff800000100af8	kernel.asm	/^ffff800000100af8:	ff d0                	callq  *%rax$/;"	l
ffff800000100afa	kernel.asm	/^ffff800000100afa:	8b 85 38 ff ff ff    	mov    -0xc8(%rbp),%eax$/;"	l
ffff800000100b00	kernel.asm	/^ffff800000100b00:	89 c7                	mov    %eax,%edi$/;"	l
ffff800000100b02	kernel.asm	/^ffff800000100b02:	48 b8 3b 0e 10 00 00 	movabs $0xffff800000100e3b,%rax$/;"	l
ffff800000100b09	kernel.asm	/^ffff800000100b09:	80 ff ff $/;"	l
ffff800000100b0c	kernel.asm	/^ffff800000100b0c:	ff d0                	callq  *%rax$/;"	l
ffff800000100b0e	kernel.asm	/^ffff800000100b0e:	90                   	nop$/;"	l
ffff800000100b0f	kernel.asm	/^ffff800000100b0f:	83 85 4c ff ff ff 01 	addl   $0x1,-0xb4(%rbp)$/;"	l
ffff800000100b16	kernel.asm	/^ffff800000100b16:	8b 85 4c ff ff ff    	mov    -0xb4(%rbp),%eax$/;"	l
ffff800000100b1c	kernel.asm	/^ffff800000100b1c:	48 63 d0             	movslq %eax,%rdx$/;"	l
ffff800000100b1f	kernel.asm	/^ffff800000100b1f:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax$/;"	l
ffff800000100b26	kernel.asm	/^ffff800000100b26:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff800000100b29	kernel.asm	/^ffff800000100b29:	0f b6 00             	movzbl (%rax),%eax$/;"	l
ffff800000100b2c	kernel.asm	/^ffff800000100b2c:	0f be c0             	movsbl %al,%eax$/;"	l
ffff800000100b2f	kernel.asm	/^ffff800000100b2f:	25 ff 00 00 00       	and    $0xff,%eax$/;"	l
ffff800000100b34	kernel.asm	/^ffff800000100b34:	89 85 38 ff ff ff    	mov    %eax,-0xc8(%rbp)$/;"	l
ffff800000100b3a	kernel.asm	/^ffff800000100b3a:	83 bd 38 ff ff ff 00 	cmpl   $0x0,-0xc8(%rbp)$/;"	l
ffff800000100b41	kernel.asm	/^ffff800000100b41:	0f 85 4c fd ff ff    	jne    ffff800000100893 <cprintf+0xe7>$/;"	l
ffff800000100b47	kernel.asm	/^ffff800000100b47:	eb 01                	jmp    ffff800000100b4a <cprintf+0x39e>$/;"	l
ffff800000100b49	kernel.asm	/^ffff800000100b49:	90                   	nop$/;"	l
ffff800000100b4a	kernel.asm	/^ffff800000100b4a:	83 bd 3c ff ff ff 00 	cmpl   $0x0,-0xc4(%rbp)$/;"	l
ffff800000100b51	kernel.asm	/^ffff800000100b51:	74 16                	je     ffff800000100b69 <cprintf+0x3bd>$/;"	l
ffff800000100b53	kernel.asm	/^ffff800000100b53:	48 bf c0 64 11 00 00 	movabs $0xffff8000001164c0,%rdi$/;"	l
ffff800000100b5a	kernel.asm	/^ffff800000100b5a:	80 ff ff $/;"	l
ffff800000100b5d	kernel.asm	/^ffff800000100b5d:	48 b8 6f 78 10 00 00 	movabs $0xffff80000010786f,%rax$/;"	l
ffff800000100b64	kernel.asm	/^ffff800000100b64:	80 ff ff $/;"	l
ffff800000100b67	kernel.asm	/^ffff800000100b67:	ff d0                	callq  *%rax$/;"	l
ffff800000100b69	kernel.asm	/^ffff800000100b69:	90                   	nop$/;"	l
ffff800000100b6a	kernel.asm	/^ffff800000100b6a:	c9                   	leaveq $/;"	l
ffff800000100b6b	kernel.asm	/^ffff800000100b6b:	c3                   	retq   $/;"	l
ffff800000100b6c	kernel.asm	/^ffff800000100b6c <panic>:$/;"	l
ffff800000100b6c	kernel.asm	/^ffff800000100b6c:	55                   	push   %rbp$/;"	l
ffff800000100b6d	kernel.asm	/^ffff800000100b6d:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000100b70	kernel.asm	/^ffff800000100b70:	48 83 ec 70          	sub    $0x70,%rsp$/;"	l
ffff800000100b74	kernel.asm	/^ffff800000100b74:	48 89 7d 98          	mov    %rdi,-0x68(%rbp)$/;"	l
ffff800000100b78	kernel.asm	/^ffff800000100b78:	48 b8 7e 06 10 00 00 	movabs $0xffff80000010067e,%rax$/;"	l
ffff800000100b7f	kernel.asm	/^ffff800000100b7f:	80 ff ff $/;"	l
ffff800000100b82	kernel.asm	/^ffff800000100b82:	ff d0                	callq  *%rax$/;"	l
ffff800000100b84	kernel.asm	/^ffff800000100b84:	48 b8 c0 64 11 00 00 	movabs $0xffff8000001164c0,%rax$/;"	l
ffff800000100b8b	kernel.asm	/^ffff800000100b8b:	80 ff ff $/;"	l
ffff800000100b8e	kernel.asm	/^ffff800000100b8e:	c7 40 68 00 00 00 00 	movl   $0x0,0x68(%rax)$/;"	l
ffff800000100b95	kernel.asm	/^ffff800000100b95:	48 c7 c0 f0 ff ff ff 	mov    $0xfffffffffffffff0,%rax$/;"	l
ffff800000100b9c	kernel.asm	/^ffff800000100b9c:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000100ba0	kernel.asm	/^ffff800000100ba0:	0f b6 00             	movzbl (%rax),%eax$/;"	l
ffff800000100ba3	kernel.asm	/^ffff800000100ba3:	0f b6 c0             	movzbl %al,%eax$/;"	l
ffff800000100ba6	kernel.asm	/^ffff800000100ba6:	89 c6                	mov    %eax,%esi$/;"	l
ffff800000100ba8	kernel.asm	/^ffff800000100ba8:	48 bf a5 d4 10 00 00 	movabs $0xffff80000010d4a5,%rdi$/;"	l
ffff800000100baf	kernel.asm	/^ffff800000100baf:	80 ff ff $/;"	l
ffff800000100bb2	kernel.asm	/^ffff800000100bb2:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000100bb7	kernel.asm	/^ffff800000100bb7:	48 ba ac 07 10 00 00 	movabs $0xffff8000001007ac,%rdx$/;"	l
ffff800000100bbe	kernel.asm	/^ffff800000100bbe:	80 ff ff $/;"	l
ffff800000100bc1	kernel.asm	/^ffff800000100bc1:	ff d2                	callq  *%rdx$/;"	l
ffff800000100bc3	kernel.asm	/^ffff800000100bc3:	48 8b 45 98          	mov    -0x68(%rbp),%rax$/;"	l
ffff800000100bc7	kernel.asm	/^ffff800000100bc7:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000100bca	kernel.asm	/^ffff800000100bca:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000100bcf	kernel.asm	/^ffff800000100bcf:	48 ba ac 07 10 00 00 	movabs $0xffff8000001007ac,%rdx$/;"	l
ffff800000100bd6	kernel.asm	/^ffff800000100bd6:	80 ff ff $/;"	l
ffff800000100bd9	kernel.asm	/^ffff800000100bd9:	ff d2                	callq  *%rdx$/;"	l
ffff800000100bdb	kernel.asm	/^ffff800000100bdb:	48 bf b4 d4 10 00 00 	movabs $0xffff80000010d4b4,%rdi$/;"	l
ffff800000100be2	kernel.asm	/^ffff800000100be2:	80 ff ff $/;"	l
ffff800000100be5	kernel.asm	/^ffff800000100be5:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000100bea	kernel.asm	/^ffff800000100bea:	48 ba ac 07 10 00 00 	movabs $0xffff8000001007ac,%rdx$/;"	l
ffff800000100bf1	kernel.asm	/^ffff800000100bf1:	80 ff ff $/;"	l
ffff800000100bf4	kernel.asm	/^ffff800000100bf4:	ff d2                	callq  *%rdx$/;"	l
ffff800000100bf6	kernel.asm	/^ffff800000100bf6:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx$/;"	l
ffff800000100bfa	kernel.asm	/^ffff800000100bfa:	48 8d 45 98          	lea    -0x68(%rbp),%rax$/;"	l
ffff800000100bfe	kernel.asm	/^ffff800000100bfe:	48 89 d6             	mov    %rdx,%rsi$/;"	l
ffff800000100c01	kernel.asm	/^ffff800000100c01:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000100c04	kernel.asm	/^ffff800000100c04:	48 b8 e0 78 10 00 00 	movabs $0xffff8000001078e0,%rax$/;"	l
ffff800000100c0b	kernel.asm	/^ffff800000100c0b:	80 ff ff $/;"	l
ffff800000100c0e	kernel.asm	/^ffff800000100c0e:	ff d0                	callq  *%rax$/;"	l
ffff800000100c10	kernel.asm	/^ffff800000100c10:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)$/;"	l
ffff800000100c17	kernel.asm	/^ffff800000100c17:	eb 2c                	jmp    ffff800000100c45 <panic+0xd9>$/;"	l
ffff800000100c19	kernel.asm	/^ffff800000100c19:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff800000100c1c	kernel.asm	/^ffff800000100c1c:	48 98                	cltq   $/;"	l
ffff800000100c1e	kernel.asm	/^ffff800000100c1e:	48 8b 44 c5 a0       	mov    -0x60(%rbp,%rax,8),%rax$/;"	l
ffff800000100c23	kernel.asm	/^ffff800000100c23:	48 89 c6             	mov    %rax,%rsi$/;"	l
ffff800000100c26	kernel.asm	/^ffff800000100c26:	48 bf b6 d4 10 00 00 	movabs $0xffff80000010d4b6,%rdi$/;"	l
ffff800000100c2d	kernel.asm	/^ffff800000100c2d:	80 ff ff $/;"	l
ffff800000100c30	kernel.asm	/^ffff800000100c30:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000100c35	kernel.asm	/^ffff800000100c35:	48 ba ac 07 10 00 00 	movabs $0xffff8000001007ac,%rdx$/;"	l
ffff800000100c3c	kernel.asm	/^ffff800000100c3c:	80 ff ff $/;"	l
ffff800000100c3f	kernel.asm	/^ffff800000100c3f:	ff d2                	callq  *%rdx$/;"	l
ffff800000100c41	kernel.asm	/^ffff800000100c41:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)$/;"	l
ffff800000100c45	kernel.asm	/^ffff800000100c45:	83 7d fc 09          	cmpl   $0x9,-0x4(%rbp)$/;"	l
ffff800000100c49	kernel.asm	/^ffff800000100c49:	7e ce                	jle    ffff800000100c19 <panic+0xad>$/;"	l
ffff800000100c4b	kernel.asm	/^ffff800000100c4b:	48 b8 b8 64 11 00 00 	movabs $0xffff8000001164b8,%rax$/;"	l
ffff800000100c52	kernel.asm	/^ffff800000100c52:	80 ff ff $/;"	l
ffff800000100c55	kernel.asm	/^ffff800000100c55:	c7 00 01 00 00 00    	movl   $0x1,(%rax)$/;"	l
ffff800000100c5b	kernel.asm	/^ffff800000100c5b:	eb fe                	jmp    ffff800000100c5b <panic+0xef>$/;"	l
ffff800000100c5d	kernel.asm	/^ffff800000100c5d <cgaputc>:$/;"	l
ffff800000100c5d	kernel.asm	/^ffff800000100c5d:	55                   	push   %rbp$/;"	l
ffff800000100c5e	kernel.asm	/^ffff800000100c5e:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000100c61	kernel.asm	/^ffff800000100c61:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ffff800000100c65	kernel.asm	/^ffff800000100c65:	89 7d ec             	mov    %edi,-0x14(%rbp)$/;"	l
ffff800000100c68	kernel.asm	/^ffff800000100c68:	be 0e 00 00 00       	mov    $0xe,%esi$/;"	l
ffff800000100c6d	kernel.asm	/^ffff800000100c6d:	bf d4 03 00 00       	mov    $0x3d4,%edi$/;"	l
ffff800000100c72	kernel.asm	/^ffff800000100c72:	48 b8 10 06 10 00 00 	movabs $0xffff800000100610,%rax$/;"	l
ffff800000100c79	kernel.asm	/^ffff800000100c79:	80 ff ff $/;"	l
ffff800000100c7c	kernel.asm	/^ffff800000100c7c:	ff d0                	callq  *%rax$/;"	l
ffff800000100c7e	kernel.asm	/^ffff800000100c7e:	bf d5 03 00 00       	mov    $0x3d5,%edi$/;"	l
ffff800000100c83	kernel.asm	/^ffff800000100c83:	48 b8 f2 05 10 00 00 	movabs $0xffff8000001005f2,%rax$/;"	l
ffff800000100c8a	kernel.asm	/^ffff800000100c8a:	80 ff ff $/;"	l
ffff800000100c8d	kernel.asm	/^ffff800000100c8d:	ff d0                	callq  *%rax$/;"	l
ffff800000100c8f	kernel.asm	/^ffff800000100c8f:	0f b6 c0             	movzbl %al,%eax$/;"	l
ffff800000100c92	kernel.asm	/^ffff800000100c92:	c1 e0 08             	shl    $0x8,%eax$/;"	l
ffff800000100c95	kernel.asm	/^ffff800000100c95:	89 45 fc             	mov    %eax,-0x4(%rbp)$/;"	l
ffff800000100c98	kernel.asm	/^ffff800000100c98:	be 0f 00 00 00       	mov    $0xf,%esi$/;"	l
ffff800000100c9d	kernel.asm	/^ffff800000100c9d:	bf d4 03 00 00       	mov    $0x3d4,%edi$/;"	l
ffff800000100ca2	kernel.asm	/^ffff800000100ca2:	48 b8 10 06 10 00 00 	movabs $0xffff800000100610,%rax$/;"	l
ffff800000100ca9	kernel.asm	/^ffff800000100ca9:	80 ff ff $/;"	l
ffff800000100cac	kernel.asm	/^ffff800000100cac:	ff d0                	callq  *%rax$/;"	l
ffff800000100cae	kernel.asm	/^ffff800000100cae:	bf d5 03 00 00       	mov    $0x3d5,%edi$/;"	l
ffff800000100cb3	kernel.asm	/^ffff800000100cb3:	48 b8 f2 05 10 00 00 	movabs $0xffff8000001005f2,%rax$/;"	l
ffff800000100cba	kernel.asm	/^ffff800000100cba:	80 ff ff $/;"	l
ffff800000100cbd	kernel.asm	/^ffff800000100cbd:	ff d0                	callq  *%rax$/;"	l
ffff800000100cbf	kernel.asm	/^ffff800000100cbf:	0f b6 c0             	movzbl %al,%eax$/;"	l
ffff800000100cc2	kernel.asm	/^ffff800000100cc2:	09 45 fc             	or     %eax,-0x4(%rbp)$/;"	l
ffff800000100cc5	kernel.asm	/^ffff800000100cc5:	83 7d ec 0a          	cmpl   $0xa,-0x14(%rbp)$/;"	l
ffff800000100cc9	kernel.asm	/^ffff800000100cc9:	75 30                	jne    ffff800000100cfb <cgaputc+0x9e>$/;"	l
ffff800000100ccb	kernel.asm	/^ffff800000100ccb:	8b 4d fc             	mov    -0x4(%rbp),%ecx$/;"	l
ffff800000100cce	kernel.asm	/^ffff800000100cce:	ba 67 66 66 66       	mov    $0x66666667,%edx$/;"	l
ffff800000100cd3	kernel.asm	/^ffff800000100cd3:	89 c8                	mov    %ecx,%eax$/;"	l
ffff800000100cd5	kernel.asm	/^ffff800000100cd5:	f7 ea                	imul   %edx$/;"	l
ffff800000100cd7	kernel.asm	/^ffff800000100cd7:	c1 fa 05             	sar    $0x5,%edx$/;"	l
ffff800000100cda	kernel.asm	/^ffff800000100cda:	89 c8                	mov    %ecx,%eax$/;"	l
ffff800000100cdc	kernel.asm	/^ffff800000100cdc:	c1 f8 1f             	sar    $0x1f,%eax$/;"	l
ffff800000100cdf	kernel.asm	/^ffff800000100cdf:	29 c2                	sub    %eax,%edx$/;"	l
ffff800000100ce1	kernel.asm	/^ffff800000100ce1:	89 d0                	mov    %edx,%eax$/;"	l
ffff800000100ce3	kernel.asm	/^ffff800000100ce3:	c1 e0 02             	shl    $0x2,%eax$/;"	l
ffff800000100ce6	kernel.asm	/^ffff800000100ce6:	01 d0                	add    %edx,%eax$/;"	l
ffff800000100ce8	kernel.asm	/^ffff800000100ce8:	c1 e0 04             	shl    $0x4,%eax$/;"	l
ffff800000100ceb	kernel.asm	/^ffff800000100ceb:	29 c1                	sub    %eax,%ecx$/;"	l
ffff800000100ced	kernel.asm	/^ffff800000100ced:	89 ca                	mov    %ecx,%edx$/;"	l
ffff800000100cef	kernel.asm	/^ffff800000100cef:	b8 50 00 00 00       	mov    $0x50,%eax$/;"	l
ffff800000100cf4	kernel.asm	/^ffff800000100cf4:	29 d0                	sub    %edx,%eax$/;"	l
ffff800000100cf6	kernel.asm	/^ffff800000100cf6:	01 45 fc             	add    %eax,-0x4(%rbp)$/;"	l
ffff800000100cf9	kernel.asm	/^ffff800000100cf9:	eb 3f                	jmp    ffff800000100d3a <cgaputc+0xdd>$/;"	l
ffff800000100cfb	kernel.asm	/^ffff800000100cfb:	81 7d ec 00 01 00 00 	cmpl   $0x100,-0x14(%rbp)$/;"	l
ffff800000100d02	kernel.asm	/^ffff800000100d02:	75 0c                	jne    ffff800000100d10 <cgaputc+0xb3>$/;"	l
ffff800000100d04	kernel.asm	/^ffff800000100d04:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)$/;"	l
ffff800000100d08	kernel.asm	/^ffff800000100d08:	7e 30                	jle    ffff800000100d3a <cgaputc+0xdd>$/;"	l
ffff800000100d0a	kernel.asm	/^ffff800000100d0a:	83 6d fc 01          	subl   $0x1,-0x4(%rbp)$/;"	l
ffff800000100d0e	kernel.asm	/^ffff800000100d0e:	eb 2a                	jmp    ffff800000100d3a <cgaputc+0xdd>$/;"	l
ffff800000100d10	kernel.asm	/^ffff800000100d10:	48 b8 18 e0 10 00 00 	movabs $0xffff80000010e018,%rax$/;"	l
ffff800000100d17	kernel.asm	/^ffff800000100d17:	80 ff ff $/;"	l
ffff800000100d1a	kernel.asm	/^ffff800000100d1a:	48 8b 08             	mov    (%rax),%rcx$/;"	l
ffff800000100d1d	kernel.asm	/^ffff800000100d1d:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff800000100d20	kernel.asm	/^ffff800000100d20:	8d 50 01             	lea    0x1(%rax),%edx$/;"	l
ffff800000100d23	kernel.asm	/^ffff800000100d23:	89 55 fc             	mov    %edx,-0x4(%rbp)$/;"	l
ffff800000100d26	kernel.asm	/^ffff800000100d26:	48 98                	cltq   $/;"	l
ffff800000100d28	kernel.asm	/^ffff800000100d28:	48 01 c0             	add    %rax,%rax$/;"	l
ffff800000100d2b	kernel.asm	/^ffff800000100d2b:	48 01 c8             	add    %rcx,%rax$/;"	l
ffff800000100d2e	kernel.asm	/^ffff800000100d2e:	8b 55 ec             	mov    -0x14(%rbp),%edx$/;"	l
ffff800000100d31	kernel.asm	/^ffff800000100d31:	0f b6 d2             	movzbl %dl,%edx$/;"	l
ffff800000100d34	kernel.asm	/^ffff800000100d34:	80 ce 07             	or     $0x7,%dh$/;"	l
ffff800000100d37	kernel.asm	/^ffff800000100d37:	66 89 10             	mov    %dx,(%rax)$/;"	l
ffff800000100d3a	kernel.asm	/^ffff800000100d3a:	81 7d fc 7f 07 00 00 	cmpl   $0x77f,-0x4(%rbp)$/;"	l
ffff800000100d41	kernel.asm	/^ffff800000100d41:	7e 76                	jle    ffff800000100db9 <cgaputc+0x15c>$/;"	l
ffff800000100d43	kernel.asm	/^ffff800000100d43:	48 b8 18 e0 10 00 00 	movabs $0xffff80000010e018,%rax$/;"	l
ffff800000100d4a	kernel.asm	/^ffff800000100d4a:	80 ff ff $/;"	l
ffff800000100d4d	kernel.asm	/^ffff800000100d4d:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff800000100d50	kernel.asm	/^ffff800000100d50:	48 8d 88 a0 00 00 00 	lea    0xa0(%rax),%rcx$/;"	l
ffff800000100d57	kernel.asm	/^ffff800000100d57:	48 b8 18 e0 10 00 00 	movabs $0xffff80000010e018,%rax$/;"	l
ffff800000100d5e	kernel.asm	/^ffff800000100d5e:	80 ff ff $/;"	l
ffff800000100d61	kernel.asm	/^ffff800000100d61:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff800000100d64	kernel.asm	/^ffff800000100d64:	ba 60 0e 00 00       	mov    $0xe60,%edx$/;"	l
ffff800000100d69	kernel.asm	/^ffff800000100d69:	48 89 ce             	mov    %rcx,%rsi$/;"	l
ffff800000100d6c	kernel.asm	/^ffff800000100d6c:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000100d6f	kernel.asm	/^ffff800000100d6f:	48 b8 6f 7c 10 00 00 	movabs $0xffff800000107c6f,%rax$/;"	l
ffff800000100d76	kernel.asm	/^ffff800000100d76:	80 ff ff $/;"	l
ffff800000100d79	kernel.asm	/^ffff800000100d79:	ff d0                	callq  *%rax$/;"	l
ffff800000100d7b	kernel.asm	/^ffff800000100d7b:	83 6d fc 50          	subl   $0x50,-0x4(%rbp)$/;"	l
ffff800000100d7f	kernel.asm	/^ffff800000100d7f:	b8 80 07 00 00       	mov    $0x780,%eax$/;"	l
ffff800000100d84	kernel.asm	/^ffff800000100d84:	2b 45 fc             	sub    -0x4(%rbp),%eax$/;"	l
ffff800000100d87	kernel.asm	/^ffff800000100d87:	48 98                	cltq   $/;"	l
ffff800000100d89	kernel.asm	/^ffff800000100d89:	8d 14 00             	lea    (%rax,%rax,1),%edx$/;"	l
ffff800000100d8c	kernel.asm	/^ffff800000100d8c:	48 b8 18 e0 10 00 00 	movabs $0xffff80000010e018,%rax$/;"	l
ffff800000100d93	kernel.asm	/^ffff800000100d93:	80 ff ff $/;"	l
ffff800000100d96	kernel.asm	/^ffff800000100d96:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff800000100d99	kernel.asm	/^ffff800000100d99:	8b 4d fc             	mov    -0x4(%rbp),%ecx$/;"	l
ffff800000100d9c	kernel.asm	/^ffff800000100d9c:	48 63 c9             	movslq %ecx,%rcx$/;"	l
ffff800000100d9f	kernel.asm	/^ffff800000100d9f:	48 01 c9             	add    %rcx,%rcx$/;"	l
ffff800000100da2	kernel.asm	/^ffff800000100da2:	48 01 c8             	add    %rcx,%rax$/;"	l
ffff800000100da5	kernel.asm	/^ffff800000100da5:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffff800000100daa	kernel.asm	/^ffff800000100daa:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000100dad	kernel.asm	/^ffff800000100dad:	48 b8 72 7b 10 00 00 	movabs $0xffff800000107b72,%rax$/;"	l
ffff800000100db4	kernel.asm	/^ffff800000100db4:	80 ff ff $/;"	l
ffff800000100db7	kernel.asm	/^ffff800000100db7:	ff d0                	callq  *%rax$/;"	l
ffff800000100db9	kernel.asm	/^ffff800000100db9:	be 0e 00 00 00       	mov    $0xe,%esi$/;"	l
ffff800000100dbe	kernel.asm	/^ffff800000100dbe:	bf d4 03 00 00       	mov    $0x3d4,%edi$/;"	l
ffff800000100dc3	kernel.asm	/^ffff800000100dc3:	48 b8 10 06 10 00 00 	movabs $0xffff800000100610,%rax$/;"	l
ffff800000100dca	kernel.asm	/^ffff800000100dca:	80 ff ff $/;"	l
ffff800000100dcd	kernel.asm	/^ffff800000100dcd:	ff d0                	callq  *%rax$/;"	l
ffff800000100dcf	kernel.asm	/^ffff800000100dcf:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff800000100dd2	kernel.asm	/^ffff800000100dd2:	c1 f8 08             	sar    $0x8,%eax$/;"	l
ffff800000100dd5	kernel.asm	/^ffff800000100dd5:	0f b6 c0             	movzbl %al,%eax$/;"	l
ffff800000100dd8	kernel.asm	/^ffff800000100dd8:	89 c6                	mov    %eax,%esi$/;"	l
ffff800000100dda	kernel.asm	/^ffff800000100dda:	bf d5 03 00 00       	mov    $0x3d5,%edi$/;"	l
ffff800000100ddf	kernel.asm	/^ffff800000100ddf:	48 b8 10 06 10 00 00 	movabs $0xffff800000100610,%rax$/;"	l
ffff800000100de6	kernel.asm	/^ffff800000100de6:	80 ff ff $/;"	l
ffff800000100de9	kernel.asm	/^ffff800000100de9:	ff d0                	callq  *%rax$/;"	l
ffff800000100deb	kernel.asm	/^ffff800000100deb:	be 0f 00 00 00       	mov    $0xf,%esi$/;"	l
ffff800000100df0	kernel.asm	/^ffff800000100df0:	bf d4 03 00 00       	mov    $0x3d4,%edi$/;"	l
ffff800000100df5	kernel.asm	/^ffff800000100df5:	48 b8 10 06 10 00 00 	movabs $0xffff800000100610,%rax$/;"	l
ffff800000100dfc	kernel.asm	/^ffff800000100dfc:	80 ff ff $/;"	l
ffff800000100dff	kernel.asm	/^ffff800000100dff:	ff d0                	callq  *%rax$/;"	l
ffff800000100e01	kernel.asm	/^ffff800000100e01:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff800000100e04	kernel.asm	/^ffff800000100e04:	0f b6 c0             	movzbl %al,%eax$/;"	l
ffff800000100e07	kernel.asm	/^ffff800000100e07:	89 c6                	mov    %eax,%esi$/;"	l
ffff800000100e09	kernel.asm	/^ffff800000100e09:	bf d5 03 00 00       	mov    $0x3d5,%edi$/;"	l
ffff800000100e0e	kernel.asm	/^ffff800000100e0e:	48 b8 10 06 10 00 00 	movabs $0xffff800000100610,%rax$/;"	l
ffff800000100e15	kernel.asm	/^ffff800000100e15:	80 ff ff $/;"	l
ffff800000100e18	kernel.asm	/^ffff800000100e18:	ff d0                	callq  *%rax$/;"	l
ffff800000100e1a	kernel.asm	/^ffff800000100e1a:	48 b8 18 e0 10 00 00 	movabs $0xffff80000010e018,%rax$/;"	l
ffff800000100e21	kernel.asm	/^ffff800000100e21:	80 ff ff $/;"	l
ffff800000100e24	kernel.asm	/^ffff800000100e24:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff800000100e27	kernel.asm	/^ffff800000100e27:	8b 55 fc             	mov    -0x4(%rbp),%edx$/;"	l
ffff800000100e2a	kernel.asm	/^ffff800000100e2a:	48 63 d2             	movslq %edx,%rdx$/;"	l
ffff800000100e2d	kernel.asm	/^ffff800000100e2d:	48 01 d2             	add    %rdx,%rdx$/;"	l
ffff800000100e30	kernel.asm	/^ffff800000100e30:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff800000100e33	kernel.asm	/^ffff800000100e33:	66 c7 00 20 07       	movw   $0x720,(%rax)$/;"	l
ffff800000100e38	kernel.asm	/^ffff800000100e38:	90                   	nop$/;"	l
ffff800000100e39	kernel.asm	/^ffff800000100e39:	c9                   	leaveq $/;"	l
ffff800000100e3a	kernel.asm	/^ffff800000100e3a:	c3                   	retq   $/;"	l
ffff800000100e3b	kernel.asm	/^ffff800000100e3b <consputc>:$/;"	l
ffff800000100e3b	kernel.asm	/^ffff800000100e3b:	55                   	push   %rbp$/;"	l
ffff800000100e3c	kernel.asm	/^ffff800000100e3c:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000100e3f	kernel.asm	/^ffff800000100e3f:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff800000100e43	kernel.asm	/^ffff800000100e43:	89 7d fc             	mov    %edi,-0x4(%rbp)$/;"	l
ffff800000100e46	kernel.asm	/^ffff800000100e46:	48 b8 b8 64 11 00 00 	movabs $0xffff8000001164b8,%rax$/;"	l
ffff800000100e4d	kernel.asm	/^ffff800000100e4d:	80 ff ff $/;"	l
ffff800000100e50	kernel.asm	/^ffff800000100e50:	8b 00                	mov    (%rax),%eax$/;"	l
ffff800000100e52	kernel.asm	/^ffff800000100e52:	85 c0                	test   %eax,%eax$/;"	l
ffff800000100e54	kernel.asm	/^ffff800000100e54:	74 0e                	je     ffff800000100e64 <consputc+0x29>$/;"	l
ffff800000100e56	kernel.asm	/^ffff800000100e56:	48 b8 7e 06 10 00 00 	movabs $0xffff80000010067e,%rax$/;"	l
ffff800000100e5d	kernel.asm	/^ffff800000100e5d:	80 ff ff $/;"	l
ffff800000100e60	kernel.asm	/^ffff800000100e60:	ff d0                	callq  *%rax$/;"	l
ffff800000100e62	kernel.asm	/^ffff800000100e62:	eb fe                	jmp    ffff800000100e62 <consputc+0x27>$/;"	l
ffff800000100e64	kernel.asm	/^ffff800000100e64:	81 7d fc 00 01 00 00 	cmpl   $0x100,-0x4(%rbp)$/;"	l
ffff800000100e6b	kernel.asm	/^ffff800000100e6b:	75 35                	jne    ffff800000100ea2 <consputc+0x67>$/;"	l
ffff800000100e6d	kernel.asm	/^ffff800000100e6d:	bf 08 00 00 00       	mov    $0x8,%edi$/;"	l
ffff800000100e72	kernel.asm	/^ffff800000100e72:	48 b8 4b a5 10 00 00 	movabs $0xffff80000010a54b,%rax$/;"	l
ffff800000100e79	kernel.asm	/^ffff800000100e79:	80 ff ff $/;"	l
ffff800000100e7c	kernel.asm	/^ffff800000100e7c:	ff d0                	callq  *%rax$/;"	l
ffff800000100e7e	kernel.asm	/^ffff800000100e7e:	bf 20 00 00 00       	mov    $0x20,%edi$/;"	l
ffff800000100e83	kernel.asm	/^ffff800000100e83:	48 b8 4b a5 10 00 00 	movabs $0xffff80000010a54b,%rax$/;"	l
ffff800000100e8a	kernel.asm	/^ffff800000100e8a:	80 ff ff $/;"	l
ffff800000100e8d	kernel.asm	/^ffff800000100e8d:	ff d0                	callq  *%rax$/;"	l
ffff800000100e8f	kernel.asm	/^ffff800000100e8f:	bf 08 00 00 00       	mov    $0x8,%edi$/;"	l
ffff800000100e94	kernel.asm	/^ffff800000100e94:	48 b8 4b a5 10 00 00 	movabs $0xffff80000010a54b,%rax$/;"	l
ffff800000100e9b	kernel.asm	/^ffff800000100e9b:	80 ff ff $/;"	l
ffff800000100e9e	kernel.asm	/^ffff800000100e9e:	ff d0                	callq  *%rax$/;"	l
ffff800000100ea0	kernel.asm	/^ffff800000100ea0:	eb 11                	jmp    ffff800000100eb3 <consputc+0x78>$/;"	l
ffff800000100ea2	kernel.asm	/^ffff800000100ea2:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff800000100ea5	kernel.asm	/^ffff800000100ea5:	89 c7                	mov    %eax,%edi$/;"	l
ffff800000100ea7	kernel.asm	/^ffff800000100ea7:	48 b8 4b a5 10 00 00 	movabs $0xffff80000010a54b,%rax$/;"	l
ffff800000100eae	kernel.asm	/^ffff800000100eae:	80 ff ff $/;"	l
ffff800000100eb1	kernel.asm	/^ffff800000100eb1:	ff d0                	callq  *%rax$/;"	l
ffff800000100eb3	kernel.asm	/^ffff800000100eb3:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff800000100eb6	kernel.asm	/^ffff800000100eb6:	89 c7                	mov    %eax,%edi$/;"	l
ffff800000100eb8	kernel.asm	/^ffff800000100eb8:	48 b8 5d 0c 10 00 00 	movabs $0xffff800000100c5d,%rax$/;"	l
ffff800000100ebf	kernel.asm	/^ffff800000100ebf:	80 ff ff $/;"	l
ffff800000100ec2	kernel.asm	/^ffff800000100ec2:	ff d0                	callq  *%rax$/;"	l
ffff800000100ec4	kernel.asm	/^ffff800000100ec4:	90                   	nop$/;"	l
ffff800000100ec5	kernel.asm	/^ffff800000100ec5:	c9                   	leaveq $/;"	l
ffff800000100ec6	kernel.asm	/^ffff800000100ec6:	c3                   	retq   $/;"	l
ffff800000100ec7	kernel.asm	/^ffff800000100ec7 <consoleintr>:$/;"	l
ffff800000100ec7	kernel.asm	/^ffff800000100ec7:	55                   	push   %rbp$/;"	l
ffff800000100ec8	kernel.asm	/^ffff800000100ec8:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000100ecb	kernel.asm	/^ffff800000100ecb:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ffff800000100ecf	kernel.asm	/^ffff800000100ecf:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
ffff800000100ed3	kernel.asm	/^ffff800000100ed3:	48 bf c0 63 11 00 00 	movabs $0xffff8000001163c0,%rdi$/;"	l
ffff800000100eda	kernel.asm	/^ffff800000100eda:	80 ff ff $/;"	l
ffff800000100edd	kernel.asm	/^ffff800000100edd:	48 b8 d6 77 10 00 00 	movabs $0xffff8000001077d6,%rax$/;"	l
ffff800000100ee4	kernel.asm	/^ffff800000100ee4:	80 ff ff $/;"	l
ffff800000100ee7	kernel.asm	/^ffff800000100ee7:	ff d0                	callq  *%rax$/;"	l
ffff800000100ee9	kernel.asm	/^ffff800000100ee9:	e9 58 02 00 00       	jmpq   ffff800000101146 <consoleintr+0x27f>$/;"	l
ffff800000100eee	kernel.asm	/^ffff800000100eee:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff800000100ef1	kernel.asm	/^ffff800000100ef1:	83 f8 15             	cmp    $0x15,%eax$/;"	l
ffff800000100ef4	kernel.asm	/^ffff800000100ef4:	0f 84 8b 00 00 00    	je     ffff800000100f85 <consoleintr+0xbe>$/;"	l
ffff800000100efa	kernel.asm	/^ffff800000100efa:	83 f8 15             	cmp    $0x15,%eax$/;"	l
ffff800000100efd	kernel.asm	/^ffff800000100efd:	7f 13                	jg     ffff800000100f12 <consoleintr+0x4b>$/;"	l
ffff800000100eff	kernel.asm	/^ffff800000100eff:	83 f8 08             	cmp    $0x8,%eax$/;"	l
ffff800000100f02	kernel.asm	/^ffff800000100f02:	0f 84 db 00 00 00    	je     ffff800000100fe3 <consoleintr+0x11c>$/;"	l
ffff800000100f08	kernel.asm	/^ffff800000100f08:	83 f8 10             	cmp    $0x10,%eax$/;"	l
ffff800000100f0b	kernel.asm	/^ffff800000100f0b:	74 33                	je     ffff800000100f40 <consoleintr+0x79>$/;"	l
ffff800000100f0d	kernel.asm	/^ffff800000100f0d:	e9 32 01 00 00       	jmpq   ffff800000101044 <consoleintr+0x17d>$/;"	l
ffff800000100f12	kernel.asm	/^ffff800000100f12:	83 f8 1a             	cmp    $0x1a,%eax$/;"	l
ffff800000100f15	kernel.asm	/^ffff800000100f15:	74 0e                	je     ffff800000100f25 <consoleintr+0x5e>$/;"	l
ffff800000100f17	kernel.asm	/^ffff800000100f17:	83 f8 7f             	cmp    $0x7f,%eax$/;"	l
ffff800000100f1a	kernel.asm	/^ffff800000100f1a:	0f 84 c3 00 00 00    	je     ffff800000100fe3 <consoleintr+0x11c>$/;"	l
ffff800000100f20	kernel.asm	/^ffff800000100f20:	e9 1f 01 00 00       	jmpq   ffff800000101044 <consoleintr+0x17d>$/;"	l
ffff800000100f25	kernel.asm	/^ffff800000100f25:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffff800000100f2a	kernel.asm	/^ffff800000100f2a:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
ffff800000100f2f	kernel.asm	/^ffff800000100f2f:	48 b8 2f 06 10 00 00 	movabs $0xffff80000010062f,%rax$/;"	l
ffff800000100f36	kernel.asm	/^ffff800000100f36:	80 ff ff $/;"	l
ffff800000100f39	kernel.asm	/^ffff800000100f39:	ff d0                	callq  *%rax$/;"	l
ffff800000100f3b	kernel.asm	/^ffff800000100f3b:	e9 06 02 00 00       	jmpq   ffff800000101146 <consoleintr+0x27f>$/;"	l
ffff800000100f40	kernel.asm	/^ffff800000100f40:	48 b8 33 74 10 00 00 	movabs $0xffff800000107433,%rax$/;"	l
ffff800000100f47	kernel.asm	/^ffff800000100f47:	80 ff ff $/;"	l
ffff800000100f4a	kernel.asm	/^ffff800000100f4a:	ff d0                	callq  *%rax$/;"	l
ffff800000100f4c	kernel.asm	/^ffff800000100f4c:	e9 f5 01 00 00       	jmpq   ffff800000101146 <consoleintr+0x27f>$/;"	l
ffff800000100f51	kernel.asm	/^ffff800000100f51:	48 b8 c0 63 11 00 00 	movabs $0xffff8000001163c0,%rax$/;"	l
ffff800000100f58	kernel.asm	/^ffff800000100f58:	80 ff ff $/;"	l
ffff800000100f5b	kernel.asm	/^ffff800000100f5b:	8b 80 f0 00 00 00    	mov    0xf0(%rax),%eax$/;"	l
ffff800000100f61	kernel.asm	/^ffff800000100f61:	8d 50 ff             	lea    -0x1(%rax),%edx$/;"	l
ffff800000100f64	kernel.asm	/^ffff800000100f64:	48 b8 c0 63 11 00 00 	movabs $0xffff8000001163c0,%rax$/;"	l
ffff800000100f6b	kernel.asm	/^ffff800000100f6b:	80 ff ff $/;"	l
ffff800000100f6e	kernel.asm	/^ffff800000100f6e:	89 90 f0 00 00 00    	mov    %edx,0xf0(%rax)$/;"	l
ffff800000100f74	kernel.asm	/^ffff800000100f74:	bf 00 01 00 00       	mov    $0x100,%edi$/;"	l
ffff800000100f79	kernel.asm	/^ffff800000100f79:	48 b8 3b 0e 10 00 00 	movabs $0xffff800000100e3b,%rax$/;"	l
ffff800000100f80	kernel.asm	/^ffff800000100f80:	80 ff ff $/;"	l
ffff800000100f83	kernel.asm	/^ffff800000100f83:	ff d0                	callq  *%rax$/;"	l
ffff800000100f85	kernel.asm	/^ffff800000100f85:	48 b8 c0 63 11 00 00 	movabs $0xffff8000001163c0,%rax$/;"	l
ffff800000100f8c	kernel.asm	/^ffff800000100f8c:	80 ff ff $/;"	l
ffff800000100f8f	kernel.asm	/^ffff800000100f8f:	8b 90 f0 00 00 00    	mov    0xf0(%rax),%edx$/;"	l
ffff800000100f95	kernel.asm	/^ffff800000100f95:	48 b8 c0 63 11 00 00 	movabs $0xffff8000001163c0,%rax$/;"	l
ffff800000100f9c	kernel.asm	/^ffff800000100f9c:	80 ff ff $/;"	l
ffff800000100f9f	kernel.asm	/^ffff800000100f9f:	8b 80 ec 00 00 00    	mov    0xec(%rax),%eax$/;"	l
ffff800000100fa5	kernel.asm	/^ffff800000100fa5:	39 c2                	cmp    %eax,%edx$/;"	l
ffff800000100fa7	kernel.asm	/^ffff800000100fa7:	0f 84 99 01 00 00    	je     ffff800000101146 <consoleintr+0x27f>$/;"	l
ffff800000100fad	kernel.asm	/^ffff800000100fad:	48 b8 c0 63 11 00 00 	movabs $0xffff8000001163c0,%rax$/;"	l
ffff800000100fb4	kernel.asm	/^ffff800000100fb4:	80 ff ff $/;"	l
ffff800000100fb7	kernel.asm	/^ffff800000100fb7:	8b 80 f0 00 00 00    	mov    0xf0(%rax),%eax$/;"	l
ffff800000100fbd	kernel.asm	/^ffff800000100fbd:	83 e8 01             	sub    $0x1,%eax$/;"	l
ffff800000100fc0	kernel.asm	/^ffff800000100fc0:	83 e0 7f             	and    $0x7f,%eax$/;"	l
ffff800000100fc3	kernel.asm	/^ffff800000100fc3:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000100fc5	kernel.asm	/^ffff800000100fc5:	48 b8 c0 63 11 00 00 	movabs $0xffff8000001163c0,%rax$/;"	l
ffff800000100fcc	kernel.asm	/^ffff800000100fcc:	80 ff ff $/;"	l
ffff800000100fcf	kernel.asm	/^ffff800000100fcf:	89 d2                	mov    %edx,%edx$/;"	l
ffff800000100fd1	kernel.asm	/^ffff800000100fd1:	0f b6 44 10 68       	movzbl 0x68(%rax,%rdx,1),%eax$/;"	l
ffff800000100fd6	kernel.asm	/^ffff800000100fd6:	3c 0a                	cmp    $0xa,%al$/;"	l
ffff800000100fd8	kernel.asm	/^ffff800000100fd8:	0f 85 73 ff ff ff    	jne    ffff800000100f51 <consoleintr+0x8a>$/;"	l
ffff800000100fde	kernel.asm	/^ffff800000100fde:	e9 63 01 00 00       	jmpq   ffff800000101146 <consoleintr+0x27f>$/;"	l
ffff800000100fe3	kernel.asm	/^ffff800000100fe3:	48 b8 c0 63 11 00 00 	movabs $0xffff8000001163c0,%rax$/;"	l
ffff800000100fea	kernel.asm	/^ffff800000100fea:	80 ff ff $/;"	l
ffff800000100fed	kernel.asm	/^ffff800000100fed:	8b 90 f0 00 00 00    	mov    0xf0(%rax),%edx$/;"	l
ffff800000100ff3	kernel.asm	/^ffff800000100ff3:	48 b8 c0 63 11 00 00 	movabs $0xffff8000001163c0,%rax$/;"	l
ffff800000100ffa	kernel.asm	/^ffff800000100ffa:	80 ff ff $/;"	l
ffff800000100ffd	kernel.asm	/^ffff800000100ffd:	8b 80 ec 00 00 00    	mov    0xec(%rax),%eax$/;"	l
ffff800000101003	kernel.asm	/^ffff800000101003:	39 c2                	cmp    %eax,%edx$/;"	l
ffff800000101005	kernel.asm	/^ffff800000101005:	0f 84 3b 01 00 00    	je     ffff800000101146 <consoleintr+0x27f>$/;"	l
ffff80000010100b	kernel.asm	/^ffff80000010100b:	48 b8 c0 63 11 00 00 	movabs $0xffff8000001163c0,%rax$/;"	l
ffff800000101012	kernel.asm	/^ffff800000101012:	80 ff ff $/;"	l
ffff800000101015	kernel.asm	/^ffff800000101015:	8b 80 f0 00 00 00    	mov    0xf0(%rax),%eax$/;"	l
ffff80000010101b	kernel.asm	/^ffff80000010101b:	8d 50 ff             	lea    -0x1(%rax),%edx$/;"	l
ffff80000010101e	kernel.asm	/^ffff80000010101e:	48 b8 c0 63 11 00 00 	movabs $0xffff8000001163c0,%rax$/;"	l
ffff800000101025	kernel.asm	/^ffff800000101025:	80 ff ff $/;"	l
ffff800000101028	kernel.asm	/^ffff800000101028:	89 90 f0 00 00 00    	mov    %edx,0xf0(%rax)$/;"	l
ffff80000010102e	kernel.asm	/^ffff80000010102e:	bf 00 01 00 00       	mov    $0x100,%edi$/;"	l
ffff800000101033	kernel.asm	/^ffff800000101033:	48 b8 3b 0e 10 00 00 	movabs $0xffff800000100e3b,%rax$/;"	l
ffff80000010103a	kernel.asm	/^ffff80000010103a:	80 ff ff $/;"	l
ffff80000010103d	kernel.asm	/^ffff80000010103d:	ff d0                	callq  *%rax$/;"	l
ffff80000010103f	kernel.asm	/^ffff80000010103f:	e9 02 01 00 00       	jmpq   ffff800000101146 <consoleintr+0x27f>$/;"	l
ffff800000101044	kernel.asm	/^ffff800000101044:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)$/;"	l
ffff800000101048	kernel.asm	/^ffff800000101048:	0f 84 f7 00 00 00    	je     ffff800000101145 <consoleintr+0x27e>$/;"	l
ffff80000010104e	kernel.asm	/^ffff80000010104e:	48 b8 c0 63 11 00 00 	movabs $0xffff8000001163c0,%rax$/;"	l
ffff800000101055	kernel.asm	/^ffff800000101055:	80 ff ff $/;"	l
ffff800000101058	kernel.asm	/^ffff800000101058:	8b 90 f0 00 00 00    	mov    0xf0(%rax),%edx$/;"	l
ffff80000010105e	kernel.asm	/^ffff80000010105e:	48 b8 c0 63 11 00 00 	movabs $0xffff8000001163c0,%rax$/;"	l
ffff800000101065	kernel.asm	/^ffff800000101065:	80 ff ff $/;"	l
ffff800000101068	kernel.asm	/^ffff800000101068:	8b 80 e8 00 00 00    	mov    0xe8(%rax),%eax$/;"	l
ffff80000010106e	kernel.asm	/^ffff80000010106e:	29 c2                	sub    %eax,%edx$/;"	l
ffff800000101070	kernel.asm	/^ffff800000101070:	89 d0                	mov    %edx,%eax$/;"	l
ffff800000101072	kernel.asm	/^ffff800000101072:	83 f8 7f             	cmp    $0x7f,%eax$/;"	l
ffff800000101075	kernel.asm	/^ffff800000101075:	0f 87 ca 00 00 00    	ja     ffff800000101145 <consoleintr+0x27e>$/;"	l
ffff80000010107b	kernel.asm	/^ffff80000010107b:	83 7d fc 0d          	cmpl   $0xd,-0x4(%rbp)$/;"	l
ffff80000010107f	kernel.asm	/^ffff80000010107f:	74 05                	je     ffff800000101086 <consoleintr+0x1bf>$/;"	l
ffff800000101081	kernel.asm	/^ffff800000101081:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff800000101084	kernel.asm	/^ffff800000101084:	eb 05                	jmp    ffff80000010108b <consoleintr+0x1c4>$/;"	l
ffff800000101086	kernel.asm	/^ffff800000101086:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
ffff80000010108b	kernel.asm	/^ffff80000010108b:	89 45 fc             	mov    %eax,-0x4(%rbp)$/;"	l
ffff80000010108e	kernel.asm	/^ffff80000010108e:	48 b8 c0 63 11 00 00 	movabs $0xffff8000001163c0,%rax$/;"	l
ffff800000101095	kernel.asm	/^ffff800000101095:	80 ff ff $/;"	l
ffff800000101098	kernel.asm	/^ffff800000101098:	8b 80 f0 00 00 00    	mov    0xf0(%rax),%eax$/;"	l
ffff80000010109e	kernel.asm	/^ffff80000010109e:	8d 48 01             	lea    0x1(%rax),%ecx$/;"	l
ffff8000001010a1	kernel.asm	/^ffff8000001010a1:	48 ba c0 63 11 00 00 	movabs $0xffff8000001163c0,%rdx$/;"	l
ffff8000001010a8	kernel.asm	/^ffff8000001010a8:	80 ff ff $/;"	l
ffff8000001010ab	kernel.asm	/^ffff8000001010ab:	89 8a f0 00 00 00    	mov    %ecx,0xf0(%rdx)$/;"	l
ffff8000001010b1	kernel.asm	/^ffff8000001010b1:	83 e0 7f             	and    $0x7f,%eax$/;"	l
ffff8000001010b4	kernel.asm	/^ffff8000001010b4:	89 c2                	mov    %eax,%edx$/;"	l
ffff8000001010b6	kernel.asm	/^ffff8000001010b6:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff8000001010b9	kernel.asm	/^ffff8000001010b9:	89 c1                	mov    %eax,%ecx$/;"	l
ffff8000001010bb	kernel.asm	/^ffff8000001010bb:	48 b8 c0 63 11 00 00 	movabs $0xffff8000001163c0,%rax$/;"	l
ffff8000001010c2	kernel.asm	/^ffff8000001010c2:	80 ff ff $/;"	l
ffff8000001010c5	kernel.asm	/^ffff8000001010c5:	89 d2                	mov    %edx,%edx$/;"	l
ffff8000001010c7	kernel.asm	/^ffff8000001010c7:	88 4c 10 68          	mov    %cl,0x68(%rax,%rdx,1)$/;"	l
ffff8000001010cb	kernel.asm	/^ffff8000001010cb:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff8000001010ce	kernel.asm	/^ffff8000001010ce:	89 c7                	mov    %eax,%edi$/;"	l
ffff8000001010d0	kernel.asm	/^ffff8000001010d0:	48 b8 3b 0e 10 00 00 	movabs $0xffff800000100e3b,%rax$/;"	l
ffff8000001010d7	kernel.asm	/^ffff8000001010d7:	80 ff ff $/;"	l
ffff8000001010da	kernel.asm	/^ffff8000001010da:	ff d0                	callq  *%rax$/;"	l
ffff8000001010dc	kernel.asm	/^ffff8000001010dc:	83 7d fc 0a          	cmpl   $0xa,-0x4(%rbp)$/;"	l
ffff8000001010e0	kernel.asm	/^ffff8000001010e0:	74 2d                	je     ffff80000010110f <consoleintr+0x248>$/;"	l
ffff8000001010e2	kernel.asm	/^ffff8000001010e2:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)$/;"	l
ffff8000001010e6	kernel.asm	/^ffff8000001010e6:	74 27                	je     ffff80000010110f <consoleintr+0x248>$/;"	l
ffff8000001010e8	kernel.asm	/^ffff8000001010e8:	48 b8 c0 63 11 00 00 	movabs $0xffff8000001163c0,%rax$/;"	l
ffff8000001010ef	kernel.asm	/^ffff8000001010ef:	80 ff ff $/;"	l
ffff8000001010f2	kernel.asm	/^ffff8000001010f2:	8b 90 f0 00 00 00    	mov    0xf0(%rax),%edx$/;"	l
ffff8000001010f8	kernel.asm	/^ffff8000001010f8:	48 b8 c0 63 11 00 00 	movabs $0xffff8000001163c0,%rax$/;"	l
ffff8000001010ff	kernel.asm	/^ffff8000001010ff:	80 ff ff $/;"	l
ffff800000101102	kernel.asm	/^ffff800000101102:	8b 80 e8 00 00 00    	mov    0xe8(%rax),%eax$/;"	l
ffff800000101108	kernel.asm	/^ffff800000101108:	83 e8 80             	sub    $0xffffff80,%eax$/;"	l
ffff80000010110b	kernel.asm	/^ffff80000010110b:	39 c2                	cmp    %eax,%edx$/;"	l
ffff80000010110d	kernel.asm	/^ffff80000010110d:	75 36                	jne    ffff800000101145 <consoleintr+0x27e>$/;"	l
ffff80000010110f	kernel.asm	/^ffff80000010110f:	48 b8 c0 63 11 00 00 	movabs $0xffff8000001163c0,%rax$/;"	l
ffff800000101116	kernel.asm	/^ffff800000101116:	80 ff ff $/;"	l
ffff800000101119	kernel.asm	/^ffff800000101119:	8b 90 f0 00 00 00    	mov    0xf0(%rax),%edx$/;"	l
ffff80000010111f	kernel.asm	/^ffff80000010111f:	48 b8 c0 63 11 00 00 	movabs $0xffff8000001163c0,%rax$/;"	l
ffff800000101126	kernel.asm	/^ffff800000101126:	80 ff ff $/;"	l
ffff800000101129	kernel.asm	/^ffff800000101129:	89 90 ec 00 00 00    	mov    %edx,0xec(%rax)$/;"	l
ffff80000010112f	kernel.asm	/^ffff80000010112f:	48 bf a8 64 11 00 00 	movabs $0xffff8000001164a8,%rdi$/;"	l
ffff800000101136	kernel.asm	/^ffff800000101136:	80 ff ff $/;"	l
ffff800000101139	kernel.asm	/^ffff800000101139:	48 b8 34 73 10 00 00 	movabs $0xffff800000107334,%rax$/;"	l
ffff800000101140	kernel.asm	/^ffff800000101140:	80 ff ff $/;"	l
ffff800000101143	kernel.asm	/^ffff800000101143:	ff d0                	callq  *%rax$/;"	l
ffff800000101145	kernel.asm	/^ffff800000101145:	90                   	nop$/;"	l
ffff800000101146	kernel.asm	/^ffff800000101146:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010114a	kernel.asm	/^ffff80000010114a:	ff d0                	callq  *%rax$/;"	l
ffff80000010114c	kernel.asm	/^ffff80000010114c:	89 45 fc             	mov    %eax,-0x4(%rbp)$/;"	l
ffff80000010114f	kernel.asm	/^ffff80000010114f:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)$/;"	l
ffff800000101153	kernel.asm	/^ffff800000101153:	0f 89 95 fd ff ff    	jns    ffff800000100eee <consoleintr+0x27>$/;"	l
ffff800000101159	kernel.asm	/^ffff800000101159:	48 bf c0 63 11 00 00 	movabs $0xffff8000001163c0,%rdi$/;"	l
ffff800000101160	kernel.asm	/^ffff800000101160:	80 ff ff $/;"	l
ffff800000101163	kernel.asm	/^ffff800000101163:	48 b8 6f 78 10 00 00 	movabs $0xffff80000010786f,%rax$/;"	l
ffff80000010116a	kernel.asm	/^ffff80000010116a:	80 ff ff $/;"	l
ffff80000010116d	kernel.asm	/^ffff80000010116d:	ff d0                	callq  *%rax$/;"	l
ffff80000010116f	kernel.asm	/^ffff80000010116f:	90                   	nop$/;"	l
ffff800000101170	kernel.asm	/^ffff800000101170:	c9                   	leaveq $/;"	l
ffff800000101171	kernel.asm	/^ffff800000101171:	c3                   	retq   $/;"	l
ffff800000101172	kernel.asm	/^ffff800000101172 <consoleread>:$/;"	l
ffff800000101172	kernel.asm	/^ffff800000101172:	55                   	push   %rbp$/;"	l
ffff800000101173	kernel.asm	/^ffff800000101173:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000101176	kernel.asm	/^ffff800000101176:	48 83 ec 30          	sub    $0x30,%rsp$/;"	l
ffff80000010117a	kernel.asm	/^ffff80000010117a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
ffff80000010117e	kernel.asm	/^ffff80000010117e:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)$/;"	l
ffff800000101182	kernel.asm	/^ffff800000101182:	89 55 dc             	mov    %edx,-0x24(%rbp)$/;"	l
ffff800000101185	kernel.asm	/^ffff800000101185:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000101189	kernel.asm	/^ffff800000101189:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010118c	kernel.asm	/^ffff80000010118c:	48 b8 4a 2e 10 00 00 	movabs $0xffff800000102e4a,%rax$/;"	l
ffff800000101193	kernel.asm	/^ffff800000101193:	80 ff ff $/;"	l
ffff800000101196	kernel.asm	/^ffff800000101196:	ff d0                	callq  *%rax$/;"	l
ffff800000101198	kernel.asm	/^ffff800000101198:	8b 45 dc             	mov    -0x24(%rbp),%eax$/;"	l
ffff80000010119b	kernel.asm	/^ffff80000010119b:	89 45 fc             	mov    %eax,-0x4(%rbp)$/;"	l
ffff80000010119e	kernel.asm	/^ffff80000010119e:	48 bf c0 63 11 00 00 	movabs $0xffff8000001163c0,%rdi$/;"	l
ffff8000001011a5	kernel.asm	/^ffff8000001011a5:	80 ff ff $/;"	l
ffff8000001011a8	kernel.asm	/^ffff8000001011a8:	48 b8 d6 77 10 00 00 	movabs $0xffff8000001077d6,%rax$/;"	l
ffff8000001011af	kernel.asm	/^ffff8000001011af:	80 ff ff $/;"	l
ffff8000001011b2	kernel.asm	/^ffff8000001011b2:	ff d0                	callq  *%rax$/;"	l
ffff8000001011b4	kernel.asm	/^ffff8000001011b4:	e9 1a 01 00 00       	jmpq   ffff8000001012d3 <consoleread+0x161>$/;"	l
ffff8000001011b9	kernel.asm	/^ffff8000001011b9:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff8000001011c0	kernel.asm	/^ffff8000001011c0:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff8000001011c4	kernel.asm	/^ffff8000001011c4:	8b 40 40             	mov    0x40(%rax),%eax$/;"	l
ffff8000001011c7	kernel.asm	/^ffff8000001011c7:	85 c0                	test   %eax,%eax$/;"	l
ffff8000001011c9	kernel.asm	/^ffff8000001011c9:	74 33                	je     ffff8000001011fe <consoleread+0x8c>$/;"	l
ffff8000001011cb	kernel.asm	/^ffff8000001011cb:	48 bf c0 63 11 00 00 	movabs $0xffff8000001163c0,%rdi$/;"	l
ffff8000001011d2	kernel.asm	/^ffff8000001011d2:	80 ff ff $/;"	l
ffff8000001011d5	kernel.asm	/^ffff8000001011d5:	48 b8 6f 78 10 00 00 	movabs $0xffff80000010786f,%rax$/;"	l
ffff8000001011dc	kernel.asm	/^ffff8000001011dc:	80 ff ff $/;"	l
ffff8000001011df	kernel.asm	/^ffff8000001011df:	ff d0                	callq  *%rax$/;"	l
ffff8000001011e1	kernel.asm	/^ffff8000001011e1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff8000001011e5	kernel.asm	/^ffff8000001011e5:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001011e8	kernel.asm	/^ffff8000001011e8:	48 b8 b9 2c 10 00 00 	movabs $0xffff800000102cb9,%rax$/;"	l
ffff8000001011ef	kernel.asm	/^ffff8000001011ef:	80 ff ff $/;"	l
ffff8000001011f2	kernel.asm	/^ffff8000001011f2:	ff d0                	callq  *%rax$/;"	l
ffff8000001011f4	kernel.asm	/^ffff8000001011f4:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff8000001011f9	kernel.asm	/^ffff8000001011f9:	e9 18 01 00 00       	jmpq   ffff800000101316 <consoleread+0x1a4>$/;"	l
ffff8000001011fe	kernel.asm	/^ffff8000001011fe:	48 be c0 63 11 00 00 	movabs $0xffff8000001163c0,%rsi$/;"	l
ffff800000101205	kernel.asm	/^ffff800000101205:	80 ff ff $/;"	l
ffff800000101208	kernel.asm	/^ffff800000101208:	48 bf a8 64 11 00 00 	movabs $0xffff8000001164a8,%rdi$/;"	l
ffff80000010120f	kernel.asm	/^ffff80000010120f:	80 ff ff $/;"	l
ffff800000101212	kernel.asm	/^ffff800000101212:	48 b8 cc 71 10 00 00 	movabs $0xffff8000001071cc,%rax$/;"	l
ffff800000101219	kernel.asm	/^ffff800000101219:	80 ff ff $/;"	l
ffff80000010121c	kernel.asm	/^ffff80000010121c:	ff d0                	callq  *%rax$/;"	l
ffff80000010121e	kernel.asm	/^ffff80000010121e:	48 b8 c0 63 11 00 00 	movabs $0xffff8000001163c0,%rax$/;"	l
ffff800000101225	kernel.asm	/^ffff800000101225:	80 ff ff $/;"	l
ffff800000101228	kernel.asm	/^ffff800000101228:	8b 90 e8 00 00 00    	mov    0xe8(%rax),%edx$/;"	l
ffff80000010122e	kernel.asm	/^ffff80000010122e:	48 b8 c0 63 11 00 00 	movabs $0xffff8000001163c0,%rax$/;"	l
ffff800000101235	kernel.asm	/^ffff800000101235:	80 ff ff $/;"	l
ffff800000101238	kernel.asm	/^ffff800000101238:	8b 80 ec 00 00 00    	mov    0xec(%rax),%eax$/;"	l
ffff80000010123e	kernel.asm	/^ffff80000010123e:	39 c2                	cmp    %eax,%edx$/;"	l
ffff800000101240	kernel.asm	/^ffff800000101240:	0f 84 73 ff ff ff    	je     ffff8000001011b9 <consoleread+0x47>$/;"	l
ffff800000101246	kernel.asm	/^ffff800000101246:	48 b8 c0 63 11 00 00 	movabs $0xffff8000001163c0,%rax$/;"	l
ffff80000010124d	kernel.asm	/^ffff80000010124d:	80 ff ff $/;"	l
ffff800000101250	kernel.asm	/^ffff800000101250:	8b 80 e8 00 00 00    	mov    0xe8(%rax),%eax$/;"	l
ffff800000101256	kernel.asm	/^ffff800000101256:	8d 48 01             	lea    0x1(%rax),%ecx$/;"	l
ffff800000101259	kernel.asm	/^ffff800000101259:	48 ba c0 63 11 00 00 	movabs $0xffff8000001163c0,%rdx$/;"	l
ffff800000101260	kernel.asm	/^ffff800000101260:	80 ff ff $/;"	l
ffff800000101263	kernel.asm	/^ffff800000101263:	89 8a e8 00 00 00    	mov    %ecx,0xe8(%rdx)$/;"	l
ffff800000101269	kernel.asm	/^ffff800000101269:	83 e0 7f             	and    $0x7f,%eax$/;"	l
ffff80000010126c	kernel.asm	/^ffff80000010126c:	89 c2                	mov    %eax,%edx$/;"	l
ffff80000010126e	kernel.asm	/^ffff80000010126e:	48 b8 c0 63 11 00 00 	movabs $0xffff8000001163c0,%rax$/;"	l
ffff800000101275	kernel.asm	/^ffff800000101275:	80 ff ff $/;"	l
ffff800000101278	kernel.asm	/^ffff800000101278:	89 d2                	mov    %edx,%edx$/;"	l
ffff80000010127a	kernel.asm	/^ffff80000010127a:	0f b6 44 10 68       	movzbl 0x68(%rax,%rdx,1),%eax$/;"	l
ffff80000010127f	kernel.asm	/^ffff80000010127f:	0f be c0             	movsbl %al,%eax$/;"	l
ffff800000101282	kernel.asm	/^ffff800000101282:	89 45 f8             	mov    %eax,-0x8(%rbp)$/;"	l
ffff800000101285	kernel.asm	/^ffff800000101285:	83 7d f8 04          	cmpl   $0x4,-0x8(%rbp)$/;"	l
ffff800000101289	kernel.asm	/^ffff800000101289:	75 2d                	jne    ffff8000001012b8 <consoleread+0x146>$/;"	l
ffff80000010128b	kernel.asm	/^ffff80000010128b:	8b 45 dc             	mov    -0x24(%rbp),%eax$/;"	l
ffff80000010128e	kernel.asm	/^ffff80000010128e:	3b 45 fc             	cmp    -0x4(%rbp),%eax$/;"	l
ffff800000101291	kernel.asm	/^ffff800000101291:	73 4c                	jae    ffff8000001012df <consoleread+0x16d>$/;"	l
ffff800000101293	kernel.asm	/^ffff800000101293:	48 b8 c0 63 11 00 00 	movabs $0xffff8000001163c0,%rax$/;"	l
ffff80000010129a	kernel.asm	/^ffff80000010129a:	80 ff ff $/;"	l
ffff80000010129d	kernel.asm	/^ffff80000010129d:	8b 80 e8 00 00 00    	mov    0xe8(%rax),%eax$/;"	l
ffff8000001012a3	kernel.asm	/^ffff8000001012a3:	8d 50 ff             	lea    -0x1(%rax),%edx$/;"	l
ffff8000001012a6	kernel.asm	/^ffff8000001012a6:	48 b8 c0 63 11 00 00 	movabs $0xffff8000001163c0,%rax$/;"	l
ffff8000001012ad	kernel.asm	/^ffff8000001012ad:	80 ff ff $/;"	l
ffff8000001012b0	kernel.asm	/^ffff8000001012b0:	89 90 e8 00 00 00    	mov    %edx,0xe8(%rax)$/;"	l
ffff8000001012b6	kernel.asm	/^ffff8000001012b6:	eb 27                	jmp    ffff8000001012df <consoleread+0x16d>$/;"	l
ffff8000001012b8	kernel.asm	/^ffff8000001012b8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff8000001012bc	kernel.asm	/^ffff8000001012bc:	48 8d 50 01          	lea    0x1(%rax),%rdx$/;"	l
ffff8000001012c0	kernel.asm	/^ffff8000001012c0:	48 89 55 e0          	mov    %rdx,-0x20(%rbp)$/;"	l
ffff8000001012c4	kernel.asm	/^ffff8000001012c4:	8b 55 f8             	mov    -0x8(%rbp),%edx$/;"	l
ffff8000001012c7	kernel.asm	/^ffff8000001012c7:	88 10                	mov    %dl,(%rax)$/;"	l
ffff8000001012c9	kernel.asm	/^ffff8000001012c9:	83 6d dc 01          	subl   $0x1,-0x24(%rbp)$/;"	l
ffff8000001012cd	kernel.asm	/^ffff8000001012cd:	83 7d f8 0a          	cmpl   $0xa,-0x8(%rbp)$/;"	l
ffff8000001012d1	kernel.asm	/^ffff8000001012d1:	74 0f                	je     ffff8000001012e2 <consoleread+0x170>$/;"	l
ffff8000001012d3	kernel.asm	/^ffff8000001012d3:	83 7d dc 00          	cmpl   $0x0,-0x24(%rbp)$/;"	l
ffff8000001012d7	kernel.asm	/^ffff8000001012d7:	0f 8f 41 ff ff ff    	jg     ffff80000010121e <consoleread+0xac>$/;"	l
ffff8000001012dd	kernel.asm	/^ffff8000001012dd:	eb 04                	jmp    ffff8000001012e3 <consoleread+0x171>$/;"	l
ffff8000001012df	kernel.asm	/^ffff8000001012df:	90                   	nop$/;"	l
ffff8000001012e0	kernel.asm	/^ffff8000001012e0:	eb 01                	jmp    ffff8000001012e3 <consoleread+0x171>$/;"	l
ffff8000001012e2	kernel.asm	/^ffff8000001012e2:	90                   	nop$/;"	l
ffff8000001012e3	kernel.asm	/^ffff8000001012e3:	48 bf c0 63 11 00 00 	movabs $0xffff8000001163c0,%rdi$/;"	l
ffff8000001012ea	kernel.asm	/^ffff8000001012ea:	80 ff ff $/;"	l
ffff8000001012ed	kernel.asm	/^ffff8000001012ed:	48 b8 6f 78 10 00 00 	movabs $0xffff80000010786f,%rax$/;"	l
ffff8000001012f4	kernel.asm	/^ffff8000001012f4:	80 ff ff $/;"	l
ffff8000001012f7	kernel.asm	/^ffff8000001012f7:	ff d0                	callq  *%rax$/;"	l
ffff8000001012f9	kernel.asm	/^ffff8000001012f9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff8000001012fd	kernel.asm	/^ffff8000001012fd:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000101300	kernel.asm	/^ffff800000101300:	48 b8 b9 2c 10 00 00 	movabs $0xffff800000102cb9,%rax$/;"	l
ffff800000101307	kernel.asm	/^ffff800000101307:	80 ff ff $/;"	l
ffff80000010130a	kernel.asm	/^ffff80000010130a:	ff d0                	callq  *%rax$/;"	l
ffff80000010130c	kernel.asm	/^ffff80000010130c:	8b 45 dc             	mov    -0x24(%rbp),%eax$/;"	l
ffff80000010130f	kernel.asm	/^ffff80000010130f:	8b 55 fc             	mov    -0x4(%rbp),%edx$/;"	l
ffff800000101312	kernel.asm	/^ffff800000101312:	29 c2                	sub    %eax,%edx$/;"	l
ffff800000101314	kernel.asm	/^ffff800000101314:	89 d0                	mov    %edx,%eax$/;"	l
ffff800000101316	kernel.asm	/^ffff800000101316:	c9                   	leaveq $/;"	l
ffff800000101317	kernel.asm	/^ffff800000101317:	c3                   	retq   $/;"	l
ffff800000101318	kernel.asm	/^ffff800000101318 <consolewrite>:$/;"	l
ffff800000101318	kernel.asm	/^ffff800000101318:	55                   	push   %rbp$/;"	l
ffff800000101319	kernel.asm	/^ffff800000101319:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010131c	kernel.asm	/^ffff80000010131c:	48 83 ec 30          	sub    $0x30,%rsp$/;"	l
ffff800000101320	kernel.asm	/^ffff800000101320:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
ffff800000101324	kernel.asm	/^ffff800000101324:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)$/;"	l
ffff800000101328	kernel.asm	/^ffff800000101328:	89 55 dc             	mov    %edx,-0x24(%rbp)$/;"	l
ffff80000010132b	kernel.asm	/^ffff80000010132b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010132f	kernel.asm	/^ffff80000010132f:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000101332	kernel.asm	/^ffff800000101332:	48 b8 4a 2e 10 00 00 	movabs $0xffff800000102e4a,%rax$/;"	l
ffff800000101339	kernel.asm	/^ffff800000101339:	80 ff ff $/;"	l
ffff80000010133c	kernel.asm	/^ffff80000010133c:	ff d0                	callq  *%rax$/;"	l
ffff80000010133e	kernel.asm	/^ffff80000010133e:	48 bf c0 64 11 00 00 	movabs $0xffff8000001164c0,%rdi$/;"	l
ffff800000101345	kernel.asm	/^ffff800000101345:	80 ff ff $/;"	l
ffff800000101348	kernel.asm	/^ffff800000101348:	48 b8 d6 77 10 00 00 	movabs $0xffff8000001077d6,%rax$/;"	l
ffff80000010134f	kernel.asm	/^ffff80000010134f:	80 ff ff $/;"	l
ffff800000101352	kernel.asm	/^ffff800000101352:	ff d0                	callq  *%rax$/;"	l
ffff800000101354	kernel.asm	/^ffff800000101354:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)$/;"	l
ffff80000010135b	kernel.asm	/^ffff80000010135b:	eb 28                	jmp    ffff800000101385 <consolewrite+0x6d>$/;"	l
ffff80000010135d	kernel.asm	/^ffff80000010135d:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff800000101360	kernel.asm	/^ffff800000101360:	48 63 d0             	movslq %eax,%rdx$/;"	l
ffff800000101363	kernel.asm	/^ffff800000101363:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff800000101367	kernel.asm	/^ffff800000101367:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff80000010136a	kernel.asm	/^ffff80000010136a:	0f b6 00             	movzbl (%rax),%eax$/;"	l
ffff80000010136d	kernel.asm	/^ffff80000010136d:	0f be c0             	movsbl %al,%eax$/;"	l
ffff800000101370	kernel.asm	/^ffff800000101370:	0f b6 c0             	movzbl %al,%eax$/;"	l
ffff800000101373	kernel.asm	/^ffff800000101373:	89 c7                	mov    %eax,%edi$/;"	l
ffff800000101375	kernel.asm	/^ffff800000101375:	48 b8 3b 0e 10 00 00 	movabs $0xffff800000100e3b,%rax$/;"	l
ffff80000010137c	kernel.asm	/^ffff80000010137c:	80 ff ff $/;"	l
ffff80000010137f	kernel.asm	/^ffff80000010137f:	ff d0                	callq  *%rax$/;"	l
ffff800000101381	kernel.asm	/^ffff800000101381:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)$/;"	l
ffff800000101385	kernel.asm	/^ffff800000101385:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff800000101388	kernel.asm	/^ffff800000101388:	3b 45 dc             	cmp    -0x24(%rbp),%eax$/;"	l
ffff80000010138b	kernel.asm	/^ffff80000010138b:	7c d0                	jl     ffff80000010135d <consolewrite+0x45>$/;"	l
ffff80000010138d	kernel.asm	/^ffff80000010138d:	48 bf c0 64 11 00 00 	movabs $0xffff8000001164c0,%rdi$/;"	l
ffff800000101394	kernel.asm	/^ffff800000101394:	80 ff ff $/;"	l
ffff800000101397	kernel.asm	/^ffff800000101397:	48 b8 6f 78 10 00 00 	movabs $0xffff80000010786f,%rax$/;"	l
ffff80000010139e	kernel.asm	/^ffff80000010139e:	80 ff ff $/;"	l
ffff8000001013a1	kernel.asm	/^ffff8000001013a1:	ff d0                	callq  *%rax$/;"	l
ffff8000001013a3	kernel.asm	/^ffff8000001013a3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff8000001013a7	kernel.asm	/^ffff8000001013a7:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001013aa	kernel.asm	/^ffff8000001013aa:	48 b8 b9 2c 10 00 00 	movabs $0xffff800000102cb9,%rax$/;"	l
ffff8000001013b1	kernel.asm	/^ffff8000001013b1:	80 ff ff $/;"	l
ffff8000001013b4	kernel.asm	/^ffff8000001013b4:	ff d0                	callq  *%rax$/;"	l
ffff8000001013b6	kernel.asm	/^ffff8000001013b6:	8b 45 dc             	mov    -0x24(%rbp),%eax$/;"	l
ffff8000001013b9	kernel.asm	/^ffff8000001013b9:	c9                   	leaveq $/;"	l
ffff8000001013ba	kernel.asm	/^ffff8000001013ba:	c3                   	retq   $/;"	l
ffff8000001013bb	kernel.asm	/^ffff8000001013bb <consoleinit>:$/;"	l
ffff8000001013bb	kernel.asm	/^ffff8000001013bb:	55                   	push   %rbp$/;"	l
ffff8000001013bc	kernel.asm	/^ffff8000001013bc:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff8000001013bf	kernel.asm	/^ffff8000001013bf:	48 be ba d4 10 00 00 	movabs $0xffff80000010d4ba,%rsi$/;"	l
ffff8000001013c6	kernel.asm	/^ffff8000001013c6:	80 ff ff $/;"	l
ffff8000001013c9	kernel.asm	/^ffff8000001013c9:	48 bf c0 64 11 00 00 	movabs $0xffff8000001164c0,%rdi$/;"	l
ffff8000001013d0	kernel.asm	/^ffff8000001013d0:	80 ff ff $/;"	l
ffff8000001013d3	kernel.asm	/^ffff8000001013d3:	48 b8 a1 77 10 00 00 	movabs $0xffff8000001077a1,%rax$/;"	l
ffff8000001013da	kernel.asm	/^ffff8000001013da:	80 ff ff $/;"	l
ffff8000001013dd	kernel.asm	/^ffff8000001013dd:	ff d0                	callq  *%rax$/;"	l
ffff8000001013df	kernel.asm	/^ffff8000001013df:	48 be c2 d4 10 00 00 	movabs $0xffff80000010d4c2,%rsi$/;"	l
ffff8000001013e6	kernel.asm	/^ffff8000001013e6:	80 ff ff $/;"	l
ffff8000001013e9	kernel.asm	/^ffff8000001013e9:	48 bf c0 63 11 00 00 	movabs $0xffff8000001163c0,%rdi$/;"	l
ffff8000001013f0	kernel.asm	/^ffff8000001013f0:	80 ff ff $/;"	l
ffff8000001013f3	kernel.asm	/^ffff8000001013f3:	48 b8 a1 77 10 00 00 	movabs $0xffff8000001077a1,%rax$/;"	l
ffff8000001013fa	kernel.asm	/^ffff8000001013fa:	80 ff ff $/;"	l
ffff8000001013fd	kernel.asm	/^ffff8000001013fd:	ff d0                	callq  *%rax$/;"	l
ffff8000001013ff	kernel.asm	/^ffff8000001013ff:	48 b8 80 75 11 00 00 	movabs $0xffff800000117580,%rax$/;"	l
ffff800000101406	kernel.asm	/^ffff800000101406:	80 ff ff $/;"	l
ffff800000101409	kernel.asm	/^ffff800000101409:	48 ba 18 13 10 00 00 	movabs $0xffff800000101318,%rdx$/;"	l
ffff800000101410	kernel.asm	/^ffff800000101410:	80 ff ff $/;"	l
ffff800000101413	kernel.asm	/^ffff800000101413:	48 89 50 18          	mov    %rdx,0x18(%rax)$/;"	l
ffff800000101417	kernel.asm	/^ffff800000101417:	48 b8 80 75 11 00 00 	movabs $0xffff800000117580,%rax$/;"	l
ffff80000010141e	kernel.asm	/^ffff80000010141e:	80 ff ff $/;"	l
ffff800000101421	kernel.asm	/^ffff800000101421:	48 b9 72 11 10 00 00 	movabs $0xffff800000101172,%rcx$/;"	l
ffff800000101428	kernel.asm	/^ffff800000101428:	80 ff ff $/;"	l
ffff80000010142b	kernel.asm	/^ffff80000010142b:	48 89 48 10          	mov    %rcx,0x10(%rax)$/;"	l
ffff80000010142f	kernel.asm	/^ffff80000010142f:	48 b8 c0 64 11 00 00 	movabs $0xffff8000001164c0,%rax$/;"	l
ffff800000101436	kernel.asm	/^ffff800000101436:	80 ff ff $/;"	l
ffff800000101439	kernel.asm	/^ffff800000101439:	c7 40 68 01 00 00 00 	movl   $0x1,0x68(%rax)$/;"	l
ffff800000101440	kernel.asm	/^ffff800000101440:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffff800000101445	kernel.asm	/^ffff800000101445:	bf 01 00 00 00       	mov    $0x1,%edi$/;"	l
ffff80000010144a	kernel.asm	/^ffff80000010144a:	48 b8 54 43 10 00 00 	movabs $0xffff800000104354,%rax$/;"	l
ffff800000101451	kernel.asm	/^ffff800000101451:	80 ff ff $/;"	l
ffff800000101454	kernel.asm	/^ffff800000101454:	ff d0                	callq  *%rax$/;"	l
ffff800000101456	kernel.asm	/^ffff800000101456:	90                   	nop$/;"	l
ffff800000101457	kernel.asm	/^ffff800000101457:	5d                   	pop    %rbp$/;"	l
ffff800000101458	kernel.asm	/^ffff800000101458:	c3                   	retq   $/;"	l
ffff800000101459	kernel.asm	/^ffff800000101459 <inb>:$/;"	l
ffff800000101459	kernel.asm	/^ffff800000101459:	55                   	push   %rbp$/;"	l
ffff80000010145a	kernel.asm	/^ffff80000010145a:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010145d	kernel.asm	/^ffff80000010145d:	48 83 ec 18          	sub    $0x18,%rsp$/;"	l
ffff800000101461	kernel.asm	/^ffff800000101461:	89 f8                	mov    %edi,%eax$/;"	l
ffff800000101463	kernel.asm	/^ffff800000101463:	66 89 45 ec          	mov    %ax,-0x14(%rbp)$/;"	l
ffff800000101467	kernel.asm	/^ffff800000101467:	0f b7 45 ec          	movzwl -0x14(%rbp),%eax$/;"	l
ffff80000010146b	kernel.asm	/^ffff80000010146b:	89 c2                	mov    %eax,%edx$/;"	l
ffff80000010146d	kernel.asm	/^ffff80000010146d:	ec                   	in     (%dx),%al$/;"	l
ffff80000010146e	kernel.asm	/^ffff80000010146e:	88 45 ff             	mov    %al,-0x1(%rbp)$/;"	l
ffff800000101471	kernel.asm	/^ffff800000101471:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax$/;"	l
ffff800000101475	kernel.asm	/^ffff800000101475:	c9                   	leaveq $/;"	l
ffff800000101476	kernel.asm	/^ffff800000101476:	c3                   	retq   $/;"	l
ffff800000101477	kernel.asm	/^ffff800000101477 <outb>:$/;"	l
ffff800000101477	kernel.asm	/^ffff800000101477:	55                   	push   %rbp$/;"	l
ffff800000101478	kernel.asm	/^ffff800000101478:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010147b	kernel.asm	/^ffff80000010147b:	48 83 ec 08          	sub    $0x8,%rsp$/;"	l
ffff80000010147f	kernel.asm	/^ffff80000010147f:	89 fa                	mov    %edi,%edx$/;"	l
ffff800000101481	kernel.asm	/^ffff800000101481:	89 f0                	mov    %esi,%eax$/;"	l
ffff800000101483	kernel.asm	/^ffff800000101483:	66 89 55 fc          	mov    %dx,-0x4(%rbp)$/;"	l
ffff800000101487	kernel.asm	/^ffff800000101487:	88 45 f8             	mov    %al,-0x8(%rbp)$/;"	l
ffff80000010148a	kernel.asm	/^ffff80000010148a:	0f b6 45 f8          	movzbl -0x8(%rbp),%eax$/;"	l
ffff80000010148e	kernel.asm	/^ffff80000010148e:	0f b7 55 fc          	movzwl -0x4(%rbp),%edx$/;"	l
ffff800000101492	kernel.asm	/^ffff800000101492:	ee                   	out    %al,(%dx)$/;"	l
ffff800000101493	kernel.asm	/^ffff800000101493:	90                   	nop$/;"	l
ffff800000101494	kernel.asm	/^ffff800000101494:	c9                   	leaveq $/;"	l
ffff800000101495	kernel.asm	/^ffff800000101495:	c3                   	retq   $/;"	l
ffff800000101496	kernel.asm	/^ffff800000101496 <getCurPosition>:$/;"	l
ffff800000101496	kernel.asm	/^ffff800000101496:	55                   	push   %rbp$/;"	l
ffff800000101497	kernel.asm	/^ffff800000101497:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010149a	kernel.asm	/^ffff80000010149a:	be 0e 00 00 00       	mov    $0xe,%esi$/;"	l
ffff80000010149f	kernel.asm	/^ffff80000010149f:	bf d4 03 00 00       	mov    $0x3d4,%edi$/;"	l
ffff8000001014a4	kernel.asm	/^ffff8000001014a4:	48 b8 77 14 10 00 00 	movabs $0xffff800000101477,%rax$/;"	l
ffff8000001014ab	kernel.asm	/^ffff8000001014ab:	80 ff ff $/;"	l
ffff8000001014ae	kernel.asm	/^ffff8000001014ae:	ff d0                	callq  *%rax$/;"	l
ffff8000001014b0	kernel.asm	/^ffff8000001014b0:	bf d5 03 00 00       	mov    $0x3d5,%edi$/;"	l
ffff8000001014b5	kernel.asm	/^ffff8000001014b5:	48 b8 59 14 10 00 00 	movabs $0xffff800000101459,%rax$/;"	l
ffff8000001014bc	kernel.asm	/^ffff8000001014bc:	80 ff ff $/;"	l
ffff8000001014bf	kernel.asm	/^ffff8000001014bf:	ff d0                	callq  *%rax$/;"	l
ffff8000001014c1	kernel.asm	/^ffff8000001014c1:	0f b6 c0             	movzbl %al,%eax$/;"	l
ffff8000001014c4	kernel.asm	/^ffff8000001014c4:	c1 e0 08             	shl    $0x8,%eax$/;"	l
ffff8000001014c7	kernel.asm	/^ffff8000001014c7:	89 c2                	mov    %eax,%edx$/;"	l
ffff8000001014c9	kernel.asm	/^ffff8000001014c9:	48 b8 e4 74 11 00 00 	movabs $0xffff8000001174e4,%rax$/;"	l
ffff8000001014d0	kernel.asm	/^ffff8000001014d0:	80 ff ff $/;"	l
ffff8000001014d3	kernel.asm	/^ffff8000001014d3:	89 10                	mov    %edx,(%rax)$/;"	l
ffff8000001014d5	kernel.asm	/^ffff8000001014d5:	be 0f 00 00 00       	mov    $0xf,%esi$/;"	l
ffff8000001014da	kernel.asm	/^ffff8000001014da:	bf d4 03 00 00       	mov    $0x3d4,%edi$/;"	l
ffff8000001014df	kernel.asm	/^ffff8000001014df:	48 b8 77 14 10 00 00 	movabs $0xffff800000101477,%rax$/;"	l
ffff8000001014e6	kernel.asm	/^ffff8000001014e6:	80 ff ff $/;"	l
ffff8000001014e9	kernel.asm	/^ffff8000001014e9:	ff d0                	callq  *%rax$/;"	l
ffff8000001014eb	kernel.asm	/^ffff8000001014eb:	bf d5 03 00 00       	mov    $0x3d5,%edi$/;"	l
ffff8000001014f0	kernel.asm	/^ffff8000001014f0:	48 b8 59 14 10 00 00 	movabs $0xffff800000101459,%rax$/;"	l
ffff8000001014f7	kernel.asm	/^ffff8000001014f7:	80 ff ff $/;"	l
ffff8000001014fa	kernel.asm	/^ffff8000001014fa:	ff d0                	callq  *%rax$/;"	l
ffff8000001014fc	kernel.asm	/^ffff8000001014fc:	0f b6 d0             	movzbl %al,%edx$/;"	l
ffff8000001014ff	kernel.asm	/^ffff8000001014ff:	48 b8 e4 74 11 00 00 	movabs $0xffff8000001174e4,%rax$/;"	l
ffff800000101506	kernel.asm	/^ffff800000101506:	80 ff ff $/;"	l
ffff800000101509	kernel.asm	/^ffff800000101509:	8b 00                	mov    (%rax),%eax$/;"	l
ffff80000010150b	kernel.asm	/^ffff80000010150b:	09 c2                	or     %eax,%edx$/;"	l
ffff80000010150d	kernel.asm	/^ffff80000010150d:	48 b8 e4 74 11 00 00 	movabs $0xffff8000001174e4,%rax$/;"	l
ffff800000101514	kernel.asm	/^ffff800000101514:	80 ff ff $/;"	l
ffff800000101517	kernel.asm	/^ffff800000101517:	89 10                	mov    %edx,(%rax)$/;"	l
ffff800000101519	kernel.asm	/^ffff800000101519:	90                   	nop$/;"	l
ffff80000010151a	kernel.asm	/^ffff80000010151a:	5d                   	pop    %rbp$/;"	l
ffff80000010151b	kernel.asm	/^ffff80000010151b:	c3                   	retq   $/;"	l
ffff80000010151c	kernel.asm	/^ffff80000010151c <setCurPosition>:$/;"	l
ffff80000010151c	kernel.asm	/^ffff80000010151c:	55                   	push   %rbp$/;"	l
ffff80000010151d	kernel.asm	/^ffff80000010151d:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000101520	kernel.asm	/^ffff800000101520:	be 0e 00 00 00       	mov    $0xe,%esi$/;"	l
ffff800000101525	kernel.asm	/^ffff800000101525:	bf d4 03 00 00       	mov    $0x3d4,%edi$/;"	l
ffff80000010152a	kernel.asm	/^ffff80000010152a:	48 b8 77 14 10 00 00 	movabs $0xffff800000101477,%rax$/;"	l
ffff800000101531	kernel.asm	/^ffff800000101531:	80 ff ff $/;"	l
ffff800000101534	kernel.asm	/^ffff800000101534:	ff d0                	callq  *%rax$/;"	l
ffff800000101536	kernel.asm	/^ffff800000101536:	48 b8 e4 74 11 00 00 	movabs $0xffff8000001174e4,%rax$/;"	l
ffff80000010153d	kernel.asm	/^ffff80000010153d:	80 ff ff $/;"	l
ffff800000101540	kernel.asm	/^ffff800000101540:	8b 00                	mov    (%rax),%eax$/;"	l
ffff800000101542	kernel.asm	/^ffff800000101542:	c1 f8 08             	sar    $0x8,%eax$/;"	l
ffff800000101545	kernel.asm	/^ffff800000101545:	0f b6 c0             	movzbl %al,%eax$/;"	l
ffff800000101548	kernel.asm	/^ffff800000101548:	89 c6                	mov    %eax,%esi$/;"	l
ffff80000010154a	kernel.asm	/^ffff80000010154a:	bf d5 03 00 00       	mov    $0x3d5,%edi$/;"	l
ffff80000010154f	kernel.asm	/^ffff80000010154f:	48 b8 77 14 10 00 00 	movabs $0xffff800000101477,%rax$/;"	l
ffff800000101556	kernel.asm	/^ffff800000101556:	80 ff ff $/;"	l
ffff800000101559	kernel.asm	/^ffff800000101559:	ff d0                	callq  *%rax$/;"	l
ffff80000010155b	kernel.asm	/^ffff80000010155b:	be 0f 00 00 00       	mov    $0xf,%esi$/;"	l
ffff800000101560	kernel.asm	/^ffff800000101560:	bf d4 03 00 00       	mov    $0x3d4,%edi$/;"	l
ffff800000101565	kernel.asm	/^ffff800000101565:	48 b8 77 14 10 00 00 	movabs $0xffff800000101477,%rax$/;"	l
ffff80000010156c	kernel.asm	/^ffff80000010156c:	80 ff ff $/;"	l
ffff80000010156f	kernel.asm	/^ffff80000010156f:	ff d0                	callq  *%rax$/;"	l
ffff800000101571	kernel.asm	/^ffff800000101571:	48 b8 e4 74 11 00 00 	movabs $0xffff8000001174e4,%rax$/;"	l
ffff800000101578	kernel.asm	/^ffff800000101578:	80 ff ff $/;"	l
ffff80000010157b	kernel.asm	/^ffff80000010157b:	8b 00                	mov    (%rax),%eax$/;"	l
ffff80000010157d	kernel.asm	/^ffff80000010157d:	0f b6 c0             	movzbl %al,%eax$/;"	l
ffff800000101580	kernel.asm	/^ffff800000101580:	89 c6                	mov    %eax,%esi$/;"	l
ffff800000101582	kernel.asm	/^ffff800000101582:	bf d5 03 00 00       	mov    $0x3d5,%edi$/;"	l
ffff800000101587	kernel.asm	/^ffff800000101587:	48 b8 77 14 10 00 00 	movabs $0xffff800000101477,%rax$/;"	l
ffff80000010158e	kernel.asm	/^ffff80000010158e:	80 ff ff $/;"	l
ffff800000101591	kernel.asm	/^ffff800000101591:	ff d0                	callq  *%rax$/;"	l
ffff800000101593	kernel.asm	/^ffff800000101593:	48 b8 20 e0 10 00 00 	movabs $0xffff80000010e020,%rax$/;"	l
ffff80000010159a	kernel.asm	/^ffff80000010159a:	80 ff ff $/;"	l
ffff80000010159d	kernel.asm	/^ffff80000010159d:	48 8b 10             	mov    (%rax),%rdx$/;"	l
ffff8000001015a0	kernel.asm	/^ffff8000001015a0:	48 b8 e4 74 11 00 00 	movabs $0xffff8000001174e4,%rax$/;"	l
ffff8000001015a7	kernel.asm	/^ffff8000001015a7:	80 ff ff $/;"	l
ffff8000001015aa	kernel.asm	/^ffff8000001015aa:	8b 00                	mov    (%rax),%eax$/;"	l
ffff8000001015ac	kernel.asm	/^ffff8000001015ac:	48 98                	cltq   $/;"	l
ffff8000001015ae	kernel.asm	/^ffff8000001015ae:	48 01 c0             	add    %rax,%rax$/;"	l
ffff8000001015b1	kernel.asm	/^ffff8000001015b1:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff8000001015b4	kernel.asm	/^ffff8000001015b4:	66 c7 00 20 07       	movw   $0x720,(%rax)$/;"	l
ffff8000001015b9	kernel.asm	/^ffff8000001015b9:	90                   	nop$/;"	l
ffff8000001015ba	kernel.asm	/^ffff8000001015ba:	5d                   	pop    %rbp$/;"	l
ffff8000001015bb	kernel.asm	/^ffff8000001015bb:	c3                   	retq   $/;"	l
ffff8000001015bc	kernel.asm	/^ffff8000001015bc <getContent>:$/;"	l
ffff8000001015bc	kernel.asm	/^ffff8000001015bc:	55                   	push   %rbp$/;"	l
ffff8000001015bd	kernel.asm	/^ffff8000001015bd:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff8000001015c0	kernel.asm	/^ffff8000001015c0:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff8000001015c4	kernel.asm	/^ffff8000001015c4:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)$/;"	l
ffff8000001015cb	kernel.asm	/^ffff8000001015cb:	eb 34                	jmp    ffff800000101601 <getContent+0x45>$/;"	l
ffff8000001015cd	kernel.asm	/^ffff8000001015cd:	48 b8 20 e0 10 00 00 	movabs $0xffff80000010e020,%rax$/;"	l
ffff8000001015d4	kernel.asm	/^ffff8000001015d4:	80 ff ff $/;"	l
ffff8000001015d7	kernel.asm	/^ffff8000001015d7:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff8000001015da	kernel.asm	/^ffff8000001015da:	8b 55 fc             	mov    -0x4(%rbp),%edx$/;"	l
ffff8000001015dd	kernel.asm	/^ffff8000001015dd:	48 63 d2             	movslq %edx,%rdx$/;"	l
ffff8000001015e0	kernel.asm	/^ffff8000001015e0:	48 01 d2             	add    %rdx,%rdx$/;"	l
ffff8000001015e3	kernel.asm	/^ffff8000001015e3:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff8000001015e6	kernel.asm	/^ffff8000001015e6:	0f b7 08             	movzwl (%rax),%ecx$/;"	l
ffff8000001015e9	kernel.asm	/^ffff8000001015e9:	48 b8 40 65 11 00 00 	movabs $0xffff800000116540,%rax$/;"	l
ffff8000001015f0	kernel.asm	/^ffff8000001015f0:	80 ff ff $/;"	l
ffff8000001015f3	kernel.asm	/^ffff8000001015f3:	8b 55 fc             	mov    -0x4(%rbp),%edx$/;"	l
ffff8000001015f6	kernel.asm	/^ffff8000001015f6:	48 63 d2             	movslq %edx,%rdx$/;"	l
ffff8000001015f9	kernel.asm	/^ffff8000001015f9:	66 89 0c 50          	mov    %cx,(%rax,%rdx,2)$/;"	l
ffff8000001015fd	kernel.asm	/^ffff8000001015fd:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)$/;"	l
ffff800000101601	kernel.asm	/^ffff800000101601:	48 b8 e4 74 11 00 00 	movabs $0xffff8000001174e4,%rax$/;"	l
ffff800000101608	kernel.asm	/^ffff800000101608:	80 ff ff $/;"	l
ffff80000010160b	kernel.asm	/^ffff80000010160b:	8b 00                	mov    (%rax),%eax$/;"	l
ffff80000010160d	kernel.asm	/^ffff80000010160d:	39 45 fc             	cmp    %eax,-0x4(%rbp)$/;"	l
ffff800000101610	kernel.asm	/^ffff800000101610:	7c bb                	jl     ffff8000001015cd <getContent+0x11>$/;"	l
ffff800000101612	kernel.asm	/^ffff800000101612:	90                   	nop$/;"	l
ffff800000101613	kernel.asm	/^ffff800000101613:	c9                   	leaveq $/;"	l
ffff800000101614	kernel.asm	/^ffff800000101614:	c3                   	retq   $/;"	l
ffff800000101615	kernel.asm	/^ffff800000101615 <setContent>:$/;"	l
ffff800000101615	kernel.asm	/^ffff800000101615:	55                   	push   %rbp$/;"	l
ffff800000101616	kernel.asm	/^ffff800000101616:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000101619	kernel.asm	/^ffff800000101619:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff80000010161d	kernel.asm	/^ffff80000010161d:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)$/;"	l
ffff800000101624	kernel.asm	/^ffff800000101624:	eb 22                	jmp    ffff800000101648 <setContent+0x33>$/;"	l
ffff800000101626	kernel.asm	/^ffff800000101626:	48 b8 20 e0 10 00 00 	movabs $0xffff80000010e020,%rax$/;"	l
ffff80000010162d	kernel.asm	/^ffff80000010162d:	80 ff ff $/;"	l
ffff800000101630	kernel.asm	/^ffff800000101630:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff800000101633	kernel.asm	/^ffff800000101633:	8b 55 fc             	mov    -0x4(%rbp),%edx$/;"	l
ffff800000101636	kernel.asm	/^ffff800000101636:	48 63 d2             	movslq %edx,%rdx$/;"	l
ffff800000101639	kernel.asm	/^ffff800000101639:	48 01 d2             	add    %rdx,%rdx$/;"	l
ffff80000010163c	kernel.asm	/^ffff80000010163c:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff80000010163f	kernel.asm	/^ffff80000010163f:	66 c7 00 00 00       	movw   $0x0,(%rax)$/;"	l
ffff800000101644	kernel.asm	/^ffff800000101644:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)$/;"	l
ffff800000101648	kernel.asm	/^ffff800000101648:	81 7d fc cf 07 00 00 	cmpl   $0x7cf,-0x4(%rbp)$/;"	l
ffff80000010164f	kernel.asm	/^ffff80000010164f:	7e d5                	jle    ffff800000101626 <setContent+0x11>$/;"	l
ffff800000101651	kernel.asm	/^ffff800000101651:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)$/;"	l
ffff800000101658	kernel.asm	/^ffff800000101658:	eb 35                	jmp    ffff80000010168f <setContent+0x7a>$/;"	l
ffff80000010165a	kernel.asm	/^ffff80000010165a:	48 b8 20 e0 10 00 00 	movabs $0xffff80000010e020,%rax$/;"	l
ffff800000101661	kernel.asm	/^ffff800000101661:	80 ff ff $/;"	l
ffff800000101664	kernel.asm	/^ffff800000101664:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff800000101667	kernel.asm	/^ffff800000101667:	8b 55 fc             	mov    -0x4(%rbp),%edx$/;"	l
ffff80000010166a	kernel.asm	/^ffff80000010166a:	48 63 d2             	movslq %edx,%rdx$/;"	l
ffff80000010166d	kernel.asm	/^ffff80000010166d:	48 01 d2             	add    %rdx,%rdx$/;"	l
ffff800000101670	kernel.asm	/^ffff800000101670:	48 8d 0c 10          	lea    (%rax,%rdx,1),%rcx$/;"	l
ffff800000101674	kernel.asm	/^ffff800000101674:	48 b8 40 65 11 00 00 	movabs $0xffff800000116540,%rax$/;"	l
ffff80000010167b	kernel.asm	/^ffff80000010167b:	80 ff ff $/;"	l
ffff80000010167e	kernel.asm	/^ffff80000010167e:	8b 55 fc             	mov    -0x4(%rbp),%edx$/;"	l
ffff800000101681	kernel.asm	/^ffff800000101681:	48 63 d2             	movslq %edx,%rdx$/;"	l
ffff800000101684	kernel.asm	/^ffff800000101684:	0f b7 04 50          	movzwl (%rax,%rdx,2),%eax$/;"	l
ffff800000101688	kernel.asm	/^ffff800000101688:	66 89 01             	mov    %ax,(%rcx)$/;"	l
ffff80000010168b	kernel.asm	/^ffff80000010168b:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)$/;"	l
ffff80000010168f	kernel.asm	/^ffff80000010168f:	48 b8 e4 74 11 00 00 	movabs $0xffff8000001174e4,%rax$/;"	l
ffff800000101696	kernel.asm	/^ffff800000101696:	80 ff ff $/;"	l
ffff800000101699	kernel.asm	/^ffff800000101699:	8b 00                	mov    (%rax),%eax$/;"	l
ffff80000010169b	kernel.asm	/^ffff80000010169b:	39 45 fc             	cmp    %eax,-0x4(%rbp)$/;"	l
ffff80000010169e	kernel.asm	/^ffff80000010169e:	7c ba                	jl     ffff80000010165a <setContent+0x45>$/;"	l
ffff8000001016a0	kernel.asm	/^ffff8000001016a0:	90                   	nop$/;"	l
ffff8000001016a1	kernel.asm	/^ffff8000001016a1:	c9                   	leaveq $/;"	l
ffff8000001016a2	kernel.asm	/^ffff8000001016a2:	c3                   	retq   $/;"	l
ffff8000001016a3	kernel.asm	/^ffff8000001016a3 <displayread>:$/;"	l
ffff8000001016a3	kernel.asm	/^ffff8000001016a3:	55                   	push   %rbp$/;"	l
ffff8000001016a4	kernel.asm	/^ffff8000001016a4:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff8000001016a7	kernel.asm	/^ffff8000001016a7:	48 83 ec 18          	sub    $0x18,%rsp$/;"	l
ffff8000001016ab	kernel.asm	/^ffff8000001016ab:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)$/;"	l
ffff8000001016af	kernel.asm	/^ffff8000001016af:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)$/;"	l
ffff8000001016b3	kernel.asm	/^ffff8000001016b3:	89 55 ec             	mov    %edx,-0x14(%rbp)$/;"	l
ffff8000001016b6	kernel.asm	/^ffff8000001016b6:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff8000001016bb	kernel.asm	/^ffff8000001016bb:	c9                   	leaveq $/;"	l
ffff8000001016bc	kernel.asm	/^ffff8000001016bc:	c3                   	retq   $/;"	l
ffff8000001016bd	kernel.asm	/^ffff8000001016bd <displaywrite>:$/;"	l
ffff8000001016bd	kernel.asm	/^ffff8000001016bd:	55                   	push   %rbp$/;"	l
ffff8000001016be	kernel.asm	/^ffff8000001016be:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff8000001016c1	kernel.asm	/^ffff8000001016c1:	48 83 ec 28          	sub    $0x28,%rsp$/;"	l
ffff8000001016c5	kernel.asm	/^ffff8000001016c5:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
ffff8000001016c9	kernel.asm	/^ffff8000001016c9:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)$/;"	l
ffff8000001016cd	kernel.asm	/^ffff8000001016cd:	89 55 dc             	mov    %edx,-0x24(%rbp)$/;"	l
ffff8000001016d0	kernel.asm	/^ffff8000001016d0:	48 b8 00 00 0a 00 00 	movabs $0xffff8000000a0000,%rax$/;"	l
ffff8000001016d7	kernel.asm	/^ffff8000001016d7:	80 ff ff $/;"	l
ffff8000001016da	kernel.asm	/^ffff8000001016da:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ffff8000001016de	kernel.asm	/^ffff8000001016de:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)$/;"	l
ffff8000001016e5	kernel.asm	/^ffff8000001016e5:	eb 36                	jmp    ffff80000010171d <displaywrite+0x60>$/;"	l
ffff8000001016e7	kernel.asm	/^ffff8000001016e7:	48 b8 e0 74 11 00 00 	movabs $0xffff8000001174e0,%rax$/;"	l
ffff8000001016ee	kernel.asm	/^ffff8000001016ee:	80 ff ff $/;"	l
ffff8000001016f1	kernel.asm	/^ffff8000001016f1:	8b 00                	mov    (%rax),%eax$/;"	l
ffff8000001016f3	kernel.asm	/^ffff8000001016f3:	69 d0 e8 03 00 00    	imul   $0x3e8,%eax,%edx$/;"	l
ffff8000001016f9	kernel.asm	/^ffff8000001016f9:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff8000001016fc	kernel.asm	/^ffff8000001016fc:	01 d0                	add    %edx,%eax$/;"	l
ffff8000001016fe	kernel.asm	/^ffff8000001016fe:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000101700	kernel.asm	/^ffff800000101700:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000101704	kernel.asm	/^ffff800000101704:	48 01 c2             	add    %rax,%rdx$/;"	l
ffff800000101707	kernel.asm	/^ffff800000101707:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff80000010170a	kernel.asm	/^ffff80000010170a:	48 63 c8             	movslq %eax,%rcx$/;"	l
ffff80000010170d	kernel.asm	/^ffff80000010170d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff800000101711	kernel.asm	/^ffff800000101711:	48 01 c8             	add    %rcx,%rax$/;"	l
ffff800000101714	kernel.asm	/^ffff800000101714:	0f b6 00             	movzbl (%rax),%eax$/;"	l
ffff800000101717	kernel.asm	/^ffff800000101717:	88 02                	mov    %al,(%rdx)$/;"	l
ffff800000101719	kernel.asm	/^ffff800000101719:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)$/;"	l
ffff80000010171d	kernel.asm	/^ffff80000010171d:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff800000101720	kernel.asm	/^ffff800000101720:	3b 45 dc             	cmp    -0x24(%rbp),%eax$/;"	l
ffff800000101723	kernel.asm	/^ffff800000101723:	7c c2                	jl     ffff8000001016e7 <displaywrite+0x2a>$/;"	l
ffff800000101725	kernel.asm	/^ffff800000101725:	48 b8 e0 74 11 00 00 	movabs $0xffff8000001174e0,%rax$/;"	l
ffff80000010172c	kernel.asm	/^ffff80000010172c:	80 ff ff $/;"	l
ffff80000010172f	kernel.asm	/^ffff80000010172f:	8b 00                	mov    (%rax),%eax$/;"	l
ffff800000101731	kernel.asm	/^ffff800000101731:	8d 50 01             	lea    0x1(%rax),%edx$/;"	l
ffff800000101734	kernel.asm	/^ffff800000101734:	48 b8 e0 74 11 00 00 	movabs $0xffff8000001174e0,%rax$/;"	l
ffff80000010173b	kernel.asm	/^ffff80000010173b:	80 ff ff $/;"	l
ffff80000010173e	kernel.asm	/^ffff80000010173e:	89 10                	mov    %edx,(%rax)$/;"	l
ffff800000101740	kernel.asm	/^ffff800000101740:	8b 45 dc             	mov    -0x24(%rbp),%eax$/;"	l
ffff800000101743	kernel.asm	/^ffff800000101743:	c9                   	leaveq $/;"	l
ffff800000101744	kernel.asm	/^ffff800000101744:	c3                   	retq   $/;"	l
ffff800000101745	kernel.asm	/^ffff800000101745 <displayinit>:$/;"	l
ffff800000101745	kernel.asm	/^ffff800000101745:	55                   	push   %rbp$/;"	l
ffff800000101746	kernel.asm	/^ffff800000101746:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000101749	kernel.asm	/^ffff800000101749:	48 be c8 d4 10 00 00 	movabs $0xffff80000010d4c8,%rsi$/;"	l
ffff800000101750	kernel.asm	/^ffff800000101750:	80 ff ff $/;"	l
ffff800000101753	kernel.asm	/^ffff800000101753:	48 bf 00 75 11 00 00 	movabs $0xffff800000117500,%rdi$/;"	l
ffff80000010175a	kernel.asm	/^ffff80000010175a:	80 ff ff $/;"	l
ffff80000010175d	kernel.asm	/^ffff80000010175d:	48 b8 a1 77 10 00 00 	movabs $0xffff8000001077a1,%rax$/;"	l
ffff800000101764	kernel.asm	/^ffff800000101764:	80 ff ff $/;"	l
ffff800000101767	kernel.asm	/^ffff800000101767:	ff d0                	callq  *%rax$/;"	l
ffff800000101769	kernel.asm	/^ffff800000101769:	48 b8 80 75 11 00 00 	movabs $0xffff800000117580,%rax$/;"	l
ffff800000101770	kernel.asm	/^ffff800000101770:	80 ff ff $/;"	l
ffff800000101773	kernel.asm	/^ffff800000101773:	48 ba bd 16 10 00 00 	movabs $0xffff8000001016bd,%rdx$/;"	l
ffff80000010177a	kernel.asm	/^ffff80000010177a:	80 ff ff $/;"	l
ffff80000010177d	kernel.asm	/^ffff80000010177d:	48 89 50 28          	mov    %rdx,0x28(%rax)$/;"	l
ffff800000101781	kernel.asm	/^ffff800000101781:	48 b8 80 75 11 00 00 	movabs $0xffff800000117580,%rax$/;"	l
ffff800000101788	kernel.asm	/^ffff800000101788:	80 ff ff $/;"	l
ffff80000010178b	kernel.asm	/^ffff80000010178b:	48 b9 a3 16 10 00 00 	movabs $0xffff8000001016a3,%rcx$/;"	l
ffff800000101792	kernel.asm	/^ffff800000101792:	80 ff ff $/;"	l
ffff800000101795	kernel.asm	/^ffff800000101795:	48 89 48 20          	mov    %rcx,0x20(%rax)$/;"	l
ffff800000101799	kernel.asm	/^ffff800000101799:	48 b8 00 75 11 00 00 	movabs $0xffff800000117500,%rax$/;"	l
ffff8000001017a0	kernel.asm	/^ffff8000001017a0:	80 ff ff $/;"	l
ffff8000001017a3	kernel.asm	/^ffff8000001017a3:	c7 40 68 01 00 00 00 	movl   $0x1,0x68(%rax)$/;"	l
ffff8000001017aa	kernel.asm	/^ffff8000001017aa:	90                   	nop$/;"	l
ffff8000001017ab	kernel.asm	/^ffff8000001017ab:	5d                   	pop    %rbp$/;"	l
ffff8000001017ac	kernel.asm	/^ffff8000001017ac:	c3                   	retq   $/;"	l
ffff8000001017ad	kernel.asm	/^ffff8000001017ad <displayioctl>:$/;"	l
ffff8000001017ad	kernel.asm	/^ffff8000001017ad:	55                   	push   %rbp$/;"	l
ffff8000001017ae	kernel.asm	/^ffff8000001017ae:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff8000001017b1	kernel.asm	/^ffff8000001017b1:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ffff8000001017b5	kernel.asm	/^ffff8000001017b5:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
ffff8000001017b9	kernel.asm	/^ffff8000001017b9:	89 75 e4             	mov    %esi,-0x1c(%rbp)$/;"	l
ffff8000001017bc	kernel.asm	/^ffff8000001017bc:	89 55 e0             	mov    %edx,-0x20(%rbp)$/;"	l
ffff8000001017bf	kernel.asm	/^ffff8000001017bf:	8b 45 e4             	mov    -0x1c(%rbp),%eax$/;"	l
ffff8000001017c2	kernel.asm	/^ffff8000001017c2:	83 f8 01             	cmp    $0x1,%eax$/;"	l
ffff8000001017c5	kernel.asm	/^ffff8000001017c5:	74 0a                	je     ffff8000001017d1 <displayioctl+0x24>$/;"	l
ffff8000001017c7	kernel.asm	/^ffff8000001017c7:	83 f8 02             	cmp    $0x2,%eax$/;"	l
ffff8000001017ca	kernel.asm	/^ffff8000001017ca:	74 79                	je     ffff800000101845 <displayioctl+0x98>$/;"	l
ffff8000001017cc	kernel.asm	/^ffff8000001017cc:	e9 bf 00 00 00       	jmpq   ffff800000101890 <displayioctl+0xe3>$/;"	l
ffff8000001017d1	kernel.asm	/^ffff8000001017d1:	83 7d e0 13          	cmpl   $0x13,-0x20(%rbp)$/;"	l
ffff8000001017d5	kernel.asm	/^ffff8000001017d5:	75 33                	jne    ffff80000010180a <displayioctl+0x5d>$/;"	l
ffff8000001017d7	kernel.asm	/^ffff8000001017d7:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff8000001017dc	kernel.asm	/^ffff8000001017dc:	48 ba 96 14 10 00 00 	movabs $0xffff800000101496,%rdx$/;"	l
ffff8000001017e3	kernel.asm	/^ffff8000001017e3:	80 ff ff $/;"	l
ffff8000001017e6	kernel.asm	/^ffff8000001017e6:	ff d2                	callq  *%rdx$/;"	l
ffff8000001017e8	kernel.asm	/^ffff8000001017e8:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff8000001017ed	kernel.asm	/^ffff8000001017ed:	48 ba bc 15 10 00 00 	movabs $0xffff8000001015bc,%rdx$/;"	l
ffff8000001017f4	kernel.asm	/^ffff8000001017f4:	80 ff ff $/;"	l
ffff8000001017f7	kernel.asm	/^ffff8000001017f7:	ff d2                	callq  *%rdx$/;"	l
ffff8000001017f9	kernel.asm	/^ffff8000001017f9:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff8000001017fe	kernel.asm	/^ffff8000001017fe:	48 ba 08 c8 10 00 00 	movabs $0xffff80000010c808,%rdx$/;"	l
ffff800000101805	kernel.asm	/^ffff800000101805:	80 ff ff $/;"	l
ffff800000101808	kernel.asm	/^ffff800000101808:	ff d2                	callq  *%rdx$/;"	l
ffff80000010180a	kernel.asm	/^ffff80000010180a:	83 7d e0 03          	cmpl   $0x3,-0x20(%rbp)$/;"	l
ffff80000010180e	kernel.asm	/^ffff80000010180e:	75 7f                	jne    ffff80000010188f <displayioctl+0xe2>$/;"	l
ffff800000101810	kernel.asm	/^ffff800000101810:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000101815	kernel.asm	/^ffff800000101815:	48 ba fc cc 10 00 00 	movabs $0xffff80000010ccfc,%rdx$/;"	l
ffff80000010181c	kernel.asm	/^ffff80000010181c:	80 ff ff $/;"	l
ffff80000010181f	kernel.asm	/^ffff80000010181f:	ff d2                	callq  *%rdx$/;"	l
ffff800000101821	kernel.asm	/^ffff800000101821:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000101826	kernel.asm	/^ffff800000101826:	48 ba 1c 15 10 00 00 	movabs $0xffff80000010151c,%rdx$/;"	l
ffff80000010182d	kernel.asm	/^ffff80000010182d:	80 ff ff $/;"	l
ffff800000101830	kernel.asm	/^ffff800000101830:	ff d2                	callq  *%rdx$/;"	l
ffff800000101832	kernel.asm	/^ffff800000101832:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000101837	kernel.asm	/^ffff800000101837:	48 ba 15 16 10 00 00 	movabs $0xffff800000101615,%rdx$/;"	l
ffff80000010183e	kernel.asm	/^ffff80000010183e:	80 ff ff $/;"	l
ffff800000101841	kernel.asm	/^ffff800000101841:	ff d2                	callq  *%rdx$/;"	l
ffff800000101843	kernel.asm	/^ffff800000101843:	eb 4a                	jmp    ffff80000010188f <displayioctl+0xe2>$/;"	l
ffff800000101845	kernel.asm	/^ffff800000101845:	8b 45 e0             	mov    -0x20(%rbp),%eax$/;"	l
ffff800000101848	kernel.asm	/^ffff800000101848:	c1 f8 18             	sar    $0x18,%eax$/;"	l
ffff80000010184b	kernel.asm	/^ffff80000010184b:	89 45 fc             	mov    %eax,-0x4(%rbp)$/;"	l
ffff80000010184e	kernel.asm	/^ffff80000010184e:	8b 45 e0             	mov    -0x20(%rbp),%eax$/;"	l
ffff800000101851	kernel.asm	/^ffff800000101851:	c1 f8 10             	sar    $0x10,%eax$/;"	l
ffff800000101854	kernel.asm	/^ffff800000101854:	25 ff 00 00 00       	and    $0xff,%eax$/;"	l
ffff800000101859	kernel.asm	/^ffff800000101859:	89 45 f8             	mov    %eax,-0x8(%rbp)$/;"	l
ffff80000010185c	kernel.asm	/^ffff80000010185c:	8b 45 e0             	mov    -0x20(%rbp),%eax$/;"	l
ffff80000010185f	kernel.asm	/^ffff80000010185f:	c1 f8 08             	sar    $0x8,%eax$/;"	l
ffff800000101862	kernel.asm	/^ffff800000101862:	25 ff 00 00 00       	and    $0xff,%eax$/;"	l
ffff800000101867	kernel.asm	/^ffff800000101867:	89 45 f4             	mov    %eax,-0xc(%rbp)$/;"	l
ffff80000010186a	kernel.asm	/^ffff80000010186a:	8b 45 e0             	mov    -0x20(%rbp),%eax$/;"	l
ffff80000010186d	kernel.asm	/^ffff80000010186d:	0f b6 c0             	movzbl %al,%eax$/;"	l
ffff800000101870	kernel.asm	/^ffff800000101870:	89 45 f0             	mov    %eax,-0x10(%rbp)$/;"	l
ffff800000101873	kernel.asm	/^ffff800000101873:	8b 4d f0             	mov    -0x10(%rbp),%ecx$/;"	l
ffff800000101876	kernel.asm	/^ffff800000101876:	8b 55 f4             	mov    -0xc(%rbp),%edx$/;"	l
ffff800000101879	kernel.asm	/^ffff800000101879:	8b 75 f8             	mov    -0x8(%rbp),%esi$/;"	l
ffff80000010187c	kernel.asm	/^ffff80000010187c:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff80000010187f	kernel.asm	/^ffff80000010187f:	89 c7                	mov    %eax,%edi$/;"	l
ffff800000101881	kernel.asm	/^ffff800000101881:	48 b8 24 c7 10 00 00 	movabs $0xffff80000010c724,%rax$/;"	l
ffff800000101888	kernel.asm	/^ffff800000101888:	80 ff ff $/;"	l
ffff80000010188b	kernel.asm	/^ffff80000010188b:	ff d0                	callq  *%rax$/;"	l
ffff80000010188d	kernel.asm	/^ffff80000010188d:	eb 01                	jmp    ffff800000101890 <displayioctl+0xe3>$/;"	l
ffff80000010188f	kernel.asm	/^ffff80000010188f:	90                   	nop$/;"	l
ffff800000101890	kernel.asm	/^ffff800000101890:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
ffff800000101895	kernel.asm	/^ffff800000101895:	c9                   	leaveq $/;"	l
ffff800000101896	kernel.asm	/^ffff800000101896:	c3                   	retq   $/;"	l
ffff800000101897	kernel.asm	/^ffff800000101897 <exec>:$/;"	l
ffff800000101897	kernel.asm	/^ffff800000101897:	55                   	push   %rbp$/;"	l
ffff800000101898	kernel.asm	/^ffff800000101898:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010189b	kernel.asm	/^ffff80000010189b:	48 81 ec 00 02 00 00 	sub    $0x200,%rsp$/;"	l
ffff8000001018a2	kernel.asm	/^ffff8000001018a2:	48 89 bd 08 fe ff ff 	mov    %rdi,-0x1f8(%rbp)$/;"	l
ffff8000001018a9	kernel.asm	/^ffff8000001018a9:	48 89 b5 00 fe ff ff 	mov    %rsi,-0x200(%rbp)$/;"	l
ffff8000001018b0	kernel.asm	/^ffff8000001018b0:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff8000001018b7	kernel.asm	/^ffff8000001018b7:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff8000001018bb	kernel.asm	/^ffff8000001018bb:	48 8b 40 08          	mov    0x8(%rax),%rax$/;"	l
ffff8000001018bf	kernel.asm	/^ffff8000001018bf:	48 89 45 b8          	mov    %rax,-0x48(%rbp)$/;"	l
ffff8000001018c3	kernel.asm	/^ffff8000001018c3:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff8000001018c8	kernel.asm	/^ffff8000001018c8:	48 ba d0 52 10 00 00 	movabs $0xffff8000001052d0,%rdx$/;"	l
ffff8000001018cf	kernel.asm	/^ffff8000001018cf:	80 ff ff $/;"	l
ffff8000001018d2	kernel.asm	/^ffff8000001018d2:	ff d2                	callq  *%rdx$/;"	l
ffff8000001018d4	kernel.asm	/^ffff8000001018d4:	48 8b 85 08 fe ff ff 	mov    -0x1f8(%rbp),%rax$/;"	l
ffff8000001018db	kernel.asm	/^ffff8000001018db:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001018de	kernel.asm	/^ffff8000001018de:	48 b8 a9 3b 10 00 00 	movabs $0xffff800000103ba9,%rax$/;"	l
ffff8000001018e5	kernel.asm	/^ffff8000001018e5:	80 ff ff $/;"	l
ffff8000001018e8	kernel.asm	/^ffff8000001018e8:	ff d0                	callq  *%rax$/;"	l
ffff8000001018ea	kernel.asm	/^ffff8000001018ea:	48 89 45 c8          	mov    %rax,-0x38(%rbp)$/;"	l
ffff8000001018ee	kernel.asm	/^ffff8000001018ee:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)$/;"	l
ffff8000001018f3	kernel.asm	/^ffff8000001018f3:	75 1b                	jne    ffff800000101910 <exec+0x79>$/;"	l
ffff8000001018f5	kernel.asm	/^ffff8000001018f5:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff8000001018fa	kernel.asm	/^ffff8000001018fa:	48 ba a6 53 10 00 00 	movabs $0xffff8000001053a6,%rdx$/;"	l
ffff800000101901	kernel.asm	/^ffff800000101901:	80 ff ff $/;"	l
ffff800000101904	kernel.asm	/^ffff800000101904:	ff d2                	callq  *%rdx$/;"	l
ffff800000101906	kernel.asm	/^ffff800000101906:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff80000010190b	kernel.asm	/^ffff80000010190b:	e9 a5 05 00 00       	jmpq   ffff800000101eb5 <exec+0x61e>$/;"	l
ffff800000101910	kernel.asm	/^ffff800000101910:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
ffff800000101914	kernel.asm	/^ffff800000101914:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000101917	kernel.asm	/^ffff800000101917:	48 b8 b9 2c 10 00 00 	movabs $0xffff800000102cb9,%rax$/;"	l
ffff80000010191e	kernel.asm	/^ffff80000010191e:	80 ff ff $/;"	l
ffff800000101921	kernel.asm	/^ffff800000101921:	ff d0                	callq  *%rax$/;"	l
ffff800000101923	kernel.asm	/^ffff800000101923:	48 c7 45 c0 00 00 00 	movq   $0x0,-0x40(%rbp)$/;"	l
ffff80000010192a	kernel.asm	/^ffff80000010192a:	00 $/;"	l
ffff80000010192b	kernel.asm	/^ffff80000010192b:	48 8d b5 50 fe ff ff 	lea    -0x1b0(%rbp),%rsi$/;"	l
ffff800000101932	kernel.asm	/^ffff800000101932:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
ffff800000101936	kernel.asm	/^ffff800000101936:	b9 40 00 00 00       	mov    $0x40,%ecx$/;"	l
ffff80000010193b	kernel.asm	/^ffff80000010193b:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
ffff800000101940	kernel.asm	/^ffff800000101940:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000101943	kernel.asm	/^ffff800000101943:	48 b8 0d 33 10 00 00 	movabs $0xffff80000010330d,%rax$/;"	l
ffff80000010194a	kernel.asm	/^ffff80000010194a:	80 ff ff $/;"	l
ffff80000010194d	kernel.asm	/^ffff80000010194d:	ff d0                	callq  *%rax$/;"	l
ffff80000010194f	kernel.asm	/^ffff80000010194f:	83 f8 40             	cmp    $0x40,%eax$/;"	l
ffff800000101952	kernel.asm	/^ffff800000101952:	0f 85 ee 04 00 00    	jne    ffff800000101e46 <exec+0x5af>$/;"	l
ffff800000101958	kernel.asm	/^ffff800000101958:	8b 85 50 fe ff ff    	mov    -0x1b0(%rbp),%eax$/;"	l
ffff80000010195e	kernel.asm	/^ffff80000010195e:	3d 7f 45 4c 46       	cmp    $0x464c457f,%eax$/;"	l
ffff800000101963	kernel.asm	/^ffff800000101963:	0f 85 e0 04 00 00    	jne    ffff800000101e49 <exec+0x5b2>$/;"	l
ffff800000101969	kernel.asm	/^ffff800000101969:	48 b8 5c b6 10 00 00 	movabs $0xffff80000010b65c,%rax$/;"	l
ffff800000101970	kernel.asm	/^ffff800000101970:	80 ff ff $/;"	l
ffff800000101973	kernel.asm	/^ffff800000101973:	ff d0                	callq  *%rax$/;"	l
ffff800000101975	kernel.asm	/^ffff800000101975:	48 89 45 c0          	mov    %rax,-0x40(%rbp)$/;"	l
ffff800000101979	kernel.asm	/^ffff800000101979:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)$/;"	l
ffff80000010197e	kernel.asm	/^ffff80000010197e:	0f 84 c8 04 00 00    	je     ffff800000101e4c <exec+0x5b5>$/;"	l
ffff800000101984	kernel.asm	/^ffff800000101984:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)$/;"	l
ffff80000010198b	kernel.asm	/^ffff80000010198b:	00 $/;"	l
ffff80000010198c	kernel.asm	/^ffff80000010198c:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)$/;"	l
ffff800000101993	kernel.asm	/^ffff800000101993:	48 8b 85 70 fe ff ff 	mov    -0x190(%rbp),%rax$/;"	l
ffff80000010199a	kernel.asm	/^ffff80000010199a:	89 45 e8             	mov    %eax,-0x18(%rbp)$/;"	l
ffff80000010199d	kernel.asm	/^ffff80000010199d:	e9 13 01 00 00       	jmpq   ffff800000101ab5 <exec+0x21e>$/;"	l
ffff8000001019a2	kernel.asm	/^ffff8000001019a2:	8b 55 e8             	mov    -0x18(%rbp),%edx$/;"	l
ffff8000001019a5	kernel.asm	/^ffff8000001019a5:	48 8d b5 10 fe ff ff 	lea    -0x1f0(%rbp),%rsi$/;"	l
ffff8000001019ac	kernel.asm	/^ffff8000001019ac:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
ffff8000001019b0	kernel.asm	/^ffff8000001019b0:	b9 38 00 00 00       	mov    $0x38,%ecx$/;"	l
ffff8000001019b5	kernel.asm	/^ffff8000001019b5:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001019b8	kernel.asm	/^ffff8000001019b8:	48 b8 0d 33 10 00 00 	movabs $0xffff80000010330d,%rax$/;"	l
ffff8000001019bf	kernel.asm	/^ffff8000001019bf:	80 ff ff $/;"	l
ffff8000001019c2	kernel.asm	/^ffff8000001019c2:	ff d0                	callq  *%rax$/;"	l
ffff8000001019c4	kernel.asm	/^ffff8000001019c4:	83 f8 38             	cmp    $0x38,%eax$/;"	l
ffff8000001019c7	kernel.asm	/^ffff8000001019c7:	0f 85 82 04 00 00    	jne    ffff800000101e4f <exec+0x5b8>$/;"	l
ffff8000001019cd	kernel.asm	/^ffff8000001019cd:	8b 85 10 fe ff ff    	mov    -0x1f0(%rbp),%eax$/;"	l
ffff8000001019d3	kernel.asm	/^ffff8000001019d3:	83 f8 01             	cmp    $0x1,%eax$/;"	l
ffff8000001019d6	kernel.asm	/^ffff8000001019d6:	0f 85 cb 00 00 00    	jne    ffff800000101aa7 <exec+0x210>$/;"	l
ffff8000001019dc	kernel.asm	/^ffff8000001019dc:	48 8b 95 38 fe ff ff 	mov    -0x1c8(%rbp),%rdx$/;"	l
ffff8000001019e3	kernel.asm	/^ffff8000001019e3:	48 8b 85 30 fe ff ff 	mov    -0x1d0(%rbp),%rax$/;"	l
ffff8000001019ea	kernel.asm	/^ffff8000001019ea:	48 39 c2             	cmp    %rax,%rdx$/;"	l
ffff8000001019ed	kernel.asm	/^ffff8000001019ed:	0f 82 5f 04 00 00    	jb     ffff800000101e52 <exec+0x5bb>$/;"	l
ffff8000001019f3	kernel.asm	/^ffff8000001019f3:	48 8b 95 20 fe ff ff 	mov    -0x1e0(%rbp),%rdx$/;"	l
ffff8000001019fa	kernel.asm	/^ffff8000001019fa:	48 8b 85 38 fe ff ff 	mov    -0x1c8(%rbp),%rax$/;"	l
ffff800000101a01	kernel.asm	/^ffff800000101a01:	48 01 c2             	add    %rax,%rdx$/;"	l
ffff800000101a04	kernel.asm	/^ffff800000101a04:	48 8b 85 20 fe ff ff 	mov    -0x1e0(%rbp),%rax$/;"	l
ffff800000101a0b	kernel.asm	/^ffff800000101a0b:	48 39 c2             	cmp    %rax,%rdx$/;"	l
ffff800000101a0e	kernel.asm	/^ffff800000101a0e:	0f 82 41 04 00 00    	jb     ffff800000101e55 <exec+0x5be>$/;"	l
ffff800000101a14	kernel.asm	/^ffff800000101a14:	48 8b 85 20 fe ff ff 	mov    -0x1e0(%rbp),%rax$/;"	l
ffff800000101a1b	kernel.asm	/^ffff800000101a1b:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000101a1d	kernel.asm	/^ffff800000101a1d:	48 8b 85 38 fe ff ff 	mov    -0x1c8(%rbp),%rax$/;"	l
ffff800000101a24	kernel.asm	/^ffff800000101a24:	01 c2                	add    %eax,%edx$/;"	l
ffff800000101a26	kernel.asm	/^ffff800000101a26:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff800000101a2a	kernel.asm	/^ffff800000101a2a:	89 c1                	mov    %eax,%ecx$/;"	l
ffff800000101a2c	kernel.asm	/^ffff800000101a2c:	48 8b 45 c0          	mov    -0x40(%rbp),%rax$/;"	l
ffff800000101a30	kernel.asm	/^ffff800000101a30:	89 ce                	mov    %ecx,%esi$/;"	l
ffff800000101a32	kernel.asm	/^ffff800000101a32:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000101a35	kernel.asm	/^ffff800000101a35:	48 b8 b4 bd 10 00 00 	movabs $0xffff80000010bdb4,%rax$/;"	l
ffff800000101a3c	kernel.asm	/^ffff800000101a3c:	80 ff ff $/;"	l
ffff800000101a3f	kernel.asm	/^ffff800000101a3f:	ff d0                	callq  *%rax$/;"	l
ffff800000101a41	kernel.asm	/^ffff800000101a41:	48 98                	cltq   $/;"	l
ffff800000101a43	kernel.asm	/^ffff800000101a43:	48 89 45 d8          	mov    %rax,-0x28(%rbp)$/;"	l
ffff800000101a47	kernel.asm	/^ffff800000101a47:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)$/;"	l
ffff800000101a4c	kernel.asm	/^ffff800000101a4c:	0f 84 06 04 00 00    	je     ffff800000101e58 <exec+0x5c1>$/;"	l
ffff800000101a52	kernel.asm	/^ffff800000101a52:	48 8b 85 20 fe ff ff 	mov    -0x1e0(%rbp),%rax$/;"	l
ffff800000101a59	kernel.asm	/^ffff800000101a59:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
ffff800000101a5e	kernel.asm	/^ffff800000101a5e:	48 85 c0             	test   %rax,%rax$/;"	l
ffff800000101a61	kernel.asm	/^ffff800000101a61:	0f 85 f4 03 00 00    	jne    ffff800000101e5b <exec+0x5c4>$/;"	l
ffff800000101a67	kernel.asm	/^ffff800000101a67:	48 8b 85 30 fe ff ff 	mov    -0x1d0(%rbp),%rax$/;"	l
ffff800000101a6e	kernel.asm	/^ffff800000101a6e:	89 c7                	mov    %eax,%edi$/;"	l
ffff800000101a70	kernel.asm	/^ffff800000101a70:	48 8b 85 18 fe ff ff 	mov    -0x1e8(%rbp),%rax$/;"	l
ffff800000101a77	kernel.asm	/^ffff800000101a77:	89 c1                	mov    %eax,%ecx$/;"	l
ffff800000101a79	kernel.asm	/^ffff800000101a79:	48 8b 85 20 fe ff ff 	mov    -0x1e0(%rbp),%rax$/;"	l
ffff800000101a80	kernel.asm	/^ffff800000101a80:	48 89 c6             	mov    %rax,%rsi$/;"	l
ffff800000101a83	kernel.asm	/^ffff800000101a83:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx$/;"	l
ffff800000101a87	kernel.asm	/^ffff800000101a87:	48 8b 45 c0          	mov    -0x40(%rbp),%rax$/;"	l
ffff800000101a8b	kernel.asm	/^ffff800000101a8b:	41 89 f8             	mov    %edi,%r8d$/;"	l
ffff800000101a8e	kernel.asm	/^ffff800000101a8e:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000101a91	kernel.asm	/^ffff800000101a91:	48 b8 92 bc 10 00 00 	movabs $0xffff80000010bc92,%rax$/;"	l
ffff800000101a98	kernel.asm	/^ffff800000101a98:	80 ff ff $/;"	l
ffff800000101a9b	kernel.asm	/^ffff800000101a9b:	ff d0                	callq  *%rax$/;"	l
ffff800000101a9d	kernel.asm	/^ffff800000101a9d:	85 c0                	test   %eax,%eax$/;"	l
ffff800000101a9f	kernel.asm	/^ffff800000101a9f:	0f 88 b9 03 00 00    	js     ffff800000101e5e <exec+0x5c7>$/;"	l
ffff800000101aa5	kernel.asm	/^ffff800000101aa5:	eb 01                	jmp    ffff800000101aa8 <exec+0x211>$/;"	l
ffff800000101aa7	kernel.asm	/^ffff800000101aa7:	90                   	nop$/;"	l
ffff800000101aa8	kernel.asm	/^ffff800000101aa8:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)$/;"	l
ffff800000101aac	kernel.asm	/^ffff800000101aac:	8b 45 e8             	mov    -0x18(%rbp),%eax$/;"	l
ffff800000101aaf	kernel.asm	/^ffff800000101aaf:	83 c0 38             	add    $0x38,%eax$/;"	l
ffff800000101ab2	kernel.asm	/^ffff800000101ab2:	89 45 e8             	mov    %eax,-0x18(%rbp)$/;"	l
ffff800000101ab5	kernel.asm	/^ffff800000101ab5:	0f b7 85 88 fe ff ff 	movzwl -0x178(%rbp),%eax$/;"	l
ffff800000101abc	kernel.asm	/^ffff800000101abc:	0f b7 c0             	movzwl %ax,%eax$/;"	l
ffff800000101abf	kernel.asm	/^ffff800000101abf:	3b 45 ec             	cmp    -0x14(%rbp),%eax$/;"	l
ffff800000101ac2	kernel.asm	/^ffff800000101ac2:	0f 8f da fe ff ff    	jg     ffff8000001019a2 <exec+0x10b>$/;"	l
ffff800000101ac8	kernel.asm	/^ffff800000101ac8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
ffff800000101acc	kernel.asm	/^ffff800000101acc:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000101acf	kernel.asm	/^ffff800000101acf:	48 b8 9d 2f 10 00 00 	movabs $0xffff800000102f9d,%rax$/;"	l
ffff800000101ad6	kernel.asm	/^ffff800000101ad6:	80 ff ff $/;"	l
ffff800000101ad9	kernel.asm	/^ffff800000101ad9:	ff d0                	callq  *%rax$/;"	l
ffff800000101adb	kernel.asm	/^ffff800000101adb:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000101ae0	kernel.asm	/^ffff800000101ae0:	48 ba a6 53 10 00 00 	movabs $0xffff8000001053a6,%rdx$/;"	l
ffff800000101ae7	kernel.asm	/^ffff800000101ae7:	80 ff ff $/;"	l
ffff800000101aea	kernel.asm	/^ffff800000101aea:	ff d2                	callq  *%rdx$/;"	l
ffff800000101aec	kernel.asm	/^ffff800000101aec:	48 c7 45 c8 00 00 00 	movq   $0x0,-0x38(%rbp)$/;"	l
ffff800000101af3	kernel.asm	/^ffff800000101af3:	00 $/;"	l
ffff800000101af4	kernel.asm	/^ffff800000101af4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff800000101af8	kernel.asm	/^ffff800000101af8:	48 05 ff 0f 00 00    	add    $0xfff,%rax$/;"	l
ffff800000101afe	kernel.asm	/^ffff800000101afe:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax$/;"	l
ffff800000101b04	kernel.asm	/^ffff800000101b04:	48 89 45 d8          	mov    %rax,-0x28(%rbp)$/;"	l
ffff800000101b08	kernel.asm	/^ffff800000101b08:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff800000101b0c	kernel.asm	/^ffff800000101b0c:	8d 90 00 20 00 00    	lea    0x2000(%rax),%edx$/;"	l
ffff800000101b12	kernel.asm	/^ffff800000101b12:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff800000101b16	kernel.asm	/^ffff800000101b16:	89 c1                	mov    %eax,%ecx$/;"	l
ffff800000101b18	kernel.asm	/^ffff800000101b18:	48 8b 45 c0          	mov    -0x40(%rbp),%rax$/;"	l
ffff800000101b1c	kernel.asm	/^ffff800000101b1c:	89 ce                	mov    %ecx,%esi$/;"	l
ffff800000101b1e	kernel.asm	/^ffff800000101b1e:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000101b21	kernel.asm	/^ffff800000101b21:	48 b8 b4 bd 10 00 00 	movabs $0xffff80000010bdb4,%rax$/;"	l
ffff800000101b28	kernel.asm	/^ffff800000101b28:	80 ff ff $/;"	l
ffff800000101b2b	kernel.asm	/^ffff800000101b2b:	ff d0                	callq  *%rax$/;"	l
ffff800000101b2d	kernel.asm	/^ffff800000101b2d:	48 98                	cltq   $/;"	l
ffff800000101b2f	kernel.asm	/^ffff800000101b2f:	48 89 45 d8          	mov    %rax,-0x28(%rbp)$/;"	l
ffff800000101b33	kernel.asm	/^ffff800000101b33:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)$/;"	l
ffff800000101b38	kernel.asm	/^ffff800000101b38:	0f 84 23 03 00 00    	je     ffff800000101e61 <exec+0x5ca>$/;"	l
ffff800000101b3e	kernel.asm	/^ffff800000101b3e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff800000101b42	kernel.asm	/^ffff800000101b42:	48 2d 00 20 00 00    	sub    $0x2000,%rax$/;"	l
ffff800000101b48	kernel.asm	/^ffff800000101b48:	48 89 c2             	mov    %rax,%rdx$/;"	l
ffff800000101b4b	kernel.asm	/^ffff800000101b4b:	48 8b 45 c0          	mov    -0x40(%rbp),%rax$/;"	l
ffff800000101b4f	kernel.asm	/^ffff800000101b4f:	48 89 d6             	mov    %rdx,%rsi$/;"	l
ffff800000101b52	kernel.asm	/^ffff800000101b52:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000101b55	kernel.asm	/^ffff800000101b55:	48 b8 32 c2 10 00 00 	movabs $0xffff80000010c232,%rax$/;"	l
ffff800000101b5c	kernel.asm	/^ffff800000101b5c:	80 ff ff $/;"	l
ffff800000101b5f	kernel.asm	/^ffff800000101b5f:	ff d0                	callq  *%rax$/;"	l
ffff800000101b61	kernel.asm	/^ffff800000101b61:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff800000101b65	kernel.asm	/^ffff800000101b65:	48 89 45 d0          	mov    %rax,-0x30(%rbp)$/;"	l
ffff800000101b69	kernel.asm	/^ffff800000101b69:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)$/;"	l
ffff800000101b70	kernel.asm	/^ffff800000101b70:	00 $/;"	l
ffff800000101b71	kernel.asm	/^ffff800000101b71:	e9 ca 00 00 00       	jmpq   ffff800000101c40 <exec+0x3a9>$/;"	l
ffff800000101b76	kernel.asm	/^ffff800000101b76:	48 83 7d e0 1f       	cmpq   $0x1f,-0x20(%rbp)$/;"	l
ffff800000101b7b	kernel.asm	/^ffff800000101b7b:	0f 87 e3 02 00 00    	ja     ffff800000101e64 <exec+0x5cd>$/;"	l
ffff800000101b81	kernel.asm	/^ffff800000101b81:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff800000101b85	kernel.asm	/^ffff800000101b85:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx$/;"	l
ffff800000101b8c	kernel.asm	/^ffff800000101b8c:	00 $/;"	l
ffff800000101b8d	kernel.asm	/^ffff800000101b8d:	48 8b 85 00 fe ff ff 	mov    -0x200(%rbp),%rax$/;"	l
ffff800000101b94	kernel.asm	/^ffff800000101b94:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff800000101b97	kernel.asm	/^ffff800000101b97:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff800000101b9a	kernel.asm	/^ffff800000101b9a:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000101b9d	kernel.asm	/^ffff800000101b9d:	48 b8 84 7e 10 00 00 	movabs $0xffff800000107e84,%rax$/;"	l
ffff800000101ba4	kernel.asm	/^ffff800000101ba4:	80 ff ff $/;"	l
ffff800000101ba7	kernel.asm	/^ffff800000101ba7:	ff d0                	callq  *%rax$/;"	l
ffff800000101ba9	kernel.asm	/^ffff800000101ba9:	83 c0 01             	add    $0x1,%eax$/;"	l
ffff800000101bac	kernel.asm	/^ffff800000101bac:	48 98                	cltq   $/;"	l
ffff800000101bae	kernel.asm	/^ffff800000101bae:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx$/;"	l
ffff800000101bb2	kernel.asm	/^ffff800000101bb2:	48 29 c2             	sub    %rax,%rdx$/;"	l
ffff800000101bb5	kernel.asm	/^ffff800000101bb5:	48 89 d0             	mov    %rdx,%rax$/;"	l
ffff800000101bb8	kernel.asm	/^ffff800000101bb8:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax$/;"	l
ffff800000101bbc	kernel.asm	/^ffff800000101bbc:	48 89 45 d0          	mov    %rax,-0x30(%rbp)$/;"	l
ffff800000101bc0	kernel.asm	/^ffff800000101bc0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff800000101bc4	kernel.asm	/^ffff800000101bc4:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx$/;"	l
ffff800000101bcb	kernel.asm	/^ffff800000101bcb:	00 $/;"	l
ffff800000101bcc	kernel.asm	/^ffff800000101bcc:	48 8b 85 00 fe ff ff 	mov    -0x200(%rbp),%rax$/;"	l
ffff800000101bd3	kernel.asm	/^ffff800000101bd3:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff800000101bd6	kernel.asm	/^ffff800000101bd6:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff800000101bd9	kernel.asm	/^ffff800000101bd9:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000101bdc	kernel.asm	/^ffff800000101bdc:	48 b8 84 7e 10 00 00 	movabs $0xffff800000107e84,%rax$/;"	l
ffff800000101be3	kernel.asm	/^ffff800000101be3:	80 ff ff $/;"	l
ffff800000101be6	kernel.asm	/^ffff800000101be6:	ff d0                	callq  *%rax$/;"	l
ffff800000101be8	kernel.asm	/^ffff800000101be8:	83 c0 01             	add    $0x1,%eax$/;"	l
ffff800000101beb	kernel.asm	/^ffff800000101beb:	89 c1                	mov    %eax,%ecx$/;"	l
ffff800000101bed	kernel.asm	/^ffff800000101bed:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff800000101bf1	kernel.asm	/^ffff800000101bf1:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx$/;"	l
ffff800000101bf8	kernel.asm	/^ffff800000101bf8:	00 $/;"	l
ffff800000101bf9	kernel.asm	/^ffff800000101bf9:	48 8b 85 00 fe ff ff 	mov    -0x200(%rbp),%rax$/;"	l
ffff800000101c00	kernel.asm	/^ffff800000101c00:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff800000101c03	kernel.asm	/^ffff800000101c03:	48 8b 10             	mov    (%rax),%rdx$/;"	l
ffff800000101c06	kernel.asm	/^ffff800000101c06:	48 8b 45 d0          	mov    -0x30(%rbp),%rax$/;"	l
ffff800000101c0a	kernel.asm	/^ffff800000101c0a:	89 c6                	mov    %eax,%esi$/;"	l
ffff800000101c0c	kernel.asm	/^ffff800000101c0c:	48 8b 45 c0          	mov    -0x40(%rbp),%rax$/;"	l
ffff800000101c10	kernel.asm	/^ffff800000101c10:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000101c13	kernel.asm	/^ffff800000101c13:	48 b8 9b c4 10 00 00 	movabs $0xffff80000010c49b,%rax$/;"	l
ffff800000101c1a	kernel.asm	/^ffff800000101c1a:	80 ff ff $/;"	l
ffff800000101c1d	kernel.asm	/^ffff800000101c1d:	ff d0                	callq  *%rax$/;"	l
ffff800000101c1f	kernel.asm	/^ffff800000101c1f:	85 c0                	test   %eax,%eax$/;"	l
ffff800000101c21	kernel.asm	/^ffff800000101c21:	0f 88 40 02 00 00    	js     ffff800000101e67 <exec+0x5d0>$/;"	l
ffff800000101c27	kernel.asm	/^ffff800000101c27:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff800000101c2b	kernel.asm	/^ffff800000101c2b:	48 8d 50 03          	lea    0x3(%rax),%rdx$/;"	l
ffff800000101c2f	kernel.asm	/^ffff800000101c2f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax$/;"	l
ffff800000101c33	kernel.asm	/^ffff800000101c33:	48 89 84 d5 90 fe ff 	mov    %rax,-0x170(%rbp,%rdx,8)$/;"	l
ffff800000101c3a	kernel.asm	/^ffff800000101c3a:	ff $/;"	l
ffff800000101c3b	kernel.asm	/^ffff800000101c3b:	48 83 45 e0 01       	addq   $0x1,-0x20(%rbp)$/;"	l
ffff800000101c40	kernel.asm	/^ffff800000101c40:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff800000101c44	kernel.asm	/^ffff800000101c44:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx$/;"	l
ffff800000101c4b	kernel.asm	/^ffff800000101c4b:	00 $/;"	l
ffff800000101c4c	kernel.asm	/^ffff800000101c4c:	48 8b 85 00 fe ff ff 	mov    -0x200(%rbp),%rax$/;"	l
ffff800000101c53	kernel.asm	/^ffff800000101c53:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff800000101c56	kernel.asm	/^ffff800000101c56:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff800000101c59	kernel.asm	/^ffff800000101c59:	48 85 c0             	test   %rax,%rax$/;"	l
ffff800000101c5c	kernel.asm	/^ffff800000101c5c:	0f 85 14 ff ff ff    	jne    ffff800000101b76 <exec+0x2df>$/;"	l
ffff800000101c62	kernel.asm	/^ffff800000101c62:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff800000101c66	kernel.asm	/^ffff800000101c66:	48 83 c0 03          	add    $0x3,%rax$/;"	l
ffff800000101c6a	kernel.asm	/^ffff800000101c6a:	48 c7 84 c5 90 fe ff 	movq   $0x0,-0x170(%rbp,%rax,8)$/;"	l
ffff800000101c71	kernel.asm	/^ffff800000101c71:	ff 00 00 00 00 $/;"	l
ffff800000101c76	kernel.asm	/^ffff800000101c76:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff800000101c7b	kernel.asm	/^ffff800000101c7b:	48 89 85 90 fe ff ff 	mov    %rax,-0x170(%rbp)$/;"	l
ffff800000101c82	kernel.asm	/^ffff800000101c82:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff800000101c86	kernel.asm	/^ffff800000101c86:	48 89 85 98 fe ff ff 	mov    %rax,-0x168(%rbp)$/;"	l
ffff800000101c8d	kernel.asm	/^ffff800000101c8d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff800000101c91	kernel.asm	/^ffff800000101c91:	48 83 c0 01          	add    $0x1,%rax$/;"	l
ffff800000101c95	kernel.asm	/^ffff800000101c95:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx$/;"	l
ffff800000101c9c	kernel.asm	/^ffff800000101c9c:	00 $/;"	l
ffff800000101c9d	kernel.asm	/^ffff800000101c9d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax$/;"	l
ffff800000101ca1	kernel.asm	/^ffff800000101ca1:	48 29 d0             	sub    %rdx,%rax$/;"	l
ffff800000101ca4	kernel.asm	/^ffff800000101ca4:	48 89 85 a0 fe ff ff 	mov    %rax,-0x160(%rbp)$/;"	l
ffff800000101cab	kernel.asm	/^ffff800000101cab:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000101cb2	kernel.asm	/^ffff800000101cb2:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000101cb6	kernel.asm	/^ffff800000101cb6:	48 8b 40 28          	mov    0x28(%rax),%rax$/;"	l
ffff800000101cba	kernel.asm	/^ffff800000101cba:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx$/;"	l
ffff800000101cbe	kernel.asm	/^ffff800000101cbe:	48 89 50 30          	mov    %rdx,0x30(%rax)$/;"	l
ffff800000101cc2	kernel.asm	/^ffff800000101cc2:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000101cc9	kernel.asm	/^ffff800000101cc9:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000101ccd	kernel.asm	/^ffff800000101ccd:	48 8b 40 28          	mov    0x28(%rax),%rax$/;"	l
ffff800000101cd1	kernel.asm	/^ffff800000101cd1:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx$/;"	l
ffff800000101cd5	kernel.asm	/^ffff800000101cd5:	48 83 c2 01          	add    $0x1,%rdx$/;"	l
ffff800000101cd9	kernel.asm	/^ffff800000101cd9:	48 8d 0c d5 00 00 00 	lea    0x0(,%rdx,8),%rcx$/;"	l
ffff800000101ce0	kernel.asm	/^ffff800000101ce0:	00 $/;"	l
ffff800000101ce1	kernel.asm	/^ffff800000101ce1:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx$/;"	l
ffff800000101ce5	kernel.asm	/^ffff800000101ce5:	48 29 ca             	sub    %rcx,%rdx$/;"	l
ffff800000101ce8	kernel.asm	/^ffff800000101ce8:	48 89 50 28          	mov    %rdx,0x28(%rax)$/;"	l
ffff800000101cec	kernel.asm	/^ffff800000101cec:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff800000101cf0	kernel.asm	/^ffff800000101cf0:	48 83 c0 04          	add    $0x4,%rax$/;"	l
ffff800000101cf4	kernel.asm	/^ffff800000101cf4:	48 c1 e0 03          	shl    $0x3,%rax$/;"	l
ffff800000101cf8	kernel.asm	/^ffff800000101cf8:	48 29 45 d0          	sub    %rax,-0x30(%rbp)$/;"	l
ffff800000101cfc	kernel.asm	/^ffff800000101cfc:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff800000101d00	kernel.asm	/^ffff800000101d00:	48 83 c0 04          	add    $0x4,%rax$/;"	l
ffff800000101d04	kernel.asm	/^ffff800000101d04:	8d 0c c5 00 00 00 00 	lea    0x0(,%rax,8),%ecx$/;"	l
ffff800000101d0b	kernel.asm	/^ffff800000101d0b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax$/;"	l
ffff800000101d0f	kernel.asm	/^ffff800000101d0f:	89 c6                	mov    %eax,%esi$/;"	l
ffff800000101d11	kernel.asm	/^ffff800000101d11:	48 8d 95 90 fe ff ff 	lea    -0x170(%rbp),%rdx$/;"	l
ffff800000101d18	kernel.asm	/^ffff800000101d18:	48 8b 45 c0          	mov    -0x40(%rbp),%rax$/;"	l
ffff800000101d1c	kernel.asm	/^ffff800000101d1c:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000101d1f	kernel.asm	/^ffff800000101d1f:	48 b8 9b c4 10 00 00 	movabs $0xffff80000010c49b,%rax$/;"	l
ffff800000101d26	kernel.asm	/^ffff800000101d26:	80 ff ff $/;"	l
ffff800000101d29	kernel.asm	/^ffff800000101d29:	ff d0                	callq  *%rax$/;"	l
ffff800000101d2b	kernel.asm	/^ffff800000101d2b:	85 c0                	test   %eax,%eax$/;"	l
ffff800000101d2d	kernel.asm	/^ffff800000101d2d:	0f 88 37 01 00 00    	js     ffff800000101e6a <exec+0x5d3>$/;"	l
ffff800000101d33	kernel.asm	/^ffff800000101d33:	48 8b 85 08 fe ff ff 	mov    -0x1f8(%rbp),%rax$/;"	l
ffff800000101d3a	kernel.asm	/^ffff800000101d3a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff800000101d3e	kernel.asm	/^ffff800000101d3e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000101d42	kernel.asm	/^ffff800000101d42:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ffff800000101d46	kernel.asm	/^ffff800000101d46:	eb 1c                	jmp    ffff800000101d64 <exec+0x4cd>$/;"	l
ffff800000101d48	kernel.asm	/^ffff800000101d48:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000101d4c	kernel.asm	/^ffff800000101d4c:	0f b6 00             	movzbl (%rax),%eax$/;"	l
ffff800000101d4f	kernel.asm	/^ffff800000101d4f:	3c 2f                	cmp    $0x2f,%al$/;"	l
ffff800000101d51	kernel.asm	/^ffff800000101d51:	75 0c                	jne    ffff800000101d5f <exec+0x4c8>$/;"	l
ffff800000101d53	kernel.asm	/^ffff800000101d53:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000101d57	kernel.asm	/^ffff800000101d57:	48 83 c0 01          	add    $0x1,%rax$/;"	l
ffff800000101d5b	kernel.asm	/^ffff800000101d5b:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ffff800000101d5f	kernel.asm	/^ffff800000101d5f:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)$/;"	l
ffff800000101d64	kernel.asm	/^ffff800000101d64:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000101d68	kernel.asm	/^ffff800000101d68:	0f b6 00             	movzbl (%rax),%eax$/;"	l
ffff800000101d6b	kernel.asm	/^ffff800000101d6b:	84 c0                	test   %al,%al$/;"	l
ffff800000101d6d	kernel.asm	/^ffff800000101d6d:	75 d9                	jne    ffff800000101d48 <exec+0x4b1>$/;"	l
ffff800000101d6f	kernel.asm	/^ffff800000101d6f:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000101d76	kernel.asm	/^ffff800000101d76:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000101d7a	kernel.asm	/^ffff800000101d7a:	48 8d 88 d0 00 00 00 	lea    0xd0(%rax),%rcx$/;"	l
ffff800000101d81	kernel.asm	/^ffff800000101d81:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000101d85	kernel.asm	/^ffff800000101d85:	ba 10 00 00 00       	mov    $0x10,%edx$/;"	l
ffff800000101d8a	kernel.asm	/^ffff800000101d8a:	48 89 c6             	mov    %rax,%rsi$/;"	l
ffff800000101d8d	kernel.asm	/^ffff800000101d8d:	48 89 cf             	mov    %rcx,%rdi$/;"	l
ffff800000101d90	kernel.asm	/^ffff800000101d90:	48 b8 22 7e 10 00 00 	movabs $0xffff800000107e22,%rax$/;"	l
ffff800000101d97	kernel.asm	/^ffff800000101d97:	80 ff ff $/;"	l
ffff800000101d9a	kernel.asm	/^ffff800000101d9a:	ff d0                	callq  *%rax$/;"	l
ffff800000101d9c	kernel.asm	/^ffff800000101d9c:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000101da3	kernel.asm	/^ffff800000101da3:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000101da7	kernel.asm	/^ffff800000101da7:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx$/;"	l
ffff800000101dab	kernel.asm	/^ffff800000101dab:	48 89 50 08          	mov    %rdx,0x8(%rax)$/;"	l
ffff800000101daf	kernel.asm	/^ffff800000101daf:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000101db6	kernel.asm	/^ffff800000101db6:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000101dba	kernel.asm	/^ffff800000101dba:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx$/;"	l
ffff800000101dbe	kernel.asm	/^ffff800000101dbe:	48 89 10             	mov    %rdx,(%rax)$/;"	l
ffff800000101dc1	kernel.asm	/^ffff800000101dc1:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000101dc8	kernel.asm	/^ffff800000101dc8:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000101dcc	kernel.asm	/^ffff800000101dcc:	48 8b 40 28          	mov    0x28(%rax),%rax$/;"	l
ffff800000101dd0	kernel.asm	/^ffff800000101dd0:	48 8b 95 68 fe ff ff 	mov    -0x198(%rbp),%rdx$/;"	l
ffff800000101dd7	kernel.asm	/^ffff800000101dd7:	48 89 90 88 00 00 00 	mov    %rdx,0x88(%rax)$/;"	l
ffff800000101dde	kernel.asm	/^ffff800000101dde:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000101de5	kernel.asm	/^ffff800000101de5:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000101de9	kernel.asm	/^ffff800000101de9:	48 8b 40 28          	mov    0x28(%rax),%rax$/;"	l
ffff800000101ded	kernel.asm	/^ffff800000101ded:	48 8b 95 68 fe ff ff 	mov    -0x198(%rbp),%rdx$/;"	l
ffff800000101df4	kernel.asm	/^ffff800000101df4:	48 89 50 10          	mov    %rdx,0x10(%rax)$/;"	l
ffff800000101df8	kernel.asm	/^ffff800000101df8:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000101dff	kernel.asm	/^ffff800000101dff:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000101e03	kernel.asm	/^ffff800000101e03:	48 8b 40 28          	mov    0x28(%rax),%rax$/;"	l
ffff800000101e07	kernel.asm	/^ffff800000101e07:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx$/;"	l
ffff800000101e0b	kernel.asm	/^ffff800000101e0b:	48 89 90 a0 00 00 00 	mov    %rdx,0xa0(%rax)$/;"	l
ffff800000101e12	kernel.asm	/^ffff800000101e12:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000101e19	kernel.asm	/^ffff800000101e19:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000101e1d	kernel.asm	/^ffff800000101e1d:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000101e20	kernel.asm	/^ffff800000101e20:	48 b8 02 b8 10 00 00 	movabs $0xffff80000010b802,%rax$/;"	l
ffff800000101e27	kernel.asm	/^ffff800000101e27:	80 ff ff $/;"	l
ffff800000101e2a	kernel.asm	/^ffff800000101e2a:	ff d0                	callq  *%rax$/;"	l
ffff800000101e2c	kernel.asm	/^ffff800000101e2c:	48 8b 45 b8          	mov    -0x48(%rbp),%rax$/;"	l
ffff800000101e30	kernel.asm	/^ffff800000101e30:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000101e33	kernel.asm	/^ffff800000101e33:	48 b8 fe bf 10 00 00 	movabs $0xffff80000010bffe,%rax$/;"	l
ffff800000101e3a	kernel.asm	/^ffff800000101e3a:	80 ff ff $/;"	l
ffff800000101e3d	kernel.asm	/^ffff800000101e3d:	ff d0                	callq  *%rax$/;"	l
ffff800000101e3f	kernel.asm	/^ffff800000101e3f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000101e44	kernel.asm	/^ffff800000101e44:	eb 6f                	jmp    ffff800000101eb5 <exec+0x61e>$/;"	l
ffff800000101e46	kernel.asm	/^ffff800000101e46:	90                   	nop$/;"	l
ffff800000101e47	kernel.asm	/^ffff800000101e47:	eb 22                	jmp    ffff800000101e6b <exec+0x5d4>$/;"	l
ffff800000101e49	kernel.asm	/^ffff800000101e49:	90                   	nop$/;"	l
ffff800000101e4a	kernel.asm	/^ffff800000101e4a:	eb 1f                	jmp    ffff800000101e6b <exec+0x5d4>$/;"	l
ffff800000101e4c	kernel.asm	/^ffff800000101e4c:	90                   	nop$/;"	l
ffff800000101e4d	kernel.asm	/^ffff800000101e4d:	eb 1c                	jmp    ffff800000101e6b <exec+0x5d4>$/;"	l
ffff800000101e4f	kernel.asm	/^ffff800000101e4f:	90                   	nop$/;"	l
ffff800000101e50	kernel.asm	/^ffff800000101e50:	eb 19                	jmp    ffff800000101e6b <exec+0x5d4>$/;"	l
ffff800000101e52	kernel.asm	/^ffff800000101e52:	90                   	nop$/;"	l
ffff800000101e53	kernel.asm	/^ffff800000101e53:	eb 16                	jmp    ffff800000101e6b <exec+0x5d4>$/;"	l
ffff800000101e55	kernel.asm	/^ffff800000101e55:	90                   	nop$/;"	l
ffff800000101e56	kernel.asm	/^ffff800000101e56:	eb 13                	jmp    ffff800000101e6b <exec+0x5d4>$/;"	l
ffff800000101e58	kernel.asm	/^ffff800000101e58:	90                   	nop$/;"	l
ffff800000101e59	kernel.asm	/^ffff800000101e59:	eb 10                	jmp    ffff800000101e6b <exec+0x5d4>$/;"	l
ffff800000101e5b	kernel.asm	/^ffff800000101e5b:	90                   	nop$/;"	l
ffff800000101e5c	kernel.asm	/^ffff800000101e5c:	eb 0d                	jmp    ffff800000101e6b <exec+0x5d4>$/;"	l
ffff800000101e5e	kernel.asm	/^ffff800000101e5e:	90                   	nop$/;"	l
ffff800000101e5f	kernel.asm	/^ffff800000101e5f:	eb 0a                	jmp    ffff800000101e6b <exec+0x5d4>$/;"	l
ffff800000101e61	kernel.asm	/^ffff800000101e61:	90                   	nop$/;"	l
ffff800000101e62	kernel.asm	/^ffff800000101e62:	eb 07                	jmp    ffff800000101e6b <exec+0x5d4>$/;"	l
ffff800000101e64	kernel.asm	/^ffff800000101e64:	90                   	nop$/;"	l
ffff800000101e65	kernel.asm	/^ffff800000101e65:	eb 04                	jmp    ffff800000101e6b <exec+0x5d4>$/;"	l
ffff800000101e67	kernel.asm	/^ffff800000101e67:	90                   	nop$/;"	l
ffff800000101e68	kernel.asm	/^ffff800000101e68:	eb 01                	jmp    ffff800000101e6b <exec+0x5d4>$/;"	l
ffff800000101e6a	kernel.asm	/^ffff800000101e6a:	90                   	nop$/;"	l
ffff800000101e6b	kernel.asm	/^ffff800000101e6b:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)$/;"	l
ffff800000101e70	kernel.asm	/^ffff800000101e70:	74 13                	je     ffff800000101e85 <exec+0x5ee>$/;"	l
ffff800000101e72	kernel.asm	/^ffff800000101e72:	48 8b 45 c0          	mov    -0x40(%rbp),%rax$/;"	l
ffff800000101e76	kernel.asm	/^ffff800000101e76:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000101e79	kernel.asm	/^ffff800000101e79:	48 b8 fe bf 10 00 00 	movabs $0xffff80000010bffe,%rax$/;"	l
ffff800000101e80	kernel.asm	/^ffff800000101e80:	80 ff ff $/;"	l
ffff800000101e83	kernel.asm	/^ffff800000101e83:	ff d0                	callq  *%rax$/;"	l
ffff800000101e85	kernel.asm	/^ffff800000101e85:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)$/;"	l
ffff800000101e8a	kernel.asm	/^ffff800000101e8a:	74 24                	je     ffff800000101eb0 <exec+0x619>$/;"	l
ffff800000101e8c	kernel.asm	/^ffff800000101e8c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
ffff800000101e90	kernel.asm	/^ffff800000101e90:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000101e93	kernel.asm	/^ffff800000101e93:	48 b8 9d 2f 10 00 00 	movabs $0xffff800000102f9d,%rax$/;"	l
ffff800000101e9a	kernel.asm	/^ffff800000101e9a:	80 ff ff $/;"	l
ffff800000101e9d	kernel.asm	/^ffff800000101e9d:	ff d0                	callq  *%rax$/;"	l
ffff800000101e9f	kernel.asm	/^ffff800000101e9f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000101ea4	kernel.asm	/^ffff800000101ea4:	48 ba a6 53 10 00 00 	movabs $0xffff8000001053a6,%rdx$/;"	l
ffff800000101eab	kernel.asm	/^ffff800000101eab:	80 ff ff $/;"	l
ffff800000101eae	kernel.asm	/^ffff800000101eae:	ff d2                	callq  *%rdx$/;"	l
ffff800000101eb0	kernel.asm	/^ffff800000101eb0:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff800000101eb5	kernel.asm	/^ffff800000101eb5:	c9                   	leaveq $/;"	l
ffff800000101eb6	kernel.asm	/^ffff800000101eb6:	c3                   	retq   $/;"	l
ffff800000101eb7	kernel.asm	/^ffff800000101eb7 <fileinit>:$/;"	l
ffff800000101eb7	kernel.asm	/^ffff800000101eb7:	55                   	push   %rbp$/;"	l
ffff800000101eb8	kernel.asm	/^ffff800000101eb8:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000101ebb	kernel.asm	/^ffff800000101ebb:	48 be d0 d4 10 00 00 	movabs $0xffff80000010d4d0,%rsi$/;"	l
ffff800000101ec2	kernel.asm	/^ffff800000101ec2:	80 ff ff $/;"	l
ffff800000101ec5	kernel.asm	/^ffff800000101ec5:	48 bf 20 76 11 00 00 	movabs $0xffff800000117620,%rdi$/;"	l
ffff800000101ecc	kernel.asm	/^ffff800000101ecc:	80 ff ff $/;"	l
ffff800000101ecf	kernel.asm	/^ffff800000101ecf:	48 b8 a1 77 10 00 00 	movabs $0xffff8000001077a1,%rax$/;"	l
ffff800000101ed6	kernel.asm	/^ffff800000101ed6:	80 ff ff $/;"	l
ffff800000101ed9	kernel.asm	/^ffff800000101ed9:	ff d0                	callq  *%rax$/;"	l
ffff800000101edb	kernel.asm	/^ffff800000101edb:	90                   	nop$/;"	l
ffff800000101edc	kernel.asm	/^ffff800000101edc:	5d                   	pop    %rbp$/;"	l
ffff800000101edd	kernel.asm	/^ffff800000101edd:	c3                   	retq   $/;"	l
ffff800000101ede	kernel.asm	/^ffff800000101ede <filealloc>:$/;"	l
ffff800000101ede	kernel.asm	/^ffff800000101ede:	55                   	push   %rbp$/;"	l
ffff800000101edf	kernel.asm	/^ffff800000101edf:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000101ee2	kernel.asm	/^ffff800000101ee2:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff800000101ee6	kernel.asm	/^ffff800000101ee6:	48 bf 20 76 11 00 00 	movabs $0xffff800000117620,%rdi$/;"	l
ffff800000101eed	kernel.asm	/^ffff800000101eed:	80 ff ff $/;"	l
ffff800000101ef0	kernel.asm	/^ffff800000101ef0:	48 b8 d6 77 10 00 00 	movabs $0xffff8000001077d6,%rax$/;"	l
ffff800000101ef7	kernel.asm	/^ffff800000101ef7:	80 ff ff $/;"	l
ffff800000101efa	kernel.asm	/^ffff800000101efa:	ff d0                	callq  *%rax$/;"	l
ffff800000101efc	kernel.asm	/^ffff800000101efc:	48 b8 88 76 11 00 00 	movabs $0xffff800000117688,%rax$/;"	l
ffff800000101f03	kernel.asm	/^ffff800000101f03:	80 ff ff $/;"	l
ffff800000101f06	kernel.asm	/^ffff800000101f06:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff800000101f0a	kernel.asm	/^ffff800000101f0a:	eb 37                	jmp    ffff800000101f43 <filealloc+0x65>$/;"	l
ffff800000101f0c	kernel.asm	/^ffff800000101f0c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000101f10	kernel.asm	/^ffff800000101f10:	8b 40 04             	mov    0x4(%rax),%eax$/;"	l
ffff800000101f13	kernel.asm	/^ffff800000101f13:	85 c0                	test   %eax,%eax$/;"	l
ffff800000101f15	kernel.asm	/^ffff800000101f15:	75 27                	jne    ffff800000101f3e <filealloc+0x60>$/;"	l
ffff800000101f17	kernel.asm	/^ffff800000101f17:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000101f1b	kernel.asm	/^ffff800000101f1b:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%rax)$/;"	l
ffff800000101f22	kernel.asm	/^ffff800000101f22:	48 bf 20 76 11 00 00 	movabs $0xffff800000117620,%rdi$/;"	l
ffff800000101f29	kernel.asm	/^ffff800000101f29:	80 ff ff $/;"	l
ffff800000101f2c	kernel.asm	/^ffff800000101f2c:	48 b8 6f 78 10 00 00 	movabs $0xffff80000010786f,%rax$/;"	l
ffff800000101f33	kernel.asm	/^ffff800000101f33:	80 ff ff $/;"	l
ffff800000101f36	kernel.asm	/^ffff800000101f36:	ff d0                	callq  *%rax$/;"	l
ffff800000101f38	kernel.asm	/^ffff800000101f38:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000101f3c	kernel.asm	/^ffff800000101f3c:	eb 30                	jmp    ffff800000101f6e <filealloc+0x90>$/;"	l
ffff800000101f3e	kernel.asm	/^ffff800000101f3e:	48 83 45 f8 28       	addq   $0x28,-0x8(%rbp)$/;"	l
ffff800000101f43	kernel.asm	/^ffff800000101f43:	48 b8 28 86 11 00 00 	movabs $0xffff800000118628,%rax$/;"	l
ffff800000101f4a	kernel.asm	/^ffff800000101f4a:	80 ff ff $/;"	l
ffff800000101f4d	kernel.asm	/^ffff800000101f4d:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)$/;"	l
ffff800000101f51	kernel.asm	/^ffff800000101f51:	72 b9                	jb     ffff800000101f0c <filealloc+0x2e>$/;"	l
ffff800000101f53	kernel.asm	/^ffff800000101f53:	48 bf 20 76 11 00 00 	movabs $0xffff800000117620,%rdi$/;"	l
ffff800000101f5a	kernel.asm	/^ffff800000101f5a:	80 ff ff $/;"	l
ffff800000101f5d	kernel.asm	/^ffff800000101f5d:	48 b8 6f 78 10 00 00 	movabs $0xffff80000010786f,%rax$/;"	l
ffff800000101f64	kernel.asm	/^ffff800000101f64:	80 ff ff $/;"	l
ffff800000101f67	kernel.asm	/^ffff800000101f67:	ff d0                	callq  *%rax$/;"	l
ffff800000101f69	kernel.asm	/^ffff800000101f69:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000101f6e	kernel.asm	/^ffff800000101f6e:	c9                   	leaveq $/;"	l
ffff800000101f6f	kernel.asm	/^ffff800000101f6f:	c3                   	retq   $/;"	l
ffff800000101f70	kernel.asm	/^ffff800000101f70 <filedup>:$/;"	l
ffff800000101f70	kernel.asm	/^ffff800000101f70:	55                   	push   %rbp$/;"	l
ffff800000101f71	kernel.asm	/^ffff800000101f71:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000101f74	kernel.asm	/^ffff800000101f74:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff800000101f78	kernel.asm	/^ffff800000101f78:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)$/;"	l
ffff800000101f7c	kernel.asm	/^ffff800000101f7c:	48 bf 20 76 11 00 00 	movabs $0xffff800000117620,%rdi$/;"	l
ffff800000101f83	kernel.asm	/^ffff800000101f83:	80 ff ff $/;"	l
ffff800000101f86	kernel.asm	/^ffff800000101f86:	48 b8 d6 77 10 00 00 	movabs $0xffff8000001077d6,%rax$/;"	l
ffff800000101f8d	kernel.asm	/^ffff800000101f8d:	80 ff ff $/;"	l
ffff800000101f90	kernel.asm	/^ffff800000101f90:	ff d0                	callq  *%rax$/;"	l
ffff800000101f92	kernel.asm	/^ffff800000101f92:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000101f96	kernel.asm	/^ffff800000101f96:	8b 40 04             	mov    0x4(%rax),%eax$/;"	l
ffff800000101f99	kernel.asm	/^ffff800000101f99:	85 c0                	test   %eax,%eax$/;"	l
ffff800000101f9b	kernel.asm	/^ffff800000101f9b:	7f 16                	jg     ffff800000101fb3 <filedup+0x43>$/;"	l
ffff800000101f9d	kernel.asm	/^ffff800000101f9d:	48 bf d7 d4 10 00 00 	movabs $0xffff80000010d4d7,%rdi$/;"	l
ffff800000101fa4	kernel.asm	/^ffff800000101fa4:	80 ff ff $/;"	l
ffff800000101fa7	kernel.asm	/^ffff800000101fa7:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff800000101fae	kernel.asm	/^ffff800000101fae:	80 ff ff $/;"	l
ffff800000101fb1	kernel.asm	/^ffff800000101fb1:	ff d0                	callq  *%rax$/;"	l
ffff800000101fb3	kernel.asm	/^ffff800000101fb3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000101fb7	kernel.asm	/^ffff800000101fb7:	8b 40 04             	mov    0x4(%rax),%eax$/;"	l
ffff800000101fba	kernel.asm	/^ffff800000101fba:	8d 50 01             	lea    0x1(%rax),%edx$/;"	l
ffff800000101fbd	kernel.asm	/^ffff800000101fbd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000101fc1	kernel.asm	/^ffff800000101fc1:	89 50 04             	mov    %edx,0x4(%rax)$/;"	l
ffff800000101fc4	kernel.asm	/^ffff800000101fc4:	48 bf 20 76 11 00 00 	movabs $0xffff800000117620,%rdi$/;"	l
ffff800000101fcb	kernel.asm	/^ffff800000101fcb:	80 ff ff $/;"	l
ffff800000101fce	kernel.asm	/^ffff800000101fce:	48 b8 6f 78 10 00 00 	movabs $0xffff80000010786f,%rax$/;"	l
ffff800000101fd5	kernel.asm	/^ffff800000101fd5:	80 ff ff $/;"	l
ffff800000101fd8	kernel.asm	/^ffff800000101fd8:	ff d0                	callq  *%rax$/;"	l
ffff800000101fda	kernel.asm	/^ffff800000101fda:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000101fde	kernel.asm	/^ffff800000101fde:	c9                   	leaveq $/;"	l
ffff800000101fdf	kernel.asm	/^ffff800000101fdf:	c3                   	retq   $/;"	l
ffff800000101fe0	kernel.asm	/^ffff800000101fe0 <fileclose>:$/;"	l
ffff800000101fe0	kernel.asm	/^ffff800000101fe0:	55                   	push   %rbp$/;"	l
ffff800000101fe1	kernel.asm	/^ffff800000101fe1:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000101fe4	kernel.asm	/^ffff800000101fe4:	48 83 ec 40          	sub    $0x40,%rsp$/;"	l
ffff800000101fe8	kernel.asm	/^ffff800000101fe8:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)$/;"	l
ffff800000101fec	kernel.asm	/^ffff800000101fec:	48 bf 20 76 11 00 00 	movabs $0xffff800000117620,%rdi$/;"	l
ffff800000101ff3	kernel.asm	/^ffff800000101ff3:	80 ff ff $/;"	l
ffff800000101ff6	kernel.asm	/^ffff800000101ff6:	48 b8 d6 77 10 00 00 	movabs $0xffff8000001077d6,%rax$/;"	l
ffff800000101ffd	kernel.asm	/^ffff800000101ffd:	80 ff ff $/;"	l
ffff800000102000	kernel.asm	/^ffff800000102000:	ff d0                	callq  *%rax$/;"	l
ffff800000102002	kernel.asm	/^ffff800000102002:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
ffff800000102006	kernel.asm	/^ffff800000102006:	8b 40 04             	mov    0x4(%rax),%eax$/;"	l
ffff800000102009	kernel.asm	/^ffff800000102009:	85 c0                	test   %eax,%eax$/;"	l
ffff80000010200b	kernel.asm	/^ffff80000010200b:	7f 16                	jg     ffff800000102023 <fileclose+0x43>$/;"	l
ffff80000010200d	kernel.asm	/^ffff80000010200d:	48 bf df d4 10 00 00 	movabs $0xffff80000010d4df,%rdi$/;"	l
ffff800000102014	kernel.asm	/^ffff800000102014:	80 ff ff $/;"	l
ffff800000102017	kernel.asm	/^ffff800000102017:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff80000010201e	kernel.asm	/^ffff80000010201e:	80 ff ff $/;"	l
ffff800000102021	kernel.asm	/^ffff800000102021:	ff d0                	callq  *%rax$/;"	l
ffff800000102023	kernel.asm	/^ffff800000102023:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
ffff800000102027	kernel.asm	/^ffff800000102027:	8b 40 04             	mov    0x4(%rax),%eax$/;"	l
ffff80000010202a	kernel.asm	/^ffff80000010202a:	8d 50 ff             	lea    -0x1(%rax),%edx$/;"	l
ffff80000010202d	kernel.asm	/^ffff80000010202d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
ffff800000102031	kernel.asm	/^ffff800000102031:	89 50 04             	mov    %edx,0x4(%rax)$/;"	l
ffff800000102034	kernel.asm	/^ffff800000102034:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
ffff800000102038	kernel.asm	/^ffff800000102038:	8b 40 04             	mov    0x4(%rax),%eax$/;"	l
ffff80000010203b	kernel.asm	/^ffff80000010203b:	85 c0                	test   %eax,%eax$/;"	l
ffff80000010203d	kernel.asm	/^ffff80000010203d:	7e 1b                	jle    ffff80000010205a <fileclose+0x7a>$/;"	l
ffff80000010203f	kernel.asm	/^ffff80000010203f:	48 bf 20 76 11 00 00 	movabs $0xffff800000117620,%rdi$/;"	l
ffff800000102046	kernel.asm	/^ffff800000102046:	80 ff ff $/;"	l
ffff800000102049	kernel.asm	/^ffff800000102049:	48 b8 6f 78 10 00 00 	movabs $0xffff80000010786f,%rax$/;"	l
ffff800000102050	kernel.asm	/^ffff800000102050:	80 ff ff $/;"	l
ffff800000102053	kernel.asm	/^ffff800000102053:	ff d0                	callq  *%rax$/;"	l
ffff800000102055	kernel.asm	/^ffff800000102055:	e9 b9 00 00 00       	jmpq   ffff800000102113 <fileclose+0x133>$/;"	l
ffff80000010205a	kernel.asm	/^ffff80000010205a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
ffff80000010205e	kernel.asm	/^ffff80000010205e:	48 8b 10             	mov    (%rax),%rdx$/;"	l
ffff800000102061	kernel.asm	/^ffff800000102061:	48 89 55 d0          	mov    %rdx,-0x30(%rbp)$/;"	l
ffff800000102065	kernel.asm	/^ffff800000102065:	48 8b 50 08          	mov    0x8(%rax),%rdx$/;"	l
ffff800000102069	kernel.asm	/^ffff800000102069:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)$/;"	l
ffff80000010206d	kernel.asm	/^ffff80000010206d:	48 8b 50 10          	mov    0x10(%rax),%rdx$/;"	l
ffff800000102071	kernel.asm	/^ffff800000102071:	48 89 55 e0          	mov    %rdx,-0x20(%rbp)$/;"	l
ffff800000102075	kernel.asm	/^ffff800000102075:	48 8b 50 18          	mov    0x18(%rax),%rdx$/;"	l
ffff800000102079	kernel.asm	/^ffff800000102079:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)$/;"	l
ffff80000010207d	kernel.asm	/^ffff80000010207d:	48 8b 40 20          	mov    0x20(%rax),%rax$/;"	l
ffff800000102081	kernel.asm	/^ffff800000102081:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ffff800000102085	kernel.asm	/^ffff800000102085:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
ffff800000102089	kernel.asm	/^ffff800000102089:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%rax)$/;"	l
ffff800000102090	kernel.asm	/^ffff800000102090:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
ffff800000102094	kernel.asm	/^ffff800000102094:	c7 00 00 00 00 00    	movl   $0x0,(%rax)$/;"	l
ffff80000010209a	kernel.asm	/^ffff80000010209a:	48 bf 20 76 11 00 00 	movabs $0xffff800000117620,%rdi$/;"	l
ffff8000001020a1	kernel.asm	/^ffff8000001020a1:	80 ff ff $/;"	l
ffff8000001020a4	kernel.asm	/^ffff8000001020a4:	48 b8 6f 78 10 00 00 	movabs $0xffff80000010786f,%rax$/;"	l
ffff8000001020ab	kernel.asm	/^ffff8000001020ab:	80 ff ff $/;"	l
ffff8000001020ae	kernel.asm	/^ffff8000001020ae:	ff d0                	callq  *%rax$/;"	l
ffff8000001020b0	kernel.asm	/^ffff8000001020b0:	8b 45 d0             	mov    -0x30(%rbp),%eax$/;"	l
ffff8000001020b3	kernel.asm	/^ffff8000001020b3:	83 f8 01             	cmp    $0x1,%eax$/;"	l
ffff8000001020b6	kernel.asm	/^ffff8000001020b6:	75 1e                	jne    ffff8000001020d6 <fileclose+0xf6>$/;"	l
ffff8000001020b8	kernel.asm	/^ffff8000001020b8:	0f b6 45 d9          	movzbl -0x27(%rbp),%eax$/;"	l
ffff8000001020bc	kernel.asm	/^ffff8000001020bc:	0f be d0             	movsbl %al,%edx$/;"	l
ffff8000001020bf	kernel.asm	/^ffff8000001020bf:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff8000001020c3	kernel.asm	/^ffff8000001020c3:	89 d6                	mov    %edx,%esi$/;"	l
ffff8000001020c5	kernel.asm	/^ffff8000001020c5:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001020c8	kernel.asm	/^ffff8000001020c8:	48 b8 9f 61 10 00 00 	movabs $0xffff80000010619f,%rax$/;"	l
ffff8000001020cf	kernel.asm	/^ffff8000001020cf:	80 ff ff $/;"	l
ffff8000001020d2	kernel.asm	/^ffff8000001020d2:	ff d0                	callq  *%rax$/;"	l
ffff8000001020d4	kernel.asm	/^ffff8000001020d4:	eb 3d                	jmp    ffff800000102113 <fileclose+0x133>$/;"	l
ffff8000001020d6	kernel.asm	/^ffff8000001020d6:	8b 45 d0             	mov    -0x30(%rbp),%eax$/;"	l
ffff8000001020d9	kernel.asm	/^ffff8000001020d9:	83 f8 02             	cmp    $0x2,%eax$/;"	l
ffff8000001020dc	kernel.asm	/^ffff8000001020dc:	75 35                	jne    ffff800000102113 <fileclose+0x133>$/;"	l
ffff8000001020de	kernel.asm	/^ffff8000001020de:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff8000001020e3	kernel.asm	/^ffff8000001020e3:	48 ba d0 52 10 00 00 	movabs $0xffff8000001052d0,%rdx$/;"	l
ffff8000001020ea	kernel.asm	/^ffff8000001020ea:	80 ff ff $/;"	l
ffff8000001020ed	kernel.asm	/^ffff8000001020ed:	ff d2                	callq  *%rdx$/;"	l
ffff8000001020ef	kernel.asm	/^ffff8000001020ef:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff8000001020f3	kernel.asm	/^ffff8000001020f3:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001020f6	kernel.asm	/^ffff8000001020f6:	48 b8 b3 2e 10 00 00 	movabs $0xffff800000102eb3,%rax$/;"	l
ffff8000001020fd	kernel.asm	/^ffff8000001020fd:	80 ff ff $/;"	l
ffff800000102100	kernel.asm	/^ffff800000102100:	ff d0                	callq  *%rax$/;"	l
ffff800000102102	kernel.asm	/^ffff800000102102:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000102107	kernel.asm	/^ffff800000102107:	48 ba a6 53 10 00 00 	movabs $0xffff8000001053a6,%rdx$/;"	l
ffff80000010210e	kernel.asm	/^ffff80000010210e:	80 ff ff $/;"	l
ffff800000102111	kernel.asm	/^ffff800000102111:	ff d2                	callq  *%rdx$/;"	l
ffff800000102113	kernel.asm	/^ffff800000102113:	c9                   	leaveq $/;"	l
ffff800000102114	kernel.asm	/^ffff800000102114:	c3                   	retq   $/;"	l
ffff800000102115	kernel.asm	/^ffff800000102115 <fileioctl>:$/;"	l
ffff800000102115	kernel.asm	/^ffff800000102115:	55                   	push   %rbp$/;"	l
ffff800000102116	kernel.asm	/^ffff800000102116:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000102119	kernel.asm	/^ffff800000102119:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff80000010211d	kernel.asm	/^ffff80000010211d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)$/;"	l
ffff800000102121	kernel.asm	/^ffff800000102121:	89 75 f4             	mov    %esi,-0xc(%rbp)$/;"	l
ffff800000102124	kernel.asm	/^ffff800000102124:	89 55 f0             	mov    %edx,-0x10(%rbp)$/;"	l
ffff800000102127	kernel.asm	/^ffff800000102127:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010212b	kernel.asm	/^ffff80000010212b:	48 8b 40 18          	mov    0x18(%rax),%rax$/;"	l
ffff80000010212f	kernel.asm	/^ffff80000010212f:	0f b7 80 96 00 00 00 	movzwl 0x96(%rax),%eax$/;"	l
ffff800000102136	kernel.asm	/^ffff800000102136:	98                   	cwtl   $/;"	l
ffff800000102137	kernel.asm	/^ffff800000102137:	83 f8 01             	cmp    $0x1,%eax$/;"	l
ffff80000010213a	kernel.asm	/^ffff80000010213a:	74 07                	je     ffff800000102143 <fileioctl+0x2e>$/;"	l
ffff80000010213c	kernel.asm	/^ffff80000010213c:	83 f8 02             	cmp    $0x2,%eax$/;"	l
ffff80000010213f	kernel.asm	/^ffff80000010213f:	74 09                	je     ffff80000010214a <fileioctl+0x35>$/;"	l
ffff800000102141	kernel.asm	/^ffff800000102141:	eb 24                	jmp    ffff800000102167 <fileioctl+0x52>$/;"	l
ffff800000102143	kernel.asm	/^ffff800000102143:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff800000102148	kernel.asm	/^ffff800000102148:	eb 7a                	jmp    ffff8000001021c4 <fileioctl+0xaf>$/;"	l
ffff80000010214a	kernel.asm	/^ffff80000010214a:	8b 55 f0             	mov    -0x10(%rbp),%edx$/;"	l
ffff80000010214d	kernel.asm	/^ffff80000010214d:	8b 4d f4             	mov    -0xc(%rbp),%ecx$/;"	l
ffff800000102150	kernel.asm	/^ffff800000102150:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000102154	kernel.asm	/^ffff800000102154:	89 ce                	mov    %ecx,%esi$/;"	l
ffff800000102156	kernel.asm	/^ffff800000102156:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000102159	kernel.asm	/^ffff800000102159:	48 b8 ad 17 10 00 00 	movabs $0xffff8000001017ad,%rax$/;"	l
ffff800000102160	kernel.asm	/^ffff800000102160:	80 ff ff $/;"	l
ffff800000102163	kernel.asm	/^ffff800000102163:	ff d0                	callq  *%rax$/;"	l
ffff800000102165	kernel.asm	/^ffff800000102165:	eb 5d                	jmp    ffff8000001021c4 <fileioctl+0xaf>$/;"	l
ffff800000102167	kernel.asm	/^ffff800000102167:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010216b	kernel.asm	/^ffff80000010216b:	48 8b 40 18          	mov    0x18(%rax),%rax$/;"	l
ffff80000010216f	kernel.asm	/^ffff80000010216f:	0f b7 80 98 00 00 00 	movzwl 0x98(%rax),%eax$/;"	l
ffff800000102176	kernel.asm	/^ffff800000102176:	0f bf c8             	movswl %ax,%ecx$/;"	l
ffff800000102179	kernel.asm	/^ffff800000102179:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010217d	kernel.asm	/^ffff80000010217d:	48 8b 40 18          	mov    0x18(%rax),%rax$/;"	l
ffff800000102181	kernel.asm	/^ffff800000102181:	0f b7 80 96 00 00 00 	movzwl 0x96(%rax),%eax$/;"	l
ffff800000102188	kernel.asm	/^ffff800000102188:	0f bf d0             	movswl %ax,%edx$/;"	l
ffff80000010218b	kernel.asm	/^ffff80000010218b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010218f	kernel.asm	/^ffff80000010218f:	48 8b 40 18          	mov    0x18(%rax),%rax$/;"	l
ffff800000102193	kernel.asm	/^ffff800000102193:	8b 00                	mov    (%rax),%eax$/;"	l
ffff800000102195	kernel.asm	/^ffff800000102195:	8b 7d f0             	mov    -0x10(%rbp),%edi$/;"	l
ffff800000102198	kernel.asm	/^ffff800000102198:	8b 75 f4             	mov    -0xc(%rbp),%esi$/;"	l
ffff80000010219b	kernel.asm	/^ffff80000010219b:	41 89 f9             	mov    %edi,%r9d$/;"	l
ffff80000010219e	kernel.asm	/^ffff80000010219e:	41 89 f0             	mov    %esi,%r8d$/;"	l
ffff8000001021a1	kernel.asm	/^ffff8000001021a1:	89 c6                	mov    %eax,%esi$/;"	l
ffff8000001021a3	kernel.asm	/^ffff8000001021a3:	48 bf f0 d4 10 00 00 	movabs $0xffff80000010d4f0,%rdi$/;"	l
ffff8000001021aa	kernel.asm	/^ffff8000001021aa:	80 ff ff $/;"	l
ffff8000001021ad	kernel.asm	/^ffff8000001021ad:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff8000001021b2	kernel.asm	/^ffff8000001021b2:	49 ba ac 07 10 00 00 	movabs $0xffff8000001007ac,%r10$/;"	l
ffff8000001021b9	kernel.asm	/^ffff8000001021b9:	80 ff ff $/;"	l
ffff8000001021bc	kernel.asm	/^ffff8000001021bc:	41 ff d2             	callq  *%r10$/;"	l
ffff8000001021bf	kernel.asm	/^ffff8000001021bf:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff8000001021c4	kernel.asm	/^ffff8000001021c4:	c9                   	leaveq $/;"	l
ffff8000001021c5	kernel.asm	/^ffff8000001021c5:	c3                   	retq   $/;"	l
ffff8000001021c6	kernel.asm	/^ffff8000001021c6 <filestat>:$/;"	l
ffff8000001021c6	kernel.asm	/^ffff8000001021c6:	55                   	push   %rbp$/;"	l
ffff8000001021c7	kernel.asm	/^ffff8000001021c7:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff8000001021ca	kernel.asm	/^ffff8000001021ca:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff8000001021ce	kernel.asm	/^ffff8000001021ce:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)$/;"	l
ffff8000001021d2	kernel.asm	/^ffff8000001021d2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)$/;"	l
ffff8000001021d6	kernel.asm	/^ffff8000001021d6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001021da	kernel.asm	/^ffff8000001021da:	8b 00                	mov    (%rax),%eax$/;"	l
ffff8000001021dc	kernel.asm	/^ffff8000001021dc:	83 f8 02             	cmp    $0x2,%eax$/;"	l
ffff8000001021df	kernel.asm	/^ffff8000001021df:	75 53                	jne    ffff800000102234 <filestat+0x6e>$/;"	l
ffff8000001021e1	kernel.asm	/^ffff8000001021e1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001021e5	kernel.asm	/^ffff8000001021e5:	48 8b 40 18          	mov    0x18(%rax),%rax$/;"	l
ffff8000001021e9	kernel.asm	/^ffff8000001021e9:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001021ec	kernel.asm	/^ffff8000001021ec:	48 b8 b9 2c 10 00 00 	movabs $0xffff800000102cb9,%rax$/;"	l
ffff8000001021f3	kernel.asm	/^ffff8000001021f3:	80 ff ff $/;"	l
ffff8000001021f6	kernel.asm	/^ffff8000001021f6:	ff d0                	callq  *%rax$/;"	l
ffff8000001021f8	kernel.asm	/^ffff8000001021f8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001021fc	kernel.asm	/^ffff8000001021fc:	48 8b 40 18          	mov    0x18(%rax),%rax$/;"	l
ffff800000102200	kernel.asm	/^ffff800000102200:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
ffff800000102204	kernel.asm	/^ffff800000102204:	48 89 d6             	mov    %rdx,%rsi$/;"	l
ffff800000102207	kernel.asm	/^ffff800000102207:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010220a	kernel.asm	/^ffff80000010220a:	48 b8 a7 32 10 00 00 	movabs $0xffff8000001032a7,%rax$/;"	l
ffff800000102211	kernel.asm	/^ffff800000102211:	80 ff ff $/;"	l
ffff800000102214	kernel.asm	/^ffff800000102214:	ff d0                	callq  *%rax$/;"	l
ffff800000102216	kernel.asm	/^ffff800000102216:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010221a	kernel.asm	/^ffff80000010221a:	48 8b 40 18          	mov    0x18(%rax),%rax$/;"	l
ffff80000010221e	kernel.asm	/^ffff80000010221e:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000102221	kernel.asm	/^ffff800000102221:	48 b8 4a 2e 10 00 00 	movabs $0xffff800000102e4a,%rax$/;"	l
ffff800000102228	kernel.asm	/^ffff800000102228:	80 ff ff $/;"	l
ffff80000010222b	kernel.asm	/^ffff80000010222b:	ff d0                	callq  *%rax$/;"	l
ffff80000010222d	kernel.asm	/^ffff80000010222d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000102232	kernel.asm	/^ffff800000102232:	eb 05                	jmp    ffff800000102239 <filestat+0x73>$/;"	l
ffff800000102234	kernel.asm	/^ffff800000102234:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff800000102239	kernel.asm	/^ffff800000102239:	c9                   	leaveq $/;"	l
ffff80000010223a	kernel.asm	/^ffff80000010223a:	c3                   	retq   $/;"	l
ffff80000010223b	kernel.asm	/^ffff80000010223b <fileread>:$/;"	l
ffff80000010223b	kernel.asm	/^ffff80000010223b:	55                   	push   %rbp$/;"	l
ffff80000010223c	kernel.asm	/^ffff80000010223c:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010223f	kernel.asm	/^ffff80000010223f:	48 83 ec 30          	sub    $0x30,%rsp$/;"	l
ffff800000102243	kernel.asm	/^ffff800000102243:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
ffff800000102247	kernel.asm	/^ffff800000102247:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)$/;"	l
ffff80000010224b	kernel.asm	/^ffff80000010224b:	89 55 dc             	mov    %edx,-0x24(%rbp)$/;"	l
ffff80000010224e	kernel.asm	/^ffff80000010224e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000102252	kernel.asm	/^ffff800000102252:	0f b6 40 08          	movzbl 0x8(%rax),%eax$/;"	l
ffff800000102256	kernel.asm	/^ffff800000102256:	84 c0                	test   %al,%al$/;"	l
ffff800000102258	kernel.asm	/^ffff800000102258:	75 0a                	jne    ffff800000102264 <fileread+0x29>$/;"	l
ffff80000010225a	kernel.asm	/^ffff80000010225a:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff80000010225f	kernel.asm	/^ffff80000010225f:	e9 c6 00 00 00       	jmpq   ffff80000010232a <fileread+0xef>$/;"	l
ffff800000102264	kernel.asm	/^ffff800000102264:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000102268	kernel.asm	/^ffff800000102268:	8b 00                	mov    (%rax),%eax$/;"	l
ffff80000010226a	kernel.asm	/^ffff80000010226a:	83 f8 01             	cmp    $0x1,%eax$/;"	l
ffff80000010226d	kernel.asm	/^ffff80000010226d:	75 26                	jne    ffff800000102295 <fileread+0x5a>$/;"	l
ffff80000010226f	kernel.asm	/^ffff80000010226f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000102273	kernel.asm	/^ffff800000102273:	48 8b 40 10          	mov    0x10(%rax),%rax$/;"	l
ffff800000102277	kernel.asm	/^ffff800000102277:	8b 55 dc             	mov    -0x24(%rbp),%edx$/;"	l
ffff80000010227a	kernel.asm	/^ffff80000010227a:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx$/;"	l
ffff80000010227e	kernel.asm	/^ffff80000010227e:	48 89 ce             	mov    %rcx,%rsi$/;"	l
ffff800000102281	kernel.asm	/^ffff800000102281:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000102284	kernel.asm	/^ffff800000102284:	48 b8 b0 63 10 00 00 	movabs $0xffff8000001063b0,%rax$/;"	l
ffff80000010228b	kernel.asm	/^ffff80000010228b:	80 ff ff $/;"	l
ffff80000010228e	kernel.asm	/^ffff80000010228e:	ff d0                	callq  *%rax$/;"	l
ffff800000102290	kernel.asm	/^ffff800000102290:	e9 95 00 00 00       	jmpq   ffff80000010232a <fileread+0xef>$/;"	l
ffff800000102295	kernel.asm	/^ffff800000102295:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000102299	kernel.asm	/^ffff800000102299:	8b 00                	mov    (%rax),%eax$/;"	l
ffff80000010229b	kernel.asm	/^ffff80000010229b:	83 f8 02             	cmp    $0x2,%eax$/;"	l
ffff80000010229e	kernel.asm	/^ffff80000010229e:	75 74                	jne    ffff800000102314 <fileread+0xd9>$/;"	l
ffff8000001022a0	kernel.asm	/^ffff8000001022a0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff8000001022a4	kernel.asm	/^ffff8000001022a4:	48 8b 40 18          	mov    0x18(%rax),%rax$/;"	l
ffff8000001022a8	kernel.asm	/^ffff8000001022a8:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001022ab	kernel.asm	/^ffff8000001022ab:	48 b8 b9 2c 10 00 00 	movabs $0xffff800000102cb9,%rax$/;"	l
ffff8000001022b2	kernel.asm	/^ffff8000001022b2:	80 ff ff $/;"	l
ffff8000001022b5	kernel.asm	/^ffff8000001022b5:	ff d0                	callq  *%rax$/;"	l
ffff8000001022b7	kernel.asm	/^ffff8000001022b7:	8b 4d dc             	mov    -0x24(%rbp),%ecx$/;"	l
ffff8000001022ba	kernel.asm	/^ffff8000001022ba:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff8000001022be	kernel.asm	/^ffff8000001022be:	8b 50 20             	mov    0x20(%rax),%edx$/;"	l
ffff8000001022c1	kernel.asm	/^ffff8000001022c1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff8000001022c5	kernel.asm	/^ffff8000001022c5:	48 8b 40 18          	mov    0x18(%rax),%rax$/;"	l
ffff8000001022c9	kernel.asm	/^ffff8000001022c9:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi$/;"	l
ffff8000001022cd	kernel.asm	/^ffff8000001022cd:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001022d0	kernel.asm	/^ffff8000001022d0:	48 b8 0d 33 10 00 00 	movabs $0xffff80000010330d,%rax$/;"	l
ffff8000001022d7	kernel.asm	/^ffff8000001022d7:	80 ff ff $/;"	l
ffff8000001022da	kernel.asm	/^ffff8000001022da:	ff d0                	callq  *%rax$/;"	l
ffff8000001022dc	kernel.asm	/^ffff8000001022dc:	89 45 fc             	mov    %eax,-0x4(%rbp)$/;"	l
ffff8000001022df	kernel.asm	/^ffff8000001022df:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)$/;"	l
ffff8000001022e3	kernel.asm	/^ffff8000001022e3:	7e 13                	jle    ffff8000001022f8 <fileread+0xbd>$/;"	l
ffff8000001022e5	kernel.asm	/^ffff8000001022e5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff8000001022e9	kernel.asm	/^ffff8000001022e9:	8b 50 20             	mov    0x20(%rax),%edx$/;"	l
ffff8000001022ec	kernel.asm	/^ffff8000001022ec:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff8000001022ef	kernel.asm	/^ffff8000001022ef:	01 c2                	add    %eax,%edx$/;"	l
ffff8000001022f1	kernel.asm	/^ffff8000001022f1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff8000001022f5	kernel.asm	/^ffff8000001022f5:	89 50 20             	mov    %edx,0x20(%rax)$/;"	l
ffff8000001022f8	kernel.asm	/^ffff8000001022f8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff8000001022fc	kernel.asm	/^ffff8000001022fc:	48 8b 40 18          	mov    0x18(%rax),%rax$/;"	l
ffff800000102300	kernel.asm	/^ffff800000102300:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000102303	kernel.asm	/^ffff800000102303:	48 b8 4a 2e 10 00 00 	movabs $0xffff800000102e4a,%rax$/;"	l
ffff80000010230a	kernel.asm	/^ffff80000010230a:	80 ff ff $/;"	l
ffff80000010230d	kernel.asm	/^ffff80000010230d:	ff d0                	callq  *%rax$/;"	l
ffff80000010230f	kernel.asm	/^ffff80000010230f:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff800000102312	kernel.asm	/^ffff800000102312:	eb 16                	jmp    ffff80000010232a <fileread+0xef>$/;"	l
ffff800000102314	kernel.asm	/^ffff800000102314:	48 bf 29 d5 10 00 00 	movabs $0xffff80000010d529,%rdi$/;"	l
ffff80000010231b	kernel.asm	/^ffff80000010231b:	80 ff ff $/;"	l
ffff80000010231e	kernel.asm	/^ffff80000010231e:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff800000102325	kernel.asm	/^ffff800000102325:	80 ff ff $/;"	l
ffff800000102328	kernel.asm	/^ffff800000102328:	ff d0                	callq  *%rax$/;"	l
ffff80000010232a	kernel.asm	/^ffff80000010232a:	c9                   	leaveq $/;"	l
ffff80000010232b	kernel.asm	/^ffff80000010232b:	c3                   	retq   $/;"	l
ffff80000010232c	kernel.asm	/^ffff80000010232c <filewrite>:$/;"	l
ffff80000010232c	kernel.asm	/^ffff80000010232c:	55                   	push   %rbp$/;"	l
ffff80000010232d	kernel.asm	/^ffff80000010232d:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000102330	kernel.asm	/^ffff800000102330:	48 83 ec 30          	sub    $0x30,%rsp$/;"	l
ffff800000102334	kernel.asm	/^ffff800000102334:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
ffff800000102338	kernel.asm	/^ffff800000102338:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)$/;"	l
ffff80000010233c	kernel.asm	/^ffff80000010233c:	89 55 dc             	mov    %edx,-0x24(%rbp)$/;"	l
ffff80000010233f	kernel.asm	/^ffff80000010233f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000102343	kernel.asm	/^ffff800000102343:	0f b6 40 09          	movzbl 0x9(%rax),%eax$/;"	l
ffff800000102347	kernel.asm	/^ffff800000102347:	84 c0                	test   %al,%al$/;"	l
ffff800000102349	kernel.asm	/^ffff800000102349:	75 0a                	jne    ffff800000102355 <filewrite+0x29>$/;"	l
ffff80000010234b	kernel.asm	/^ffff80000010234b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff800000102350	kernel.asm	/^ffff800000102350:	e9 67 01 00 00       	jmpq   ffff8000001024bc <filewrite+0x190>$/;"	l
ffff800000102355	kernel.asm	/^ffff800000102355:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000102359	kernel.asm	/^ffff800000102359:	8b 00                	mov    (%rax),%eax$/;"	l
ffff80000010235b	kernel.asm	/^ffff80000010235b:	83 f8 01             	cmp    $0x1,%eax$/;"	l
ffff80000010235e	kernel.asm	/^ffff80000010235e:	75 26                	jne    ffff800000102386 <filewrite+0x5a>$/;"	l
ffff800000102360	kernel.asm	/^ffff800000102360:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000102364	kernel.asm	/^ffff800000102364:	48 8b 40 10          	mov    0x10(%rax),%rax$/;"	l
ffff800000102368	kernel.asm	/^ffff800000102368:	8b 55 dc             	mov    -0x24(%rbp),%edx$/;"	l
ffff80000010236b	kernel.asm	/^ffff80000010236b:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx$/;"	l
ffff80000010236f	kernel.asm	/^ffff80000010236f:	48 89 ce             	mov    %rcx,%rsi$/;"	l
ffff800000102372	kernel.asm	/^ffff800000102372:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000102375	kernel.asm	/^ffff800000102375:	48 b8 71 62 10 00 00 	movabs $0xffff800000106271,%rax$/;"	l
ffff80000010237c	kernel.asm	/^ffff80000010237c:	80 ff ff $/;"	l
ffff80000010237f	kernel.asm	/^ffff80000010237f:	ff d0                	callq  *%rax$/;"	l
ffff800000102381	kernel.asm	/^ffff800000102381:	e9 36 01 00 00       	jmpq   ffff8000001024bc <filewrite+0x190>$/;"	l
ffff800000102386	kernel.asm	/^ffff800000102386:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010238a	kernel.asm	/^ffff80000010238a:	8b 00                	mov    (%rax),%eax$/;"	l
ffff80000010238c	kernel.asm	/^ffff80000010238c:	83 f8 02             	cmp    $0x2,%eax$/;"	l
ffff80000010238f	kernel.asm	/^ffff80000010238f:	0f 85 11 01 00 00    	jne    ffff8000001024a6 <filewrite+0x17a>$/;"	l
ffff800000102395	kernel.asm	/^ffff800000102395:	c7 45 f4 00 1a 00 00 	movl   $0x1a00,-0xc(%rbp)$/;"	l
ffff80000010239c	kernel.asm	/^ffff80000010239c:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)$/;"	l
ffff8000001023a3	kernel.asm	/^ffff8000001023a3:	e9 db 00 00 00       	jmpq   ffff800000102483 <filewrite+0x157>$/;"	l
ffff8000001023a8	kernel.asm	/^ffff8000001023a8:	8b 45 dc             	mov    -0x24(%rbp),%eax$/;"	l
ffff8000001023ab	kernel.asm	/^ffff8000001023ab:	2b 45 fc             	sub    -0x4(%rbp),%eax$/;"	l
ffff8000001023ae	kernel.asm	/^ffff8000001023ae:	89 45 f8             	mov    %eax,-0x8(%rbp)$/;"	l
ffff8000001023b1	kernel.asm	/^ffff8000001023b1:	8b 45 f8             	mov    -0x8(%rbp),%eax$/;"	l
ffff8000001023b4	kernel.asm	/^ffff8000001023b4:	3b 45 f4             	cmp    -0xc(%rbp),%eax$/;"	l
ffff8000001023b7	kernel.asm	/^ffff8000001023b7:	7e 06                	jle    ffff8000001023bf <filewrite+0x93>$/;"	l
ffff8000001023b9	kernel.asm	/^ffff8000001023b9:	8b 45 f4             	mov    -0xc(%rbp),%eax$/;"	l
ffff8000001023bc	kernel.asm	/^ffff8000001023bc:	89 45 f8             	mov    %eax,-0x8(%rbp)$/;"	l
ffff8000001023bf	kernel.asm	/^ffff8000001023bf:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff8000001023c4	kernel.asm	/^ffff8000001023c4:	48 ba d0 52 10 00 00 	movabs $0xffff8000001052d0,%rdx$/;"	l
ffff8000001023cb	kernel.asm	/^ffff8000001023cb:	80 ff ff $/;"	l
ffff8000001023ce	kernel.asm	/^ffff8000001023ce:	ff d2                	callq  *%rdx$/;"	l
ffff8000001023d0	kernel.asm	/^ffff8000001023d0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff8000001023d4	kernel.asm	/^ffff8000001023d4:	48 8b 40 18          	mov    0x18(%rax),%rax$/;"	l
ffff8000001023d8	kernel.asm	/^ffff8000001023d8:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001023db	kernel.asm	/^ffff8000001023db:	48 b8 b9 2c 10 00 00 	movabs $0xffff800000102cb9,%rax$/;"	l
ffff8000001023e2	kernel.asm	/^ffff8000001023e2:	80 ff ff $/;"	l
ffff8000001023e5	kernel.asm	/^ffff8000001023e5:	ff d0                	callq  *%rax$/;"	l
ffff8000001023e7	kernel.asm	/^ffff8000001023e7:	8b 4d f8             	mov    -0x8(%rbp),%ecx$/;"	l
ffff8000001023ea	kernel.asm	/^ffff8000001023ea:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff8000001023ee	kernel.asm	/^ffff8000001023ee:	8b 50 20             	mov    0x20(%rax),%edx$/;"	l
ffff8000001023f1	kernel.asm	/^ffff8000001023f1:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff8000001023f4	kernel.asm	/^ffff8000001023f4:	48 63 f0             	movslq %eax,%rsi$/;"	l
ffff8000001023f7	kernel.asm	/^ffff8000001023f7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff8000001023fb	kernel.asm	/^ffff8000001023fb:	48 01 c6             	add    %rax,%rsi$/;"	l
ffff8000001023fe	kernel.asm	/^ffff8000001023fe:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000102402	kernel.asm	/^ffff800000102402:	48 8b 40 18          	mov    0x18(%rax),%rax$/;"	l
ffff800000102406	kernel.asm	/^ffff800000102406:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000102409	kernel.asm	/^ffff800000102409:	48 b8 dc 34 10 00 00 	movabs $0xffff8000001034dc,%rax$/;"	l
ffff800000102410	kernel.asm	/^ffff800000102410:	80 ff ff $/;"	l
ffff800000102413	kernel.asm	/^ffff800000102413:	ff d0                	callq  *%rax$/;"	l
ffff800000102415	kernel.asm	/^ffff800000102415:	89 45 f0             	mov    %eax,-0x10(%rbp)$/;"	l
ffff800000102418	kernel.asm	/^ffff800000102418:	83 7d f0 00          	cmpl   $0x0,-0x10(%rbp)$/;"	l
ffff80000010241c	kernel.asm	/^ffff80000010241c:	7e 13                	jle    ffff800000102431 <filewrite+0x105>$/;"	l
ffff80000010241e	kernel.asm	/^ffff80000010241e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000102422	kernel.asm	/^ffff800000102422:	8b 50 20             	mov    0x20(%rax),%edx$/;"	l
ffff800000102425	kernel.asm	/^ffff800000102425:	8b 45 f0             	mov    -0x10(%rbp),%eax$/;"	l
ffff800000102428	kernel.asm	/^ffff800000102428:	01 c2                	add    %eax,%edx$/;"	l
ffff80000010242a	kernel.asm	/^ffff80000010242a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010242e	kernel.asm	/^ffff80000010242e:	89 50 20             	mov    %edx,0x20(%rax)$/;"	l
ffff800000102431	kernel.asm	/^ffff800000102431:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000102435	kernel.asm	/^ffff800000102435:	48 8b 40 18          	mov    0x18(%rax),%rax$/;"	l
ffff800000102439	kernel.asm	/^ffff800000102439:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010243c	kernel.asm	/^ffff80000010243c:	48 b8 4a 2e 10 00 00 	movabs $0xffff800000102e4a,%rax$/;"	l
ffff800000102443	kernel.asm	/^ffff800000102443:	80 ff ff $/;"	l
ffff800000102446	kernel.asm	/^ffff800000102446:	ff d0                	callq  *%rax$/;"	l
ffff800000102448	kernel.asm	/^ffff800000102448:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff80000010244d	kernel.asm	/^ffff80000010244d:	48 ba a6 53 10 00 00 	movabs $0xffff8000001053a6,%rdx$/;"	l
ffff800000102454	kernel.asm	/^ffff800000102454:	80 ff ff $/;"	l
ffff800000102457	kernel.asm	/^ffff800000102457:	ff d2                	callq  *%rdx$/;"	l
ffff800000102459	kernel.asm	/^ffff800000102459:	83 7d f0 00          	cmpl   $0x0,-0x10(%rbp)$/;"	l
ffff80000010245d	kernel.asm	/^ffff80000010245d:	78 32                	js     ffff800000102491 <filewrite+0x165>$/;"	l
ffff80000010245f	kernel.asm	/^ffff80000010245f:	8b 45 f0             	mov    -0x10(%rbp),%eax$/;"	l
ffff800000102462	kernel.asm	/^ffff800000102462:	3b 45 f8             	cmp    -0x8(%rbp),%eax$/;"	l
ffff800000102465	kernel.asm	/^ffff800000102465:	74 16                	je     ffff80000010247d <filewrite+0x151>$/;"	l
ffff800000102467	kernel.asm	/^ffff800000102467:	48 bf 32 d5 10 00 00 	movabs $0xffff80000010d532,%rdi$/;"	l
ffff80000010246e	kernel.asm	/^ffff80000010246e:	80 ff ff $/;"	l
ffff800000102471	kernel.asm	/^ffff800000102471:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff800000102478	kernel.asm	/^ffff800000102478:	80 ff ff $/;"	l
ffff80000010247b	kernel.asm	/^ffff80000010247b:	ff d0                	callq  *%rax$/;"	l
ffff80000010247d	kernel.asm	/^ffff80000010247d:	8b 45 f0             	mov    -0x10(%rbp),%eax$/;"	l
ffff800000102480	kernel.asm	/^ffff800000102480:	01 45 fc             	add    %eax,-0x4(%rbp)$/;"	l
ffff800000102483	kernel.asm	/^ffff800000102483:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff800000102486	kernel.asm	/^ffff800000102486:	3b 45 dc             	cmp    -0x24(%rbp),%eax$/;"	l
ffff800000102489	kernel.asm	/^ffff800000102489:	0f 8c 19 ff ff ff    	jl     ffff8000001023a8 <filewrite+0x7c>$/;"	l
ffff80000010248f	kernel.asm	/^ffff80000010248f:	eb 01                	jmp    ffff800000102492 <filewrite+0x166>$/;"	l
ffff800000102491	kernel.asm	/^ffff800000102491:	90                   	nop$/;"	l
ffff800000102492	kernel.asm	/^ffff800000102492:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff800000102495	kernel.asm	/^ffff800000102495:	3b 45 dc             	cmp    -0x24(%rbp),%eax$/;"	l
ffff800000102498	kernel.asm	/^ffff800000102498:	75 05                	jne    ffff80000010249f <filewrite+0x173>$/;"	l
ffff80000010249a	kernel.asm	/^ffff80000010249a:	8b 45 dc             	mov    -0x24(%rbp),%eax$/;"	l
ffff80000010249d	kernel.asm	/^ffff80000010249d:	eb 1d                	jmp    ffff8000001024bc <filewrite+0x190>$/;"	l
ffff80000010249f	kernel.asm	/^ffff80000010249f:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff8000001024a4	kernel.asm	/^ffff8000001024a4:	eb 16                	jmp    ffff8000001024bc <filewrite+0x190>$/;"	l
ffff8000001024a6	kernel.asm	/^ffff8000001024a6:	48 bf 42 d5 10 00 00 	movabs $0xffff80000010d542,%rdi$/;"	l
ffff8000001024ad	kernel.asm	/^ffff8000001024ad:	80 ff ff $/;"	l
ffff8000001024b0	kernel.asm	/^ffff8000001024b0:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff8000001024b7	kernel.asm	/^ffff8000001024b7:	80 ff ff $/;"	l
ffff8000001024ba	kernel.asm	/^ffff8000001024ba:	ff d0                	callq  *%rax$/;"	l
ffff8000001024bc	kernel.asm	/^ffff8000001024bc:	c9                   	leaveq $/;"	l
ffff8000001024bd	kernel.asm	/^ffff8000001024bd:	c3                   	retq   $/;"	l
ffff8000001024be	kernel.asm	/^ffff8000001024be <readsb>:$/;"	l
ffff8000001024be	kernel.asm	/^ffff8000001024be:	55                   	push   %rbp$/;"	l
ffff8000001024bf	kernel.asm	/^ffff8000001024bf:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff8000001024c2	kernel.asm	/^ffff8000001024c2:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ffff8000001024c6	kernel.asm	/^ffff8000001024c6:	89 7d ec             	mov    %edi,-0x14(%rbp)$/;"	l
ffff8000001024c9	kernel.asm	/^ffff8000001024c9:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)$/;"	l
ffff8000001024cd	kernel.asm	/^ffff8000001024cd:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
ffff8000001024d0	kernel.asm	/^ffff8000001024d0:	be 01 00 00 00       	mov    $0x1,%esi$/;"	l
ffff8000001024d5	kernel.asm	/^ffff8000001024d5:	89 c7                	mov    %eax,%edi$/;"	l
ffff8000001024d7	kernel.asm	/^ffff8000001024d7:	48 b8 f8 03 10 00 00 	movabs $0xffff8000001003f8,%rax$/;"	l
ffff8000001024de	kernel.asm	/^ffff8000001024de:	80 ff ff $/;"	l
ffff8000001024e1	kernel.asm	/^ffff8000001024e1:	ff d0                	callq  *%rax$/;"	l
ffff8000001024e3	kernel.asm	/^ffff8000001024e3:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff8000001024e7	kernel.asm	/^ffff8000001024e7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001024eb	kernel.asm	/^ffff8000001024eb:	48 8d 88 b0 00 00 00 	lea    0xb0(%rax),%rcx$/;"	l
ffff8000001024f2	kernel.asm	/^ffff8000001024f2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff8000001024f6	kernel.asm	/^ffff8000001024f6:	ba 1c 00 00 00       	mov    $0x1c,%edx$/;"	l
ffff8000001024fb	kernel.asm	/^ffff8000001024fb:	48 89 ce             	mov    %rcx,%rsi$/;"	l
ffff8000001024fe	kernel.asm	/^ffff8000001024fe:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000102501	kernel.asm	/^ffff800000102501:	48 b8 6f 7c 10 00 00 	movabs $0xffff800000107c6f,%rax$/;"	l
ffff800000102508	kernel.asm	/^ffff800000102508:	80 ff ff $/;"	l
ffff80000010250b	kernel.asm	/^ffff80000010250b:	ff d0                	callq  *%rax$/;"	l
ffff80000010250d	kernel.asm	/^ffff80000010250d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000102511	kernel.asm	/^ffff800000102511:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000102514	kernel.asm	/^ffff800000102514:	48 b8 aa 04 10 00 00 	movabs $0xffff8000001004aa,%rax$/;"	l
ffff80000010251b	kernel.asm	/^ffff80000010251b:	80 ff ff $/;"	l
ffff80000010251e	kernel.asm	/^ffff80000010251e:	ff d0                	callq  *%rax$/;"	l
ffff800000102520	kernel.asm	/^ffff800000102520:	90                   	nop$/;"	l
ffff800000102521	kernel.asm	/^ffff800000102521:	c9                   	leaveq $/;"	l
ffff800000102522	kernel.asm	/^ffff800000102522:	c3                   	retq   $/;"	l
ffff800000102523	kernel.asm	/^ffff800000102523 <bzero>:$/;"	l
ffff800000102523	kernel.asm	/^ffff800000102523:	55                   	push   %rbp$/;"	l
ffff800000102524	kernel.asm	/^ffff800000102524:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000102527	kernel.asm	/^ffff800000102527:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ffff80000010252b	kernel.asm	/^ffff80000010252b:	89 7d ec             	mov    %edi,-0x14(%rbp)$/;"	l
ffff80000010252e	kernel.asm	/^ffff80000010252e:	89 75 e8             	mov    %esi,-0x18(%rbp)$/;"	l
ffff800000102531	kernel.asm	/^ffff800000102531:	8b 55 e8             	mov    -0x18(%rbp),%edx$/;"	l
ffff800000102534	kernel.asm	/^ffff800000102534:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
ffff800000102537	kernel.asm	/^ffff800000102537:	89 d6                	mov    %edx,%esi$/;"	l
ffff800000102539	kernel.asm	/^ffff800000102539:	89 c7                	mov    %eax,%edi$/;"	l
ffff80000010253b	kernel.asm	/^ffff80000010253b:	48 b8 f8 03 10 00 00 	movabs $0xffff8000001003f8,%rax$/;"	l
ffff800000102542	kernel.asm	/^ffff800000102542:	80 ff ff $/;"	l
ffff800000102545	kernel.asm	/^ffff800000102545:	ff d0                	callq  *%rax$/;"	l
ffff800000102547	kernel.asm	/^ffff800000102547:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff80000010254b	kernel.asm	/^ffff80000010254b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010254f	kernel.asm	/^ffff80000010254f:	48 05 b0 00 00 00    	add    $0xb0,%rax$/;"	l
ffff800000102555	kernel.asm	/^ffff800000102555:	ba 00 02 00 00       	mov    $0x200,%edx$/;"	l
ffff80000010255a	kernel.asm	/^ffff80000010255a:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffff80000010255f	kernel.asm	/^ffff80000010255f:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000102562	kernel.asm	/^ffff800000102562:	48 b8 72 7b 10 00 00 	movabs $0xffff800000107b72,%rax$/;"	l
ffff800000102569	kernel.asm	/^ffff800000102569:	80 ff ff $/;"	l
ffff80000010256c	kernel.asm	/^ffff80000010256c:	ff d0                	callq  *%rax$/;"	l
ffff80000010256e	kernel.asm	/^ffff80000010256e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000102572	kernel.asm	/^ffff800000102572:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000102575	kernel.asm	/^ffff800000102575:	48 b8 35 56 10 00 00 	movabs $0xffff800000105635,%rax$/;"	l
ffff80000010257c	kernel.asm	/^ffff80000010257c:	80 ff ff $/;"	l
ffff80000010257f	kernel.asm	/^ffff80000010257f:	ff d0                	callq  *%rax$/;"	l
ffff800000102581	kernel.asm	/^ffff800000102581:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000102585	kernel.asm	/^ffff800000102585:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000102588	kernel.asm	/^ffff800000102588:	48 b8 aa 04 10 00 00 	movabs $0xffff8000001004aa,%rax$/;"	l
ffff80000010258f	kernel.asm	/^ffff80000010258f:	80 ff ff $/;"	l
ffff800000102592	kernel.asm	/^ffff800000102592:	ff d0                	callq  *%rax$/;"	l
ffff800000102594	kernel.asm	/^ffff800000102594:	90                   	nop$/;"	l
ffff800000102595	kernel.asm	/^ffff800000102595:	c9                   	leaveq $/;"	l
ffff800000102596	kernel.asm	/^ffff800000102596:	c3                   	retq   $/;"	l
ffff800000102597	kernel.asm	/^ffff800000102597 <balloc>:$/;"	l
ffff800000102597	kernel.asm	/^ffff800000102597:	55                   	push   %rbp$/;"	l
ffff800000102598	kernel.asm	/^ffff800000102598:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010259b	kernel.asm	/^ffff80000010259b:	48 83 ec 30          	sub    $0x30,%rsp$/;"	l
ffff80000010259f	kernel.asm	/^ffff80000010259f:	89 7d dc             	mov    %edi,-0x24(%rbp)$/;"	l
ffff8000001025a2	kernel.asm	/^ffff8000001025a2:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)$/;"	l
ffff8000001025a9	kernel.asm	/^ffff8000001025a9:	00 $/;"	l
ffff8000001025aa	kernel.asm	/^ffff8000001025aa:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)$/;"	l
ffff8000001025b1	kernel.asm	/^ffff8000001025b1:	e9 52 01 00 00       	jmpq   ffff800000102708 <balloc+0x171>$/;"	l
ffff8000001025b6	kernel.asm	/^ffff8000001025b6:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff8000001025b9	kernel.asm	/^ffff8000001025b9:	8d 90 ff 0f 00 00    	lea    0xfff(%rax),%edx$/;"	l
ffff8000001025bf	kernel.asm	/^ffff8000001025bf:	85 c0                	test   %eax,%eax$/;"	l
ffff8000001025c1	kernel.asm	/^ffff8000001025c1:	0f 48 c2             	cmovs  %edx,%eax$/;"	l
ffff8000001025c4	kernel.asm	/^ffff8000001025c4:	c1 f8 0c             	sar    $0xc,%eax$/;"	l
ffff8000001025c7	kernel.asm	/^ffff8000001025c7:	89 c2                	mov    %eax,%edx$/;"	l
ffff8000001025c9	kernel.asm	/^ffff8000001025c9:	48 b8 40 86 11 00 00 	movabs $0xffff800000118640,%rax$/;"	l
ffff8000001025d0	kernel.asm	/^ffff8000001025d0:	80 ff ff $/;"	l
ffff8000001025d3	kernel.asm	/^ffff8000001025d3:	8b 40 18             	mov    0x18(%rax),%eax$/;"	l
ffff8000001025d6	kernel.asm	/^ffff8000001025d6:	01 c2                	add    %eax,%edx$/;"	l
ffff8000001025d8	kernel.asm	/^ffff8000001025d8:	8b 45 dc             	mov    -0x24(%rbp),%eax$/;"	l
ffff8000001025db	kernel.asm	/^ffff8000001025db:	89 d6                	mov    %edx,%esi$/;"	l
ffff8000001025dd	kernel.asm	/^ffff8000001025dd:	89 c7                	mov    %eax,%edi$/;"	l
ffff8000001025df	kernel.asm	/^ffff8000001025df:	48 b8 f8 03 10 00 00 	movabs $0xffff8000001003f8,%rax$/;"	l
ffff8000001025e6	kernel.asm	/^ffff8000001025e6:	80 ff ff $/;"	l
ffff8000001025e9	kernel.asm	/^ffff8000001025e9:	ff d0                	callq  *%rax$/;"	l
ffff8000001025eb	kernel.asm	/^ffff8000001025eb:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ffff8000001025ef	kernel.asm	/^ffff8000001025ef:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)$/;"	l
ffff8000001025f6	kernel.asm	/^ffff8000001025f6:	e9 cc 00 00 00       	jmpq   ffff8000001026c7 <balloc+0x130>$/;"	l
ffff8000001025fb	kernel.asm	/^ffff8000001025fb:	8b 45 f8             	mov    -0x8(%rbp),%eax$/;"	l
ffff8000001025fe	kernel.asm	/^ffff8000001025fe:	99                   	cltd   $/;"	l
ffff8000001025ff	kernel.asm	/^ffff8000001025ff:	c1 ea 1d             	shr    $0x1d,%edx$/;"	l
ffff800000102602	kernel.asm	/^ffff800000102602:	01 d0                	add    %edx,%eax$/;"	l
ffff800000102604	kernel.asm	/^ffff800000102604:	83 e0 07             	and    $0x7,%eax$/;"	l
ffff800000102607	kernel.asm	/^ffff800000102607:	29 d0                	sub    %edx,%eax$/;"	l
ffff800000102609	kernel.asm	/^ffff800000102609:	ba 01 00 00 00       	mov    $0x1,%edx$/;"	l
ffff80000010260e	kernel.asm	/^ffff80000010260e:	89 c1                	mov    %eax,%ecx$/;"	l
ffff800000102610	kernel.asm	/^ffff800000102610:	d3 e2                	shl    %cl,%edx$/;"	d
ffff800000102612	kernel.asm	/^ffff800000102612:	89 d0                	mov    %edx,%eax$/;"	l
ffff800000102614	kernel.asm	/^ffff800000102614:	89 45 ec             	mov    %eax,-0x14(%rbp)$/;"	l
ffff800000102617	kernel.asm	/^ffff800000102617:	8b 45 f8             	mov    -0x8(%rbp),%eax$/;"	l
ffff80000010261a	kernel.asm	/^ffff80000010261a:	8d 50 07             	lea    0x7(%rax),%edx$/;"	l
ffff80000010261d	kernel.asm	/^ffff80000010261d:	85 c0                	test   %eax,%eax$/;"	l
ffff80000010261f	kernel.asm	/^ffff80000010261f:	0f 48 c2             	cmovs  %edx,%eax$/;"	l
ffff800000102622	kernel.asm	/^ffff800000102622:	c1 f8 03             	sar    $0x3,%eax$/;"	l
ffff800000102625	kernel.asm	/^ffff800000102625:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
ffff800000102629	kernel.asm	/^ffff800000102629:	48 98                	cltq   $/;"	l
ffff80000010262b	kernel.asm	/^ffff80000010262b:	0f b6 84 02 b0 00 00 	movzbl 0xb0(%rdx,%rax,1),%eax$/;"	l
ffff800000102632	kernel.asm	/^ffff800000102632:	00 $/;"	l
ffff800000102633	kernel.asm	/^ffff800000102633:	0f b6 c0             	movzbl %al,%eax$/;"	l
ffff800000102636	kernel.asm	/^ffff800000102636:	23 45 ec             	and    -0x14(%rbp),%eax$/;"	l
ffff800000102639	kernel.asm	/^ffff800000102639:	85 c0                	test   %eax,%eax$/;"	l
ffff80000010263b	kernel.asm	/^ffff80000010263b:	0f 85 82 00 00 00    	jne    ffff8000001026c3 <balloc+0x12c>$/;"	l
ffff800000102641	kernel.asm	/^ffff800000102641:	8b 45 f8             	mov    -0x8(%rbp),%eax$/;"	l
ffff800000102644	kernel.asm	/^ffff800000102644:	8d 50 07             	lea    0x7(%rax),%edx$/;"	l
ffff800000102647	kernel.asm	/^ffff800000102647:	85 c0                	test   %eax,%eax$/;"	l
ffff800000102649	kernel.asm	/^ffff800000102649:	0f 48 c2             	cmovs  %edx,%eax$/;"	l
ffff80000010264c	kernel.asm	/^ffff80000010264c:	c1 f8 03             	sar    $0x3,%eax$/;"	l
ffff80000010264f	kernel.asm	/^ffff80000010264f:	89 c1                	mov    %eax,%ecx$/;"	l
ffff800000102651	kernel.asm	/^ffff800000102651:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
ffff800000102655	kernel.asm	/^ffff800000102655:	48 63 c1             	movslq %ecx,%rax$/;"	l
ffff800000102658	kernel.asm	/^ffff800000102658:	0f b6 84 02 b0 00 00 	movzbl 0xb0(%rdx,%rax,1),%eax$/;"	l
ffff80000010265f	kernel.asm	/^ffff80000010265f:	00 $/;"	l
ffff800000102660	kernel.asm	/^ffff800000102660:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000102662	kernel.asm	/^ffff800000102662:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
ffff800000102665	kernel.asm	/^ffff800000102665:	09 d0                	or     %edx,%eax$/;"	l
ffff800000102667	kernel.asm	/^ffff800000102667:	89 c6                	mov    %eax,%esi$/;"	l
ffff800000102669	kernel.asm	/^ffff800000102669:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
ffff80000010266d	kernel.asm	/^ffff80000010266d:	48 63 c1             	movslq %ecx,%rax$/;"	l
ffff800000102670	kernel.asm	/^ffff800000102670:	40 88 b4 02 b0 00 00 	mov    %sil,0xb0(%rdx,%rax,1)$/;"	l
ffff800000102677	kernel.asm	/^ffff800000102677:	00 $/;"	l
ffff800000102678	kernel.asm	/^ffff800000102678:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff80000010267c	kernel.asm	/^ffff80000010267c:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010267f	kernel.asm	/^ffff80000010267f:	48 b8 35 56 10 00 00 	movabs $0xffff800000105635,%rax$/;"	l
ffff800000102686	kernel.asm	/^ffff800000102686:	80 ff ff $/;"	l
ffff800000102689	kernel.asm	/^ffff800000102689:	ff d0                	callq  *%rax$/;"	l
ffff80000010268b	kernel.asm	/^ffff80000010268b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff80000010268f	kernel.asm	/^ffff80000010268f:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000102692	kernel.asm	/^ffff800000102692:	48 b8 aa 04 10 00 00 	movabs $0xffff8000001004aa,%rax$/;"	l
ffff800000102699	kernel.asm	/^ffff800000102699:	80 ff ff $/;"	l
ffff80000010269c	kernel.asm	/^ffff80000010269c:	ff d0                	callq  *%rax$/;"	l
ffff80000010269e	kernel.asm	/^ffff80000010269e:	8b 55 fc             	mov    -0x4(%rbp),%edx$/;"	l
ffff8000001026a1	kernel.asm	/^ffff8000001026a1:	8b 45 f8             	mov    -0x8(%rbp),%eax$/;"	l
ffff8000001026a4	kernel.asm	/^ffff8000001026a4:	01 c2                	add    %eax,%edx$/;"	l
ffff8000001026a6	kernel.asm	/^ffff8000001026a6:	8b 45 dc             	mov    -0x24(%rbp),%eax$/;"	l
ffff8000001026a9	kernel.asm	/^ffff8000001026a9:	89 d6                	mov    %edx,%esi$/;"	l
ffff8000001026ab	kernel.asm	/^ffff8000001026ab:	89 c7                	mov    %eax,%edi$/;"	l
ffff8000001026ad	kernel.asm	/^ffff8000001026ad:	48 b8 23 25 10 00 00 	movabs $0xffff800000102523,%rax$/;"	l
ffff8000001026b4	kernel.asm	/^ffff8000001026b4:	80 ff ff $/;"	l
ffff8000001026b7	kernel.asm	/^ffff8000001026b7:	ff d0                	callq  *%rax$/;"	l
ffff8000001026b9	kernel.asm	/^ffff8000001026b9:	8b 55 fc             	mov    -0x4(%rbp),%edx$/;"	l
ffff8000001026bc	kernel.asm	/^ffff8000001026bc:	8b 45 f8             	mov    -0x8(%rbp),%eax$/;"	l
ffff8000001026bf	kernel.asm	/^ffff8000001026bf:	01 d0                	add    %edx,%eax$/;"	l
ffff8000001026c1	kernel.asm	/^ffff8000001026c1:	eb 72                	jmp    ffff800000102735 <balloc+0x19e>$/;"	l
ffff8000001026c3	kernel.asm	/^ffff8000001026c3:	83 45 f8 01          	addl   $0x1,-0x8(%rbp)$/;"	l
ffff8000001026c7	kernel.asm	/^ffff8000001026c7:	81 7d f8 ff 0f 00 00 	cmpl   $0xfff,-0x8(%rbp)$/;"	l
ffff8000001026ce	kernel.asm	/^ffff8000001026ce:	7f 1e                	jg     ffff8000001026ee <balloc+0x157>$/;"	l
ffff8000001026d0	kernel.asm	/^ffff8000001026d0:	8b 55 fc             	mov    -0x4(%rbp),%edx$/;"	l
ffff8000001026d3	kernel.asm	/^ffff8000001026d3:	8b 45 f8             	mov    -0x8(%rbp),%eax$/;"	l
ffff8000001026d6	kernel.asm	/^ffff8000001026d6:	01 d0                	add    %edx,%eax$/;"	l
ffff8000001026d8	kernel.asm	/^ffff8000001026d8:	89 c2                	mov    %eax,%edx$/;"	l
ffff8000001026da	kernel.asm	/^ffff8000001026da:	48 b8 40 86 11 00 00 	movabs $0xffff800000118640,%rax$/;"	l
ffff8000001026e1	kernel.asm	/^ffff8000001026e1:	80 ff ff $/;"	l
ffff8000001026e4	kernel.asm	/^ffff8000001026e4:	8b 00                	mov    (%rax),%eax$/;"	l
ffff8000001026e6	kernel.asm	/^ffff8000001026e6:	39 c2                	cmp    %eax,%edx$/;"	l
ffff8000001026e8	kernel.asm	/^ffff8000001026e8:	0f 82 0d ff ff ff    	jb     ffff8000001025fb <balloc+0x64>$/;"	l
ffff8000001026ee	kernel.asm	/^ffff8000001026ee:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff8000001026f2	kernel.asm	/^ffff8000001026f2:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001026f5	kernel.asm	/^ffff8000001026f5:	48 b8 aa 04 10 00 00 	movabs $0xffff8000001004aa,%rax$/;"	l
ffff8000001026fc	kernel.asm	/^ffff8000001026fc:	80 ff ff $/;"	l
ffff8000001026ff	kernel.asm	/^ffff8000001026ff:	ff d0                	callq  *%rax$/;"	l
ffff800000102701	kernel.asm	/^ffff800000102701:	81 45 fc 00 10 00 00 	addl   $0x1000,-0x4(%rbp)$/;"	l
ffff800000102708	kernel.asm	/^ffff800000102708:	48 b8 40 86 11 00 00 	movabs $0xffff800000118640,%rax$/;"	l
ffff80000010270f	kernel.asm	/^ffff80000010270f:	80 ff ff $/;"	l
ffff800000102712	kernel.asm	/^ffff800000102712:	8b 10                	mov    (%rax),%edx$/;"	l
ffff800000102714	kernel.asm	/^ffff800000102714:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff800000102717	kernel.asm	/^ffff800000102717:	39 c2                	cmp    %eax,%edx$/;"	l
ffff800000102719	kernel.asm	/^ffff800000102719:	0f 87 97 fe ff ff    	ja     ffff8000001025b6 <balloc+0x1f>$/;"	l
ffff80000010271f	kernel.asm	/^ffff80000010271f:	48 bf 4c d5 10 00 00 	movabs $0xffff80000010d54c,%rdi$/;"	l
ffff800000102726	kernel.asm	/^ffff800000102726:	80 ff ff $/;"	l
ffff800000102729	kernel.asm	/^ffff800000102729:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff800000102730	kernel.asm	/^ffff800000102730:	80 ff ff $/;"	l
ffff800000102733	kernel.asm	/^ffff800000102733:	ff d0                	callq  *%rax$/;"	l
ffff800000102735	kernel.asm	/^ffff800000102735:	c9                   	leaveq $/;"	l
ffff800000102736	kernel.asm	/^ffff800000102736:	c3                   	retq   $/;"	l
ffff800000102737	kernel.asm	/^ffff800000102737 <bfree>:$/;"	l
ffff800000102737	kernel.asm	/^ffff800000102737:	55                   	push   %rbp$/;"	l
ffff800000102738	kernel.asm	/^ffff800000102738:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010273b	kernel.asm	/^ffff80000010273b:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ffff80000010273f	kernel.asm	/^ffff80000010273f:	89 7d ec             	mov    %edi,-0x14(%rbp)$/;"	l
ffff800000102742	kernel.asm	/^ffff800000102742:	89 75 e8             	mov    %esi,-0x18(%rbp)$/;"	l
ffff800000102745	kernel.asm	/^ffff800000102745:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
ffff800000102748	kernel.asm	/^ffff800000102748:	48 be 40 86 11 00 00 	movabs $0xffff800000118640,%rsi$/;"	l
ffff80000010274f	kernel.asm	/^ffff80000010274f:	80 ff ff $/;"	l
ffff800000102752	kernel.asm	/^ffff800000102752:	89 c7                	mov    %eax,%edi$/;"	l
ffff800000102754	kernel.asm	/^ffff800000102754:	48 b8 be 24 10 00 00 	movabs $0xffff8000001024be,%rax$/;"	l
ffff80000010275b	kernel.asm	/^ffff80000010275b:	80 ff ff $/;"	l
ffff80000010275e	kernel.asm	/^ffff80000010275e:	ff d0                	callq  *%rax$/;"	l
ffff800000102760	kernel.asm	/^ffff800000102760:	8b 45 e8             	mov    -0x18(%rbp),%eax$/;"	l
ffff800000102763	kernel.asm	/^ffff800000102763:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
ffff800000102766	kernel.asm	/^ffff800000102766:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000102768	kernel.asm	/^ffff800000102768:	48 b8 40 86 11 00 00 	movabs $0xffff800000118640,%rax$/;"	l
ffff80000010276f	kernel.asm	/^ffff80000010276f:	80 ff ff $/;"	l
ffff800000102772	kernel.asm	/^ffff800000102772:	8b 40 18             	mov    0x18(%rax),%eax$/;"	l
ffff800000102775	kernel.asm	/^ffff800000102775:	01 c2                	add    %eax,%edx$/;"	l
ffff800000102777	kernel.asm	/^ffff800000102777:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
ffff80000010277a	kernel.asm	/^ffff80000010277a:	89 d6                	mov    %edx,%esi$/;"	l
ffff80000010277c	kernel.asm	/^ffff80000010277c:	89 c7                	mov    %eax,%edi$/;"	l
ffff80000010277e	kernel.asm	/^ffff80000010277e:	48 b8 f8 03 10 00 00 	movabs $0xffff8000001003f8,%rax$/;"	l
ffff800000102785	kernel.asm	/^ffff800000102785:	80 ff ff $/;"	l
ffff800000102788	kernel.asm	/^ffff800000102788:	ff d0                	callq  *%rax$/;"	l
ffff80000010278a	kernel.asm	/^ffff80000010278a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff80000010278e	kernel.asm	/^ffff80000010278e:	8b 45 e8             	mov    -0x18(%rbp),%eax$/;"	l
ffff800000102791	kernel.asm	/^ffff800000102791:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
ffff800000102796	kernel.asm	/^ffff800000102796:	89 45 f4             	mov    %eax,-0xc(%rbp)$/;"	l
ffff800000102799	kernel.asm	/^ffff800000102799:	8b 45 f4             	mov    -0xc(%rbp),%eax$/;"	l
ffff80000010279c	kernel.asm	/^ffff80000010279c:	99                   	cltd   $/;"	l
ffff80000010279d	kernel.asm	/^ffff80000010279d:	c1 ea 1d             	shr    $0x1d,%edx$/;"	l
ffff8000001027a0	kernel.asm	/^ffff8000001027a0:	01 d0                	add    %edx,%eax$/;"	l
ffff8000001027a2	kernel.asm	/^ffff8000001027a2:	83 e0 07             	and    $0x7,%eax$/;"	l
ffff8000001027a5	kernel.asm	/^ffff8000001027a5:	29 d0                	sub    %edx,%eax$/;"	l
ffff8000001027a7	kernel.asm	/^ffff8000001027a7:	ba 01 00 00 00       	mov    $0x1,%edx$/;"	l
ffff8000001027ac	kernel.asm	/^ffff8000001027ac:	89 c1                	mov    %eax,%ecx$/;"	l
ffff8000001027ae	kernel.asm	/^ffff8000001027ae:	d3 e2                	shl    %cl,%edx$/;"	d
ffff8000001027b0	kernel.asm	/^ffff8000001027b0:	89 d0                	mov    %edx,%eax$/;"	l
ffff8000001027b2	kernel.asm	/^ffff8000001027b2:	89 45 f0             	mov    %eax,-0x10(%rbp)$/;"	l
ffff8000001027b5	kernel.asm	/^ffff8000001027b5:	8b 45 f4             	mov    -0xc(%rbp),%eax$/;"	l
ffff8000001027b8	kernel.asm	/^ffff8000001027b8:	8d 50 07             	lea    0x7(%rax),%edx$/;"	l
ffff8000001027bb	kernel.asm	/^ffff8000001027bb:	85 c0                	test   %eax,%eax$/;"	l
ffff8000001027bd	kernel.asm	/^ffff8000001027bd:	0f 48 c2             	cmovs  %edx,%eax$/;"	l
ffff8000001027c0	kernel.asm	/^ffff8000001027c0:	c1 f8 03             	sar    $0x3,%eax$/;"	l
ffff8000001027c3	kernel.asm	/^ffff8000001027c3:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx$/;"	l
ffff8000001027c7	kernel.asm	/^ffff8000001027c7:	48 98                	cltq   $/;"	l
ffff8000001027c9	kernel.asm	/^ffff8000001027c9:	0f b6 84 02 b0 00 00 	movzbl 0xb0(%rdx,%rax,1),%eax$/;"	l
ffff8000001027d0	kernel.asm	/^ffff8000001027d0:	00 $/;"	l
ffff8000001027d1	kernel.asm	/^ffff8000001027d1:	0f b6 c0             	movzbl %al,%eax$/;"	l
ffff8000001027d4	kernel.asm	/^ffff8000001027d4:	23 45 f0             	and    -0x10(%rbp),%eax$/;"	l
ffff8000001027d7	kernel.asm	/^ffff8000001027d7:	85 c0                	test   %eax,%eax$/;"	l
ffff8000001027d9	kernel.asm	/^ffff8000001027d9:	75 16                	jne    ffff8000001027f1 <bfree+0xba>$/;"	l
ffff8000001027db	kernel.asm	/^ffff8000001027db:	48 bf 62 d5 10 00 00 	movabs $0xffff80000010d562,%rdi$/;"	l
ffff8000001027e2	kernel.asm	/^ffff8000001027e2:	80 ff ff $/;"	l
ffff8000001027e5	kernel.asm	/^ffff8000001027e5:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff8000001027ec	kernel.asm	/^ffff8000001027ec:	80 ff ff $/;"	l
ffff8000001027ef	kernel.asm	/^ffff8000001027ef:	ff d0                	callq  *%rax$/;"	l
ffff8000001027f1	kernel.asm	/^ffff8000001027f1:	8b 45 f4             	mov    -0xc(%rbp),%eax$/;"	l
ffff8000001027f4	kernel.asm	/^ffff8000001027f4:	8d 50 07             	lea    0x7(%rax),%edx$/;"	l
ffff8000001027f7	kernel.asm	/^ffff8000001027f7:	85 c0                	test   %eax,%eax$/;"	l
ffff8000001027f9	kernel.asm	/^ffff8000001027f9:	0f 48 c2             	cmovs  %edx,%eax$/;"	l
ffff8000001027fc	kernel.asm	/^ffff8000001027fc:	c1 f8 03             	sar    $0x3,%eax$/;"	l
ffff8000001027ff	kernel.asm	/^ffff8000001027ff:	89 c1                	mov    %eax,%ecx$/;"	l
ffff800000102801	kernel.asm	/^ffff800000102801:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx$/;"	l
ffff800000102805	kernel.asm	/^ffff800000102805:	48 63 c1             	movslq %ecx,%rax$/;"	l
ffff800000102808	kernel.asm	/^ffff800000102808:	0f b6 84 02 b0 00 00 	movzbl 0xb0(%rdx,%rax,1),%eax$/;"	l
ffff80000010280f	kernel.asm	/^ffff80000010280f:	00 $/;"	l
ffff800000102810	kernel.asm	/^ffff800000102810:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000102812	kernel.asm	/^ffff800000102812:	8b 45 f0             	mov    -0x10(%rbp),%eax$/;"	l
ffff800000102815	kernel.asm	/^ffff800000102815:	f7 d0                	not    %eax$/;"	l
ffff800000102817	kernel.asm	/^ffff800000102817:	21 d0                	and    %edx,%eax$/;"	l
ffff800000102819	kernel.asm	/^ffff800000102819:	89 c6                	mov    %eax,%esi$/;"	l
ffff80000010281b	kernel.asm	/^ffff80000010281b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx$/;"	l
ffff80000010281f	kernel.asm	/^ffff80000010281f:	48 63 c1             	movslq %ecx,%rax$/;"	l
ffff800000102822	kernel.asm	/^ffff800000102822:	40 88 b4 02 b0 00 00 	mov    %sil,0xb0(%rdx,%rax,1)$/;"	l
ffff800000102829	kernel.asm	/^ffff800000102829:	00 $/;"	l
ffff80000010282a	kernel.asm	/^ffff80000010282a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010282e	kernel.asm	/^ffff80000010282e:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000102831	kernel.asm	/^ffff800000102831:	48 b8 35 56 10 00 00 	movabs $0xffff800000105635,%rax$/;"	l
ffff800000102838	kernel.asm	/^ffff800000102838:	80 ff ff $/;"	l
ffff80000010283b	kernel.asm	/^ffff80000010283b:	ff d0                	callq  *%rax$/;"	l
ffff80000010283d	kernel.asm	/^ffff80000010283d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000102841	kernel.asm	/^ffff800000102841:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000102844	kernel.asm	/^ffff800000102844:	48 b8 aa 04 10 00 00 	movabs $0xffff8000001004aa,%rax$/;"	l
ffff80000010284b	kernel.asm	/^ffff80000010284b:	80 ff ff $/;"	l
ffff80000010284e	kernel.asm	/^ffff80000010284e:	ff d0                	callq  *%rax$/;"	l
ffff800000102850	kernel.asm	/^ffff800000102850:	90                   	nop$/;"	l
ffff800000102851	kernel.asm	/^ffff800000102851:	c9                   	leaveq $/;"	l
ffff800000102852	kernel.asm	/^ffff800000102852:	c3                   	retq   $/;"	l
ffff800000102853	kernel.asm	/^ffff800000102853 <iinit>:$/;"	l
ffff800000102853	kernel.asm	/^ffff800000102853:	55                   	push   %rbp$/;"	l
ffff800000102854	kernel.asm	/^ffff800000102854:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000102857	kernel.asm	/^ffff800000102857:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ffff80000010285b	kernel.asm	/^ffff80000010285b:	89 7d ec             	mov    %edi,-0x14(%rbp)$/;"	l
ffff80000010285e	kernel.asm	/^ffff80000010285e:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)$/;"	l
ffff800000102865	kernel.asm	/^ffff800000102865:	48 be 75 d5 10 00 00 	movabs $0xffff80000010d575,%rsi$/;"	l
ffff80000010286c	kernel.asm	/^ffff80000010286c:	80 ff ff $/;"	l
ffff80000010286f	kernel.asm	/^ffff80000010286f:	48 bf 60 86 11 00 00 	movabs $0xffff800000118660,%rdi$/;"	l
ffff800000102876	kernel.asm	/^ffff800000102876:	80 ff ff $/;"	l
ffff800000102879	kernel.asm	/^ffff800000102879:	48 b8 a1 77 10 00 00 	movabs $0xffff8000001077a1,%rax$/;"	l
ffff800000102880	kernel.asm	/^ffff800000102880:	80 ff ff $/;"	l
ffff800000102883	kernel.asm	/^ffff800000102883:	ff d0                	callq  *%rax$/;"	l
ffff800000102885	kernel.asm	/^ffff800000102885:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)$/;"	l
ffff80000010288c	kernel.asm	/^ffff80000010288c:	eb 50                	jmp    ffff8000001028de <iinit+0x8b>$/;"	l
ffff80000010288e	kernel.asm	/^ffff80000010288e:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff800000102891	kernel.asm	/^ffff800000102891:	48 63 d0             	movslq %eax,%rdx$/;"	l
ffff800000102894	kernel.asm	/^ffff800000102894:	48 89 d0             	mov    %rdx,%rax$/;"	l
ffff800000102897	kernel.asm	/^ffff800000102897:	48 01 c0             	add    %rax,%rax$/;"	l
ffff80000010289a	kernel.asm	/^ffff80000010289a:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff80000010289d	kernel.asm	/^ffff80000010289d:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx$/;"	l
ffff8000001028a4	kernel.asm	/^ffff8000001028a4:	00 $/;"	l
ffff8000001028a5	kernel.asm	/^ffff8000001028a5:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff8000001028a8	kernel.asm	/^ffff8000001028a8:	48 c1 e0 03          	shl    $0x3,%rax$/;"	l
ffff8000001028ac	kernel.asm	/^ffff8000001028ac:	48 8d 50 70          	lea    0x70(%rax),%rdx$/;"	l
ffff8000001028b0	kernel.asm	/^ffff8000001028b0:	48 b8 60 86 11 00 00 	movabs $0xffff800000118660,%rax$/;"	l
ffff8000001028b7	kernel.asm	/^ffff8000001028b7:	80 ff ff $/;"	l
ffff8000001028ba	kernel.asm	/^ffff8000001028ba:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff8000001028bd	kernel.asm	/^ffff8000001028bd:	48 83 c0 08          	add    $0x8,%rax$/;"	l
ffff8000001028c1	kernel.asm	/^ffff8000001028c1:	48 be 7c d5 10 00 00 	movabs $0xffff80000010d57c,%rsi$/;"	l
ffff8000001028c8	kernel.asm	/^ffff8000001028c8:	80 ff ff $/;"	l
ffff8000001028cb	kernel.asm	/^ffff8000001028cb:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001028ce	kernel.asm	/^ffff8000001028ce:	48 b8 ce 75 10 00 00 	movabs $0xffff8000001075ce,%rax$/;"	l
ffff8000001028d5	kernel.asm	/^ffff8000001028d5:	80 ff ff $/;"	l
ffff8000001028d8	kernel.asm	/^ffff8000001028d8:	ff d0                	callq  *%rax$/;"	l
ffff8000001028da	kernel.asm	/^ffff8000001028da:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)$/;"	l
ffff8000001028de	kernel.asm	/^ffff8000001028de:	83 7d fc 31          	cmpl   $0x31,-0x4(%rbp)$/;"	l
ffff8000001028e2	kernel.asm	/^ffff8000001028e2:	7e aa                	jle    ffff80000010288e <iinit+0x3b>$/;"	l
ffff8000001028e4	kernel.asm	/^ffff8000001028e4:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
ffff8000001028e7	kernel.asm	/^ffff8000001028e7:	48 be 40 86 11 00 00 	movabs $0xffff800000118640,%rsi$/;"	l
ffff8000001028ee	kernel.asm	/^ffff8000001028ee:	80 ff ff $/;"	l
ffff8000001028f1	kernel.asm	/^ffff8000001028f1:	89 c7                	mov    %eax,%edi$/;"	l
ffff8000001028f3	kernel.asm	/^ffff8000001028f3:	48 b8 be 24 10 00 00 	movabs $0xffff8000001024be,%rax$/;"	l
ffff8000001028fa	kernel.asm	/^ffff8000001028fa:	80 ff ff $/;"	l
ffff8000001028fd	kernel.asm	/^ffff8000001028fd:	ff d0                	callq  *%rax$/;"	l
ffff8000001028ff	kernel.asm	/^ffff8000001028ff:	90                   	nop$/;"	l
ffff800000102900	kernel.asm	/^ffff800000102900:	c9                   	leaveq $/;"	l
ffff800000102901	kernel.asm	/^ffff800000102901:	c3                   	retq   $/;"	l
ffff800000102902	kernel.asm	/^ffff800000102902 <ialloc>:$/;"	l
ffff800000102902	kernel.asm	/^ffff800000102902:	55                   	push   %rbp$/;"	l
ffff800000102903	kernel.asm	/^ffff800000102903:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000102906	kernel.asm	/^ffff800000102906:	48 83 ec 30          	sub    $0x30,%rsp$/;"	l
ffff80000010290a	kernel.asm	/^ffff80000010290a:	89 7d dc             	mov    %edi,-0x24(%rbp)$/;"	l
ffff80000010290d	kernel.asm	/^ffff80000010290d:	89 f0                	mov    %esi,%eax$/;"	l
ffff80000010290f	kernel.asm	/^ffff80000010290f:	66 89 45 d8          	mov    %ax,-0x28(%rbp)$/;"	l
ffff800000102913	kernel.asm	/^ffff800000102913:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%rbp)$/;"	l
ffff80000010291a	kernel.asm	/^ffff80000010291a:	e9 d8 00 00 00       	jmpq   ffff8000001029f7 <ialloc+0xf5>$/;"	l
ffff80000010291f	kernel.asm	/^ffff80000010291f:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff800000102922	kernel.asm	/^ffff800000102922:	48 98                	cltq   $/;"	l
ffff800000102924	kernel.asm	/^ffff800000102924:	48 c1 e8 03          	shr    $0x3,%rax$/;"	l
ffff800000102928	kernel.asm	/^ffff800000102928:	89 c2                	mov    %eax,%edx$/;"	l
ffff80000010292a	kernel.asm	/^ffff80000010292a:	48 b8 40 86 11 00 00 	movabs $0xffff800000118640,%rax$/;"	l
ffff800000102931	kernel.asm	/^ffff800000102931:	80 ff ff $/;"	l
ffff800000102934	kernel.asm	/^ffff800000102934:	8b 40 14             	mov    0x14(%rax),%eax$/;"	l
ffff800000102937	kernel.asm	/^ffff800000102937:	01 c2                	add    %eax,%edx$/;"	l
ffff800000102939	kernel.asm	/^ffff800000102939:	8b 45 dc             	mov    -0x24(%rbp),%eax$/;"	l
ffff80000010293c	kernel.asm	/^ffff80000010293c:	89 d6                	mov    %edx,%esi$/;"	l
ffff80000010293e	kernel.asm	/^ffff80000010293e:	89 c7                	mov    %eax,%edi$/;"	l
ffff800000102940	kernel.asm	/^ffff800000102940:	48 b8 f8 03 10 00 00 	movabs $0xffff8000001003f8,%rax$/;"	l
ffff800000102947	kernel.asm	/^ffff800000102947:	80 ff ff $/;"	l
ffff80000010294a	kernel.asm	/^ffff80000010294a:	ff d0                	callq  *%rax$/;"	l
ffff80000010294c	kernel.asm	/^ffff80000010294c:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ffff800000102950	kernel.asm	/^ffff800000102950:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000102954	kernel.asm	/^ffff800000102954:	48 8d 90 b0 00 00 00 	lea    0xb0(%rax),%rdx$/;"	l
ffff80000010295b	kernel.asm	/^ffff80000010295b:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff80000010295e	kernel.asm	/^ffff80000010295e:	48 98                	cltq   $/;"	l
ffff800000102960	kernel.asm	/^ffff800000102960:	83 e0 07             	and    $0x7,%eax$/;"	l
ffff800000102963	kernel.asm	/^ffff800000102963:	48 c1 e0 06          	shl    $0x6,%rax$/;"	l
ffff800000102967	kernel.asm	/^ffff800000102967:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff80000010296a	kernel.asm	/^ffff80000010296a:	48 89 45 e8          	mov    %rax,-0x18(%rbp)$/;"	l
ffff80000010296e	kernel.asm	/^ffff80000010296e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000102972	kernel.asm	/^ffff800000102972:	0f b7 00             	movzwl (%rax),%eax$/;"	l
ffff800000102975	kernel.asm	/^ffff800000102975:	66 85 c0             	test   %ax,%ax$/;"	l
ffff800000102978	kernel.asm	/^ffff800000102978:	75 66                	jne    ffff8000001029e0 <ialloc+0xde>$/;"	l
ffff80000010297a	kernel.asm	/^ffff80000010297a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010297e	kernel.asm	/^ffff80000010297e:	ba 40 00 00 00       	mov    $0x40,%edx$/;"	l
ffff800000102983	kernel.asm	/^ffff800000102983:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffff800000102988	kernel.asm	/^ffff800000102988:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010298b	kernel.asm	/^ffff80000010298b:	48 b8 72 7b 10 00 00 	movabs $0xffff800000107b72,%rax$/;"	l
ffff800000102992	kernel.asm	/^ffff800000102992:	80 ff ff $/;"	l
ffff800000102995	kernel.asm	/^ffff800000102995:	ff d0                	callq  *%rax$/;"	l
ffff800000102997	kernel.asm	/^ffff800000102997:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010299b	kernel.asm	/^ffff80000010299b:	0f b7 55 d8          	movzwl -0x28(%rbp),%edx$/;"	l
ffff80000010299f	kernel.asm	/^ffff80000010299f:	66 89 10             	mov    %dx,(%rax)$/;"	l
ffff8000001029a2	kernel.asm	/^ffff8000001029a2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff8000001029a6	kernel.asm	/^ffff8000001029a6:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001029a9	kernel.asm	/^ffff8000001029a9:	48 b8 35 56 10 00 00 	movabs $0xffff800000105635,%rax$/;"	l
ffff8000001029b0	kernel.asm	/^ffff8000001029b0:	80 ff ff $/;"	l
ffff8000001029b3	kernel.asm	/^ffff8000001029b3:	ff d0                	callq  *%rax$/;"	l
ffff8000001029b5	kernel.asm	/^ffff8000001029b5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff8000001029b9	kernel.asm	/^ffff8000001029b9:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001029bc	kernel.asm	/^ffff8000001029bc:	48 b8 aa 04 10 00 00 	movabs $0xffff8000001004aa,%rax$/;"	l
ffff8000001029c3	kernel.asm	/^ffff8000001029c3:	80 ff ff $/;"	l
ffff8000001029c6	kernel.asm	/^ffff8000001029c6:	ff d0                	callq  *%rax$/;"	l
ffff8000001029c8	kernel.asm	/^ffff8000001029c8:	8b 55 fc             	mov    -0x4(%rbp),%edx$/;"	l
ffff8000001029cb	kernel.asm	/^ffff8000001029cb:	8b 45 dc             	mov    -0x24(%rbp),%eax$/;"	l
ffff8000001029ce	kernel.asm	/^ffff8000001029ce:	89 d6                	mov    %edx,%esi$/;"	l
ffff8000001029d0	kernel.asm	/^ffff8000001029d0:	89 c7                	mov    %eax,%edi$/;"	l
ffff8000001029d2	kernel.asm	/^ffff8000001029d2:	48 b8 39 2b 10 00 00 	movabs $0xffff800000102b39,%rax$/;"	l
ffff8000001029d9	kernel.asm	/^ffff8000001029d9:	80 ff ff $/;"	l
ffff8000001029dc	kernel.asm	/^ffff8000001029dc:	ff d0                	callq  *%rax$/;"	l
ffff8000001029de	kernel.asm	/^ffff8000001029de:	eb 45                	jmp    ffff800000102a25 <ialloc+0x123>$/;"	l
ffff8000001029e0	kernel.asm	/^ffff8000001029e0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff8000001029e4	kernel.asm	/^ffff8000001029e4:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001029e7	kernel.asm	/^ffff8000001029e7:	48 b8 aa 04 10 00 00 	movabs $0xffff8000001004aa,%rax$/;"	l
ffff8000001029ee	kernel.asm	/^ffff8000001029ee:	80 ff ff $/;"	l
ffff8000001029f1	kernel.asm	/^ffff8000001029f1:	ff d0                	callq  *%rax$/;"	l
ffff8000001029f3	kernel.asm	/^ffff8000001029f3:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)$/;"	l
ffff8000001029f7	kernel.asm	/^ffff8000001029f7:	48 b8 40 86 11 00 00 	movabs $0xffff800000118640,%rax$/;"	l
ffff8000001029fe	kernel.asm	/^ffff8000001029fe:	80 ff ff $/;"	l
ffff800000102a01	kernel.asm	/^ffff800000102a01:	8b 50 08             	mov    0x8(%rax),%edx$/;"	l
ffff800000102a04	kernel.asm	/^ffff800000102a04:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff800000102a07	kernel.asm	/^ffff800000102a07:	39 c2                	cmp    %eax,%edx$/;"	l
ffff800000102a09	kernel.asm	/^ffff800000102a09:	0f 87 10 ff ff ff    	ja     ffff80000010291f <ialloc+0x1d>$/;"	l
ffff800000102a0f	kernel.asm	/^ffff800000102a0f:	48 bf 82 d5 10 00 00 	movabs $0xffff80000010d582,%rdi$/;"	l
ffff800000102a16	kernel.asm	/^ffff800000102a16:	80 ff ff $/;"	l
ffff800000102a19	kernel.asm	/^ffff800000102a19:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff800000102a20	kernel.asm	/^ffff800000102a20:	80 ff ff $/;"	l
ffff800000102a23	kernel.asm	/^ffff800000102a23:	ff d0                	callq  *%rax$/;"	l
ffff800000102a25	kernel.asm	/^ffff800000102a25:	c9                   	leaveq $/;"	l
ffff800000102a26	kernel.asm	/^ffff800000102a26:	c3                   	retq   $/;"	l
ffff800000102a27	kernel.asm	/^ffff800000102a27 <iupdate>:$/;"	l
ffff800000102a27	kernel.asm	/^ffff800000102a27:	55                   	push   %rbp$/;"	l
ffff800000102a28	kernel.asm	/^ffff800000102a28:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000102a2b	kernel.asm	/^ffff800000102a2b:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ffff800000102a2f	kernel.asm	/^ffff800000102a2f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
ffff800000102a33	kernel.asm	/^ffff800000102a33:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000102a37	kernel.asm	/^ffff800000102a37:	8b 40 04             	mov    0x4(%rax),%eax$/;"	l
ffff800000102a3a	kernel.asm	/^ffff800000102a3a:	c1 e8 03             	shr    $0x3,%eax$/;"	l
ffff800000102a3d	kernel.asm	/^ffff800000102a3d:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000102a3f	kernel.asm	/^ffff800000102a3f:	48 b8 40 86 11 00 00 	movabs $0xffff800000118640,%rax$/;"	l
ffff800000102a46	kernel.asm	/^ffff800000102a46:	80 ff ff $/;"	l
ffff800000102a49	kernel.asm	/^ffff800000102a49:	8b 40 14             	mov    0x14(%rax),%eax$/;"	l
ffff800000102a4c	kernel.asm	/^ffff800000102a4c:	01 c2                	add    %eax,%edx$/;"	l
ffff800000102a4e	kernel.asm	/^ffff800000102a4e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000102a52	kernel.asm	/^ffff800000102a52:	8b 00                	mov    (%rax),%eax$/;"	l
ffff800000102a54	kernel.asm	/^ffff800000102a54:	89 d6                	mov    %edx,%esi$/;"	l
ffff800000102a56	kernel.asm	/^ffff800000102a56:	89 c7                	mov    %eax,%edi$/;"	l
ffff800000102a58	kernel.asm	/^ffff800000102a58:	48 b8 f8 03 10 00 00 	movabs $0xffff8000001003f8,%rax$/;"	l
ffff800000102a5f	kernel.asm	/^ffff800000102a5f:	80 ff ff $/;"	l
ffff800000102a62	kernel.asm	/^ffff800000102a62:	ff d0                	callq  *%rax$/;"	l
ffff800000102a64	kernel.asm	/^ffff800000102a64:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff800000102a68	kernel.asm	/^ffff800000102a68:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000102a6c	kernel.asm	/^ffff800000102a6c:	48 8d 90 b0 00 00 00 	lea    0xb0(%rax),%rdx$/;"	l
ffff800000102a73	kernel.asm	/^ffff800000102a73:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000102a77	kernel.asm	/^ffff800000102a77:	8b 40 04             	mov    0x4(%rax),%eax$/;"	l
ffff800000102a7a	kernel.asm	/^ffff800000102a7a:	89 c0                	mov    %eax,%eax$/;"	l
ffff800000102a7c	kernel.asm	/^ffff800000102a7c:	83 e0 07             	and    $0x7,%eax$/;"	l
ffff800000102a7f	kernel.asm	/^ffff800000102a7f:	48 c1 e0 06          	shl    $0x6,%rax$/;"	l
ffff800000102a83	kernel.asm	/^ffff800000102a83:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff800000102a86	kernel.asm	/^ffff800000102a86:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ffff800000102a8a	kernel.asm	/^ffff800000102a8a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000102a8e	kernel.asm	/^ffff800000102a8e:	0f b7 90 94 00 00 00 	movzwl 0x94(%rax),%edx$/;"	l
ffff800000102a95	kernel.asm	/^ffff800000102a95:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000102a99	kernel.asm	/^ffff800000102a99:	66 89 10             	mov    %dx,(%rax)$/;"	l
ffff800000102a9c	kernel.asm	/^ffff800000102a9c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000102aa0	kernel.asm	/^ffff800000102aa0:	0f b7 90 96 00 00 00 	movzwl 0x96(%rax),%edx$/;"	l
ffff800000102aa7	kernel.asm	/^ffff800000102aa7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000102aab	kernel.asm	/^ffff800000102aab:	66 89 50 02          	mov    %dx,0x2(%rax)$/;"	l
ffff800000102aaf	kernel.asm	/^ffff800000102aaf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000102ab3	kernel.asm	/^ffff800000102ab3:	0f b7 90 98 00 00 00 	movzwl 0x98(%rax),%edx$/;"	l
ffff800000102aba	kernel.asm	/^ffff800000102aba:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000102abe	kernel.asm	/^ffff800000102abe:	66 89 50 04          	mov    %dx,0x4(%rax)$/;"	l
ffff800000102ac2	kernel.asm	/^ffff800000102ac2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000102ac6	kernel.asm	/^ffff800000102ac6:	0f b7 90 9a 00 00 00 	movzwl 0x9a(%rax),%edx$/;"	l
ffff800000102acd	kernel.asm	/^ffff800000102acd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000102ad1	kernel.asm	/^ffff800000102ad1:	66 89 50 06          	mov    %dx,0x6(%rax)$/;"	l
ffff800000102ad5	kernel.asm	/^ffff800000102ad5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000102ad9	kernel.asm	/^ffff800000102ad9:	8b 90 9c 00 00 00    	mov    0x9c(%rax),%edx$/;"	l
ffff800000102adf	kernel.asm	/^ffff800000102adf:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000102ae3	kernel.asm	/^ffff800000102ae3:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
ffff800000102ae6	kernel.asm	/^ffff800000102ae6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000102aea	kernel.asm	/^ffff800000102aea:	48 8d 88 a0 00 00 00 	lea    0xa0(%rax),%rcx$/;"	l
ffff800000102af1	kernel.asm	/^ffff800000102af1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000102af5	kernel.asm	/^ffff800000102af5:	48 83 c0 0c          	add    $0xc,%rax$/;"	l
ffff800000102af9	kernel.asm	/^ffff800000102af9:	ba 34 00 00 00       	mov    $0x34,%edx$/;"	l
ffff800000102afe	kernel.asm	/^ffff800000102afe:	48 89 ce             	mov    %rcx,%rsi$/;"	l
ffff800000102b01	kernel.asm	/^ffff800000102b01:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000102b04	kernel.asm	/^ffff800000102b04:	48 b8 6f 7c 10 00 00 	movabs $0xffff800000107c6f,%rax$/;"	l
ffff800000102b0b	kernel.asm	/^ffff800000102b0b:	80 ff ff $/;"	l
ffff800000102b0e	kernel.asm	/^ffff800000102b0e:	ff d0                	callq  *%rax$/;"	l
ffff800000102b10	kernel.asm	/^ffff800000102b10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000102b14	kernel.asm	/^ffff800000102b14:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000102b17	kernel.asm	/^ffff800000102b17:	48 b8 35 56 10 00 00 	movabs $0xffff800000105635,%rax$/;"	l
ffff800000102b1e	kernel.asm	/^ffff800000102b1e:	80 ff ff $/;"	l
ffff800000102b21	kernel.asm	/^ffff800000102b21:	ff d0                	callq  *%rax$/;"	l
ffff800000102b23	kernel.asm	/^ffff800000102b23:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000102b27	kernel.asm	/^ffff800000102b27:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000102b2a	kernel.asm	/^ffff800000102b2a:	48 b8 aa 04 10 00 00 	movabs $0xffff8000001004aa,%rax$/;"	l
ffff800000102b31	kernel.asm	/^ffff800000102b31:	80 ff ff $/;"	l
ffff800000102b34	kernel.asm	/^ffff800000102b34:	ff d0                	callq  *%rax$/;"	l
ffff800000102b36	kernel.asm	/^ffff800000102b36:	90                   	nop$/;"	l
ffff800000102b37	kernel.asm	/^ffff800000102b37:	c9                   	leaveq $/;"	l
ffff800000102b38	kernel.asm	/^ffff800000102b38:	c3                   	retq   $/;"	l
ffff800000102b39	kernel.asm	/^ffff800000102b39 <iget>:$/;"	l
ffff800000102b39	kernel.asm	/^ffff800000102b39:	55                   	push   %rbp$/;"	l
ffff800000102b3a	kernel.asm	/^ffff800000102b3a:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000102b3d	kernel.asm	/^ffff800000102b3d:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ffff800000102b41	kernel.asm	/^ffff800000102b41:	89 7d ec             	mov    %edi,-0x14(%rbp)$/;"	l
ffff800000102b44	kernel.asm	/^ffff800000102b44:	89 75 e8             	mov    %esi,-0x18(%rbp)$/;"	l
ffff800000102b47	kernel.asm	/^ffff800000102b47:	48 bf 60 86 11 00 00 	movabs $0xffff800000118660,%rdi$/;"	l
ffff800000102b4e	kernel.asm	/^ffff800000102b4e:	80 ff ff $/;"	l
ffff800000102b51	kernel.asm	/^ffff800000102b51:	48 b8 d6 77 10 00 00 	movabs $0xffff8000001077d6,%rax$/;"	l
ffff800000102b58	kernel.asm	/^ffff800000102b58:	80 ff ff $/;"	l
ffff800000102b5b	kernel.asm	/^ffff800000102b5b:	ff d0                	callq  *%rax$/;"	l
ffff800000102b5d	kernel.asm	/^ffff800000102b5d:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)$/;"	l
ffff800000102b64	kernel.asm	/^ffff800000102b64:	00 $/;"	l
ffff800000102b65	kernel.asm	/^ffff800000102b65:	48 b8 c8 86 11 00 00 	movabs $0xffff8000001186c8,%rax$/;"	l
ffff800000102b6c	kernel.asm	/^ffff800000102b6c:	80 ff ff $/;"	l
ffff800000102b6f	kernel.asm	/^ffff800000102b6f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff800000102b73	kernel.asm	/^ffff800000102b73:	eb 74                	jmp    ffff800000102be9 <iget+0xb0>$/;"	l
ffff800000102b75	kernel.asm	/^ffff800000102b75:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000102b79	kernel.asm	/^ffff800000102b79:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
ffff800000102b7c	kernel.asm	/^ffff800000102b7c:	85 c0                	test   %eax,%eax$/;"	l
ffff800000102b7e	kernel.asm	/^ffff800000102b7e:	7e 47                	jle    ffff800000102bc7 <iget+0x8e>$/;"	l
ffff800000102b80	kernel.asm	/^ffff800000102b80:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000102b84	kernel.asm	/^ffff800000102b84:	8b 00                	mov    (%rax),%eax$/;"	l
ffff800000102b86	kernel.asm	/^ffff800000102b86:	3b 45 ec             	cmp    -0x14(%rbp),%eax$/;"	l
ffff800000102b89	kernel.asm	/^ffff800000102b89:	75 3c                	jne    ffff800000102bc7 <iget+0x8e>$/;"	l
ffff800000102b8b	kernel.asm	/^ffff800000102b8b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000102b8f	kernel.asm	/^ffff800000102b8f:	8b 40 04             	mov    0x4(%rax),%eax$/;"	l
ffff800000102b92	kernel.asm	/^ffff800000102b92:	3b 45 e8             	cmp    -0x18(%rbp),%eax$/;"	l
ffff800000102b95	kernel.asm	/^ffff800000102b95:	75 30                	jne    ffff800000102bc7 <iget+0x8e>$/;"	l
ffff800000102b97	kernel.asm	/^ffff800000102b97:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000102b9b	kernel.asm	/^ffff800000102b9b:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
ffff800000102b9e	kernel.asm	/^ffff800000102b9e:	8d 50 01             	lea    0x1(%rax),%edx$/;"	l
ffff800000102ba1	kernel.asm	/^ffff800000102ba1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000102ba5	kernel.asm	/^ffff800000102ba5:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
ffff800000102ba8	kernel.asm	/^ffff800000102ba8:	48 bf 60 86 11 00 00 	movabs $0xffff800000118660,%rdi$/;"	l
ffff800000102baf	kernel.asm	/^ffff800000102baf:	80 ff ff $/;"	l
ffff800000102bb2	kernel.asm	/^ffff800000102bb2:	48 b8 6f 78 10 00 00 	movabs $0xffff80000010786f,%rax$/;"	l
ffff800000102bb9	kernel.asm	/^ffff800000102bb9:	80 ff ff $/;"	l
ffff800000102bbc	kernel.asm	/^ffff800000102bbc:	ff d0                	callq  *%rax$/;"	l
ffff800000102bbe	kernel.asm	/^ffff800000102bbe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000102bc2	kernel.asm	/^ffff800000102bc2:	e9 a1 00 00 00       	jmpq   ffff800000102c68 <iget+0x12f>$/;"	l
ffff800000102bc7	kernel.asm	/^ffff800000102bc7:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)$/;"	l
ffff800000102bcc	kernel.asm	/^ffff800000102bcc:	75 13                	jne    ffff800000102be1 <iget+0xa8>$/;"	l
ffff800000102bce	kernel.asm	/^ffff800000102bce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000102bd2	kernel.asm	/^ffff800000102bd2:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
ffff800000102bd5	kernel.asm	/^ffff800000102bd5:	85 c0                	test   %eax,%eax$/;"	l
ffff800000102bd7	kernel.asm	/^ffff800000102bd7:	75 08                	jne    ffff800000102be1 <iget+0xa8>$/;"	l
ffff800000102bd9	kernel.asm	/^ffff800000102bd9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000102bdd	kernel.asm	/^ffff800000102bdd:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ffff800000102be1	kernel.asm	/^ffff800000102be1:	48 81 45 f8 d8 00 00 	addq   $0xd8,-0x8(%rbp)$/;"	l
ffff800000102be8	kernel.asm	/^ffff800000102be8:	00 $/;"	l
ffff800000102be9	kernel.asm	/^ffff800000102be9:	48 b8 f8 b0 11 00 00 	movabs $0xffff80000011b0f8,%rax$/;"	l
ffff800000102bf0	kernel.asm	/^ffff800000102bf0:	80 ff ff $/;"	l
ffff800000102bf3	kernel.asm	/^ffff800000102bf3:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)$/;"	l
ffff800000102bf7	kernel.asm	/^ffff800000102bf7:	0f 82 78 ff ff ff    	jb     ffff800000102b75 <iget+0x3c>$/;"	l
ffff800000102bfd	kernel.asm	/^ffff800000102bfd:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)$/;"	l
ffff800000102c02	kernel.asm	/^ffff800000102c02:	75 16                	jne    ffff800000102c1a <iget+0xe1>$/;"	l
ffff800000102c04	kernel.asm	/^ffff800000102c04:	48 bf 94 d5 10 00 00 	movabs $0xffff80000010d594,%rdi$/;"	l
ffff800000102c0b	kernel.asm	/^ffff800000102c0b:	80 ff ff $/;"	l
ffff800000102c0e	kernel.asm	/^ffff800000102c0e:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff800000102c15	kernel.asm	/^ffff800000102c15:	80 ff ff $/;"	l
ffff800000102c18	kernel.asm	/^ffff800000102c18:	ff d0                	callq  *%rax$/;"	l
ffff800000102c1a	kernel.asm	/^ffff800000102c1a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000102c1e	kernel.asm	/^ffff800000102c1e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff800000102c22	kernel.asm	/^ffff800000102c22:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000102c26	kernel.asm	/^ffff800000102c26:	8b 55 ec             	mov    -0x14(%rbp),%edx$/;"	l
ffff800000102c29	kernel.asm	/^ffff800000102c29:	89 10                	mov    %edx,(%rax)$/;"	l
ffff800000102c2b	kernel.asm	/^ffff800000102c2b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000102c2f	kernel.asm	/^ffff800000102c2f:	8b 55 e8             	mov    -0x18(%rbp),%edx$/;"	l
ffff800000102c32	kernel.asm	/^ffff800000102c32:	89 50 04             	mov    %edx,0x4(%rax)$/;"	l
ffff800000102c35	kernel.asm	/^ffff800000102c35:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000102c39	kernel.asm	/^ffff800000102c39:	c7 40 08 01 00 00 00 	movl   $0x1,0x8(%rax)$/;"	l
ffff800000102c40	kernel.asm	/^ffff800000102c40:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000102c44	kernel.asm	/^ffff800000102c44:	c7 80 90 00 00 00 00 	movl   $0x0,0x90(%rax)$/;"	l
ffff800000102c4b	kernel.asm	/^ffff800000102c4b:	00 00 00 $/;"	l
ffff800000102c4e	kernel.asm	/^ffff800000102c4e:	48 bf 60 86 11 00 00 	movabs $0xffff800000118660,%rdi$/;"	l
ffff800000102c55	kernel.asm	/^ffff800000102c55:	80 ff ff $/;"	l
ffff800000102c58	kernel.asm	/^ffff800000102c58:	48 b8 6f 78 10 00 00 	movabs $0xffff80000010786f,%rax$/;"	l
ffff800000102c5f	kernel.asm	/^ffff800000102c5f:	80 ff ff $/;"	l
ffff800000102c62	kernel.asm	/^ffff800000102c62:	ff d0                	callq  *%rax$/;"	l
ffff800000102c64	kernel.asm	/^ffff800000102c64:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000102c68	kernel.asm	/^ffff800000102c68:	c9                   	leaveq $/;"	l
ffff800000102c69	kernel.asm	/^ffff800000102c69:	c3                   	retq   $/;"	l
ffff800000102c6a	kernel.asm	/^ffff800000102c6a <idup>:$/;"	l
ffff800000102c6a	kernel.asm	/^ffff800000102c6a:	55                   	push   %rbp$/;"	l
ffff800000102c6b	kernel.asm	/^ffff800000102c6b:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000102c6e	kernel.asm	/^ffff800000102c6e:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff800000102c72	kernel.asm	/^ffff800000102c72:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)$/;"	l
ffff800000102c76	kernel.asm	/^ffff800000102c76:	48 bf 60 86 11 00 00 	movabs $0xffff800000118660,%rdi$/;"	l
ffff800000102c7d	kernel.asm	/^ffff800000102c7d:	80 ff ff $/;"	l
ffff800000102c80	kernel.asm	/^ffff800000102c80:	48 b8 d6 77 10 00 00 	movabs $0xffff8000001077d6,%rax$/;"	l
ffff800000102c87	kernel.asm	/^ffff800000102c87:	80 ff ff $/;"	l
ffff800000102c8a	kernel.asm	/^ffff800000102c8a:	ff d0                	callq  *%rax$/;"	l
ffff800000102c8c	kernel.asm	/^ffff800000102c8c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000102c90	kernel.asm	/^ffff800000102c90:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
ffff800000102c93	kernel.asm	/^ffff800000102c93:	8d 50 01             	lea    0x1(%rax),%edx$/;"	l
ffff800000102c96	kernel.asm	/^ffff800000102c96:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000102c9a	kernel.asm	/^ffff800000102c9a:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
ffff800000102c9d	kernel.asm	/^ffff800000102c9d:	48 bf 60 86 11 00 00 	movabs $0xffff800000118660,%rdi$/;"	l
ffff800000102ca4	kernel.asm	/^ffff800000102ca4:	80 ff ff $/;"	l
ffff800000102ca7	kernel.asm	/^ffff800000102ca7:	48 b8 6f 78 10 00 00 	movabs $0xffff80000010786f,%rax$/;"	l
ffff800000102cae	kernel.asm	/^ffff800000102cae:	80 ff ff $/;"	l
ffff800000102cb1	kernel.asm	/^ffff800000102cb1:	ff d0                	callq  *%rax$/;"	l
ffff800000102cb3	kernel.asm	/^ffff800000102cb3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000102cb7	kernel.asm	/^ffff800000102cb7:	c9                   	leaveq $/;"	l
ffff800000102cb8	kernel.asm	/^ffff800000102cb8:	c3                   	retq   $/;"	l
ffff800000102cb9	kernel.asm	/^ffff800000102cb9 <ilock>:$/;"	l
ffff800000102cb9	kernel.asm	/^ffff800000102cb9:	55                   	push   %rbp$/;"	l
ffff800000102cba	kernel.asm	/^ffff800000102cba:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000102cbd	kernel.asm	/^ffff800000102cbd:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ffff800000102cc1	kernel.asm	/^ffff800000102cc1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
ffff800000102cc5	kernel.asm	/^ffff800000102cc5:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)$/;"	l
ffff800000102cca	kernel.asm	/^ffff800000102cca:	74 0b                	je     ffff800000102cd7 <ilock+0x1e>$/;"	l
ffff800000102ccc	kernel.asm	/^ffff800000102ccc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000102cd0	kernel.asm	/^ffff800000102cd0:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
ffff800000102cd3	kernel.asm	/^ffff800000102cd3:	85 c0                	test   %eax,%eax$/;"	l
ffff800000102cd5	kernel.asm	/^ffff800000102cd5:	7f 16                	jg     ffff800000102ced <ilock+0x34>$/;"	l
ffff800000102cd7	kernel.asm	/^ffff800000102cd7:	48 bf a4 d5 10 00 00 	movabs $0xffff80000010d5a4,%rdi$/;"	l
ffff800000102cde	kernel.asm	/^ffff800000102cde:	80 ff ff $/;"	l
ffff800000102ce1	kernel.asm	/^ffff800000102ce1:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff800000102ce8	kernel.asm	/^ffff800000102ce8:	80 ff ff $/;"	l
ffff800000102ceb	kernel.asm	/^ffff800000102ceb:	ff d0                	callq  *%rax$/;"	l
ffff800000102ced	kernel.asm	/^ffff800000102ced:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000102cf1	kernel.asm	/^ffff800000102cf1:	48 83 c0 10          	add    $0x10,%rax$/;"	l
ffff800000102cf5	kernel.asm	/^ffff800000102cf5:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000102cf8	kernel.asm	/^ffff800000102cf8:	48 b8 23 76 10 00 00 	movabs $0xffff800000107623,%rax$/;"	l
ffff800000102cff	kernel.asm	/^ffff800000102cff:	80 ff ff $/;"	l
ffff800000102d02	kernel.asm	/^ffff800000102d02:	ff d0                	callq  *%rax$/;"	l
ffff800000102d04	kernel.asm	/^ffff800000102d04:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000102d08	kernel.asm	/^ffff800000102d08:	8b 80 90 00 00 00    	mov    0x90(%rax),%eax$/;"	l
ffff800000102d0e	kernel.asm	/^ffff800000102d0e:	83 e0 02             	and    $0x2,%eax$/;"	l
ffff800000102d11	kernel.asm	/^ffff800000102d11:	85 c0                	test   %eax,%eax$/;"	l
ffff800000102d13	kernel.asm	/^ffff800000102d13:	0f 85 2e 01 00 00    	jne    ffff800000102e47 <ilock+0x18e>$/;"	l
ffff800000102d19	kernel.asm	/^ffff800000102d19:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000102d1d	kernel.asm	/^ffff800000102d1d:	8b 40 04             	mov    0x4(%rax),%eax$/;"	l
ffff800000102d20	kernel.asm	/^ffff800000102d20:	c1 e8 03             	shr    $0x3,%eax$/;"	l
ffff800000102d23	kernel.asm	/^ffff800000102d23:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000102d25	kernel.asm	/^ffff800000102d25:	48 b8 40 86 11 00 00 	movabs $0xffff800000118640,%rax$/;"	l
ffff800000102d2c	kernel.asm	/^ffff800000102d2c:	80 ff ff $/;"	l
ffff800000102d2f	kernel.asm	/^ffff800000102d2f:	8b 40 14             	mov    0x14(%rax),%eax$/;"	l
ffff800000102d32	kernel.asm	/^ffff800000102d32:	01 c2                	add    %eax,%edx$/;"	l
ffff800000102d34	kernel.asm	/^ffff800000102d34:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000102d38	kernel.asm	/^ffff800000102d38:	8b 00                	mov    (%rax),%eax$/;"	l
ffff800000102d3a	kernel.asm	/^ffff800000102d3a:	89 d6                	mov    %edx,%esi$/;"	l
ffff800000102d3c	kernel.asm	/^ffff800000102d3c:	89 c7                	mov    %eax,%edi$/;"	l
ffff800000102d3e	kernel.asm	/^ffff800000102d3e:	48 b8 f8 03 10 00 00 	movabs $0xffff8000001003f8,%rax$/;"	l
ffff800000102d45	kernel.asm	/^ffff800000102d45:	80 ff ff $/;"	l
ffff800000102d48	kernel.asm	/^ffff800000102d48:	ff d0                	callq  *%rax$/;"	l
ffff800000102d4a	kernel.asm	/^ffff800000102d4a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff800000102d4e	kernel.asm	/^ffff800000102d4e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000102d52	kernel.asm	/^ffff800000102d52:	48 8d 90 b0 00 00 00 	lea    0xb0(%rax),%rdx$/;"	l
ffff800000102d59	kernel.asm	/^ffff800000102d59:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000102d5d	kernel.asm	/^ffff800000102d5d:	8b 40 04             	mov    0x4(%rax),%eax$/;"	l
ffff800000102d60	kernel.asm	/^ffff800000102d60:	89 c0                	mov    %eax,%eax$/;"	l
ffff800000102d62	kernel.asm	/^ffff800000102d62:	83 e0 07             	and    $0x7,%eax$/;"	l
ffff800000102d65	kernel.asm	/^ffff800000102d65:	48 c1 e0 06          	shl    $0x6,%rax$/;"	l
ffff800000102d69	kernel.asm	/^ffff800000102d69:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff800000102d6c	kernel.asm	/^ffff800000102d6c:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ffff800000102d70	kernel.asm	/^ffff800000102d70:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000102d74	kernel.asm	/^ffff800000102d74:	0f b7 10             	movzwl (%rax),%edx$/;"	l
ffff800000102d77	kernel.asm	/^ffff800000102d77:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000102d7b	kernel.asm	/^ffff800000102d7b:	66 89 90 94 00 00 00 	mov    %dx,0x94(%rax)$/;"	l
ffff800000102d82	kernel.asm	/^ffff800000102d82:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000102d86	kernel.asm	/^ffff800000102d86:	0f b7 50 02          	movzwl 0x2(%rax),%edx$/;"	l
ffff800000102d8a	kernel.asm	/^ffff800000102d8a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000102d8e	kernel.asm	/^ffff800000102d8e:	66 89 90 96 00 00 00 	mov    %dx,0x96(%rax)$/;"	l
ffff800000102d95	kernel.asm	/^ffff800000102d95:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000102d99	kernel.asm	/^ffff800000102d99:	0f b7 50 04          	movzwl 0x4(%rax),%edx$/;"	l
ffff800000102d9d	kernel.asm	/^ffff800000102d9d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000102da1	kernel.asm	/^ffff800000102da1:	66 89 90 98 00 00 00 	mov    %dx,0x98(%rax)$/;"	l
ffff800000102da8	kernel.asm	/^ffff800000102da8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000102dac	kernel.asm	/^ffff800000102dac:	0f b7 50 06          	movzwl 0x6(%rax),%edx$/;"	l
ffff800000102db0	kernel.asm	/^ffff800000102db0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000102db4	kernel.asm	/^ffff800000102db4:	66 89 90 9a 00 00 00 	mov    %dx,0x9a(%rax)$/;"	l
ffff800000102dbb	kernel.asm	/^ffff800000102dbb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000102dbf	kernel.asm	/^ffff800000102dbf:	8b 50 08             	mov    0x8(%rax),%edx$/;"	l
ffff800000102dc2	kernel.asm	/^ffff800000102dc2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000102dc6	kernel.asm	/^ffff800000102dc6:	89 90 9c 00 00 00    	mov    %edx,0x9c(%rax)$/;"	l
ffff800000102dcc	kernel.asm	/^ffff800000102dcc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000102dd0	kernel.asm	/^ffff800000102dd0:	48 8d 48 0c          	lea    0xc(%rax),%rcx$/;"	l
ffff800000102dd4	kernel.asm	/^ffff800000102dd4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000102dd8	kernel.asm	/^ffff800000102dd8:	48 05 a0 00 00 00    	add    $0xa0,%rax$/;"	l
ffff800000102dde	kernel.asm	/^ffff800000102dde:	ba 34 00 00 00       	mov    $0x34,%edx$/;"	l
ffff800000102de3	kernel.asm	/^ffff800000102de3:	48 89 ce             	mov    %rcx,%rsi$/;"	l
ffff800000102de6	kernel.asm	/^ffff800000102de6:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000102de9	kernel.asm	/^ffff800000102de9:	48 b8 6f 7c 10 00 00 	movabs $0xffff800000107c6f,%rax$/;"	l
ffff800000102df0	kernel.asm	/^ffff800000102df0:	80 ff ff $/;"	l
ffff800000102df3	kernel.asm	/^ffff800000102df3:	ff d0                	callq  *%rax$/;"	l
ffff800000102df5	kernel.asm	/^ffff800000102df5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000102df9	kernel.asm	/^ffff800000102df9:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000102dfc	kernel.asm	/^ffff800000102dfc:	48 b8 aa 04 10 00 00 	movabs $0xffff8000001004aa,%rax$/;"	l
ffff800000102e03	kernel.asm	/^ffff800000102e03:	80 ff ff $/;"	l
ffff800000102e06	kernel.asm	/^ffff800000102e06:	ff d0                	callq  *%rax$/;"	l
ffff800000102e08	kernel.asm	/^ffff800000102e08:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000102e0c	kernel.asm	/^ffff800000102e0c:	8b 80 90 00 00 00    	mov    0x90(%rax),%eax$/;"	l
ffff800000102e12	kernel.asm	/^ffff800000102e12:	83 c8 02             	or     $0x2,%eax$/;"	l
ffff800000102e15	kernel.asm	/^ffff800000102e15:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000102e17	kernel.asm	/^ffff800000102e17:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000102e1b	kernel.asm	/^ffff800000102e1b:	89 90 90 00 00 00    	mov    %edx,0x90(%rax)$/;"	l
ffff800000102e21	kernel.asm	/^ffff800000102e21:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000102e25	kernel.asm	/^ffff800000102e25:	0f b7 80 94 00 00 00 	movzwl 0x94(%rax),%eax$/;"	l
ffff800000102e2c	kernel.asm	/^ffff800000102e2c:	66 85 c0             	test   %ax,%ax$/;"	l
ffff800000102e2f	kernel.asm	/^ffff800000102e2f:	75 16                	jne    ffff800000102e47 <ilock+0x18e>$/;"	l
ffff800000102e31	kernel.asm	/^ffff800000102e31:	48 bf aa d5 10 00 00 	movabs $0xffff80000010d5aa,%rdi$/;"	l
ffff800000102e38	kernel.asm	/^ffff800000102e38:	80 ff ff $/;"	l
ffff800000102e3b	kernel.asm	/^ffff800000102e3b:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff800000102e42	kernel.asm	/^ffff800000102e42:	80 ff ff $/;"	l
ffff800000102e45	kernel.asm	/^ffff800000102e45:	ff d0                	callq  *%rax$/;"	l
ffff800000102e47	kernel.asm	/^ffff800000102e47:	90                   	nop$/;"	l
ffff800000102e48	kernel.asm	/^ffff800000102e48:	c9                   	leaveq $/;"	l
ffff800000102e49	kernel.asm	/^ffff800000102e49:	c3                   	retq   $/;"	l
ffff800000102e4a	kernel.asm	/^ffff800000102e4a <iunlock>:$/;"	l
ffff800000102e4a	kernel.asm	/^ffff800000102e4a:	55                   	push   %rbp$/;"	l
ffff800000102e4b	kernel.asm	/^ffff800000102e4b:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000102e4e	kernel.asm	/^ffff800000102e4e:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff800000102e52	kernel.asm	/^ffff800000102e52:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)$/;"	l
ffff800000102e56	kernel.asm	/^ffff800000102e56:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)$/;"	l
ffff800000102e5b	kernel.asm	/^ffff800000102e5b:	74 26                	je     ffff800000102e83 <iunlock+0x39>$/;"	l
ffff800000102e5d	kernel.asm	/^ffff800000102e5d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000102e61	kernel.asm	/^ffff800000102e61:	48 83 c0 10          	add    $0x10,%rax$/;"	l
ffff800000102e65	kernel.asm	/^ffff800000102e65:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000102e68	kernel.asm	/^ffff800000102e68:	48 b8 0e 77 10 00 00 	movabs $0xffff80000010770e,%rax$/;"	l
ffff800000102e6f	kernel.asm	/^ffff800000102e6f:	80 ff ff $/;"	l
ffff800000102e72	kernel.asm	/^ffff800000102e72:	ff d0                	callq  *%rax$/;"	l
ffff800000102e74	kernel.asm	/^ffff800000102e74:	85 c0                	test   %eax,%eax$/;"	l
ffff800000102e76	kernel.asm	/^ffff800000102e76:	74 0b                	je     ffff800000102e83 <iunlock+0x39>$/;"	l
ffff800000102e78	kernel.asm	/^ffff800000102e78:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000102e7c	kernel.asm	/^ffff800000102e7c:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
ffff800000102e7f	kernel.asm	/^ffff800000102e7f:	85 c0                	test   %eax,%eax$/;"	l
ffff800000102e81	kernel.asm	/^ffff800000102e81:	7f 16                	jg     ffff800000102e99 <iunlock+0x4f>$/;"	l
ffff800000102e83	kernel.asm	/^ffff800000102e83:	48 bf b9 d5 10 00 00 	movabs $0xffff80000010d5b9,%rdi$/;"	l
ffff800000102e8a	kernel.asm	/^ffff800000102e8a:	80 ff ff $/;"	l
ffff800000102e8d	kernel.asm	/^ffff800000102e8d:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff800000102e94	kernel.asm	/^ffff800000102e94:	80 ff ff $/;"	l
ffff800000102e97	kernel.asm	/^ffff800000102e97:	ff d0                	callq  *%rax$/;"	l
ffff800000102e99	kernel.asm	/^ffff800000102e99:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000102e9d	kernel.asm	/^ffff800000102e9d:	48 83 c0 10          	add    $0x10,%rax$/;"	l
ffff800000102ea1	kernel.asm	/^ffff800000102ea1:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000102ea4	kernel.asm	/^ffff800000102ea4:	48 b8 a9 76 10 00 00 	movabs $0xffff8000001076a9,%rax$/;"	l
ffff800000102eab	kernel.asm	/^ffff800000102eab:	80 ff ff $/;"	l
ffff800000102eae	kernel.asm	/^ffff800000102eae:	ff d0                	callq  *%rax$/;"	l
ffff800000102eb0	kernel.asm	/^ffff800000102eb0:	90                   	nop$/;"	l
ffff800000102eb1	kernel.asm	/^ffff800000102eb1:	c9                   	leaveq $/;"	l
ffff800000102eb2	kernel.asm	/^ffff800000102eb2:	c3                   	retq   $/;"	l
ffff800000102eb3	kernel.asm	/^ffff800000102eb3 <iput>:$/;"	l
ffff800000102eb3	kernel.asm	/^ffff800000102eb3:	55                   	push   %rbp$/;"	l
ffff800000102eb4	kernel.asm	/^ffff800000102eb4:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000102eb7	kernel.asm	/^ffff800000102eb7:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff800000102ebb	kernel.asm	/^ffff800000102ebb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)$/;"	l
ffff800000102ebf	kernel.asm	/^ffff800000102ebf:	48 bf 60 86 11 00 00 	movabs $0xffff800000118660,%rdi$/;"	l
ffff800000102ec6	kernel.asm	/^ffff800000102ec6:	80 ff ff $/;"	l
ffff800000102ec9	kernel.asm	/^ffff800000102ec9:	48 b8 d6 77 10 00 00 	movabs $0xffff8000001077d6,%rax$/;"	l
ffff800000102ed0	kernel.asm	/^ffff800000102ed0:	80 ff ff $/;"	l
ffff800000102ed3	kernel.asm	/^ffff800000102ed3:	ff d0                	callq  *%rax$/;"	l
ffff800000102ed5	kernel.asm	/^ffff800000102ed5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000102ed9	kernel.asm	/^ffff800000102ed9:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
ffff800000102edc	kernel.asm	/^ffff800000102edc:	83 f8 01             	cmp    $0x1,%eax$/;"	l
ffff800000102edf	kernel.asm	/^ffff800000102edf:	0f 85 8e 00 00 00    	jne    ffff800000102f73 <iput+0xc0>$/;"	l
ffff800000102ee5	kernel.asm	/^ffff800000102ee5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000102ee9	kernel.asm	/^ffff800000102ee9:	8b 80 90 00 00 00    	mov    0x90(%rax),%eax$/;"	l
ffff800000102eef	kernel.asm	/^ffff800000102eef:	83 e0 02             	and    $0x2,%eax$/;"	l
ffff800000102ef2	kernel.asm	/^ffff800000102ef2:	85 c0                	test   %eax,%eax$/;"	l
ffff800000102ef4	kernel.asm	/^ffff800000102ef4:	74 7d                	je     ffff800000102f73 <iput+0xc0>$/;"	l
ffff800000102ef6	kernel.asm	/^ffff800000102ef6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000102efa	kernel.asm	/^ffff800000102efa:	0f b7 80 9a 00 00 00 	movzwl 0x9a(%rax),%eax$/;"	l
ffff800000102f01	kernel.asm	/^ffff800000102f01:	66 85 c0             	test   %ax,%ax$/;"	l
ffff800000102f04	kernel.asm	/^ffff800000102f04:	75 6d                	jne    ffff800000102f73 <iput+0xc0>$/;"	l
ffff800000102f06	kernel.asm	/^ffff800000102f06:	48 bf 60 86 11 00 00 	movabs $0xffff800000118660,%rdi$/;"	l
ffff800000102f0d	kernel.asm	/^ffff800000102f0d:	80 ff ff $/;"	l
ffff800000102f10	kernel.asm	/^ffff800000102f10:	48 b8 6f 78 10 00 00 	movabs $0xffff80000010786f,%rax$/;"	l
ffff800000102f17	kernel.asm	/^ffff800000102f17:	80 ff ff $/;"	l
ffff800000102f1a	kernel.asm	/^ffff800000102f1a:	ff d0                	callq  *%rax$/;"	l
ffff800000102f1c	kernel.asm	/^ffff800000102f1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000102f20	kernel.asm	/^ffff800000102f20:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000102f23	kernel.asm	/^ffff800000102f23:	48 b8 33 31 10 00 00 	movabs $0xffff800000103133,%rax$/;"	l
ffff800000102f2a	kernel.asm	/^ffff800000102f2a:	80 ff ff $/;"	l
ffff800000102f2d	kernel.asm	/^ffff800000102f2d:	ff d0                	callq  *%rax$/;"	l
ffff800000102f2f	kernel.asm	/^ffff800000102f2f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000102f33	kernel.asm	/^ffff800000102f33:	66 c7 80 94 00 00 00 	movw   $0x0,0x94(%rax)$/;"	l
ffff800000102f3a	kernel.asm	/^ffff800000102f3a:	00 00 $/;"	l
ffff800000102f3c	kernel.asm	/^ffff800000102f3c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000102f40	kernel.asm	/^ffff800000102f40:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000102f43	kernel.asm	/^ffff800000102f43:	48 b8 27 2a 10 00 00 	movabs $0xffff800000102a27,%rax$/;"	l
ffff800000102f4a	kernel.asm	/^ffff800000102f4a:	80 ff ff $/;"	l
ffff800000102f4d	kernel.asm	/^ffff800000102f4d:	ff d0                	callq  *%rax$/;"	l
ffff800000102f4f	kernel.asm	/^ffff800000102f4f:	48 bf 60 86 11 00 00 	movabs $0xffff800000118660,%rdi$/;"	l
ffff800000102f56	kernel.asm	/^ffff800000102f56:	80 ff ff $/;"	l
ffff800000102f59	kernel.asm	/^ffff800000102f59:	48 b8 d6 77 10 00 00 	movabs $0xffff8000001077d6,%rax$/;"	l
ffff800000102f60	kernel.asm	/^ffff800000102f60:	80 ff ff $/;"	l
ffff800000102f63	kernel.asm	/^ffff800000102f63:	ff d0                	callq  *%rax$/;"	l
ffff800000102f65	kernel.asm	/^ffff800000102f65:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000102f69	kernel.asm	/^ffff800000102f69:	c7 80 90 00 00 00 00 	movl   $0x0,0x90(%rax)$/;"	l
ffff800000102f70	kernel.asm	/^ffff800000102f70:	00 00 00 $/;"	l
ffff800000102f73	kernel.asm	/^ffff800000102f73:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000102f77	kernel.asm	/^ffff800000102f77:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
ffff800000102f7a	kernel.asm	/^ffff800000102f7a:	8d 50 ff             	lea    -0x1(%rax),%edx$/;"	l
ffff800000102f7d	kernel.asm	/^ffff800000102f7d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000102f81	kernel.asm	/^ffff800000102f81:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
ffff800000102f84	kernel.asm	/^ffff800000102f84:	48 bf 60 86 11 00 00 	movabs $0xffff800000118660,%rdi$/;"	l
ffff800000102f8b	kernel.asm	/^ffff800000102f8b:	80 ff ff $/;"	l
ffff800000102f8e	kernel.asm	/^ffff800000102f8e:	48 b8 6f 78 10 00 00 	movabs $0xffff80000010786f,%rax$/;"	l
ffff800000102f95	kernel.asm	/^ffff800000102f95:	80 ff ff $/;"	l
ffff800000102f98	kernel.asm	/^ffff800000102f98:	ff d0                	callq  *%rax$/;"	l
ffff800000102f9a	kernel.asm	/^ffff800000102f9a:	90                   	nop$/;"	l
ffff800000102f9b	kernel.asm	/^ffff800000102f9b:	c9                   	leaveq $/;"	l
ffff800000102f9c	kernel.asm	/^ffff800000102f9c:	c3                   	retq   $/;"	l
ffff800000102f9d	kernel.asm	/^ffff800000102f9d <iunlockput>:$/;"	l
ffff800000102f9d	kernel.asm	/^ffff800000102f9d:	55                   	push   %rbp$/;"	l
ffff800000102f9e	kernel.asm	/^ffff800000102f9e:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000102fa1	kernel.asm	/^ffff800000102fa1:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff800000102fa5	kernel.asm	/^ffff800000102fa5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)$/;"	l
ffff800000102fa9	kernel.asm	/^ffff800000102fa9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000102fad	kernel.asm	/^ffff800000102fad:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000102fb0	kernel.asm	/^ffff800000102fb0:	48 b8 4a 2e 10 00 00 	movabs $0xffff800000102e4a,%rax$/;"	l
ffff800000102fb7	kernel.asm	/^ffff800000102fb7:	80 ff ff $/;"	l
ffff800000102fba	kernel.asm	/^ffff800000102fba:	ff d0                	callq  *%rax$/;"	l
ffff800000102fbc	kernel.asm	/^ffff800000102fbc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000102fc0	kernel.asm	/^ffff800000102fc0:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000102fc3	kernel.asm	/^ffff800000102fc3:	48 b8 b3 2e 10 00 00 	movabs $0xffff800000102eb3,%rax$/;"	l
ffff800000102fca	kernel.asm	/^ffff800000102fca:	80 ff ff $/;"	l
ffff800000102fcd	kernel.asm	/^ffff800000102fcd:	ff d0                	callq  *%rax$/;"	l
ffff800000102fcf	kernel.asm	/^ffff800000102fcf:	90                   	nop$/;"	l
ffff800000102fd0	kernel.asm	/^ffff800000102fd0:	c9                   	leaveq $/;"	l
ffff800000102fd1	kernel.asm	/^ffff800000102fd1:	c3                   	retq   $/;"	l
ffff800000102fd2	kernel.asm	/^ffff800000102fd2 <bmap>:$/;"	l
ffff800000102fd2	kernel.asm	/^ffff800000102fd2:	55                   	push   %rbp$/;"	l
ffff800000102fd3	kernel.asm	/^ffff800000102fd3:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000102fd6	kernel.asm	/^ffff800000102fd6:	53                   	push   %rbx$/;"	l
ffff800000102fd7	kernel.asm	/^ffff800000102fd7:	48 83 ec 38          	sub    $0x38,%rsp$/;"	l
ffff800000102fdb	kernel.asm	/^ffff800000102fdb:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)$/;"	l
ffff800000102fdf	kernel.asm	/^ffff800000102fdf:	89 75 c4             	mov    %esi,-0x3c(%rbp)$/;"	l
ffff800000102fe2	kernel.asm	/^ffff800000102fe2:	83 7d c4 0b          	cmpl   $0xb,-0x3c(%rbp)$/;"	l
ffff800000102fe6	kernel.asm	/^ffff800000102fe6:	77 47                	ja     ffff80000010302f <bmap+0x5d>$/;"	l
ffff800000102fe8	kernel.asm	/^ffff800000102fe8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
ffff800000102fec	kernel.asm	/^ffff800000102fec:	8b 55 c4             	mov    -0x3c(%rbp),%edx$/;"	l
ffff800000102fef	kernel.asm	/^ffff800000102fef:	48 83 c2 28          	add    $0x28,%rdx$/;"	l
ffff800000102ff3	kernel.asm	/^ffff800000102ff3:	8b 04 90             	mov    (%rax,%rdx,4),%eax$/;"	l
ffff800000102ff6	kernel.asm	/^ffff800000102ff6:	89 45 ec             	mov    %eax,-0x14(%rbp)$/;"	l
ffff800000102ff9	kernel.asm	/^ffff800000102ff9:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)$/;"	l
ffff800000102ffd	kernel.asm	/^ffff800000102ffd:	75 28                	jne    ffff800000103027 <bmap+0x55>$/;"	l
ffff800000102fff	kernel.asm	/^ffff800000102fff:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
ffff800000103003	kernel.asm	/^ffff800000103003:	8b 00                	mov    (%rax),%eax$/;"	l
ffff800000103005	kernel.asm	/^ffff800000103005:	89 c7                	mov    %eax,%edi$/;"	l
ffff800000103007	kernel.asm	/^ffff800000103007:	48 b8 97 25 10 00 00 	movabs $0xffff800000102597,%rax$/;"	l
ffff80000010300e	kernel.asm	/^ffff80000010300e:	80 ff ff $/;"	l
ffff800000103011	kernel.asm	/^ffff800000103011:	ff d0                	callq  *%rax$/;"	l
ffff800000103013	kernel.asm	/^ffff800000103013:	89 45 ec             	mov    %eax,-0x14(%rbp)$/;"	l
ffff800000103016	kernel.asm	/^ffff800000103016:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
ffff80000010301a	kernel.asm	/^ffff80000010301a:	8b 55 c4             	mov    -0x3c(%rbp),%edx$/;"	l
ffff80000010301d	kernel.asm	/^ffff80000010301d:	48 8d 4a 28          	lea    0x28(%rdx),%rcx$/;"	l
ffff800000103021	kernel.asm	/^ffff800000103021:	8b 55 ec             	mov    -0x14(%rbp),%edx$/;"	l
ffff800000103024	kernel.asm	/^ffff800000103024:	89 14 88             	mov    %edx,(%rax,%rcx,4)$/;"	l
ffff800000103027	kernel.asm	/^ffff800000103027:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
ffff80000010302a	kernel.asm	/^ffff80000010302a:	e9 fd 00 00 00       	jmpq   ffff80000010312c <bmap+0x15a>$/;"	l
ffff80000010302f	kernel.asm	/^ffff80000010302f:	83 6d c4 0c          	subl   $0xc,-0x3c(%rbp)$/;"	l
ffff800000103033	kernel.asm	/^ffff800000103033:	83 7d c4 7f          	cmpl   $0x7f,-0x3c(%rbp)$/;"	l
ffff800000103037	kernel.asm	/^ffff800000103037:	0f 87 d9 00 00 00    	ja     ffff800000103116 <bmap+0x144>$/;"	l
ffff80000010303d	kernel.asm	/^ffff80000010303d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
ffff800000103041	kernel.asm	/^ffff800000103041:	8b 80 d0 00 00 00    	mov    0xd0(%rax),%eax$/;"	l
ffff800000103047	kernel.asm	/^ffff800000103047:	89 45 ec             	mov    %eax,-0x14(%rbp)$/;"	l
ffff80000010304a	kernel.asm	/^ffff80000010304a:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)$/;"	l
ffff80000010304e	kernel.asm	/^ffff80000010304e:	75 24                	jne    ffff800000103074 <bmap+0xa2>$/;"	l
ffff800000103050	kernel.asm	/^ffff800000103050:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
ffff800000103054	kernel.asm	/^ffff800000103054:	8b 00                	mov    (%rax),%eax$/;"	l
ffff800000103056	kernel.asm	/^ffff800000103056:	89 c7                	mov    %eax,%edi$/;"	l
ffff800000103058	kernel.asm	/^ffff800000103058:	48 b8 97 25 10 00 00 	movabs $0xffff800000102597,%rax$/;"	l
ffff80000010305f	kernel.asm	/^ffff80000010305f:	80 ff ff $/;"	l
ffff800000103062	kernel.asm	/^ffff800000103062:	ff d0                	callq  *%rax$/;"	l
ffff800000103064	kernel.asm	/^ffff800000103064:	89 45 ec             	mov    %eax,-0x14(%rbp)$/;"	l
ffff800000103067	kernel.asm	/^ffff800000103067:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
ffff80000010306b	kernel.asm	/^ffff80000010306b:	8b 55 ec             	mov    -0x14(%rbp),%edx$/;"	l
ffff80000010306e	kernel.asm	/^ffff80000010306e:	89 90 d0 00 00 00    	mov    %edx,0xd0(%rax)$/;"	l
ffff800000103074	kernel.asm	/^ffff800000103074:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
ffff800000103078	kernel.asm	/^ffff800000103078:	8b 00                	mov    (%rax),%eax$/;"	l
ffff80000010307a	kernel.asm	/^ffff80000010307a:	8b 55 ec             	mov    -0x14(%rbp),%edx$/;"	l
ffff80000010307d	kernel.asm	/^ffff80000010307d:	89 d6                	mov    %edx,%esi$/;"	l
ffff80000010307f	kernel.asm	/^ffff80000010307f:	89 c7                	mov    %eax,%edi$/;"	l
ffff800000103081	kernel.asm	/^ffff800000103081:	48 b8 f8 03 10 00 00 	movabs $0xffff8000001003f8,%rax$/;"	l
ffff800000103088	kernel.asm	/^ffff800000103088:	80 ff ff $/;"	l
ffff80000010308b	kernel.asm	/^ffff80000010308b:	ff d0                	callq  *%rax$/;"	l
ffff80000010308d	kernel.asm	/^ffff80000010308d:	48 89 45 e0          	mov    %rax,-0x20(%rbp)$/;"	l
ffff800000103091	kernel.asm	/^ffff800000103091:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff800000103095	kernel.asm	/^ffff800000103095:	48 05 b0 00 00 00    	add    $0xb0,%rax$/;"	l
ffff80000010309b	kernel.asm	/^ffff80000010309b:	48 89 45 d8          	mov    %rax,-0x28(%rbp)$/;"	l
ffff80000010309f	kernel.asm	/^ffff80000010309f:	8b 45 c4             	mov    -0x3c(%rbp),%eax$/;"	l
ffff8000001030a2	kernel.asm	/^ffff8000001030a2:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx$/;"	l
ffff8000001030a9	kernel.asm	/^ffff8000001030a9:	00 $/;"	l
ffff8000001030aa	kernel.asm	/^ffff8000001030aa:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff8000001030ae	kernel.asm	/^ffff8000001030ae:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff8000001030b1	kernel.asm	/^ffff8000001030b1:	8b 00                	mov    (%rax),%eax$/;"	l
ffff8000001030b3	kernel.asm	/^ffff8000001030b3:	89 45 ec             	mov    %eax,-0x14(%rbp)$/;"	l
ffff8000001030b6	kernel.asm	/^ffff8000001030b6:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)$/;"	l
ffff8000001030ba	kernel.asm	/^ffff8000001030ba:	75 42                	jne    ffff8000001030fe <bmap+0x12c>$/;"	l
ffff8000001030bc	kernel.asm	/^ffff8000001030bc:	8b 45 c4             	mov    -0x3c(%rbp),%eax$/;"	l
ffff8000001030bf	kernel.asm	/^ffff8000001030bf:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx$/;"	l
ffff8000001030c6	kernel.asm	/^ffff8000001030c6:	00 $/;"	l
ffff8000001030c7	kernel.asm	/^ffff8000001030c7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff8000001030cb	kernel.asm	/^ffff8000001030cb:	48 8d 1c 02          	lea    (%rdx,%rax,1),%rbx$/;"	l
ffff8000001030cf	kernel.asm	/^ffff8000001030cf:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
ffff8000001030d3	kernel.asm	/^ffff8000001030d3:	8b 00                	mov    (%rax),%eax$/;"	l
ffff8000001030d5	kernel.asm	/^ffff8000001030d5:	89 c7                	mov    %eax,%edi$/;"	l
ffff8000001030d7	kernel.asm	/^ffff8000001030d7:	48 b8 97 25 10 00 00 	movabs $0xffff800000102597,%rax$/;"	l
ffff8000001030de	kernel.asm	/^ffff8000001030de:	80 ff ff $/;"	l
ffff8000001030e1	kernel.asm	/^ffff8000001030e1:	ff d0                	callq  *%rax$/;"	l
ffff8000001030e3	kernel.asm	/^ffff8000001030e3:	89 45 ec             	mov    %eax,-0x14(%rbp)$/;"	l
ffff8000001030e6	kernel.asm	/^ffff8000001030e6:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
ffff8000001030e9	kernel.asm	/^ffff8000001030e9:	89 03                	mov    %eax,(%rbx)$/;"	l
ffff8000001030eb	kernel.asm	/^ffff8000001030eb:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff8000001030ef	kernel.asm	/^ffff8000001030ef:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001030f2	kernel.asm	/^ffff8000001030f2:	48 b8 35 56 10 00 00 	movabs $0xffff800000105635,%rax$/;"	l
ffff8000001030f9	kernel.asm	/^ffff8000001030f9:	80 ff ff $/;"	l
ffff8000001030fc	kernel.asm	/^ffff8000001030fc:	ff d0                	callq  *%rax$/;"	l
ffff8000001030fe	kernel.asm	/^ffff8000001030fe:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff800000103102	kernel.asm	/^ffff800000103102:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000103105	kernel.asm	/^ffff800000103105:	48 b8 aa 04 10 00 00 	movabs $0xffff8000001004aa,%rax$/;"	l
ffff80000010310c	kernel.asm	/^ffff80000010310c:	80 ff ff $/;"	l
ffff80000010310f	kernel.asm	/^ffff80000010310f:	ff d0                	callq  *%rax$/;"	l
ffff800000103111	kernel.asm	/^ffff800000103111:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
ffff800000103114	kernel.asm	/^ffff800000103114:	eb 16                	jmp    ffff80000010312c <bmap+0x15a>$/;"	l
ffff800000103116	kernel.asm	/^ffff800000103116:	48 bf c1 d5 10 00 00 	movabs $0xffff80000010d5c1,%rdi$/;"	l
ffff80000010311d	kernel.asm	/^ffff80000010311d:	80 ff ff $/;"	l
ffff800000103120	kernel.asm	/^ffff800000103120:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff800000103127	kernel.asm	/^ffff800000103127:	80 ff ff $/;"	l
ffff80000010312a	kernel.asm	/^ffff80000010312a:	ff d0                	callq  *%rax$/;"	l
ffff80000010312c	kernel.asm	/^ffff80000010312c:	48 83 c4 38          	add    $0x38,%rsp$/;"	l
ffff800000103130	kernel.asm	/^ffff800000103130:	5b                   	pop    %rbx$/;"	l
ffff800000103131	kernel.asm	/^ffff800000103131:	5d                   	pop    %rbp$/;"	l
ffff800000103132	kernel.asm	/^ffff800000103132:	c3                   	retq   $/;"	l
ffff800000103133	kernel.asm	/^ffff800000103133 <itrunc>:$/;"	l
ffff800000103133	kernel.asm	/^ffff800000103133:	55                   	push   %rbp$/;"	l
ffff800000103134	kernel.asm	/^ffff800000103134:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000103137	kernel.asm	/^ffff800000103137:	48 83 ec 30          	sub    $0x30,%rsp$/;"	l
ffff80000010313b	kernel.asm	/^ffff80000010313b:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)$/;"	l
ffff80000010313f	kernel.asm	/^ffff80000010313f:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)$/;"	l
ffff800000103146	kernel.asm	/^ffff800000103146:	eb 55                	jmp    ffff80000010319d <itrunc+0x6a>$/;"	l
ffff800000103148	kernel.asm	/^ffff800000103148:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff80000010314c	kernel.asm	/^ffff80000010314c:	8b 55 fc             	mov    -0x4(%rbp),%edx$/;"	l
ffff80000010314f	kernel.asm	/^ffff80000010314f:	48 63 d2             	movslq %edx,%rdx$/;"	l
ffff800000103152	kernel.asm	/^ffff800000103152:	48 83 c2 28          	add    $0x28,%rdx$/;"	l
ffff800000103156	kernel.asm	/^ffff800000103156:	8b 04 90             	mov    (%rax,%rdx,4),%eax$/;"	l
ffff800000103159	kernel.asm	/^ffff800000103159:	85 c0                	test   %eax,%eax$/;"	l
ffff80000010315b	kernel.asm	/^ffff80000010315b:	74 3c                	je     ffff800000103199 <itrunc+0x66>$/;"	l
ffff80000010315d	kernel.asm	/^ffff80000010315d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff800000103161	kernel.asm	/^ffff800000103161:	8b 55 fc             	mov    -0x4(%rbp),%edx$/;"	l
ffff800000103164	kernel.asm	/^ffff800000103164:	48 63 d2             	movslq %edx,%rdx$/;"	l
ffff800000103167	kernel.asm	/^ffff800000103167:	48 83 c2 28          	add    $0x28,%rdx$/;"	l
ffff80000010316b	kernel.asm	/^ffff80000010316b:	8b 04 90             	mov    (%rax,%rdx,4),%eax$/;"	l
ffff80000010316e	kernel.asm	/^ffff80000010316e:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx$/;"	l
ffff800000103172	kernel.asm	/^ffff800000103172:	8b 12                	mov    (%rdx),%edx$/;"	l
ffff800000103174	kernel.asm	/^ffff800000103174:	89 c6                	mov    %eax,%esi$/;"	l
ffff800000103176	kernel.asm	/^ffff800000103176:	89 d7                	mov    %edx,%edi$/;"	l
ffff800000103178	kernel.asm	/^ffff800000103178:	48 b8 37 27 10 00 00 	movabs $0xffff800000102737,%rax$/;"	l
ffff80000010317f	kernel.asm	/^ffff80000010317f:	80 ff ff $/;"	l
ffff800000103182	kernel.asm	/^ffff800000103182:	ff d0                	callq  *%rax$/;"	l
ffff800000103184	kernel.asm	/^ffff800000103184:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff800000103188	kernel.asm	/^ffff800000103188:	8b 55 fc             	mov    -0x4(%rbp),%edx$/;"	l
ffff80000010318b	kernel.asm	/^ffff80000010318b:	48 63 d2             	movslq %edx,%rdx$/;"	l
ffff80000010318e	kernel.asm	/^ffff80000010318e:	48 83 c2 28          	add    $0x28,%rdx$/;"	l
ffff800000103192	kernel.asm	/^ffff800000103192:	c7 04 90 00 00 00 00 	movl   $0x0,(%rax,%rdx,4)$/;"	l
ffff800000103199	kernel.asm	/^ffff800000103199:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)$/;"	l
ffff80000010319d	kernel.asm	/^ffff80000010319d:	83 7d fc 0b          	cmpl   $0xb,-0x4(%rbp)$/;"	l
ffff8000001031a1	kernel.asm	/^ffff8000001031a1:	7e a5                	jle    ffff800000103148 <itrunc+0x15>$/;"	l
ffff8000001031a3	kernel.asm	/^ffff8000001031a3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff8000001031a7	kernel.asm	/^ffff8000001031a7:	8b 80 d0 00 00 00    	mov    0xd0(%rax),%eax$/;"	l
ffff8000001031ad	kernel.asm	/^ffff8000001031ad:	85 c0                	test   %eax,%eax$/;"	l
ffff8000001031af	kernel.asm	/^ffff8000001031af:	0f 84 ce 00 00 00    	je     ffff800000103283 <itrunc+0x150>$/;"	l
ffff8000001031b5	kernel.asm	/^ffff8000001031b5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff8000001031b9	kernel.asm	/^ffff8000001031b9:	8b 90 d0 00 00 00    	mov    0xd0(%rax),%edx$/;"	l
ffff8000001031bf	kernel.asm	/^ffff8000001031bf:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff8000001031c3	kernel.asm	/^ffff8000001031c3:	8b 00                	mov    (%rax),%eax$/;"	l
ffff8000001031c5	kernel.asm	/^ffff8000001031c5:	89 d6                	mov    %edx,%esi$/;"	l
ffff8000001031c7	kernel.asm	/^ffff8000001031c7:	89 c7                	mov    %eax,%edi$/;"	l
ffff8000001031c9	kernel.asm	/^ffff8000001031c9:	48 b8 f8 03 10 00 00 	movabs $0xffff8000001003f8,%rax$/;"	l
ffff8000001031d0	kernel.asm	/^ffff8000001031d0:	80 ff ff $/;"	l
ffff8000001031d3	kernel.asm	/^ffff8000001031d3:	ff d0                	callq  *%rax$/;"	l
ffff8000001031d5	kernel.asm	/^ffff8000001031d5:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ffff8000001031d9	kernel.asm	/^ffff8000001031d9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff8000001031dd	kernel.asm	/^ffff8000001031dd:	48 05 b0 00 00 00    	add    $0xb0,%rax$/;"	l
ffff8000001031e3	kernel.asm	/^ffff8000001031e3:	48 89 45 e8          	mov    %rax,-0x18(%rbp)$/;"	l
ffff8000001031e7	kernel.asm	/^ffff8000001031e7:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)$/;"	l
ffff8000001031ee	kernel.asm	/^ffff8000001031ee:	eb 4a                	jmp    ffff80000010323a <itrunc+0x107>$/;"	l
ffff8000001031f0	kernel.asm	/^ffff8000001031f0:	8b 45 f8             	mov    -0x8(%rbp),%eax$/;"	l
ffff8000001031f3	kernel.asm	/^ffff8000001031f3:	48 98                	cltq   $/;"	l
ffff8000001031f5	kernel.asm	/^ffff8000001031f5:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx$/;"	l
ffff8000001031fc	kernel.asm	/^ffff8000001031fc:	00 $/;"	l
ffff8000001031fd	kernel.asm	/^ffff8000001031fd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000103201	kernel.asm	/^ffff800000103201:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff800000103204	kernel.asm	/^ffff800000103204:	8b 00                	mov    (%rax),%eax$/;"	l
ffff800000103206	kernel.asm	/^ffff800000103206:	85 c0                	test   %eax,%eax$/;"	l
ffff800000103208	kernel.asm	/^ffff800000103208:	74 2c                	je     ffff800000103236 <itrunc+0x103>$/;"	l
ffff80000010320a	kernel.asm	/^ffff80000010320a:	8b 45 f8             	mov    -0x8(%rbp),%eax$/;"	l
ffff80000010320d	kernel.asm	/^ffff80000010320d:	48 98                	cltq   $/;"	l
ffff80000010320f	kernel.asm	/^ffff80000010320f:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx$/;"	l
ffff800000103216	kernel.asm	/^ffff800000103216:	00 $/;"	l
ffff800000103217	kernel.asm	/^ffff800000103217:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010321b	kernel.asm	/^ffff80000010321b:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff80000010321e	kernel.asm	/^ffff80000010321e:	8b 00                	mov    (%rax),%eax$/;"	l
ffff800000103220	kernel.asm	/^ffff800000103220:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx$/;"	l
ffff800000103224	kernel.asm	/^ffff800000103224:	8b 12                	mov    (%rdx),%edx$/;"	l
ffff800000103226	kernel.asm	/^ffff800000103226:	89 c6                	mov    %eax,%esi$/;"	l
ffff800000103228	kernel.asm	/^ffff800000103228:	89 d7                	mov    %edx,%edi$/;"	l
ffff80000010322a	kernel.asm	/^ffff80000010322a:	48 b8 37 27 10 00 00 	movabs $0xffff800000102737,%rax$/;"	l
ffff800000103231	kernel.asm	/^ffff800000103231:	80 ff ff $/;"	l
ffff800000103234	kernel.asm	/^ffff800000103234:	ff d0                	callq  *%rax$/;"	l
ffff800000103236	kernel.asm	/^ffff800000103236:	83 45 f8 01          	addl   $0x1,-0x8(%rbp)$/;"	l
ffff80000010323a	kernel.asm	/^ffff80000010323a:	8b 45 f8             	mov    -0x8(%rbp),%eax$/;"	l
ffff80000010323d	kernel.asm	/^ffff80000010323d:	83 f8 7f             	cmp    $0x7f,%eax$/;"	l
ffff800000103240	kernel.asm	/^ffff800000103240:	76 ae                	jbe    ffff8000001031f0 <itrunc+0xbd>$/;"	l
ffff800000103242	kernel.asm	/^ffff800000103242:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000103246	kernel.asm	/^ffff800000103246:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000103249	kernel.asm	/^ffff800000103249:	48 b8 aa 04 10 00 00 	movabs $0xffff8000001004aa,%rax$/;"	l
ffff800000103250	kernel.asm	/^ffff800000103250:	80 ff ff $/;"	l
ffff800000103253	kernel.asm	/^ffff800000103253:	ff d0                	callq  *%rax$/;"	l
ffff800000103255	kernel.asm	/^ffff800000103255:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff800000103259	kernel.asm	/^ffff800000103259:	8b 80 d0 00 00 00    	mov    0xd0(%rax),%eax$/;"	l
ffff80000010325f	kernel.asm	/^ffff80000010325f:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx$/;"	l
ffff800000103263	kernel.asm	/^ffff800000103263:	8b 12                	mov    (%rdx),%edx$/;"	l
ffff800000103265	kernel.asm	/^ffff800000103265:	89 c6                	mov    %eax,%esi$/;"	l
ffff800000103267	kernel.asm	/^ffff800000103267:	89 d7                	mov    %edx,%edi$/;"	l
ffff800000103269	kernel.asm	/^ffff800000103269:	48 b8 37 27 10 00 00 	movabs $0xffff800000102737,%rax$/;"	l
ffff800000103270	kernel.asm	/^ffff800000103270:	80 ff ff $/;"	l
ffff800000103273	kernel.asm	/^ffff800000103273:	ff d0                	callq  *%rax$/;"	l
ffff800000103275	kernel.asm	/^ffff800000103275:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff800000103279	kernel.asm	/^ffff800000103279:	c7 80 d0 00 00 00 00 	movl   $0x0,0xd0(%rax)$/;"	l
ffff800000103280	kernel.asm	/^ffff800000103280:	00 00 00 $/;"	l
ffff800000103283	kernel.asm	/^ffff800000103283:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff800000103287	kernel.asm	/^ffff800000103287:	c7 80 9c 00 00 00 00 	movl   $0x0,0x9c(%rax)$/;"	l
ffff80000010328e	kernel.asm	/^ffff80000010328e:	00 00 00 $/;"	l
ffff800000103291	kernel.asm	/^ffff800000103291:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff800000103295	kernel.asm	/^ffff800000103295:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000103298	kernel.asm	/^ffff800000103298:	48 b8 27 2a 10 00 00 	movabs $0xffff800000102a27,%rax$/;"	l
ffff80000010329f	kernel.asm	/^ffff80000010329f:	80 ff ff $/;"	l
ffff8000001032a2	kernel.asm	/^ffff8000001032a2:	ff d0                	callq  *%rax$/;"	l
ffff8000001032a4	kernel.asm	/^ffff8000001032a4:	90                   	nop$/;"	l
ffff8000001032a5	kernel.asm	/^ffff8000001032a5:	c9                   	leaveq $/;"	l
ffff8000001032a6	kernel.asm	/^ffff8000001032a6:	c3                   	retq   $/;"	l
ffff8000001032a7	kernel.asm	/^ffff8000001032a7 <stati>:$/;"	l
ffff8000001032a7	kernel.asm	/^ffff8000001032a7:	55                   	push   %rbp$/;"	l
ffff8000001032a8	kernel.asm	/^ffff8000001032a8:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff8000001032ab	kernel.asm	/^ffff8000001032ab:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff8000001032af	kernel.asm	/^ffff8000001032af:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)$/;"	l
ffff8000001032b3	kernel.asm	/^ffff8000001032b3:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)$/;"	l
ffff8000001032b7	kernel.asm	/^ffff8000001032b7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001032bb	kernel.asm	/^ffff8000001032bb:	8b 00                	mov    (%rax),%eax$/;"	l
ffff8000001032bd	kernel.asm	/^ffff8000001032bd:	89 c2                	mov    %eax,%edx$/;"	l
ffff8000001032bf	kernel.asm	/^ffff8000001032bf:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff8000001032c3	kernel.asm	/^ffff8000001032c3:	89 50 04             	mov    %edx,0x4(%rax)$/;"	l
ffff8000001032c6	kernel.asm	/^ffff8000001032c6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001032ca	kernel.asm	/^ffff8000001032ca:	8b 50 04             	mov    0x4(%rax),%edx$/;"	l
ffff8000001032cd	kernel.asm	/^ffff8000001032cd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff8000001032d1	kernel.asm	/^ffff8000001032d1:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
ffff8000001032d4	kernel.asm	/^ffff8000001032d4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001032d8	kernel.asm	/^ffff8000001032d8:	0f b7 90 94 00 00 00 	movzwl 0x94(%rax),%edx$/;"	l
ffff8000001032df	kernel.asm	/^ffff8000001032df:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff8000001032e3	kernel.asm	/^ffff8000001032e3:	66 89 10             	mov    %dx,(%rax)$/;"	l
ffff8000001032e6	kernel.asm	/^ffff8000001032e6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001032ea	kernel.asm	/^ffff8000001032ea:	0f b7 90 9a 00 00 00 	movzwl 0x9a(%rax),%edx$/;"	l
ffff8000001032f1	kernel.asm	/^ffff8000001032f1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff8000001032f5	kernel.asm	/^ffff8000001032f5:	66 89 50 0c          	mov    %dx,0xc(%rax)$/;"	l
ffff8000001032f9	kernel.asm	/^ffff8000001032f9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001032fd	kernel.asm	/^ffff8000001032fd:	8b 90 9c 00 00 00    	mov    0x9c(%rax),%edx$/;"	l
ffff800000103303	kernel.asm	/^ffff800000103303:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000103307	kernel.asm	/^ffff800000103307:	89 50 10             	mov    %edx,0x10(%rax)$/;"	l
ffff80000010330a	kernel.asm	/^ffff80000010330a:	90                   	nop$/;"	l
ffff80000010330b	kernel.asm	/^ffff80000010330b:	c9                   	leaveq $/;"	l
ffff80000010330c	kernel.asm	/^ffff80000010330c:	c3                   	retq   $/;"	l
ffff80000010330d	kernel.asm	/^ffff80000010330d <readi>:$/;"	l
ffff80000010330d	kernel.asm	/^ffff80000010330d:	55                   	push   %rbp$/;"	l
ffff80000010330e	kernel.asm	/^ffff80000010330e:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000103311	kernel.asm	/^ffff800000103311:	48 83 ec 40          	sub    $0x40,%rsp$/;"	l
ffff800000103315	kernel.asm	/^ffff800000103315:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)$/;"	l
ffff800000103319	kernel.asm	/^ffff800000103319:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)$/;"	l
ffff80000010331d	kernel.asm	/^ffff80000010331d:	89 55 cc             	mov    %edx,-0x34(%rbp)$/;"	l
ffff800000103320	kernel.asm	/^ffff800000103320:	89 4d c8             	mov    %ecx,-0x38(%rbp)$/;"	l
ffff800000103323	kernel.asm	/^ffff800000103323:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff800000103327	kernel.asm	/^ffff800000103327:	0f b7 80 94 00 00 00 	movzwl 0x94(%rax),%eax$/;"	l
ffff80000010332e	kernel.asm	/^ffff80000010332e:	66 83 f8 03          	cmp    $0x3,%ax$/;"	l
ffff800000103332	kernel.asm	/^ffff800000103332:	0f 85 8f 00 00 00    	jne    ffff8000001033c7 <readi+0xba>$/;"	l
ffff800000103338	kernel.asm	/^ffff800000103338:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff80000010333c	kernel.asm	/^ffff80000010333c:	0f b7 80 96 00 00 00 	movzwl 0x96(%rax),%eax$/;"	l
ffff800000103343	kernel.asm	/^ffff800000103343:	66 85 c0             	test   %ax,%ax$/;"	l
ffff800000103346	kernel.asm	/^ffff800000103346:	78 3b                	js     ffff800000103383 <readi+0x76>$/;"	l
ffff800000103348	kernel.asm	/^ffff800000103348:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff80000010334c	kernel.asm	/^ffff80000010334c:	0f b7 80 96 00 00 00 	movzwl 0x96(%rax),%eax$/;"	l
ffff800000103353	kernel.asm	/^ffff800000103353:	66 83 f8 09          	cmp    $0x9,%ax$/;"	l
ffff800000103357	kernel.asm	/^ffff800000103357:	7f 2a                	jg     ffff800000103383 <readi+0x76>$/;"	l
ffff800000103359	kernel.asm	/^ffff800000103359:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff80000010335d	kernel.asm	/^ffff80000010335d:	0f b7 80 96 00 00 00 	movzwl 0x96(%rax),%eax$/;"	l
ffff800000103364	kernel.asm	/^ffff800000103364:	0f bf d0             	movswl %ax,%edx$/;"	l
ffff800000103367	kernel.asm	/^ffff800000103367:	48 b8 80 75 11 00 00 	movabs $0xffff800000117580,%rax$/;"	l
ffff80000010336e	kernel.asm	/^ffff80000010336e:	80 ff ff $/;"	l
ffff800000103371	kernel.asm	/^ffff800000103371:	48 63 d2             	movslq %edx,%rdx$/;"	l
ffff800000103374	kernel.asm	/^ffff800000103374:	48 c1 e2 04          	shl    $0x4,%rdx$/;"	l
ffff800000103378	kernel.asm	/^ffff800000103378:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff80000010337b	kernel.asm	/^ffff80000010337b:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff80000010337e	kernel.asm	/^ffff80000010337e:	48 85 c0             	test   %rax,%rax$/;"	l
ffff800000103381	kernel.asm	/^ffff800000103381:	75 0a                	jne    ffff80000010338d <readi+0x80>$/;"	l
ffff800000103383	kernel.asm	/^ffff800000103383:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff800000103388	kernel.asm	/^ffff800000103388:	e9 4d 01 00 00       	jmpq   ffff8000001034da <readi+0x1cd>$/;"	l
ffff80000010338d	kernel.asm	/^ffff80000010338d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff800000103391	kernel.asm	/^ffff800000103391:	0f b7 80 96 00 00 00 	movzwl 0x96(%rax),%eax$/;"	l
ffff800000103398	kernel.asm	/^ffff800000103398:	0f bf d0             	movswl %ax,%edx$/;"	l
ffff80000010339b	kernel.asm	/^ffff80000010339b:	48 b8 80 75 11 00 00 	movabs $0xffff800000117580,%rax$/;"	l
ffff8000001033a2	kernel.asm	/^ffff8000001033a2:	80 ff ff $/;"	l
ffff8000001033a5	kernel.asm	/^ffff8000001033a5:	48 63 d2             	movslq %edx,%rdx$/;"	l
ffff8000001033a8	kernel.asm	/^ffff8000001033a8:	48 c1 e2 04          	shl    $0x4,%rdx$/;"	l
ffff8000001033ac	kernel.asm	/^ffff8000001033ac:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff8000001033af	kernel.asm	/^ffff8000001033af:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff8000001033b2	kernel.asm	/^ffff8000001033b2:	8b 55 c8             	mov    -0x38(%rbp),%edx$/;"	l
ffff8000001033b5	kernel.asm	/^ffff8000001033b5:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi$/;"	l
ffff8000001033b9	kernel.asm	/^ffff8000001033b9:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx$/;"	l
ffff8000001033bd	kernel.asm	/^ffff8000001033bd:	48 89 cf             	mov    %rcx,%rdi$/;"	l
ffff8000001033c0	kernel.asm	/^ffff8000001033c0:	ff d0                	callq  *%rax$/;"	l
ffff8000001033c2	kernel.asm	/^ffff8000001033c2:	e9 13 01 00 00       	jmpq   ffff8000001034da <readi+0x1cd>$/;"	l
ffff8000001033c7	kernel.asm	/^ffff8000001033c7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff8000001033cb	kernel.asm	/^ffff8000001033cb:	8b 80 9c 00 00 00    	mov    0x9c(%rax),%eax$/;"	l
ffff8000001033d1	kernel.asm	/^ffff8000001033d1:	3b 45 cc             	cmp    -0x34(%rbp),%eax$/;"	l
ffff8000001033d4	kernel.asm	/^ffff8000001033d4:	72 0d                	jb     ffff8000001033e3 <readi+0xd6>$/;"	l
ffff8000001033d6	kernel.asm	/^ffff8000001033d6:	8b 55 cc             	mov    -0x34(%rbp),%edx$/;"	l
ffff8000001033d9	kernel.asm	/^ffff8000001033d9:	8b 45 c8             	mov    -0x38(%rbp),%eax$/;"	l
ffff8000001033dc	kernel.asm	/^ffff8000001033dc:	01 d0                	add    %edx,%eax$/;"	l
ffff8000001033de	kernel.asm	/^ffff8000001033de:	3b 45 cc             	cmp    -0x34(%rbp),%eax$/;"	l
ffff8000001033e1	kernel.asm	/^ffff8000001033e1:	73 0a                	jae    ffff8000001033ed <readi+0xe0>$/;"	l
ffff8000001033e3	kernel.asm	/^ffff8000001033e3:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff8000001033e8	kernel.asm	/^ffff8000001033e8:	e9 ed 00 00 00       	jmpq   ffff8000001034da <readi+0x1cd>$/;"	l
ffff8000001033ed	kernel.asm	/^ffff8000001033ed:	8b 55 cc             	mov    -0x34(%rbp),%edx$/;"	l
ffff8000001033f0	kernel.asm	/^ffff8000001033f0:	8b 45 c8             	mov    -0x38(%rbp),%eax$/;"	l
ffff8000001033f3	kernel.asm	/^ffff8000001033f3:	01 c2                	add    %eax,%edx$/;"	l
ffff8000001033f5	kernel.asm	/^ffff8000001033f5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff8000001033f9	kernel.asm	/^ffff8000001033f9:	8b 80 9c 00 00 00    	mov    0x9c(%rax),%eax$/;"	l
ffff8000001033ff	kernel.asm	/^ffff8000001033ff:	39 c2                	cmp    %eax,%edx$/;"	l
ffff800000103401	kernel.asm	/^ffff800000103401:	76 10                	jbe    ffff800000103413 <readi+0x106>$/;"	l
ffff800000103403	kernel.asm	/^ffff800000103403:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff800000103407	kernel.asm	/^ffff800000103407:	8b 80 9c 00 00 00    	mov    0x9c(%rax),%eax$/;"	l
ffff80000010340d	kernel.asm	/^ffff80000010340d:	2b 45 cc             	sub    -0x34(%rbp),%eax$/;"	l
ffff800000103410	kernel.asm	/^ffff800000103410:	89 45 c8             	mov    %eax,-0x38(%rbp)$/;"	l
ffff800000103413	kernel.asm	/^ffff800000103413:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)$/;"	l
ffff80000010341a	kernel.asm	/^ffff80000010341a:	e9 ac 00 00 00       	jmpq   ffff8000001034cb <readi+0x1be>$/;"	l
ffff80000010341f	kernel.asm	/^ffff80000010341f:	8b 45 cc             	mov    -0x34(%rbp),%eax$/;"	l
ffff800000103422	kernel.asm	/^ffff800000103422:	c1 e8 09             	shr    $0x9,%eax$/;"	l
ffff800000103425	kernel.asm	/^ffff800000103425:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000103427	kernel.asm	/^ffff800000103427:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff80000010342b	kernel.asm	/^ffff80000010342b:	89 d6                	mov    %edx,%esi$/;"	l
ffff80000010342d	kernel.asm	/^ffff80000010342d:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000103430	kernel.asm	/^ffff800000103430:	48 b8 d2 2f 10 00 00 	movabs $0xffff800000102fd2,%rax$/;"	l
ffff800000103437	kernel.asm	/^ffff800000103437:	80 ff ff $/;"	l
ffff80000010343a	kernel.asm	/^ffff80000010343a:	ff d0                	callq  *%rax$/;"	l
ffff80000010343c	kernel.asm	/^ffff80000010343c:	89 c2                	mov    %eax,%edx$/;"	l
ffff80000010343e	kernel.asm	/^ffff80000010343e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff800000103442	kernel.asm	/^ffff800000103442:	8b 00                	mov    (%rax),%eax$/;"	l
ffff800000103444	kernel.asm	/^ffff800000103444:	89 d6                	mov    %edx,%esi$/;"	l
ffff800000103446	kernel.asm	/^ffff800000103446:	89 c7                	mov    %eax,%edi$/;"	l
ffff800000103448	kernel.asm	/^ffff800000103448:	48 b8 f8 03 10 00 00 	movabs $0xffff8000001003f8,%rax$/;"	l
ffff80000010344f	kernel.asm	/^ffff80000010344f:	80 ff ff $/;"	l
ffff800000103452	kernel.asm	/^ffff800000103452:	ff d0                	callq  *%rax$/;"	l
ffff800000103454	kernel.asm	/^ffff800000103454:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ffff800000103458	kernel.asm	/^ffff800000103458:	8b 45 cc             	mov    -0x34(%rbp),%eax$/;"	l
ffff80000010345b	kernel.asm	/^ffff80000010345b:	25 ff 01 00 00       	and    $0x1ff,%eax$/;"	l
ffff800000103460	kernel.asm	/^ffff800000103460:	ba 00 02 00 00       	mov    $0x200,%edx$/;"	l
ffff800000103465	kernel.asm	/^ffff800000103465:	29 c2                	sub    %eax,%edx$/;"	l
ffff800000103467	kernel.asm	/^ffff800000103467:	8b 45 c8             	mov    -0x38(%rbp),%eax$/;"	l
ffff80000010346a	kernel.asm	/^ffff80000010346a:	2b 45 fc             	sub    -0x4(%rbp),%eax$/;"	l
ffff80000010346d	kernel.asm	/^ffff80000010346d:	39 c2                	cmp    %eax,%edx$/;"	l
ffff80000010346f	kernel.asm	/^ffff80000010346f:	0f 46 c2             	cmovbe %edx,%eax$/;"	l
ffff800000103472	kernel.asm	/^ffff800000103472:	89 45 ec             	mov    %eax,-0x14(%rbp)$/;"	l
ffff800000103475	kernel.asm	/^ffff800000103475:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000103479	kernel.asm	/^ffff800000103479:	48 8d 90 b0 00 00 00 	lea    0xb0(%rax),%rdx$/;"	l
ffff800000103480	kernel.asm	/^ffff800000103480:	8b 45 cc             	mov    -0x34(%rbp),%eax$/;"	l
ffff800000103483	kernel.asm	/^ffff800000103483:	25 ff 01 00 00       	and    $0x1ff,%eax$/;"	l
ffff800000103488	kernel.asm	/^ffff800000103488:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx$/;"	l
ffff80000010348c	kernel.asm	/^ffff80000010348c:	8b 55 ec             	mov    -0x14(%rbp),%edx$/;"	l
ffff80000010348f	kernel.asm	/^ffff80000010348f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax$/;"	l
ffff800000103493	kernel.asm	/^ffff800000103493:	48 89 ce             	mov    %rcx,%rsi$/;"	l
ffff800000103496	kernel.asm	/^ffff800000103496:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000103499	kernel.asm	/^ffff800000103499:	48 b8 6f 7c 10 00 00 	movabs $0xffff800000107c6f,%rax$/;"	l
ffff8000001034a0	kernel.asm	/^ffff8000001034a0:	80 ff ff $/;"	l
ffff8000001034a3	kernel.asm	/^ffff8000001034a3:	ff d0                	callq  *%rax$/;"	l
ffff8000001034a5	kernel.asm	/^ffff8000001034a5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff8000001034a9	kernel.asm	/^ffff8000001034a9:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001034ac	kernel.asm	/^ffff8000001034ac:	48 b8 aa 04 10 00 00 	movabs $0xffff8000001004aa,%rax$/;"	l
ffff8000001034b3	kernel.asm	/^ffff8000001034b3:	80 ff ff $/;"	l
ffff8000001034b6	kernel.asm	/^ffff8000001034b6:	ff d0                	callq  *%rax$/;"	l
ffff8000001034b8	kernel.asm	/^ffff8000001034b8:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
ffff8000001034bb	kernel.asm	/^ffff8000001034bb:	01 45 fc             	add    %eax,-0x4(%rbp)$/;"	l
ffff8000001034be	kernel.asm	/^ffff8000001034be:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
ffff8000001034c1	kernel.asm	/^ffff8000001034c1:	01 45 cc             	add    %eax,-0x34(%rbp)$/;"	l
ffff8000001034c4	kernel.asm	/^ffff8000001034c4:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
ffff8000001034c7	kernel.asm	/^ffff8000001034c7:	48 01 45 d0          	add    %rax,-0x30(%rbp)$/;"	l
ffff8000001034cb	kernel.asm	/^ffff8000001034cb:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff8000001034ce	kernel.asm	/^ffff8000001034ce:	3b 45 c8             	cmp    -0x38(%rbp),%eax$/;"	l
ffff8000001034d1	kernel.asm	/^ffff8000001034d1:	0f 82 48 ff ff ff    	jb     ffff80000010341f <readi+0x112>$/;"	l
ffff8000001034d7	kernel.asm	/^ffff8000001034d7:	8b 45 c8             	mov    -0x38(%rbp),%eax$/;"	l
ffff8000001034da	kernel.asm	/^ffff8000001034da:	c9                   	leaveq $/;"	l
ffff8000001034db	kernel.asm	/^ffff8000001034db:	c3                   	retq   $/;"	l
ffff8000001034dc	kernel.asm	/^ffff8000001034dc <writei>:$/;"	l
ffff8000001034dc	kernel.asm	/^ffff8000001034dc:	55                   	push   %rbp$/;"	l
ffff8000001034dd	kernel.asm	/^ffff8000001034dd:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff8000001034e0	kernel.asm	/^ffff8000001034e0:	48 83 ec 40          	sub    $0x40,%rsp$/;"	l
ffff8000001034e4	kernel.asm	/^ffff8000001034e4:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)$/;"	l
ffff8000001034e8	kernel.asm	/^ffff8000001034e8:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)$/;"	l
ffff8000001034ec	kernel.asm	/^ffff8000001034ec:	89 55 cc             	mov    %edx,-0x34(%rbp)$/;"	l
ffff8000001034ef	kernel.asm	/^ffff8000001034ef:	89 4d c8             	mov    %ecx,-0x38(%rbp)$/;"	l
ffff8000001034f2	kernel.asm	/^ffff8000001034f2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff8000001034f6	kernel.asm	/^ffff8000001034f6:	0f b7 80 94 00 00 00 	movzwl 0x94(%rax),%eax$/;"	l
ffff8000001034fd	kernel.asm	/^ffff8000001034fd:	66 83 f8 03          	cmp    $0x3,%ax$/;"	l
ffff800000103501	kernel.asm	/^ffff800000103501:	0f 85 97 00 00 00    	jne    ffff80000010359e <writei+0xc2>$/;"	l
ffff800000103507	kernel.asm	/^ffff800000103507:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff80000010350b	kernel.asm	/^ffff80000010350b:	0f b7 80 96 00 00 00 	movzwl 0x96(%rax),%eax$/;"	l
ffff800000103512	kernel.asm	/^ffff800000103512:	66 85 c0             	test   %ax,%ax$/;"	l
ffff800000103515	kernel.asm	/^ffff800000103515:	78 3f                	js     ffff800000103556 <writei+0x7a>$/;"	l
ffff800000103517	kernel.asm	/^ffff800000103517:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff80000010351b	kernel.asm	/^ffff80000010351b:	0f b7 80 96 00 00 00 	movzwl 0x96(%rax),%eax$/;"	l
ffff800000103522	kernel.asm	/^ffff800000103522:	66 83 f8 09          	cmp    $0x9,%ax$/;"	l
ffff800000103526	kernel.asm	/^ffff800000103526:	7f 2e                	jg     ffff800000103556 <writei+0x7a>$/;"	l
ffff800000103528	kernel.asm	/^ffff800000103528:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff80000010352c	kernel.asm	/^ffff80000010352c:	0f b7 80 96 00 00 00 	movzwl 0x96(%rax),%eax$/;"	l
ffff800000103533	kernel.asm	/^ffff800000103533:	0f bf d0             	movswl %ax,%edx$/;"	l
ffff800000103536	kernel.asm	/^ffff800000103536:	48 b8 80 75 11 00 00 	movabs $0xffff800000117580,%rax$/;"	l
ffff80000010353d	kernel.asm	/^ffff80000010353d:	80 ff ff $/;"	l
ffff800000103540	kernel.asm	/^ffff800000103540:	48 63 d2             	movslq %edx,%rdx$/;"	l
ffff800000103543	kernel.asm	/^ffff800000103543:	48 c1 e2 04          	shl    $0x4,%rdx$/;"	l
ffff800000103547	kernel.asm	/^ffff800000103547:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff80000010354a	kernel.asm	/^ffff80000010354a:	48 83 c0 08          	add    $0x8,%rax$/;"	l
ffff80000010354e	kernel.asm	/^ffff80000010354e:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff800000103551	kernel.asm	/^ffff800000103551:	48 85 c0             	test   %rax,%rax$/;"	l
ffff800000103554	kernel.asm	/^ffff800000103554:	75 0a                	jne    ffff800000103560 <writei+0x84>$/;"	l
ffff800000103556	kernel.asm	/^ffff800000103556:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff80000010355b	kernel.asm	/^ffff80000010355b:	e9 8c 01 00 00       	jmpq   ffff8000001036ec <writei+0x210>$/;"	l
ffff800000103560	kernel.asm	/^ffff800000103560:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff800000103564	kernel.asm	/^ffff800000103564:	0f b7 80 96 00 00 00 	movzwl 0x96(%rax),%eax$/;"	l
ffff80000010356b	kernel.asm	/^ffff80000010356b:	0f bf d0             	movswl %ax,%edx$/;"	l
ffff80000010356e	kernel.asm	/^ffff80000010356e:	48 b8 80 75 11 00 00 	movabs $0xffff800000117580,%rax$/;"	l
ffff800000103575	kernel.asm	/^ffff800000103575:	80 ff ff $/;"	l
ffff800000103578	kernel.asm	/^ffff800000103578:	48 63 d2             	movslq %edx,%rdx$/;"	l
ffff80000010357b	kernel.asm	/^ffff80000010357b:	48 c1 e2 04          	shl    $0x4,%rdx$/;"	l
ffff80000010357f	kernel.asm	/^ffff80000010357f:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff800000103582	kernel.asm	/^ffff800000103582:	48 83 c0 08          	add    $0x8,%rax$/;"	l
ffff800000103586	kernel.asm	/^ffff800000103586:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff800000103589	kernel.asm	/^ffff800000103589:	8b 55 c8             	mov    -0x38(%rbp),%edx$/;"	l
ffff80000010358c	kernel.asm	/^ffff80000010358c:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi$/;"	l
ffff800000103590	kernel.asm	/^ffff800000103590:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx$/;"	l
ffff800000103594	kernel.asm	/^ffff800000103594:	48 89 cf             	mov    %rcx,%rdi$/;"	l
ffff800000103597	kernel.asm	/^ffff800000103597:	ff d0                	callq  *%rax$/;"	l
ffff800000103599	kernel.asm	/^ffff800000103599:	e9 4e 01 00 00       	jmpq   ffff8000001036ec <writei+0x210>$/;"	l
ffff80000010359e	kernel.asm	/^ffff80000010359e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff8000001035a2	kernel.asm	/^ffff8000001035a2:	8b 80 9c 00 00 00    	mov    0x9c(%rax),%eax$/;"	l
ffff8000001035a8	kernel.asm	/^ffff8000001035a8:	3b 45 cc             	cmp    -0x34(%rbp),%eax$/;"	l
ffff8000001035ab	kernel.asm	/^ffff8000001035ab:	72 0d                	jb     ffff8000001035ba <writei+0xde>$/;"	l
ffff8000001035ad	kernel.asm	/^ffff8000001035ad:	8b 55 cc             	mov    -0x34(%rbp),%edx$/;"	l
ffff8000001035b0	kernel.asm	/^ffff8000001035b0:	8b 45 c8             	mov    -0x38(%rbp),%eax$/;"	l
ffff8000001035b3	kernel.asm	/^ffff8000001035b3:	01 d0                	add    %edx,%eax$/;"	l
ffff8000001035b5	kernel.asm	/^ffff8000001035b5:	3b 45 cc             	cmp    -0x34(%rbp),%eax$/;"	l
ffff8000001035b8	kernel.asm	/^ffff8000001035b8:	73 0a                	jae    ffff8000001035c4 <writei+0xe8>$/;"	l
ffff8000001035ba	kernel.asm	/^ffff8000001035ba:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff8000001035bf	kernel.asm	/^ffff8000001035bf:	e9 28 01 00 00       	jmpq   ffff8000001036ec <writei+0x210>$/;"	l
ffff8000001035c4	kernel.asm	/^ffff8000001035c4:	8b 55 cc             	mov    -0x34(%rbp),%edx$/;"	l
ffff8000001035c7	kernel.asm	/^ffff8000001035c7:	8b 45 c8             	mov    -0x38(%rbp),%eax$/;"	l
ffff8000001035ca	kernel.asm	/^ffff8000001035ca:	01 d0                	add    %edx,%eax$/;"	l
ffff8000001035cc	kernel.asm	/^ffff8000001035cc:	3d 00 18 01 00       	cmp    $0x11800,%eax$/;"	l
ffff8000001035d1	kernel.asm	/^ffff8000001035d1:	76 0a                	jbe    ffff8000001035dd <writei+0x101>$/;"	l
ffff8000001035d3	kernel.asm	/^ffff8000001035d3:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff8000001035d8	kernel.asm	/^ffff8000001035d8:	e9 0f 01 00 00       	jmpq   ffff8000001036ec <writei+0x210>$/;"	l
ffff8000001035dd	kernel.asm	/^ffff8000001035dd:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)$/;"	l
ffff8000001035e4	kernel.asm	/^ffff8000001035e4:	e9 bf 00 00 00       	jmpq   ffff8000001036a8 <writei+0x1cc>$/;"	l
ffff8000001035e9	kernel.asm	/^ffff8000001035e9:	8b 45 cc             	mov    -0x34(%rbp),%eax$/;"	l
ffff8000001035ec	kernel.asm	/^ffff8000001035ec:	c1 e8 09             	shr    $0x9,%eax$/;"	l
ffff8000001035ef	kernel.asm	/^ffff8000001035ef:	89 c2                	mov    %eax,%edx$/;"	l
ffff8000001035f1	kernel.asm	/^ffff8000001035f1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff8000001035f5	kernel.asm	/^ffff8000001035f5:	89 d6                	mov    %edx,%esi$/;"	l
ffff8000001035f7	kernel.asm	/^ffff8000001035f7:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001035fa	kernel.asm	/^ffff8000001035fa:	48 b8 d2 2f 10 00 00 	movabs $0xffff800000102fd2,%rax$/;"	l
ffff800000103601	kernel.asm	/^ffff800000103601:	80 ff ff $/;"	l
ffff800000103604	kernel.asm	/^ffff800000103604:	ff d0                	callq  *%rax$/;"	l
ffff800000103606	kernel.asm	/^ffff800000103606:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000103608	kernel.asm	/^ffff800000103608:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff80000010360c	kernel.asm	/^ffff80000010360c:	8b 00                	mov    (%rax),%eax$/;"	l
ffff80000010360e	kernel.asm	/^ffff80000010360e:	89 d6                	mov    %edx,%esi$/;"	l
ffff800000103610	kernel.asm	/^ffff800000103610:	89 c7                	mov    %eax,%edi$/;"	l
ffff800000103612	kernel.asm	/^ffff800000103612:	48 b8 f8 03 10 00 00 	movabs $0xffff8000001003f8,%rax$/;"	l
ffff800000103619	kernel.asm	/^ffff800000103619:	80 ff ff $/;"	l
ffff80000010361c	kernel.asm	/^ffff80000010361c:	ff d0                	callq  *%rax$/;"	l
ffff80000010361e	kernel.asm	/^ffff80000010361e:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ffff800000103622	kernel.asm	/^ffff800000103622:	8b 45 cc             	mov    -0x34(%rbp),%eax$/;"	l
ffff800000103625	kernel.asm	/^ffff800000103625:	25 ff 01 00 00       	and    $0x1ff,%eax$/;"	l
ffff80000010362a	kernel.asm	/^ffff80000010362a:	ba 00 02 00 00       	mov    $0x200,%edx$/;"	l
ffff80000010362f	kernel.asm	/^ffff80000010362f:	29 c2                	sub    %eax,%edx$/;"	l
ffff800000103631	kernel.asm	/^ffff800000103631:	8b 45 c8             	mov    -0x38(%rbp),%eax$/;"	l
ffff800000103634	kernel.asm	/^ffff800000103634:	2b 45 fc             	sub    -0x4(%rbp),%eax$/;"	l
ffff800000103637	kernel.asm	/^ffff800000103637:	39 c2                	cmp    %eax,%edx$/;"	l
ffff800000103639	kernel.asm	/^ffff800000103639:	0f 46 c2             	cmovbe %edx,%eax$/;"	l
ffff80000010363c	kernel.asm	/^ffff80000010363c:	89 45 ec             	mov    %eax,-0x14(%rbp)$/;"	l
ffff80000010363f	kernel.asm	/^ffff80000010363f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000103643	kernel.asm	/^ffff800000103643:	48 8d 90 b0 00 00 00 	lea    0xb0(%rax),%rdx$/;"	l
ffff80000010364a	kernel.asm	/^ffff80000010364a:	8b 45 cc             	mov    -0x34(%rbp),%eax$/;"	l
ffff80000010364d	kernel.asm	/^ffff80000010364d:	25 ff 01 00 00       	and    $0x1ff,%eax$/;"	l
ffff800000103652	kernel.asm	/^ffff800000103652:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx$/;"	l
ffff800000103656	kernel.asm	/^ffff800000103656:	8b 55 ec             	mov    -0x14(%rbp),%edx$/;"	l
ffff800000103659	kernel.asm	/^ffff800000103659:	48 8b 45 d0          	mov    -0x30(%rbp),%rax$/;"	l
ffff80000010365d	kernel.asm	/^ffff80000010365d:	48 89 c6             	mov    %rax,%rsi$/;"	l
ffff800000103660	kernel.asm	/^ffff800000103660:	48 89 cf             	mov    %rcx,%rdi$/;"	l
ffff800000103663	kernel.asm	/^ffff800000103663:	48 b8 6f 7c 10 00 00 	movabs $0xffff800000107c6f,%rax$/;"	l
ffff80000010366a	kernel.asm	/^ffff80000010366a:	80 ff ff $/;"	l
ffff80000010366d	kernel.asm	/^ffff80000010366d:	ff d0                	callq  *%rax$/;"	l
ffff80000010366f	kernel.asm	/^ffff80000010366f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000103673	kernel.asm	/^ffff800000103673:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000103676	kernel.asm	/^ffff800000103676:	48 b8 35 56 10 00 00 	movabs $0xffff800000105635,%rax$/;"	l
ffff80000010367d	kernel.asm	/^ffff80000010367d:	80 ff ff $/;"	l
ffff800000103680	kernel.asm	/^ffff800000103680:	ff d0                	callq  *%rax$/;"	l
ffff800000103682	kernel.asm	/^ffff800000103682:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000103686	kernel.asm	/^ffff800000103686:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000103689	kernel.asm	/^ffff800000103689:	48 b8 aa 04 10 00 00 	movabs $0xffff8000001004aa,%rax$/;"	l
ffff800000103690	kernel.asm	/^ffff800000103690:	80 ff ff $/;"	l
ffff800000103693	kernel.asm	/^ffff800000103693:	ff d0                	callq  *%rax$/;"	l
ffff800000103695	kernel.asm	/^ffff800000103695:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
ffff800000103698	kernel.asm	/^ffff800000103698:	01 45 fc             	add    %eax,-0x4(%rbp)$/;"	l
ffff80000010369b	kernel.asm	/^ffff80000010369b:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
ffff80000010369e	kernel.asm	/^ffff80000010369e:	01 45 cc             	add    %eax,-0x34(%rbp)$/;"	l
ffff8000001036a1	kernel.asm	/^ffff8000001036a1:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
ffff8000001036a4	kernel.asm	/^ffff8000001036a4:	48 01 45 d0          	add    %rax,-0x30(%rbp)$/;"	l
ffff8000001036a8	kernel.asm	/^ffff8000001036a8:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff8000001036ab	kernel.asm	/^ffff8000001036ab:	3b 45 c8             	cmp    -0x38(%rbp),%eax$/;"	l
ffff8000001036ae	kernel.asm	/^ffff8000001036ae:	0f 82 35 ff ff ff    	jb     ffff8000001035e9 <writei+0x10d>$/;"	l
ffff8000001036b4	kernel.asm	/^ffff8000001036b4:	83 7d c8 00          	cmpl   $0x0,-0x38(%rbp)$/;"	l
ffff8000001036b8	kernel.asm	/^ffff8000001036b8:	74 2f                	je     ffff8000001036e9 <writei+0x20d>$/;"	l
ffff8000001036ba	kernel.asm	/^ffff8000001036ba:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff8000001036be	kernel.asm	/^ffff8000001036be:	8b 80 9c 00 00 00    	mov    0x9c(%rax),%eax$/;"	l
ffff8000001036c4	kernel.asm	/^ffff8000001036c4:	3b 45 cc             	cmp    -0x34(%rbp),%eax$/;"	l
ffff8000001036c7	kernel.asm	/^ffff8000001036c7:	73 20                	jae    ffff8000001036e9 <writei+0x20d>$/;"	l
ffff8000001036c9	kernel.asm	/^ffff8000001036c9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff8000001036cd	kernel.asm	/^ffff8000001036cd:	8b 55 cc             	mov    -0x34(%rbp),%edx$/;"	l
ffff8000001036d0	kernel.asm	/^ffff8000001036d0:	89 90 9c 00 00 00    	mov    %edx,0x9c(%rax)$/;"	l
ffff8000001036d6	kernel.asm	/^ffff8000001036d6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff8000001036da	kernel.asm	/^ffff8000001036da:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001036dd	kernel.asm	/^ffff8000001036dd:	48 b8 27 2a 10 00 00 	movabs $0xffff800000102a27,%rax$/;"	l
ffff8000001036e4	kernel.asm	/^ffff8000001036e4:	80 ff ff $/;"	l
ffff8000001036e7	kernel.asm	/^ffff8000001036e7:	ff d0                	callq  *%rax$/;"	l
ffff8000001036e9	kernel.asm	/^ffff8000001036e9:	8b 45 c8             	mov    -0x38(%rbp),%eax$/;"	l
ffff8000001036ec	kernel.asm	/^ffff8000001036ec:	c9                   	leaveq $/;"	l
ffff8000001036ed	kernel.asm	/^ffff8000001036ed:	c3                   	retq   $/;"	l
ffff8000001036ee	kernel.asm	/^ffff8000001036ee <namecmp>:$/;"	l
ffff8000001036ee	kernel.asm	/^ffff8000001036ee:	55                   	push   %rbp$/;"	l
ffff8000001036ef	kernel.asm	/^ffff8000001036ef:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff8000001036f2	kernel.asm	/^ffff8000001036f2:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff8000001036f6	kernel.asm	/^ffff8000001036f6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)$/;"	l
ffff8000001036fa	kernel.asm	/^ffff8000001036fa:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)$/;"	l
ffff8000001036fe	kernel.asm	/^ffff8000001036fe:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx$/;"	l
ffff800000103702	kernel.asm	/^ffff800000103702:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000103706	kernel.asm	/^ffff800000103706:	ba 0e 00 00 00       	mov    $0xe,%edx$/;"	l
ffff80000010370b	kernel.asm	/^ffff80000010370b:	48 89 ce             	mov    %rcx,%rsi$/;"	l
ffff80000010370e	kernel.asm	/^ffff80000010370e:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000103711	kernel.asm	/^ffff800000103711:	48 b8 44 7d 10 00 00 	movabs $0xffff800000107d44,%rax$/;"	l
ffff800000103718	kernel.asm	/^ffff800000103718:	80 ff ff $/;"	l
ffff80000010371b	kernel.asm	/^ffff80000010371b:	ff d0                	callq  *%rax$/;"	l
ffff80000010371d	kernel.asm	/^ffff80000010371d:	c9                   	leaveq $/;"	l
ffff80000010371e	kernel.asm	/^ffff80000010371e:	c3                   	retq   $/;"	l
ffff80000010371f	kernel.asm	/^ffff80000010371f <dirlookup>:$/;"	l
ffff80000010371f	kernel.asm	/^ffff80000010371f:	55                   	push   %rbp$/;"	l
ffff800000103720	kernel.asm	/^ffff800000103720:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000103723	kernel.asm	/^ffff800000103723:	48 83 ec 40          	sub    $0x40,%rsp$/;"	l
ffff800000103727	kernel.asm	/^ffff800000103727:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)$/;"	l
ffff80000010372b	kernel.asm	/^ffff80000010372b:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)$/;"	l
ffff80000010372f	kernel.asm	/^ffff80000010372f:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)$/;"	l
ffff800000103733	kernel.asm	/^ffff800000103733:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff800000103737	kernel.asm	/^ffff800000103737:	0f b7 80 94 00 00 00 	movzwl 0x94(%rax),%eax$/;"	l
ffff80000010373e	kernel.asm	/^ffff80000010373e:	66 83 f8 01          	cmp    $0x1,%ax$/;"	l
ffff800000103742	kernel.asm	/^ffff800000103742:	74 16                	je     ffff80000010375a <dirlookup+0x3b>$/;"	l
ffff800000103744	kernel.asm	/^ffff800000103744:	48 bf d4 d5 10 00 00 	movabs $0xffff80000010d5d4,%rdi$/;"	l
ffff80000010374b	kernel.asm	/^ffff80000010374b:	80 ff ff $/;"	l
ffff80000010374e	kernel.asm	/^ffff80000010374e:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff800000103755	kernel.asm	/^ffff800000103755:	80 ff ff $/;"	l
ffff800000103758	kernel.asm	/^ffff800000103758:	ff d0                	callq  *%rax$/;"	l
ffff80000010375a	kernel.asm	/^ffff80000010375a:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)$/;"	l
ffff800000103761	kernel.asm	/^ffff800000103761:	e9 9f 00 00 00       	jmpq   ffff800000103805 <dirlookup+0xe6>$/;"	l
ffff800000103766	kernel.asm	/^ffff800000103766:	8b 55 fc             	mov    -0x4(%rbp),%edx$/;"	l
ffff800000103769	kernel.asm	/^ffff800000103769:	48 8d 75 e0          	lea    -0x20(%rbp),%rsi$/;"	l
ffff80000010376d	kernel.asm	/^ffff80000010376d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff800000103771	kernel.asm	/^ffff800000103771:	b9 10 00 00 00       	mov    $0x10,%ecx$/;"	l
ffff800000103776	kernel.asm	/^ffff800000103776:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000103779	kernel.asm	/^ffff800000103779:	48 b8 0d 33 10 00 00 	movabs $0xffff80000010330d,%rax$/;"	l
ffff800000103780	kernel.asm	/^ffff800000103780:	80 ff ff $/;"	l
ffff800000103783	kernel.asm	/^ffff800000103783:	ff d0                	callq  *%rax$/;"	l
ffff800000103785	kernel.asm	/^ffff800000103785:	83 f8 10             	cmp    $0x10,%eax$/;"	l
ffff800000103788	kernel.asm	/^ffff800000103788:	74 16                	je     ffff8000001037a0 <dirlookup+0x81>$/;"	l
ffff80000010378a	kernel.asm	/^ffff80000010378a:	48 bf e6 d5 10 00 00 	movabs $0xffff80000010d5e6,%rdi$/;"	l
ffff800000103791	kernel.asm	/^ffff800000103791:	80 ff ff $/;"	l
ffff800000103794	kernel.asm	/^ffff800000103794:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff80000010379b	kernel.asm	/^ffff80000010379b:	80 ff ff $/;"	l
ffff80000010379e	kernel.asm	/^ffff80000010379e:	ff d0                	callq  *%rax$/;"	l
ffff8000001037a0	kernel.asm	/^ffff8000001037a0:	0f b7 45 e0          	movzwl -0x20(%rbp),%eax$/;"	l
ffff8000001037a4	kernel.asm	/^ffff8000001037a4:	66 85 c0             	test   %ax,%ax$/;"	l
ffff8000001037a7	kernel.asm	/^ffff8000001037a7:	74 57                	je     ffff800000103800 <dirlookup+0xe1>$/;"	l
ffff8000001037a9	kernel.asm	/^ffff8000001037a9:	48 8d 45 e0          	lea    -0x20(%rbp),%rax$/;"	l
ffff8000001037ad	kernel.asm	/^ffff8000001037ad:	48 8d 50 02          	lea    0x2(%rax),%rdx$/;"	l
ffff8000001037b1	kernel.asm	/^ffff8000001037b1:	48 8b 45 d0          	mov    -0x30(%rbp),%rax$/;"	l
ffff8000001037b5	kernel.asm	/^ffff8000001037b5:	48 89 d6             	mov    %rdx,%rsi$/;"	l
ffff8000001037b8	kernel.asm	/^ffff8000001037b8:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001037bb	kernel.asm	/^ffff8000001037bb:	48 b8 ee 36 10 00 00 	movabs $0xffff8000001036ee,%rax$/;"	l
ffff8000001037c2	kernel.asm	/^ffff8000001037c2:	80 ff ff $/;"	l
ffff8000001037c5	kernel.asm	/^ffff8000001037c5:	ff d0                	callq  *%rax$/;"	l
ffff8000001037c7	kernel.asm	/^ffff8000001037c7:	85 c0                	test   %eax,%eax$/;"	l
ffff8000001037c9	kernel.asm	/^ffff8000001037c9:	75 36                	jne    ffff800000103801 <dirlookup+0xe2>$/;"	l
ffff8000001037cb	kernel.asm	/^ffff8000001037cb:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)$/;"	l
ffff8000001037d0	kernel.asm	/^ffff8000001037d0:	74 09                	je     ffff8000001037db <dirlookup+0xbc>$/;"	l
ffff8000001037d2	kernel.asm	/^ffff8000001037d2:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
ffff8000001037d6	kernel.asm	/^ffff8000001037d6:	8b 55 fc             	mov    -0x4(%rbp),%edx$/;"	l
ffff8000001037d9	kernel.asm	/^ffff8000001037d9:	89 10                	mov    %edx,(%rax)$/;"	l
ffff8000001037db	kernel.asm	/^ffff8000001037db:	0f b7 45 e0          	movzwl -0x20(%rbp),%eax$/;"	l
ffff8000001037df	kernel.asm	/^ffff8000001037df:	0f b7 c0             	movzwl %ax,%eax$/;"	l
ffff8000001037e2	kernel.asm	/^ffff8000001037e2:	89 45 f8             	mov    %eax,-0x8(%rbp)$/;"	l
ffff8000001037e5	kernel.asm	/^ffff8000001037e5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff8000001037e9	kernel.asm	/^ffff8000001037e9:	8b 00                	mov    (%rax),%eax$/;"	l
ffff8000001037eb	kernel.asm	/^ffff8000001037eb:	8b 55 f8             	mov    -0x8(%rbp),%edx$/;"	l
ffff8000001037ee	kernel.asm	/^ffff8000001037ee:	89 d6                	mov    %edx,%esi$/;"	l
ffff8000001037f0	kernel.asm	/^ffff8000001037f0:	89 c7                	mov    %eax,%edi$/;"	l
ffff8000001037f2	kernel.asm	/^ffff8000001037f2:	48 b8 39 2b 10 00 00 	movabs $0xffff800000102b39,%rax$/;"	l
ffff8000001037f9	kernel.asm	/^ffff8000001037f9:	80 ff ff $/;"	l
ffff8000001037fc	kernel.asm	/^ffff8000001037fc:	ff d0                	callq  *%rax$/;"	l
ffff8000001037fe	kernel.asm	/^ffff8000001037fe:	eb 1d                	jmp    ffff80000010381d <dirlookup+0xfe>$/;"	l
ffff800000103800	kernel.asm	/^ffff800000103800:	90                   	nop$/;"	l
ffff800000103801	kernel.asm	/^ffff800000103801:	83 45 fc 10          	addl   $0x10,-0x4(%rbp)$/;"	l
ffff800000103805	kernel.asm	/^ffff800000103805:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff800000103809	kernel.asm	/^ffff800000103809:	8b 80 9c 00 00 00    	mov    0x9c(%rax),%eax$/;"	l
ffff80000010380f	kernel.asm	/^ffff80000010380f:	3b 45 fc             	cmp    -0x4(%rbp),%eax$/;"	l
ffff800000103812	kernel.asm	/^ffff800000103812:	0f 87 4e ff ff ff    	ja     ffff800000103766 <dirlookup+0x47>$/;"	l
ffff800000103818	kernel.asm	/^ffff800000103818:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff80000010381d	kernel.asm	/^ffff80000010381d:	c9                   	leaveq $/;"	l
ffff80000010381e	kernel.asm	/^ffff80000010381e:	c3                   	retq   $/;"	l
ffff80000010381f	kernel.asm	/^ffff80000010381f <dirlink>:$/;"	l
ffff80000010381f	kernel.asm	/^ffff80000010381f:	55                   	push   %rbp$/;"	l
ffff800000103820	kernel.asm	/^ffff800000103820:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000103823	kernel.asm	/^ffff800000103823:	48 83 ec 40          	sub    $0x40,%rsp$/;"	l
ffff800000103827	kernel.asm	/^ffff800000103827:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)$/;"	l
ffff80000010382b	kernel.asm	/^ffff80000010382b:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)$/;"	l
ffff80000010382f	kernel.asm	/^ffff80000010382f:	89 55 cc             	mov    %edx,-0x34(%rbp)$/;"	l
ffff800000103832	kernel.asm	/^ffff800000103832:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx$/;"	l
ffff800000103836	kernel.asm	/^ffff800000103836:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff80000010383a	kernel.asm	/^ffff80000010383a:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
ffff80000010383f	kernel.asm	/^ffff80000010383f:	48 89 ce             	mov    %rcx,%rsi$/;"	l
ffff800000103842	kernel.asm	/^ffff800000103842:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000103845	kernel.asm	/^ffff800000103845:	48 b8 1f 37 10 00 00 	movabs $0xffff80000010371f,%rax$/;"	l
ffff80000010384c	kernel.asm	/^ffff80000010384c:	80 ff ff $/;"	l
ffff80000010384f	kernel.asm	/^ffff80000010384f:	ff d0                	callq  *%rax$/;"	l
ffff800000103851	kernel.asm	/^ffff800000103851:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ffff800000103855	kernel.asm	/^ffff800000103855:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)$/;"	l
ffff80000010385a	kernel.asm	/^ffff80000010385a:	74 1d                	je     ffff800000103879 <dirlink+0x5a>$/;"	l
ffff80000010385c	kernel.asm	/^ffff80000010385c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000103860	kernel.asm	/^ffff800000103860:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000103863	kernel.asm	/^ffff800000103863:	48 b8 b3 2e 10 00 00 	movabs $0xffff800000102eb3,%rax$/;"	l
ffff80000010386a	kernel.asm	/^ffff80000010386a:	80 ff ff $/;"	l
ffff80000010386d	kernel.asm	/^ffff80000010386d:	ff d0                	callq  *%rax$/;"	l
ffff80000010386f	kernel.asm	/^ffff80000010386f:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff800000103874	kernel.asm	/^ffff800000103874:	e9 d2 00 00 00       	jmpq   ffff80000010394b <dirlink+0x12c>$/;"	l
ffff800000103879	kernel.asm	/^ffff800000103879:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)$/;"	l
ffff800000103880	kernel.asm	/^ffff800000103880:	eb 4c                	jmp    ffff8000001038ce <dirlink+0xaf>$/;"	l
ffff800000103882	kernel.asm	/^ffff800000103882:	8b 55 fc             	mov    -0x4(%rbp),%edx$/;"	l
ffff800000103885	kernel.asm	/^ffff800000103885:	48 8d 75 e0          	lea    -0x20(%rbp),%rsi$/;"	l
ffff800000103889	kernel.asm	/^ffff800000103889:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff80000010388d	kernel.asm	/^ffff80000010388d:	b9 10 00 00 00       	mov    $0x10,%ecx$/;"	l
ffff800000103892	kernel.asm	/^ffff800000103892:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000103895	kernel.asm	/^ffff800000103895:	48 b8 0d 33 10 00 00 	movabs $0xffff80000010330d,%rax$/;"	l
ffff80000010389c	kernel.asm	/^ffff80000010389c:	80 ff ff $/;"	l
ffff80000010389f	kernel.asm	/^ffff80000010389f:	ff d0                	callq  *%rax$/;"	l
ffff8000001038a1	kernel.asm	/^ffff8000001038a1:	83 f8 10             	cmp    $0x10,%eax$/;"	l
ffff8000001038a4	kernel.asm	/^ffff8000001038a4:	74 16                	je     ffff8000001038bc <dirlink+0x9d>$/;"	l
ffff8000001038a6	kernel.asm	/^ffff8000001038a6:	48 bf f5 d5 10 00 00 	movabs $0xffff80000010d5f5,%rdi$/;"	l
ffff8000001038ad	kernel.asm	/^ffff8000001038ad:	80 ff ff $/;"	l
ffff8000001038b0	kernel.asm	/^ffff8000001038b0:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff8000001038b7	kernel.asm	/^ffff8000001038b7:	80 ff ff $/;"	l
ffff8000001038ba	kernel.asm	/^ffff8000001038ba:	ff d0                	callq  *%rax$/;"	l
ffff8000001038bc	kernel.asm	/^ffff8000001038bc:	0f b7 45 e0          	movzwl -0x20(%rbp),%eax$/;"	l
ffff8000001038c0	kernel.asm	/^ffff8000001038c0:	66 85 c0             	test   %ax,%ax$/;"	l
ffff8000001038c3	kernel.asm	/^ffff8000001038c3:	74 1c                	je     ffff8000001038e1 <dirlink+0xc2>$/;"	l
ffff8000001038c5	kernel.asm	/^ffff8000001038c5:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff8000001038c8	kernel.asm	/^ffff8000001038c8:	83 c0 10             	add    $0x10,%eax$/;"	l
ffff8000001038cb	kernel.asm	/^ffff8000001038cb:	89 45 fc             	mov    %eax,-0x4(%rbp)$/;"	l
ffff8000001038ce	kernel.asm	/^ffff8000001038ce:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff8000001038d2	kernel.asm	/^ffff8000001038d2:	8b 90 9c 00 00 00    	mov    0x9c(%rax),%edx$/;"	l
ffff8000001038d8	kernel.asm	/^ffff8000001038d8:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff8000001038db	kernel.asm	/^ffff8000001038db:	39 c2                	cmp    %eax,%edx$/;"	l
ffff8000001038dd	kernel.asm	/^ffff8000001038dd:	77 a3                	ja     ffff800000103882 <dirlink+0x63>$/;"	l
ffff8000001038df	kernel.asm	/^ffff8000001038df:	eb 01                	jmp    ffff8000001038e2 <dirlink+0xc3>$/;"	l
ffff8000001038e1	kernel.asm	/^ffff8000001038e1:	90                   	nop$/;"	l
ffff8000001038e2	kernel.asm	/^ffff8000001038e2:	48 8b 45 d0          	mov    -0x30(%rbp),%rax$/;"	l
ffff8000001038e6	kernel.asm	/^ffff8000001038e6:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx$/;"	l
ffff8000001038ea	kernel.asm	/^ffff8000001038ea:	48 8d 4a 02          	lea    0x2(%rdx),%rcx$/;"	l
ffff8000001038ee	kernel.asm	/^ffff8000001038ee:	ba 0e 00 00 00       	mov    $0xe,%edx$/;"	l
ffff8000001038f3	kernel.asm	/^ffff8000001038f3:	48 89 c6             	mov    %rax,%rsi$/;"	l
ffff8000001038f6	kernel.asm	/^ffff8000001038f6:	48 89 cf             	mov    %rcx,%rdi$/;"	l
ffff8000001038f9	kernel.asm	/^ffff8000001038f9:	48 b8 b1 7d 10 00 00 	movabs $0xffff800000107db1,%rax$/;"	l
ffff800000103900	kernel.asm	/^ffff800000103900:	80 ff ff $/;"	l
ffff800000103903	kernel.asm	/^ffff800000103903:	ff d0                	callq  *%rax$/;"	l
ffff800000103905	kernel.asm	/^ffff800000103905:	8b 45 cc             	mov    -0x34(%rbp),%eax$/;"	l
ffff800000103908	kernel.asm	/^ffff800000103908:	66 89 45 e0          	mov    %ax,-0x20(%rbp)$/;"	l
ffff80000010390c	kernel.asm	/^ffff80000010390c:	8b 55 fc             	mov    -0x4(%rbp),%edx$/;"	l
ffff80000010390f	kernel.asm	/^ffff80000010390f:	48 8d 75 e0          	lea    -0x20(%rbp),%rsi$/;"	l
ffff800000103913	kernel.asm	/^ffff800000103913:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff800000103917	kernel.asm	/^ffff800000103917:	b9 10 00 00 00       	mov    $0x10,%ecx$/;"	l
ffff80000010391c	kernel.asm	/^ffff80000010391c:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010391f	kernel.asm	/^ffff80000010391f:	48 b8 dc 34 10 00 00 	movabs $0xffff8000001034dc,%rax$/;"	l
ffff800000103926	kernel.asm	/^ffff800000103926:	80 ff ff $/;"	l
ffff800000103929	kernel.asm	/^ffff800000103929:	ff d0                	callq  *%rax$/;"	l
ffff80000010392b	kernel.asm	/^ffff80000010392b:	83 f8 10             	cmp    $0x10,%eax$/;"	l
ffff80000010392e	kernel.asm	/^ffff80000010392e:	74 16                	je     ffff800000103946 <dirlink+0x127>$/;"	l
ffff800000103930	kernel.asm	/^ffff800000103930:	48 bf 02 d6 10 00 00 	movabs $0xffff80000010d602,%rdi$/;"	l
ffff800000103937	kernel.asm	/^ffff800000103937:	80 ff ff $/;"	l
ffff80000010393a	kernel.asm	/^ffff80000010393a:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff800000103941	kernel.asm	/^ffff800000103941:	80 ff ff $/;"	l
ffff800000103944	kernel.asm	/^ffff800000103944:	ff d0                	callq  *%rax$/;"	l
ffff800000103946	kernel.asm	/^ffff800000103946:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff80000010394b	kernel.asm	/^ffff80000010394b:	c9                   	leaveq $/;"	l
ffff80000010394c	kernel.asm	/^ffff80000010394c:	c3                   	retq   $/;"	l
ffff80000010394d	kernel.asm	/^ffff80000010394d <skipelem>:$/;"	l
ffff80000010394d	kernel.asm	/^ffff80000010394d:	55                   	push   %rbp$/;"	l
ffff80000010394e	kernel.asm	/^ffff80000010394e:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000103951	kernel.asm	/^ffff800000103951:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ffff800000103955	kernel.asm	/^ffff800000103955:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
ffff800000103959	kernel.asm	/^ffff800000103959:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)$/;"	l
ffff80000010395d	kernel.asm	/^ffff80000010395d:	eb 05                	jmp    ffff800000103964 <skipelem+0x17>$/;"	l
ffff80000010395f	kernel.asm	/^ffff80000010395f:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)$/;"	l
ffff800000103964	kernel.asm	/^ffff800000103964:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000103968	kernel.asm	/^ffff800000103968:	0f b6 00             	movzbl (%rax),%eax$/;"	l
ffff80000010396b	kernel.asm	/^ffff80000010396b:	3c 2f                	cmp    $0x2f,%al$/;"	l
ffff80000010396d	kernel.asm	/^ffff80000010396d:	74 f0                	je     ffff80000010395f <skipelem+0x12>$/;"	l
ffff80000010396f	kernel.asm	/^ffff80000010396f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000103973	kernel.asm	/^ffff800000103973:	0f b6 00             	movzbl (%rax),%eax$/;"	l
ffff800000103976	kernel.asm	/^ffff800000103976:	84 c0                	test   %al,%al$/;"	l
ffff800000103978	kernel.asm	/^ffff800000103978:	75 0a                	jne    ffff800000103984 <skipelem+0x37>$/;"	l
ffff80000010397a	kernel.asm	/^ffff80000010397a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff80000010397f	kernel.asm	/^ffff80000010397f:	e9 a0 00 00 00       	jmpq   ffff800000103a24 <skipelem+0xd7>$/;"	l
ffff800000103984	kernel.asm	/^ffff800000103984:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000103988	kernel.asm	/^ffff800000103988:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff80000010398c	kernel.asm	/^ffff80000010398c:	eb 05                	jmp    ffff800000103993 <skipelem+0x46>$/;"	l
ffff80000010398e	kernel.asm	/^ffff80000010398e:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)$/;"	l
ffff800000103993	kernel.asm	/^ffff800000103993:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000103997	kernel.asm	/^ffff800000103997:	0f b6 00             	movzbl (%rax),%eax$/;"	l
ffff80000010399a	kernel.asm	/^ffff80000010399a:	3c 2f                	cmp    $0x2f,%al$/;"	l
ffff80000010399c	kernel.asm	/^ffff80000010399c:	74 0b                	je     ffff8000001039a9 <skipelem+0x5c>$/;"	l
ffff80000010399e	kernel.asm	/^ffff80000010399e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff8000001039a2	kernel.asm	/^ffff8000001039a2:	0f b6 00             	movzbl (%rax),%eax$/;"	l
ffff8000001039a5	kernel.asm	/^ffff8000001039a5:	84 c0                	test   %al,%al$/;"	l
ffff8000001039a7	kernel.asm	/^ffff8000001039a7:	75 e5                	jne    ffff80000010398e <skipelem+0x41>$/;"	l
ffff8000001039a9	kernel.asm	/^ffff8000001039a9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx$/;"	l
ffff8000001039ad	kernel.asm	/^ffff8000001039ad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001039b1	kernel.asm	/^ffff8000001039b1:	48 29 c2             	sub    %rax,%rdx$/;"	l
ffff8000001039b4	kernel.asm	/^ffff8000001039b4:	48 89 d0             	mov    %rdx,%rax$/;"	l
ffff8000001039b7	kernel.asm	/^ffff8000001039b7:	89 45 f4             	mov    %eax,-0xc(%rbp)$/;"	l
ffff8000001039ba	kernel.asm	/^ffff8000001039ba:	83 7d f4 0d          	cmpl   $0xd,-0xc(%rbp)$/;"	l
ffff8000001039be	kernel.asm	/^ffff8000001039be:	7e 21                	jle    ffff8000001039e1 <skipelem+0x94>$/;"	l
ffff8000001039c0	kernel.asm	/^ffff8000001039c0:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx$/;"	l
ffff8000001039c4	kernel.asm	/^ffff8000001039c4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff8000001039c8	kernel.asm	/^ffff8000001039c8:	ba 0e 00 00 00       	mov    $0xe,%edx$/;"	l
ffff8000001039cd	kernel.asm	/^ffff8000001039cd:	48 89 ce             	mov    %rcx,%rsi$/;"	l
ffff8000001039d0	kernel.asm	/^ffff8000001039d0:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001039d3	kernel.asm	/^ffff8000001039d3:	48 b8 6f 7c 10 00 00 	movabs $0xffff800000107c6f,%rax$/;"	l
ffff8000001039da	kernel.asm	/^ffff8000001039da:	80 ff ff $/;"	l
ffff8000001039dd	kernel.asm	/^ffff8000001039dd:	ff d0                	callq  *%rax$/;"	l
ffff8000001039df	kernel.asm	/^ffff8000001039df:	eb 34                	jmp    ffff800000103a15 <skipelem+0xc8>$/;"	l
ffff8000001039e1	kernel.asm	/^ffff8000001039e1:	8b 55 f4             	mov    -0xc(%rbp),%edx$/;"	l
ffff8000001039e4	kernel.asm	/^ffff8000001039e4:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx$/;"	l
ffff8000001039e8	kernel.asm	/^ffff8000001039e8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff8000001039ec	kernel.asm	/^ffff8000001039ec:	48 89 ce             	mov    %rcx,%rsi$/;"	l
ffff8000001039ef	kernel.asm	/^ffff8000001039ef:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001039f2	kernel.asm	/^ffff8000001039f2:	48 b8 6f 7c 10 00 00 	movabs $0xffff800000107c6f,%rax$/;"	l
ffff8000001039f9	kernel.asm	/^ffff8000001039f9:	80 ff ff $/;"	l
ffff8000001039fc	kernel.asm	/^ffff8000001039fc:	ff d0                	callq  *%rax$/;"	l
ffff8000001039fe	kernel.asm	/^ffff8000001039fe:	8b 45 f4             	mov    -0xc(%rbp),%eax$/;"	l
ffff800000103a01	kernel.asm	/^ffff800000103a01:	48 63 d0             	movslq %eax,%rdx$/;"	l
ffff800000103a04	kernel.asm	/^ffff800000103a04:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff800000103a08	kernel.asm	/^ffff800000103a08:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff800000103a0b	kernel.asm	/^ffff800000103a0b:	c6 00 00             	movb   $0x0,(%rax)$/;"	l
ffff800000103a0e	kernel.asm	/^ffff800000103a0e:	eb 05                	jmp    ffff800000103a15 <skipelem+0xc8>$/;"	l
ffff800000103a10	kernel.asm	/^ffff800000103a10:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)$/;"	l
ffff800000103a15	kernel.asm	/^ffff800000103a15:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000103a19	kernel.asm	/^ffff800000103a19:	0f b6 00             	movzbl (%rax),%eax$/;"	l
ffff800000103a1c	kernel.asm	/^ffff800000103a1c:	3c 2f                	cmp    $0x2f,%al$/;"	l
ffff800000103a1e	kernel.asm	/^ffff800000103a1e:	74 f0                	je     ffff800000103a10 <skipelem+0xc3>$/;"	l
ffff800000103a20	kernel.asm	/^ffff800000103a20:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000103a24	kernel.asm	/^ffff800000103a24:	c9                   	leaveq $/;"	l
ffff800000103a25	kernel.asm	/^ffff800000103a25:	c3                   	retq   $/;"	l
ffff800000103a26	kernel.asm	/^ffff800000103a26 <namex>:$/;"	l
ffff800000103a26	kernel.asm	/^ffff800000103a26:	55                   	push   %rbp$/;"	l
ffff800000103a27	kernel.asm	/^ffff800000103a27:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000103a2a	kernel.asm	/^ffff800000103a2a:	48 83 ec 30          	sub    $0x30,%rsp$/;"	l
ffff800000103a2e	kernel.asm	/^ffff800000103a2e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
ffff800000103a32	kernel.asm	/^ffff800000103a32:	89 75 e4             	mov    %esi,-0x1c(%rbp)$/;"	l
ffff800000103a35	kernel.asm	/^ffff800000103a35:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)$/;"	l
ffff800000103a39	kernel.asm	/^ffff800000103a39:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000103a3d	kernel.asm	/^ffff800000103a3d:	0f b6 00             	movzbl (%rax),%eax$/;"	l
ffff800000103a40	kernel.asm	/^ffff800000103a40:	3c 2f                	cmp    $0x2f,%al$/;"	l
ffff800000103a42	kernel.asm	/^ffff800000103a42:	75 1f                	jne    ffff800000103a63 <namex+0x3d>$/;"	l
ffff800000103a44	kernel.asm	/^ffff800000103a44:	be 01 00 00 00       	mov    $0x1,%esi$/;"	l
ffff800000103a49	kernel.asm	/^ffff800000103a49:	bf 01 00 00 00       	mov    $0x1,%edi$/;"	l
ffff800000103a4e	kernel.asm	/^ffff800000103a4e:	48 b8 39 2b 10 00 00 	movabs $0xffff800000102b39,%rax$/;"	l
ffff800000103a55	kernel.asm	/^ffff800000103a55:	80 ff ff $/;"	l
ffff800000103a58	kernel.asm	/^ffff800000103a58:	ff d0                	callq  *%rax$/;"	l
ffff800000103a5a	kernel.asm	/^ffff800000103a5a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff800000103a5e	kernel.asm	/^ffff800000103a5e:	e9 f7 00 00 00       	jmpq   ffff800000103b5a <namex+0x134>$/;"	l
ffff800000103a63	kernel.asm	/^ffff800000103a63:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000103a6a	kernel.asm	/^ffff800000103a6a:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000103a6e	kernel.asm	/^ffff800000103a6e:	48 8b 80 c8 00 00 00 	mov    0xc8(%rax),%rax$/;"	l
ffff800000103a75	kernel.asm	/^ffff800000103a75:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000103a78	kernel.asm	/^ffff800000103a78:	48 b8 6a 2c 10 00 00 	movabs $0xffff800000102c6a,%rax$/;"	l
ffff800000103a7f	kernel.asm	/^ffff800000103a7f:	80 ff ff $/;"	l
ffff800000103a82	kernel.asm	/^ffff800000103a82:	ff d0                	callq  *%rax$/;"	l
ffff800000103a84	kernel.asm	/^ffff800000103a84:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff800000103a88	kernel.asm	/^ffff800000103a88:	e9 cd 00 00 00       	jmpq   ffff800000103b5a <namex+0x134>$/;"	l
ffff800000103a8d	kernel.asm	/^ffff800000103a8d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000103a91	kernel.asm	/^ffff800000103a91:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000103a94	kernel.asm	/^ffff800000103a94:	48 b8 b9 2c 10 00 00 	movabs $0xffff800000102cb9,%rax$/;"	l
ffff800000103a9b	kernel.asm	/^ffff800000103a9b:	80 ff ff $/;"	l
ffff800000103a9e	kernel.asm	/^ffff800000103a9e:	ff d0                	callq  *%rax$/;"	l
ffff800000103aa0	kernel.asm	/^ffff800000103aa0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000103aa4	kernel.asm	/^ffff800000103aa4:	0f b7 80 94 00 00 00 	movzwl 0x94(%rax),%eax$/;"	l
ffff800000103aab	kernel.asm	/^ffff800000103aab:	66 83 f8 01          	cmp    $0x1,%ax$/;"	l
ffff800000103aaf	kernel.asm	/^ffff800000103aaf:	74 1d                	je     ffff800000103ace <namex+0xa8>$/;"	l
ffff800000103ab1	kernel.asm	/^ffff800000103ab1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000103ab5	kernel.asm	/^ffff800000103ab5:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000103ab8	kernel.asm	/^ffff800000103ab8:	48 b8 9d 2f 10 00 00 	movabs $0xffff800000102f9d,%rax$/;"	l
ffff800000103abf	kernel.asm	/^ffff800000103abf:	80 ff ff $/;"	l
ffff800000103ac2	kernel.asm	/^ffff800000103ac2:	ff d0                	callq  *%rax$/;"	l
ffff800000103ac4	kernel.asm	/^ffff800000103ac4:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000103ac9	kernel.asm	/^ffff800000103ac9:	e9 d9 00 00 00       	jmpq   ffff800000103ba7 <namex+0x181>$/;"	l
ffff800000103ace	kernel.asm	/^ffff800000103ace:	83 7d e4 00          	cmpl   $0x0,-0x1c(%rbp)$/;"	l
ffff800000103ad2	kernel.asm	/^ffff800000103ad2:	74 27                	je     ffff800000103afb <namex+0xd5>$/;"	l
ffff800000103ad4	kernel.asm	/^ffff800000103ad4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000103ad8	kernel.asm	/^ffff800000103ad8:	0f b6 00             	movzbl (%rax),%eax$/;"	l
ffff800000103adb	kernel.asm	/^ffff800000103adb:	84 c0                	test   %al,%al$/;"	l
ffff800000103add	kernel.asm	/^ffff800000103add:	75 1c                	jne    ffff800000103afb <namex+0xd5>$/;"	l
ffff800000103adf	kernel.asm	/^ffff800000103adf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000103ae3	kernel.asm	/^ffff800000103ae3:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000103ae6	kernel.asm	/^ffff800000103ae6:	48 b8 4a 2e 10 00 00 	movabs $0xffff800000102e4a,%rax$/;"	l
ffff800000103aed	kernel.asm	/^ffff800000103aed:	80 ff ff $/;"	l
ffff800000103af0	kernel.asm	/^ffff800000103af0:	ff d0                	callq  *%rax$/;"	l
ffff800000103af2	kernel.asm	/^ffff800000103af2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000103af6	kernel.asm	/^ffff800000103af6:	e9 ac 00 00 00       	jmpq   ffff800000103ba7 <namex+0x181>$/;"	l
ffff800000103afb	kernel.asm	/^ffff800000103afb:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx$/;"	l
ffff800000103aff	kernel.asm	/^ffff800000103aff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000103b03	kernel.asm	/^ffff800000103b03:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
ffff800000103b08	kernel.asm	/^ffff800000103b08:	48 89 ce             	mov    %rcx,%rsi$/;"	l
ffff800000103b0b	kernel.asm	/^ffff800000103b0b:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000103b0e	kernel.asm	/^ffff800000103b0e:	48 b8 1f 37 10 00 00 	movabs $0xffff80000010371f,%rax$/;"	l
ffff800000103b15	kernel.asm	/^ffff800000103b15:	80 ff ff $/;"	l
ffff800000103b18	kernel.asm	/^ffff800000103b18:	ff d0                	callq  *%rax$/;"	l
ffff800000103b1a	kernel.asm	/^ffff800000103b1a:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ffff800000103b1e	kernel.asm	/^ffff800000103b1e:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)$/;"	l
ffff800000103b23	kernel.asm	/^ffff800000103b23:	75 1a                	jne    ffff800000103b3f <namex+0x119>$/;"	l
ffff800000103b25	kernel.asm	/^ffff800000103b25:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000103b29	kernel.asm	/^ffff800000103b29:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000103b2c	kernel.asm	/^ffff800000103b2c:	48 b8 9d 2f 10 00 00 	movabs $0xffff800000102f9d,%rax$/;"	l
ffff800000103b33	kernel.asm	/^ffff800000103b33:	80 ff ff $/;"	l
ffff800000103b36	kernel.asm	/^ffff800000103b36:	ff d0                	callq  *%rax$/;"	l
ffff800000103b38	kernel.asm	/^ffff800000103b38:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000103b3d	kernel.asm	/^ffff800000103b3d:	eb 68                	jmp    ffff800000103ba7 <namex+0x181>$/;"	l
ffff800000103b3f	kernel.asm	/^ffff800000103b3f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000103b43	kernel.asm	/^ffff800000103b43:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000103b46	kernel.asm	/^ffff800000103b46:	48 b8 9d 2f 10 00 00 	movabs $0xffff800000102f9d,%rax$/;"	l
ffff800000103b4d	kernel.asm	/^ffff800000103b4d:	80 ff ff $/;"	l
ffff800000103b50	kernel.asm	/^ffff800000103b50:	ff d0                	callq  *%rax$/;"	l
ffff800000103b52	kernel.asm	/^ffff800000103b52:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000103b56	kernel.asm	/^ffff800000103b56:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff800000103b5a	kernel.asm	/^ffff800000103b5a:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx$/;"	l
ffff800000103b5e	kernel.asm	/^ffff800000103b5e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000103b62	kernel.asm	/^ffff800000103b62:	48 89 d6             	mov    %rdx,%rsi$/;"	l
ffff800000103b65	kernel.asm	/^ffff800000103b65:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000103b68	kernel.asm	/^ffff800000103b68:	48 b8 4d 39 10 00 00 	movabs $0xffff80000010394d,%rax$/;"	l
ffff800000103b6f	kernel.asm	/^ffff800000103b6f:	80 ff ff $/;"	l
ffff800000103b72	kernel.asm	/^ffff800000103b72:	ff d0                	callq  *%rax$/;"	l
ffff800000103b74	kernel.asm	/^ffff800000103b74:	48 89 45 e8          	mov    %rax,-0x18(%rbp)$/;"	l
ffff800000103b78	kernel.asm	/^ffff800000103b78:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)$/;"	l
ffff800000103b7d	kernel.asm	/^ffff800000103b7d:	0f 85 0a ff ff ff    	jne    ffff800000103a8d <namex+0x67>$/;"	l
ffff800000103b83	kernel.asm	/^ffff800000103b83:	83 7d e4 00          	cmpl   $0x0,-0x1c(%rbp)$/;"	l
ffff800000103b87	kernel.asm	/^ffff800000103b87:	74 1a                	je     ffff800000103ba3 <namex+0x17d>$/;"	l
ffff800000103b89	kernel.asm	/^ffff800000103b89:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000103b8d	kernel.asm	/^ffff800000103b8d:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000103b90	kernel.asm	/^ffff800000103b90:	48 b8 b3 2e 10 00 00 	movabs $0xffff800000102eb3,%rax$/;"	l
ffff800000103b97	kernel.asm	/^ffff800000103b97:	80 ff ff $/;"	l
ffff800000103b9a	kernel.asm	/^ffff800000103b9a:	ff d0                	callq  *%rax$/;"	l
ffff800000103b9c	kernel.asm	/^ffff800000103b9c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000103ba1	kernel.asm	/^ffff800000103ba1:	eb 04                	jmp    ffff800000103ba7 <namex+0x181>$/;"	l
ffff800000103ba3	kernel.asm	/^ffff800000103ba3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000103ba7	kernel.asm	/^ffff800000103ba7:	c9                   	leaveq $/;"	l
ffff800000103ba8	kernel.asm	/^ffff800000103ba8:	c3                   	retq   $/;"	l
ffff800000103ba9	kernel.asm	/^ffff800000103ba9 <namei>:$/;"	l
ffff800000103ba9	kernel.asm	/^ffff800000103ba9:	55                   	push   %rbp$/;"	l
ffff800000103baa	kernel.asm	/^ffff800000103baa:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000103bad	kernel.asm	/^ffff800000103bad:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ffff800000103bb1	kernel.asm	/^ffff800000103bb1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
ffff800000103bb5	kernel.asm	/^ffff800000103bb5:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx$/;"	l
ffff800000103bb9	kernel.asm	/^ffff800000103bb9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000103bbd	kernel.asm	/^ffff800000103bbd:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffff800000103bc2	kernel.asm	/^ffff800000103bc2:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000103bc5	kernel.asm	/^ffff800000103bc5:	48 b8 26 3a 10 00 00 	movabs $0xffff800000103a26,%rax$/;"	l
ffff800000103bcc	kernel.asm	/^ffff800000103bcc:	80 ff ff $/;"	l
ffff800000103bcf	kernel.asm	/^ffff800000103bcf:	ff d0                	callq  *%rax$/;"	l
ffff800000103bd1	kernel.asm	/^ffff800000103bd1:	c9                   	leaveq $/;"	l
ffff800000103bd2	kernel.asm	/^ffff800000103bd2:	c3                   	retq   $/;"	l
ffff800000103bd3	kernel.asm	/^ffff800000103bd3 <nameiparent>:$/;"	l
ffff800000103bd3	kernel.asm	/^ffff800000103bd3:	55                   	push   %rbp$/;"	l
ffff800000103bd4	kernel.asm	/^ffff800000103bd4:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000103bd7	kernel.asm	/^ffff800000103bd7:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff800000103bdb	kernel.asm	/^ffff800000103bdb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)$/;"	l
ffff800000103bdf	kernel.asm	/^ffff800000103bdf:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)$/;"	l
ffff800000103be3	kernel.asm	/^ffff800000103be3:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
ffff800000103be7	kernel.asm	/^ffff800000103be7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000103beb	kernel.asm	/^ffff800000103beb:	be 01 00 00 00       	mov    $0x1,%esi$/;"	l
ffff800000103bf0	kernel.asm	/^ffff800000103bf0:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000103bf3	kernel.asm	/^ffff800000103bf3:	48 b8 26 3a 10 00 00 	movabs $0xffff800000103a26,%rax$/;"	l
ffff800000103bfa	kernel.asm	/^ffff800000103bfa:	80 ff ff $/;"	l
ffff800000103bfd	kernel.asm	/^ffff800000103bfd:	ff d0                	callq  *%rax$/;"	l
ffff800000103bff	kernel.asm	/^ffff800000103bff:	c9                   	leaveq $/;"	l
ffff800000103c00	kernel.asm	/^ffff800000103c00:	c3                   	retq   $/;"	l
ffff800000103c01	kernel.asm	/^ffff800000103c01 <inb>:$/;"	l
ffff800000103c01	kernel.asm	/^ffff800000103c01:	55                   	push   %rbp$/;"	l
ffff800000103c02	kernel.asm	/^ffff800000103c02:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000103c05	kernel.asm	/^ffff800000103c05:	48 83 ec 18          	sub    $0x18,%rsp$/;"	l
ffff800000103c09	kernel.asm	/^ffff800000103c09:	89 f8                	mov    %edi,%eax$/;"	l
ffff800000103c0b	kernel.asm	/^ffff800000103c0b:	66 89 45 ec          	mov    %ax,-0x14(%rbp)$/;"	l
ffff800000103c0f	kernel.asm	/^ffff800000103c0f:	0f b7 45 ec          	movzwl -0x14(%rbp),%eax$/;"	l
ffff800000103c13	kernel.asm	/^ffff800000103c13:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000103c15	kernel.asm	/^ffff800000103c15:	ec                   	in     (%dx),%al$/;"	l
ffff800000103c16	kernel.asm	/^ffff800000103c16:	88 45 ff             	mov    %al,-0x1(%rbp)$/;"	l
ffff800000103c19	kernel.asm	/^ffff800000103c19:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax$/;"	l
ffff800000103c1d	kernel.asm	/^ffff800000103c1d:	c9                   	leaveq $/;"	l
ffff800000103c1e	kernel.asm	/^ffff800000103c1e:	c3                   	retq   $/;"	l
ffff800000103c1f	kernel.asm	/^ffff800000103c1f <insl>:$/;"	l
ffff800000103c1f	kernel.asm	/^ffff800000103c1f:	55                   	push   %rbp$/;"	l
ffff800000103c20	kernel.asm	/^ffff800000103c20:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000103c23	kernel.asm	/^ffff800000103c23:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff800000103c27	kernel.asm	/^ffff800000103c27:	89 7d fc             	mov    %edi,-0x4(%rbp)$/;"	l
ffff800000103c2a	kernel.asm	/^ffff800000103c2a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)$/;"	l
ffff800000103c2e	kernel.asm	/^ffff800000103c2e:	89 55 f8             	mov    %edx,-0x8(%rbp)$/;"	l
ffff800000103c31	kernel.asm	/^ffff800000103c31:	8b 55 fc             	mov    -0x4(%rbp),%edx$/;"	l
ffff800000103c34	kernel.asm	/^ffff800000103c34:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx$/;"	l
ffff800000103c38	kernel.asm	/^ffff800000103c38:	8b 45 f8             	mov    -0x8(%rbp),%eax$/;"	l
ffff800000103c3b	kernel.asm	/^ffff800000103c3b:	48 89 ce             	mov    %rcx,%rsi$/;"	l
ffff800000103c3e	kernel.asm	/^ffff800000103c3e:	48 89 f7             	mov    %rsi,%rdi$/;"	l
ffff800000103c41	kernel.asm	/^ffff800000103c41:	89 c1                	mov    %eax,%ecx$/;"	l
ffff800000103c43	kernel.asm	/^ffff800000103c43:	fc                   	cld    $/;"	l
ffff800000103c44	kernel.asm	/^ffff800000103c44:	f3 6d                	rep insl (%dx),%es:(%rdi)$/;"	l
ffff800000103c46	kernel.asm	/^ffff800000103c46:	89 c8                	mov    %ecx,%eax$/;"	l
ffff800000103c48	kernel.asm	/^ffff800000103c48:	48 89 fe             	mov    %rdi,%rsi$/;"	l
ffff800000103c4b	kernel.asm	/^ffff800000103c4b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)$/;"	l
ffff800000103c4f	kernel.asm	/^ffff800000103c4f:	89 45 f8             	mov    %eax,-0x8(%rbp)$/;"	l
ffff800000103c52	kernel.asm	/^ffff800000103c52:	90                   	nop$/;"	l
ffff800000103c53	kernel.asm	/^ffff800000103c53:	c9                   	leaveq $/;"	l
ffff800000103c54	kernel.asm	/^ffff800000103c54:	c3                   	retq   $/;"	l
ffff800000103c55	kernel.asm	/^ffff800000103c55 <outb>:$/;"	l
ffff800000103c55	kernel.asm	/^ffff800000103c55:	55                   	push   %rbp$/;"	l
ffff800000103c56	kernel.asm	/^ffff800000103c56:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000103c59	kernel.asm	/^ffff800000103c59:	48 83 ec 08          	sub    $0x8,%rsp$/;"	l
ffff800000103c5d	kernel.asm	/^ffff800000103c5d:	89 fa                	mov    %edi,%edx$/;"	l
ffff800000103c5f	kernel.asm	/^ffff800000103c5f:	89 f0                	mov    %esi,%eax$/;"	l
ffff800000103c61	kernel.asm	/^ffff800000103c61:	66 89 55 fc          	mov    %dx,-0x4(%rbp)$/;"	l
ffff800000103c65	kernel.asm	/^ffff800000103c65:	88 45 f8             	mov    %al,-0x8(%rbp)$/;"	l
ffff800000103c68	kernel.asm	/^ffff800000103c68:	0f b6 45 f8          	movzbl -0x8(%rbp),%eax$/;"	l
ffff800000103c6c	kernel.asm	/^ffff800000103c6c:	0f b7 55 fc          	movzwl -0x4(%rbp),%edx$/;"	l
ffff800000103c70	kernel.asm	/^ffff800000103c70:	ee                   	out    %al,(%dx)$/;"	l
ffff800000103c71	kernel.asm	/^ffff800000103c71:	90                   	nop$/;"	l
ffff800000103c72	kernel.asm	/^ffff800000103c72:	c9                   	leaveq $/;"	l
ffff800000103c73	kernel.asm	/^ffff800000103c73:	c3                   	retq   $/;"	l
ffff800000103c74	kernel.asm	/^ffff800000103c74 <outsl>:$/;"	l
ffff800000103c74	kernel.asm	/^ffff800000103c74:	55                   	push   %rbp$/;"	l
ffff800000103c75	kernel.asm	/^ffff800000103c75:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000103c78	kernel.asm	/^ffff800000103c78:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff800000103c7c	kernel.asm	/^ffff800000103c7c:	89 7d fc             	mov    %edi,-0x4(%rbp)$/;"	l
ffff800000103c7f	kernel.asm	/^ffff800000103c7f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)$/;"	l
ffff800000103c83	kernel.asm	/^ffff800000103c83:	89 55 f8             	mov    %edx,-0x8(%rbp)$/;"	l
ffff800000103c86	kernel.asm	/^ffff800000103c86:	8b 55 fc             	mov    -0x4(%rbp),%edx$/;"	l
ffff800000103c89	kernel.asm	/^ffff800000103c89:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx$/;"	l
ffff800000103c8d	kernel.asm	/^ffff800000103c8d:	8b 45 f8             	mov    -0x8(%rbp),%eax$/;"	l
ffff800000103c90	kernel.asm	/^ffff800000103c90:	48 89 ce             	mov    %rcx,%rsi$/;"	l
ffff800000103c93	kernel.asm	/^ffff800000103c93:	89 c1                	mov    %eax,%ecx$/;"	l
ffff800000103c95	kernel.asm	/^ffff800000103c95:	fc                   	cld    $/;"	l
ffff800000103c96	kernel.asm	/^ffff800000103c96:	f3 6f                	rep outsl %ds:(%rsi),(%dx)$/;"	l
ffff800000103c98	kernel.asm	/^ffff800000103c98:	89 c8                	mov    %ecx,%eax$/;"	l
ffff800000103c9a	kernel.asm	/^ffff800000103c9a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)$/;"	l
ffff800000103c9e	kernel.asm	/^ffff800000103c9e:	89 45 f8             	mov    %eax,-0x8(%rbp)$/;"	l
ffff800000103ca1	kernel.asm	/^ffff800000103ca1:	90                   	nop$/;"	l
ffff800000103ca2	kernel.asm	/^ffff800000103ca2:	c9                   	leaveq $/;"	l
ffff800000103ca3	kernel.asm	/^ffff800000103ca3:	c3                   	retq   $/;"	l
ffff800000103ca4	kernel.asm	/^ffff800000103ca4 <idewait>:$/;"	l
ffff800000103ca4	kernel.asm	/^ffff800000103ca4:	55                   	push   %rbp$/;"	l
ffff800000103ca5	kernel.asm	/^ffff800000103ca5:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000103ca8	kernel.asm	/^ffff800000103ca8:	48 83 ec 18          	sub    $0x18,%rsp$/;"	l
ffff800000103cac	kernel.asm	/^ffff800000103cac:	89 7d ec             	mov    %edi,-0x14(%rbp)$/;"	l
ffff800000103caf	kernel.asm	/^ffff800000103caf:	90                   	nop$/;"	l
ffff800000103cb0	kernel.asm	/^ffff800000103cb0:	bf f7 01 00 00       	mov    $0x1f7,%edi$/;"	l
ffff800000103cb5	kernel.asm	/^ffff800000103cb5:	48 b8 01 3c 10 00 00 	movabs $0xffff800000103c01,%rax$/;"	l
ffff800000103cbc	kernel.asm	/^ffff800000103cbc:	80 ff ff $/;"	l
ffff800000103cbf	kernel.asm	/^ffff800000103cbf:	ff d0                	callq  *%rax$/;"	l
ffff800000103cc1	kernel.asm	/^ffff800000103cc1:	0f b6 c0             	movzbl %al,%eax$/;"	l
ffff800000103cc4	kernel.asm	/^ffff800000103cc4:	89 45 fc             	mov    %eax,-0x4(%rbp)$/;"	l
ffff800000103cc7	kernel.asm	/^ffff800000103cc7:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff800000103cca	kernel.asm	/^ffff800000103cca:	25 c0 00 00 00       	and    $0xc0,%eax$/;"	l
ffff800000103ccf	kernel.asm	/^ffff800000103ccf:	83 f8 40             	cmp    $0x40,%eax$/;"	l
ffff800000103cd2	kernel.asm	/^ffff800000103cd2:	75 dc                	jne    ffff800000103cb0 <idewait+0xc>$/;"	l
ffff800000103cd4	kernel.asm	/^ffff800000103cd4:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)$/;"	l
ffff800000103cd8	kernel.asm	/^ffff800000103cd8:	74 11                	je     ffff800000103ceb <idewait+0x47>$/;"	l
ffff800000103cda	kernel.asm	/^ffff800000103cda:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff800000103cdd	kernel.asm	/^ffff800000103cdd:	83 e0 21             	and    $0x21,%eax$/;"	l
ffff800000103ce0	kernel.asm	/^ffff800000103ce0:	85 c0                	test   %eax,%eax$/;"	l
ffff800000103ce2	kernel.asm	/^ffff800000103ce2:	74 07                	je     ffff800000103ceb <idewait+0x47>$/;"	l
ffff800000103ce4	kernel.asm	/^ffff800000103ce4:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff800000103ce9	kernel.asm	/^ffff800000103ce9:	eb 05                	jmp    ffff800000103cf0 <idewait+0x4c>$/;"	l
ffff800000103ceb	kernel.asm	/^ffff800000103ceb:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000103cf0	kernel.asm	/^ffff800000103cf0:	c9                   	leaveq $/;"	l
ffff800000103cf1	kernel.asm	/^ffff800000103cf1:	c3                   	retq   $/;"	l
ffff800000103cf2	kernel.asm	/^ffff800000103cf2 <ideinit>:$/;"	l
ffff800000103cf2	kernel.asm	/^ffff800000103cf2:	55                   	push   %rbp$/;"	l
ffff800000103cf3	kernel.asm	/^ffff800000103cf3:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000103cf6	kernel.asm	/^ffff800000103cf6:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff800000103cfa	kernel.asm	/^ffff800000103cfa:	48 be 0a d6 10 00 00 	movabs $0xffff80000010d60a,%rsi$/;"	l
ffff800000103d01	kernel.asm	/^ffff800000103d01:	80 ff ff $/;"	l
ffff800000103d04	kernel.asm	/^ffff800000103d04:	48 bf 00 b1 11 00 00 	movabs $0xffff80000011b100,%rdi$/;"	l
ffff800000103d0b	kernel.asm	/^ffff800000103d0b:	80 ff ff $/;"	l
ffff800000103d0e	kernel.asm	/^ffff800000103d0e:	48 b8 a1 77 10 00 00 	movabs $0xffff8000001077a1,%rax$/;"	l
ffff800000103d15	kernel.asm	/^ffff800000103d15:	80 ff ff $/;"	l
ffff800000103d18	kernel.asm	/^ffff800000103d18:	ff d0                	callq  *%rax$/;"	l
ffff800000103d1a	kernel.asm	/^ffff800000103d1a:	48 b8 e0 ba 11 00 00 	movabs $0xffff80000011bae0,%rax$/;"	l
ffff800000103d21	kernel.asm	/^ffff800000103d21:	80 ff ff $/;"	l
ffff800000103d24	kernel.asm	/^ffff800000103d24:	8b 00                	mov    (%rax),%eax$/;"	l
ffff800000103d26	kernel.asm	/^ffff800000103d26:	83 e8 01             	sub    $0x1,%eax$/;"	l
ffff800000103d29	kernel.asm	/^ffff800000103d29:	89 c6                	mov    %eax,%esi$/;"	l
ffff800000103d2b	kernel.asm	/^ffff800000103d2b:	bf 0e 00 00 00       	mov    $0xe,%edi$/;"	l
ffff800000103d30	kernel.asm	/^ffff800000103d30:	48 b8 54 43 10 00 00 	movabs $0xffff800000104354,%rax$/;"	l
ffff800000103d37	kernel.asm	/^ffff800000103d37:	80 ff ff $/;"	l
ffff800000103d3a	kernel.asm	/^ffff800000103d3a:	ff d0                	callq  *%rax$/;"	l
ffff800000103d3c	kernel.asm	/^ffff800000103d3c:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
ffff800000103d41	kernel.asm	/^ffff800000103d41:	48 b8 a4 3c 10 00 00 	movabs $0xffff800000103ca4,%rax$/;"	l
ffff800000103d48	kernel.asm	/^ffff800000103d48:	80 ff ff $/;"	l
ffff800000103d4b	kernel.asm	/^ffff800000103d4b:	ff d0                	callq  *%rax$/;"	l
ffff800000103d4d	kernel.asm	/^ffff800000103d4d:	be f0 00 00 00       	mov    $0xf0,%esi$/;"	l
ffff800000103d52	kernel.asm	/^ffff800000103d52:	bf f6 01 00 00       	mov    $0x1f6,%edi$/;"	l
ffff800000103d57	kernel.asm	/^ffff800000103d57:	48 b8 55 3c 10 00 00 	movabs $0xffff800000103c55,%rax$/;"	l
ffff800000103d5e	kernel.asm	/^ffff800000103d5e:	80 ff ff $/;"	l
ffff800000103d61	kernel.asm	/^ffff800000103d61:	ff d0                	callq  *%rax$/;"	l
ffff800000103d63	kernel.asm	/^ffff800000103d63:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)$/;"	l
ffff800000103d6a	kernel.asm	/^ffff800000103d6a:	eb 2b                	jmp    ffff800000103d97 <ideinit+0xa5>$/;"	l
ffff800000103d6c	kernel.asm	/^ffff800000103d6c:	bf f7 01 00 00       	mov    $0x1f7,%edi$/;"	l
ffff800000103d71	kernel.asm	/^ffff800000103d71:	48 b8 01 3c 10 00 00 	movabs $0xffff800000103c01,%rax$/;"	l
ffff800000103d78	kernel.asm	/^ffff800000103d78:	80 ff ff $/;"	l
ffff800000103d7b	kernel.asm	/^ffff800000103d7b:	ff d0                	callq  *%rax$/;"	l
ffff800000103d7d	kernel.asm	/^ffff800000103d7d:	84 c0                	test   %al,%al$/;"	l
ffff800000103d7f	kernel.asm	/^ffff800000103d7f:	74 12                	je     ffff800000103d93 <ideinit+0xa1>$/;"	l
ffff800000103d81	kernel.asm	/^ffff800000103d81:	48 b8 70 b1 11 00 00 	movabs $0xffff80000011b170,%rax$/;"	l
ffff800000103d88	kernel.asm	/^ffff800000103d88:	80 ff ff $/;"	l
ffff800000103d8b	kernel.asm	/^ffff800000103d8b:	c7 00 01 00 00 00    	movl   $0x1,(%rax)$/;"	l
ffff800000103d91	kernel.asm	/^ffff800000103d91:	eb 0d                	jmp    ffff800000103da0 <ideinit+0xae>$/;"	l
ffff800000103d93	kernel.asm	/^ffff800000103d93:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)$/;"	l
ffff800000103d97	kernel.asm	/^ffff800000103d97:	81 7d fc e7 03 00 00 	cmpl   $0x3e7,-0x4(%rbp)$/;"	l
ffff800000103d9e	kernel.asm	/^ffff800000103d9e:	7e cc                	jle    ffff800000103d6c <ideinit+0x7a>$/;"	l
ffff800000103da0	kernel.asm	/^ffff800000103da0:	be e0 00 00 00       	mov    $0xe0,%esi$/;"	l
ffff800000103da5	kernel.asm	/^ffff800000103da5:	bf f6 01 00 00       	mov    $0x1f6,%edi$/;"	l
ffff800000103daa	kernel.asm	/^ffff800000103daa:	48 b8 55 3c 10 00 00 	movabs $0xffff800000103c55,%rax$/;"	l
ffff800000103db1	kernel.asm	/^ffff800000103db1:	80 ff ff $/;"	l
ffff800000103db4	kernel.asm	/^ffff800000103db4:	ff d0                	callq  *%rax$/;"	l
ffff800000103db6	kernel.asm	/^ffff800000103db6:	90                   	nop$/;"	l
ffff800000103db7	kernel.asm	/^ffff800000103db7:	c9                   	leaveq $/;"	l
ffff800000103db8	kernel.asm	/^ffff800000103db8:	c3                   	retq   $/;"	l
ffff800000103db9	kernel.asm	/^ffff800000103db9 <idestart>:$/;"	l
ffff800000103db9	kernel.asm	/^ffff800000103db9:	55                   	push   %rbp$/;"	l
ffff800000103dba	kernel.asm	/^ffff800000103dba:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000103dbd	kernel.asm	/^ffff800000103dbd:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ffff800000103dc1	kernel.asm	/^ffff800000103dc1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
ffff800000103dc5	kernel.asm	/^ffff800000103dc5:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)$/;"	l
ffff800000103dca	kernel.asm	/^ffff800000103dca:	75 16                	jne    ffff800000103de2 <idestart+0x29>$/;"	l
ffff800000103dcc	kernel.asm	/^ffff800000103dcc:	48 bf 0e d6 10 00 00 	movabs $0xffff80000010d60e,%rdi$/;"	l
ffff800000103dd3	kernel.asm	/^ffff800000103dd3:	80 ff ff $/;"	l
ffff800000103dd6	kernel.asm	/^ffff800000103dd6:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff800000103ddd	kernel.asm	/^ffff800000103ddd:	80 ff ff $/;"	l
ffff800000103de0	kernel.asm	/^ffff800000103de0:	ff d0                	callq  *%rax$/;"	l
ffff800000103de2	kernel.asm	/^ffff800000103de2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000103de6	kernel.asm	/^ffff800000103de6:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
ffff800000103de9	kernel.asm	/^ffff800000103de9:	3d e7 03 00 00       	cmp    $0x3e7,%eax$/;"	l
ffff800000103dee	kernel.asm	/^ffff800000103dee:	76 16                	jbe    ffff800000103e06 <idestart+0x4d>$/;"	l
ffff800000103df0	kernel.asm	/^ffff800000103df0:	48 bf 17 d6 10 00 00 	movabs $0xffff80000010d617,%rdi$/;"	l
ffff800000103df7	kernel.asm	/^ffff800000103df7:	80 ff ff $/;"	l
ffff800000103dfa	kernel.asm	/^ffff800000103dfa:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff800000103e01	kernel.asm	/^ffff800000103e01:	80 ff ff $/;"	l
ffff800000103e04	kernel.asm	/^ffff800000103e04:	ff d0                	callq  *%rax$/;"	l
ffff800000103e06	kernel.asm	/^ffff800000103e06:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%rbp)$/;"	l
ffff800000103e0d	kernel.asm	/^ffff800000103e0d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000103e11	kernel.asm	/^ffff800000103e11:	8b 50 08             	mov    0x8(%rax),%edx$/;"	l
ffff800000103e14	kernel.asm	/^ffff800000103e14:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff800000103e17	kernel.asm	/^ffff800000103e17:	0f af c2             	imul   %edx,%eax$/;"	l
ffff800000103e1a	kernel.asm	/^ffff800000103e1a:	89 45 f8             	mov    %eax,-0x8(%rbp)$/;"	l
ffff800000103e1d	kernel.asm	/^ffff800000103e1d:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)$/;"	l
ffff800000103e21	kernel.asm	/^ffff800000103e21:	75 07                	jne    ffff800000103e2a <idestart+0x71>$/;"	l
ffff800000103e23	kernel.asm	/^ffff800000103e23:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
ffff800000103e28	kernel.asm	/^ffff800000103e28:	eb 05                	jmp    ffff800000103e2f <idestart+0x76>$/;"	l
ffff800000103e2a	kernel.asm	/^ffff800000103e2a:	b8 c4 00 00 00       	mov    $0xc4,%eax$/;"	l
ffff800000103e2f	kernel.asm	/^ffff800000103e2f:	89 45 f4             	mov    %eax,-0xc(%rbp)$/;"	l
ffff800000103e32	kernel.asm	/^ffff800000103e32:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)$/;"	l
ffff800000103e36	kernel.asm	/^ffff800000103e36:	75 07                	jne    ffff800000103e3f <idestart+0x86>$/;"	l
ffff800000103e38	kernel.asm	/^ffff800000103e38:	b8 30 00 00 00       	mov    $0x30,%eax$/;"	l
ffff800000103e3d	kernel.asm	/^ffff800000103e3d:	eb 05                	jmp    ffff800000103e44 <idestart+0x8b>$/;"	l
ffff800000103e3f	kernel.asm	/^ffff800000103e3f:	b8 c5 00 00 00       	mov    $0xc5,%eax$/;"	l
ffff800000103e44	kernel.asm	/^ffff800000103e44:	89 45 f0             	mov    %eax,-0x10(%rbp)$/;"	l
ffff800000103e47	kernel.asm	/^ffff800000103e47:	83 7d fc 07          	cmpl   $0x7,-0x4(%rbp)$/;"	l
ffff800000103e4b	kernel.asm	/^ffff800000103e4b:	7e 16                	jle    ffff800000103e63 <idestart+0xaa>$/;"	l
ffff800000103e4d	kernel.asm	/^ffff800000103e4d:	48 bf 0e d6 10 00 00 	movabs $0xffff80000010d60e,%rdi$/;"	l
ffff800000103e54	kernel.asm	/^ffff800000103e54:	80 ff ff $/;"	l
ffff800000103e57	kernel.asm	/^ffff800000103e57:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff800000103e5e	kernel.asm	/^ffff800000103e5e:	80 ff ff $/;"	l
ffff800000103e61	kernel.asm	/^ffff800000103e61:	ff d0                	callq  *%rax$/;"	l
ffff800000103e63	kernel.asm	/^ffff800000103e63:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
ffff800000103e68	kernel.asm	/^ffff800000103e68:	48 b8 a4 3c 10 00 00 	movabs $0xffff800000103ca4,%rax$/;"	l
ffff800000103e6f	kernel.asm	/^ffff800000103e6f:	80 ff ff $/;"	l
ffff800000103e72	kernel.asm	/^ffff800000103e72:	ff d0                	callq  *%rax$/;"	l
ffff800000103e74	kernel.asm	/^ffff800000103e74:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffff800000103e79	kernel.asm	/^ffff800000103e79:	bf f6 03 00 00       	mov    $0x3f6,%edi$/;"	l
ffff800000103e7e	kernel.asm	/^ffff800000103e7e:	48 b8 55 3c 10 00 00 	movabs $0xffff800000103c55,%rax$/;"	l
ffff800000103e85	kernel.asm	/^ffff800000103e85:	80 ff ff $/;"	l
ffff800000103e88	kernel.asm	/^ffff800000103e88:	ff d0                	callq  *%rax$/;"	l
ffff800000103e8a	kernel.asm	/^ffff800000103e8a:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff800000103e8d	kernel.asm	/^ffff800000103e8d:	0f b6 c0             	movzbl %al,%eax$/;"	l
ffff800000103e90	kernel.asm	/^ffff800000103e90:	89 c6                	mov    %eax,%esi$/;"	l
ffff800000103e92	kernel.asm	/^ffff800000103e92:	bf f2 01 00 00       	mov    $0x1f2,%edi$/;"	l
ffff800000103e97	kernel.asm	/^ffff800000103e97:	48 b8 55 3c 10 00 00 	movabs $0xffff800000103c55,%rax$/;"	l
ffff800000103e9e	kernel.asm	/^ffff800000103e9e:	80 ff ff $/;"	l
ffff800000103ea1	kernel.asm	/^ffff800000103ea1:	ff d0                	callq  *%rax$/;"	l
ffff800000103ea3	kernel.asm	/^ffff800000103ea3:	8b 45 f8             	mov    -0x8(%rbp),%eax$/;"	l
ffff800000103ea6	kernel.asm	/^ffff800000103ea6:	0f b6 c0             	movzbl %al,%eax$/;"	l
ffff800000103ea9	kernel.asm	/^ffff800000103ea9:	89 c6                	mov    %eax,%esi$/;"	l
ffff800000103eab	kernel.asm	/^ffff800000103eab:	bf f3 01 00 00       	mov    $0x1f3,%edi$/;"	l
ffff800000103eb0	kernel.asm	/^ffff800000103eb0:	48 b8 55 3c 10 00 00 	movabs $0xffff800000103c55,%rax$/;"	l
ffff800000103eb7	kernel.asm	/^ffff800000103eb7:	80 ff ff $/;"	l
ffff800000103eba	kernel.asm	/^ffff800000103eba:	ff d0                	callq  *%rax$/;"	l
ffff800000103ebc	kernel.asm	/^ffff800000103ebc:	8b 45 f8             	mov    -0x8(%rbp),%eax$/;"	l
ffff800000103ebf	kernel.asm	/^ffff800000103ebf:	c1 f8 08             	sar    $0x8,%eax$/;"	l
ffff800000103ec2	kernel.asm	/^ffff800000103ec2:	0f b6 c0             	movzbl %al,%eax$/;"	l
ffff800000103ec5	kernel.asm	/^ffff800000103ec5:	89 c6                	mov    %eax,%esi$/;"	l
ffff800000103ec7	kernel.asm	/^ffff800000103ec7:	bf f4 01 00 00       	mov    $0x1f4,%edi$/;"	l
ffff800000103ecc	kernel.asm	/^ffff800000103ecc:	48 b8 55 3c 10 00 00 	movabs $0xffff800000103c55,%rax$/;"	l
ffff800000103ed3	kernel.asm	/^ffff800000103ed3:	80 ff ff $/;"	l
ffff800000103ed6	kernel.asm	/^ffff800000103ed6:	ff d0                	callq  *%rax$/;"	l
ffff800000103ed8	kernel.asm	/^ffff800000103ed8:	8b 45 f8             	mov    -0x8(%rbp),%eax$/;"	l
ffff800000103edb	kernel.asm	/^ffff800000103edb:	c1 f8 10             	sar    $0x10,%eax$/;"	l
ffff800000103ede	kernel.asm	/^ffff800000103ede:	0f b6 c0             	movzbl %al,%eax$/;"	l
ffff800000103ee1	kernel.asm	/^ffff800000103ee1:	89 c6                	mov    %eax,%esi$/;"	l
ffff800000103ee3	kernel.asm	/^ffff800000103ee3:	bf f5 01 00 00       	mov    $0x1f5,%edi$/;"	l
ffff800000103ee8	kernel.asm	/^ffff800000103ee8:	48 b8 55 3c 10 00 00 	movabs $0xffff800000103c55,%rax$/;"	l
ffff800000103eef	kernel.asm	/^ffff800000103eef:	80 ff ff $/;"	l
ffff800000103ef2	kernel.asm	/^ffff800000103ef2:	ff d0                	callq  *%rax$/;"	l
ffff800000103ef4	kernel.asm	/^ffff800000103ef4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000103ef8	kernel.asm	/^ffff800000103ef8:	8b 40 04             	mov    0x4(%rax),%eax$/;"	l
ffff800000103efb	kernel.asm	/^ffff800000103efb:	83 e0 01             	and    $0x1,%eax$/;"	l
ffff800000103efe	kernel.asm	/^ffff800000103efe:	c1 e0 04             	shl    $0x4,%eax$/;"	l
ffff800000103f01	kernel.asm	/^ffff800000103f01:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000103f03	kernel.asm	/^ffff800000103f03:	8b 45 f8             	mov    -0x8(%rbp),%eax$/;"	l
ffff800000103f06	kernel.asm	/^ffff800000103f06:	c1 f8 18             	sar    $0x18,%eax$/;"	l
ffff800000103f09	kernel.asm	/^ffff800000103f09:	83 e0 0f             	and    $0xf,%eax$/;"	l
ffff800000103f0c	kernel.asm	/^ffff800000103f0c:	09 d0                	or     %edx,%eax$/;"	l
ffff800000103f0e	kernel.asm	/^ffff800000103f0e:	83 c8 e0             	or     $0xffffffe0,%eax$/;"	l
ffff800000103f11	kernel.asm	/^ffff800000103f11:	0f b6 c0             	movzbl %al,%eax$/;"	l
ffff800000103f14	kernel.asm	/^ffff800000103f14:	89 c6                	mov    %eax,%esi$/;"	l
ffff800000103f16	kernel.asm	/^ffff800000103f16:	bf f6 01 00 00       	mov    $0x1f6,%edi$/;"	l
ffff800000103f1b	kernel.asm	/^ffff800000103f1b:	48 b8 55 3c 10 00 00 	movabs $0xffff800000103c55,%rax$/;"	l
ffff800000103f22	kernel.asm	/^ffff800000103f22:	80 ff ff $/;"	l
ffff800000103f25	kernel.asm	/^ffff800000103f25:	ff d0                	callq  *%rax$/;"	l
ffff800000103f27	kernel.asm	/^ffff800000103f27:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000103f2b	kernel.asm	/^ffff800000103f2b:	8b 00                	mov    (%rax),%eax$/;"	l
ffff800000103f2d	kernel.asm	/^ffff800000103f2d:	83 e0 04             	and    $0x4,%eax$/;"	l
ffff800000103f30	kernel.asm	/^ffff800000103f30:	85 c0                	test   %eax,%eax$/;"	l
ffff800000103f32	kernel.asm	/^ffff800000103f32:	74 3e                	je     ffff800000103f72 <idestart+0x1b9>$/;"	l
ffff800000103f34	kernel.asm	/^ffff800000103f34:	8b 45 f0             	mov    -0x10(%rbp),%eax$/;"	l
ffff800000103f37	kernel.asm	/^ffff800000103f37:	0f b6 c0             	movzbl %al,%eax$/;"	l
ffff800000103f3a	kernel.asm	/^ffff800000103f3a:	89 c6                	mov    %eax,%esi$/;"	l
ffff800000103f3c	kernel.asm	/^ffff800000103f3c:	bf f7 01 00 00       	mov    $0x1f7,%edi$/;"	l
ffff800000103f41	kernel.asm	/^ffff800000103f41:	48 b8 55 3c 10 00 00 	movabs $0xffff800000103c55,%rax$/;"	l
ffff800000103f48	kernel.asm	/^ffff800000103f48:	80 ff ff $/;"	l
ffff800000103f4b	kernel.asm	/^ffff800000103f4b:	ff d0                	callq  *%rax$/;"	l
ffff800000103f4d	kernel.asm	/^ffff800000103f4d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000103f51	kernel.asm	/^ffff800000103f51:	48 05 b0 00 00 00    	add    $0xb0,%rax$/;"	l
ffff800000103f57	kernel.asm	/^ffff800000103f57:	ba 80 00 00 00       	mov    $0x80,%edx$/;"	l
ffff800000103f5c	kernel.asm	/^ffff800000103f5c:	48 89 c6             	mov    %rax,%rsi$/;"	l
ffff800000103f5f	kernel.asm	/^ffff800000103f5f:	bf f0 01 00 00       	mov    $0x1f0,%edi$/;"	l
ffff800000103f64	kernel.asm	/^ffff800000103f64:	48 b8 74 3c 10 00 00 	movabs $0xffff800000103c74,%rax$/;"	l
ffff800000103f6b	kernel.asm	/^ffff800000103f6b:	80 ff ff $/;"	l
ffff800000103f6e	kernel.asm	/^ffff800000103f6e:	ff d0                	callq  *%rax$/;"	l
ffff800000103f70	kernel.asm	/^ffff800000103f70:	eb 19                	jmp    ffff800000103f8b <idestart+0x1d2>$/;"	l
ffff800000103f72	kernel.asm	/^ffff800000103f72:	8b 45 f4             	mov    -0xc(%rbp),%eax$/;"	l
ffff800000103f75	kernel.asm	/^ffff800000103f75:	0f b6 c0             	movzbl %al,%eax$/;"	l
ffff800000103f78	kernel.asm	/^ffff800000103f78:	89 c6                	mov    %eax,%esi$/;"	l
ffff800000103f7a	kernel.asm	/^ffff800000103f7a:	bf f7 01 00 00       	mov    $0x1f7,%edi$/;"	l
ffff800000103f7f	kernel.asm	/^ffff800000103f7f:	48 b8 55 3c 10 00 00 	movabs $0xffff800000103c55,%rax$/;"	l
ffff800000103f86	kernel.asm	/^ffff800000103f86:	80 ff ff $/;"	l
ffff800000103f89	kernel.asm	/^ffff800000103f89:	ff d0                	callq  *%rax$/;"	l
ffff800000103f8b	kernel.asm	/^ffff800000103f8b:	90                   	nop$/;"	l
ffff800000103f8c	kernel.asm	/^ffff800000103f8c:	c9                   	leaveq $/;"	l
ffff800000103f8d	kernel.asm	/^ffff800000103f8d:	c3                   	retq   $/;"	l
ffff800000103f8e	kernel.asm	/^ffff800000103f8e <ideintr>:$/;"	l
ffff800000103f8e	kernel.asm	/^ffff800000103f8e:	55                   	push   %rbp$/;"	l
ffff800000103f8f	kernel.asm	/^ffff800000103f8f:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000103f92	kernel.asm	/^ffff800000103f92:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff800000103f96	kernel.asm	/^ffff800000103f96:	48 bf 00 b1 11 00 00 	movabs $0xffff80000011b100,%rdi$/;"	l
ffff800000103f9d	kernel.asm	/^ffff800000103f9d:	80 ff ff $/;"	l
ffff800000103fa0	kernel.asm	/^ffff800000103fa0:	48 b8 d6 77 10 00 00 	movabs $0xffff8000001077d6,%rax$/;"	l
ffff800000103fa7	kernel.asm	/^ffff800000103fa7:	80 ff ff $/;"	l
ffff800000103faa	kernel.asm	/^ffff800000103faa:	ff d0                	callq  *%rax$/;"	l
ffff800000103fac	kernel.asm	/^ffff800000103fac:	48 b8 68 b1 11 00 00 	movabs $0xffff80000011b168,%rax$/;"	l
ffff800000103fb3	kernel.asm	/^ffff800000103fb3:	80 ff ff $/;"	l
ffff800000103fb6	kernel.asm	/^ffff800000103fb6:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff800000103fb9	kernel.asm	/^ffff800000103fb9:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff800000103fbd	kernel.asm	/^ffff800000103fbd:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)$/;"	l
ffff800000103fc2	kernel.asm	/^ffff800000103fc2:	75 1b                	jne    ffff800000103fdf <ideintr+0x51>$/;"	l
ffff800000103fc4	kernel.asm	/^ffff800000103fc4:	48 bf 00 b1 11 00 00 	movabs $0xffff80000011b100,%rdi$/;"	l
ffff800000103fcb	kernel.asm	/^ffff800000103fcb:	80 ff ff $/;"	l
ffff800000103fce	kernel.asm	/^ffff800000103fce:	48 b8 6f 78 10 00 00 	movabs $0xffff80000010786f,%rax$/;"	l
ffff800000103fd5	kernel.asm	/^ffff800000103fd5:	80 ff ff $/;"	l
ffff800000103fd8	kernel.asm	/^ffff800000103fd8:	ff d0                	callq  *%rax$/;"	l
ffff800000103fda	kernel.asm	/^ffff800000103fda:	e9 d6 00 00 00       	jmpq   ffff8000001040b5 <ideintr+0x127>$/;"	l
ffff800000103fdf	kernel.asm	/^ffff800000103fdf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000103fe3	kernel.asm	/^ffff800000103fe3:	48 8b 90 a8 00 00 00 	mov    0xa8(%rax),%rdx$/;"	l
ffff800000103fea	kernel.asm	/^ffff800000103fea:	48 b8 68 b1 11 00 00 	movabs $0xffff80000011b168,%rax$/;"	l
ffff800000103ff1	kernel.asm	/^ffff800000103ff1:	80 ff ff $/;"	l
ffff800000103ff4	kernel.asm	/^ffff800000103ff4:	48 89 10             	mov    %rdx,(%rax)$/;"	l
ffff800000103ff7	kernel.asm	/^ffff800000103ff7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000103ffb	kernel.asm	/^ffff800000103ffb:	8b 00                	mov    (%rax),%eax$/;"	l
ffff800000103ffd	kernel.asm	/^ffff800000103ffd:	83 e0 04             	and    $0x4,%eax$/;"	l
ffff800000104000	kernel.asm	/^ffff800000104000:	85 c0                	test   %eax,%eax$/;"	l
ffff800000104002	kernel.asm	/^ffff800000104002:	75 38                	jne    ffff80000010403c <ideintr+0xae>$/;"	l
ffff800000104004	kernel.asm	/^ffff800000104004:	bf 01 00 00 00       	mov    $0x1,%edi$/;"	l
ffff800000104009	kernel.asm	/^ffff800000104009:	48 b8 a4 3c 10 00 00 	movabs $0xffff800000103ca4,%rax$/;"	l
ffff800000104010	kernel.asm	/^ffff800000104010:	80 ff ff $/;"	l
ffff800000104013	kernel.asm	/^ffff800000104013:	ff d0                	callq  *%rax$/;"	l
ffff800000104015	kernel.asm	/^ffff800000104015:	85 c0                	test   %eax,%eax$/;"	l
ffff800000104017	kernel.asm	/^ffff800000104017:	78 23                	js     ffff80000010403c <ideintr+0xae>$/;"	l
ffff800000104019	kernel.asm	/^ffff800000104019:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010401d	kernel.asm	/^ffff80000010401d:	48 05 b0 00 00 00    	add    $0xb0,%rax$/;"	l
ffff800000104023	kernel.asm	/^ffff800000104023:	ba 80 00 00 00       	mov    $0x80,%edx$/;"	l
ffff800000104028	kernel.asm	/^ffff800000104028:	48 89 c6             	mov    %rax,%rsi$/;"	l
ffff80000010402b	kernel.asm	/^ffff80000010402b:	bf f0 01 00 00       	mov    $0x1f0,%edi$/;"	l
ffff800000104030	kernel.asm	/^ffff800000104030:	48 b8 1f 3c 10 00 00 	movabs $0xffff800000103c1f,%rax$/;"	l
ffff800000104037	kernel.asm	/^ffff800000104037:	80 ff ff $/;"	l
ffff80000010403a	kernel.asm	/^ffff80000010403a:	ff d0                	callq  *%rax$/;"	l
ffff80000010403c	kernel.asm	/^ffff80000010403c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000104040	kernel.asm	/^ffff800000104040:	8b 00                	mov    (%rax),%eax$/;"	l
ffff800000104042	kernel.asm	/^ffff800000104042:	83 c8 02             	or     $0x2,%eax$/;"	l
ffff800000104045	kernel.asm	/^ffff800000104045:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000104047	kernel.asm	/^ffff800000104047:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010404b	kernel.asm	/^ffff80000010404b:	89 10                	mov    %edx,(%rax)$/;"	l
ffff80000010404d	kernel.asm	/^ffff80000010404d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000104051	kernel.asm	/^ffff800000104051:	8b 00                	mov    (%rax),%eax$/;"	l
ffff800000104053	kernel.asm	/^ffff800000104053:	83 e0 fb             	and    $0xfffffffb,%eax$/;"	l
ffff800000104056	kernel.asm	/^ffff800000104056:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000104058	kernel.asm	/^ffff800000104058:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010405c	kernel.asm	/^ffff80000010405c:	89 10                	mov    %edx,(%rax)$/;"	l
ffff80000010405e	kernel.asm	/^ffff80000010405e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000104062	kernel.asm	/^ffff800000104062:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000104065	kernel.asm	/^ffff800000104065:	48 b8 34 73 10 00 00 	movabs $0xffff800000107334,%rax$/;"	l
ffff80000010406c	kernel.asm	/^ffff80000010406c:	80 ff ff $/;"	l
ffff80000010406f	kernel.asm	/^ffff80000010406f:	ff d0                	callq  *%rax$/;"	l
ffff800000104071	kernel.asm	/^ffff800000104071:	48 b8 68 b1 11 00 00 	movabs $0xffff80000011b168,%rax$/;"	l
ffff800000104078	kernel.asm	/^ffff800000104078:	80 ff ff $/;"	l
ffff80000010407b	kernel.asm	/^ffff80000010407b:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff80000010407e	kernel.asm	/^ffff80000010407e:	48 85 c0             	test   %rax,%rax$/;"	l
ffff800000104081	kernel.asm	/^ffff800000104081:	74 1c                	je     ffff80000010409f <ideintr+0x111>$/;"	l
ffff800000104083	kernel.asm	/^ffff800000104083:	48 b8 68 b1 11 00 00 	movabs $0xffff80000011b168,%rax$/;"	l
ffff80000010408a	kernel.asm	/^ffff80000010408a:	80 ff ff $/;"	l
ffff80000010408d	kernel.asm	/^ffff80000010408d:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff800000104090	kernel.asm	/^ffff800000104090:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000104093	kernel.asm	/^ffff800000104093:	48 b8 b9 3d 10 00 00 	movabs $0xffff800000103db9,%rax$/;"	l
ffff80000010409a	kernel.asm	/^ffff80000010409a:	80 ff ff $/;"	l
ffff80000010409d	kernel.asm	/^ffff80000010409d:	ff d0                	callq  *%rax$/;"	l
ffff80000010409f	kernel.asm	/^ffff80000010409f:	48 bf 00 b1 11 00 00 	movabs $0xffff80000011b100,%rdi$/;"	l
ffff8000001040a6	kernel.asm	/^ffff8000001040a6:	80 ff ff $/;"	l
ffff8000001040a9	kernel.asm	/^ffff8000001040a9:	48 b8 6f 78 10 00 00 	movabs $0xffff80000010786f,%rax$/;"	l
ffff8000001040b0	kernel.asm	/^ffff8000001040b0:	80 ff ff $/;"	l
ffff8000001040b3	kernel.asm	/^ffff8000001040b3:	ff d0                	callq  *%rax$/;"	l
ffff8000001040b5	kernel.asm	/^ffff8000001040b5:	c9                   	leaveq $/;"	l
ffff8000001040b6	kernel.asm	/^ffff8000001040b6:	c3                   	retq   $/;"	l
ffff8000001040b7	kernel.asm	/^ffff8000001040b7 <iderw>:$/;"	l
ffff8000001040b7	kernel.asm	/^ffff8000001040b7:	55                   	push   %rbp$/;"	l
ffff8000001040b8	kernel.asm	/^ffff8000001040b8:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff8000001040bb	kernel.asm	/^ffff8000001040bb:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ffff8000001040bf	kernel.asm	/^ffff8000001040bf:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
ffff8000001040c3	kernel.asm	/^ffff8000001040c3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff8000001040c7	kernel.asm	/^ffff8000001040c7:	48 83 c0 10          	add    $0x10,%rax$/;"	l
ffff8000001040cb	kernel.asm	/^ffff8000001040cb:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001040ce	kernel.asm	/^ffff8000001040ce:	48 b8 0e 77 10 00 00 	movabs $0xffff80000010770e,%rax$/;"	l
ffff8000001040d5	kernel.asm	/^ffff8000001040d5:	80 ff ff $/;"	l
ffff8000001040d8	kernel.asm	/^ffff8000001040d8:	ff d0                	callq  *%rax$/;"	l
ffff8000001040da	kernel.asm	/^ffff8000001040da:	85 c0                	test   %eax,%eax$/;"	l
ffff8000001040dc	kernel.asm	/^ffff8000001040dc:	75 16                	jne    ffff8000001040f4 <iderw+0x3d>$/;"	l
ffff8000001040de	kernel.asm	/^ffff8000001040de:	48 bf 29 d6 10 00 00 	movabs $0xffff80000010d629,%rdi$/;"	l
ffff8000001040e5	kernel.asm	/^ffff8000001040e5:	80 ff ff $/;"	l
ffff8000001040e8	kernel.asm	/^ffff8000001040e8:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff8000001040ef	kernel.asm	/^ffff8000001040ef:	80 ff ff $/;"	l
ffff8000001040f2	kernel.asm	/^ffff8000001040f2:	ff d0                	callq  *%rax$/;"	l
ffff8000001040f4	kernel.asm	/^ffff8000001040f4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff8000001040f8	kernel.asm	/^ffff8000001040f8:	8b 00                	mov    (%rax),%eax$/;"	l
ffff8000001040fa	kernel.asm	/^ffff8000001040fa:	83 e0 06             	and    $0x6,%eax$/;"	l
ffff8000001040fd	kernel.asm	/^ffff8000001040fd:	83 f8 02             	cmp    $0x2,%eax$/;"	l
ffff800000104100	kernel.asm	/^ffff800000104100:	75 16                	jne    ffff800000104118 <iderw+0x61>$/;"	l
ffff800000104102	kernel.asm	/^ffff800000104102:	48 bf 3f d6 10 00 00 	movabs $0xffff80000010d63f,%rdi$/;"	l
ffff800000104109	kernel.asm	/^ffff800000104109:	80 ff ff $/;"	l
ffff80000010410c	kernel.asm	/^ffff80000010410c:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff800000104113	kernel.asm	/^ffff800000104113:	80 ff ff $/;"	l
ffff800000104116	kernel.asm	/^ffff800000104116:	ff d0                	callq  *%rax$/;"	l
ffff800000104118	kernel.asm	/^ffff800000104118:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010411c	kernel.asm	/^ffff80000010411c:	8b 40 04             	mov    0x4(%rax),%eax$/;"	l
ffff80000010411f	kernel.asm	/^ffff80000010411f:	85 c0                	test   %eax,%eax$/;"	l
ffff800000104121	kernel.asm	/^ffff800000104121:	74 26                	je     ffff800000104149 <iderw+0x92>$/;"	l
ffff800000104123	kernel.asm	/^ffff800000104123:	48 b8 70 b1 11 00 00 	movabs $0xffff80000011b170,%rax$/;"	l
ffff80000010412a	kernel.asm	/^ffff80000010412a:	80 ff ff $/;"	l
ffff80000010412d	kernel.asm	/^ffff80000010412d:	8b 00                	mov    (%rax),%eax$/;"	l
ffff80000010412f	kernel.asm	/^ffff80000010412f:	85 c0                	test   %eax,%eax$/;"	l
ffff800000104131	kernel.asm	/^ffff800000104131:	75 16                	jne    ffff800000104149 <iderw+0x92>$/;"	l
ffff800000104133	kernel.asm	/^ffff800000104133:	48 bf 54 d6 10 00 00 	movabs $0xffff80000010d654,%rdi$/;"	l
ffff80000010413a	kernel.asm	/^ffff80000010413a:	80 ff ff $/;"	l
ffff80000010413d	kernel.asm	/^ffff80000010413d:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff800000104144	kernel.asm	/^ffff800000104144:	80 ff ff $/;"	l
ffff800000104147	kernel.asm	/^ffff800000104147:	ff d0                	callq  *%rax$/;"	l
ffff800000104149	kernel.asm	/^ffff800000104149:	48 bf 00 b1 11 00 00 	movabs $0xffff80000011b100,%rdi$/;"	l
ffff800000104150	kernel.asm	/^ffff800000104150:	80 ff ff $/;"	l
ffff800000104153	kernel.asm	/^ffff800000104153:	48 b8 d6 77 10 00 00 	movabs $0xffff8000001077d6,%rax$/;"	l
ffff80000010415a	kernel.asm	/^ffff80000010415a:	80 ff ff $/;"	l
ffff80000010415d	kernel.asm	/^ffff80000010415d:	ff d0                	callq  *%rax$/;"	l
ffff80000010415f	kernel.asm	/^ffff80000010415f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000104163	kernel.asm	/^ffff800000104163:	48 c7 80 a8 00 00 00 	movq   $0x0,0xa8(%rax)$/;"	l
ffff80000010416a	kernel.asm	/^ffff80000010416a:	00 00 00 00 $/;"	l
ffff80000010416e	kernel.asm	/^ffff80000010416e:	48 b8 68 b1 11 00 00 	movabs $0xffff80000011b168,%rax$/;"	l
ffff800000104175	kernel.asm	/^ffff800000104175:	80 ff ff $/;"	l
ffff800000104178	kernel.asm	/^ffff800000104178:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff80000010417c	kernel.asm	/^ffff80000010417c:	eb 11                	jmp    ffff80000010418f <iderw+0xd8>$/;"	l
ffff80000010417e	kernel.asm	/^ffff80000010417e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000104182	kernel.asm	/^ffff800000104182:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff800000104185	kernel.asm	/^ffff800000104185:	48 05 a8 00 00 00    	add    $0xa8,%rax$/;"	l
ffff80000010418b	kernel.asm	/^ffff80000010418b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff80000010418f	kernel.asm	/^ffff80000010418f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000104193	kernel.asm	/^ffff800000104193:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff800000104196	kernel.asm	/^ffff800000104196:	48 85 c0             	test   %rax,%rax$/;"	l
ffff800000104199	kernel.asm	/^ffff800000104199:	75 e3                	jne    ffff80000010417e <iderw+0xc7>$/;"	l
ffff80000010419b	kernel.asm	/^ffff80000010419b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010419f	kernel.asm	/^ffff80000010419f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx$/;"	l
ffff8000001041a3	kernel.asm	/^ffff8000001041a3:	48 89 10             	mov    %rdx,(%rax)$/;"	l
ffff8000001041a6	kernel.asm	/^ffff8000001041a6:	48 b8 68 b1 11 00 00 	movabs $0xffff80000011b168,%rax$/;"	l
ffff8000001041ad	kernel.asm	/^ffff8000001041ad:	80 ff ff $/;"	l
ffff8000001041b0	kernel.asm	/^ffff8000001041b0:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff8000001041b3	kernel.asm	/^ffff8000001041b3:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax$/;"	l
ffff8000001041b7	kernel.asm	/^ffff8000001041b7:	75 32                	jne    ffff8000001041eb <iderw+0x134>$/;"	l
ffff8000001041b9	kernel.asm	/^ffff8000001041b9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff8000001041bd	kernel.asm	/^ffff8000001041bd:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001041c0	kernel.asm	/^ffff8000001041c0:	48 b8 b9 3d 10 00 00 	movabs $0xffff800000103db9,%rax$/;"	l
ffff8000001041c7	kernel.asm	/^ffff8000001041c7:	80 ff ff $/;"	l
ffff8000001041ca	kernel.asm	/^ffff8000001041ca:	ff d0                	callq  *%rax$/;"	l
ffff8000001041cc	kernel.asm	/^ffff8000001041cc:	eb 1d                	jmp    ffff8000001041eb <iderw+0x134>$/;"	l
ffff8000001041ce	kernel.asm	/^ffff8000001041ce:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff8000001041d2	kernel.asm	/^ffff8000001041d2:	48 be 00 b1 11 00 00 	movabs $0xffff80000011b100,%rsi$/;"	l
ffff8000001041d9	kernel.asm	/^ffff8000001041d9:	80 ff ff $/;"	l
ffff8000001041dc	kernel.asm	/^ffff8000001041dc:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001041df	kernel.asm	/^ffff8000001041df:	48 b8 cc 71 10 00 00 	movabs $0xffff8000001071cc,%rax$/;"	l
ffff8000001041e6	kernel.asm	/^ffff8000001041e6:	80 ff ff $/;"	l
ffff8000001041e9	kernel.asm	/^ffff8000001041e9:	ff d0                	callq  *%rax$/;"	l
ffff8000001041eb	kernel.asm	/^ffff8000001041eb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff8000001041ef	kernel.asm	/^ffff8000001041ef:	8b 00                	mov    (%rax),%eax$/;"	l
ffff8000001041f1	kernel.asm	/^ffff8000001041f1:	83 e0 06             	and    $0x6,%eax$/;"	l
ffff8000001041f4	kernel.asm	/^ffff8000001041f4:	83 f8 02             	cmp    $0x2,%eax$/;"	l
ffff8000001041f7	kernel.asm	/^ffff8000001041f7:	75 d5                	jne    ffff8000001041ce <iderw+0x117>$/;"	l
ffff8000001041f9	kernel.asm	/^ffff8000001041f9:	48 bf 00 b1 11 00 00 	movabs $0xffff80000011b100,%rdi$/;"	l
ffff800000104200	kernel.asm	/^ffff800000104200:	80 ff ff $/;"	l
ffff800000104203	kernel.asm	/^ffff800000104203:	48 b8 6f 78 10 00 00 	movabs $0xffff80000010786f,%rax$/;"	l
ffff80000010420a	kernel.asm	/^ffff80000010420a:	80 ff ff $/;"	l
ffff80000010420d	kernel.asm	/^ffff80000010420d:	ff d0                	callq  *%rax$/;"	l
ffff80000010420f	kernel.asm	/^ffff80000010420f:	90                   	nop$/;"	l
ffff800000104210	kernel.asm	/^ffff800000104210:	c9                   	leaveq $/;"	l
ffff800000104211	kernel.asm	/^ffff800000104211:	c3                   	retq   $/;"	l
ffff800000104212	kernel.asm	/^ffff800000104212 <ioapicread>:$/;"	l
ffff800000104212	kernel.asm	/^ffff800000104212:	55                   	push   %rbp$/;"	l
ffff800000104213	kernel.asm	/^ffff800000104213:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000104216	kernel.asm	/^ffff800000104216:	48 83 ec 08          	sub    $0x8,%rsp$/;"	l
ffff80000010421a	kernel.asm	/^ffff80000010421a:	89 7d fc             	mov    %edi,-0x4(%rbp)$/;"	l
ffff80000010421d	kernel.asm	/^ffff80000010421d:	48 b8 78 b1 11 00 00 	movabs $0xffff80000011b178,%rax$/;"	l
ffff800000104224	kernel.asm	/^ffff800000104224:	80 ff ff $/;"	l
ffff800000104227	kernel.asm	/^ffff800000104227:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff80000010422a	kernel.asm	/^ffff80000010422a:	8b 55 fc             	mov    -0x4(%rbp),%edx$/;"	l
ffff80000010422d	kernel.asm	/^ffff80000010422d:	89 10                	mov    %edx,(%rax)$/;"	l
ffff80000010422f	kernel.asm	/^ffff80000010422f:	48 b8 78 b1 11 00 00 	movabs $0xffff80000011b178,%rax$/;"	l
ffff800000104236	kernel.asm	/^ffff800000104236:	80 ff ff $/;"	l
ffff800000104239	kernel.asm	/^ffff800000104239:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff80000010423c	kernel.asm	/^ffff80000010423c:	8b 40 10             	mov    0x10(%rax),%eax$/;"	l
ffff80000010423f	kernel.asm	/^ffff80000010423f:	c9                   	leaveq $/;"	l
ffff800000104240	kernel.asm	/^ffff800000104240:	c3                   	retq   $/;"	l
ffff800000104241	kernel.asm	/^ffff800000104241 <ioapicwrite>:$/;"	l
ffff800000104241	kernel.asm	/^ffff800000104241:	55                   	push   %rbp$/;"	l
ffff800000104242	kernel.asm	/^ffff800000104242:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000104245	kernel.asm	/^ffff800000104245:	48 83 ec 08          	sub    $0x8,%rsp$/;"	l
ffff800000104249	kernel.asm	/^ffff800000104249:	89 7d fc             	mov    %edi,-0x4(%rbp)$/;"	l
ffff80000010424c	kernel.asm	/^ffff80000010424c:	89 75 f8             	mov    %esi,-0x8(%rbp)$/;"	l
ffff80000010424f	kernel.asm	/^ffff80000010424f:	48 b8 78 b1 11 00 00 	movabs $0xffff80000011b178,%rax$/;"	l
ffff800000104256	kernel.asm	/^ffff800000104256:	80 ff ff $/;"	l
ffff800000104259	kernel.asm	/^ffff800000104259:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff80000010425c	kernel.asm	/^ffff80000010425c:	8b 55 fc             	mov    -0x4(%rbp),%edx$/;"	l
ffff80000010425f	kernel.asm	/^ffff80000010425f:	89 10                	mov    %edx,(%rax)$/;"	l
ffff800000104261	kernel.asm	/^ffff800000104261:	48 b8 78 b1 11 00 00 	movabs $0xffff80000011b178,%rax$/;"	l
ffff800000104268	kernel.asm	/^ffff800000104268:	80 ff ff $/;"	l
ffff80000010426b	kernel.asm	/^ffff80000010426b:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff80000010426e	kernel.asm	/^ffff80000010426e:	8b 55 f8             	mov    -0x8(%rbp),%edx$/;"	l
ffff800000104271	kernel.asm	/^ffff800000104271:	89 50 10             	mov    %edx,0x10(%rax)$/;"	l
ffff800000104274	kernel.asm	/^ffff800000104274:	90                   	nop$/;"	l
ffff800000104275	kernel.asm	/^ffff800000104275:	c9                   	leaveq $/;"	l
ffff800000104276	kernel.asm	/^ffff800000104276:	c3                   	retq   $/;"	l
ffff800000104277	kernel.asm	/^ffff800000104277 <ioapicinit>:$/;"	l
ffff800000104277	kernel.asm	/^ffff800000104277:	55                   	push   %rbp$/;"	l
ffff800000104278	kernel.asm	/^ffff800000104278:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010427b	kernel.asm	/^ffff80000010427b:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff80000010427f	kernel.asm	/^ffff80000010427f:	48 b8 78 b1 11 00 00 	movabs $0xffff80000011b178,%rax$/;"	l
ffff800000104286	kernel.asm	/^ffff800000104286:	80 ff ff $/;"	l
ffff800000104289	kernel.asm	/^ffff800000104289:	48 b9 00 00 c0 fe 00 	movabs $0xffff8000fec00000,%rcx$/;"	l
ffff800000104290	kernel.asm	/^ffff800000104290:	80 ff ff $/;"	l
ffff800000104293	kernel.asm	/^ffff800000104293:	48 89 08             	mov    %rcx,(%rax)$/;"	l
ffff800000104296	kernel.asm	/^ffff800000104296:	bf 01 00 00 00       	mov    $0x1,%edi$/;"	l
ffff80000010429b	kernel.asm	/^ffff80000010429b:	48 b8 12 42 10 00 00 	movabs $0xffff800000104212,%rax$/;"	l
ffff8000001042a2	kernel.asm	/^ffff8000001042a2:	80 ff ff $/;"	l
ffff8000001042a5	kernel.asm	/^ffff8000001042a5:	ff d0                	callq  *%rax$/;"	l
ffff8000001042a7	kernel.asm	/^ffff8000001042a7:	c1 e8 10             	shr    $0x10,%eax$/;"	l
ffff8000001042aa	kernel.asm	/^ffff8000001042aa:	25 ff 00 00 00       	and    $0xff,%eax$/;"	l
ffff8000001042af	kernel.asm	/^ffff8000001042af:	89 45 f8             	mov    %eax,-0x8(%rbp)$/;"	l
ffff8000001042b2	kernel.asm	/^ffff8000001042b2:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
ffff8000001042b7	kernel.asm	/^ffff8000001042b7:	48 b8 12 42 10 00 00 	movabs $0xffff800000104212,%rax$/;"	l
ffff8000001042be	kernel.asm	/^ffff8000001042be:	80 ff ff $/;"	l
ffff8000001042c1	kernel.asm	/^ffff8000001042c1:	ff d0                	callq  *%rax$/;"	l
ffff8000001042c3	kernel.asm	/^ffff8000001042c3:	c1 e8 18             	shr    $0x18,%eax$/;"	l
ffff8000001042c6	kernel.asm	/^ffff8000001042c6:	89 45 f4             	mov    %eax,-0xc(%rbp)$/;"	l
ffff8000001042c9	kernel.asm	/^ffff8000001042c9:	48 b8 e4 ba 11 00 00 	movabs $0xffff80000011bae4,%rax$/;"	l
ffff8000001042d0	kernel.asm	/^ffff8000001042d0:	80 ff ff $/;"	l
ffff8000001042d3	kernel.asm	/^ffff8000001042d3:	0f b6 00             	movzbl (%rax),%eax$/;"	l
ffff8000001042d6	kernel.asm	/^ffff8000001042d6:	0f b6 c0             	movzbl %al,%eax$/;"	l
ffff8000001042d9	kernel.asm	/^ffff8000001042d9:	3b 45 f4             	cmp    -0xc(%rbp),%eax$/;"	l
ffff8000001042dc	kernel.asm	/^ffff8000001042dc:	74 1b                	je     ffff8000001042f9 <ioapicinit+0x82>$/;"	l
ffff8000001042de	kernel.asm	/^ffff8000001042de:	48 bf 78 d6 10 00 00 	movabs $0xffff80000010d678,%rdi$/;"	l
ffff8000001042e5	kernel.asm	/^ffff8000001042e5:	80 ff ff $/;"	l
ffff8000001042e8	kernel.asm	/^ffff8000001042e8:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff8000001042ed	kernel.asm	/^ffff8000001042ed:	48 ba ac 07 10 00 00 	movabs $0xffff8000001007ac,%rdx$/;"	l
ffff8000001042f4	kernel.asm	/^ffff8000001042f4:	80 ff ff $/;"	l
ffff8000001042f7	kernel.asm	/^ffff8000001042f7:	ff d2                	callq  *%rdx$/;"	l
ffff8000001042f9	kernel.asm	/^ffff8000001042f9:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)$/;"	l
ffff800000104300	kernel.asm	/^ffff800000104300:	eb 47                	jmp    ffff800000104349 <ioapicinit+0xd2>$/;"	l
ffff800000104302	kernel.asm	/^ffff800000104302:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff800000104305	kernel.asm	/^ffff800000104305:	83 c0 20             	add    $0x20,%eax$/;"	l
ffff800000104308	kernel.asm	/^ffff800000104308:	0d 00 00 01 00       	or     $0x10000,%eax$/;"	l
ffff80000010430d	kernel.asm	/^ffff80000010430d:	89 c2                	mov    %eax,%edx$/;"	l
ffff80000010430f	kernel.asm	/^ffff80000010430f:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff800000104312	kernel.asm	/^ffff800000104312:	83 c0 08             	add    $0x8,%eax$/;"	l
ffff800000104315	kernel.asm	/^ffff800000104315:	01 c0                	add    %eax,%eax$/;"	l
ffff800000104317	kernel.asm	/^ffff800000104317:	89 d6                	mov    %edx,%esi$/;"	l
ffff800000104319	kernel.asm	/^ffff800000104319:	89 c7                	mov    %eax,%edi$/;"	l
ffff80000010431b	kernel.asm	/^ffff80000010431b:	48 b8 41 42 10 00 00 	movabs $0xffff800000104241,%rax$/;"	l
ffff800000104322	kernel.asm	/^ffff800000104322:	80 ff ff $/;"	l
ffff800000104325	kernel.asm	/^ffff800000104325:	ff d0                	callq  *%rax$/;"	l
ffff800000104327	kernel.asm	/^ffff800000104327:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff80000010432a	kernel.asm	/^ffff80000010432a:	83 c0 08             	add    $0x8,%eax$/;"	l
ffff80000010432d	kernel.asm	/^ffff80000010432d:	01 c0                	add    %eax,%eax$/;"	l
ffff80000010432f	kernel.asm	/^ffff80000010432f:	83 c0 01             	add    $0x1,%eax$/;"	l
ffff800000104332	kernel.asm	/^ffff800000104332:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffff800000104337	kernel.asm	/^ffff800000104337:	89 c7                	mov    %eax,%edi$/;"	l
ffff800000104339	kernel.asm	/^ffff800000104339:	48 b8 41 42 10 00 00 	movabs $0xffff800000104241,%rax$/;"	l
ffff800000104340	kernel.asm	/^ffff800000104340:	80 ff ff $/;"	l
ffff800000104343	kernel.asm	/^ffff800000104343:	ff d0                	callq  *%rax$/;"	l
ffff800000104345	kernel.asm	/^ffff800000104345:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)$/;"	l
ffff800000104349	kernel.asm	/^ffff800000104349:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff80000010434c	kernel.asm	/^ffff80000010434c:	3b 45 f8             	cmp    -0x8(%rbp),%eax$/;"	l
ffff80000010434f	kernel.asm	/^ffff80000010434f:	7e b1                	jle    ffff800000104302 <ioapicinit+0x8b>$/;"	l
ffff800000104351	kernel.asm	/^ffff800000104351:	90                   	nop$/;"	l
ffff800000104352	kernel.asm	/^ffff800000104352:	c9                   	leaveq $/;"	l
ffff800000104353	kernel.asm	/^ffff800000104353:	c3                   	retq   $/;"	l
ffff800000104354	kernel.asm	/^ffff800000104354 <ioapicenable>:$/;"	l
ffff800000104354	kernel.asm	/^ffff800000104354:	55                   	push   %rbp$/;"	l
ffff800000104355	kernel.asm	/^ffff800000104355:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000104358	kernel.asm	/^ffff800000104358:	48 83 ec 08          	sub    $0x8,%rsp$/;"	l
ffff80000010435c	kernel.asm	/^ffff80000010435c:	89 7d fc             	mov    %edi,-0x4(%rbp)$/;"	l
ffff80000010435f	kernel.asm	/^ffff80000010435f:	89 75 f8             	mov    %esi,-0x8(%rbp)$/;"	l
ffff800000104362	kernel.asm	/^ffff800000104362:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff800000104365	kernel.asm	/^ffff800000104365:	83 c0 20             	add    $0x20,%eax$/;"	l
ffff800000104368	kernel.asm	/^ffff800000104368:	89 c2                	mov    %eax,%edx$/;"	l
ffff80000010436a	kernel.asm	/^ffff80000010436a:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff80000010436d	kernel.asm	/^ffff80000010436d:	83 c0 08             	add    $0x8,%eax$/;"	l
ffff800000104370	kernel.asm	/^ffff800000104370:	01 c0                	add    %eax,%eax$/;"	l
ffff800000104372	kernel.asm	/^ffff800000104372:	89 d6                	mov    %edx,%esi$/;"	l
ffff800000104374	kernel.asm	/^ffff800000104374:	89 c7                	mov    %eax,%edi$/;"	l
ffff800000104376	kernel.asm	/^ffff800000104376:	48 b8 41 42 10 00 00 	movabs $0xffff800000104241,%rax$/;"	l
ffff80000010437d	kernel.asm	/^ffff80000010437d:	80 ff ff $/;"	l
ffff800000104380	kernel.asm	/^ffff800000104380:	ff d0                	callq  *%rax$/;"	l
ffff800000104382	kernel.asm	/^ffff800000104382:	8b 45 f8             	mov    -0x8(%rbp),%eax$/;"	l
ffff800000104385	kernel.asm	/^ffff800000104385:	c1 e0 18             	shl    $0x18,%eax$/;"	l
ffff800000104388	kernel.asm	/^ffff800000104388:	89 c2                	mov    %eax,%edx$/;"	l
ffff80000010438a	kernel.asm	/^ffff80000010438a:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff80000010438d	kernel.asm	/^ffff80000010438d:	83 c0 08             	add    $0x8,%eax$/;"	l
ffff800000104390	kernel.asm	/^ffff800000104390:	01 c0                	add    %eax,%eax$/;"	l
ffff800000104392	kernel.asm	/^ffff800000104392:	83 c0 01             	add    $0x1,%eax$/;"	l
ffff800000104395	kernel.asm	/^ffff800000104395:	89 d6                	mov    %edx,%esi$/;"	l
ffff800000104397	kernel.asm	/^ffff800000104397:	89 c7                	mov    %eax,%edi$/;"	l
ffff800000104399	kernel.asm	/^ffff800000104399:	48 b8 41 42 10 00 00 	movabs $0xffff800000104241,%rax$/;"	l
ffff8000001043a0	kernel.asm	/^ffff8000001043a0:	80 ff ff $/;"	l
ffff8000001043a3	kernel.asm	/^ffff8000001043a3:	ff d0                	callq  *%rax$/;"	l
ffff8000001043a5	kernel.asm	/^ffff8000001043a5:	90                   	nop$/;"	l
ffff8000001043a6	kernel.asm	/^ffff8000001043a6:	c9                   	leaveq $/;"	l
ffff8000001043a7	kernel.asm	/^ffff8000001043a7:	c3                   	retq   $/;"	l
ffff8000001043a8	kernel.asm	/^ffff8000001043a8 <kinit1>:$/;"	l
ffff8000001043a8	kernel.asm	/^ffff8000001043a8:	55                   	push   %rbp$/;"	l
ffff8000001043a9	kernel.asm	/^ffff8000001043a9:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff8000001043ac	kernel.asm	/^ffff8000001043ac:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff8000001043b0	kernel.asm	/^ffff8000001043b0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)$/;"	l
ffff8000001043b4	kernel.asm	/^ffff8000001043b4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)$/;"	l
ffff8000001043b8	kernel.asm	/^ffff8000001043b8:	48 be aa d6 10 00 00 	movabs $0xffff80000010d6aa,%rsi$/;"	l
ffff8000001043bf	kernel.asm	/^ffff8000001043bf:	80 ff ff $/;"	l
ffff8000001043c2	kernel.asm	/^ffff8000001043c2:	48 bf 80 b1 11 00 00 	movabs $0xffff80000011b180,%rdi$/;"	l
ffff8000001043c9	kernel.asm	/^ffff8000001043c9:	80 ff ff $/;"	l
ffff8000001043cc	kernel.asm	/^ffff8000001043cc:	48 b8 a1 77 10 00 00 	movabs $0xffff8000001077a1,%rax$/;"	l
ffff8000001043d3	kernel.asm	/^ffff8000001043d3:	80 ff ff $/;"	l
ffff8000001043d6	kernel.asm	/^ffff8000001043d6:	ff d0                	callq  *%rax$/;"	l
ffff8000001043d8	kernel.asm	/^ffff8000001043d8:	48 b8 80 b1 11 00 00 	movabs $0xffff80000011b180,%rax$/;"	l
ffff8000001043df	kernel.asm	/^ffff8000001043df:	80 ff ff $/;"	l
ffff8000001043e2	kernel.asm	/^ffff8000001043e2:	c7 40 68 00 00 00 00 	movl   $0x0,0x68(%rax)$/;"	l
ffff8000001043e9	kernel.asm	/^ffff8000001043e9:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
ffff8000001043ed	kernel.asm	/^ffff8000001043ed:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001043f1	kernel.asm	/^ffff8000001043f1:	48 89 d6             	mov    %rdx,%rsi$/;"	l
ffff8000001043f4	kernel.asm	/^ffff8000001043f4:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001043f7	kernel.asm	/^ffff8000001043f7:	48 b8 87 44 10 00 00 	movabs $0xffff800000104487,%rax$/;"	l
ffff8000001043fe	kernel.asm	/^ffff8000001043fe:	80 ff ff $/;"	l
ffff800000104401	kernel.asm	/^ffff800000104401:	ff d0                	callq  *%rax$/;"	l
ffff800000104403	kernel.asm	/^ffff800000104403:	90                   	nop$/;"	l
ffff800000104404	kernel.asm	/^ffff800000104404:	c9                   	leaveq $/;"	l
ffff800000104405	kernel.asm	/^ffff800000104405:	c3                   	retq   $/;"	l
ffff800000104406	kernel.asm	/^ffff800000104406 <kinit2>:$/;"	l
ffff800000104406	kernel.asm	/^ffff800000104406:	55                   	push   %rbp$/;"	l
ffff800000104407	kernel.asm	/^ffff800000104407:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010440a	kernel.asm	/^ffff80000010440a:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff80000010440e	kernel.asm	/^ffff80000010440e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)$/;"	l
ffff800000104412	kernel.asm	/^ffff800000104412:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)$/;"	l
ffff800000104416	kernel.asm	/^ffff800000104416:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
ffff80000010441a	kernel.asm	/^ffff80000010441a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010441e	kernel.asm	/^ffff80000010441e:	48 89 d6             	mov    %rdx,%rsi$/;"	l
ffff800000104421	kernel.asm	/^ffff800000104421:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000104424	kernel.asm	/^ffff800000104424:	48 b8 87 44 10 00 00 	movabs $0xffff800000104487,%rax$/;"	l
ffff80000010442b	kernel.asm	/^ffff80000010442b:	80 ff ff $/;"	l
ffff80000010442e	kernel.asm	/^ffff80000010442e:	ff d0                	callq  *%rax$/;"	l
ffff800000104430	kernel.asm	/^ffff800000104430:	48 b8 80 b1 11 00 00 	movabs $0xffff80000011b180,%rax$/;"	l
ffff800000104437	kernel.asm	/^ffff800000104437:	80 ff ff $/;"	l
ffff80000010443a	kernel.asm	/^ffff80000010443a:	c7 40 68 01 00 00 00 	movl   $0x1,0x68(%rax)$/;"	l
ffff800000104441	kernel.asm	/^ffff800000104441:	90                   	nop$/;"	l
ffff800000104442	kernel.asm	/^ffff800000104442:	c9                   	leaveq $/;"	l
ffff800000104443	kernel.asm	/^ffff800000104443:	c3                   	retq   $/;"	l
ffff800000104444	kernel.asm	/^ffff800000104444 <kfreepagecount>:$/;"	l
ffff800000104444	kernel.asm	/^ffff800000104444:	55                   	push   %rbp$/;"	l
ffff800000104445	kernel.asm	/^ffff800000104445:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000104448	kernel.asm	/^ffff800000104448:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff80000010444c	kernel.asm	/^ffff80000010444c:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)$/;"	l
ffff800000104453	kernel.asm	/^ffff800000104453:	48 b8 80 b1 11 00 00 	movabs $0xffff80000011b180,%rax$/;"	l
ffff80000010445a	kernel.asm	/^ffff80000010445a:	80 ff ff $/;"	l
ffff80000010445d	kernel.asm	/^ffff80000010445d:	48 8b 40 70          	mov    0x70(%rax),%rax$/;"	l
ffff800000104461	kernel.asm	/^ffff800000104461:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ffff800000104465	kernel.asm	/^ffff800000104465:	eb 0f                	jmp    ffff800000104476 <kfreepagecount+0x32>$/;"	l
ffff800000104467	kernel.asm	/^ffff800000104467:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)$/;"	l
ffff80000010446b	kernel.asm	/^ffff80000010446b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff80000010446f	kernel.asm	/^ffff80000010446f:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff800000104472	kernel.asm	/^ffff800000104472:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ffff800000104476	kernel.asm	/^ffff800000104476:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff80000010447a	kernel.asm	/^ffff80000010447a:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff80000010447d	kernel.asm	/^ffff80000010447d:	48 85 c0             	test   %rax,%rax$/;"	l
ffff800000104480	kernel.asm	/^ffff800000104480:	75 e5                	jne    ffff800000104467 <kfreepagecount+0x23>$/;"	l
ffff800000104482	kernel.asm	/^ffff800000104482:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff800000104485	kernel.asm	/^ffff800000104485:	c9                   	leaveq $/;"	l
ffff800000104486	kernel.asm	/^ffff800000104486:	c3                   	retq   $/;"	l
ffff800000104487	kernel.asm	/^ffff800000104487 <freerange>:$/;"	l
ffff800000104487	kernel.asm	/^ffff800000104487:	55                   	push   %rbp$/;"	l
ffff800000104488	kernel.asm	/^ffff800000104488:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010448b	kernel.asm	/^ffff80000010448b:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ffff80000010448f	kernel.asm	/^ffff80000010448f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
ffff800000104493	kernel.asm	/^ffff800000104493:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)$/;"	l
ffff800000104497	kernel.asm	/^ffff800000104497:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010449b	kernel.asm	/^ffff80000010449b:	48 05 ff 0f 00 00    	add    $0xfff,%rax$/;"	l
ffff8000001044a1	kernel.asm	/^ffff8000001044a1:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax$/;"	l
ffff8000001044a7	kernel.asm	/^ffff8000001044a7:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff8000001044ab	kernel.asm	/^ffff8000001044ab:	eb 1b                	jmp    ffff8000001044c8 <freerange+0x41>$/;"	l
ffff8000001044ad	kernel.asm	/^ffff8000001044ad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001044b1	kernel.asm	/^ffff8000001044b1:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001044b4	kernel.asm	/^ffff8000001044b4:	48 b8 db 44 10 00 00 	movabs $0xffff8000001044db,%rax$/;"	l
ffff8000001044bb	kernel.asm	/^ffff8000001044bb:	80 ff ff $/;"	l
ffff8000001044be	kernel.asm	/^ffff8000001044be:	ff d0                	callq  *%rax$/;"	l
ffff8000001044c0	kernel.asm	/^ffff8000001044c0:	48 81 45 f8 00 10 00 	addq   $0x1000,-0x8(%rbp)$/;"	l
ffff8000001044c7	kernel.asm	/^ffff8000001044c7:	00 $/;"	l
ffff8000001044c8	kernel.asm	/^ffff8000001044c8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001044cc	kernel.asm	/^ffff8000001044cc:	48 05 00 10 00 00    	add    $0x1000,%rax$/;"	l
ffff8000001044d2	kernel.asm	/^ffff8000001044d2:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax$/;"	l
ffff8000001044d6	kernel.asm	/^ffff8000001044d6:	76 d5                	jbe    ffff8000001044ad <freerange+0x26>$/;"	l
ffff8000001044d8	kernel.asm	/^ffff8000001044d8:	90                   	nop$/;"	l
ffff8000001044d9	kernel.asm	/^ffff8000001044d9:	c9                   	leaveq $/;"	l
ffff8000001044da	kernel.asm	/^ffff8000001044da:	c3                   	retq   $/;"	l
ffff8000001044db	kernel.asm	/^ffff8000001044db <kfree>:$/;"	l
ffff8000001044db	kernel.asm	/^ffff8000001044db:	55                   	push   %rbp$/;"	l
ffff8000001044dc	kernel.asm	/^ffff8000001044dc:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff8000001044df	kernel.asm	/^ffff8000001044df:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ffff8000001044e3	kernel.asm	/^ffff8000001044e3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
ffff8000001044e7	kernel.asm	/^ffff8000001044e7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff8000001044eb	kernel.asm	/^ffff8000001044eb:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
ffff8000001044f0	kernel.asm	/^ffff8000001044f0:	48 85 c0             	test   %rax,%rax$/;"	l
ffff8000001044f3	kernel.asm	/^ffff8000001044f3:	75 29                	jne    ffff80000010451e <kfree+0x43>$/;"	l
ffff8000001044f5	kernel.asm	/^ffff8000001044f5:	48 b8 00 00 12 00 00 	movabs $0xffff800000120000,%rax$/;"	l
ffff8000001044fc	kernel.asm	/^ffff8000001044fc:	80 ff ff $/;"	l
ffff8000001044ff	kernel.asm	/^ffff8000001044ff:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)$/;"	l
ffff800000104503	kernel.asm	/^ffff800000104503:	72 19                	jb     ffff80000010451e <kfree+0x43>$/;"	l
ffff800000104505	kernel.asm	/^ffff800000104505:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx$/;"	l
ffff800000104509	kernel.asm	/^ffff800000104509:	48 b8 00 00 00 00 00 	movabs $0x800000000000,%rax$/;"	l
ffff800000104510	kernel.asm	/^ffff800000104510:	80 00 00 $/;"	l
ffff800000104513	kernel.asm	/^ffff800000104513:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff800000104516	kernel.asm	/^ffff800000104516:	48 3d ff ff ff 0d    	cmp    $0xdffffff,%rax$/;"	l
ffff80000010451c	kernel.asm	/^ffff80000010451c:	76 16                	jbe    ffff800000104534 <kfree+0x59>$/;"	l
ffff80000010451e	kernel.asm	/^ffff80000010451e:	48 bf af d6 10 00 00 	movabs $0xffff80000010d6af,%rdi$/;"	l
ffff800000104525	kernel.asm	/^ffff800000104525:	80 ff ff $/;"	l
ffff800000104528	kernel.asm	/^ffff800000104528:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff80000010452f	kernel.asm	/^ffff80000010452f:	80 ff ff $/;"	l
ffff800000104532	kernel.asm	/^ffff800000104532:	ff d0                	callq  *%rax$/;"	l
ffff800000104534	kernel.asm	/^ffff800000104534:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000104538	kernel.asm	/^ffff800000104538:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
ffff80000010453d	kernel.asm	/^ffff80000010453d:	be 01 00 00 00       	mov    $0x1,%esi$/;"	l
ffff800000104542	kernel.asm	/^ffff800000104542:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000104545	kernel.asm	/^ffff800000104545:	48 b8 72 7b 10 00 00 	movabs $0xffff800000107b72,%rax$/;"	l
ffff80000010454c	kernel.asm	/^ffff80000010454c:	80 ff ff $/;"	l
ffff80000010454f	kernel.asm	/^ffff80000010454f:	ff d0                	callq  *%rax$/;"	l
ffff800000104551	kernel.asm	/^ffff800000104551:	48 b8 80 b1 11 00 00 	movabs $0xffff80000011b180,%rax$/;"	l
ffff800000104558	kernel.asm	/^ffff800000104558:	80 ff ff $/;"	l
ffff80000010455b	kernel.asm	/^ffff80000010455b:	8b 40 68             	mov    0x68(%rax),%eax$/;"	l
ffff80000010455e	kernel.asm	/^ffff80000010455e:	85 c0                	test   %eax,%eax$/;"	l
ffff800000104560	kernel.asm	/^ffff800000104560:	74 16                	je     ffff800000104578 <kfree+0x9d>$/;"	l
ffff800000104562	kernel.asm	/^ffff800000104562:	48 bf 80 b1 11 00 00 	movabs $0xffff80000011b180,%rdi$/;"	l
ffff800000104569	kernel.asm	/^ffff800000104569:	80 ff ff $/;"	l
ffff80000010456c	kernel.asm	/^ffff80000010456c:	48 b8 d6 77 10 00 00 	movabs $0xffff8000001077d6,%rax$/;"	l
ffff800000104573	kernel.asm	/^ffff800000104573:	80 ff ff $/;"	l
ffff800000104576	kernel.asm	/^ffff800000104576:	ff d0                	callq  *%rax$/;"	l
ffff800000104578	kernel.asm	/^ffff800000104578:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010457c	kernel.asm	/^ffff80000010457c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff800000104580	kernel.asm	/^ffff800000104580:	48 b8 80 b1 11 00 00 	movabs $0xffff80000011b180,%rax$/;"	l
ffff800000104587	kernel.asm	/^ffff800000104587:	80 ff ff $/;"	l
ffff80000010458a	kernel.asm	/^ffff80000010458a:	48 8b 50 70          	mov    0x70(%rax),%rdx$/;"	l
ffff80000010458e	kernel.asm	/^ffff80000010458e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000104592	kernel.asm	/^ffff800000104592:	48 89 10             	mov    %rdx,(%rax)$/;"	l
ffff800000104595	kernel.asm	/^ffff800000104595:	48 b8 80 b1 11 00 00 	movabs $0xffff80000011b180,%rax$/;"	l
ffff80000010459c	kernel.asm	/^ffff80000010459c:	80 ff ff $/;"	l
ffff80000010459f	kernel.asm	/^ffff80000010459f:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx$/;"	l
ffff8000001045a3	kernel.asm	/^ffff8000001045a3:	48 89 50 70          	mov    %rdx,0x70(%rax)$/;"	l
ffff8000001045a7	kernel.asm	/^ffff8000001045a7:	48 b8 80 b1 11 00 00 	movabs $0xffff80000011b180,%rax$/;"	l
ffff8000001045ae	kernel.asm	/^ffff8000001045ae:	80 ff ff $/;"	l
ffff8000001045b1	kernel.asm	/^ffff8000001045b1:	8b 40 68             	mov    0x68(%rax),%eax$/;"	l
ffff8000001045b4	kernel.asm	/^ffff8000001045b4:	85 c0                	test   %eax,%eax$/;"	l
ffff8000001045b6	kernel.asm	/^ffff8000001045b6:	74 16                	je     ffff8000001045ce <kfree+0xf3>$/;"	l
ffff8000001045b8	kernel.asm	/^ffff8000001045b8:	48 bf 80 b1 11 00 00 	movabs $0xffff80000011b180,%rdi$/;"	l
ffff8000001045bf	kernel.asm	/^ffff8000001045bf:	80 ff ff $/;"	l
ffff8000001045c2	kernel.asm	/^ffff8000001045c2:	48 b8 6f 78 10 00 00 	movabs $0xffff80000010786f,%rax$/;"	l
ffff8000001045c9	kernel.asm	/^ffff8000001045c9:	80 ff ff $/;"	l
ffff8000001045cc	kernel.asm	/^ffff8000001045cc:	ff d0                	callq  *%rax$/;"	l
ffff8000001045ce	kernel.asm	/^ffff8000001045ce:	90                   	nop$/;"	l
ffff8000001045cf	kernel.asm	/^ffff8000001045cf:	c9                   	leaveq $/;"	l
ffff8000001045d0	kernel.asm	/^ffff8000001045d0:	c3                   	retq   $/;"	l
ffff8000001045d1	kernel.asm	/^ffff8000001045d1 <kalloc>:$/;"	l
ffff8000001045d1	kernel.asm	/^ffff8000001045d1:	55                   	push   %rbp$/;"	l
ffff8000001045d2	kernel.asm	/^ffff8000001045d2:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff8000001045d5	kernel.asm	/^ffff8000001045d5:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff8000001045d9	kernel.asm	/^ffff8000001045d9:	48 b8 80 b1 11 00 00 	movabs $0xffff80000011b180,%rax$/;"	l
ffff8000001045e0	kernel.asm	/^ffff8000001045e0:	80 ff ff $/;"	l
ffff8000001045e3	kernel.asm	/^ffff8000001045e3:	8b 40 68             	mov    0x68(%rax),%eax$/;"	l
ffff8000001045e6	kernel.asm	/^ffff8000001045e6:	85 c0                	test   %eax,%eax$/;"	l
ffff8000001045e8	kernel.asm	/^ffff8000001045e8:	74 16                	je     ffff800000104600 <kalloc+0x2f>$/;"	l
ffff8000001045ea	kernel.asm	/^ffff8000001045ea:	48 bf 80 b1 11 00 00 	movabs $0xffff80000011b180,%rdi$/;"	l
ffff8000001045f1	kernel.asm	/^ffff8000001045f1:	80 ff ff $/;"	l
ffff8000001045f4	kernel.asm	/^ffff8000001045f4:	48 b8 d6 77 10 00 00 	movabs $0xffff8000001077d6,%rax$/;"	l
ffff8000001045fb	kernel.asm	/^ffff8000001045fb:	80 ff ff $/;"	l
ffff8000001045fe	kernel.asm	/^ffff8000001045fe:	ff d0                	callq  *%rax$/;"	l
ffff800000104600	kernel.asm	/^ffff800000104600:	48 b8 80 b1 11 00 00 	movabs $0xffff80000011b180,%rax$/;"	l
ffff800000104607	kernel.asm	/^ffff800000104607:	80 ff ff $/;"	l
ffff80000010460a	kernel.asm	/^ffff80000010460a:	48 8b 40 70          	mov    0x70(%rax),%rax$/;"	l
ffff80000010460e	kernel.asm	/^ffff80000010460e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff800000104612	kernel.asm	/^ffff800000104612:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)$/;"	l
ffff800000104617	kernel.asm	/^ffff800000104617:	74 15                	je     ffff80000010462e <kalloc+0x5d>$/;"	l
ffff800000104619	kernel.asm	/^ffff800000104619:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010461d	kernel.asm	/^ffff80000010461d:	48 8b 10             	mov    (%rax),%rdx$/;"	l
ffff800000104620	kernel.asm	/^ffff800000104620:	48 b8 80 b1 11 00 00 	movabs $0xffff80000011b180,%rax$/;"	l
ffff800000104627	kernel.asm	/^ffff800000104627:	80 ff ff $/;"	l
ffff80000010462a	kernel.asm	/^ffff80000010462a:	48 89 50 70          	mov    %rdx,0x70(%rax)$/;"	l
ffff80000010462e	kernel.asm	/^ffff80000010462e:	48 b8 80 b1 11 00 00 	movabs $0xffff80000011b180,%rax$/;"	l
ffff800000104635	kernel.asm	/^ffff800000104635:	80 ff ff $/;"	l
ffff800000104638	kernel.asm	/^ffff800000104638:	8b 40 68             	mov    0x68(%rax),%eax$/;"	l
ffff80000010463b	kernel.asm	/^ffff80000010463b:	85 c0                	test   %eax,%eax$/;"	l
ffff80000010463d	kernel.asm	/^ffff80000010463d:	74 16                	je     ffff800000104655 <kalloc+0x84>$/;"	l
ffff80000010463f	kernel.asm	/^ffff80000010463f:	48 bf 80 b1 11 00 00 	movabs $0xffff80000011b180,%rdi$/;"	l
ffff800000104646	kernel.asm	/^ffff800000104646:	80 ff ff $/;"	l
ffff800000104649	kernel.asm	/^ffff800000104649:	48 b8 6f 78 10 00 00 	movabs $0xffff80000010786f,%rax$/;"	l
ffff800000104650	kernel.asm	/^ffff800000104650:	80 ff ff $/;"	l
ffff800000104653	kernel.asm	/^ffff800000104653:	ff d0                	callq  *%rax$/;"	l
ffff800000104655	kernel.asm	/^ffff800000104655:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000104659	kernel.asm	/^ffff800000104659:	c9                   	leaveq $/;"	l
ffff80000010465a	kernel.asm	/^ffff80000010465a:	c3                   	retq   $/;"	l
ffff80000010465b	kernel.asm	/^ffff80000010465b <inb>:$/;"	l
ffff80000010465b	kernel.asm	/^ffff80000010465b:	55                   	push   %rbp$/;"	l
ffff80000010465c	kernel.asm	/^ffff80000010465c:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010465f	kernel.asm	/^ffff80000010465f:	48 83 ec 18          	sub    $0x18,%rsp$/;"	l
ffff800000104663	kernel.asm	/^ffff800000104663:	89 f8                	mov    %edi,%eax$/;"	l
ffff800000104665	kernel.asm	/^ffff800000104665:	66 89 45 ec          	mov    %ax,-0x14(%rbp)$/;"	l
ffff800000104669	kernel.asm	/^ffff800000104669:	0f b7 45 ec          	movzwl -0x14(%rbp),%eax$/;"	l
ffff80000010466d	kernel.asm	/^ffff80000010466d:	89 c2                	mov    %eax,%edx$/;"	l
ffff80000010466f	kernel.asm	/^ffff80000010466f:	ec                   	in     (%dx),%al$/;"	l
ffff800000104670	kernel.asm	/^ffff800000104670:	88 45 ff             	mov    %al,-0x1(%rbp)$/;"	l
ffff800000104673	kernel.asm	/^ffff800000104673:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax$/;"	l
ffff800000104677	kernel.asm	/^ffff800000104677:	c9                   	leaveq $/;"	l
ffff800000104678	kernel.asm	/^ffff800000104678:	c3                   	retq   $/;"	l
ffff800000104679	kernel.asm	/^ffff800000104679 <kbdgetc>:$/;"	l
ffff800000104679	kernel.asm	/^ffff800000104679:	55                   	push   %rbp$/;"	l
ffff80000010467a	kernel.asm	/^ffff80000010467a:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010467d	kernel.asm	/^ffff80000010467d:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff800000104681	kernel.asm	/^ffff800000104681:	bf 64 00 00 00       	mov    $0x64,%edi$/;"	l
ffff800000104686	kernel.asm	/^ffff800000104686:	48 b8 5b 46 10 00 00 	movabs $0xffff80000010465b,%rax$/;"	l
ffff80000010468d	kernel.asm	/^ffff80000010468d:	80 ff ff $/;"	l
ffff800000104690	kernel.asm	/^ffff800000104690:	ff d0                	callq  *%rax$/;"	l
ffff800000104692	kernel.asm	/^ffff800000104692:	0f b6 c0             	movzbl %al,%eax$/;"	l
ffff800000104695	kernel.asm	/^ffff800000104695:	89 45 f4             	mov    %eax,-0xc(%rbp)$/;"	l
ffff800000104698	kernel.asm	/^ffff800000104698:	8b 45 f4             	mov    -0xc(%rbp),%eax$/;"	l
ffff80000010469b	kernel.asm	/^ffff80000010469b:	83 e0 01             	and    $0x1,%eax$/;"	l
ffff80000010469e	kernel.asm	/^ffff80000010469e:	85 c0                	test   %eax,%eax$/;"	l
ffff8000001046a0	kernel.asm	/^ffff8000001046a0:	75 0a                	jne    ffff8000001046ac <kbdgetc+0x33>$/;"	l
ffff8000001046a2	kernel.asm	/^ffff8000001046a2:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff8000001046a7	kernel.asm	/^ffff8000001046a7:	e9 ae 01 00 00       	jmpq   ffff80000010485a <kbdgetc+0x1e1>$/;"	l
ffff8000001046ac	kernel.asm	/^ffff8000001046ac:	bf 60 00 00 00       	mov    $0x60,%edi$/;"	l
ffff8000001046b1	kernel.asm	/^ffff8000001046b1:	48 b8 5b 46 10 00 00 	movabs $0xffff80000010465b,%rax$/;"	l
ffff8000001046b8	kernel.asm	/^ffff8000001046b8:	80 ff ff $/;"	l
ffff8000001046bb	kernel.asm	/^ffff8000001046bb:	ff d0                	callq  *%rax$/;"	l
ffff8000001046bd	kernel.asm	/^ffff8000001046bd:	0f b6 c0             	movzbl %al,%eax$/;"	l
ffff8000001046c0	kernel.asm	/^ffff8000001046c0:	89 45 fc             	mov    %eax,-0x4(%rbp)$/;"	l
ffff8000001046c3	kernel.asm	/^ffff8000001046c3:	81 7d fc e0 00 00 00 	cmpl   $0xe0,-0x4(%rbp)$/;"	l
ffff8000001046ca	kernel.asm	/^ffff8000001046ca:	75 27                	jne    ffff8000001046f3 <kbdgetc+0x7a>$/;"	l
ffff8000001046cc	kernel.asm	/^ffff8000001046cc:	48 b8 f8 b1 11 00 00 	movabs $0xffff80000011b1f8,%rax$/;"	l
ffff8000001046d3	kernel.asm	/^ffff8000001046d3:	80 ff ff $/;"	l
ffff8000001046d6	kernel.asm	/^ffff8000001046d6:	8b 00                	mov    (%rax),%eax$/;"	l
ffff8000001046d8	kernel.asm	/^ffff8000001046d8:	83 c8 40             	or     $0x40,%eax$/;"	l
ffff8000001046db	kernel.asm	/^ffff8000001046db:	89 c2                	mov    %eax,%edx$/;"	l
ffff8000001046dd	kernel.asm	/^ffff8000001046dd:	48 b8 f8 b1 11 00 00 	movabs $0xffff80000011b1f8,%rax$/;"	l
ffff8000001046e4	kernel.asm	/^ffff8000001046e4:	80 ff ff $/;"	l
ffff8000001046e7	kernel.asm	/^ffff8000001046e7:	89 10                	mov    %edx,(%rax)$/;"	l
ffff8000001046e9	kernel.asm	/^ffff8000001046e9:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff8000001046ee	kernel.asm	/^ffff8000001046ee:	e9 67 01 00 00       	jmpq   ffff80000010485a <kbdgetc+0x1e1>$/;"	l
ffff8000001046f3	kernel.asm	/^ffff8000001046f3:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff8000001046f6	kernel.asm	/^ffff8000001046f6:	25 80 00 00 00       	and    $0x80,%eax$/;"	l
ffff8000001046fb	kernel.asm	/^ffff8000001046fb:	85 c0                	test   %eax,%eax$/;"	l
ffff8000001046fd	kernel.asm	/^ffff8000001046fd:	74 60                	je     ffff80000010475f <kbdgetc+0xe6>$/;"	l
ffff8000001046ff	kernel.asm	/^ffff8000001046ff:	48 b8 f8 b1 11 00 00 	movabs $0xffff80000011b1f8,%rax$/;"	l
ffff800000104706	kernel.asm	/^ffff800000104706:	80 ff ff $/;"	l
ffff800000104709	kernel.asm	/^ffff800000104709:	8b 00                	mov    (%rax),%eax$/;"	l
ffff80000010470b	kernel.asm	/^ffff80000010470b:	83 e0 40             	and    $0x40,%eax$/;"	l
ffff80000010470e	kernel.asm	/^ffff80000010470e:	85 c0                	test   %eax,%eax$/;"	l
ffff800000104710	kernel.asm	/^ffff800000104710:	75 08                	jne    ffff80000010471a <kbdgetc+0xa1>$/;"	l
ffff800000104712	kernel.asm	/^ffff800000104712:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff800000104715	kernel.asm	/^ffff800000104715:	83 e0 7f             	and    $0x7f,%eax$/;"	l
ffff800000104718	kernel.asm	/^ffff800000104718:	eb 03                	jmp    ffff80000010471d <kbdgetc+0xa4>$/;"	l
ffff80000010471a	kernel.asm	/^ffff80000010471a:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff80000010471d	kernel.asm	/^ffff80000010471d:	89 45 fc             	mov    %eax,-0x4(%rbp)$/;"	l
ffff800000104720	kernel.asm	/^ffff800000104720:	48 ba 40 e0 10 00 00 	movabs $0xffff80000010e040,%rdx$/;"	l
ffff800000104727	kernel.asm	/^ffff800000104727:	80 ff ff $/;"	l
ffff80000010472a	kernel.asm	/^ffff80000010472a:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff80000010472d	kernel.asm	/^ffff80000010472d:	0f b6 04 02          	movzbl (%rdx,%rax,1),%eax$/;"	l
ffff800000104731	kernel.asm	/^ffff800000104731:	83 c8 40             	or     $0x40,%eax$/;"	l
ffff800000104734	kernel.asm	/^ffff800000104734:	0f b6 c0             	movzbl %al,%eax$/;"	l
ffff800000104737	kernel.asm	/^ffff800000104737:	f7 d0                	not    %eax$/;"	l
ffff800000104739	kernel.asm	/^ffff800000104739:	89 c2                	mov    %eax,%edx$/;"	l
ffff80000010473b	kernel.asm	/^ffff80000010473b:	48 b8 f8 b1 11 00 00 	movabs $0xffff80000011b1f8,%rax$/;"	l
ffff800000104742	kernel.asm	/^ffff800000104742:	80 ff ff $/;"	l
ffff800000104745	kernel.asm	/^ffff800000104745:	8b 00                	mov    (%rax),%eax$/;"	l
ffff800000104747	kernel.asm	/^ffff800000104747:	21 c2                	and    %eax,%edx$/;"	l
ffff800000104749	kernel.asm	/^ffff800000104749:	48 b8 f8 b1 11 00 00 	movabs $0xffff80000011b1f8,%rax$/;"	l
ffff800000104750	kernel.asm	/^ffff800000104750:	80 ff ff $/;"	l
ffff800000104753	kernel.asm	/^ffff800000104753:	89 10                	mov    %edx,(%rax)$/;"	l
ffff800000104755	kernel.asm	/^ffff800000104755:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff80000010475a	kernel.asm	/^ffff80000010475a:	e9 fb 00 00 00       	jmpq   ffff80000010485a <kbdgetc+0x1e1>$/;"	l
ffff80000010475f	kernel.asm	/^ffff80000010475f:	48 b8 f8 b1 11 00 00 	movabs $0xffff80000011b1f8,%rax$/;"	l
ffff800000104766	kernel.asm	/^ffff800000104766:	80 ff ff $/;"	l
ffff800000104769	kernel.asm	/^ffff800000104769:	8b 00                	mov    (%rax),%eax$/;"	l
ffff80000010476b	kernel.asm	/^ffff80000010476b:	83 e0 40             	and    $0x40,%eax$/;"	l
ffff80000010476e	kernel.asm	/^ffff80000010476e:	85 c0                	test   %eax,%eax$/;"	l
ffff800000104770	kernel.asm	/^ffff800000104770:	74 24                	je     ffff800000104796 <kbdgetc+0x11d>$/;"	l
ffff800000104772	kernel.asm	/^ffff800000104772:	81 4d fc 80 00 00 00 	orl    $0x80,-0x4(%rbp)$/;"	l
ffff800000104779	kernel.asm	/^ffff800000104779:	48 b8 f8 b1 11 00 00 	movabs $0xffff80000011b1f8,%rax$/;"	l
ffff800000104780	kernel.asm	/^ffff800000104780:	80 ff ff $/;"	l
ffff800000104783	kernel.asm	/^ffff800000104783:	8b 00                	mov    (%rax),%eax$/;"	l
ffff800000104785	kernel.asm	/^ffff800000104785:	83 e0 bf             	and    $0xffffffbf,%eax$/;"	l
ffff800000104788	kernel.asm	/^ffff800000104788:	89 c2                	mov    %eax,%edx$/;"	l
ffff80000010478a	kernel.asm	/^ffff80000010478a:	48 b8 f8 b1 11 00 00 	movabs $0xffff80000011b1f8,%rax$/;"	l
ffff800000104791	kernel.asm	/^ffff800000104791:	80 ff ff $/;"	l
ffff800000104794	kernel.asm	/^ffff800000104794:	89 10                	mov    %edx,(%rax)$/;"	l
ffff800000104796	kernel.asm	/^ffff800000104796:	48 ba 40 e0 10 00 00 	movabs $0xffff80000010e040,%rdx$/;"	l
ffff80000010479d	kernel.asm	/^ffff80000010479d:	80 ff ff $/;"	l
ffff8000001047a0	kernel.asm	/^ffff8000001047a0:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff8000001047a3	kernel.asm	/^ffff8000001047a3:	0f b6 04 02          	movzbl (%rdx,%rax,1),%eax$/;"	l
ffff8000001047a7	kernel.asm	/^ffff8000001047a7:	0f b6 d0             	movzbl %al,%edx$/;"	l
ffff8000001047aa	kernel.asm	/^ffff8000001047aa:	48 b8 f8 b1 11 00 00 	movabs $0xffff80000011b1f8,%rax$/;"	l
ffff8000001047b1	kernel.asm	/^ffff8000001047b1:	80 ff ff $/;"	l
ffff8000001047b4	kernel.asm	/^ffff8000001047b4:	8b 00                	mov    (%rax),%eax$/;"	l
ffff8000001047b6	kernel.asm	/^ffff8000001047b6:	09 c2                	or     %eax,%edx$/;"	l
ffff8000001047b8	kernel.asm	/^ffff8000001047b8:	48 b8 f8 b1 11 00 00 	movabs $0xffff80000011b1f8,%rax$/;"	l
ffff8000001047bf	kernel.asm	/^ffff8000001047bf:	80 ff ff $/;"	l
ffff8000001047c2	kernel.asm	/^ffff8000001047c2:	89 10                	mov    %edx,(%rax)$/;"	l
ffff8000001047c4	kernel.asm	/^ffff8000001047c4:	48 ba 40 e1 10 00 00 	movabs $0xffff80000010e140,%rdx$/;"	l
ffff8000001047cb	kernel.asm	/^ffff8000001047cb:	80 ff ff $/;"	l
ffff8000001047ce	kernel.asm	/^ffff8000001047ce:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff8000001047d1	kernel.asm	/^ffff8000001047d1:	0f b6 04 02          	movzbl (%rdx,%rax,1),%eax$/;"	l
ffff8000001047d5	kernel.asm	/^ffff8000001047d5:	0f b6 d0             	movzbl %al,%edx$/;"	l
ffff8000001047d8	kernel.asm	/^ffff8000001047d8:	48 b8 f8 b1 11 00 00 	movabs $0xffff80000011b1f8,%rax$/;"	l
ffff8000001047df	kernel.asm	/^ffff8000001047df:	80 ff ff $/;"	l
ffff8000001047e2	kernel.asm	/^ffff8000001047e2:	8b 00                	mov    (%rax),%eax$/;"	l
ffff8000001047e4	kernel.asm	/^ffff8000001047e4:	31 c2                	xor    %eax,%edx$/;"	l
ffff8000001047e6	kernel.asm	/^ffff8000001047e6:	48 b8 f8 b1 11 00 00 	movabs $0xffff80000011b1f8,%rax$/;"	l
ffff8000001047ed	kernel.asm	/^ffff8000001047ed:	80 ff ff $/;"	l
ffff8000001047f0	kernel.asm	/^ffff8000001047f0:	89 10                	mov    %edx,(%rax)$/;"	l
ffff8000001047f2	kernel.asm	/^ffff8000001047f2:	48 b8 f8 b1 11 00 00 	movabs $0xffff80000011b1f8,%rax$/;"	l
ffff8000001047f9	kernel.asm	/^ffff8000001047f9:	80 ff ff $/;"	l
ffff8000001047fc	kernel.asm	/^ffff8000001047fc:	8b 00                	mov    (%rax),%eax$/;"	l
ffff8000001047fe	kernel.asm	/^ffff8000001047fe:	83 e0 03             	and    $0x3,%eax$/;"	l
ffff800000104801	kernel.asm	/^ffff800000104801:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000104803	kernel.asm	/^ffff800000104803:	48 b8 40 e5 10 00 00 	movabs $0xffff80000010e540,%rax$/;"	l
ffff80000010480a	kernel.asm	/^ffff80000010480a:	80 ff ff $/;"	l
ffff80000010480d	kernel.asm	/^ffff80000010480d:	89 d2                	mov    %edx,%edx$/;"	l
ffff80000010480f	kernel.asm	/^ffff80000010480f:	48 8b 14 d0          	mov    (%rax,%rdx,8),%rdx$/;"	l
ffff800000104813	kernel.asm	/^ffff800000104813:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff800000104816	kernel.asm	/^ffff800000104816:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff800000104819	kernel.asm	/^ffff800000104819:	0f b6 00             	movzbl (%rax),%eax$/;"	l
ffff80000010481c	kernel.asm	/^ffff80000010481c:	0f b6 c0             	movzbl %al,%eax$/;"	l
ffff80000010481f	kernel.asm	/^ffff80000010481f:	89 45 f8             	mov    %eax,-0x8(%rbp)$/;"	l
ffff800000104822	kernel.asm	/^ffff800000104822:	48 b8 f8 b1 11 00 00 	movabs $0xffff80000011b1f8,%rax$/;"	l
ffff800000104829	kernel.asm	/^ffff800000104829:	80 ff ff $/;"	l
ffff80000010482c	kernel.asm	/^ffff80000010482c:	8b 00                	mov    (%rax),%eax$/;"	l
ffff80000010482e	kernel.asm	/^ffff80000010482e:	83 e0 08             	and    $0x8,%eax$/;"	l
ffff800000104831	kernel.asm	/^ffff800000104831:	85 c0                	test   %eax,%eax$/;"	l
ffff800000104833	kernel.asm	/^ffff800000104833:	74 22                	je     ffff800000104857 <kbdgetc+0x1de>$/;"	l
ffff800000104835	kernel.asm	/^ffff800000104835:	83 7d f8 60          	cmpl   $0x60,-0x8(%rbp)$/;"	l
ffff800000104839	kernel.asm	/^ffff800000104839:	76 0c                	jbe    ffff800000104847 <kbdgetc+0x1ce>$/;"	l
ffff80000010483b	kernel.asm	/^ffff80000010483b:	83 7d f8 7a          	cmpl   $0x7a,-0x8(%rbp)$/;"	l
ffff80000010483f	kernel.asm	/^ffff80000010483f:	77 06                	ja     ffff800000104847 <kbdgetc+0x1ce>$/;"	l
ffff800000104841	kernel.asm	/^ffff800000104841:	83 6d f8 20          	subl   $0x20,-0x8(%rbp)$/;"	l
ffff800000104845	kernel.asm	/^ffff800000104845:	eb 10                	jmp    ffff800000104857 <kbdgetc+0x1de>$/;"	l
ffff800000104847	kernel.asm	/^ffff800000104847:	83 7d f8 40          	cmpl   $0x40,-0x8(%rbp)$/;"	l
ffff80000010484b	kernel.asm	/^ffff80000010484b:	76 0a                	jbe    ffff800000104857 <kbdgetc+0x1de>$/;"	l
ffff80000010484d	kernel.asm	/^ffff80000010484d:	83 7d f8 5a          	cmpl   $0x5a,-0x8(%rbp)$/;"	l
ffff800000104851	kernel.asm	/^ffff800000104851:	77 04                	ja     ffff800000104857 <kbdgetc+0x1de>$/;"	l
ffff800000104853	kernel.asm	/^ffff800000104853:	83 45 f8 20          	addl   $0x20,-0x8(%rbp)$/;"	l
ffff800000104857	kernel.asm	/^ffff800000104857:	8b 45 f8             	mov    -0x8(%rbp),%eax$/;"	l
ffff80000010485a	kernel.asm	/^ffff80000010485a:	c9                   	leaveq $/;"	l
ffff80000010485b	kernel.asm	/^ffff80000010485b:	c3                   	retq   $/;"	l
ffff80000010485c	kernel.asm	/^ffff80000010485c <kbdintr>:$/;"	l
ffff80000010485c	kernel.asm	/^ffff80000010485c:	55                   	push   %rbp$/;"	l
ffff80000010485d	kernel.asm	/^ffff80000010485d:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000104860	kernel.asm	/^ffff800000104860:	48 bf 79 46 10 00 00 	movabs $0xffff800000104679,%rdi$/;"	l
ffff800000104867	kernel.asm	/^ffff800000104867:	80 ff ff $/;"	l
ffff80000010486a	kernel.asm	/^ffff80000010486a:	48 b8 c7 0e 10 00 00 	movabs $0xffff800000100ec7,%rax$/;"	l
ffff800000104871	kernel.asm	/^ffff800000104871:	80 ff ff $/;"	l
ffff800000104874	kernel.asm	/^ffff800000104874:	ff d0                	callq  *%rax$/;"	l
ffff800000104876	kernel.asm	/^ffff800000104876:	90                   	nop$/;"	l
ffff800000104877	kernel.asm	/^ffff800000104877:	5d                   	pop    %rbp$/;"	l
ffff800000104878	kernel.asm	/^ffff800000104878:	c3                   	retq   $/;"	l
ffff800000104879	kernel.asm	/^ffff800000104879 <inb>:$/;"	l
ffff800000104879	kernel.asm	/^ffff800000104879:	55                   	push   %rbp$/;"	l
ffff80000010487a	kernel.asm	/^ffff80000010487a:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010487d	kernel.asm	/^ffff80000010487d:	48 83 ec 18          	sub    $0x18,%rsp$/;"	l
ffff800000104881	kernel.asm	/^ffff800000104881:	89 f8                	mov    %edi,%eax$/;"	l
ffff800000104883	kernel.asm	/^ffff800000104883:	66 89 45 ec          	mov    %ax,-0x14(%rbp)$/;"	l
ffff800000104887	kernel.asm	/^ffff800000104887:	0f b7 45 ec          	movzwl -0x14(%rbp),%eax$/;"	l
ffff80000010488b	kernel.asm	/^ffff80000010488b:	89 c2                	mov    %eax,%edx$/;"	l
ffff80000010488d	kernel.asm	/^ffff80000010488d:	ec                   	in     (%dx),%al$/;"	l
ffff80000010488e	kernel.asm	/^ffff80000010488e:	88 45 ff             	mov    %al,-0x1(%rbp)$/;"	l
ffff800000104891	kernel.asm	/^ffff800000104891:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax$/;"	l
ffff800000104895	kernel.asm	/^ffff800000104895:	c9                   	leaveq $/;"	l
ffff800000104896	kernel.asm	/^ffff800000104896:	c3                   	retq   $/;"	l
ffff800000104897	kernel.asm	/^ffff800000104897 <outb>:$/;"	l
ffff800000104897	kernel.asm	/^ffff800000104897:	55                   	push   %rbp$/;"	l
ffff800000104898	kernel.asm	/^ffff800000104898:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010489b	kernel.asm	/^ffff80000010489b:	48 83 ec 08          	sub    $0x8,%rsp$/;"	l
ffff80000010489f	kernel.asm	/^ffff80000010489f:	89 fa                	mov    %edi,%edx$/;"	l
ffff8000001048a1	kernel.asm	/^ffff8000001048a1:	89 f0                	mov    %esi,%eax$/;"	l
ffff8000001048a3	kernel.asm	/^ffff8000001048a3:	66 89 55 fc          	mov    %dx,-0x4(%rbp)$/;"	l
ffff8000001048a7	kernel.asm	/^ffff8000001048a7:	88 45 f8             	mov    %al,-0x8(%rbp)$/;"	l
ffff8000001048aa	kernel.asm	/^ffff8000001048aa:	0f b6 45 f8          	movzbl -0x8(%rbp),%eax$/;"	l
ffff8000001048ae	kernel.asm	/^ffff8000001048ae:	0f b7 55 fc          	movzwl -0x4(%rbp),%edx$/;"	l
ffff8000001048b2	kernel.asm	/^ffff8000001048b2:	ee                   	out    %al,(%dx)$/;"	l
ffff8000001048b3	kernel.asm	/^ffff8000001048b3:	90                   	nop$/;"	l
ffff8000001048b4	kernel.asm	/^ffff8000001048b4:	c9                   	leaveq $/;"	l
ffff8000001048b5	kernel.asm	/^ffff8000001048b5:	c3                   	retq   $/;"	l
ffff8000001048b6	kernel.asm	/^ffff8000001048b6 <readeflags>:$/;"	l
ffff8000001048b6	kernel.asm	/^ffff8000001048b6:	55                   	push   %rbp$/;"	l
ffff8000001048b7	kernel.asm	/^ffff8000001048b7:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff8000001048ba	kernel.asm	/^ffff8000001048ba:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff8000001048be	kernel.asm	/^ffff8000001048be:	9c                   	pushfq $/;"	l
ffff8000001048bf	kernel.asm	/^ffff8000001048bf:	58                   	pop    %rax$/;"	l
ffff8000001048c0	kernel.asm	/^ffff8000001048c0:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff8000001048c4	kernel.asm	/^ffff8000001048c4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001048c8	kernel.asm	/^ffff8000001048c8:	c9                   	leaveq $/;"	l
ffff8000001048c9	kernel.asm	/^ffff8000001048c9:	c3                   	retq   $/;"	l
ffff8000001048ca	kernel.asm	/^ffff8000001048ca <lapicw>:$/;"	l
ffff8000001048ca	kernel.asm	/^ffff8000001048ca:	55                   	push   %rbp$/;"	l
ffff8000001048cb	kernel.asm	/^ffff8000001048cb:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff8000001048ce	kernel.asm	/^ffff8000001048ce:	48 83 ec 08          	sub    $0x8,%rsp$/;"	l
ffff8000001048d2	kernel.asm	/^ffff8000001048d2:	89 7d fc             	mov    %edi,-0x4(%rbp)$/;"	l
ffff8000001048d5	kernel.asm	/^ffff8000001048d5:	89 75 f8             	mov    %esi,-0x8(%rbp)$/;"	l
ffff8000001048d8	kernel.asm	/^ffff8000001048d8:	48 b8 00 b2 11 00 00 	movabs $0xffff80000011b200,%rax$/;"	l
ffff8000001048df	kernel.asm	/^ffff8000001048df:	80 ff ff $/;"	l
ffff8000001048e2	kernel.asm	/^ffff8000001048e2:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff8000001048e5	kernel.asm	/^ffff8000001048e5:	8b 55 fc             	mov    -0x4(%rbp),%edx$/;"	l
ffff8000001048e8	kernel.asm	/^ffff8000001048e8:	48 63 d2             	movslq %edx,%rdx$/;"	l
ffff8000001048eb	kernel.asm	/^ffff8000001048eb:	48 c1 e2 02          	shl    $0x2,%rdx$/;"	l
ffff8000001048ef	kernel.asm	/^ffff8000001048ef:	48 01 c2             	add    %rax,%rdx$/;"	l
ffff8000001048f2	kernel.asm	/^ffff8000001048f2:	8b 45 f8             	mov    -0x8(%rbp),%eax$/;"	l
ffff8000001048f5	kernel.asm	/^ffff8000001048f5:	89 02                	mov    %eax,(%rdx)$/;"	l
ffff8000001048f7	kernel.asm	/^ffff8000001048f7:	48 b8 00 b2 11 00 00 	movabs $0xffff80000011b200,%rax$/;"	l
ffff8000001048fe	kernel.asm	/^ffff8000001048fe:	80 ff ff $/;"	l
ffff800000104901	kernel.asm	/^ffff800000104901:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff800000104904	kernel.asm	/^ffff800000104904:	48 83 c0 20          	add    $0x20,%rax$/;"	l
ffff800000104908	kernel.asm	/^ffff800000104908:	8b 00                	mov    (%rax),%eax$/;"	l
ffff80000010490a	kernel.asm	/^ffff80000010490a:	90                   	nop$/;"	l
ffff80000010490b	kernel.asm	/^ffff80000010490b:	c9                   	leaveq $/;"	l
ffff80000010490c	kernel.asm	/^ffff80000010490c:	c3                   	retq   $/;"	l
ffff80000010490d	kernel.asm	/^ffff80000010490d <lapicinit>:$/;"	l
ffff80000010490d	kernel.asm	/^ffff80000010490d:	55                   	push   %rbp$/;"	l
ffff80000010490e	kernel.asm	/^ffff80000010490e:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000104911	kernel.asm	/^ffff800000104911:	48 b8 00 b2 11 00 00 	movabs $0xffff80000011b200,%rax$/;"	l
ffff800000104918	kernel.asm	/^ffff800000104918:	80 ff ff $/;"	l
ffff80000010491b	kernel.asm	/^ffff80000010491b:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff80000010491e	kernel.asm	/^ffff80000010491e:	48 85 c0             	test   %rax,%rax$/;"	l
ffff800000104921	kernel.asm	/^ffff800000104921:	0f 84 73 01 00 00    	je     ffff800000104a9a <lapicinit+0x18d>$/;"	l
ffff800000104927	kernel.asm	/^ffff800000104927:	be 3f 01 00 00       	mov    $0x13f,%esi$/;"	l
ffff80000010492c	kernel.asm	/^ffff80000010492c:	bf 3c 00 00 00       	mov    $0x3c,%edi$/;"	l
ffff800000104931	kernel.asm	/^ffff800000104931:	48 b8 ca 48 10 00 00 	movabs $0xffff8000001048ca,%rax$/;"	l
ffff800000104938	kernel.asm	/^ffff800000104938:	80 ff ff $/;"	l
ffff80000010493b	kernel.asm	/^ffff80000010493b:	ff d0                	callq  *%rax$/;"	l
ffff80000010493d	kernel.asm	/^ffff80000010493d:	be 0b 00 00 00       	mov    $0xb,%esi$/;"	l
ffff800000104942	kernel.asm	/^ffff800000104942:	bf f8 00 00 00       	mov    $0xf8,%edi$/;"	l
ffff800000104947	kernel.asm	/^ffff800000104947:	48 b8 ca 48 10 00 00 	movabs $0xffff8000001048ca,%rax$/;"	l
ffff80000010494e	kernel.asm	/^ffff80000010494e:	80 ff ff $/;"	l
ffff800000104951	kernel.asm	/^ffff800000104951:	ff d0                	callq  *%rax$/;"	l
ffff800000104953	kernel.asm	/^ffff800000104953:	be 20 00 02 00       	mov    $0x20020,%esi$/;"	l
ffff800000104958	kernel.asm	/^ffff800000104958:	bf c8 00 00 00       	mov    $0xc8,%edi$/;"	l
ffff80000010495d	kernel.asm	/^ffff80000010495d:	48 b8 ca 48 10 00 00 	movabs $0xffff8000001048ca,%rax$/;"	l
ffff800000104964	kernel.asm	/^ffff800000104964:	80 ff ff $/;"	l
ffff800000104967	kernel.asm	/^ffff800000104967:	ff d0                	callq  *%rax$/;"	l
ffff800000104969	kernel.asm	/^ffff800000104969:	be 80 96 98 00       	mov    $0x989680,%esi$/;"	l
ffff80000010496e	kernel.asm	/^ffff80000010496e:	bf e0 00 00 00       	mov    $0xe0,%edi$/;"	l
ffff800000104973	kernel.asm	/^ffff800000104973:	48 b8 ca 48 10 00 00 	movabs $0xffff8000001048ca,%rax$/;"	l
ffff80000010497a	kernel.asm	/^ffff80000010497a:	80 ff ff $/;"	l
ffff80000010497d	kernel.asm	/^ffff80000010497d:	ff d0                	callq  *%rax$/;"	l
ffff80000010497f	kernel.asm	/^ffff80000010497f:	be 00 00 01 00       	mov    $0x10000,%esi$/;"	l
ffff800000104984	kernel.asm	/^ffff800000104984:	bf d4 00 00 00       	mov    $0xd4,%edi$/;"	l
ffff800000104989	kernel.asm	/^ffff800000104989:	48 b8 ca 48 10 00 00 	movabs $0xffff8000001048ca,%rax$/;"	l
ffff800000104990	kernel.asm	/^ffff800000104990:	80 ff ff $/;"	l
ffff800000104993	kernel.asm	/^ffff800000104993:	ff d0                	callq  *%rax$/;"	l
ffff800000104995	kernel.asm	/^ffff800000104995:	be 00 00 01 00       	mov    $0x10000,%esi$/;"	l
ffff80000010499a	kernel.asm	/^ffff80000010499a:	bf d8 00 00 00       	mov    $0xd8,%edi$/;"	l
ffff80000010499f	kernel.asm	/^ffff80000010499f:	48 b8 ca 48 10 00 00 	movabs $0xffff8000001048ca,%rax$/;"	l
ffff8000001049a6	kernel.asm	/^ffff8000001049a6:	80 ff ff $/;"	l
ffff8000001049a9	kernel.asm	/^ffff8000001049a9:	ff d0                	callq  *%rax$/;"	l
ffff8000001049ab	kernel.asm	/^ffff8000001049ab:	48 b8 00 b2 11 00 00 	movabs $0xffff80000011b200,%rax$/;"	l
ffff8000001049b2	kernel.asm	/^ffff8000001049b2:	80 ff ff $/;"	l
ffff8000001049b5	kernel.asm	/^ffff8000001049b5:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff8000001049b8	kernel.asm	/^ffff8000001049b8:	48 83 c0 30          	add    $0x30,%rax$/;"	l
ffff8000001049bc	kernel.asm	/^ffff8000001049bc:	8b 00                	mov    (%rax),%eax$/;"	l
ffff8000001049be	kernel.asm	/^ffff8000001049be:	c1 e8 10             	shr    $0x10,%eax$/;"	l
ffff8000001049c1	kernel.asm	/^ffff8000001049c1:	0f b6 c0             	movzbl %al,%eax$/;"	l
ffff8000001049c4	kernel.asm	/^ffff8000001049c4:	83 f8 03             	cmp    $0x3,%eax$/;"	l
ffff8000001049c7	kernel.asm	/^ffff8000001049c7:	76 16                	jbe    ffff8000001049df <lapicinit+0xd2>$/;"	l
ffff8000001049c9	kernel.asm	/^ffff8000001049c9:	be 00 00 01 00       	mov    $0x10000,%esi$/;"	l
ffff8000001049ce	kernel.asm	/^ffff8000001049ce:	bf d0 00 00 00       	mov    $0xd0,%edi$/;"	l
ffff8000001049d3	kernel.asm	/^ffff8000001049d3:	48 b8 ca 48 10 00 00 	movabs $0xffff8000001048ca,%rax$/;"	l
ffff8000001049da	kernel.asm	/^ffff8000001049da:	80 ff ff $/;"	l
ffff8000001049dd	kernel.asm	/^ffff8000001049dd:	ff d0                	callq  *%rax$/;"	l
ffff8000001049df	kernel.asm	/^ffff8000001049df:	be 33 00 00 00       	mov    $0x33,%esi$/;"	l
ffff8000001049e4	kernel.asm	/^ffff8000001049e4:	bf dc 00 00 00       	mov    $0xdc,%edi$/;"	l
ffff8000001049e9	kernel.asm	/^ffff8000001049e9:	48 b8 ca 48 10 00 00 	movabs $0xffff8000001048ca,%rax$/;"	l
ffff8000001049f0	kernel.asm	/^ffff8000001049f0:	80 ff ff $/;"	l
ffff8000001049f3	kernel.asm	/^ffff8000001049f3:	ff d0                	callq  *%rax$/;"	l
ffff8000001049f5	kernel.asm	/^ffff8000001049f5:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffff8000001049fa	kernel.asm	/^ffff8000001049fa:	bf a0 00 00 00       	mov    $0xa0,%edi$/;"	l
ffff8000001049ff	kernel.asm	/^ffff8000001049ff:	48 b8 ca 48 10 00 00 	movabs $0xffff8000001048ca,%rax$/;"	l
ffff800000104a06	kernel.asm	/^ffff800000104a06:	80 ff ff $/;"	l
ffff800000104a09	kernel.asm	/^ffff800000104a09:	ff d0                	callq  *%rax$/;"	l
ffff800000104a0b	kernel.asm	/^ffff800000104a0b:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffff800000104a10	kernel.asm	/^ffff800000104a10:	bf a0 00 00 00       	mov    $0xa0,%edi$/;"	l
ffff800000104a15	kernel.asm	/^ffff800000104a15:	48 b8 ca 48 10 00 00 	movabs $0xffff8000001048ca,%rax$/;"	l
ffff800000104a1c	kernel.asm	/^ffff800000104a1c:	80 ff ff $/;"	l
ffff800000104a1f	kernel.asm	/^ffff800000104a1f:	ff d0                	callq  *%rax$/;"	l
ffff800000104a21	kernel.asm	/^ffff800000104a21:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffff800000104a26	kernel.asm	/^ffff800000104a26:	bf 2c 00 00 00       	mov    $0x2c,%edi$/;"	l
ffff800000104a2b	kernel.asm	/^ffff800000104a2b:	48 b8 ca 48 10 00 00 	movabs $0xffff8000001048ca,%rax$/;"	l
ffff800000104a32	kernel.asm	/^ffff800000104a32:	80 ff ff $/;"	l
ffff800000104a35	kernel.asm	/^ffff800000104a35:	ff d0                	callq  *%rax$/;"	l
ffff800000104a37	kernel.asm	/^ffff800000104a37:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffff800000104a3c	kernel.asm	/^ffff800000104a3c:	bf c4 00 00 00       	mov    $0xc4,%edi$/;"	l
ffff800000104a41	kernel.asm	/^ffff800000104a41:	48 b8 ca 48 10 00 00 	movabs $0xffff8000001048ca,%rax$/;"	l
ffff800000104a48	kernel.asm	/^ffff800000104a48:	80 ff ff $/;"	l
ffff800000104a4b	kernel.asm	/^ffff800000104a4b:	ff d0                	callq  *%rax$/;"	l
ffff800000104a4d	kernel.asm	/^ffff800000104a4d:	be 00 85 08 00       	mov    $0x88500,%esi$/;"	l
ffff800000104a52	kernel.asm	/^ffff800000104a52:	bf c0 00 00 00       	mov    $0xc0,%edi$/;"	l
ffff800000104a57	kernel.asm	/^ffff800000104a57:	48 b8 ca 48 10 00 00 	movabs $0xffff8000001048ca,%rax$/;"	l
ffff800000104a5e	kernel.asm	/^ffff800000104a5e:	80 ff ff $/;"	l
ffff800000104a61	kernel.asm	/^ffff800000104a61:	ff d0                	callq  *%rax$/;"	l
ffff800000104a63	kernel.asm	/^ffff800000104a63:	90                   	nop$/;"	l
ffff800000104a64	kernel.asm	/^ffff800000104a64:	48 b8 00 b2 11 00 00 	movabs $0xffff80000011b200,%rax$/;"	l
ffff800000104a6b	kernel.asm	/^ffff800000104a6b:	80 ff ff $/;"	l
ffff800000104a6e	kernel.asm	/^ffff800000104a6e:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff800000104a71	kernel.asm	/^ffff800000104a71:	48 05 00 03 00 00    	add    $0x300,%rax$/;"	l
ffff800000104a77	kernel.asm	/^ffff800000104a77:	8b 00                	mov    (%rax),%eax$/;"	l
ffff800000104a79	kernel.asm	/^ffff800000104a79:	25 00 10 00 00       	and    $0x1000,%eax$/;"	l
ffff800000104a7e	kernel.asm	/^ffff800000104a7e:	85 c0                	test   %eax,%eax$/;"	l
ffff800000104a80	kernel.asm	/^ffff800000104a80:	75 e2                	jne    ffff800000104a64 <lapicinit+0x157>$/;"	l
ffff800000104a82	kernel.asm	/^ffff800000104a82:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffff800000104a87	kernel.asm	/^ffff800000104a87:	bf 20 00 00 00       	mov    $0x20,%edi$/;"	l
ffff800000104a8c	kernel.asm	/^ffff800000104a8c:	48 b8 ca 48 10 00 00 	movabs $0xffff8000001048ca,%rax$/;"	l
ffff800000104a93	kernel.asm	/^ffff800000104a93:	80 ff ff $/;"	l
ffff800000104a96	kernel.asm	/^ffff800000104a96:	ff d0                	callq  *%rax$/;"	l
ffff800000104a98	kernel.asm	/^ffff800000104a98:	eb 01                	jmp    ffff800000104a9b <lapicinit+0x18e>$/;"	l
ffff800000104a9a	kernel.asm	/^ffff800000104a9a:	90                   	nop$/;"	l
ffff800000104a9b	kernel.asm	/^ffff800000104a9b:	5d                   	pop    %rbp$/;"	l
ffff800000104a9c	kernel.asm	/^ffff800000104a9c:	c3                   	retq   $/;"	l
ffff800000104a9d	kernel.asm	/^ffff800000104a9d <cpunum>:$/;"	l
ffff800000104a9d	kernel.asm	/^ffff800000104a9d:	55                   	push   %rbp$/;"	l
ffff800000104a9e	kernel.asm	/^ffff800000104a9e:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000104aa1	kernel.asm	/^ffff800000104aa1:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff800000104aa5	kernel.asm	/^ffff800000104aa5:	48 b8 b6 48 10 00 00 	movabs $0xffff8000001048b6,%rax$/;"	l
ffff800000104aac	kernel.asm	/^ffff800000104aac:	80 ff ff $/;"	l
ffff800000104aaf	kernel.asm	/^ffff800000104aaf:	ff d0                	callq  *%rax$/;"	l
ffff800000104ab1	kernel.asm	/^ffff800000104ab1:	25 00 02 00 00       	and    $0x200,%eax$/;"	l
ffff800000104ab6	kernel.asm	/^ffff800000104ab6:	48 85 c0             	test   %rax,%rax$/;"	l
ffff800000104ab9	kernel.asm	/^ffff800000104ab9:	74 41                	je     ffff800000104afc <cpunum+0x5f>$/;"	l
ffff800000104abb	kernel.asm	/^ffff800000104abb:	48 b8 08 b2 11 00 00 	movabs $0xffff80000011b208,%rax$/;"	l
ffff800000104ac2	kernel.asm	/^ffff800000104ac2:	80 ff ff $/;"	l
ffff800000104ac5	kernel.asm	/^ffff800000104ac5:	8b 00                	mov    (%rax),%eax$/;"	l
ffff800000104ac7	kernel.asm	/^ffff800000104ac7:	8d 48 01             	lea    0x1(%rax),%ecx$/;"	l
ffff800000104aca	kernel.asm	/^ffff800000104aca:	48 ba 08 b2 11 00 00 	movabs $0xffff80000011b208,%rdx$/;"	l
ffff800000104ad1	kernel.asm	/^ffff800000104ad1:	80 ff ff $/;"	l
ffff800000104ad4	kernel.asm	/^ffff800000104ad4:	89 0a                	mov    %ecx,(%rdx)$/;"	l
ffff800000104ad6	kernel.asm	/^ffff800000104ad6:	85 c0                	test   %eax,%eax$/;"	l
ffff800000104ad8	kernel.asm	/^ffff800000104ad8:	75 22                	jne    ffff800000104afc <cpunum+0x5f>$/;"	l
ffff800000104ada	kernel.asm	/^ffff800000104ada:	48 8b 45 08          	mov    0x8(%rbp),%rax$/;"	l
ffff800000104ade	kernel.asm	/^ffff800000104ade:	48 89 c6             	mov    %rax,%rsi$/;"	l
ffff800000104ae1	kernel.asm	/^ffff800000104ae1:	48 bf b8 d6 10 00 00 	movabs $0xffff80000010d6b8,%rdi$/;"	l
ffff800000104ae8	kernel.asm	/^ffff800000104ae8:	80 ff ff $/;"	l
ffff800000104aeb	kernel.asm	/^ffff800000104aeb:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000104af0	kernel.asm	/^ffff800000104af0:	48 ba ac 07 10 00 00 	movabs $0xffff8000001007ac,%rdx$/;"	l
ffff800000104af7	kernel.asm	/^ffff800000104af7:	80 ff ff $/;"	l
ffff800000104afa	kernel.asm	/^ffff800000104afa:	ff d2                	callq  *%rdx$/;"	l
ffff800000104afc	kernel.asm	/^ffff800000104afc:	48 b8 00 b2 11 00 00 	movabs $0xffff80000011b200,%rax$/;"	l
ffff800000104b03	kernel.asm	/^ffff800000104b03:	80 ff ff $/;"	l
ffff800000104b06	kernel.asm	/^ffff800000104b06:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff800000104b09	kernel.asm	/^ffff800000104b09:	48 85 c0             	test   %rax,%rax$/;"	l
ffff800000104b0c	kernel.asm	/^ffff800000104b0c:	75 0a                	jne    ffff800000104b18 <cpunum+0x7b>$/;"	l
ffff800000104b0e	kernel.asm	/^ffff800000104b0e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000104b13	kernel.asm	/^ffff800000104b13:	e9 8b 00 00 00       	jmpq   ffff800000104ba3 <cpunum+0x106>$/;"	l
ffff800000104b18	kernel.asm	/^ffff800000104b18:	48 b8 00 b2 11 00 00 	movabs $0xffff80000011b200,%rax$/;"	l
ffff800000104b1f	kernel.asm	/^ffff800000104b1f:	80 ff ff $/;"	l
ffff800000104b22	kernel.asm	/^ffff800000104b22:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff800000104b25	kernel.asm	/^ffff800000104b25:	48 83 c0 20          	add    $0x20,%rax$/;"	l
ffff800000104b29	kernel.asm	/^ffff800000104b29:	8b 00                	mov    (%rax),%eax$/;"	l
ffff800000104b2b	kernel.asm	/^ffff800000104b2b:	c1 e8 18             	shr    $0x18,%eax$/;"	l
ffff800000104b2e	kernel.asm	/^ffff800000104b2e:	89 45 f8             	mov    %eax,-0x8(%rbp)$/;"	l
ffff800000104b31	kernel.asm	/^ffff800000104b31:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)$/;"	l
ffff800000104b38	kernel.asm	/^ffff800000104b38:	eb 42                	jmp    ffff800000104b7c <cpunum+0xdf>$/;"	l
ffff800000104b3a	kernel.asm	/^ffff800000104b3a:	48 b9 20 b3 11 00 00 	movabs $0xffff80000011b320,%rcx$/;"	l
ffff800000104b41	kernel.asm	/^ffff800000104b41:	80 ff ff $/;"	l
ffff800000104b44	kernel.asm	/^ffff800000104b44:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff800000104b47	kernel.asm	/^ffff800000104b47:	48 98                	cltq   $/;"	l
ffff800000104b49	kernel.asm	/^ffff800000104b49:	48 89 c2             	mov    %rax,%rdx$/;"	l
ffff800000104b4c	kernel.asm	/^ffff800000104b4c:	48 8d 04 d5 00 00 00 	lea    0x0(,%rdx,8),%rax$/;"	l
ffff800000104b53	kernel.asm	/^ffff800000104b53:	00 $/;"	l
ffff800000104b54	kernel.asm	/^ffff800000104b54:	48 89 c2             	mov    %rax,%rdx$/;"	l
ffff800000104b57	kernel.asm	/^ffff800000104b57:	48 89 d0             	mov    %rdx,%rax$/;"	l
ffff800000104b5a	kernel.asm	/^ffff800000104b5a:	48 c1 e0 05          	shl    $0x5,%rax$/;"	l
ffff800000104b5e	kernel.asm	/^ffff800000104b5e:	48 29 d0             	sub    %rdx,%rax$/;"	l
ffff800000104b61	kernel.asm	/^ffff800000104b61:	48 01 c8             	add    %rcx,%rax$/;"	l
ffff800000104b64	kernel.asm	/^ffff800000104b64:	48 83 c0 01          	add    $0x1,%rax$/;"	l
ffff800000104b68	kernel.asm	/^ffff800000104b68:	0f b6 00             	movzbl (%rax),%eax$/;"	l
ffff800000104b6b	kernel.asm	/^ffff800000104b6b:	0f b6 c0             	movzbl %al,%eax$/;"	l
ffff800000104b6e	kernel.asm	/^ffff800000104b6e:	3b 45 f8             	cmp    -0x8(%rbp),%eax$/;"	l
ffff800000104b71	kernel.asm	/^ffff800000104b71:	75 05                	jne    ffff800000104b78 <cpunum+0xdb>$/;"	l
ffff800000104b73	kernel.asm	/^ffff800000104b73:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff800000104b76	kernel.asm	/^ffff800000104b76:	eb 2b                	jmp    ffff800000104ba3 <cpunum+0x106>$/;"	l
ffff800000104b78	kernel.asm	/^ffff800000104b78:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)$/;"	l
ffff800000104b7c	kernel.asm	/^ffff800000104b7c:	48 b8 e0 ba 11 00 00 	movabs $0xffff80000011bae0,%rax$/;"	l
ffff800000104b83	kernel.asm	/^ffff800000104b83:	80 ff ff $/;"	l
ffff800000104b86	kernel.asm	/^ffff800000104b86:	8b 00                	mov    (%rax),%eax$/;"	l
ffff800000104b88	kernel.asm	/^ffff800000104b88:	39 45 fc             	cmp    %eax,-0x4(%rbp)$/;"	l
ffff800000104b8b	kernel.asm	/^ffff800000104b8b:	7c ad                	jl     ffff800000104b3a <cpunum+0x9d>$/;"	l
ffff800000104b8d	kernel.asm	/^ffff800000104b8d:	48 bf e4 d6 10 00 00 	movabs $0xffff80000010d6e4,%rdi$/;"	l
ffff800000104b94	kernel.asm	/^ffff800000104b94:	80 ff ff $/;"	l
ffff800000104b97	kernel.asm	/^ffff800000104b97:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff800000104b9e	kernel.asm	/^ffff800000104b9e:	80 ff ff $/;"	l
ffff800000104ba1	kernel.asm	/^ffff800000104ba1:	ff d0                	callq  *%rax$/;"	l
ffff800000104ba3	kernel.asm	/^ffff800000104ba3:	c9                   	leaveq $/;"	l
ffff800000104ba4	kernel.asm	/^ffff800000104ba4:	c3                   	retq   $/;"	l
ffff800000104ba5	kernel.asm	/^ffff800000104ba5 <lapiceoi>:$/;"	l
ffff800000104ba5	kernel.asm	/^ffff800000104ba5:	55                   	push   %rbp$/;"	l
ffff800000104ba6	kernel.asm	/^ffff800000104ba6:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000104ba9	kernel.asm	/^ffff800000104ba9:	48 b8 00 b2 11 00 00 	movabs $0xffff80000011b200,%rax$/;"	l
ffff800000104bb0	kernel.asm	/^ffff800000104bb0:	80 ff ff $/;"	l
ffff800000104bb3	kernel.asm	/^ffff800000104bb3:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff800000104bb6	kernel.asm	/^ffff800000104bb6:	48 85 c0             	test   %rax,%rax$/;"	l
ffff800000104bb9	kernel.asm	/^ffff800000104bb9:	74 16                	je     ffff800000104bd1 <lapiceoi+0x2c>$/;"	l
ffff800000104bbb	kernel.asm	/^ffff800000104bbb:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffff800000104bc0	kernel.asm	/^ffff800000104bc0:	bf 2c 00 00 00       	mov    $0x2c,%edi$/;"	l
ffff800000104bc5	kernel.asm	/^ffff800000104bc5:	48 b8 ca 48 10 00 00 	movabs $0xffff8000001048ca,%rax$/;"	l
ffff800000104bcc	kernel.asm	/^ffff800000104bcc:	80 ff ff $/;"	l
ffff800000104bcf	kernel.asm	/^ffff800000104bcf:	ff d0                	callq  *%rax$/;"	l
ffff800000104bd1	kernel.asm	/^ffff800000104bd1:	90                   	nop$/;"	l
ffff800000104bd2	kernel.asm	/^ffff800000104bd2:	5d                   	pop    %rbp$/;"	l
ffff800000104bd3	kernel.asm	/^ffff800000104bd3:	c3                   	retq   $/;"	l
ffff800000104bd4	kernel.asm	/^ffff800000104bd4 <microdelay>:$/;"	l
ffff800000104bd4	kernel.asm	/^ffff800000104bd4:	55                   	push   %rbp$/;"	l
ffff800000104bd5	kernel.asm	/^ffff800000104bd5:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000104bd8	kernel.asm	/^ffff800000104bd8:	48 83 ec 08          	sub    $0x8,%rsp$/;"	l
ffff800000104bdc	kernel.asm	/^ffff800000104bdc:	89 7d fc             	mov    %edi,-0x4(%rbp)$/;"	l
ffff800000104bdf	kernel.asm	/^ffff800000104bdf:	90                   	nop$/;"	l
ffff800000104be0	kernel.asm	/^ffff800000104be0:	c9                   	leaveq $/;"	l
ffff800000104be1	kernel.asm	/^ffff800000104be1:	c3                   	retq   $/;"	l
ffff800000104be2	kernel.asm	/^ffff800000104be2 <lapicstartap>:$/;"	l
ffff800000104be2	kernel.asm	/^ffff800000104be2:	55                   	push   %rbp$/;"	l
ffff800000104be3	kernel.asm	/^ffff800000104be3:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000104be6	kernel.asm	/^ffff800000104be6:	48 83 ec 18          	sub    $0x18,%rsp$/;"	l
ffff800000104bea	kernel.asm	/^ffff800000104bea:	89 f8                	mov    %edi,%eax$/;"	l
ffff800000104bec	kernel.asm	/^ffff800000104bec:	89 75 e8             	mov    %esi,-0x18(%rbp)$/;"	l
ffff800000104bef	kernel.asm	/^ffff800000104bef:	88 45 ec             	mov    %al,-0x14(%rbp)$/;"	l
ffff800000104bf2	kernel.asm	/^ffff800000104bf2:	be 0f 00 00 00       	mov    $0xf,%esi$/;"	l
ffff800000104bf7	kernel.asm	/^ffff800000104bf7:	bf 70 00 00 00       	mov    $0x70,%edi$/;"	l
ffff800000104bfc	kernel.asm	/^ffff800000104bfc:	48 b8 97 48 10 00 00 	movabs $0xffff800000104897,%rax$/;"	l
ffff800000104c03	kernel.asm	/^ffff800000104c03:	80 ff ff $/;"	l
ffff800000104c06	kernel.asm	/^ffff800000104c06:	ff d0                	callq  *%rax$/;"	l
ffff800000104c08	kernel.asm	/^ffff800000104c08:	be 0a 00 00 00       	mov    $0xa,%esi$/;"	l
ffff800000104c0d	kernel.asm	/^ffff800000104c0d:	bf 71 00 00 00       	mov    $0x71,%edi$/;"	l
ffff800000104c12	kernel.asm	/^ffff800000104c12:	48 b8 97 48 10 00 00 	movabs $0xffff800000104897,%rax$/;"	l
ffff800000104c19	kernel.asm	/^ffff800000104c19:	80 ff ff $/;"	l
ffff800000104c1c	kernel.asm	/^ffff800000104c1c:	ff d0                	callq  *%rax$/;"	l
ffff800000104c1e	kernel.asm	/^ffff800000104c1e:	48 b8 67 04 00 00 00 	movabs $0xffff800000000467,%rax$/;"	l
ffff800000104c25	kernel.asm	/^ffff800000104c25:	80 ff ff $/;"	l
ffff800000104c28	kernel.asm	/^ffff800000104c28:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ffff800000104c2c	kernel.asm	/^ffff800000104c2c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000104c30	kernel.asm	/^ffff800000104c30:	66 c7 00 00 00       	movw   $0x0,(%rax)$/;"	l
ffff800000104c35	kernel.asm	/^ffff800000104c35:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000104c39	kernel.asm	/^ffff800000104c39:	48 83 c0 02          	add    $0x2,%rax$/;"	l
ffff800000104c3d	kernel.asm	/^ffff800000104c3d:	8b 55 e8             	mov    -0x18(%rbp),%edx$/;"	l
ffff800000104c40	kernel.asm	/^ffff800000104c40:	c1 ea 04             	shr    $0x4,%edx$/;"	l
ffff800000104c43	kernel.asm	/^ffff800000104c43:	66 89 10             	mov    %dx,(%rax)$/;"	l
ffff800000104c46	kernel.asm	/^ffff800000104c46:	0f b6 45 ec          	movzbl -0x14(%rbp),%eax$/;"	l
ffff800000104c4a	kernel.asm	/^ffff800000104c4a:	c1 e0 18             	shl    $0x18,%eax$/;"	l
ffff800000104c4d	kernel.asm	/^ffff800000104c4d:	89 c6                	mov    %eax,%esi$/;"	l
ffff800000104c4f	kernel.asm	/^ffff800000104c4f:	bf c4 00 00 00       	mov    $0xc4,%edi$/;"	l
ffff800000104c54	kernel.asm	/^ffff800000104c54:	48 b8 ca 48 10 00 00 	movabs $0xffff8000001048ca,%rax$/;"	l
ffff800000104c5b	kernel.asm	/^ffff800000104c5b:	80 ff ff $/;"	l
ffff800000104c5e	kernel.asm	/^ffff800000104c5e:	ff d0                	callq  *%rax$/;"	l
ffff800000104c60	kernel.asm	/^ffff800000104c60:	be 00 c5 00 00       	mov    $0xc500,%esi$/;"	l
ffff800000104c65	kernel.asm	/^ffff800000104c65:	bf c0 00 00 00       	mov    $0xc0,%edi$/;"	l
ffff800000104c6a	kernel.asm	/^ffff800000104c6a:	48 b8 ca 48 10 00 00 	movabs $0xffff8000001048ca,%rax$/;"	l
ffff800000104c71	kernel.asm	/^ffff800000104c71:	80 ff ff $/;"	l
ffff800000104c74	kernel.asm	/^ffff800000104c74:	ff d0                	callq  *%rax$/;"	l
ffff800000104c76	kernel.asm	/^ffff800000104c76:	bf c8 00 00 00       	mov    $0xc8,%edi$/;"	l
ffff800000104c7b	kernel.asm	/^ffff800000104c7b:	48 b8 d4 4b 10 00 00 	movabs $0xffff800000104bd4,%rax$/;"	l
ffff800000104c82	kernel.asm	/^ffff800000104c82:	80 ff ff $/;"	l
ffff800000104c85	kernel.asm	/^ffff800000104c85:	ff d0                	callq  *%rax$/;"	l
ffff800000104c87	kernel.asm	/^ffff800000104c87:	be 00 85 00 00       	mov    $0x8500,%esi$/;"	l
ffff800000104c8c	kernel.asm	/^ffff800000104c8c:	bf c0 00 00 00       	mov    $0xc0,%edi$/;"	l
ffff800000104c91	kernel.asm	/^ffff800000104c91:	48 b8 ca 48 10 00 00 	movabs $0xffff8000001048ca,%rax$/;"	l
ffff800000104c98	kernel.asm	/^ffff800000104c98:	80 ff ff $/;"	l
ffff800000104c9b	kernel.asm	/^ffff800000104c9b:	ff d0                	callq  *%rax$/;"	l
ffff800000104c9d	kernel.asm	/^ffff800000104c9d:	bf 64 00 00 00       	mov    $0x64,%edi$/;"	l
ffff800000104ca2	kernel.asm	/^ffff800000104ca2:	48 b8 d4 4b 10 00 00 	movabs $0xffff800000104bd4,%rax$/;"	l
ffff800000104ca9	kernel.asm	/^ffff800000104ca9:	80 ff ff $/;"	l
ffff800000104cac	kernel.asm	/^ffff800000104cac:	ff d0                	callq  *%rax$/;"	l
ffff800000104cae	kernel.asm	/^ffff800000104cae:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)$/;"	l
ffff800000104cb5	kernel.asm	/^ffff800000104cb5:	eb 4b                	jmp    ffff800000104d02 <lapicstartap+0x120>$/;"	l
ffff800000104cb7	kernel.asm	/^ffff800000104cb7:	0f b6 45 ec          	movzbl -0x14(%rbp),%eax$/;"	l
ffff800000104cbb	kernel.asm	/^ffff800000104cbb:	c1 e0 18             	shl    $0x18,%eax$/;"	l
ffff800000104cbe	kernel.asm	/^ffff800000104cbe:	89 c6                	mov    %eax,%esi$/;"	l
ffff800000104cc0	kernel.asm	/^ffff800000104cc0:	bf c4 00 00 00       	mov    $0xc4,%edi$/;"	l
ffff800000104cc5	kernel.asm	/^ffff800000104cc5:	48 b8 ca 48 10 00 00 	movabs $0xffff8000001048ca,%rax$/;"	l
ffff800000104ccc	kernel.asm	/^ffff800000104ccc:	80 ff ff $/;"	l
ffff800000104ccf	kernel.asm	/^ffff800000104ccf:	ff d0                	callq  *%rax$/;"	l
ffff800000104cd1	kernel.asm	/^ffff800000104cd1:	8b 45 e8             	mov    -0x18(%rbp),%eax$/;"	l
ffff800000104cd4	kernel.asm	/^ffff800000104cd4:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
ffff800000104cd7	kernel.asm	/^ffff800000104cd7:	80 cc 06             	or     $0x6,%ah$/;"	l
ffff800000104cda	kernel.asm	/^ffff800000104cda:	89 c6                	mov    %eax,%esi$/;"	l
ffff800000104cdc	kernel.asm	/^ffff800000104cdc:	bf c0 00 00 00       	mov    $0xc0,%edi$/;"	l
ffff800000104ce1	kernel.asm	/^ffff800000104ce1:	48 b8 ca 48 10 00 00 	movabs $0xffff8000001048ca,%rax$/;"	l
ffff800000104ce8	kernel.asm	/^ffff800000104ce8:	80 ff ff $/;"	l
ffff800000104ceb	kernel.asm	/^ffff800000104ceb:	ff d0                	callq  *%rax$/;"	l
ffff800000104ced	kernel.asm	/^ffff800000104ced:	bf c8 00 00 00       	mov    $0xc8,%edi$/;"	l
ffff800000104cf2	kernel.asm	/^ffff800000104cf2:	48 b8 d4 4b 10 00 00 	movabs $0xffff800000104bd4,%rax$/;"	l
ffff800000104cf9	kernel.asm	/^ffff800000104cf9:	80 ff ff $/;"	l
ffff800000104cfc	kernel.asm	/^ffff800000104cfc:	ff d0                	callq  *%rax$/;"	l
ffff800000104cfe	kernel.asm	/^ffff800000104cfe:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)$/;"	l
ffff800000104d02	kernel.asm	/^ffff800000104d02:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)$/;"	l
ffff800000104d06	kernel.asm	/^ffff800000104d06:	7e af                	jle    ffff800000104cb7 <lapicstartap+0xd5>$/;"	l
ffff800000104d08	kernel.asm	/^ffff800000104d08:	90                   	nop$/;"	l
ffff800000104d09	kernel.asm	/^ffff800000104d09:	c9                   	leaveq $/;"	l
ffff800000104d0a	kernel.asm	/^ffff800000104d0a:	c3                   	retq   $/;"	l
ffff800000104d0b	kernel.asm	/^ffff800000104d0b <cmos_read>:$/;"	l
ffff800000104d0b	kernel.asm	/^ffff800000104d0b:	55                   	push   %rbp$/;"	l
ffff800000104d0c	kernel.asm	/^ffff800000104d0c:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000104d0f	kernel.asm	/^ffff800000104d0f:	48 83 ec 08          	sub    $0x8,%rsp$/;"	l
ffff800000104d13	kernel.asm	/^ffff800000104d13:	89 7d fc             	mov    %edi,-0x4(%rbp)$/;"	l
ffff800000104d16	kernel.asm	/^ffff800000104d16:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff800000104d19	kernel.asm	/^ffff800000104d19:	0f b6 c0             	movzbl %al,%eax$/;"	l
ffff800000104d1c	kernel.asm	/^ffff800000104d1c:	89 c6                	mov    %eax,%esi$/;"	l
ffff800000104d1e	kernel.asm	/^ffff800000104d1e:	bf 70 00 00 00       	mov    $0x70,%edi$/;"	l
ffff800000104d23	kernel.asm	/^ffff800000104d23:	48 b8 97 48 10 00 00 	movabs $0xffff800000104897,%rax$/;"	l
ffff800000104d2a	kernel.asm	/^ffff800000104d2a:	80 ff ff $/;"	l
ffff800000104d2d	kernel.asm	/^ffff800000104d2d:	ff d0                	callq  *%rax$/;"	l
ffff800000104d2f	kernel.asm	/^ffff800000104d2f:	bf c8 00 00 00       	mov    $0xc8,%edi$/;"	l
ffff800000104d34	kernel.asm	/^ffff800000104d34:	48 b8 d4 4b 10 00 00 	movabs $0xffff800000104bd4,%rax$/;"	l
ffff800000104d3b	kernel.asm	/^ffff800000104d3b:	80 ff ff $/;"	l
ffff800000104d3e	kernel.asm	/^ffff800000104d3e:	ff d0                	callq  *%rax$/;"	l
ffff800000104d40	kernel.asm	/^ffff800000104d40:	bf 71 00 00 00       	mov    $0x71,%edi$/;"	l
ffff800000104d45	kernel.asm	/^ffff800000104d45:	48 b8 79 48 10 00 00 	movabs $0xffff800000104879,%rax$/;"	l
ffff800000104d4c	kernel.asm	/^ffff800000104d4c:	80 ff ff $/;"	l
ffff800000104d4f	kernel.asm	/^ffff800000104d4f:	ff d0                	callq  *%rax$/;"	l
ffff800000104d51	kernel.asm	/^ffff800000104d51:	0f b6 c0             	movzbl %al,%eax$/;"	l
ffff800000104d54	kernel.asm	/^ffff800000104d54:	c9                   	leaveq $/;"	l
ffff800000104d55	kernel.asm	/^ffff800000104d55:	c3                   	retq   $/;"	l
ffff800000104d56	kernel.asm	/^ffff800000104d56 <fill_rtcdate>:$/;"	l
ffff800000104d56	kernel.asm	/^ffff800000104d56:	55                   	push   %rbp$/;"	l
ffff800000104d57	kernel.asm	/^ffff800000104d57:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000104d5a	kernel.asm	/^ffff800000104d5a:	48 83 ec 08          	sub    $0x8,%rsp$/;"	l
ffff800000104d5e	kernel.asm	/^ffff800000104d5e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)$/;"	l
ffff800000104d62	kernel.asm	/^ffff800000104d62:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
ffff800000104d67	kernel.asm	/^ffff800000104d67:	48 b8 0b 4d 10 00 00 	movabs $0xffff800000104d0b,%rax$/;"	l
ffff800000104d6e	kernel.asm	/^ffff800000104d6e:	80 ff ff $/;"	l
ffff800000104d71	kernel.asm	/^ffff800000104d71:	ff d0                	callq  *%rax$/;"	l
ffff800000104d73	kernel.asm	/^ffff800000104d73:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000104d75	kernel.asm	/^ffff800000104d75:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000104d79	kernel.asm	/^ffff800000104d79:	89 10                	mov    %edx,(%rax)$/;"	l
ffff800000104d7b	kernel.asm	/^ffff800000104d7b:	bf 02 00 00 00       	mov    $0x2,%edi$/;"	l
ffff800000104d80	kernel.asm	/^ffff800000104d80:	48 b8 0b 4d 10 00 00 	movabs $0xffff800000104d0b,%rax$/;"	l
ffff800000104d87	kernel.asm	/^ffff800000104d87:	80 ff ff $/;"	l
ffff800000104d8a	kernel.asm	/^ffff800000104d8a:	ff d0                	callq  *%rax$/;"	l
ffff800000104d8c	kernel.asm	/^ffff800000104d8c:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000104d8e	kernel.asm	/^ffff800000104d8e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000104d92	kernel.asm	/^ffff800000104d92:	89 50 04             	mov    %edx,0x4(%rax)$/;"	l
ffff800000104d95	kernel.asm	/^ffff800000104d95:	bf 04 00 00 00       	mov    $0x4,%edi$/;"	l
ffff800000104d9a	kernel.asm	/^ffff800000104d9a:	48 b8 0b 4d 10 00 00 	movabs $0xffff800000104d0b,%rax$/;"	l
ffff800000104da1	kernel.asm	/^ffff800000104da1:	80 ff ff $/;"	l
ffff800000104da4	kernel.asm	/^ffff800000104da4:	ff d0                	callq  *%rax$/;"	l
ffff800000104da6	kernel.asm	/^ffff800000104da6:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000104da8	kernel.asm	/^ffff800000104da8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000104dac	kernel.asm	/^ffff800000104dac:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
ffff800000104daf	kernel.asm	/^ffff800000104daf:	bf 07 00 00 00       	mov    $0x7,%edi$/;"	l
ffff800000104db4	kernel.asm	/^ffff800000104db4:	48 b8 0b 4d 10 00 00 	movabs $0xffff800000104d0b,%rax$/;"	l
ffff800000104dbb	kernel.asm	/^ffff800000104dbb:	80 ff ff $/;"	l
ffff800000104dbe	kernel.asm	/^ffff800000104dbe:	ff d0                	callq  *%rax$/;"	l
ffff800000104dc0	kernel.asm	/^ffff800000104dc0:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000104dc2	kernel.asm	/^ffff800000104dc2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000104dc6	kernel.asm	/^ffff800000104dc6:	89 50 0c             	mov    %edx,0xc(%rax)$/;"	l
ffff800000104dc9	kernel.asm	/^ffff800000104dc9:	bf 08 00 00 00       	mov    $0x8,%edi$/;"	l
ffff800000104dce	kernel.asm	/^ffff800000104dce:	48 b8 0b 4d 10 00 00 	movabs $0xffff800000104d0b,%rax$/;"	l
ffff800000104dd5	kernel.asm	/^ffff800000104dd5:	80 ff ff $/;"	l
ffff800000104dd8	kernel.asm	/^ffff800000104dd8:	ff d0                	callq  *%rax$/;"	l
ffff800000104dda	kernel.asm	/^ffff800000104dda:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000104ddc	kernel.asm	/^ffff800000104ddc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000104de0	kernel.asm	/^ffff800000104de0:	89 50 10             	mov    %edx,0x10(%rax)$/;"	l
ffff800000104de3	kernel.asm	/^ffff800000104de3:	bf 09 00 00 00       	mov    $0x9,%edi$/;"	l
ffff800000104de8	kernel.asm	/^ffff800000104de8:	48 b8 0b 4d 10 00 00 	movabs $0xffff800000104d0b,%rax$/;"	l
ffff800000104def	kernel.asm	/^ffff800000104def:	80 ff ff $/;"	l
ffff800000104df2	kernel.asm	/^ffff800000104df2:	ff d0                	callq  *%rax$/;"	l
ffff800000104df4	kernel.asm	/^ffff800000104df4:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000104df6	kernel.asm	/^ffff800000104df6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000104dfa	kernel.asm	/^ffff800000104dfa:	89 50 14             	mov    %edx,0x14(%rax)$/;"	l
ffff800000104dfd	kernel.asm	/^ffff800000104dfd:	90                   	nop$/;"	l
ffff800000104dfe	kernel.asm	/^ffff800000104dfe:	c9                   	leaveq $/;"	l
ffff800000104dff	kernel.asm	/^ffff800000104dff:	c3                   	retq   $/;"	l
ffff800000104e00	kernel.asm	/^ffff800000104e00 <cmostime>:$/;"	l
ffff800000104e00	kernel.asm	/^ffff800000104e00:	55                   	push   %rbp$/;"	l
ffff800000104e01	kernel.asm	/^ffff800000104e01:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000104e04	kernel.asm	/^ffff800000104e04:	48 83 ec 50          	sub    $0x50,%rsp$/;"	l
ffff800000104e08	kernel.asm	/^ffff800000104e08:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)$/;"	l
ffff800000104e0c	kernel.asm	/^ffff800000104e0c:	bf 0b 00 00 00       	mov    $0xb,%edi$/;"	l
ffff800000104e11	kernel.asm	/^ffff800000104e11:	48 b8 0b 4d 10 00 00 	movabs $0xffff800000104d0b,%rax$/;"	l
ffff800000104e18	kernel.asm	/^ffff800000104e18:	80 ff ff $/;"	l
ffff800000104e1b	kernel.asm	/^ffff800000104e1b:	ff d0                	callq  *%rax$/;"	l
ffff800000104e1d	kernel.asm	/^ffff800000104e1d:	89 45 fc             	mov    %eax,-0x4(%rbp)$/;"	l
ffff800000104e20	kernel.asm	/^ffff800000104e20:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff800000104e23	kernel.asm	/^ffff800000104e23:	83 e0 04             	and    $0x4,%eax$/;"	l
ffff800000104e26	kernel.asm	/^ffff800000104e26:	85 c0                	test   %eax,%eax$/;"	l
ffff800000104e28	kernel.asm	/^ffff800000104e28:	0f 94 c0             	sete   %al$/;"	l
ffff800000104e2b	kernel.asm	/^ffff800000104e2b:	0f b6 c0             	movzbl %al,%eax$/;"	l
ffff800000104e2e	kernel.asm	/^ffff800000104e2e:	89 45 f8             	mov    %eax,-0x8(%rbp)$/;"	l
ffff800000104e31	kernel.asm	/^ffff800000104e31:	48 8d 45 e0          	lea    -0x20(%rbp),%rax$/;"	l
ffff800000104e35	kernel.asm	/^ffff800000104e35:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000104e38	kernel.asm	/^ffff800000104e38:	48 b8 56 4d 10 00 00 	movabs $0xffff800000104d56,%rax$/;"	l
ffff800000104e3f	kernel.asm	/^ffff800000104e3f:	80 ff ff $/;"	l
ffff800000104e42	kernel.asm	/^ffff800000104e42:	ff d0                	callq  *%rax$/;"	l
ffff800000104e44	kernel.asm	/^ffff800000104e44:	bf 0a 00 00 00       	mov    $0xa,%edi$/;"	l
ffff800000104e49	kernel.asm	/^ffff800000104e49:	48 b8 0b 4d 10 00 00 	movabs $0xffff800000104d0b,%rax$/;"	l
ffff800000104e50	kernel.asm	/^ffff800000104e50:	80 ff ff $/;"	l
ffff800000104e53	kernel.asm	/^ffff800000104e53:	ff d0                	callq  *%rax$/;"	l
ffff800000104e55	kernel.asm	/^ffff800000104e55:	25 80 00 00 00       	and    $0x80,%eax$/;"	l
ffff800000104e5a	kernel.asm	/^ffff800000104e5a:	85 c0                	test   %eax,%eax$/;"	l
ffff800000104e5c	kernel.asm	/^ffff800000104e5c:	75 38                	jne    ffff800000104e96 <cmostime+0x96>$/;"	l
ffff800000104e5e	kernel.asm	/^ffff800000104e5e:	48 8d 45 c0          	lea    -0x40(%rbp),%rax$/;"	l
ffff800000104e62	kernel.asm	/^ffff800000104e62:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000104e65	kernel.asm	/^ffff800000104e65:	48 b8 56 4d 10 00 00 	movabs $0xffff800000104d56,%rax$/;"	l
ffff800000104e6c	kernel.asm	/^ffff800000104e6c:	80 ff ff $/;"	l
ffff800000104e6f	kernel.asm	/^ffff800000104e6f:	ff d0                	callq  *%rax$/;"	l
ffff800000104e71	kernel.asm	/^ffff800000104e71:	48 8d 4d c0          	lea    -0x40(%rbp),%rcx$/;"	l
ffff800000104e75	kernel.asm	/^ffff800000104e75:	48 8d 45 e0          	lea    -0x20(%rbp),%rax$/;"	l
ffff800000104e79	kernel.asm	/^ffff800000104e79:	ba 18 00 00 00       	mov    $0x18,%edx$/;"	l
ffff800000104e7e	kernel.asm	/^ffff800000104e7e:	48 89 ce             	mov    %rcx,%rsi$/;"	l
ffff800000104e81	kernel.asm	/^ffff800000104e81:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000104e84	kernel.asm	/^ffff800000104e84:	48 b8 00 7c 10 00 00 	movabs $0xffff800000107c00,%rax$/;"	l
ffff800000104e8b	kernel.asm	/^ffff800000104e8b:	80 ff ff $/;"	l
ffff800000104e8e	kernel.asm	/^ffff800000104e8e:	ff d0                	callq  *%rax$/;"	l
ffff800000104e90	kernel.asm	/^ffff800000104e90:	85 c0                	test   %eax,%eax$/;"	l
ffff800000104e92	kernel.asm	/^ffff800000104e92:	74 05                	je     ffff800000104e99 <cmostime+0x99>$/;"	l
ffff800000104e94	kernel.asm	/^ffff800000104e94:	eb 9b                	jmp    ffff800000104e31 <cmostime+0x31>$/;"	l
ffff800000104e96	kernel.asm	/^ffff800000104e96:	90                   	nop$/;"	l
ffff800000104e97	kernel.asm	/^ffff800000104e97:	eb 98                	jmp    ffff800000104e31 <cmostime+0x31>$/;"	l
ffff800000104e99	kernel.asm	/^ffff800000104e99:	90                   	nop$/;"	l
ffff800000104e9a	kernel.asm	/^ffff800000104e9a:	83 7d f8 00          	cmpl   $0x0,-0x8(%rbp)$/;"	l
ffff800000104e9e	kernel.asm	/^ffff800000104e9e:	0f 84 b4 00 00 00    	je     ffff800000104f58 <cmostime+0x158>$/;"	l
ffff800000104ea4	kernel.asm	/^ffff800000104ea4:	8b 45 e0             	mov    -0x20(%rbp),%eax$/;"	l
ffff800000104ea7	kernel.asm	/^ffff800000104ea7:	c1 e8 04             	shr    $0x4,%eax$/;"	l
ffff800000104eaa	kernel.asm	/^ffff800000104eaa:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000104eac	kernel.asm	/^ffff800000104eac:	89 d0                	mov    %edx,%eax$/;"	l
ffff800000104eae	kernel.asm	/^ffff800000104eae:	c1 e0 02             	shl    $0x2,%eax$/;"	l
ffff800000104eb1	kernel.asm	/^ffff800000104eb1:	01 d0                	add    %edx,%eax$/;"	l
ffff800000104eb3	kernel.asm	/^ffff800000104eb3:	01 c0                	add    %eax,%eax$/;"	l
ffff800000104eb5	kernel.asm	/^ffff800000104eb5:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000104eb7	kernel.asm	/^ffff800000104eb7:	8b 45 e0             	mov    -0x20(%rbp),%eax$/;"	l
ffff800000104eba	kernel.asm	/^ffff800000104eba:	83 e0 0f             	and    $0xf,%eax$/;"	l
ffff800000104ebd	kernel.asm	/^ffff800000104ebd:	01 d0                	add    %edx,%eax$/;"	l
ffff800000104ebf	kernel.asm	/^ffff800000104ebf:	89 45 e0             	mov    %eax,-0x20(%rbp)$/;"	l
ffff800000104ec2	kernel.asm	/^ffff800000104ec2:	8b 45 e4             	mov    -0x1c(%rbp),%eax$/;"	l
ffff800000104ec5	kernel.asm	/^ffff800000104ec5:	c1 e8 04             	shr    $0x4,%eax$/;"	l
ffff800000104ec8	kernel.asm	/^ffff800000104ec8:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000104eca	kernel.asm	/^ffff800000104eca:	89 d0                	mov    %edx,%eax$/;"	l
ffff800000104ecc	kernel.asm	/^ffff800000104ecc:	c1 e0 02             	shl    $0x2,%eax$/;"	l
ffff800000104ecf	kernel.asm	/^ffff800000104ecf:	01 d0                	add    %edx,%eax$/;"	l
ffff800000104ed1	kernel.asm	/^ffff800000104ed1:	01 c0                	add    %eax,%eax$/;"	l
ffff800000104ed3	kernel.asm	/^ffff800000104ed3:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000104ed5	kernel.asm	/^ffff800000104ed5:	8b 45 e4             	mov    -0x1c(%rbp),%eax$/;"	l
ffff800000104ed8	kernel.asm	/^ffff800000104ed8:	83 e0 0f             	and    $0xf,%eax$/;"	l
ffff800000104edb	kernel.asm	/^ffff800000104edb:	01 d0                	add    %edx,%eax$/;"	l
ffff800000104edd	kernel.asm	/^ffff800000104edd:	89 45 e4             	mov    %eax,-0x1c(%rbp)$/;"	l
ffff800000104ee0	kernel.asm	/^ffff800000104ee0:	8b 45 e8             	mov    -0x18(%rbp),%eax$/;"	l
ffff800000104ee3	kernel.asm	/^ffff800000104ee3:	c1 e8 04             	shr    $0x4,%eax$/;"	l
ffff800000104ee6	kernel.asm	/^ffff800000104ee6:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000104ee8	kernel.asm	/^ffff800000104ee8:	89 d0                	mov    %edx,%eax$/;"	l
ffff800000104eea	kernel.asm	/^ffff800000104eea:	c1 e0 02             	shl    $0x2,%eax$/;"	l
ffff800000104eed	kernel.asm	/^ffff800000104eed:	01 d0                	add    %edx,%eax$/;"	l
ffff800000104eef	kernel.asm	/^ffff800000104eef:	01 c0                	add    %eax,%eax$/;"	l
ffff800000104ef1	kernel.asm	/^ffff800000104ef1:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000104ef3	kernel.asm	/^ffff800000104ef3:	8b 45 e8             	mov    -0x18(%rbp),%eax$/;"	l
ffff800000104ef6	kernel.asm	/^ffff800000104ef6:	83 e0 0f             	and    $0xf,%eax$/;"	l
ffff800000104ef9	kernel.asm	/^ffff800000104ef9:	01 d0                	add    %edx,%eax$/;"	l
ffff800000104efb	kernel.asm	/^ffff800000104efb:	89 45 e8             	mov    %eax,-0x18(%rbp)$/;"	l
ffff800000104efe	kernel.asm	/^ffff800000104efe:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
ffff800000104f01	kernel.asm	/^ffff800000104f01:	c1 e8 04             	shr    $0x4,%eax$/;"	l
ffff800000104f04	kernel.asm	/^ffff800000104f04:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000104f06	kernel.asm	/^ffff800000104f06:	89 d0                	mov    %edx,%eax$/;"	l
ffff800000104f08	kernel.asm	/^ffff800000104f08:	c1 e0 02             	shl    $0x2,%eax$/;"	l
ffff800000104f0b	kernel.asm	/^ffff800000104f0b:	01 d0                	add    %edx,%eax$/;"	l
ffff800000104f0d	kernel.asm	/^ffff800000104f0d:	01 c0                	add    %eax,%eax$/;"	l
ffff800000104f0f	kernel.asm	/^ffff800000104f0f:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000104f11	kernel.asm	/^ffff800000104f11:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
ffff800000104f14	kernel.asm	/^ffff800000104f14:	83 e0 0f             	and    $0xf,%eax$/;"	l
ffff800000104f17	kernel.asm	/^ffff800000104f17:	01 d0                	add    %edx,%eax$/;"	l
ffff800000104f19	kernel.asm	/^ffff800000104f19:	89 45 ec             	mov    %eax,-0x14(%rbp)$/;"	l
ffff800000104f1c	kernel.asm	/^ffff800000104f1c:	8b 45 f0             	mov    -0x10(%rbp),%eax$/;"	l
ffff800000104f1f	kernel.asm	/^ffff800000104f1f:	c1 e8 04             	shr    $0x4,%eax$/;"	l
ffff800000104f22	kernel.asm	/^ffff800000104f22:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000104f24	kernel.asm	/^ffff800000104f24:	89 d0                	mov    %edx,%eax$/;"	l
ffff800000104f26	kernel.asm	/^ffff800000104f26:	c1 e0 02             	shl    $0x2,%eax$/;"	l
ffff800000104f29	kernel.asm	/^ffff800000104f29:	01 d0                	add    %edx,%eax$/;"	l
ffff800000104f2b	kernel.asm	/^ffff800000104f2b:	01 c0                	add    %eax,%eax$/;"	l
ffff800000104f2d	kernel.asm	/^ffff800000104f2d:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000104f2f	kernel.asm	/^ffff800000104f2f:	8b 45 f0             	mov    -0x10(%rbp),%eax$/;"	l
ffff800000104f32	kernel.asm	/^ffff800000104f32:	83 e0 0f             	and    $0xf,%eax$/;"	l
ffff800000104f35	kernel.asm	/^ffff800000104f35:	01 d0                	add    %edx,%eax$/;"	l
ffff800000104f37	kernel.asm	/^ffff800000104f37:	89 45 f0             	mov    %eax,-0x10(%rbp)$/;"	l
ffff800000104f3a	kernel.asm	/^ffff800000104f3a:	8b 45 f4             	mov    -0xc(%rbp),%eax$/;"	l
ffff800000104f3d	kernel.asm	/^ffff800000104f3d:	c1 e8 04             	shr    $0x4,%eax$/;"	l
ffff800000104f40	kernel.asm	/^ffff800000104f40:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000104f42	kernel.asm	/^ffff800000104f42:	89 d0                	mov    %edx,%eax$/;"	l
ffff800000104f44	kernel.asm	/^ffff800000104f44:	c1 e0 02             	shl    $0x2,%eax$/;"	l
ffff800000104f47	kernel.asm	/^ffff800000104f47:	01 d0                	add    %edx,%eax$/;"	l
ffff800000104f49	kernel.asm	/^ffff800000104f49:	01 c0                	add    %eax,%eax$/;"	l
ffff800000104f4b	kernel.asm	/^ffff800000104f4b:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000104f4d	kernel.asm	/^ffff800000104f4d:	8b 45 f4             	mov    -0xc(%rbp),%eax$/;"	l
ffff800000104f50	kernel.asm	/^ffff800000104f50:	83 e0 0f             	and    $0xf,%eax$/;"	l
ffff800000104f53	kernel.asm	/^ffff800000104f53:	01 d0                	add    %edx,%eax$/;"	l
ffff800000104f55	kernel.asm	/^ffff800000104f55:	89 45 f4             	mov    %eax,-0xc(%rbp)$/;"	l
ffff800000104f58	kernel.asm	/^ffff800000104f58:	48 8b 45 b8          	mov    -0x48(%rbp),%rax$/;"	l
ffff800000104f5c	kernel.asm	/^ffff800000104f5c:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx$/;"	l
ffff800000104f60	kernel.asm	/^ffff800000104f60:	48 89 10             	mov    %rdx,(%rax)$/;"	l
ffff800000104f63	kernel.asm	/^ffff800000104f63:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx$/;"	l
ffff800000104f67	kernel.asm	/^ffff800000104f67:	48 89 50 08          	mov    %rdx,0x8(%rax)$/;"	l
ffff800000104f6b	kernel.asm	/^ffff800000104f6b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
ffff800000104f6f	kernel.asm	/^ffff800000104f6f:	48 89 50 10          	mov    %rdx,0x10(%rax)$/;"	l
ffff800000104f73	kernel.asm	/^ffff800000104f73:	48 8b 45 b8          	mov    -0x48(%rbp),%rax$/;"	l
ffff800000104f77	kernel.asm	/^ffff800000104f77:	8b 40 14             	mov    0x14(%rax),%eax$/;"	l
ffff800000104f7a	kernel.asm	/^ffff800000104f7a:	8d 90 d0 07 00 00    	lea    0x7d0(%rax),%edx$/;"	l
ffff800000104f80	kernel.asm	/^ffff800000104f80:	48 8b 45 b8          	mov    -0x48(%rbp),%rax$/;"	l
ffff800000104f84	kernel.asm	/^ffff800000104f84:	89 50 14             	mov    %edx,0x14(%rax)$/;"	l
ffff800000104f87	kernel.asm	/^ffff800000104f87:	90                   	nop$/;"	l
ffff800000104f88	kernel.asm	/^ffff800000104f88:	c9                   	leaveq $/;"	l
ffff800000104f89	kernel.asm	/^ffff800000104f89:	c3                   	retq   $/;"	l
ffff800000104f8a	kernel.asm	/^ffff800000104f8a <initlog>:$/;"	l
ffff800000104f8a	kernel.asm	/^ffff800000104f8a:	55                   	push   %rbp$/;"	l
ffff800000104f8b	kernel.asm	/^ffff800000104f8b:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000104f8e	kernel.asm	/^ffff800000104f8e:	48 83 ec 30          	sub    $0x30,%rsp$/;"	l
ffff800000104f92	kernel.asm	/^ffff800000104f92:	89 7d dc             	mov    %edi,-0x24(%rbp)$/;"	l
ffff800000104f95	kernel.asm	/^ffff800000104f95:	48 be f4 d6 10 00 00 	movabs $0xffff80000010d6f4,%rsi$/;"	l
ffff800000104f9c	kernel.asm	/^ffff800000104f9c:	80 ff ff $/;"	l
ffff800000104f9f	kernel.asm	/^ffff800000104f9f:	48 bf 20 b2 11 00 00 	movabs $0xffff80000011b220,%rdi$/;"	l
ffff800000104fa6	kernel.asm	/^ffff800000104fa6:	80 ff ff $/;"	l
ffff800000104fa9	kernel.asm	/^ffff800000104fa9:	48 b8 a1 77 10 00 00 	movabs $0xffff8000001077a1,%rax$/;"	l
ffff800000104fb0	kernel.asm	/^ffff800000104fb0:	80 ff ff $/;"	l
ffff800000104fb3	kernel.asm	/^ffff800000104fb3:	ff d0                	callq  *%rax$/;"	l
ffff800000104fb5	kernel.asm	/^ffff800000104fb5:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx$/;"	l
ffff800000104fb9	kernel.asm	/^ffff800000104fb9:	8b 45 dc             	mov    -0x24(%rbp),%eax$/;"	l
ffff800000104fbc	kernel.asm	/^ffff800000104fbc:	48 89 d6             	mov    %rdx,%rsi$/;"	l
ffff800000104fbf	kernel.asm	/^ffff800000104fbf:	89 c7                	mov    %eax,%edi$/;"	l
ffff800000104fc1	kernel.asm	/^ffff800000104fc1:	48 b8 be 24 10 00 00 	movabs $0xffff8000001024be,%rax$/;"	l
ffff800000104fc8	kernel.asm	/^ffff800000104fc8:	80 ff ff $/;"	l
ffff800000104fcb	kernel.asm	/^ffff800000104fcb:	ff d0                	callq  *%rax$/;"	l
ffff800000104fcd	kernel.asm	/^ffff800000104fcd:	8b 45 f0             	mov    -0x10(%rbp),%eax$/;"	l
ffff800000104fd0	kernel.asm	/^ffff800000104fd0:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000104fd2	kernel.asm	/^ffff800000104fd2:	48 b8 20 b2 11 00 00 	movabs $0xffff80000011b220,%rax$/;"	l
ffff800000104fd9	kernel.asm	/^ffff800000104fd9:	80 ff ff $/;"	l
ffff800000104fdc	kernel.asm	/^ffff800000104fdc:	89 50 68             	mov    %edx,0x68(%rax)$/;"	l
ffff800000104fdf	kernel.asm	/^ffff800000104fdf:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
ffff800000104fe2	kernel.asm	/^ffff800000104fe2:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000104fe4	kernel.asm	/^ffff800000104fe4:	48 b8 20 b2 11 00 00 	movabs $0xffff80000011b220,%rax$/;"	l
ffff800000104feb	kernel.asm	/^ffff800000104feb:	80 ff ff $/;"	l
ffff800000104fee	kernel.asm	/^ffff800000104fee:	89 50 6c             	mov    %edx,0x6c(%rax)$/;"	l
ffff800000104ff1	kernel.asm	/^ffff800000104ff1:	48 b8 20 b2 11 00 00 	movabs $0xffff80000011b220,%rax$/;"	l
ffff800000104ff8	kernel.asm	/^ffff800000104ff8:	80 ff ff $/;"	l
ffff800000104ffb	kernel.asm	/^ffff800000104ffb:	8b 55 dc             	mov    -0x24(%rbp),%edx$/;"	l
ffff800000104ffe	kernel.asm	/^ffff800000104ffe:	89 50 78             	mov    %edx,0x78(%rax)$/;"	l
ffff800000105001	kernel.asm	/^ffff800000105001:	48 b8 94 52 10 00 00 	movabs $0xffff800000105294,%rax$/;"	l
ffff800000105008	kernel.asm	/^ffff800000105008:	80 ff ff $/;"	l
ffff80000010500b	kernel.asm	/^ffff80000010500b:	ff d0                	callq  *%rax$/;"	l
ffff80000010500d	kernel.asm	/^ffff80000010500d:	90                   	nop$/;"	l
ffff80000010500e	kernel.asm	/^ffff80000010500e:	c9                   	leaveq $/;"	l
ffff80000010500f	kernel.asm	/^ffff80000010500f:	c3                   	retq   $/;"	l
ffff800000105010	kernel.asm	/^ffff800000105010 <install_trans>:$/;"	l
ffff800000105010	kernel.asm	/^ffff800000105010:	55                   	push   %rbp$/;"	l
ffff800000105011	kernel.asm	/^ffff800000105011:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000105014	kernel.asm	/^ffff800000105014:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ffff800000105018	kernel.asm	/^ffff800000105018:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)$/;"	l
ffff80000010501f	kernel.asm	/^ffff80000010501f:	e9 dc 00 00 00       	jmpq   ffff800000105100 <install_trans+0xf0>$/;"	l
ffff800000105024	kernel.asm	/^ffff800000105024:	48 b8 20 b2 11 00 00 	movabs $0xffff80000011b220,%rax$/;"	l
ffff80000010502b	kernel.asm	/^ffff80000010502b:	80 ff ff $/;"	l
ffff80000010502e	kernel.asm	/^ffff80000010502e:	8b 50 68             	mov    0x68(%rax),%edx$/;"	l
ffff800000105031	kernel.asm	/^ffff800000105031:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff800000105034	kernel.asm	/^ffff800000105034:	01 d0                	add    %edx,%eax$/;"	l
ffff800000105036	kernel.asm	/^ffff800000105036:	83 c0 01             	add    $0x1,%eax$/;"	l
ffff800000105039	kernel.asm	/^ffff800000105039:	89 c2                	mov    %eax,%edx$/;"	l
ffff80000010503b	kernel.asm	/^ffff80000010503b:	48 b8 20 b2 11 00 00 	movabs $0xffff80000011b220,%rax$/;"	l
ffff800000105042	kernel.asm	/^ffff800000105042:	80 ff ff $/;"	l
ffff800000105045	kernel.asm	/^ffff800000105045:	8b 40 78             	mov    0x78(%rax),%eax$/;"	l
ffff800000105048	kernel.asm	/^ffff800000105048:	89 d6                	mov    %edx,%esi$/;"	l
ffff80000010504a	kernel.asm	/^ffff80000010504a:	89 c7                	mov    %eax,%edi$/;"	l
ffff80000010504c	kernel.asm	/^ffff80000010504c:	48 b8 f8 03 10 00 00 	movabs $0xffff8000001003f8,%rax$/;"	l
ffff800000105053	kernel.asm	/^ffff800000105053:	80 ff ff $/;"	l
ffff800000105056	kernel.asm	/^ffff800000105056:	ff d0                	callq  *%rax$/;"	l
ffff800000105058	kernel.asm	/^ffff800000105058:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ffff80000010505c	kernel.asm	/^ffff80000010505c:	48 b8 20 b2 11 00 00 	movabs $0xffff80000011b220,%rax$/;"	l
ffff800000105063	kernel.asm	/^ffff800000105063:	80 ff ff $/;"	l
ffff800000105066	kernel.asm	/^ffff800000105066:	8b 55 fc             	mov    -0x4(%rbp),%edx$/;"	l
ffff800000105069	kernel.asm	/^ffff800000105069:	48 63 d2             	movslq %edx,%rdx$/;"	l
ffff80000010506c	kernel.asm	/^ffff80000010506c:	48 83 c2 1c          	add    $0x1c,%rdx$/;"	l
ffff800000105070	kernel.asm	/^ffff800000105070:	8b 44 90 10          	mov    0x10(%rax,%rdx,4),%eax$/;"	l
ffff800000105074	kernel.asm	/^ffff800000105074:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000105076	kernel.asm	/^ffff800000105076:	48 b8 20 b2 11 00 00 	movabs $0xffff80000011b220,%rax$/;"	l
ffff80000010507d	kernel.asm	/^ffff80000010507d:	80 ff ff $/;"	l
ffff800000105080	kernel.asm	/^ffff800000105080:	8b 40 78             	mov    0x78(%rax),%eax$/;"	l
ffff800000105083	kernel.asm	/^ffff800000105083:	89 d6                	mov    %edx,%esi$/;"	l
ffff800000105085	kernel.asm	/^ffff800000105085:	89 c7                	mov    %eax,%edi$/;"	l
ffff800000105087	kernel.asm	/^ffff800000105087:	48 b8 f8 03 10 00 00 	movabs $0xffff8000001003f8,%rax$/;"	l
ffff80000010508e	kernel.asm	/^ffff80000010508e:	80 ff ff $/;"	l
ffff800000105091	kernel.asm	/^ffff800000105091:	ff d0                	callq  *%rax$/;"	l
ffff800000105093	kernel.asm	/^ffff800000105093:	48 89 45 e8          	mov    %rax,-0x18(%rbp)$/;"	l
ffff800000105097	kernel.asm	/^ffff800000105097:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff80000010509b	kernel.asm	/^ffff80000010509b:	48 8d 88 b0 00 00 00 	lea    0xb0(%rax),%rcx$/;"	l
ffff8000001050a2	kernel.asm	/^ffff8000001050a2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff8000001050a6	kernel.asm	/^ffff8000001050a6:	48 05 b0 00 00 00    	add    $0xb0,%rax$/;"	l
ffff8000001050ac	kernel.asm	/^ffff8000001050ac:	ba 00 02 00 00       	mov    $0x200,%edx$/;"	l
ffff8000001050b1	kernel.asm	/^ffff8000001050b1:	48 89 ce             	mov    %rcx,%rsi$/;"	l
ffff8000001050b4	kernel.asm	/^ffff8000001050b4:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001050b7	kernel.asm	/^ffff8000001050b7:	48 b8 6f 7c 10 00 00 	movabs $0xffff800000107c6f,%rax$/;"	l
ffff8000001050be	kernel.asm	/^ffff8000001050be:	80 ff ff $/;"	l
ffff8000001050c1	kernel.asm	/^ffff8000001050c1:	ff d0                	callq  *%rax$/;"	l
ffff8000001050c3	kernel.asm	/^ffff8000001050c3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff8000001050c7	kernel.asm	/^ffff8000001050c7:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001050ca	kernel.asm	/^ffff8000001050ca:	48 b8 46 04 10 00 00 	movabs $0xffff800000100446,%rax$/;"	l
ffff8000001050d1	kernel.asm	/^ffff8000001050d1:	80 ff ff $/;"	l
ffff8000001050d4	kernel.asm	/^ffff8000001050d4:	ff d0                	callq  *%rax$/;"	l
ffff8000001050d6	kernel.asm	/^ffff8000001050d6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff8000001050da	kernel.asm	/^ffff8000001050da:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001050dd	kernel.asm	/^ffff8000001050dd:	48 b8 aa 04 10 00 00 	movabs $0xffff8000001004aa,%rax$/;"	l
ffff8000001050e4	kernel.asm	/^ffff8000001050e4:	80 ff ff $/;"	l
ffff8000001050e7	kernel.asm	/^ffff8000001050e7:	ff d0                	callq  *%rax$/;"	l
ffff8000001050e9	kernel.asm	/^ffff8000001050e9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff8000001050ed	kernel.asm	/^ffff8000001050ed:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001050f0	kernel.asm	/^ffff8000001050f0:	48 b8 aa 04 10 00 00 	movabs $0xffff8000001004aa,%rax$/;"	l
ffff8000001050f7	kernel.asm	/^ffff8000001050f7:	80 ff ff $/;"	l
ffff8000001050fa	kernel.asm	/^ffff8000001050fa:	ff d0                	callq  *%rax$/;"	l
ffff8000001050fc	kernel.asm	/^ffff8000001050fc:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)$/;"	l
ffff800000105100	kernel.asm	/^ffff800000105100:	48 b8 20 b2 11 00 00 	movabs $0xffff80000011b220,%rax$/;"	l
ffff800000105107	kernel.asm	/^ffff800000105107:	80 ff ff $/;"	l
ffff80000010510a	kernel.asm	/^ffff80000010510a:	8b 40 7c             	mov    0x7c(%rax),%eax$/;"	l
ffff80000010510d	kernel.asm	/^ffff80000010510d:	3b 45 fc             	cmp    -0x4(%rbp),%eax$/;"	l
ffff800000105110	kernel.asm	/^ffff800000105110:	0f 8f 0e ff ff ff    	jg     ffff800000105024 <install_trans+0x14>$/;"	l
ffff800000105116	kernel.asm	/^ffff800000105116:	90                   	nop$/;"	l
ffff800000105117	kernel.asm	/^ffff800000105117:	c9                   	leaveq $/;"	l
ffff800000105118	kernel.asm	/^ffff800000105118:	c3                   	retq   $/;"	l
ffff800000105119	kernel.asm	/^ffff800000105119 <read_head>:$/;"	l
ffff800000105119	kernel.asm	/^ffff800000105119:	55                   	push   %rbp$/;"	l
ffff80000010511a	kernel.asm	/^ffff80000010511a:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010511d	kernel.asm	/^ffff80000010511d:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ffff800000105121	kernel.asm	/^ffff800000105121:	48 b8 20 b2 11 00 00 	movabs $0xffff80000011b220,%rax$/;"	l
ffff800000105128	kernel.asm	/^ffff800000105128:	80 ff ff $/;"	l
ffff80000010512b	kernel.asm	/^ffff80000010512b:	8b 40 68             	mov    0x68(%rax),%eax$/;"	l
ffff80000010512e	kernel.asm	/^ffff80000010512e:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000105130	kernel.asm	/^ffff800000105130:	48 b8 20 b2 11 00 00 	movabs $0xffff80000011b220,%rax$/;"	l
ffff800000105137	kernel.asm	/^ffff800000105137:	80 ff ff $/;"	l
ffff80000010513a	kernel.asm	/^ffff80000010513a:	8b 40 78             	mov    0x78(%rax),%eax$/;"	l
ffff80000010513d	kernel.asm	/^ffff80000010513d:	89 d6                	mov    %edx,%esi$/;"	l
ffff80000010513f	kernel.asm	/^ffff80000010513f:	89 c7                	mov    %eax,%edi$/;"	l
ffff800000105141	kernel.asm	/^ffff800000105141:	48 b8 f8 03 10 00 00 	movabs $0xffff8000001003f8,%rax$/;"	l
ffff800000105148	kernel.asm	/^ffff800000105148:	80 ff ff $/;"	l
ffff80000010514b	kernel.asm	/^ffff80000010514b:	ff d0                	callq  *%rax$/;"	l
ffff80000010514d	kernel.asm	/^ffff80000010514d:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ffff800000105151	kernel.asm	/^ffff800000105151:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000105155	kernel.asm	/^ffff800000105155:	48 05 b0 00 00 00    	add    $0xb0,%rax$/;"	l
ffff80000010515b	kernel.asm	/^ffff80000010515b:	48 89 45 e8          	mov    %rax,-0x18(%rbp)$/;"	l
ffff80000010515f	kernel.asm	/^ffff80000010515f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000105163	kernel.asm	/^ffff800000105163:	8b 10                	mov    (%rax),%edx$/;"	l
ffff800000105165	kernel.asm	/^ffff800000105165:	48 b8 20 b2 11 00 00 	movabs $0xffff80000011b220,%rax$/;"	l
ffff80000010516c	kernel.asm	/^ffff80000010516c:	80 ff ff $/;"	l
ffff80000010516f	kernel.asm	/^ffff80000010516f:	89 50 7c             	mov    %edx,0x7c(%rax)$/;"	l
ffff800000105172	kernel.asm	/^ffff800000105172:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)$/;"	l
ffff800000105179	kernel.asm	/^ffff800000105179:	eb 2a                	jmp    ffff8000001051a5 <read_head+0x8c>$/;"	l
ffff80000010517b	kernel.asm	/^ffff80000010517b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010517f	kernel.asm	/^ffff80000010517f:	8b 55 fc             	mov    -0x4(%rbp),%edx$/;"	l
ffff800000105182	kernel.asm	/^ffff800000105182:	48 63 d2             	movslq %edx,%rdx$/;"	l
ffff800000105185	kernel.asm	/^ffff800000105185:	8b 54 90 04          	mov    0x4(%rax,%rdx,4),%edx$/;"	l
ffff800000105189	kernel.asm	/^ffff800000105189:	48 b8 20 b2 11 00 00 	movabs $0xffff80000011b220,%rax$/;"	l
ffff800000105190	kernel.asm	/^ffff800000105190:	80 ff ff $/;"	l
ffff800000105193	kernel.asm	/^ffff800000105193:	8b 4d fc             	mov    -0x4(%rbp),%ecx$/;"	l
ffff800000105196	kernel.asm	/^ffff800000105196:	48 63 c9             	movslq %ecx,%rcx$/;"	l
ffff800000105199	kernel.asm	/^ffff800000105199:	48 83 c1 1c          	add    $0x1c,%rcx$/;"	l
ffff80000010519d	kernel.asm	/^ffff80000010519d:	89 54 88 10          	mov    %edx,0x10(%rax,%rcx,4)$/;"	l
ffff8000001051a1	kernel.asm	/^ffff8000001051a1:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)$/;"	l
ffff8000001051a5	kernel.asm	/^ffff8000001051a5:	48 b8 20 b2 11 00 00 	movabs $0xffff80000011b220,%rax$/;"	l
ffff8000001051ac	kernel.asm	/^ffff8000001051ac:	80 ff ff $/;"	l
ffff8000001051af	kernel.asm	/^ffff8000001051af:	8b 40 7c             	mov    0x7c(%rax),%eax$/;"	l
ffff8000001051b2	kernel.asm	/^ffff8000001051b2:	3b 45 fc             	cmp    -0x4(%rbp),%eax$/;"	l
ffff8000001051b5	kernel.asm	/^ffff8000001051b5:	7f c4                	jg     ffff80000010517b <read_head+0x62>$/;"	l
ffff8000001051b7	kernel.asm	/^ffff8000001051b7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff8000001051bb	kernel.asm	/^ffff8000001051bb:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001051be	kernel.asm	/^ffff8000001051be:	48 b8 aa 04 10 00 00 	movabs $0xffff8000001004aa,%rax$/;"	l
ffff8000001051c5	kernel.asm	/^ffff8000001051c5:	80 ff ff $/;"	l
ffff8000001051c8	kernel.asm	/^ffff8000001051c8:	ff d0                	callq  *%rax$/;"	l
ffff8000001051ca	kernel.asm	/^ffff8000001051ca:	90                   	nop$/;"	l
ffff8000001051cb	kernel.asm	/^ffff8000001051cb:	c9                   	leaveq $/;"	l
ffff8000001051cc	kernel.asm	/^ffff8000001051cc:	c3                   	retq   $/;"	l
ffff8000001051cd	kernel.asm	/^ffff8000001051cd <write_head>:$/;"	l
ffff8000001051cd	kernel.asm	/^ffff8000001051cd:	55                   	push   %rbp$/;"	l
ffff8000001051ce	kernel.asm	/^ffff8000001051ce:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff8000001051d1	kernel.asm	/^ffff8000001051d1:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ffff8000001051d5	kernel.asm	/^ffff8000001051d5:	48 b8 20 b2 11 00 00 	movabs $0xffff80000011b220,%rax$/;"	l
ffff8000001051dc	kernel.asm	/^ffff8000001051dc:	80 ff ff $/;"	l
ffff8000001051df	kernel.asm	/^ffff8000001051df:	8b 40 68             	mov    0x68(%rax),%eax$/;"	l
ffff8000001051e2	kernel.asm	/^ffff8000001051e2:	89 c2                	mov    %eax,%edx$/;"	l
ffff8000001051e4	kernel.asm	/^ffff8000001051e4:	48 b8 20 b2 11 00 00 	movabs $0xffff80000011b220,%rax$/;"	l
ffff8000001051eb	kernel.asm	/^ffff8000001051eb:	80 ff ff $/;"	l
ffff8000001051ee	kernel.asm	/^ffff8000001051ee:	8b 40 78             	mov    0x78(%rax),%eax$/;"	l
ffff8000001051f1	kernel.asm	/^ffff8000001051f1:	89 d6                	mov    %edx,%esi$/;"	l
ffff8000001051f3	kernel.asm	/^ffff8000001051f3:	89 c7                	mov    %eax,%edi$/;"	l
ffff8000001051f5	kernel.asm	/^ffff8000001051f5:	48 b8 f8 03 10 00 00 	movabs $0xffff8000001003f8,%rax$/;"	l
ffff8000001051fc	kernel.asm	/^ffff8000001051fc:	80 ff ff $/;"	l
ffff8000001051ff	kernel.asm	/^ffff8000001051ff:	ff d0                	callq  *%rax$/;"	l
ffff800000105201	kernel.asm	/^ffff800000105201:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ffff800000105205	kernel.asm	/^ffff800000105205:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000105209	kernel.asm	/^ffff800000105209:	48 05 b0 00 00 00    	add    $0xb0,%rax$/;"	l
ffff80000010520f	kernel.asm	/^ffff80000010520f:	48 89 45 e8          	mov    %rax,-0x18(%rbp)$/;"	l
ffff800000105213	kernel.asm	/^ffff800000105213:	48 b8 20 b2 11 00 00 	movabs $0xffff80000011b220,%rax$/;"	l
ffff80000010521a	kernel.asm	/^ffff80000010521a:	80 ff ff $/;"	l
ffff80000010521d	kernel.asm	/^ffff80000010521d:	8b 50 7c             	mov    0x7c(%rax),%edx$/;"	l
ffff800000105220	kernel.asm	/^ffff800000105220:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000105224	kernel.asm	/^ffff800000105224:	89 10                	mov    %edx,(%rax)$/;"	l
ffff800000105226	kernel.asm	/^ffff800000105226:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)$/;"	l
ffff80000010522d	kernel.asm	/^ffff80000010522d:	eb 2a                	jmp    ffff800000105259 <write_head+0x8c>$/;"	l
ffff80000010522f	kernel.asm	/^ffff80000010522f:	48 b8 20 b2 11 00 00 	movabs $0xffff80000011b220,%rax$/;"	l
ffff800000105236	kernel.asm	/^ffff800000105236:	80 ff ff $/;"	l
ffff800000105239	kernel.asm	/^ffff800000105239:	8b 55 fc             	mov    -0x4(%rbp),%edx$/;"	l
ffff80000010523c	kernel.asm	/^ffff80000010523c:	48 63 d2             	movslq %edx,%rdx$/;"	l
ffff80000010523f	kernel.asm	/^ffff80000010523f:	48 83 c2 1c          	add    $0x1c,%rdx$/;"	l
ffff800000105243	kernel.asm	/^ffff800000105243:	8b 4c 90 10          	mov    0x10(%rax,%rdx,4),%ecx$/;"	l
ffff800000105247	kernel.asm	/^ffff800000105247:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010524b	kernel.asm	/^ffff80000010524b:	8b 55 fc             	mov    -0x4(%rbp),%edx$/;"	l
ffff80000010524e	kernel.asm	/^ffff80000010524e:	48 63 d2             	movslq %edx,%rdx$/;"	l
ffff800000105251	kernel.asm	/^ffff800000105251:	89 4c 90 04          	mov    %ecx,0x4(%rax,%rdx,4)$/;"	l
ffff800000105255	kernel.asm	/^ffff800000105255:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)$/;"	l
ffff800000105259	kernel.asm	/^ffff800000105259:	48 b8 20 b2 11 00 00 	movabs $0xffff80000011b220,%rax$/;"	l
ffff800000105260	kernel.asm	/^ffff800000105260:	80 ff ff $/;"	l
ffff800000105263	kernel.asm	/^ffff800000105263:	8b 40 7c             	mov    0x7c(%rax),%eax$/;"	l
ffff800000105266	kernel.asm	/^ffff800000105266:	3b 45 fc             	cmp    -0x4(%rbp),%eax$/;"	l
ffff800000105269	kernel.asm	/^ffff800000105269:	7f c4                	jg     ffff80000010522f <write_head+0x62>$/;"	l
ffff80000010526b	kernel.asm	/^ffff80000010526b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff80000010526f	kernel.asm	/^ffff80000010526f:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000105272	kernel.asm	/^ffff800000105272:	48 b8 46 04 10 00 00 	movabs $0xffff800000100446,%rax$/;"	l
ffff800000105279	kernel.asm	/^ffff800000105279:	80 ff ff $/;"	l
ffff80000010527c	kernel.asm	/^ffff80000010527c:	ff d0                	callq  *%rax$/;"	l
ffff80000010527e	kernel.asm	/^ffff80000010527e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000105282	kernel.asm	/^ffff800000105282:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000105285	kernel.asm	/^ffff800000105285:	48 b8 aa 04 10 00 00 	movabs $0xffff8000001004aa,%rax$/;"	l
ffff80000010528c	kernel.asm	/^ffff80000010528c:	80 ff ff $/;"	l
ffff80000010528f	kernel.asm	/^ffff80000010528f:	ff d0                	callq  *%rax$/;"	l
ffff800000105291	kernel.asm	/^ffff800000105291:	90                   	nop$/;"	l
ffff800000105292	kernel.asm	/^ffff800000105292:	c9                   	leaveq $/;"	l
ffff800000105293	kernel.asm	/^ffff800000105293:	c3                   	retq   $/;"	l
ffff800000105294	kernel.asm	/^ffff800000105294 <recover_from_log>:$/;"	l
ffff800000105294	kernel.asm	/^ffff800000105294:	55                   	push   %rbp$/;"	l
ffff800000105295	kernel.asm	/^ffff800000105295:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000105298	kernel.asm	/^ffff800000105298:	48 b8 19 51 10 00 00 	movabs $0xffff800000105119,%rax$/;"	l
ffff80000010529f	kernel.asm	/^ffff80000010529f:	80 ff ff $/;"	l
ffff8000001052a2	kernel.asm	/^ffff8000001052a2:	ff d0                	callq  *%rax$/;"	l
ffff8000001052a4	kernel.asm	/^ffff8000001052a4:	48 b8 10 50 10 00 00 	movabs $0xffff800000105010,%rax$/;"	l
ffff8000001052ab	kernel.asm	/^ffff8000001052ab:	80 ff ff $/;"	l
ffff8000001052ae	kernel.asm	/^ffff8000001052ae:	ff d0                	callq  *%rax$/;"	l
ffff8000001052b0	kernel.asm	/^ffff8000001052b0:	48 b8 20 b2 11 00 00 	movabs $0xffff80000011b220,%rax$/;"	l
ffff8000001052b7	kernel.asm	/^ffff8000001052b7:	80 ff ff $/;"	l
ffff8000001052ba	kernel.asm	/^ffff8000001052ba:	c7 40 7c 00 00 00 00 	movl   $0x0,0x7c(%rax)$/;"	l
ffff8000001052c1	kernel.asm	/^ffff8000001052c1:	48 b8 cd 51 10 00 00 	movabs $0xffff8000001051cd,%rax$/;"	l
ffff8000001052c8	kernel.asm	/^ffff8000001052c8:	80 ff ff $/;"	l
ffff8000001052cb	kernel.asm	/^ffff8000001052cb:	ff d0                	callq  *%rax$/;"	l
ffff8000001052cd	kernel.asm	/^ffff8000001052cd:	90                   	nop$/;"	l
ffff8000001052ce	kernel.asm	/^ffff8000001052ce:	5d                   	pop    %rbp$/;"	l
ffff8000001052cf	kernel.asm	/^ffff8000001052cf:	c3                   	retq   $/;"	l
ffff8000001052d0	kernel.asm	/^ffff8000001052d0 <begin_op>:$/;"	l
ffff8000001052d0	kernel.asm	/^ffff8000001052d0:	55                   	push   %rbp$/;"	l
ffff8000001052d1	kernel.asm	/^ffff8000001052d1:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff8000001052d4	kernel.asm	/^ffff8000001052d4:	48 bf 20 b2 11 00 00 	movabs $0xffff80000011b220,%rdi$/;"	l
ffff8000001052db	kernel.asm	/^ffff8000001052db:	80 ff ff $/;"	l
ffff8000001052de	kernel.asm	/^ffff8000001052de:	48 b8 d6 77 10 00 00 	movabs $0xffff8000001077d6,%rax$/;"	l
ffff8000001052e5	kernel.asm	/^ffff8000001052e5:	80 ff ff $/;"	l
ffff8000001052e8	kernel.asm	/^ffff8000001052e8:	ff d0                	callq  *%rax$/;"	l
ffff8000001052ea	kernel.asm	/^ffff8000001052ea:	48 b8 20 b2 11 00 00 	movabs $0xffff80000011b220,%rax$/;"	l
ffff8000001052f1	kernel.asm	/^ffff8000001052f1:	80 ff ff $/;"	l
ffff8000001052f4	kernel.asm	/^ffff8000001052f4:	8b 40 74             	mov    0x74(%rax),%eax$/;"	l
ffff8000001052f7	kernel.asm	/^ffff8000001052f7:	85 c0                	test   %eax,%eax$/;"	l
ffff8000001052f9	kernel.asm	/^ffff8000001052f9:	74 22                	je     ffff80000010531d <begin_op+0x4d>$/;"	l
ffff8000001052fb	kernel.asm	/^ffff8000001052fb:	48 be 20 b2 11 00 00 	movabs $0xffff80000011b220,%rsi$/;"	l
ffff800000105302	kernel.asm	/^ffff800000105302:	80 ff ff $/;"	l
ffff800000105305	kernel.asm	/^ffff800000105305:	48 bf 20 b2 11 00 00 	movabs $0xffff80000011b220,%rdi$/;"	l
ffff80000010530c	kernel.asm	/^ffff80000010530c:	80 ff ff $/;"	l
ffff80000010530f	kernel.asm	/^ffff80000010530f:	48 b8 cc 71 10 00 00 	movabs $0xffff8000001071cc,%rax$/;"	l
ffff800000105316	kernel.asm	/^ffff800000105316:	80 ff ff $/;"	l
ffff800000105319	kernel.asm	/^ffff800000105319:	ff d0                	callq  *%rax$/;"	l
ffff80000010531b	kernel.asm	/^ffff80000010531b:	eb cd                	jmp    ffff8000001052ea <begin_op+0x1a>$/;"	l
ffff80000010531d	kernel.asm	/^ffff80000010531d:	48 b8 20 b2 11 00 00 	movabs $0xffff80000011b220,%rax$/;"	l
ffff800000105324	kernel.asm	/^ffff800000105324:	80 ff ff $/;"	l
ffff800000105327	kernel.asm	/^ffff800000105327:	8b 48 7c             	mov    0x7c(%rax),%ecx$/;"	l
ffff80000010532a	kernel.asm	/^ffff80000010532a:	48 b8 20 b2 11 00 00 	movabs $0xffff80000011b220,%rax$/;"	l
ffff800000105331	kernel.asm	/^ffff800000105331:	80 ff ff $/;"	l
ffff800000105334	kernel.asm	/^ffff800000105334:	8b 40 70             	mov    0x70(%rax),%eax$/;"	l
ffff800000105337	kernel.asm	/^ffff800000105337:	8d 50 01             	lea    0x1(%rax),%edx$/;"	l
ffff80000010533a	kernel.asm	/^ffff80000010533a:	89 d0                	mov    %edx,%eax$/;"	l
ffff80000010533c	kernel.asm	/^ffff80000010533c:	c1 e0 02             	shl    $0x2,%eax$/;"	l
ffff80000010533f	kernel.asm	/^ffff80000010533f:	01 d0                	add    %edx,%eax$/;"	l
ffff800000105341	kernel.asm	/^ffff800000105341:	01 c0                	add    %eax,%eax$/;"	l
ffff800000105343	kernel.asm	/^ffff800000105343:	01 c8                	add    %ecx,%eax$/;"	l
ffff800000105345	kernel.asm	/^ffff800000105345:	83 f8 1e             	cmp    $0x1e,%eax$/;"	l
ffff800000105348	kernel.asm	/^ffff800000105348:	7e 25                	jle    ffff80000010536f <begin_op+0x9f>$/;"	l
ffff80000010534a	kernel.asm	/^ffff80000010534a:	48 be 20 b2 11 00 00 	movabs $0xffff80000011b220,%rsi$/;"	l
ffff800000105351	kernel.asm	/^ffff800000105351:	80 ff ff $/;"	l
ffff800000105354	kernel.asm	/^ffff800000105354:	48 bf 20 b2 11 00 00 	movabs $0xffff80000011b220,%rdi$/;"	l
ffff80000010535b	kernel.asm	/^ffff80000010535b:	80 ff ff $/;"	l
ffff80000010535e	kernel.asm	/^ffff80000010535e:	48 b8 cc 71 10 00 00 	movabs $0xffff8000001071cc,%rax$/;"	l
ffff800000105365	kernel.asm	/^ffff800000105365:	80 ff ff $/;"	l
ffff800000105368	kernel.asm	/^ffff800000105368:	ff d0                	callq  *%rax$/;"	l
ffff80000010536a	kernel.asm	/^ffff80000010536a:	e9 7b ff ff ff       	jmpq   ffff8000001052ea <begin_op+0x1a>$/;"	l
ffff80000010536f	kernel.asm	/^ffff80000010536f:	48 b8 20 b2 11 00 00 	movabs $0xffff80000011b220,%rax$/;"	l
ffff800000105376	kernel.asm	/^ffff800000105376:	80 ff ff $/;"	l
ffff800000105379	kernel.asm	/^ffff800000105379:	8b 40 70             	mov    0x70(%rax),%eax$/;"	l
ffff80000010537c	kernel.asm	/^ffff80000010537c:	8d 50 01             	lea    0x1(%rax),%edx$/;"	l
ffff80000010537f	kernel.asm	/^ffff80000010537f:	48 b8 20 b2 11 00 00 	movabs $0xffff80000011b220,%rax$/;"	l
ffff800000105386	kernel.asm	/^ffff800000105386:	80 ff ff $/;"	l
ffff800000105389	kernel.asm	/^ffff800000105389:	89 50 70             	mov    %edx,0x70(%rax)$/;"	l
ffff80000010538c	kernel.asm	/^ffff80000010538c:	48 bf 20 b2 11 00 00 	movabs $0xffff80000011b220,%rdi$/;"	l
ffff800000105393	kernel.asm	/^ffff800000105393:	80 ff ff $/;"	l
ffff800000105396	kernel.asm	/^ffff800000105396:	48 b8 6f 78 10 00 00 	movabs $0xffff80000010786f,%rax$/;"	l
ffff80000010539d	kernel.asm	/^ffff80000010539d:	80 ff ff $/;"	l
ffff8000001053a0	kernel.asm	/^ffff8000001053a0:	ff d0                	callq  *%rax$/;"	l
ffff8000001053a2	kernel.asm	/^ffff8000001053a2:	90                   	nop$/;"	l
ffff8000001053a3	kernel.asm	/^ffff8000001053a3:	90                   	nop$/;"	l
ffff8000001053a4	kernel.asm	/^ffff8000001053a4:	5d                   	pop    %rbp$/;"	l
ffff8000001053a5	kernel.asm	/^ffff8000001053a5:	c3                   	retq   $/;"	l
ffff8000001053a6	kernel.asm	/^ffff8000001053a6 <end_op>:$/;"	l
ffff8000001053a6	kernel.asm	/^ffff8000001053a6:	55                   	push   %rbp$/;"	l
ffff8000001053a7	kernel.asm	/^ffff8000001053a7:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff8000001053aa	kernel.asm	/^ffff8000001053aa:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff8000001053ae	kernel.asm	/^ffff8000001053ae:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)$/;"	l
ffff8000001053b5	kernel.asm	/^ffff8000001053b5:	48 bf 20 b2 11 00 00 	movabs $0xffff80000011b220,%rdi$/;"	l
ffff8000001053bc	kernel.asm	/^ffff8000001053bc:	80 ff ff $/;"	l
ffff8000001053bf	kernel.asm	/^ffff8000001053bf:	48 b8 d6 77 10 00 00 	movabs $0xffff8000001077d6,%rax$/;"	l
ffff8000001053c6	kernel.asm	/^ffff8000001053c6:	80 ff ff $/;"	l
ffff8000001053c9	kernel.asm	/^ffff8000001053c9:	ff d0                	callq  *%rax$/;"	l
ffff8000001053cb	kernel.asm	/^ffff8000001053cb:	48 b8 20 b2 11 00 00 	movabs $0xffff80000011b220,%rax$/;"	l
ffff8000001053d2	kernel.asm	/^ffff8000001053d2:	80 ff ff $/;"	l
ffff8000001053d5	kernel.asm	/^ffff8000001053d5:	8b 40 70             	mov    0x70(%rax),%eax$/;"	l
ffff8000001053d8	kernel.asm	/^ffff8000001053d8:	8d 50 ff             	lea    -0x1(%rax),%edx$/;"	l
ffff8000001053db	kernel.asm	/^ffff8000001053db:	48 b8 20 b2 11 00 00 	movabs $0xffff80000011b220,%rax$/;"	l
ffff8000001053e2	kernel.asm	/^ffff8000001053e2:	80 ff ff $/;"	l
ffff8000001053e5	kernel.asm	/^ffff8000001053e5:	89 50 70             	mov    %edx,0x70(%rax)$/;"	l
ffff8000001053e8	kernel.asm	/^ffff8000001053e8:	48 b8 20 b2 11 00 00 	movabs $0xffff80000011b220,%rax$/;"	l
ffff8000001053ef	kernel.asm	/^ffff8000001053ef:	80 ff ff $/;"	l
ffff8000001053f2	kernel.asm	/^ffff8000001053f2:	8b 40 74             	mov    0x74(%rax),%eax$/;"	l
ffff8000001053f5	kernel.asm	/^ffff8000001053f5:	85 c0                	test   %eax,%eax$/;"	l
ffff8000001053f7	kernel.asm	/^ffff8000001053f7:	74 16                	je     ffff80000010540f <end_op+0x69>$/;"	l
ffff8000001053f9	kernel.asm	/^ffff8000001053f9:	48 bf f8 d6 10 00 00 	movabs $0xffff80000010d6f8,%rdi$/;"	l
ffff800000105400	kernel.asm	/^ffff800000105400:	80 ff ff $/;"	l
ffff800000105403	kernel.asm	/^ffff800000105403:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff80000010540a	kernel.asm	/^ffff80000010540a:	80 ff ff $/;"	l
ffff80000010540d	kernel.asm	/^ffff80000010540d:	ff d0                	callq  *%rax$/;"	l
ffff80000010540f	kernel.asm	/^ffff80000010540f:	48 b8 20 b2 11 00 00 	movabs $0xffff80000011b220,%rax$/;"	l
ffff800000105416	kernel.asm	/^ffff800000105416:	80 ff ff $/;"	l
ffff800000105419	kernel.asm	/^ffff800000105419:	8b 40 70             	mov    0x70(%rax),%eax$/;"	l
ffff80000010541c	kernel.asm	/^ffff80000010541c:	85 c0                	test   %eax,%eax$/;"	l
ffff80000010541e	kernel.asm	/^ffff80000010541e:	75 1a                	jne    ffff80000010543a <end_op+0x94>$/;"	l
ffff800000105420	kernel.asm	/^ffff800000105420:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%rbp)$/;"	l
ffff800000105427	kernel.asm	/^ffff800000105427:	48 b8 20 b2 11 00 00 	movabs $0xffff80000011b220,%rax$/;"	l
ffff80000010542e	kernel.asm	/^ffff80000010542e:	80 ff ff $/;"	l
ffff800000105431	kernel.asm	/^ffff800000105431:	c7 40 74 01 00 00 00 	movl   $0x1,0x74(%rax)$/;"	l
ffff800000105438	kernel.asm	/^ffff800000105438:	eb 16                	jmp    ffff800000105450 <end_op+0xaa>$/;"	l
ffff80000010543a	kernel.asm	/^ffff80000010543a:	48 bf 20 b2 11 00 00 	movabs $0xffff80000011b220,%rdi$/;"	l
ffff800000105441	kernel.asm	/^ffff800000105441:	80 ff ff $/;"	l
ffff800000105444	kernel.asm	/^ffff800000105444:	48 b8 34 73 10 00 00 	movabs $0xffff800000107334,%rax$/;"	l
ffff80000010544b	kernel.asm	/^ffff80000010544b:	80 ff ff $/;"	l
ffff80000010544e	kernel.asm	/^ffff80000010544e:	ff d0                	callq  *%rax$/;"	l
ffff800000105450	kernel.asm	/^ffff800000105450:	48 bf 20 b2 11 00 00 	movabs $0xffff80000011b220,%rdi$/;"	l
ffff800000105457	kernel.asm	/^ffff800000105457:	80 ff ff $/;"	l
ffff80000010545a	kernel.asm	/^ffff80000010545a:	48 b8 6f 78 10 00 00 	movabs $0xffff80000010786f,%rax$/;"	l
ffff800000105461	kernel.asm	/^ffff800000105461:	80 ff ff $/;"	l
ffff800000105464	kernel.asm	/^ffff800000105464:	ff d0                	callq  *%rax$/;"	l
ffff800000105466	kernel.asm	/^ffff800000105466:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)$/;"	l
ffff80000010546a	kernel.asm	/^ffff80000010546a:	74 64                	je     ffff8000001054d0 <end_op+0x12a>$/;"	l
ffff80000010546c	kernel.asm	/^ffff80000010546c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000105471	kernel.asm	/^ffff800000105471:	48 ba dc 55 10 00 00 	movabs $0xffff8000001055dc,%rdx$/;"	l
ffff800000105478	kernel.asm	/^ffff800000105478:	80 ff ff $/;"	l
ffff80000010547b	kernel.asm	/^ffff80000010547b:	ff d2                	callq  *%rdx$/;"	l
ffff80000010547d	kernel.asm	/^ffff80000010547d:	48 bf 20 b2 11 00 00 	movabs $0xffff80000011b220,%rdi$/;"	l
ffff800000105484	kernel.asm	/^ffff800000105484:	80 ff ff $/;"	l
ffff800000105487	kernel.asm	/^ffff800000105487:	48 b8 d6 77 10 00 00 	movabs $0xffff8000001077d6,%rax$/;"	l
ffff80000010548e	kernel.asm	/^ffff80000010548e:	80 ff ff $/;"	l
ffff800000105491	kernel.asm	/^ffff800000105491:	ff d0                	callq  *%rax$/;"	l
ffff800000105493	kernel.asm	/^ffff800000105493:	48 b8 20 b2 11 00 00 	movabs $0xffff80000011b220,%rax$/;"	l
ffff80000010549a	kernel.asm	/^ffff80000010549a:	80 ff ff $/;"	l
ffff80000010549d	kernel.asm	/^ffff80000010549d:	c7 40 74 00 00 00 00 	movl   $0x0,0x74(%rax)$/;"	l
ffff8000001054a4	kernel.asm	/^ffff8000001054a4:	48 bf 20 b2 11 00 00 	movabs $0xffff80000011b220,%rdi$/;"	l
ffff8000001054ab	kernel.asm	/^ffff8000001054ab:	80 ff ff $/;"	l
ffff8000001054ae	kernel.asm	/^ffff8000001054ae:	48 b8 34 73 10 00 00 	movabs $0xffff800000107334,%rax$/;"	l
ffff8000001054b5	kernel.asm	/^ffff8000001054b5:	80 ff ff $/;"	l
ffff8000001054b8	kernel.asm	/^ffff8000001054b8:	ff d0                	callq  *%rax$/;"	l
ffff8000001054ba	kernel.asm	/^ffff8000001054ba:	48 bf 20 b2 11 00 00 	movabs $0xffff80000011b220,%rdi$/;"	l
ffff8000001054c1	kernel.asm	/^ffff8000001054c1:	80 ff ff $/;"	l
ffff8000001054c4	kernel.asm	/^ffff8000001054c4:	48 b8 6f 78 10 00 00 	movabs $0xffff80000010786f,%rax$/;"	l
ffff8000001054cb	kernel.asm	/^ffff8000001054cb:	80 ff ff $/;"	l
ffff8000001054ce	kernel.asm	/^ffff8000001054ce:	ff d0                	callq  *%rax$/;"	l
ffff8000001054d0	kernel.asm	/^ffff8000001054d0:	90                   	nop$/;"	l
ffff8000001054d1	kernel.asm	/^ffff8000001054d1:	c9                   	leaveq $/;"	l
ffff8000001054d2	kernel.asm	/^ffff8000001054d2:	c3                   	retq   $/;"	l
ffff8000001054d3	kernel.asm	/^ffff8000001054d3 <write_log>:$/;"	l
ffff8000001054d3	kernel.asm	/^ffff8000001054d3:	55                   	push   %rbp$/;"	l
ffff8000001054d4	kernel.asm	/^ffff8000001054d4:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff8000001054d7	kernel.asm	/^ffff8000001054d7:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ffff8000001054db	kernel.asm	/^ffff8000001054db:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)$/;"	l
ffff8000001054e2	kernel.asm	/^ffff8000001054e2:	e9 dc 00 00 00       	jmpq   ffff8000001055c3 <write_log+0xf0>$/;"	l
ffff8000001054e7	kernel.asm	/^ffff8000001054e7:	48 b8 20 b2 11 00 00 	movabs $0xffff80000011b220,%rax$/;"	l
ffff8000001054ee	kernel.asm	/^ffff8000001054ee:	80 ff ff $/;"	l
ffff8000001054f1	kernel.asm	/^ffff8000001054f1:	8b 50 68             	mov    0x68(%rax),%edx$/;"	l
ffff8000001054f4	kernel.asm	/^ffff8000001054f4:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff8000001054f7	kernel.asm	/^ffff8000001054f7:	01 d0                	add    %edx,%eax$/;"	l
ffff8000001054f9	kernel.asm	/^ffff8000001054f9:	83 c0 01             	add    $0x1,%eax$/;"	l
ffff8000001054fc	kernel.asm	/^ffff8000001054fc:	89 c2                	mov    %eax,%edx$/;"	l
ffff8000001054fe	kernel.asm	/^ffff8000001054fe:	48 b8 20 b2 11 00 00 	movabs $0xffff80000011b220,%rax$/;"	l
ffff800000105505	kernel.asm	/^ffff800000105505:	80 ff ff $/;"	l
ffff800000105508	kernel.asm	/^ffff800000105508:	8b 40 78             	mov    0x78(%rax),%eax$/;"	l
ffff80000010550b	kernel.asm	/^ffff80000010550b:	89 d6                	mov    %edx,%esi$/;"	l
ffff80000010550d	kernel.asm	/^ffff80000010550d:	89 c7                	mov    %eax,%edi$/;"	l
ffff80000010550f	kernel.asm	/^ffff80000010550f:	48 b8 f8 03 10 00 00 	movabs $0xffff8000001003f8,%rax$/;"	l
ffff800000105516	kernel.asm	/^ffff800000105516:	80 ff ff $/;"	l
ffff800000105519	kernel.asm	/^ffff800000105519:	ff d0                	callq  *%rax$/;"	l
ffff80000010551b	kernel.asm	/^ffff80000010551b:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ffff80000010551f	kernel.asm	/^ffff80000010551f:	48 b8 20 b2 11 00 00 	movabs $0xffff80000011b220,%rax$/;"	l
ffff800000105526	kernel.asm	/^ffff800000105526:	80 ff ff $/;"	l
ffff800000105529	kernel.asm	/^ffff800000105529:	8b 55 fc             	mov    -0x4(%rbp),%edx$/;"	l
ffff80000010552c	kernel.asm	/^ffff80000010552c:	48 63 d2             	movslq %edx,%rdx$/;"	l
ffff80000010552f	kernel.asm	/^ffff80000010552f:	48 83 c2 1c          	add    $0x1c,%rdx$/;"	l
ffff800000105533	kernel.asm	/^ffff800000105533:	8b 44 90 10          	mov    0x10(%rax,%rdx,4),%eax$/;"	l
ffff800000105537	kernel.asm	/^ffff800000105537:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000105539	kernel.asm	/^ffff800000105539:	48 b8 20 b2 11 00 00 	movabs $0xffff80000011b220,%rax$/;"	l
ffff800000105540	kernel.asm	/^ffff800000105540:	80 ff ff $/;"	l
ffff800000105543	kernel.asm	/^ffff800000105543:	8b 40 78             	mov    0x78(%rax),%eax$/;"	l
ffff800000105546	kernel.asm	/^ffff800000105546:	89 d6                	mov    %edx,%esi$/;"	l
ffff800000105548	kernel.asm	/^ffff800000105548:	89 c7                	mov    %eax,%edi$/;"	l
ffff80000010554a	kernel.asm	/^ffff80000010554a:	48 b8 f8 03 10 00 00 	movabs $0xffff8000001003f8,%rax$/;"	l
ffff800000105551	kernel.asm	/^ffff800000105551:	80 ff ff $/;"	l
ffff800000105554	kernel.asm	/^ffff800000105554:	ff d0                	callq  *%rax$/;"	l
ffff800000105556	kernel.asm	/^ffff800000105556:	48 89 45 e8          	mov    %rax,-0x18(%rbp)$/;"	l
ffff80000010555a	kernel.asm	/^ffff80000010555a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010555e	kernel.asm	/^ffff80000010555e:	48 8d 88 b0 00 00 00 	lea    0xb0(%rax),%rcx$/;"	l
ffff800000105565	kernel.asm	/^ffff800000105565:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000105569	kernel.asm	/^ffff800000105569:	48 05 b0 00 00 00    	add    $0xb0,%rax$/;"	l
ffff80000010556f	kernel.asm	/^ffff80000010556f:	ba 00 02 00 00       	mov    $0x200,%edx$/;"	l
ffff800000105574	kernel.asm	/^ffff800000105574:	48 89 ce             	mov    %rcx,%rsi$/;"	l
ffff800000105577	kernel.asm	/^ffff800000105577:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010557a	kernel.asm	/^ffff80000010557a:	48 b8 6f 7c 10 00 00 	movabs $0xffff800000107c6f,%rax$/;"	l
ffff800000105581	kernel.asm	/^ffff800000105581:	80 ff ff $/;"	l
ffff800000105584	kernel.asm	/^ffff800000105584:	ff d0                	callq  *%rax$/;"	l
ffff800000105586	kernel.asm	/^ffff800000105586:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff80000010558a	kernel.asm	/^ffff80000010558a:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010558d	kernel.asm	/^ffff80000010558d:	48 b8 46 04 10 00 00 	movabs $0xffff800000100446,%rax$/;"	l
ffff800000105594	kernel.asm	/^ffff800000105594:	80 ff ff $/;"	l
ffff800000105597	kernel.asm	/^ffff800000105597:	ff d0                	callq  *%rax$/;"	l
ffff800000105599	kernel.asm	/^ffff800000105599:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010559d	kernel.asm	/^ffff80000010559d:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001055a0	kernel.asm	/^ffff8000001055a0:	48 b8 aa 04 10 00 00 	movabs $0xffff8000001004aa,%rax$/;"	l
ffff8000001055a7	kernel.asm	/^ffff8000001055a7:	80 ff ff $/;"	l
ffff8000001055aa	kernel.asm	/^ffff8000001055aa:	ff d0                	callq  *%rax$/;"	l
ffff8000001055ac	kernel.asm	/^ffff8000001055ac:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff8000001055b0	kernel.asm	/^ffff8000001055b0:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001055b3	kernel.asm	/^ffff8000001055b3:	48 b8 aa 04 10 00 00 	movabs $0xffff8000001004aa,%rax$/;"	l
ffff8000001055ba	kernel.asm	/^ffff8000001055ba:	80 ff ff $/;"	l
ffff8000001055bd	kernel.asm	/^ffff8000001055bd:	ff d0                	callq  *%rax$/;"	l
ffff8000001055bf	kernel.asm	/^ffff8000001055bf:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)$/;"	l
ffff8000001055c3	kernel.asm	/^ffff8000001055c3:	48 b8 20 b2 11 00 00 	movabs $0xffff80000011b220,%rax$/;"	l
ffff8000001055ca	kernel.asm	/^ffff8000001055ca:	80 ff ff $/;"	l
ffff8000001055cd	kernel.asm	/^ffff8000001055cd:	8b 40 7c             	mov    0x7c(%rax),%eax$/;"	l
ffff8000001055d0	kernel.asm	/^ffff8000001055d0:	3b 45 fc             	cmp    -0x4(%rbp),%eax$/;"	l
ffff8000001055d3	kernel.asm	/^ffff8000001055d3:	0f 8f 0e ff ff ff    	jg     ffff8000001054e7 <write_log+0x14>$/;"	l
ffff8000001055d9	kernel.asm	/^ffff8000001055d9:	90                   	nop$/;"	l
ffff8000001055da	kernel.asm	/^ffff8000001055da:	c9                   	leaveq $/;"	l
ffff8000001055db	kernel.asm	/^ffff8000001055db:	c3                   	retq   $/;"	l
ffff8000001055dc	kernel.asm	/^ffff8000001055dc <commit>:$/;"	l
ffff8000001055dc	kernel.asm	/^ffff8000001055dc:	55                   	push   %rbp$/;"	l
ffff8000001055dd	kernel.asm	/^ffff8000001055dd:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff8000001055e0	kernel.asm	/^ffff8000001055e0:	48 b8 20 b2 11 00 00 	movabs $0xffff80000011b220,%rax$/;"	l
ffff8000001055e7	kernel.asm	/^ffff8000001055e7:	80 ff ff $/;"	l
ffff8000001055ea	kernel.asm	/^ffff8000001055ea:	8b 40 7c             	mov    0x7c(%rax),%eax$/;"	l
ffff8000001055ed	kernel.asm	/^ffff8000001055ed:	85 c0                	test   %eax,%eax$/;"	l
ffff8000001055ef	kernel.asm	/^ffff8000001055ef:	7e 41                	jle    ffff800000105632 <commit+0x56>$/;"	l
ffff8000001055f1	kernel.asm	/^ffff8000001055f1:	48 b8 d3 54 10 00 00 	movabs $0xffff8000001054d3,%rax$/;"	l
ffff8000001055f8	kernel.asm	/^ffff8000001055f8:	80 ff ff $/;"	l
ffff8000001055fb	kernel.asm	/^ffff8000001055fb:	ff d0                	callq  *%rax$/;"	l
ffff8000001055fd	kernel.asm	/^ffff8000001055fd:	48 b8 cd 51 10 00 00 	movabs $0xffff8000001051cd,%rax$/;"	l
ffff800000105604	kernel.asm	/^ffff800000105604:	80 ff ff $/;"	l
ffff800000105607	kernel.asm	/^ffff800000105607:	ff d0                	callq  *%rax$/;"	l
ffff800000105609	kernel.asm	/^ffff800000105609:	48 b8 10 50 10 00 00 	movabs $0xffff800000105010,%rax$/;"	l
ffff800000105610	kernel.asm	/^ffff800000105610:	80 ff ff $/;"	l
ffff800000105613	kernel.asm	/^ffff800000105613:	ff d0                	callq  *%rax$/;"	l
ffff800000105615	kernel.asm	/^ffff800000105615:	48 b8 20 b2 11 00 00 	movabs $0xffff80000011b220,%rax$/;"	l
ffff80000010561c	kernel.asm	/^ffff80000010561c:	80 ff ff $/;"	l
ffff80000010561f	kernel.asm	/^ffff80000010561f:	c7 40 7c 00 00 00 00 	movl   $0x0,0x7c(%rax)$/;"	l
ffff800000105626	kernel.asm	/^ffff800000105626:	48 b8 cd 51 10 00 00 	movabs $0xffff8000001051cd,%rax$/;"	l
ffff80000010562d	kernel.asm	/^ffff80000010562d:	80 ff ff $/;"	l
ffff800000105630	kernel.asm	/^ffff800000105630:	ff d0                	callq  *%rax$/;"	l
ffff800000105632	kernel.asm	/^ffff800000105632:	90                   	nop$/;"	l
ffff800000105633	kernel.asm	/^ffff800000105633:	5d                   	pop    %rbp$/;"	l
ffff800000105634	kernel.asm	/^ffff800000105634:	c3                   	retq   $/;"	l
ffff800000105635	kernel.asm	/^ffff800000105635 <log_write>:$/;"	l
ffff800000105635	kernel.asm	/^ffff800000105635:	55                   	push   %rbp$/;"	l
ffff800000105636	kernel.asm	/^ffff800000105636:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000105639	kernel.asm	/^ffff800000105639:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ffff80000010563d	kernel.asm	/^ffff80000010563d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
ffff800000105641	kernel.asm	/^ffff800000105641:	48 b8 20 b2 11 00 00 	movabs $0xffff80000011b220,%rax$/;"	l
ffff800000105648	kernel.asm	/^ffff800000105648:	80 ff ff $/;"	l
ffff80000010564b	kernel.asm	/^ffff80000010564b:	8b 40 7c             	mov    0x7c(%rax),%eax$/;"	l
ffff80000010564e	kernel.asm	/^ffff80000010564e:	83 f8 1d             	cmp    $0x1d,%eax$/;"	l
ffff800000105651	kernel.asm	/^ffff800000105651:	7f 21                	jg     ffff800000105674 <log_write+0x3f>$/;"	l
ffff800000105653	kernel.asm	/^ffff800000105653:	48 b8 20 b2 11 00 00 	movabs $0xffff80000011b220,%rax$/;"	l
ffff80000010565a	kernel.asm	/^ffff80000010565a:	80 ff ff $/;"	l
ffff80000010565d	kernel.asm	/^ffff80000010565d:	8b 50 7c             	mov    0x7c(%rax),%edx$/;"	l
ffff800000105660	kernel.asm	/^ffff800000105660:	48 b8 20 b2 11 00 00 	movabs $0xffff80000011b220,%rax$/;"	l
ffff800000105667	kernel.asm	/^ffff800000105667:	80 ff ff $/;"	l
ffff80000010566a	kernel.asm	/^ffff80000010566a:	8b 40 6c             	mov    0x6c(%rax),%eax$/;"	l
ffff80000010566d	kernel.asm	/^ffff80000010566d:	83 e8 01             	sub    $0x1,%eax$/;"	l
ffff800000105670	kernel.asm	/^ffff800000105670:	39 c2                	cmp    %eax,%edx$/;"	l
ffff800000105672	kernel.asm	/^ffff800000105672:	7c 16                	jl     ffff80000010568a <log_write+0x55>$/;"	l
ffff800000105674	kernel.asm	/^ffff800000105674:	48 bf 07 d7 10 00 00 	movabs $0xffff80000010d707,%rdi$/;"	l
ffff80000010567b	kernel.asm	/^ffff80000010567b:	80 ff ff $/;"	l
ffff80000010567e	kernel.asm	/^ffff80000010567e:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff800000105685	kernel.asm	/^ffff800000105685:	80 ff ff $/;"	l
ffff800000105688	kernel.asm	/^ffff800000105688:	ff d0                	callq  *%rax$/;"	l
ffff80000010568a	kernel.asm	/^ffff80000010568a:	48 b8 20 b2 11 00 00 	movabs $0xffff80000011b220,%rax$/;"	l
ffff800000105691	kernel.asm	/^ffff800000105691:	80 ff ff $/;"	l
ffff800000105694	kernel.asm	/^ffff800000105694:	8b 40 70             	mov    0x70(%rax),%eax$/;"	l
ffff800000105697	kernel.asm	/^ffff800000105697:	85 c0                	test   %eax,%eax$/;"	l
ffff800000105699	kernel.asm	/^ffff800000105699:	7f 16                	jg     ffff8000001056b1 <log_write+0x7c>$/;"	l
ffff80000010569b	kernel.asm	/^ffff80000010569b:	48 bf 1d d7 10 00 00 	movabs $0xffff80000010d71d,%rdi$/;"	l
ffff8000001056a2	kernel.asm	/^ffff8000001056a2:	80 ff ff $/;"	l
ffff8000001056a5	kernel.asm	/^ffff8000001056a5:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff8000001056ac	kernel.asm	/^ffff8000001056ac:	80 ff ff $/;"	l
ffff8000001056af	kernel.asm	/^ffff8000001056af:	ff d0                	callq  *%rax$/;"	l
ffff8000001056b1	kernel.asm	/^ffff8000001056b1:	48 bf 20 b2 11 00 00 	movabs $0xffff80000011b220,%rdi$/;"	l
ffff8000001056b8	kernel.asm	/^ffff8000001056b8:	80 ff ff $/;"	l
ffff8000001056bb	kernel.asm	/^ffff8000001056bb:	48 b8 d6 77 10 00 00 	movabs $0xffff8000001077d6,%rax$/;"	l
ffff8000001056c2	kernel.asm	/^ffff8000001056c2:	80 ff ff $/;"	l
ffff8000001056c5	kernel.asm	/^ffff8000001056c5:	ff d0                	callq  *%rax$/;"	l
ffff8000001056c7	kernel.asm	/^ffff8000001056c7:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)$/;"	l
ffff8000001056ce	kernel.asm	/^ffff8000001056ce:	eb 29                	jmp    ffff8000001056f9 <log_write+0xc4>$/;"	l
ffff8000001056d0	kernel.asm	/^ffff8000001056d0:	48 b8 20 b2 11 00 00 	movabs $0xffff80000011b220,%rax$/;"	l
ffff8000001056d7	kernel.asm	/^ffff8000001056d7:	80 ff ff $/;"	l
ffff8000001056da	kernel.asm	/^ffff8000001056da:	8b 55 fc             	mov    -0x4(%rbp),%edx$/;"	l
ffff8000001056dd	kernel.asm	/^ffff8000001056dd:	48 63 d2             	movslq %edx,%rdx$/;"	l
ffff8000001056e0	kernel.asm	/^ffff8000001056e0:	48 83 c2 1c          	add    $0x1c,%rdx$/;"	l
ffff8000001056e4	kernel.asm	/^ffff8000001056e4:	8b 44 90 10          	mov    0x10(%rax,%rdx,4),%eax$/;"	l
ffff8000001056e8	kernel.asm	/^ffff8000001056e8:	89 c2                	mov    %eax,%edx$/;"	l
ffff8000001056ea	kernel.asm	/^ffff8000001056ea:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff8000001056ee	kernel.asm	/^ffff8000001056ee:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
ffff8000001056f1	kernel.asm	/^ffff8000001056f1:	39 c2                	cmp    %eax,%edx$/;"	l
ffff8000001056f3	kernel.asm	/^ffff8000001056f3:	74 18                	je     ffff80000010570d <log_write+0xd8>$/;"	l
ffff8000001056f5	kernel.asm	/^ffff8000001056f5:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)$/;"	l
ffff8000001056f9	kernel.asm	/^ffff8000001056f9:	48 b8 20 b2 11 00 00 	movabs $0xffff80000011b220,%rax$/;"	l
ffff800000105700	kernel.asm	/^ffff800000105700:	80 ff ff $/;"	l
ffff800000105703	kernel.asm	/^ffff800000105703:	8b 40 7c             	mov    0x7c(%rax),%eax$/;"	l
ffff800000105706	kernel.asm	/^ffff800000105706:	3b 45 fc             	cmp    -0x4(%rbp),%eax$/;"	l
ffff800000105709	kernel.asm	/^ffff800000105709:	7f c5                	jg     ffff8000001056d0 <log_write+0x9b>$/;"	l
ffff80000010570b	kernel.asm	/^ffff80000010570b:	eb 01                	jmp    ffff80000010570e <log_write+0xd9>$/;"	l
ffff80000010570d	kernel.asm	/^ffff80000010570d:	90                   	nop$/;"	l
ffff80000010570e	kernel.asm	/^ffff80000010570e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000105712	kernel.asm	/^ffff800000105712:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
ffff800000105715	kernel.asm	/^ffff800000105715:	89 c1                	mov    %eax,%ecx$/;"	l
ffff800000105717	kernel.asm	/^ffff800000105717:	48 b8 20 b2 11 00 00 	movabs $0xffff80000011b220,%rax$/;"	l
ffff80000010571e	kernel.asm	/^ffff80000010571e:	80 ff ff $/;"	l
ffff800000105721	kernel.asm	/^ffff800000105721:	8b 55 fc             	mov    -0x4(%rbp),%edx$/;"	l
ffff800000105724	kernel.asm	/^ffff800000105724:	48 63 d2             	movslq %edx,%rdx$/;"	l
ffff800000105727	kernel.asm	/^ffff800000105727:	48 83 c2 1c          	add    $0x1c,%rdx$/;"	l
ffff80000010572b	kernel.asm	/^ffff80000010572b:	89 4c 90 10          	mov    %ecx,0x10(%rax,%rdx,4)$/;"	l
ffff80000010572f	kernel.asm	/^ffff80000010572f:	48 b8 20 b2 11 00 00 	movabs $0xffff80000011b220,%rax$/;"	l
ffff800000105736	kernel.asm	/^ffff800000105736:	80 ff ff $/;"	l
ffff800000105739	kernel.asm	/^ffff800000105739:	8b 40 7c             	mov    0x7c(%rax),%eax$/;"	l
ffff80000010573c	kernel.asm	/^ffff80000010573c:	3b 45 fc             	cmp    -0x4(%rbp),%eax$/;"	l
ffff80000010573f	kernel.asm	/^ffff80000010573f:	75 1d                	jne    ffff80000010575e <log_write+0x129>$/;"	l
ffff800000105741	kernel.asm	/^ffff800000105741:	48 b8 20 b2 11 00 00 	movabs $0xffff80000011b220,%rax$/;"	l
ffff800000105748	kernel.asm	/^ffff800000105748:	80 ff ff $/;"	l
ffff80000010574b	kernel.asm	/^ffff80000010574b:	8b 40 7c             	mov    0x7c(%rax),%eax$/;"	l
ffff80000010574e	kernel.asm	/^ffff80000010574e:	8d 50 01             	lea    0x1(%rax),%edx$/;"	l
ffff800000105751	kernel.asm	/^ffff800000105751:	48 b8 20 b2 11 00 00 	movabs $0xffff80000011b220,%rax$/;"	l
ffff800000105758	kernel.asm	/^ffff800000105758:	80 ff ff $/;"	l
ffff80000010575b	kernel.asm	/^ffff80000010575b:	89 50 7c             	mov    %edx,0x7c(%rax)$/;"	l
ffff80000010575e	kernel.asm	/^ffff80000010575e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000105762	kernel.asm	/^ffff800000105762:	8b 00                	mov    (%rax),%eax$/;"	l
ffff800000105764	kernel.asm	/^ffff800000105764:	83 c8 04             	or     $0x4,%eax$/;"	l
ffff800000105767	kernel.asm	/^ffff800000105767:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000105769	kernel.asm	/^ffff800000105769:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010576d	kernel.asm	/^ffff80000010576d:	89 10                	mov    %edx,(%rax)$/;"	l
ffff80000010576f	kernel.asm	/^ffff80000010576f:	48 bf 20 b2 11 00 00 	movabs $0xffff80000011b220,%rdi$/;"	l
ffff800000105776	kernel.asm	/^ffff800000105776:	80 ff ff $/;"	l
ffff800000105779	kernel.asm	/^ffff800000105779:	48 b8 6f 78 10 00 00 	movabs $0xffff80000010786f,%rax$/;"	l
ffff800000105780	kernel.asm	/^ffff800000105780:	80 ff ff $/;"	l
ffff800000105783	kernel.asm	/^ffff800000105783:	ff d0                	callq  *%rax$/;"	l
ffff800000105785	kernel.asm	/^ffff800000105785:	90                   	nop$/;"	l
ffff800000105786	kernel.asm	/^ffff800000105786:	c9                   	leaveq $/;"	l
ffff800000105787	kernel.asm	/^ffff800000105787:	c3                   	retq   $/;"	l
ffff800000105788	kernel.asm	/^ffff800000105788 <v2p>:$/;"	l
ffff800000105788	kernel.asm	/^ffff800000105788:	55                   	push   %rbp$/;"	l
ffff800000105789	kernel.asm	/^ffff800000105789:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010578c	kernel.asm	/^ffff80000010578c:	48 83 ec 08          	sub    $0x8,%rsp$/;"	l
ffff800000105790	kernel.asm	/^ffff800000105790:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)$/;"	l
ffff800000105794	kernel.asm	/^ffff800000105794:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx$/;"	l
ffff800000105798	kernel.asm	/^ffff800000105798:	48 b8 00 00 00 00 00 	movabs $0x800000000000,%rax$/;"	l
ffff80000010579f	kernel.asm	/^ffff80000010579f:	80 00 00 $/;"	l
ffff8000001057a2	kernel.asm	/^ffff8000001057a2:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff8000001057a5	kernel.asm	/^ffff8000001057a5:	c9                   	leaveq $/;"	l
ffff8000001057a6	kernel.asm	/^ffff8000001057a6:	c3                   	retq   $/;"	l
ffff8000001057a7	kernel.asm	/^ffff8000001057a7 <xchg>:$/;"	l
ffff8000001057a7	kernel.asm	/^ffff8000001057a7:	55                   	push   %rbp$/;"	l
ffff8000001057a8	kernel.asm	/^ffff8000001057a8:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff8000001057ab	kernel.asm	/^ffff8000001057ab:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ffff8000001057af	kernel.asm	/^ffff8000001057af:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
ffff8000001057b3	kernel.asm	/^ffff8000001057b3:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)$/;"	l
ffff8000001057b7	kernel.asm	/^ffff8000001057b7:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx$/;"	l
ffff8000001057bb	kernel.asm	/^ffff8000001057bb:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff8000001057bf	kernel.asm	/^ffff8000001057bf:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx$/;"	l
ffff8000001057c3	kernel.asm	/^ffff8000001057c3:	f0 87 02             	lock xchg %eax,(%rdx)$/;"	l
ffff8000001057c6	kernel.asm	/^ffff8000001057c6:	89 45 fc             	mov    %eax,-0x4(%rbp)$/;"	l
ffff8000001057c9	kernel.asm	/^ffff8000001057c9:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff8000001057cc	kernel.asm	/^ffff8000001057cc:	c9                   	leaveq $/;"	l
ffff8000001057cd	kernel.asm	/^ffff8000001057cd:	c3                   	retq   $/;"	l
ffff8000001057ce	kernel.asm	/^ffff8000001057ce <main>:$/;"	l
ffff8000001057ce	kernel.asm	/^ffff8000001057ce:	55                   	push   %rbp$/;"	l
ffff8000001057cf	kernel.asm	/^ffff8000001057cf:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff8000001057d2	kernel.asm	/^ffff8000001057d2:	48 b8 f6 a3 10 00 00 	movabs $0xffff80000010a3f6,%rax$/;"	l
ffff8000001057d9	kernel.asm	/^ffff8000001057d9:	80 ff ff $/;"	l
ffff8000001057dc	kernel.asm	/^ffff8000001057dc:	ff d0                	callq  *%rax$/;"	l
ffff8000001057de	kernel.asm	/^ffff8000001057de:	48 be 00 00 40 00 00 	movabs $0xffff800000400000,%rsi$/;"	l
ffff8000001057e5	kernel.asm	/^ffff8000001057e5:	80 ff ff $/;"	l
ffff8000001057e8	kernel.asm	/^ffff8000001057e8:	48 bf 00 00 12 00 00 	movabs $0xffff800000120000,%rdi$/;"	l
ffff8000001057ef	kernel.asm	/^ffff8000001057ef:	80 ff ff $/;"	l
ffff8000001057f2	kernel.asm	/^ffff8000001057f2:	48 b8 a8 43 10 00 00 	movabs $0xffff8000001043a8,%rax$/;"	l
ffff8000001057f9	kernel.asm	/^ffff8000001057f9:	80 ff ff $/;"	l
ffff8000001057fc	kernel.asm	/^ffff8000001057fc:	ff d0                	callq  *%rax$/;"	l
ffff8000001057fe	kernel.asm	/^ffff8000001057fe:	48 b8 cb b6 10 00 00 	movabs $0xffff80000010b6cb,%rax$/;"	l
ffff800000105805	kernel.asm	/^ffff800000105805:	80 ff ff $/;"	l
ffff800000105808	kernel.asm	/^ffff800000105808:	ff d0                	callq  *%rax$/;"	l
ffff80000010580a	kernel.asm	/^ffff80000010580a:	48 b8 dd 5d 10 00 00 	movabs $0xffff800000105ddd,%rax$/;"	l
ffff800000105811	kernel.asm	/^ffff800000105811:	80 ff ff $/;"	l
ffff800000105814	kernel.asm	/^ffff800000105814:	ff d0                	callq  *%rax$/;"	l
ffff800000105816	kernel.asm	/^ffff800000105816:	48 b8 0d 49 10 00 00 	movabs $0xffff80000010490d,%rax$/;"	l
ffff80000010581d	kernel.asm	/^ffff80000010581d:	80 ff ff $/;"	l
ffff800000105820	kernel.asm	/^ffff800000105820:	ff d0                	callq  *%rax$/;"	l
ffff800000105822	kernel.asm	/^ffff800000105822:	48 b8 92 9e 10 00 00 	movabs $0xffff800000109e92,%rax$/;"	l
ffff800000105829	kernel.asm	/^ffff800000105829:	80 ff ff $/;"	l
ffff80000010582c	kernel.asm	/^ffff80000010582c:	ff d0                	callq  *%rax$/;"	l
ffff80000010582e	kernel.asm	/^ffff80000010582e:	48 b8 0d b2 10 00 00 	movabs $0xffff80000010b20d,%rax$/;"	l
ffff800000105835	kernel.asm	/^ffff800000105835:	80 ff ff $/;"	l
ffff800000105838	kernel.asm	/^ffff800000105838:	ff d0                	callq  *%rax$/;"	l
ffff80000010583a	kernel.asm	/^ffff80000010583a:	48 b8 9d 4a 10 00 00 	movabs $0xffff800000104a9d,%rax$/;"	l
ffff800000105841	kernel.asm	/^ffff800000105841:	80 ff ff $/;"	l
ffff800000105844	kernel.asm	/^ffff800000105844:	ff d0                	callq  *%rax$/;"	l
ffff800000105846	kernel.asm	/^ffff800000105846:	89 c6                	mov    %eax,%esi$/;"	l
ffff800000105848	kernel.asm	/^ffff800000105848:	48 bf 38 d7 10 00 00 	movabs $0xffff80000010d738,%rdi$/;"	l
ffff80000010584f	kernel.asm	/^ffff80000010584f:	80 ff ff $/;"	l
ffff800000105852	kernel.asm	/^ffff800000105852:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000105857	kernel.asm	/^ffff800000105857:	48 ba ac 07 10 00 00 	movabs $0xffff8000001007ac,%rdx$/;"	l
ffff80000010585e	kernel.asm	/^ffff80000010585e:	80 ff ff $/;"	l
ffff800000105861	kernel.asm	/^ffff800000105861:	ff d2                	callq  *%rdx$/;"	l
ffff800000105863	kernel.asm	/^ffff800000105863:	48 b8 77 42 10 00 00 	movabs $0xffff800000104277,%rax$/;"	l
ffff80000010586a	kernel.asm	/^ffff80000010586a:	80 ff ff $/;"	l
ffff80000010586d	kernel.asm	/^ffff80000010586d:	ff d0                	callq  *%rax$/;"	l
ffff80000010586f	kernel.asm	/^ffff80000010586f:	48 b8 bb 13 10 00 00 	movabs $0xffff8000001013bb,%rax$/;"	l
ffff800000105876	kernel.asm	/^ffff800000105876:	80 ff ff $/;"	l
ffff800000105879	kernel.asm	/^ffff800000105879:	ff d0                	callq  *%rax$/;"	l
ffff80000010587b	kernel.asm	/^ffff80000010587b:	48 b8 45 17 10 00 00 	movabs $0xffff800000101745,%rax$/;"	l
ffff800000105882	kernel.asm	/^ffff800000105882:	80 ff ff $/;"	l
ffff800000105885	kernel.asm	/^ffff800000105885:	ff d0                	callq  *%rax$/;"	l
ffff800000105887	kernel.asm	/^ffff800000105887:	48 b8 fa a4 10 00 00 	movabs $0xffff80000010a4fa,%rax$/;"	l
ffff80000010588e	kernel.asm	/^ffff80000010588e:	80 ff ff $/;"	l
ffff800000105891	kernel.asm	/^ffff800000105891:	ff d0                	callq  *%rax$/;"	l
ffff800000105893	kernel.asm	/^ffff800000105893:	48 b8 04 65 10 00 00 	movabs $0xffff800000106504,%rax$/;"	l
ffff80000010589a	kernel.asm	/^ffff80000010589a:	80 ff ff $/;"	l
ffff80000010589d	kernel.asm	/^ffff80000010589d:	ff d0                	callq  *%rax$/;"	l
ffff80000010589f	kernel.asm	/^ffff80000010589f:	48 b8 53 01 10 00 00 	movabs $0xffff800000100153,%rax$/;"	l
ffff8000001058a6	kernel.asm	/^ffff8000001058a6:	80 ff ff $/;"	l
ffff8000001058a9	kernel.asm	/^ffff8000001058a9:	ff d0                	callq  *%rax$/;"	l
ffff8000001058ab	kernel.asm	/^ffff8000001058ab:	48 b8 b7 1e 10 00 00 	movabs $0xffff800000101eb7,%rax$/;"	l
ffff8000001058b2	kernel.asm	/^ffff8000001058b2:	80 ff ff $/;"	l
ffff8000001058b5	kernel.asm	/^ffff8000001058b5:	ff d0                	callq  *%rax$/;"	l
ffff8000001058b7	kernel.asm	/^ffff8000001058b7:	48 b8 f2 3c 10 00 00 	movabs $0xffff800000103cf2,%rax$/;"	l
ffff8000001058be	kernel.asm	/^ffff8000001058be:	80 ff ff $/;"	l
ffff8000001058c1	kernel.asm	/^ffff8000001058c1:	ff d0                	callq  *%rax$/;"	l
ffff8000001058c3	kernel.asm	/^ffff8000001058c3:	48 b8 b6 59 10 00 00 	movabs $0xffff8000001059b6,%rax$/;"	l
ffff8000001058ca	kernel.asm	/^ffff8000001058ca:	80 ff ff $/;"	l
ffff8000001058cd	kernel.asm	/^ffff8000001058cd:	ff d0                	callq  *%rax$/;"	l
ffff8000001058cf	kernel.asm	/^ffff8000001058cf:	48 be 00 00 00 0e 00 	movabs $0xffff80000e000000,%rsi$/;"	l
ffff8000001058d6	kernel.asm	/^ffff8000001058d6:	80 ff ff $/;"	l
ffff8000001058d9	kernel.asm	/^ffff8000001058d9:	48 bf 00 00 40 00 00 	movabs $0xffff800000400000,%rdi$/;"	l
ffff8000001058e0	kernel.asm	/^ffff8000001058e0:	80 ff ff $/;"	l
ffff8000001058e3	kernel.asm	/^ffff8000001058e3:	48 b8 06 44 10 00 00 	movabs $0xffff800000104406,%rax$/;"	l
ffff8000001058ea	kernel.asm	/^ffff8000001058ea:	80 ff ff $/;"	l
ffff8000001058ed	kernel.asm	/^ffff8000001058ed:	ff d0                	callq  *%rax$/;"	l
ffff8000001058ef	kernel.asm	/^ffff8000001058ef:	48 b8 b2 66 10 00 00 	movabs $0xffff8000001066b2,%rax$/;"	l
ffff8000001058f6	kernel.asm	/^ffff8000001058f6:	80 ff ff $/;"	l
ffff8000001058f9	kernel.asm	/^ffff8000001058f9:	ff d0                	callq  *%rax$/;"	l
ffff8000001058fb	kernel.asm	/^ffff8000001058fb:	48 b8 3b 59 10 00 00 	movabs $0xffff80000010593b,%rax$/;"	l
ffff800000105902	kernel.asm	/^ffff800000105902:	80 ff ff $/;"	l
ffff800000105905	kernel.asm	/^ffff800000105905:	ff d0                	callq  *%rax$/;"	l
ffff800000105907	kernel.asm	/^ffff800000105907 <mpenter>:$/;"	l
ffff800000105907	kernel.asm	/^ffff800000105907:	55                   	push   %rbp$/;"	l
ffff800000105908	kernel.asm	/^ffff800000105908:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010590b	kernel.asm	/^ffff80000010590b:	48 b8 d0 b7 10 00 00 	movabs $0xffff80000010b7d0,%rax$/;"	l
ffff800000105912	kernel.asm	/^ffff800000105912:	80 ff ff $/;"	l
ffff800000105915	kernel.asm	/^ffff800000105915:	ff d0                	callq  *%rax$/;"	l
ffff800000105917	kernel.asm	/^ffff800000105917:	48 b8 0d b2 10 00 00 	movabs $0xffff80000010b20d,%rax$/;"	l
ffff80000010591e	kernel.asm	/^ffff80000010591e:	80 ff ff $/;"	l
ffff800000105921	kernel.asm	/^ffff800000105921:	ff d0                	callq  *%rax$/;"	l
ffff800000105923	kernel.asm	/^ffff800000105923:	48 b8 0d 49 10 00 00 	movabs $0xffff80000010490d,%rax$/;"	l
ffff80000010592a	kernel.asm	/^ffff80000010592a:	80 ff ff $/;"	l
ffff80000010592d	kernel.asm	/^ffff80000010592d:	ff d0                	callq  *%rax$/;"	l
ffff80000010592f	kernel.asm	/^ffff80000010592f:	48 b8 3b 59 10 00 00 	movabs $0xffff80000010593b,%rax$/;"	l
ffff800000105936	kernel.asm	/^ffff800000105936:	80 ff ff $/;"	l
ffff800000105939	kernel.asm	/^ffff800000105939:	ff d0                	callq  *%rax$/;"	l
ffff80000010593b	kernel.asm	/^ffff80000010593b <mpmain>:$/;"	l
ffff80000010593b	kernel.asm	/^ffff80000010593b:	55                   	push   %rbp$/;"	l
ffff80000010593c	kernel.asm	/^ffff80000010593c:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010593f	kernel.asm	/^ffff80000010593f:	48 b8 9d 4a 10 00 00 	movabs $0xffff800000104a9d,%rax$/;"	l
ffff800000105946	kernel.asm	/^ffff800000105946:	80 ff ff $/;"	l
ffff800000105949	kernel.asm	/^ffff800000105949:	ff d0                	callq  *%rax$/;"	l
ffff80000010594b	kernel.asm	/^ffff80000010594b:	89 c6                	mov    %eax,%esi$/;"	l
ffff80000010594d	kernel.asm	/^ffff80000010594d:	48 bf 4f d7 10 00 00 	movabs $0xffff80000010d74f,%rdi$/;"	l
ffff800000105954	kernel.asm	/^ffff800000105954:	80 ff ff $/;"	l
ffff800000105957	kernel.asm	/^ffff800000105957:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff80000010595c	kernel.asm	/^ffff80000010595c:	48 ba ac 07 10 00 00 	movabs $0xffff8000001007ac,%rdx$/;"	l
ffff800000105963	kernel.asm	/^ffff800000105963:	80 ff ff $/;"	l
ffff800000105966	kernel.asm	/^ffff800000105966:	ff d2                	callq  *%rdx$/;"	l
ffff800000105968	kernel.asm	/^ffff800000105968:	48 b8 6a 9e 10 00 00 	movabs $0xffff800000109e6a,%rax$/;"	l
ffff80000010596f	kernel.asm	/^ffff80000010596f:	80 ff ff $/;"	l
ffff800000105972	kernel.asm	/^ffff800000105972:	ff d0                	callq  *%rax$/;"	l
ffff800000105974	kernel.asm	/^ffff800000105974:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000105979	kernel.asm	/^ffff800000105979:	48 ba 99 b1 10 00 00 	movabs $0xffff80000010b199,%rdx$/;"	l
ffff800000105980	kernel.asm	/^ffff800000105980:	80 ff ff $/;"	l
ffff800000105983	kernel.asm	/^ffff800000105983:	ff d2                	callq  *%rdx$/;"	l
ffff800000105985	kernel.asm	/^ffff800000105985:	48 c7 c0 f0 ff ff ff 	mov    $0xfffffffffffffff0,%rax$/;"	l
ffff80000010598c	kernel.asm	/^ffff80000010598c:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000105990	kernel.asm	/^ffff800000105990:	48 05 e0 00 00 00    	add    $0xe0,%rax$/;"	l
ffff800000105996	kernel.asm	/^ffff800000105996:	be 01 00 00 00       	mov    $0x1,%esi$/;"	l
ffff80000010599b	kernel.asm	/^ffff80000010599b:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010599e	kernel.asm	/^ffff80000010599e:	48 b8 a7 57 10 00 00 	movabs $0xffff8000001057a7,%rax$/;"	l
ffff8000001059a5	kernel.asm	/^ffff8000001059a5:	80 ff ff $/;"	l
ffff8000001059a8	kernel.asm	/^ffff8000001059a8:	ff d0                	callq  *%rax$/;"	l
ffff8000001059aa	kernel.asm	/^ffff8000001059aa:	48 b8 f6 6e 10 00 00 	movabs $0xffff800000106ef6,%rax$/;"	l
ffff8000001059b1	kernel.asm	/^ffff8000001059b1:	80 ff ff $/;"	l
ffff8000001059b4	kernel.asm	/^ffff8000001059b4:	ff d0                	callq  *%rax$/;"	l
ffff8000001059b6	kernel.asm	/^ffff8000001059b6 <startothers>:$/;"	l
ffff8000001059b6	kernel.asm	/^ffff8000001059b6:	55                   	push   %rbp$/;"	l
ffff8000001059b7	kernel.asm	/^ffff8000001059b7:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff8000001059ba	kernel.asm	/^ffff8000001059ba:	53                   	push   %rbx$/;"	l
ffff8000001059bb	kernel.asm	/^ffff8000001059bb:	48 83 ec 28          	sub    $0x28,%rsp$/;"	l
ffff8000001059bf	kernel.asm	/^ffff8000001059bf:	48 b8 00 70 00 00 00 	movabs $0xffff800000007000,%rax$/;"	l
ffff8000001059c6	kernel.asm	/^ffff8000001059c6:	80 ff ff $/;"	l
ffff8000001059c9	kernel.asm	/^ffff8000001059c9:	48 89 45 e0          	mov    %rax,-0x20(%rbp)$/;"	l
ffff8000001059cd	kernel.asm	/^ffff8000001059cd:	48 b8 72 00 00 00 00 	movabs $0x72,%rax$/;"	l
ffff8000001059d4	kernel.asm	/^ffff8000001059d4:	00 00 00 $/;"	l
ffff8000001059d7	kernel.asm	/^ffff8000001059d7:	89 c2                	mov    %eax,%edx$/;"	l
ffff8000001059d9	kernel.asm	/^ffff8000001059d9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff8000001059dd	kernel.asm	/^ffff8000001059dd:	48 be bc 02 11 00 00 	movabs $0xffff8000001102bc,%rsi$/;"	l
ffff8000001059e4	kernel.asm	/^ffff8000001059e4:	80 ff ff $/;"	l
ffff8000001059e7	kernel.asm	/^ffff8000001059e7:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001059ea	kernel.asm	/^ffff8000001059ea:	48 b8 6f 7c 10 00 00 	movabs $0xffff800000107c6f,%rax$/;"	l
ffff8000001059f1	kernel.asm	/^ffff8000001059f1:	80 ff ff $/;"	l
ffff8000001059f4	kernel.asm	/^ffff8000001059f4:	ff d0                	callq  *%rax$/;"	l
ffff8000001059f6	kernel.asm	/^ffff8000001059f6:	48 b8 20 b3 11 00 00 	movabs $0xffff80000011b320,%rax$/;"	l
ffff8000001059fd	kernel.asm	/^ffff8000001059fd:	80 ff ff $/;"	l
ffff800000105a00	kernel.asm	/^ffff800000105a00:	48 89 45 e8          	mov    %rax,-0x18(%rbp)$/;"	l
ffff800000105a04	kernel.asm	/^ffff800000105a04:	e9 c2 00 00 00       	jmpq   ffff800000105acb <startothers+0x115>$/;"	l
ffff800000105a09	kernel.asm	/^ffff800000105a09:	48 b8 9d 4a 10 00 00 	movabs $0xffff800000104a9d,%rax$/;"	l
ffff800000105a10	kernel.asm	/^ffff800000105a10:	80 ff ff $/;"	l
ffff800000105a13	kernel.asm	/^ffff800000105a13:	ff d0                	callq  *%rax$/;"	l
ffff800000105a15	kernel.asm	/^ffff800000105a15:	48 98                	cltq   $/;"	l
ffff800000105a17	kernel.asm	/^ffff800000105a17:	48 c1 e0 03          	shl    $0x3,%rax$/;"	l
ffff800000105a1b	kernel.asm	/^ffff800000105a1b:	48 89 c2             	mov    %rax,%rdx$/;"	l
ffff800000105a1e	kernel.asm	/^ffff800000105a1e:	48 c1 e2 05          	shl    $0x5,%rdx$/;"	l
ffff800000105a22	kernel.asm	/^ffff800000105a22:	48 29 c2             	sub    %rax,%rdx$/;"	l
ffff800000105a25	kernel.asm	/^ffff800000105a25:	48 b8 20 b3 11 00 00 	movabs $0xffff80000011b320,%rax$/;"	l
ffff800000105a2c	kernel.asm	/^ffff800000105a2c:	80 ff ff $/;"	l
ffff800000105a2f	kernel.asm	/^ffff800000105a2f:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff800000105a32	kernel.asm	/^ffff800000105a32:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax$/;"	l
ffff800000105a36	kernel.asm	/^ffff800000105a36:	0f 84 86 00 00 00    	je     ffff800000105ac2 <startothers+0x10c>$/;"	l
ffff800000105a3c	kernel.asm	/^ffff800000105a3c:	48 b8 d1 45 10 00 00 	movabs $0xffff8000001045d1,%rax$/;"	l
ffff800000105a43	kernel.asm	/^ffff800000105a43:	80 ff ff $/;"	l
ffff800000105a46	kernel.asm	/^ffff800000105a46:	ff d0                	callq  *%rax$/;"	l
ffff800000105a48	kernel.asm	/^ffff800000105a48:	48 89 45 d8          	mov    %rax,-0x28(%rbp)$/;"	l
ffff800000105a4c	kernel.asm	/^ffff800000105a4c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff800000105a50	kernel.asm	/^ffff800000105a50:	48 83 e8 04          	sub    $0x4,%rax$/;"	l
ffff800000105a54	kernel.asm	/^ffff800000105a54:	c7 00 00 80 00 00    	movl   $0x8000,(%rax)$/;"	l
ffff800000105a5a	kernel.asm	/^ffff800000105a5a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff800000105a5e	kernel.asm	/^ffff800000105a5e:	48 8d 58 f8          	lea    -0x8(%rax),%rbx$/;"	l
ffff800000105a62	kernel.asm	/^ffff800000105a62:	48 bf 49 00 10 00 00 	movabs $0xffff800000100049,%rdi$/;"	l
ffff800000105a69	kernel.asm	/^ffff800000105a69:	80 ff ff $/;"	l
ffff800000105a6c	kernel.asm	/^ffff800000105a6c:	48 b8 88 57 10 00 00 	movabs $0xffff800000105788,%rax$/;"	l
ffff800000105a73	kernel.asm	/^ffff800000105a73:	80 ff ff $/;"	l
ffff800000105a76	kernel.asm	/^ffff800000105a76:	ff d0                	callq  *%rax$/;"	l
ffff800000105a78	kernel.asm	/^ffff800000105a78:	89 03                	mov    %eax,(%rbx)$/;"	l
ffff800000105a7a	kernel.asm	/^ffff800000105a7a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff800000105a7e	kernel.asm	/^ffff800000105a7e:	48 83 e8 10          	sub    $0x10,%rax$/;"	l
ffff800000105a82	kernel.asm	/^ffff800000105a82:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx$/;"	l
ffff800000105a86	kernel.asm	/^ffff800000105a86:	48 81 c2 00 10 00 00 	add    $0x1000,%rdx$/;"	l
ffff800000105a8d	kernel.asm	/^ffff800000105a8d:	48 89 10             	mov    %rdx,(%rax)$/;"	l
ffff800000105a90	kernel.asm	/^ffff800000105a90:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff800000105a94	kernel.asm	/^ffff800000105a94:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000105a96	kernel.asm	/^ffff800000105a96:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000105a9a	kernel.asm	/^ffff800000105a9a:	0f b6 40 01          	movzbl 0x1(%rax),%eax$/;"	l
ffff800000105a9e	kernel.asm	/^ffff800000105a9e:	0f b6 c0             	movzbl %al,%eax$/;"	l
ffff800000105aa1	kernel.asm	/^ffff800000105aa1:	89 d6                	mov    %edx,%esi$/;"	l
ffff800000105aa3	kernel.asm	/^ffff800000105aa3:	89 c7                	mov    %eax,%edi$/;"	l
ffff800000105aa5	kernel.asm	/^ffff800000105aa5:	48 b8 e2 4b 10 00 00 	movabs $0xffff800000104be2,%rax$/;"	l
ffff800000105aac	kernel.asm	/^ffff800000105aac:	80 ff ff $/;"	l
ffff800000105aaf	kernel.asm	/^ffff800000105aaf:	ff d0                	callq  *%rax$/;"	l
ffff800000105ab1	kernel.asm	/^ffff800000105ab1:	90                   	nop$/;"	l
ffff800000105ab2	kernel.asm	/^ffff800000105ab2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000105ab6	kernel.asm	/^ffff800000105ab6:	8b 80 e0 00 00 00    	mov    0xe0(%rax),%eax$/;"	l
ffff800000105abc	kernel.asm	/^ffff800000105abc:	85 c0                	test   %eax,%eax$/;"	l
ffff800000105abe	kernel.asm	/^ffff800000105abe:	74 f2                	je     ffff800000105ab2 <startothers+0xfc>$/;"	l
ffff800000105ac0	kernel.asm	/^ffff800000105ac0:	eb 01                	jmp    ffff800000105ac3 <startothers+0x10d>$/;"	l
ffff800000105ac2	kernel.asm	/^ffff800000105ac2:	90                   	nop$/;"	l
ffff800000105ac3	kernel.asm	/^ffff800000105ac3:	48 81 45 e8 f8 00 00 	addq   $0xf8,-0x18(%rbp)$/;"	l
ffff800000105aca	kernel.asm	/^ffff800000105aca:	00 $/;"	l
ffff800000105acb	kernel.asm	/^ffff800000105acb:	48 b8 e0 ba 11 00 00 	movabs $0xffff80000011bae0,%rax$/;"	l
ffff800000105ad2	kernel.asm	/^ffff800000105ad2:	80 ff ff $/;"	l
ffff800000105ad5	kernel.asm	/^ffff800000105ad5:	8b 00                	mov    (%rax),%eax$/;"	l
ffff800000105ad7	kernel.asm	/^ffff800000105ad7:	48 98                	cltq   $/;"	l
ffff800000105ad9	kernel.asm	/^ffff800000105ad9:	48 c1 e0 03          	shl    $0x3,%rax$/;"	l
ffff800000105add	kernel.asm	/^ffff800000105add:	48 89 c2             	mov    %rax,%rdx$/;"	l
ffff800000105ae0	kernel.asm	/^ffff800000105ae0:	48 c1 e2 05          	shl    $0x5,%rdx$/;"	l
ffff800000105ae4	kernel.asm	/^ffff800000105ae4:	48 29 c2             	sub    %rax,%rdx$/;"	l
ffff800000105ae7	kernel.asm	/^ffff800000105ae7:	48 b8 20 b3 11 00 00 	movabs $0xffff80000011b320,%rax$/;"	l
ffff800000105aee	kernel.asm	/^ffff800000105aee:	80 ff ff $/;"	l
ffff800000105af1	kernel.asm	/^ffff800000105af1:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff800000105af4	kernel.asm	/^ffff800000105af4:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax$/;"	l
ffff800000105af8	kernel.asm	/^ffff800000105af8:	0f 87 0b ff ff ff    	ja     ffff800000105a09 <startothers+0x53>$/;"	l
ffff800000105afe	kernel.asm	/^ffff800000105afe:	90                   	nop$/;"	l
ffff800000105aff	kernel.asm	/^ffff800000105aff:	48 83 c4 28          	add    $0x28,%rsp$/;"	l
ffff800000105b03	kernel.asm	/^ffff800000105b03:	5b                   	pop    %rbx$/;"	l
ffff800000105b04	kernel.asm	/^ffff800000105b04:	5d                   	pop    %rbp$/;"	l
ffff800000105b05	kernel.asm	/^ffff800000105b05:	c3                   	retq   $/;"	l
ffff800000105b06	kernel.asm	/^ffff800000105b06 <inb>:$/;"	l
ffff800000105b06	kernel.asm	/^ffff800000105b06:	55                   	push   %rbp$/;"	l
ffff800000105b07	kernel.asm	/^ffff800000105b07:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000105b0a	kernel.asm	/^ffff800000105b0a:	48 83 ec 18          	sub    $0x18,%rsp$/;"	l
ffff800000105b0e	kernel.asm	/^ffff800000105b0e:	89 f8                	mov    %edi,%eax$/;"	l
ffff800000105b10	kernel.asm	/^ffff800000105b10:	66 89 45 ec          	mov    %ax,-0x14(%rbp)$/;"	l
ffff800000105b14	kernel.asm	/^ffff800000105b14:	0f b7 45 ec          	movzwl -0x14(%rbp),%eax$/;"	l
ffff800000105b18	kernel.asm	/^ffff800000105b18:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000105b1a	kernel.asm	/^ffff800000105b1a:	ec                   	in     (%dx),%al$/;"	l
ffff800000105b1b	kernel.asm	/^ffff800000105b1b:	88 45 ff             	mov    %al,-0x1(%rbp)$/;"	l
ffff800000105b1e	kernel.asm	/^ffff800000105b1e:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax$/;"	l
ffff800000105b22	kernel.asm	/^ffff800000105b22:	c9                   	leaveq $/;"	l
ffff800000105b23	kernel.asm	/^ffff800000105b23:	c3                   	retq   $/;"	l
ffff800000105b24	kernel.asm	/^ffff800000105b24 <outb>:$/;"	l
ffff800000105b24	kernel.asm	/^ffff800000105b24:	55                   	push   %rbp$/;"	l
ffff800000105b25	kernel.asm	/^ffff800000105b25:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000105b28	kernel.asm	/^ffff800000105b28:	48 83 ec 08          	sub    $0x8,%rsp$/;"	l
ffff800000105b2c	kernel.asm	/^ffff800000105b2c:	89 fa                	mov    %edi,%edx$/;"	l
ffff800000105b2e	kernel.asm	/^ffff800000105b2e:	89 f0                	mov    %esi,%eax$/;"	l
ffff800000105b30	kernel.asm	/^ffff800000105b30:	66 89 55 fc          	mov    %dx,-0x4(%rbp)$/;"	l
ffff800000105b34	kernel.asm	/^ffff800000105b34:	88 45 f8             	mov    %al,-0x8(%rbp)$/;"	l
ffff800000105b37	kernel.asm	/^ffff800000105b37:	0f b6 45 f8          	movzbl -0x8(%rbp),%eax$/;"	l
ffff800000105b3b	kernel.asm	/^ffff800000105b3b:	0f b7 55 fc          	movzwl -0x4(%rbp),%edx$/;"	l
ffff800000105b3f	kernel.asm	/^ffff800000105b3f:	ee                   	out    %al,(%dx)$/;"	l
ffff800000105b40	kernel.asm	/^ffff800000105b40:	90                   	nop$/;"	l
ffff800000105b41	kernel.asm	/^ffff800000105b41:	c9                   	leaveq $/;"	l
ffff800000105b42	kernel.asm	/^ffff800000105b42:	c3                   	retq   $/;"	l
ffff800000105b43	kernel.asm	/^ffff800000105b43 <sum>:$/;"	l
ffff800000105b43	kernel.asm	/^ffff800000105b43:	55                   	push   %rbp$/;"	l
ffff800000105b44	kernel.asm	/^ffff800000105b44:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000105b47	kernel.asm	/^ffff800000105b47:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ffff800000105b4b	kernel.asm	/^ffff800000105b4b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
ffff800000105b4f	kernel.asm	/^ffff800000105b4f:	89 75 e4             	mov    %esi,-0x1c(%rbp)$/;"	l
ffff800000105b52	kernel.asm	/^ffff800000105b52:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)$/;"	l
ffff800000105b59	kernel.asm	/^ffff800000105b59:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)$/;"	l
ffff800000105b60	kernel.asm	/^ffff800000105b60:	eb 1a                	jmp    ffff800000105b7c <sum+0x39>$/;"	l
ffff800000105b62	kernel.asm	/^ffff800000105b62:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff800000105b65	kernel.asm	/^ffff800000105b65:	48 63 d0             	movslq %eax,%rdx$/;"	l
ffff800000105b68	kernel.asm	/^ffff800000105b68:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000105b6c	kernel.asm	/^ffff800000105b6c:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff800000105b6f	kernel.asm	/^ffff800000105b6f:	0f b6 00             	movzbl (%rax),%eax$/;"	l
ffff800000105b72	kernel.asm	/^ffff800000105b72:	0f b6 c0             	movzbl %al,%eax$/;"	l
ffff800000105b75	kernel.asm	/^ffff800000105b75:	01 45 f8             	add    %eax,-0x8(%rbp)$/;"	l
ffff800000105b78	kernel.asm	/^ffff800000105b78:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)$/;"	l
ffff800000105b7c	kernel.asm	/^ffff800000105b7c:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff800000105b7f	kernel.asm	/^ffff800000105b7f:	3b 45 e4             	cmp    -0x1c(%rbp),%eax$/;"	l
ffff800000105b82	kernel.asm	/^ffff800000105b82:	7c de                	jl     ffff800000105b62 <sum+0x1f>$/;"	l
ffff800000105b84	kernel.asm	/^ffff800000105b84:	8b 45 f8             	mov    -0x8(%rbp),%eax$/;"	l
ffff800000105b87	kernel.asm	/^ffff800000105b87:	c9                   	leaveq $/;"	l
ffff800000105b88	kernel.asm	/^ffff800000105b88:	c3                   	retq   $/;"	l
ffff800000105b89	kernel.asm	/^ffff800000105b89 <mpsearch1>:$/;"	l
ffff800000105b89	kernel.asm	/^ffff800000105b89:	55                   	push   %rbp$/;"	l
ffff800000105b8a	kernel.asm	/^ffff800000105b8a:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000105b8d	kernel.asm	/^ffff800000105b8d:	48 83 ec 30          	sub    $0x30,%rsp$/;"	l
ffff800000105b91	kernel.asm	/^ffff800000105b91:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)$/;"	l
ffff800000105b95	kernel.asm	/^ffff800000105b95:	89 75 d4             	mov    %esi,-0x2c(%rbp)$/;"	l
ffff800000105b98	kernel.asm	/^ffff800000105b98:	48 ba 00 00 00 00 00 	movabs $0xffff800000000000,%rdx$/;"	l
ffff800000105b9f	kernel.asm	/^ffff800000105b9f:	80 ff ff $/;"	l
ffff800000105ba2	kernel.asm	/^ffff800000105ba2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff800000105ba6	kernel.asm	/^ffff800000105ba6:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff800000105ba9	kernel.asm	/^ffff800000105ba9:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ffff800000105bad	kernel.asm	/^ffff800000105bad:	8b 45 d4             	mov    -0x2c(%rbp),%eax$/;"	l
ffff800000105bb0	kernel.asm	/^ffff800000105bb0:	48 63 d0             	movslq %eax,%rdx$/;"	l
ffff800000105bb3	kernel.asm	/^ffff800000105bb3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000105bb7	kernel.asm	/^ffff800000105bb7:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff800000105bba	kernel.asm	/^ffff800000105bba:	48 89 45 e8          	mov    %rax,-0x18(%rbp)$/;"	l
ffff800000105bbe	kernel.asm	/^ffff800000105bbe:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000105bc2	kernel.asm	/^ffff800000105bc2:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff800000105bc6	kernel.asm	/^ffff800000105bc6:	eb 4d                	jmp    ffff800000105c15 <mpsearch1+0x8c>$/;"	l
ffff800000105bc8	kernel.asm	/^ffff800000105bc8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000105bcc	kernel.asm	/^ffff800000105bcc:	ba 04 00 00 00       	mov    $0x4,%edx$/;"	l
ffff800000105bd1	kernel.asm	/^ffff800000105bd1:	48 be 60 d7 10 00 00 	movabs $0xffff80000010d760,%rsi$/;"	l
ffff800000105bd8	kernel.asm	/^ffff800000105bd8:	80 ff ff $/;"	l
ffff800000105bdb	kernel.asm	/^ffff800000105bdb:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000105bde	kernel.asm	/^ffff800000105bde:	48 b8 00 7c 10 00 00 	movabs $0xffff800000107c00,%rax$/;"	l
ffff800000105be5	kernel.asm	/^ffff800000105be5:	80 ff ff $/;"	l
ffff800000105be8	kernel.asm	/^ffff800000105be8:	ff d0                	callq  *%rax$/;"	l
ffff800000105bea	kernel.asm	/^ffff800000105bea:	85 c0                	test   %eax,%eax$/;"	l
ffff800000105bec	kernel.asm	/^ffff800000105bec:	75 22                	jne    ffff800000105c10 <mpsearch1+0x87>$/;"	l
ffff800000105bee	kernel.asm	/^ffff800000105bee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000105bf2	kernel.asm	/^ffff800000105bf2:	be 10 00 00 00       	mov    $0x10,%esi$/;"	l
ffff800000105bf7	kernel.asm	/^ffff800000105bf7:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000105bfa	kernel.asm	/^ffff800000105bfa:	48 b8 43 5b 10 00 00 	movabs $0xffff800000105b43,%rax$/;"	l
ffff800000105c01	kernel.asm	/^ffff800000105c01:	80 ff ff $/;"	l
ffff800000105c04	kernel.asm	/^ffff800000105c04:	ff d0                	callq  *%rax$/;"	l
ffff800000105c06	kernel.asm	/^ffff800000105c06:	84 c0                	test   %al,%al$/;"	l
ffff800000105c08	kernel.asm	/^ffff800000105c08:	75 06                	jne    ffff800000105c10 <mpsearch1+0x87>$/;"	l
ffff800000105c0a	kernel.asm	/^ffff800000105c0a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000105c0e	kernel.asm	/^ffff800000105c0e:	eb 14                	jmp    ffff800000105c24 <mpsearch1+0x9b>$/;"	l
ffff800000105c10	kernel.asm	/^ffff800000105c10:	48 83 45 f8 10       	addq   $0x10,-0x8(%rbp)$/;"	l
ffff800000105c15	kernel.asm	/^ffff800000105c15:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000105c19	kernel.asm	/^ffff800000105c19:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax$/;"	l
ffff800000105c1d	kernel.asm	/^ffff800000105c1d:	72 a9                	jb     ffff800000105bc8 <mpsearch1+0x3f>$/;"	l
ffff800000105c1f	kernel.asm	/^ffff800000105c1f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000105c24	kernel.asm	/^ffff800000105c24:	c9                   	leaveq $/;"	l
ffff800000105c25	kernel.asm	/^ffff800000105c25:	c3                   	retq   $/;"	l
ffff800000105c26	kernel.asm	/^ffff800000105c26 <mpsearch>:$/;"	l
ffff800000105c26	kernel.asm	/^ffff800000105c26:	55                   	push   %rbp$/;"	l
ffff800000105c27	kernel.asm	/^ffff800000105c27:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000105c2a	kernel.asm	/^ffff800000105c2a:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ffff800000105c2e	kernel.asm	/^ffff800000105c2e:	48 b8 00 04 00 00 00 	movabs $0xffff800000000400,%rax$/;"	l
ffff800000105c35	kernel.asm	/^ffff800000105c35:	80 ff ff $/;"	l
ffff800000105c38	kernel.asm	/^ffff800000105c38:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff800000105c3c	kernel.asm	/^ffff800000105c3c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000105c40	kernel.asm	/^ffff800000105c40:	48 83 c0 0f          	add    $0xf,%rax$/;"	l
ffff800000105c44	kernel.asm	/^ffff800000105c44:	0f b6 00             	movzbl (%rax),%eax$/;"	l
ffff800000105c47	kernel.asm	/^ffff800000105c47:	0f b6 c0             	movzbl %al,%eax$/;"	l
ffff800000105c4a	kernel.asm	/^ffff800000105c4a:	c1 e0 08             	shl    $0x8,%eax$/;"	l
ffff800000105c4d	kernel.asm	/^ffff800000105c4d:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000105c4f	kernel.asm	/^ffff800000105c4f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000105c53	kernel.asm	/^ffff800000105c53:	48 83 c0 0e          	add    $0xe,%rax$/;"	l
ffff800000105c57	kernel.asm	/^ffff800000105c57:	0f b6 00             	movzbl (%rax),%eax$/;"	l
ffff800000105c5a	kernel.asm	/^ffff800000105c5a:	0f b6 c0             	movzbl %al,%eax$/;"	l
ffff800000105c5d	kernel.asm	/^ffff800000105c5d:	09 d0                	or     %edx,%eax$/;"	l
ffff800000105c5f	kernel.asm	/^ffff800000105c5f:	c1 e0 04             	shl    $0x4,%eax$/;"	l
ffff800000105c62	kernel.asm	/^ffff800000105c62:	89 45 f4             	mov    %eax,-0xc(%rbp)$/;"	l
ffff800000105c65	kernel.asm	/^ffff800000105c65:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)$/;"	l
ffff800000105c69	kernel.asm	/^ffff800000105c69:	74 28                	je     ffff800000105c93 <mpsearch+0x6d>$/;"	l
ffff800000105c6b	kernel.asm	/^ffff800000105c6b:	8b 45 f4             	mov    -0xc(%rbp),%eax$/;"	l
ffff800000105c6e	kernel.asm	/^ffff800000105c6e:	be 00 04 00 00       	mov    $0x400,%esi$/;"	l
ffff800000105c73	kernel.asm	/^ffff800000105c73:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000105c76	kernel.asm	/^ffff800000105c76:	48 b8 89 5b 10 00 00 	movabs $0xffff800000105b89,%rax$/;"	l
ffff800000105c7d	kernel.asm	/^ffff800000105c7d:	80 ff ff $/;"	l
ffff800000105c80	kernel.asm	/^ffff800000105c80:	ff d0                	callq  *%rax$/;"	l
ffff800000105c82	kernel.asm	/^ffff800000105c82:	48 89 45 e8          	mov    %rax,-0x18(%rbp)$/;"	l
ffff800000105c86	kernel.asm	/^ffff800000105c86:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)$/;"	l
ffff800000105c8b	kernel.asm	/^ffff800000105c8b:	74 5e                	je     ffff800000105ceb <mpsearch+0xc5>$/;"	l
ffff800000105c8d	kernel.asm	/^ffff800000105c8d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000105c91	kernel.asm	/^ffff800000105c91:	eb 6e                	jmp    ffff800000105d01 <mpsearch+0xdb>$/;"	l
ffff800000105c93	kernel.asm	/^ffff800000105c93:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000105c97	kernel.asm	/^ffff800000105c97:	48 83 c0 14          	add    $0x14,%rax$/;"	l
ffff800000105c9b	kernel.asm	/^ffff800000105c9b:	0f b6 00             	movzbl (%rax),%eax$/;"	l
ffff800000105c9e	kernel.asm	/^ffff800000105c9e:	0f b6 c0             	movzbl %al,%eax$/;"	l
ffff800000105ca1	kernel.asm	/^ffff800000105ca1:	c1 e0 08             	shl    $0x8,%eax$/;"	l
ffff800000105ca4	kernel.asm	/^ffff800000105ca4:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000105ca6	kernel.asm	/^ffff800000105ca6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000105caa	kernel.asm	/^ffff800000105caa:	48 83 c0 13          	add    $0x13,%rax$/;"	l
ffff800000105cae	kernel.asm	/^ffff800000105cae:	0f b6 00             	movzbl (%rax),%eax$/;"	l
ffff800000105cb1	kernel.asm	/^ffff800000105cb1:	0f b6 c0             	movzbl %al,%eax$/;"	l
ffff800000105cb4	kernel.asm	/^ffff800000105cb4:	09 d0                	or     %edx,%eax$/;"	l
ffff800000105cb6	kernel.asm	/^ffff800000105cb6:	c1 e0 0a             	shl    $0xa,%eax$/;"	l
ffff800000105cb9	kernel.asm	/^ffff800000105cb9:	89 45 f4             	mov    %eax,-0xc(%rbp)$/;"	l
ffff800000105cbc	kernel.asm	/^ffff800000105cbc:	8b 45 f4             	mov    -0xc(%rbp),%eax$/;"	l
ffff800000105cbf	kernel.asm	/^ffff800000105cbf:	2d 00 04 00 00       	sub    $0x400,%eax$/;"	l
ffff800000105cc4	kernel.asm	/^ffff800000105cc4:	89 c0                	mov    %eax,%eax$/;"	l
ffff800000105cc6	kernel.asm	/^ffff800000105cc6:	be 00 04 00 00       	mov    $0x400,%esi$/;"	l
ffff800000105ccb	kernel.asm	/^ffff800000105ccb:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000105cce	kernel.asm	/^ffff800000105cce:	48 b8 89 5b 10 00 00 	movabs $0xffff800000105b89,%rax$/;"	l
ffff800000105cd5	kernel.asm	/^ffff800000105cd5:	80 ff ff $/;"	l
ffff800000105cd8	kernel.asm	/^ffff800000105cd8:	ff d0                	callq  *%rax$/;"	l
ffff800000105cda	kernel.asm	/^ffff800000105cda:	48 89 45 e8          	mov    %rax,-0x18(%rbp)$/;"	l
ffff800000105cde	kernel.asm	/^ffff800000105cde:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)$/;"	l
ffff800000105ce3	kernel.asm	/^ffff800000105ce3:	74 06                	je     ffff800000105ceb <mpsearch+0xc5>$/;"	l
ffff800000105ce5	kernel.asm	/^ffff800000105ce5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000105ce9	kernel.asm	/^ffff800000105ce9:	eb 16                	jmp    ffff800000105d01 <mpsearch+0xdb>$/;"	l
ffff800000105ceb	kernel.asm	/^ffff800000105ceb:	be 00 00 01 00       	mov    $0x10000,%esi$/;"	l
ffff800000105cf0	kernel.asm	/^ffff800000105cf0:	bf 00 00 0f 00       	mov    $0xf0000,%edi$/;"	l
ffff800000105cf5	kernel.asm	/^ffff800000105cf5:	48 b8 89 5b 10 00 00 	movabs $0xffff800000105b89,%rax$/;"	l
ffff800000105cfc	kernel.asm	/^ffff800000105cfc:	80 ff ff $/;"	l
ffff800000105cff	kernel.asm	/^ffff800000105cff:	ff d0                	callq  *%rax$/;"	l
ffff800000105d01	kernel.asm	/^ffff800000105d01:	c9                   	leaveq $/;"	l
ffff800000105d02	kernel.asm	/^ffff800000105d02:	c3                   	retq   $/;"	l
ffff800000105d03	kernel.asm	/^ffff800000105d03 <mpconfig>:$/;"	l
ffff800000105d03	kernel.asm	/^ffff800000105d03:	55                   	push   %rbp$/;"	l
ffff800000105d04	kernel.asm	/^ffff800000105d04:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000105d07	kernel.asm	/^ffff800000105d07:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ffff800000105d0b	kernel.asm	/^ffff800000105d0b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
ffff800000105d0f	kernel.asm	/^ffff800000105d0f:	48 b8 26 5c 10 00 00 	movabs $0xffff800000105c26,%rax$/;"	l
ffff800000105d16	kernel.asm	/^ffff800000105d16:	80 ff ff $/;"	l
ffff800000105d19	kernel.asm	/^ffff800000105d19:	ff d0                	callq  *%rax$/;"	l
ffff800000105d1b	kernel.asm	/^ffff800000105d1b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff800000105d1f	kernel.asm	/^ffff800000105d1f:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)$/;"	l
ffff800000105d24	kernel.asm	/^ffff800000105d24:	74 0b                	je     ffff800000105d31 <mpconfig+0x2e>$/;"	l
ffff800000105d26	kernel.asm	/^ffff800000105d26:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000105d2a	kernel.asm	/^ffff800000105d2a:	8b 40 04             	mov    0x4(%rax),%eax$/;"	l
ffff800000105d2d	kernel.asm	/^ffff800000105d2d:	85 c0                	test   %eax,%eax$/;"	l
ffff800000105d2f	kernel.asm	/^ffff800000105d2f:	75 0a                	jne    ffff800000105d3b <mpconfig+0x38>$/;"	l
ffff800000105d31	kernel.asm	/^ffff800000105d31:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000105d36	kernel.asm	/^ffff800000105d36:	e9 a0 00 00 00       	jmpq   ffff800000105ddb <mpconfig+0xd8>$/;"	l
ffff800000105d3b	kernel.asm	/^ffff800000105d3b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000105d3f	kernel.asm	/^ffff800000105d3f:	8b 40 04             	mov    0x4(%rax),%eax$/;"	l
ffff800000105d42	kernel.asm	/^ffff800000105d42:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000105d44	kernel.asm	/^ffff800000105d44:	48 b8 00 00 00 00 00 	movabs $0xffff800000000000,%rax$/;"	l
ffff800000105d4b	kernel.asm	/^ffff800000105d4b:	80 ff ff $/;"	l
ffff800000105d4e	kernel.asm	/^ffff800000105d4e:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff800000105d51	kernel.asm	/^ffff800000105d51:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ffff800000105d55	kernel.asm	/^ffff800000105d55:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000105d59	kernel.asm	/^ffff800000105d59:	ba 04 00 00 00       	mov    $0x4,%edx$/;"	l
ffff800000105d5e	kernel.asm	/^ffff800000105d5e:	48 be 65 d7 10 00 00 	movabs $0xffff80000010d765,%rsi$/;"	l
ffff800000105d65	kernel.asm	/^ffff800000105d65:	80 ff ff $/;"	l
ffff800000105d68	kernel.asm	/^ffff800000105d68:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000105d6b	kernel.asm	/^ffff800000105d6b:	48 b8 00 7c 10 00 00 	movabs $0xffff800000107c00,%rax$/;"	l
ffff800000105d72	kernel.asm	/^ffff800000105d72:	80 ff ff $/;"	l
ffff800000105d75	kernel.asm	/^ffff800000105d75:	ff d0                	callq  *%rax$/;"	l
ffff800000105d77	kernel.asm	/^ffff800000105d77:	85 c0                	test   %eax,%eax$/;"	l
ffff800000105d79	kernel.asm	/^ffff800000105d79:	74 07                	je     ffff800000105d82 <mpconfig+0x7f>$/;"	l
ffff800000105d7b	kernel.asm	/^ffff800000105d7b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000105d80	kernel.asm	/^ffff800000105d80:	eb 59                	jmp    ffff800000105ddb <mpconfig+0xd8>$/;"	l
ffff800000105d82	kernel.asm	/^ffff800000105d82:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000105d86	kernel.asm	/^ffff800000105d86:	0f b6 40 06          	movzbl 0x6(%rax),%eax$/;"	l
ffff800000105d8a	kernel.asm	/^ffff800000105d8a:	3c 01                	cmp    $0x1,%al$/;"	l
ffff800000105d8c	kernel.asm	/^ffff800000105d8c:	74 13                	je     ffff800000105da1 <mpconfig+0x9e>$/;"	l
ffff800000105d8e	kernel.asm	/^ffff800000105d8e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000105d92	kernel.asm	/^ffff800000105d92:	0f b6 40 06          	movzbl 0x6(%rax),%eax$/;"	l
ffff800000105d96	kernel.asm	/^ffff800000105d96:	3c 04                	cmp    $0x4,%al$/;"	l
ffff800000105d98	kernel.asm	/^ffff800000105d98:	74 07                	je     ffff800000105da1 <mpconfig+0x9e>$/;"	l
ffff800000105d9a	kernel.asm	/^ffff800000105d9a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000105d9f	kernel.asm	/^ffff800000105d9f:	eb 3a                	jmp    ffff800000105ddb <mpconfig+0xd8>$/;"	l
ffff800000105da1	kernel.asm	/^ffff800000105da1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000105da5	kernel.asm	/^ffff800000105da5:	0f b7 40 04          	movzwl 0x4(%rax),%eax$/;"	l
ffff800000105da9	kernel.asm	/^ffff800000105da9:	0f b7 d0             	movzwl %ax,%edx$/;"	l
ffff800000105dac	kernel.asm	/^ffff800000105dac:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000105db0	kernel.asm	/^ffff800000105db0:	89 d6                	mov    %edx,%esi$/;"	l
ffff800000105db2	kernel.asm	/^ffff800000105db2:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000105db5	kernel.asm	/^ffff800000105db5:	48 b8 43 5b 10 00 00 	movabs $0xffff800000105b43,%rax$/;"	l
ffff800000105dbc	kernel.asm	/^ffff800000105dbc:	80 ff ff $/;"	l
ffff800000105dbf	kernel.asm	/^ffff800000105dbf:	ff d0                	callq  *%rax$/;"	l
ffff800000105dc1	kernel.asm	/^ffff800000105dc1:	84 c0                	test   %al,%al$/;"	l
ffff800000105dc3	kernel.asm	/^ffff800000105dc3:	74 07                	je     ffff800000105dcc <mpconfig+0xc9>$/;"	l
ffff800000105dc5	kernel.asm	/^ffff800000105dc5:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000105dca	kernel.asm	/^ffff800000105dca:	eb 0f                	jmp    ffff800000105ddb <mpconfig+0xd8>$/;"	l
ffff800000105dcc	kernel.asm	/^ffff800000105dcc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000105dd0	kernel.asm	/^ffff800000105dd0:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx$/;"	l
ffff800000105dd4	kernel.asm	/^ffff800000105dd4:	48 89 10             	mov    %rdx,(%rax)$/;"	l
ffff800000105dd7	kernel.asm	/^ffff800000105dd7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000105ddb	kernel.asm	/^ffff800000105ddb:	c9                   	leaveq $/;"	l
ffff800000105ddc	kernel.asm	/^ffff800000105ddc:	c3                   	retq   $/;"	l
ffff800000105ddd	kernel.asm	/^ffff800000105ddd <mpinit>:$/;"	l
ffff800000105ddd	kernel.asm	/^ffff800000105ddd:	55                   	push   %rbp$/;"	l
ffff800000105dde	kernel.asm	/^ffff800000105dde:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000105de1	kernel.asm	/^ffff800000105de1:	48 83 ec 30          	sub    $0x30,%rsp$/;"	l
ffff800000105de5	kernel.asm	/^ffff800000105de5:	48 8d 45 d0          	lea    -0x30(%rbp),%rax$/;"	l
ffff800000105de9	kernel.asm	/^ffff800000105de9:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000105dec	kernel.asm	/^ffff800000105dec:	48 b8 03 5d 10 00 00 	movabs $0xffff800000105d03,%rax$/;"	l
ffff800000105df3	kernel.asm	/^ffff800000105df3:	80 ff ff $/;"	l
ffff800000105df6	kernel.asm	/^ffff800000105df6:	ff d0                	callq  *%rax$/;"	l
ffff800000105df8	kernel.asm	/^ffff800000105df8:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ffff800000105dfc	kernel.asm	/^ffff800000105dfc:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)$/;"	l
ffff800000105e01	kernel.asm	/^ffff800000105e01:	75 20                	jne    ffff800000105e23 <mpinit+0x46>$/;"	l
ffff800000105e03	kernel.asm	/^ffff800000105e03:	48 bf 6a d7 10 00 00 	movabs $0xffff80000010d76a,%rdi$/;"	l
ffff800000105e0a	kernel.asm	/^ffff800000105e0a:	80 ff ff $/;"	l
ffff800000105e0d	kernel.asm	/^ffff800000105e0d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000105e12	kernel.asm	/^ffff800000105e12:	48 ba ac 07 10 00 00 	movabs $0xffff8000001007ac,%rdx$/;"	l
ffff800000105e19	kernel.asm	/^ffff800000105e19:	80 ff ff $/;"	l
ffff800000105e1c	kernel.asm	/^ffff800000105e1c:	ff d2                	callq  *%rdx$/;"	l
ffff800000105e1e	kernel.asm	/^ffff800000105e1e:	e9 bc 01 00 00       	jmpq   ffff800000105fdf <mpinit+0x202>$/;"	l
ffff800000105e23	kernel.asm	/^ffff800000105e23:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000105e27	kernel.asm	/^ffff800000105e27:	8b 40 24             	mov    0x24(%rax),%eax$/;"	l
ffff800000105e2a	kernel.asm	/^ffff800000105e2a:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000105e2c	kernel.asm	/^ffff800000105e2c:	48 b8 00 00 00 00 00 	movabs $0xffff800000000000,%rax$/;"	l
ffff800000105e33	kernel.asm	/^ffff800000105e33:	80 ff ff $/;"	l
ffff800000105e36	kernel.asm	/^ffff800000105e36:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff800000105e39	kernel.asm	/^ffff800000105e39:	48 89 c2             	mov    %rax,%rdx$/;"	l
ffff800000105e3c	kernel.asm	/^ffff800000105e3c:	48 b8 00 b2 11 00 00 	movabs $0xffff80000011b200,%rax$/;"	l
ffff800000105e43	kernel.asm	/^ffff800000105e43:	80 ff ff $/;"	l
ffff800000105e46	kernel.asm	/^ffff800000105e46:	48 89 10             	mov    %rdx,(%rax)$/;"	l
ffff800000105e49	kernel.asm	/^ffff800000105e49:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000105e4d	kernel.asm	/^ffff800000105e4d:	48 83 c0 2c          	add    $0x2c,%rax$/;"	l
ffff800000105e51	kernel.asm	/^ffff800000105e51:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff800000105e55	kernel.asm	/^ffff800000105e55:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000105e59	kernel.asm	/^ffff800000105e59:	0f b7 40 04          	movzwl 0x4(%rax),%eax$/;"	l
ffff800000105e5d	kernel.asm	/^ffff800000105e5d:	0f b7 d0             	movzwl %ax,%edx$/;"	l
ffff800000105e60	kernel.asm	/^ffff800000105e60:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000105e64	kernel.asm	/^ffff800000105e64:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff800000105e67	kernel.asm	/^ffff800000105e67:	48 89 45 e8          	mov    %rax,-0x18(%rbp)$/;"	l
ffff800000105e6b	kernel.asm	/^ffff800000105e6b:	e9 ec 00 00 00       	jmpq   ffff800000105f5c <mpinit+0x17f>$/;"	l
ffff800000105e70	kernel.asm	/^ffff800000105e70:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000105e74	kernel.asm	/^ffff800000105e74:	0f b6 00             	movzbl (%rax),%eax$/;"	l
ffff800000105e77	kernel.asm	/^ffff800000105e77:	0f b6 c0             	movzbl %al,%eax$/;"	l
ffff800000105e7a	kernel.asm	/^ffff800000105e7a:	83 f8 04             	cmp    $0x4,%eax$/;"	l
ffff800000105e7d	kernel.asm	/^ffff800000105e7d:	0f 87 c3 00 00 00    	ja     ffff800000105f46 <mpinit+0x169>$/;"	l
ffff800000105e83	kernel.asm	/^ffff800000105e83:	89 c0                	mov    %eax,%eax$/;"	l
ffff800000105e85	kernel.asm	/^ffff800000105e85:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx$/;"	l
ffff800000105e8c	kernel.asm	/^ffff800000105e8c:	00 $/;"	l
ffff800000105e8d	kernel.asm	/^ffff800000105e8d:	48 b8 c0 d7 10 00 00 	movabs $0xffff80000010d7c0,%rax$/;"	l
ffff800000105e94	kernel.asm	/^ffff800000105e94:	80 ff ff $/;"	l
ffff800000105e97	kernel.asm	/^ffff800000105e97:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff800000105e9a	kernel.asm	/^ffff800000105e9a:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff800000105e9d	kernel.asm	/^ffff800000105e9d:	ff e0                	jmpq   *%rax$/;"	l
ffff800000105e9f	kernel.asm	/^ffff800000105e9f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000105ea3	kernel.asm	/^ffff800000105ea3:	48 89 45 e0          	mov    %rax,-0x20(%rbp)$/;"	l
ffff800000105ea7	kernel.asm	/^ffff800000105ea7:	48 b8 e0 ba 11 00 00 	movabs $0xffff80000011bae0,%rax$/;"	l
ffff800000105eae	kernel.asm	/^ffff800000105eae:	80 ff ff $/;"	l
ffff800000105eb1	kernel.asm	/^ffff800000105eb1:	8b 00                	mov    (%rax),%eax$/;"	l
ffff800000105eb3	kernel.asm	/^ffff800000105eb3:	83 f8 07             	cmp    $0x7,%eax$/;"	l
ffff800000105eb6	kernel.asm	/^ffff800000105eb6:	7f 5d                	jg     ffff800000105f15 <mpinit+0x138>$/;"	l
ffff800000105eb8	kernel.asm	/^ffff800000105eb8:	48 b8 e0 ba 11 00 00 	movabs $0xffff80000011bae0,%rax$/;"	l
ffff800000105ebf	kernel.asm	/^ffff800000105ebf:	80 ff ff $/;"	l
ffff800000105ec2	kernel.asm	/^ffff800000105ec2:	8b 10                	mov    (%rax),%edx$/;"	l
ffff800000105ec4	kernel.asm	/^ffff800000105ec4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff800000105ec8	kernel.asm	/^ffff800000105ec8:	0f b6 48 01          	movzbl 0x1(%rax),%ecx$/;"	l
ffff800000105ecc	kernel.asm	/^ffff800000105ecc:	48 be 20 b3 11 00 00 	movabs $0xffff80000011b320,%rsi$/;"	l
ffff800000105ed3	kernel.asm	/^ffff800000105ed3:	80 ff ff $/;"	l
ffff800000105ed6	kernel.asm	/^ffff800000105ed6:	48 63 c2             	movslq %edx,%rax$/;"	l
ffff800000105ed9	kernel.asm	/^ffff800000105ed9:	48 89 c2             	mov    %rax,%rdx$/;"	l
ffff800000105edc	kernel.asm	/^ffff800000105edc:	48 8d 04 d5 00 00 00 	lea    0x0(,%rdx,8),%rax$/;"	l
ffff800000105ee3	kernel.asm	/^ffff800000105ee3:	00 $/;"	l
ffff800000105ee4	kernel.asm	/^ffff800000105ee4:	48 89 c2             	mov    %rax,%rdx$/;"	l
ffff800000105ee7	kernel.asm	/^ffff800000105ee7:	48 89 d0             	mov    %rdx,%rax$/;"	l
ffff800000105eea	kernel.asm	/^ffff800000105eea:	48 c1 e0 05          	shl    $0x5,%rax$/;"	l
ffff800000105eee	kernel.asm	/^ffff800000105eee:	48 29 d0             	sub    %rdx,%rax$/;"	l
ffff800000105ef1	kernel.asm	/^ffff800000105ef1:	48 01 f0             	add    %rsi,%rax$/;"	l
ffff800000105ef4	kernel.asm	/^ffff800000105ef4:	48 83 c0 01          	add    $0x1,%rax$/;"	l
ffff800000105ef8	kernel.asm	/^ffff800000105ef8:	88 08                	mov    %cl,(%rax)$/;"	l
ffff800000105efa	kernel.asm	/^ffff800000105efa:	48 b8 e0 ba 11 00 00 	movabs $0xffff80000011bae0,%rax$/;"	l
ffff800000105f01	kernel.asm	/^ffff800000105f01:	80 ff ff $/;"	l
ffff800000105f04	kernel.asm	/^ffff800000105f04:	8b 00                	mov    (%rax),%eax$/;"	l
ffff800000105f06	kernel.asm	/^ffff800000105f06:	8d 50 01             	lea    0x1(%rax),%edx$/;"	l
ffff800000105f09	kernel.asm	/^ffff800000105f09:	48 b8 e0 ba 11 00 00 	movabs $0xffff80000011bae0,%rax$/;"	l
ffff800000105f10	kernel.asm	/^ffff800000105f10:	80 ff ff $/;"	l
ffff800000105f13	kernel.asm	/^ffff800000105f13:	89 10                	mov    %edx,(%rax)$/;"	l
ffff800000105f15	kernel.asm	/^ffff800000105f15:	48 83 45 f8 14       	addq   $0x14,-0x8(%rbp)$/;"	l
ffff800000105f1a	kernel.asm	/^ffff800000105f1a:	eb 40                	jmp    ffff800000105f5c <mpinit+0x17f>$/;"	l
ffff800000105f1c	kernel.asm	/^ffff800000105f1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000105f20	kernel.asm	/^ffff800000105f20:	48 89 45 d8          	mov    %rax,-0x28(%rbp)$/;"	l
ffff800000105f24	kernel.asm	/^ffff800000105f24:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff800000105f28	kernel.asm	/^ffff800000105f28:	0f b6 50 01          	movzbl 0x1(%rax),%edx$/;"	l
ffff800000105f2c	kernel.asm	/^ffff800000105f2c:	48 b8 e4 ba 11 00 00 	movabs $0xffff80000011bae4,%rax$/;"	l
ffff800000105f33	kernel.asm	/^ffff800000105f33:	80 ff ff $/;"	l
ffff800000105f36	kernel.asm	/^ffff800000105f36:	88 10                	mov    %dl,(%rax)$/;"	l
ffff800000105f38	kernel.asm	/^ffff800000105f38:	48 83 45 f8 08       	addq   $0x8,-0x8(%rbp)$/;"	l
ffff800000105f3d	kernel.asm	/^ffff800000105f3d:	eb 1d                	jmp    ffff800000105f5c <mpinit+0x17f>$/;"	l
ffff800000105f3f	kernel.asm	/^ffff800000105f3f:	48 83 45 f8 08       	addq   $0x8,-0x8(%rbp)$/;"	l
ffff800000105f44	kernel.asm	/^ffff800000105f44:	eb 16                	jmp    ffff800000105f5c <mpinit+0x17f>$/;"	l
ffff800000105f46	kernel.asm	/^ffff800000105f46:	48 bf 80 d7 10 00 00 	movabs $0xffff80000010d780,%rdi$/;"	l
ffff800000105f4d	kernel.asm	/^ffff800000105f4d:	80 ff ff $/;"	l
ffff800000105f50	kernel.asm	/^ffff800000105f50:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff800000105f57	kernel.asm	/^ffff800000105f57:	80 ff ff $/;"	l
ffff800000105f5a	kernel.asm	/^ffff800000105f5a:	ff d0                	callq  *%rax$/;"	l
ffff800000105f5c	kernel.asm	/^ffff800000105f5c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000105f60	kernel.asm	/^ffff800000105f60:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax$/;"	l
ffff800000105f64	kernel.asm	/^ffff800000105f64:	0f 82 06 ff ff ff    	jb     ffff800000105e70 <mpinit+0x93>$/;"	l
ffff800000105f6a	kernel.asm	/^ffff800000105f6a:	48 b8 e0 ba 11 00 00 	movabs $0xffff80000011bae0,%rax$/;"	l
ffff800000105f71	kernel.asm	/^ffff800000105f71:	80 ff ff $/;"	l
ffff800000105f74	kernel.asm	/^ffff800000105f74:	8b 00                	mov    (%rax),%eax$/;"	l
ffff800000105f76	kernel.asm	/^ffff800000105f76:	89 c6                	mov    %eax,%esi$/;"	l
ffff800000105f78	kernel.asm	/^ffff800000105f78:	48 bf a1 d7 10 00 00 	movabs $0xffff80000010d7a1,%rdi$/;"	l
ffff800000105f7f	kernel.asm	/^ffff800000105f7f:	80 ff ff $/;"	l
ffff800000105f82	kernel.asm	/^ffff800000105f82:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000105f87	kernel.asm	/^ffff800000105f87:	48 ba ac 07 10 00 00 	movabs $0xffff8000001007ac,%rdx$/;"	l
ffff800000105f8e	kernel.asm	/^ffff800000105f8e:	80 ff ff $/;"	l
ffff800000105f91	kernel.asm	/^ffff800000105f91:	ff d2                	callq  *%rdx$/;"	l
ffff800000105f93	kernel.asm	/^ffff800000105f93:	48 8b 45 d0          	mov    -0x30(%rbp),%rax$/;"	l
ffff800000105f97	kernel.asm	/^ffff800000105f97:	0f b6 40 0c          	movzbl 0xc(%rax),%eax$/;"	l
ffff800000105f9b	kernel.asm	/^ffff800000105f9b:	84 c0                	test   %al,%al$/;"	l
ffff800000105f9d	kernel.asm	/^ffff800000105f9d:	74 40                	je     ffff800000105fdf <mpinit+0x202>$/;"	l
ffff800000105f9f	kernel.asm	/^ffff800000105f9f:	be 70 00 00 00       	mov    $0x70,%esi$/;"	l
ffff800000105fa4	kernel.asm	/^ffff800000105fa4:	bf 22 00 00 00       	mov    $0x22,%edi$/;"	l
ffff800000105fa9	kernel.asm	/^ffff800000105fa9:	48 b8 24 5b 10 00 00 	movabs $0xffff800000105b24,%rax$/;"	l
ffff800000105fb0	kernel.asm	/^ffff800000105fb0:	80 ff ff $/;"	l
ffff800000105fb3	kernel.asm	/^ffff800000105fb3:	ff d0                	callq  *%rax$/;"	l
ffff800000105fb5	kernel.asm	/^ffff800000105fb5:	bf 23 00 00 00       	mov    $0x23,%edi$/;"	l
ffff800000105fba	kernel.asm	/^ffff800000105fba:	48 b8 06 5b 10 00 00 	movabs $0xffff800000105b06,%rax$/;"	l
ffff800000105fc1	kernel.asm	/^ffff800000105fc1:	80 ff ff $/;"	l
ffff800000105fc4	kernel.asm	/^ffff800000105fc4:	ff d0                	callq  *%rax$/;"	l
ffff800000105fc6	kernel.asm	/^ffff800000105fc6:	83 c8 01             	or     $0x1,%eax$/;"	l
ffff800000105fc9	kernel.asm	/^ffff800000105fc9:	0f b6 c0             	movzbl %al,%eax$/;"	l
ffff800000105fcc	kernel.asm	/^ffff800000105fcc:	89 c6                	mov    %eax,%esi$/;"	l
ffff800000105fce	kernel.asm	/^ffff800000105fce:	bf 23 00 00 00       	mov    $0x23,%edi$/;"	l
ffff800000105fd3	kernel.asm	/^ffff800000105fd3:	48 b8 24 5b 10 00 00 	movabs $0xffff800000105b24,%rax$/;"	l
ffff800000105fda	kernel.asm	/^ffff800000105fda:	80 ff ff $/;"	l
ffff800000105fdd	kernel.asm	/^ffff800000105fdd:	ff d0                	callq  *%rax$/;"	l
ffff800000105fdf	kernel.asm	/^ffff800000105fdf:	c9                   	leaveq $/;"	l
ffff800000105fe0	kernel.asm	/^ffff800000105fe0:	c3                   	retq   $/;"	l
ffff800000105fe1	kernel.asm	/^ffff800000105fe1 <pipealloc>:$/;"	l
ffff800000105fe1	kernel.asm	/^ffff800000105fe1:	55                   	push   %rbp$/;"	l
ffff800000105fe2	kernel.asm	/^ffff800000105fe2:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000105fe5	kernel.asm	/^ffff800000105fe5:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ffff800000105fe9	kernel.asm	/^ffff800000105fe9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
ffff800000105fed	kernel.asm	/^ffff800000105fed:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)$/;"	l
ffff800000105ff1	kernel.asm	/^ffff800000105ff1:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)$/;"	l
ffff800000105ff8	kernel.asm	/^ffff800000105ff8:	00 $/;"	l
ffff800000105ff9	kernel.asm	/^ffff800000105ff9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff800000105ffd	kernel.asm	/^ffff800000105ffd:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)$/;"	l
ffff800000106004	kernel.asm	/^ffff800000106004:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff800000106008	kernel.asm	/^ffff800000106008:	48 8b 10             	mov    (%rax),%rdx$/;"	l
ffff80000010600b	kernel.asm	/^ffff80000010600b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010600f	kernel.asm	/^ffff80000010600f:	48 89 10             	mov    %rdx,(%rax)$/;"	l
ffff800000106012	kernel.asm	/^ffff800000106012:	48 b8 de 1e 10 00 00 	movabs $0xffff800000101ede,%rax$/;"	l
ffff800000106019	kernel.asm	/^ffff800000106019:	80 ff ff $/;"	l
ffff80000010601c	kernel.asm	/^ffff80000010601c:	ff d0                	callq  *%rax$/;"	l
ffff80000010601e	kernel.asm	/^ffff80000010601e:	48 89 c2             	mov    %rax,%rdx$/;"	l
ffff800000106021	kernel.asm	/^ffff800000106021:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000106025	kernel.asm	/^ffff800000106025:	48 89 10             	mov    %rdx,(%rax)$/;"	l
ffff800000106028	kernel.asm	/^ffff800000106028:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010602c	kernel.asm	/^ffff80000010602c:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff80000010602f	kernel.asm	/^ffff80000010602f:	48 85 c0             	test   %rax,%rax$/;"	l
ffff800000106032	kernel.asm	/^ffff800000106032:	0f 84 02 01 00 00    	je     ffff80000010613a <pipealloc+0x159>$/;"	l
ffff800000106038	kernel.asm	/^ffff800000106038:	48 b8 de 1e 10 00 00 	movabs $0xffff800000101ede,%rax$/;"	l
ffff80000010603f	kernel.asm	/^ffff80000010603f:	80 ff ff $/;"	l
ffff800000106042	kernel.asm	/^ffff800000106042:	ff d0                	callq  *%rax$/;"	l
ffff800000106044	kernel.asm	/^ffff800000106044:	48 89 c2             	mov    %rax,%rdx$/;"	l
ffff800000106047	kernel.asm	/^ffff800000106047:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff80000010604b	kernel.asm	/^ffff80000010604b:	48 89 10             	mov    %rdx,(%rax)$/;"	l
ffff80000010604e	kernel.asm	/^ffff80000010604e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff800000106052	kernel.asm	/^ffff800000106052:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff800000106055	kernel.asm	/^ffff800000106055:	48 85 c0             	test   %rax,%rax$/;"	l
ffff800000106058	kernel.asm	/^ffff800000106058:	0f 84 dc 00 00 00    	je     ffff80000010613a <pipealloc+0x159>$/;"	l
ffff80000010605e	kernel.asm	/^ffff80000010605e:	48 b8 d1 45 10 00 00 	movabs $0xffff8000001045d1,%rax$/;"	l
ffff800000106065	kernel.asm	/^ffff800000106065:	80 ff ff $/;"	l
ffff800000106068	kernel.asm	/^ffff800000106068:	ff d0                	callq  *%rax$/;"	l
ffff80000010606a	kernel.asm	/^ffff80000010606a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff80000010606e	kernel.asm	/^ffff80000010606e:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)$/;"	l
ffff800000106073	kernel.asm	/^ffff800000106073:	0f 84 c0 00 00 00    	je     ffff800000106139 <pipealloc+0x158>$/;"	l
ffff800000106079	kernel.asm	/^ffff800000106079:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010607d	kernel.asm	/^ffff80000010607d:	c7 80 70 02 00 00 01 	movl   $0x1,0x270(%rax)$/;"	l
ffff800000106084	kernel.asm	/^ffff800000106084:	00 00 00 $/;"	l
ffff800000106087	kernel.asm	/^ffff800000106087:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010608b	kernel.asm	/^ffff80000010608b:	c7 80 74 02 00 00 01 	movl   $0x1,0x274(%rax)$/;"	l
ffff800000106092	kernel.asm	/^ffff800000106092:	00 00 00 $/;"	l
ffff800000106095	kernel.asm	/^ffff800000106095:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000106099	kernel.asm	/^ffff800000106099:	c7 80 6c 02 00 00 00 	movl   $0x0,0x26c(%rax)$/;"	l
ffff8000001060a0	kernel.asm	/^ffff8000001060a0:	00 00 00 $/;"	l
ffff8000001060a3	kernel.asm	/^ffff8000001060a3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001060a7	kernel.asm	/^ffff8000001060a7:	c7 80 68 02 00 00 00 	movl   $0x0,0x268(%rax)$/;"	l
ffff8000001060ae	kernel.asm	/^ffff8000001060ae:	00 00 00 $/;"	l
ffff8000001060b1	kernel.asm	/^ffff8000001060b1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001060b5	kernel.asm	/^ffff8000001060b5:	48 be e8 d7 10 00 00 	movabs $0xffff80000010d7e8,%rsi$/;"	l
ffff8000001060bc	kernel.asm	/^ffff8000001060bc:	80 ff ff $/;"	l
ffff8000001060bf	kernel.asm	/^ffff8000001060bf:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001060c2	kernel.asm	/^ffff8000001060c2:	48 b8 a1 77 10 00 00 	movabs $0xffff8000001077a1,%rax$/;"	l
ffff8000001060c9	kernel.asm	/^ffff8000001060c9:	80 ff ff $/;"	l
ffff8000001060cc	kernel.asm	/^ffff8000001060cc:	ff d0                	callq  *%rax$/;"	l
ffff8000001060ce	kernel.asm	/^ffff8000001060ce:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff8000001060d2	kernel.asm	/^ffff8000001060d2:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff8000001060d5	kernel.asm	/^ffff8000001060d5:	c7 00 01 00 00 00    	movl   $0x1,(%rax)$/;"	l
ffff8000001060db	kernel.asm	/^ffff8000001060db:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff8000001060df	kernel.asm	/^ffff8000001060df:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff8000001060e2	kernel.asm	/^ffff8000001060e2:	c6 40 08 01          	movb   $0x1,0x8(%rax)$/;"	l
ffff8000001060e6	kernel.asm	/^ffff8000001060e6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff8000001060ea	kernel.asm	/^ffff8000001060ea:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff8000001060ed	kernel.asm	/^ffff8000001060ed:	c6 40 09 00          	movb   $0x0,0x9(%rax)$/;"	l
ffff8000001060f1	kernel.asm	/^ffff8000001060f1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff8000001060f5	kernel.asm	/^ffff8000001060f5:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff8000001060f8	kernel.asm	/^ffff8000001060f8:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx$/;"	l
ffff8000001060fc	kernel.asm	/^ffff8000001060fc:	48 89 50 10          	mov    %rdx,0x10(%rax)$/;"	l
ffff800000106100	kernel.asm	/^ffff800000106100:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff800000106104	kernel.asm	/^ffff800000106104:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff800000106107	kernel.asm	/^ffff800000106107:	c7 00 01 00 00 00    	movl   $0x1,(%rax)$/;"	l
ffff80000010610d	kernel.asm	/^ffff80000010610d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff800000106111	kernel.asm	/^ffff800000106111:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff800000106114	kernel.asm	/^ffff800000106114:	c6 40 08 00          	movb   $0x0,0x8(%rax)$/;"	l
ffff800000106118	kernel.asm	/^ffff800000106118:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff80000010611c	kernel.asm	/^ffff80000010611c:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff80000010611f	kernel.asm	/^ffff80000010611f:	c6 40 09 01          	movb   $0x1,0x9(%rax)$/;"	l
ffff800000106123	kernel.asm	/^ffff800000106123:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff800000106127	kernel.asm	/^ffff800000106127:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff80000010612a	kernel.asm	/^ffff80000010612a:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx$/;"	l
ffff80000010612e	kernel.asm	/^ffff80000010612e:	48 89 50 10          	mov    %rdx,0x10(%rax)$/;"	l
ffff800000106132	kernel.asm	/^ffff800000106132:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000106137	kernel.asm	/^ffff800000106137:	eb 64                	jmp    ffff80000010619d <pipealloc+0x1bc>$/;"	l
ffff800000106139	kernel.asm	/^ffff800000106139:	90                   	nop$/;"	l
ffff80000010613a	kernel.asm	/^ffff80000010613a:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)$/;"	l
ffff80000010613f	kernel.asm	/^ffff80000010613f:	74 13                	je     ffff800000106154 <pipealloc+0x173>$/;"	l
ffff800000106141	kernel.asm	/^ffff800000106141:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000106145	kernel.asm	/^ffff800000106145:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000106148	kernel.asm	/^ffff800000106148:	48 b8 db 44 10 00 00 	movabs $0xffff8000001044db,%rax$/;"	l
ffff80000010614f	kernel.asm	/^ffff80000010614f:	80 ff ff $/;"	l
ffff800000106152	kernel.asm	/^ffff800000106152:	ff d0                	callq  *%rax$/;"	l
ffff800000106154	kernel.asm	/^ffff800000106154:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000106158	kernel.asm	/^ffff800000106158:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff80000010615b	kernel.asm	/^ffff80000010615b:	48 85 c0             	test   %rax,%rax$/;"	l
ffff80000010615e	kernel.asm	/^ffff80000010615e:	74 16                	je     ffff800000106176 <pipealloc+0x195>$/;"	l
ffff800000106160	kernel.asm	/^ffff800000106160:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000106164	kernel.asm	/^ffff800000106164:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff800000106167	kernel.asm	/^ffff800000106167:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010616a	kernel.asm	/^ffff80000010616a:	48 b8 e0 1f 10 00 00 	movabs $0xffff800000101fe0,%rax$/;"	l
ffff800000106171	kernel.asm	/^ffff800000106171:	80 ff ff $/;"	l
ffff800000106174	kernel.asm	/^ffff800000106174:	ff d0                	callq  *%rax$/;"	l
ffff800000106176	kernel.asm	/^ffff800000106176:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff80000010617a	kernel.asm	/^ffff80000010617a:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff80000010617d	kernel.asm	/^ffff80000010617d:	48 85 c0             	test   %rax,%rax$/;"	l
ffff800000106180	kernel.asm	/^ffff800000106180:	74 16                	je     ffff800000106198 <pipealloc+0x1b7>$/;"	l
ffff800000106182	kernel.asm	/^ffff800000106182:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff800000106186	kernel.asm	/^ffff800000106186:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff800000106189	kernel.asm	/^ffff800000106189:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010618c	kernel.asm	/^ffff80000010618c:	48 b8 e0 1f 10 00 00 	movabs $0xffff800000101fe0,%rax$/;"	l
ffff800000106193	kernel.asm	/^ffff800000106193:	80 ff ff $/;"	l
ffff800000106196	kernel.asm	/^ffff800000106196:	ff d0                	callq  *%rax$/;"	l
ffff800000106198	kernel.asm	/^ffff800000106198:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff80000010619d	kernel.asm	/^ffff80000010619d:	c9                   	leaveq $/;"	l
ffff80000010619e	kernel.asm	/^ffff80000010619e:	c3                   	retq   $/;"	l
ffff80000010619f	kernel.asm	/^ffff80000010619f <pipeclose>:$/;"	l
ffff80000010619f	kernel.asm	/^ffff80000010619f:	55                   	push   %rbp$/;"	l
ffff8000001061a0	kernel.asm	/^ffff8000001061a0:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff8000001061a3	kernel.asm	/^ffff8000001061a3:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff8000001061a7	kernel.asm	/^ffff8000001061a7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)$/;"	l
ffff8000001061ab	kernel.asm	/^ffff8000001061ab:	89 75 f4             	mov    %esi,-0xc(%rbp)$/;"	l
ffff8000001061ae	kernel.asm	/^ffff8000001061ae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001061b2	kernel.asm	/^ffff8000001061b2:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001061b5	kernel.asm	/^ffff8000001061b5:	48 b8 d6 77 10 00 00 	movabs $0xffff8000001077d6,%rax$/;"	l
ffff8000001061bc	kernel.asm	/^ffff8000001061bc:	80 ff ff $/;"	l
ffff8000001061bf	kernel.asm	/^ffff8000001061bf:	ff d0                	callq  *%rax$/;"	l
ffff8000001061c1	kernel.asm	/^ffff8000001061c1:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)$/;"	l
ffff8000001061c5	kernel.asm	/^ffff8000001061c5:	74 29                	je     ffff8000001061f0 <pipeclose+0x51>$/;"	l
ffff8000001061c7	kernel.asm	/^ffff8000001061c7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001061cb	kernel.asm	/^ffff8000001061cb:	c7 80 74 02 00 00 00 	movl   $0x0,0x274(%rax)$/;"	l
ffff8000001061d2	kernel.asm	/^ffff8000001061d2:	00 00 00 $/;"	l
ffff8000001061d5	kernel.asm	/^ffff8000001061d5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001061d9	kernel.asm	/^ffff8000001061d9:	48 05 68 02 00 00    	add    $0x268,%rax$/;"	l
ffff8000001061df	kernel.asm	/^ffff8000001061df:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001061e2	kernel.asm	/^ffff8000001061e2:	48 b8 34 73 10 00 00 	movabs $0xffff800000107334,%rax$/;"	l
ffff8000001061e9	kernel.asm	/^ffff8000001061e9:	80 ff ff $/;"	l
ffff8000001061ec	kernel.asm	/^ffff8000001061ec:	ff d0                	callq  *%rax$/;"	l
ffff8000001061ee	kernel.asm	/^ffff8000001061ee:	eb 27                	jmp    ffff800000106217 <pipeclose+0x78>$/;"	l
ffff8000001061f0	kernel.asm	/^ffff8000001061f0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001061f4	kernel.asm	/^ffff8000001061f4:	c7 80 70 02 00 00 00 	movl   $0x0,0x270(%rax)$/;"	l
ffff8000001061fb	kernel.asm	/^ffff8000001061fb:	00 00 00 $/;"	l
ffff8000001061fe	kernel.asm	/^ffff8000001061fe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000106202	kernel.asm	/^ffff800000106202:	48 05 6c 02 00 00    	add    $0x26c,%rax$/;"	l
ffff800000106208	kernel.asm	/^ffff800000106208:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010620b	kernel.asm	/^ffff80000010620b:	48 b8 34 73 10 00 00 	movabs $0xffff800000107334,%rax$/;"	l
ffff800000106212	kernel.asm	/^ffff800000106212:	80 ff ff $/;"	l
ffff800000106215	kernel.asm	/^ffff800000106215:	ff d0                	callq  *%rax$/;"	l
ffff800000106217	kernel.asm	/^ffff800000106217:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010621b	kernel.asm	/^ffff80000010621b:	8b 80 70 02 00 00    	mov    0x270(%rax),%eax$/;"	l
ffff800000106221	kernel.asm	/^ffff800000106221:	85 c0                	test   %eax,%eax$/;"	l
ffff800000106223	kernel.asm	/^ffff800000106223:	75 36                	jne    ffff80000010625b <pipeclose+0xbc>$/;"	l
ffff800000106225	kernel.asm	/^ffff800000106225:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000106229	kernel.asm	/^ffff800000106229:	8b 80 74 02 00 00    	mov    0x274(%rax),%eax$/;"	l
ffff80000010622f	kernel.asm	/^ffff80000010622f:	85 c0                	test   %eax,%eax$/;"	l
ffff800000106231	kernel.asm	/^ffff800000106231:	75 28                	jne    ffff80000010625b <pipeclose+0xbc>$/;"	l
ffff800000106233	kernel.asm	/^ffff800000106233:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000106237	kernel.asm	/^ffff800000106237:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010623a	kernel.asm	/^ffff80000010623a:	48 b8 6f 78 10 00 00 	movabs $0xffff80000010786f,%rax$/;"	l
ffff800000106241	kernel.asm	/^ffff800000106241:	80 ff ff $/;"	l
ffff800000106244	kernel.asm	/^ffff800000106244:	ff d0                	callq  *%rax$/;"	l
ffff800000106246	kernel.asm	/^ffff800000106246:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010624a	kernel.asm	/^ffff80000010624a:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010624d	kernel.asm	/^ffff80000010624d:	48 b8 db 44 10 00 00 	movabs $0xffff8000001044db,%rax$/;"	l
ffff800000106254	kernel.asm	/^ffff800000106254:	80 ff ff $/;"	l
ffff800000106257	kernel.asm	/^ffff800000106257:	ff d0                	callq  *%rax$/;"	l
ffff800000106259	kernel.asm	/^ffff800000106259:	eb 13                	jmp    ffff80000010626e <pipeclose+0xcf>$/;"	l
ffff80000010625b	kernel.asm	/^ffff80000010625b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010625f	kernel.asm	/^ffff80000010625f:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000106262	kernel.asm	/^ffff800000106262:	48 b8 6f 78 10 00 00 	movabs $0xffff80000010786f,%rax$/;"	l
ffff800000106269	kernel.asm	/^ffff800000106269:	80 ff ff $/;"	l
ffff80000010626c	kernel.asm	/^ffff80000010626c:	ff d0                	callq  *%rax$/;"	l
ffff80000010626e	kernel.asm	/^ffff80000010626e:	90                   	nop$/;"	l
ffff80000010626f	kernel.asm	/^ffff80000010626f:	c9                   	leaveq $/;"	l
ffff800000106270	kernel.asm	/^ffff800000106270:	c3                   	retq   $/;"	l
ffff800000106271	kernel.asm	/^ffff800000106271 <pipewrite>:$/;"	l
ffff800000106271	kernel.asm	/^ffff800000106271:	55                   	push   %rbp$/;"	l
ffff800000106272	kernel.asm	/^ffff800000106272:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000106275	kernel.asm	/^ffff800000106275:	48 83 ec 30          	sub    $0x30,%rsp$/;"	l
ffff800000106279	kernel.asm	/^ffff800000106279:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
ffff80000010627d	kernel.asm	/^ffff80000010627d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)$/;"	l
ffff800000106281	kernel.asm	/^ffff800000106281:	89 55 dc             	mov    %edx,-0x24(%rbp)$/;"	l
ffff800000106284	kernel.asm	/^ffff800000106284:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000106288	kernel.asm	/^ffff800000106288:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010628b	kernel.asm	/^ffff80000010628b:	48 b8 d6 77 10 00 00 	movabs $0xffff8000001077d6,%rax$/;"	l
ffff800000106292	kernel.asm	/^ffff800000106292:	80 ff ff $/;"	l
ffff800000106295	kernel.asm	/^ffff800000106295:	ff d0                	callq  *%rax$/;"	l
ffff800000106297	kernel.asm	/^ffff800000106297:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)$/;"	l
ffff80000010629e	kernel.asm	/^ffff80000010629e:	e9 d4 00 00 00       	jmpq   ffff800000106377 <pipewrite+0x106>$/;"	l
ffff8000001062a3	kernel.asm	/^ffff8000001062a3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff8000001062a7	kernel.asm	/^ffff8000001062a7:	8b 80 70 02 00 00    	mov    0x270(%rax),%eax$/;"	l
ffff8000001062ad	kernel.asm	/^ffff8000001062ad:	85 c0                	test   %eax,%eax$/;"	l
ffff8000001062af	kernel.asm	/^ffff8000001062af:	74 12                	je     ffff8000001062c3 <pipewrite+0x52>$/;"	l
ffff8000001062b1	kernel.asm	/^ffff8000001062b1:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff8000001062b8	kernel.asm	/^ffff8000001062b8:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff8000001062bc	kernel.asm	/^ffff8000001062bc:	8b 40 40             	mov    0x40(%rax),%eax$/;"	l
ffff8000001062bf	kernel.asm	/^ffff8000001062bf:	85 c0                	test   %eax,%eax$/;"	l
ffff8000001062c1	kernel.asm	/^ffff8000001062c1:	74 1d                	je     ffff8000001062e0 <pipewrite+0x6f>$/;"	l
ffff8000001062c3	kernel.asm	/^ffff8000001062c3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff8000001062c7	kernel.asm	/^ffff8000001062c7:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001062ca	kernel.asm	/^ffff8000001062ca:	48 b8 6f 78 10 00 00 	movabs $0xffff80000010786f,%rax$/;"	l
ffff8000001062d1	kernel.asm	/^ffff8000001062d1:	80 ff ff $/;"	l
ffff8000001062d4	kernel.asm	/^ffff8000001062d4:	ff d0                	callq  *%rax$/;"	l
ffff8000001062d6	kernel.asm	/^ffff8000001062d6:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff8000001062db	kernel.asm	/^ffff8000001062db:	e9 ce 00 00 00       	jmpq   ffff8000001063ae <pipewrite+0x13d>$/;"	l
ffff8000001062e0	kernel.asm	/^ffff8000001062e0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff8000001062e4	kernel.asm	/^ffff8000001062e4:	48 05 68 02 00 00    	add    $0x268,%rax$/;"	l
ffff8000001062ea	kernel.asm	/^ffff8000001062ea:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001062ed	kernel.asm	/^ffff8000001062ed:	48 b8 34 73 10 00 00 	movabs $0xffff800000107334,%rax$/;"	l
ffff8000001062f4	kernel.asm	/^ffff8000001062f4:	80 ff ff $/;"	l
ffff8000001062f7	kernel.asm	/^ffff8000001062f7:	ff d0                	callq  *%rax$/;"	l
ffff8000001062f9	kernel.asm	/^ffff8000001062f9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff8000001062fd	kernel.asm	/^ffff8000001062fd:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx$/;"	l
ffff800000106301	kernel.asm	/^ffff800000106301:	48 81 c2 6c 02 00 00 	add    $0x26c,%rdx$/;"	l
ffff800000106308	kernel.asm	/^ffff800000106308:	48 89 c6             	mov    %rax,%rsi$/;"	l
ffff80000010630b	kernel.asm	/^ffff80000010630b:	48 89 d7             	mov    %rdx,%rdi$/;"	l
ffff80000010630e	kernel.asm	/^ffff80000010630e:	48 b8 cc 71 10 00 00 	movabs $0xffff8000001071cc,%rax$/;"	l
ffff800000106315	kernel.asm	/^ffff800000106315:	80 ff ff $/;"	l
ffff800000106318	kernel.asm	/^ffff800000106318:	ff d0                	callq  *%rax$/;"	l
ffff80000010631a	kernel.asm	/^ffff80000010631a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010631e	kernel.asm	/^ffff80000010631e:	8b 90 6c 02 00 00    	mov    0x26c(%rax),%edx$/;"	l
ffff800000106324	kernel.asm	/^ffff800000106324:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000106328	kernel.asm	/^ffff800000106328:	8b 80 68 02 00 00    	mov    0x268(%rax),%eax$/;"	l
ffff80000010632e	kernel.asm	/^ffff80000010632e:	05 00 02 00 00       	add    $0x200,%eax$/;"	l
ffff800000106333	kernel.asm	/^ffff800000106333:	39 c2                	cmp    %eax,%edx$/;"	l
ffff800000106335	kernel.asm	/^ffff800000106335:	0f 84 68 ff ff ff    	je     ffff8000001062a3 <pipewrite+0x32>$/;"	l
ffff80000010633b	kernel.asm	/^ffff80000010633b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010633f	kernel.asm	/^ffff80000010633f:	8b 80 6c 02 00 00    	mov    0x26c(%rax),%eax$/;"	l
ffff800000106345	kernel.asm	/^ffff800000106345:	8d 48 01             	lea    0x1(%rax),%ecx$/;"	l
ffff800000106348	kernel.asm	/^ffff800000106348:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx$/;"	l
ffff80000010634c	kernel.asm	/^ffff80000010634c:	89 8a 6c 02 00 00    	mov    %ecx,0x26c(%rdx)$/;"	l
ffff800000106352	kernel.asm	/^ffff800000106352:	25 ff 01 00 00       	and    $0x1ff,%eax$/;"	l
ffff800000106357	kernel.asm	/^ffff800000106357:	89 c1                	mov    %eax,%ecx$/;"	l
ffff800000106359	kernel.asm	/^ffff800000106359:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff80000010635c	kernel.asm	/^ffff80000010635c:	48 63 d0             	movslq %eax,%rdx$/;"	l
ffff80000010635f	kernel.asm	/^ffff80000010635f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff800000106363	kernel.asm	/^ffff800000106363:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff800000106366	kernel.asm	/^ffff800000106366:	0f b6 10             	movzbl (%rax),%edx$/;"	l
ffff800000106369	kernel.asm	/^ffff800000106369:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010636d	kernel.asm	/^ffff80000010636d:	89 c9                	mov    %ecx,%ecx$/;"	l
ffff80000010636f	kernel.asm	/^ffff80000010636f:	88 54 08 68          	mov    %dl,0x68(%rax,%rcx,1)$/;"	l
ffff800000106373	kernel.asm	/^ffff800000106373:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)$/;"	l
ffff800000106377	kernel.asm	/^ffff800000106377:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff80000010637a	kernel.asm	/^ffff80000010637a:	3b 45 dc             	cmp    -0x24(%rbp),%eax$/;"	l
ffff80000010637d	kernel.asm	/^ffff80000010637d:	7c 9b                	jl     ffff80000010631a <pipewrite+0xa9>$/;"	l
ffff80000010637f	kernel.asm	/^ffff80000010637f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000106383	kernel.asm	/^ffff800000106383:	48 05 68 02 00 00    	add    $0x268,%rax$/;"	l
ffff800000106389	kernel.asm	/^ffff800000106389:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010638c	kernel.asm	/^ffff80000010638c:	48 b8 34 73 10 00 00 	movabs $0xffff800000107334,%rax$/;"	l
ffff800000106393	kernel.asm	/^ffff800000106393:	80 ff ff $/;"	l
ffff800000106396	kernel.asm	/^ffff800000106396:	ff d0                	callq  *%rax$/;"	l
ffff800000106398	kernel.asm	/^ffff800000106398:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010639c	kernel.asm	/^ffff80000010639c:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010639f	kernel.asm	/^ffff80000010639f:	48 b8 6f 78 10 00 00 	movabs $0xffff80000010786f,%rax$/;"	l
ffff8000001063a6	kernel.asm	/^ffff8000001063a6:	80 ff ff $/;"	l
ffff8000001063a9	kernel.asm	/^ffff8000001063a9:	ff d0                	callq  *%rax$/;"	l
ffff8000001063ab	kernel.asm	/^ffff8000001063ab:	8b 45 dc             	mov    -0x24(%rbp),%eax$/;"	l
ffff8000001063ae	kernel.asm	/^ffff8000001063ae:	c9                   	leaveq $/;"	l
ffff8000001063af	kernel.asm	/^ffff8000001063af:	c3                   	retq   $/;"	l
ffff8000001063b0	kernel.asm	/^ffff8000001063b0 <piperead>:$/;"	l
ffff8000001063b0	kernel.asm	/^ffff8000001063b0:	55                   	push   %rbp$/;"	l
ffff8000001063b1	kernel.asm	/^ffff8000001063b1:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff8000001063b4	kernel.asm	/^ffff8000001063b4:	48 83 ec 30          	sub    $0x30,%rsp$/;"	l
ffff8000001063b8	kernel.asm	/^ffff8000001063b8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
ffff8000001063bc	kernel.asm	/^ffff8000001063bc:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)$/;"	l
ffff8000001063c0	kernel.asm	/^ffff8000001063c0:	89 55 dc             	mov    %edx,-0x24(%rbp)$/;"	l
ffff8000001063c3	kernel.asm	/^ffff8000001063c3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff8000001063c7	kernel.asm	/^ffff8000001063c7:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001063ca	kernel.asm	/^ffff8000001063ca:	48 b8 d6 77 10 00 00 	movabs $0xffff8000001077d6,%rax$/;"	l
ffff8000001063d1	kernel.asm	/^ffff8000001063d1:	80 ff ff $/;"	l
ffff8000001063d4	kernel.asm	/^ffff8000001063d4:	ff d0                	callq  *%rax$/;"	l
ffff8000001063d6	kernel.asm	/^ffff8000001063d6:	eb 50                	jmp    ffff800000106428 <piperead+0x78>$/;"	l
ffff8000001063d8	kernel.asm	/^ffff8000001063d8:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff8000001063df	kernel.asm	/^ffff8000001063df:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff8000001063e3	kernel.asm	/^ffff8000001063e3:	8b 40 40             	mov    0x40(%rax),%eax$/;"	l
ffff8000001063e6	kernel.asm	/^ffff8000001063e6:	85 c0                	test   %eax,%eax$/;"	l
ffff8000001063e8	kernel.asm	/^ffff8000001063e8:	74 1d                	je     ffff800000106407 <piperead+0x57>$/;"	l
ffff8000001063ea	kernel.asm	/^ffff8000001063ea:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff8000001063ee	kernel.asm	/^ffff8000001063ee:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001063f1	kernel.asm	/^ffff8000001063f1:	48 b8 6f 78 10 00 00 	movabs $0xffff80000010786f,%rax$/;"	l
ffff8000001063f8	kernel.asm	/^ffff8000001063f8:	80 ff ff $/;"	l
ffff8000001063fb	kernel.asm	/^ffff8000001063fb:	ff d0                	callq  *%rax$/;"	l
ffff8000001063fd	kernel.asm	/^ffff8000001063fd:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff800000106402	kernel.asm	/^ffff800000106402:	e9 df 00 00 00       	jmpq   ffff8000001064e6 <piperead+0x136>$/;"	l
ffff800000106407	kernel.asm	/^ffff800000106407:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010640b	kernel.asm	/^ffff80000010640b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx$/;"	l
ffff80000010640f	kernel.asm	/^ffff80000010640f:	48 81 c2 68 02 00 00 	add    $0x268,%rdx$/;"	l
ffff800000106416	kernel.asm	/^ffff800000106416:	48 89 c6             	mov    %rax,%rsi$/;"	l
ffff800000106419	kernel.asm	/^ffff800000106419:	48 89 d7             	mov    %rdx,%rdi$/;"	l
ffff80000010641c	kernel.asm	/^ffff80000010641c:	48 b8 cc 71 10 00 00 	movabs $0xffff8000001071cc,%rax$/;"	l
ffff800000106423	kernel.asm	/^ffff800000106423:	80 ff ff $/;"	l
ffff800000106426	kernel.asm	/^ffff800000106426:	ff d0                	callq  *%rax$/;"	l
ffff800000106428	kernel.asm	/^ffff800000106428:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010642c	kernel.asm	/^ffff80000010642c:	8b 90 68 02 00 00    	mov    0x268(%rax),%edx$/;"	l
ffff800000106432	kernel.asm	/^ffff800000106432:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000106436	kernel.asm	/^ffff800000106436:	8b 80 6c 02 00 00    	mov    0x26c(%rax),%eax$/;"	l
ffff80000010643c	kernel.asm	/^ffff80000010643c:	39 c2                	cmp    %eax,%edx$/;"	l
ffff80000010643e	kernel.asm	/^ffff80000010643e:	75 0e                	jne    ffff80000010644e <piperead+0x9e>$/;"	l
ffff800000106440	kernel.asm	/^ffff800000106440:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000106444	kernel.asm	/^ffff800000106444:	8b 80 74 02 00 00    	mov    0x274(%rax),%eax$/;"	l
ffff80000010644a	kernel.asm	/^ffff80000010644a:	85 c0                	test   %eax,%eax$/;"	l
ffff80000010644c	kernel.asm	/^ffff80000010644c:	75 8a                	jne    ffff8000001063d8 <piperead+0x28>$/;"	l
ffff80000010644e	kernel.asm	/^ffff80000010644e:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)$/;"	l
ffff800000106455	kernel.asm	/^ffff800000106455:	eb 55                	jmp    ffff8000001064ac <piperead+0xfc>$/;"	l
ffff800000106457	kernel.asm	/^ffff800000106457:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010645b	kernel.asm	/^ffff80000010645b:	8b 90 68 02 00 00    	mov    0x268(%rax),%edx$/;"	l
ffff800000106461	kernel.asm	/^ffff800000106461:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000106465	kernel.asm	/^ffff800000106465:	8b 80 6c 02 00 00    	mov    0x26c(%rax),%eax$/;"	l
ffff80000010646b	kernel.asm	/^ffff80000010646b:	39 c2                	cmp    %eax,%edx$/;"	l
ffff80000010646d	kernel.asm	/^ffff80000010646d:	74 47                	je     ffff8000001064b6 <piperead+0x106>$/;"	l
ffff80000010646f	kernel.asm	/^ffff80000010646f:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff800000106472	kernel.asm	/^ffff800000106472:	48 63 d0             	movslq %eax,%rdx$/;"	l
ffff800000106475	kernel.asm	/^ffff800000106475:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff800000106479	kernel.asm	/^ffff800000106479:	48 8d 34 02          	lea    (%rdx,%rax,1),%rsi$/;"	l
ffff80000010647d	kernel.asm	/^ffff80000010647d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000106481	kernel.asm	/^ffff800000106481:	8b 80 68 02 00 00    	mov    0x268(%rax),%eax$/;"	l
ffff800000106487	kernel.asm	/^ffff800000106487:	8d 48 01             	lea    0x1(%rax),%ecx$/;"	l
ffff80000010648a	kernel.asm	/^ffff80000010648a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx$/;"	l
ffff80000010648e	kernel.asm	/^ffff80000010648e:	89 8a 68 02 00 00    	mov    %ecx,0x268(%rdx)$/;"	l
ffff800000106494	kernel.asm	/^ffff800000106494:	25 ff 01 00 00       	and    $0x1ff,%eax$/;"	l
ffff800000106499	kernel.asm	/^ffff800000106499:	89 c2                	mov    %eax,%edx$/;"	l
ffff80000010649b	kernel.asm	/^ffff80000010649b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010649f	kernel.asm	/^ffff80000010649f:	89 d2                	mov    %edx,%edx$/;"	l
ffff8000001064a1	kernel.asm	/^ffff8000001064a1:	0f b6 44 10 68       	movzbl 0x68(%rax,%rdx,1),%eax$/;"	l
ffff8000001064a6	kernel.asm	/^ffff8000001064a6:	88 06                	mov    %al,(%rsi)$/;"	l
ffff8000001064a8	kernel.asm	/^ffff8000001064a8:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)$/;"	l
ffff8000001064ac	kernel.asm	/^ffff8000001064ac:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff8000001064af	kernel.asm	/^ffff8000001064af:	3b 45 dc             	cmp    -0x24(%rbp),%eax$/;"	l
ffff8000001064b2	kernel.asm	/^ffff8000001064b2:	7c a3                	jl     ffff800000106457 <piperead+0xa7>$/;"	l
ffff8000001064b4	kernel.asm	/^ffff8000001064b4:	eb 01                	jmp    ffff8000001064b7 <piperead+0x107>$/;"	l
ffff8000001064b6	kernel.asm	/^ffff8000001064b6:	90                   	nop$/;"	l
ffff8000001064b7	kernel.asm	/^ffff8000001064b7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff8000001064bb	kernel.asm	/^ffff8000001064bb:	48 05 6c 02 00 00    	add    $0x26c,%rax$/;"	l
ffff8000001064c1	kernel.asm	/^ffff8000001064c1:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001064c4	kernel.asm	/^ffff8000001064c4:	48 b8 34 73 10 00 00 	movabs $0xffff800000107334,%rax$/;"	l
ffff8000001064cb	kernel.asm	/^ffff8000001064cb:	80 ff ff $/;"	l
ffff8000001064ce	kernel.asm	/^ffff8000001064ce:	ff d0                	callq  *%rax$/;"	l
ffff8000001064d0	kernel.asm	/^ffff8000001064d0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff8000001064d4	kernel.asm	/^ffff8000001064d4:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001064d7	kernel.asm	/^ffff8000001064d7:	48 b8 6f 78 10 00 00 	movabs $0xffff80000010786f,%rax$/;"	l
ffff8000001064de	kernel.asm	/^ffff8000001064de:	80 ff ff $/;"	l
ffff8000001064e1	kernel.asm	/^ffff8000001064e1:	ff d0                	callq  *%rax$/;"	l
ffff8000001064e3	kernel.asm	/^ffff8000001064e3:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff8000001064e6	kernel.asm	/^ffff8000001064e6:	c9                   	leaveq $/;"	l
ffff8000001064e7	kernel.asm	/^ffff8000001064e7:	c3                   	retq   $/;"	l
ffff8000001064e8	kernel.asm	/^ffff8000001064e8 <readeflags>:$/;"	l
ffff8000001064e8	kernel.asm	/^ffff8000001064e8:	55                   	push   %rbp$/;"	l
ffff8000001064e9	kernel.asm	/^ffff8000001064e9:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff8000001064ec	kernel.asm	/^ffff8000001064ec:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff8000001064f0	kernel.asm	/^ffff8000001064f0:	9c                   	pushfq $/;"	l
ffff8000001064f1	kernel.asm	/^ffff8000001064f1:	58                   	pop    %rax$/;"	l
ffff8000001064f2	kernel.asm	/^ffff8000001064f2:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff8000001064f6	kernel.asm	/^ffff8000001064f6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001064fa	kernel.asm	/^ffff8000001064fa:	c9                   	leaveq $/;"	l
ffff8000001064fb	kernel.asm	/^ffff8000001064fb:	c3                   	retq   $/;"	l
ffff8000001064fc	kernel.asm	/^ffff8000001064fc <sti>:$/;"	l
ffff8000001064fc	kernel.asm	/^ffff8000001064fc:	55                   	push   %rbp$/;"	l
ffff8000001064fd	kernel.asm	/^ffff8000001064fd:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000106500	kernel.asm	/^ffff800000106500:	fb                   	sti    $/;"	l
ffff800000106501	kernel.asm	/^ffff800000106501:	90                   	nop$/;"	l
ffff800000106502	kernel.asm	/^ffff800000106502:	5d                   	pop    %rbp$/;"	l
ffff800000106503	kernel.asm	/^ffff800000106503:	c3                   	retq   $/;"	l
ffff800000106504	kernel.asm	/^ffff800000106504 <pinit>:$/;"	l
ffff800000106504	kernel.asm	/^ffff800000106504:	55                   	push   %rbp$/;"	l
ffff800000106505	kernel.asm	/^ffff800000106505:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000106508	kernel.asm	/^ffff800000106508:	48 be f0 d7 10 00 00 	movabs $0xffff80000010d7f0,%rsi$/;"	l
ffff80000010650f	kernel.asm	/^ffff80000010650f:	80 ff ff $/;"	l
ffff800000106512	kernel.asm	/^ffff800000106512:	48 bf 00 bb 11 00 00 	movabs $0xffff80000011bb00,%rdi$/;"	l
ffff800000106519	kernel.asm	/^ffff800000106519:	80 ff ff $/;"	l
ffff80000010651c	kernel.asm	/^ffff80000010651c:	48 b8 a1 77 10 00 00 	movabs $0xffff8000001077a1,%rax$/;"	l
ffff800000106523	kernel.asm	/^ffff800000106523:	80 ff ff $/;"	l
ffff800000106526	kernel.asm	/^ffff800000106526:	ff d0                	callq  *%rax$/;"	l
ffff800000106528	kernel.asm	/^ffff800000106528:	90                   	nop$/;"	l
ffff800000106529	kernel.asm	/^ffff800000106529:	5d                   	pop    %rbp$/;"	l
ffff80000010652a	kernel.asm	/^ffff80000010652a:	c3                   	retq   $/;"	l
ffff80000010652b	kernel.asm	/^ffff80000010652b <allocproc>:$/;"	l
ffff80000010652b	kernel.asm	/^ffff80000010652b:	55                   	push   %rbp$/;"	l
ffff80000010652c	kernel.asm	/^ffff80000010652c:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010652f	kernel.asm	/^ffff80000010652f:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff800000106533	kernel.asm	/^ffff800000106533:	48 bf 00 bb 11 00 00 	movabs $0xffff80000011bb00,%rdi$/;"	l
ffff80000010653a	kernel.asm	/^ffff80000010653a:	80 ff ff $/;"	l
ffff80000010653d	kernel.asm	/^ffff80000010653d:	48 b8 d6 77 10 00 00 	movabs $0xffff8000001077d6,%rax$/;"	l
ffff800000106544	kernel.asm	/^ffff800000106544:	80 ff ff $/;"	l
ffff800000106547	kernel.asm	/^ffff800000106547:	ff d0                	callq  *%rax$/;"	l
ffff800000106549	kernel.asm	/^ffff800000106549:	48 b8 68 bb 11 00 00 	movabs $0xffff80000011bb68,%rax$/;"	l
ffff800000106550	kernel.asm	/^ffff800000106550:	80 ff ff $/;"	l
ffff800000106553	kernel.asm	/^ffff800000106553:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff800000106557	kernel.asm	/^ffff800000106557:	eb 13                	jmp    ffff80000010656c <allocproc+0x41>$/;"	l
ffff800000106559	kernel.asm	/^ffff800000106559:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010655d	kernel.asm	/^ffff80000010655d:	8b 40 18             	mov    0x18(%rax),%eax$/;"	l
ffff800000106560	kernel.asm	/^ffff800000106560:	85 c0                	test   %eax,%eax$/;"	l
ffff800000106562	kernel.asm	/^ffff800000106562:	74 38                	je     ffff80000010659c <allocproc+0x71>$/;"	l
ffff800000106564	kernel.asm	/^ffff800000106564:	48 81 45 f8 f0 00 00 	addq   $0xf0,-0x8(%rbp)$/;"	l
ffff80000010656b	kernel.asm	/^ffff80000010656b:	00 $/;"	l
ffff80000010656c	kernel.asm	/^ffff80000010656c:	48 b8 68 f7 11 00 00 	movabs $0xffff80000011f768,%rax$/;"	l
ffff800000106573	kernel.asm	/^ffff800000106573:	80 ff ff $/;"	l
ffff800000106576	kernel.asm	/^ffff800000106576:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)$/;"	l
ffff80000010657a	kernel.asm	/^ffff80000010657a:	72 dd                	jb     ffff800000106559 <allocproc+0x2e>$/;"	l
ffff80000010657c	kernel.asm	/^ffff80000010657c:	48 bf 00 bb 11 00 00 	movabs $0xffff80000011bb00,%rdi$/;"	l
ffff800000106583	kernel.asm	/^ffff800000106583:	80 ff ff $/;"	l
ffff800000106586	kernel.asm	/^ffff800000106586:	48 b8 6f 78 10 00 00 	movabs $0xffff80000010786f,%rax$/;"	l
ffff80000010658d	kernel.asm	/^ffff80000010658d:	80 ff ff $/;"	l
ffff800000106590	kernel.asm	/^ffff800000106590:	ff d0                	callq  *%rax$/;"	l
ffff800000106592	kernel.asm	/^ffff800000106592:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000106597	kernel.asm	/^ffff800000106597:	e9 14 01 00 00       	jmpq   ffff8000001066b0 <allocproc+0x185>$/;"	l
ffff80000010659c	kernel.asm	/^ffff80000010659c:	90                   	nop$/;"	l
ffff80000010659d	kernel.asm	/^ffff80000010659d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001065a1	kernel.asm	/^ffff8000001065a1:	c7 40 18 01 00 00 00 	movl   $0x1,0x18(%rax)$/;"	l
ffff8000001065a8	kernel.asm	/^ffff8000001065a8:	48 b8 60 e5 10 00 00 	movabs $0xffff80000010e560,%rax$/;"	l
ffff8000001065af	kernel.asm	/^ffff8000001065af:	80 ff ff $/;"	l
ffff8000001065b2	kernel.asm	/^ffff8000001065b2:	8b 00                	mov    (%rax),%eax$/;"	l
ffff8000001065b4	kernel.asm	/^ffff8000001065b4:	8d 48 01             	lea    0x1(%rax),%ecx$/;"	l
ffff8000001065b7	kernel.asm	/^ffff8000001065b7:	48 ba 60 e5 10 00 00 	movabs $0xffff80000010e560,%rdx$/;"	l
ffff8000001065be	kernel.asm	/^ffff8000001065be:	80 ff ff $/;"	l
ffff8000001065c1	kernel.asm	/^ffff8000001065c1:	89 0a                	mov    %ecx,(%rdx)$/;"	l
ffff8000001065c3	kernel.asm	/^ffff8000001065c3:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx$/;"	l
ffff8000001065c7	kernel.asm	/^ffff8000001065c7:	89 42 1c             	mov    %eax,0x1c(%rdx)$/;"	l
ffff8000001065ca	kernel.asm	/^ffff8000001065ca:	48 bf 00 bb 11 00 00 	movabs $0xffff80000011bb00,%rdi$/;"	l
ffff8000001065d1	kernel.asm	/^ffff8000001065d1:	80 ff ff $/;"	l
ffff8000001065d4	kernel.asm	/^ffff8000001065d4:	48 b8 6f 78 10 00 00 	movabs $0xffff80000010786f,%rax$/;"	l
ffff8000001065db	kernel.asm	/^ffff8000001065db:	80 ff ff $/;"	l
ffff8000001065de	kernel.asm	/^ffff8000001065de:	ff d0                	callq  *%rax$/;"	l
ffff8000001065e0	kernel.asm	/^ffff8000001065e0:	48 b8 d1 45 10 00 00 	movabs $0xffff8000001045d1,%rax$/;"	l
ffff8000001065e7	kernel.asm	/^ffff8000001065e7:	80 ff ff $/;"	l
ffff8000001065ea	kernel.asm	/^ffff8000001065ea:	ff d0                	callq  *%rax$/;"	l
ffff8000001065ec	kernel.asm	/^ffff8000001065ec:	48 89 c2             	mov    %rax,%rdx$/;"	l
ffff8000001065ef	kernel.asm	/^ffff8000001065ef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001065f3	kernel.asm	/^ffff8000001065f3:	48 89 50 10          	mov    %rdx,0x10(%rax)$/;"	l
ffff8000001065f7	kernel.asm	/^ffff8000001065f7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001065fb	kernel.asm	/^ffff8000001065fb:	48 8b 40 10          	mov    0x10(%rax),%rax$/;"	l
ffff8000001065ff	kernel.asm	/^ffff8000001065ff:	48 85 c0             	test   %rax,%rax$/;"	l
ffff800000106602	kernel.asm	/^ffff800000106602:	75 15                	jne    ffff800000106619 <allocproc+0xee>$/;"	l
ffff800000106604	kernel.asm	/^ffff800000106604:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000106608	kernel.asm	/^ffff800000106608:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%rax)$/;"	l
ffff80000010660f	kernel.asm	/^ffff80000010660f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000106614	kernel.asm	/^ffff800000106614:	e9 97 00 00 00       	jmpq   ffff8000001066b0 <allocproc+0x185>$/;"	l
ffff800000106619	kernel.asm	/^ffff800000106619:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010661d	kernel.asm	/^ffff80000010661d:	48 8b 40 10          	mov    0x10(%rax),%rax$/;"	l
ffff800000106621	kernel.asm	/^ffff800000106621:	48 05 00 10 00 00    	add    $0x1000,%rax$/;"	l
ffff800000106627	kernel.asm	/^ffff800000106627:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ffff80000010662b	kernel.asm	/^ffff80000010662b:	48 81 6d f0 b0 00 00 	subq   $0xb0,-0x10(%rbp)$/;"	l
ffff800000106632	kernel.asm	/^ffff800000106632:	00 $/;"	l
ffff800000106633	kernel.asm	/^ffff800000106633:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000106637	kernel.asm	/^ffff800000106637:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
ffff80000010663b	kernel.asm	/^ffff80000010663b:	48 89 50 28          	mov    %rdx,0x28(%rax)$/;"	l
ffff80000010663f	kernel.asm	/^ffff80000010663f:	48 83 6d f0 08       	subq   $0x8,-0x10(%rbp)$/;"	l
ffff800000106644	kernel.asm	/^ffff800000106644:	48 ba f0 9c 10 00 00 	movabs $0xffff800000109cf0,%rdx$/;"	l
ffff80000010664b	kernel.asm	/^ffff80000010664b:	80 ff ff $/;"	l
ffff80000010664e	kernel.asm	/^ffff80000010664e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000106652	kernel.asm	/^ffff800000106652:	48 89 10             	mov    %rdx,(%rax)$/;"	l
ffff800000106655	kernel.asm	/^ffff800000106655:	48 83 6d f0 40       	subq   $0x40,-0x10(%rbp)$/;"	l
ffff80000010665a	kernel.asm	/^ffff80000010665a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010665e	kernel.asm	/^ffff80000010665e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
ffff800000106662	kernel.asm	/^ffff800000106662:	48 89 50 30          	mov    %rdx,0x30(%rax)$/;"	l
ffff800000106666	kernel.asm	/^ffff800000106666:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010666a	kernel.asm	/^ffff80000010666a:	48 8b 40 30          	mov    0x30(%rax),%rax$/;"	l
ffff80000010666e	kernel.asm	/^ffff80000010666e:	ba 40 00 00 00       	mov    $0x40,%edx$/;"	l
ffff800000106673	kernel.asm	/^ffff800000106673:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffff800000106678	kernel.asm	/^ffff800000106678:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010667b	kernel.asm	/^ffff80000010667b:	48 b8 72 7b 10 00 00 	movabs $0xffff800000107b72,%rax$/;"	l
ffff800000106682	kernel.asm	/^ffff800000106682:	80 ff ff $/;"	l
ffff800000106685	kernel.asm	/^ffff800000106685:	ff d0                	callq  *%rax$/;"	l
ffff800000106687	kernel.asm	/^ffff800000106687:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010668b	kernel.asm	/^ffff80000010668b:	48 8b 40 30          	mov    0x30(%rax),%rax$/;"	l
ffff80000010668f	kernel.asm	/^ffff80000010668f:	48 ba 5a 71 10 00 00 	movabs $0xffff80000010715a,%rdx$/;"	l
ffff800000106696	kernel.asm	/^ffff800000106696:	80 ff ff $/;"	l
ffff800000106699	kernel.asm	/^ffff800000106699:	48 89 50 38          	mov    %rdx,0x38(%rax)$/;"	l
ffff80000010669d	kernel.asm	/^ffff80000010669d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001066a1	kernel.asm	/^ffff8000001066a1:	48 c7 80 e0 00 00 00 	movq   $0x0,0xe0(%rax)$/;"	l
ffff8000001066a8	kernel.asm	/^ffff8000001066a8:	00 00 00 00 $/;"	l
ffff8000001066ac	kernel.asm	/^ffff8000001066ac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001066b0	kernel.asm	/^ffff8000001066b0:	c9                   	leaveq $/;"	l
ffff8000001066b1	kernel.asm	/^ffff8000001066b1:	c3                   	retq   $/;"	l
ffff8000001066b2	kernel.asm	/^ffff8000001066b2 <userinit>:$/;"	l
ffff8000001066b2	kernel.asm	/^ffff8000001066b2:	55                   	push   %rbp$/;"	l
ffff8000001066b3	kernel.asm	/^ffff8000001066b3:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff8000001066b6	kernel.asm	/^ffff8000001066b6:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff8000001066ba	kernel.asm	/^ffff8000001066ba:	48 b8 2b 65 10 00 00 	movabs $0xffff80000010652b,%rax$/;"	l
ffff8000001066c1	kernel.asm	/^ffff8000001066c1:	80 ff ff $/;"	l
ffff8000001066c4	kernel.asm	/^ffff8000001066c4:	ff d0                	callq  *%rax$/;"	l
ffff8000001066c6	kernel.asm	/^ffff8000001066c6:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff8000001066ca	kernel.asm	/^ffff8000001066ca:	48 b8 68 f7 11 00 00 	movabs $0xffff80000011f768,%rax$/;"	l
ffff8000001066d1	kernel.asm	/^ffff8000001066d1:	80 ff ff $/;"	l
ffff8000001066d4	kernel.asm	/^ffff8000001066d4:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx$/;"	l
ffff8000001066d8	kernel.asm	/^ffff8000001066d8:	48 89 10             	mov    %rdx,(%rax)$/;"	l
ffff8000001066db	kernel.asm	/^ffff8000001066db:	48 b8 5c b6 10 00 00 	movabs $0xffff80000010b65c,%rax$/;"	l
ffff8000001066e2	kernel.asm	/^ffff8000001066e2:	80 ff ff $/;"	l
ffff8000001066e5	kernel.asm	/^ffff8000001066e5:	ff d0                	callq  *%rax$/;"	l
ffff8000001066e7	kernel.asm	/^ffff8000001066e7:	48 89 c2             	mov    %rax,%rdx$/;"	l
ffff8000001066ea	kernel.asm	/^ffff8000001066ea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001066ee	kernel.asm	/^ffff8000001066ee:	48 89 50 08          	mov    %rdx,0x8(%rax)$/;"	l
ffff8000001066f2	kernel.asm	/^ffff8000001066f2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001066f6	kernel.asm	/^ffff8000001066f6:	48 8b 40 08          	mov    0x8(%rax),%rax$/;"	l
ffff8000001066fa	kernel.asm	/^ffff8000001066fa:	48 85 c0             	test   %rax,%rax$/;"	l
ffff8000001066fd	kernel.asm	/^ffff8000001066fd:	75 16                	jne    ffff800000106715 <userinit+0x63>$/;"	l
ffff8000001066ff	kernel.asm	/^ffff8000001066ff:	48 bf f7 d7 10 00 00 	movabs $0xffff80000010d7f7,%rdi$/;"	l
ffff800000106706	kernel.asm	/^ffff800000106706:	80 ff ff $/;"	l
ffff800000106709	kernel.asm	/^ffff800000106709:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff800000106710	kernel.asm	/^ffff800000106710:	80 ff ff $/;"	l
ffff800000106713	kernel.asm	/^ffff800000106713:	ff d0                	callq  *%rax$/;"	l
ffff800000106715	kernel.asm	/^ffff800000106715:	48 b8 3c 00 00 00 00 	movabs $0x3c,%rax$/;"	l
ffff80000010671c	kernel.asm	/^ffff80000010671c:	00 00 00 $/;"	l
ffff80000010671f	kernel.asm	/^ffff80000010671f:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000106721	kernel.asm	/^ffff800000106721:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000106725	kernel.asm	/^ffff800000106725:	48 8b 40 08          	mov    0x8(%rax),%rax$/;"	l
ffff800000106729	kernel.asm	/^ffff800000106729:	48 be 80 02 11 00 00 	movabs $0xffff800000110280,%rsi$/;"	l
ffff800000106730	kernel.asm	/^ffff800000106730:	80 ff ff $/;"	l
ffff800000106733	kernel.asm	/^ffff800000106733:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000106736	kernel.asm	/^ffff800000106736:	48 b8 dc bb 10 00 00 	movabs $0xffff80000010bbdc,%rax$/;"	l
ffff80000010673d	kernel.asm	/^ffff80000010673d:	80 ff ff $/;"	l
ffff800000106740	kernel.asm	/^ffff800000106740:	ff d0                	callq  *%rax$/;"	l
ffff800000106742	kernel.asm	/^ffff800000106742:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000106746	kernel.asm	/^ffff800000106746:	48 c7 00 00 10 00 00 	movq   $0x1000,(%rax)$/;"	l
ffff80000010674d	kernel.asm	/^ffff80000010674d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000106751	kernel.asm	/^ffff800000106751:	48 8b 40 28          	mov    0x28(%rax),%rax$/;"	l
ffff800000106755	kernel.asm	/^ffff800000106755:	ba b0 00 00 00       	mov    $0xb0,%edx$/;"	l
ffff80000010675a	kernel.asm	/^ffff80000010675a:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffff80000010675f	kernel.asm	/^ffff80000010675f:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000106762	kernel.asm	/^ffff800000106762:	48 b8 72 7b 10 00 00 	movabs $0xffff800000107b72,%rax$/;"	l
ffff800000106769	kernel.asm	/^ffff800000106769:	80 ff ff $/;"	l
ffff80000010676c	kernel.asm	/^ffff80000010676c:	ff d0                	callq  *%rax$/;"	l
ffff80000010676e	kernel.asm	/^ffff80000010676e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000106772	kernel.asm	/^ffff800000106772:	48 8b 40 28          	mov    0x28(%rax),%rax$/;"	l
ffff800000106776	kernel.asm	/^ffff800000106776:	48 c7 80 90 00 00 00 	movq   $0x2b,0x90(%rax)$/;"	l
ffff80000010677d	kernel.asm	/^ffff80000010677d:	2b 00 00 00 $/;"	l
ffff800000106781	kernel.asm	/^ffff800000106781:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000106785	kernel.asm	/^ffff800000106785:	48 8b 40 28          	mov    0x28(%rax),%rax$/;"	l
ffff800000106789	kernel.asm	/^ffff800000106789:	48 c7 80 a8 00 00 00 	movq   $0x23,0xa8(%rax)$/;"	l
ffff800000106790	kernel.asm	/^ffff800000106790:	23 00 00 00 $/;"	l
ffff800000106794	kernel.asm	/^ffff800000106794:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000106798	kernel.asm	/^ffff800000106798:	48 8b 40 28          	mov    0x28(%rax),%rax$/;"	l
ffff80000010679c	kernel.asm	/^ffff80000010679c:	48 c7 80 98 00 00 00 	movq   $0x200,0x98(%rax)$/;"	l
ffff8000001067a3	kernel.asm	/^ffff8000001067a3:	00 02 00 00 $/;"	l
ffff8000001067a7	kernel.asm	/^ffff8000001067a7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001067ab	kernel.asm	/^ffff8000001067ab:	48 8b 40 28          	mov    0x28(%rax),%rax$/;"	l
ffff8000001067af	kernel.asm	/^ffff8000001067af:	48 c7 80 a0 00 00 00 	movq   $0x1000,0xa0(%rax)$/;"	l
ffff8000001067b6	kernel.asm	/^ffff8000001067b6:	00 10 00 00 $/;"	l
ffff8000001067ba	kernel.asm	/^ffff8000001067ba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001067be	kernel.asm	/^ffff8000001067be:	48 8b 40 28          	mov    0x28(%rax),%rax$/;"	l
ffff8000001067c2	kernel.asm	/^ffff8000001067c2:	48 c7 80 88 00 00 00 	movq   $0x0,0x88(%rax)$/;"	l
ffff8000001067c9	kernel.asm	/^ffff8000001067c9:	00 00 00 00 $/;"	l
ffff8000001067cd	kernel.asm	/^ffff8000001067cd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001067d1	kernel.asm	/^ffff8000001067d1:	48 8b 40 28          	mov    0x28(%rax),%rax$/;"	l
ffff8000001067d5	kernel.asm	/^ffff8000001067d5:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)$/;"	l
ffff8000001067dc	kernel.asm	/^ffff8000001067dc:	00 $/;"	l
ffff8000001067dd	kernel.asm	/^ffff8000001067dd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001067e1	kernel.asm	/^ffff8000001067e1:	48 05 d0 00 00 00    	add    $0xd0,%rax$/;"	l
ffff8000001067e7	kernel.asm	/^ffff8000001067e7:	ba 10 00 00 00       	mov    $0x10,%edx$/;"	l
ffff8000001067ec	kernel.asm	/^ffff8000001067ec:	48 be 10 d8 10 00 00 	movabs $0xffff80000010d810,%rsi$/;"	l
ffff8000001067f3	kernel.asm	/^ffff8000001067f3:	80 ff ff $/;"	l
ffff8000001067f6	kernel.asm	/^ffff8000001067f6:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001067f9	kernel.asm	/^ffff8000001067f9:	48 b8 22 7e 10 00 00 	movabs $0xffff800000107e22,%rax$/;"	l
ffff800000106800	kernel.asm	/^ffff800000106800:	80 ff ff $/;"	l
ffff800000106803	kernel.asm	/^ffff800000106803:	ff d0                	callq  *%rax$/;"	l
ffff800000106805	kernel.asm	/^ffff800000106805:	48 bf 19 d8 10 00 00 	movabs $0xffff80000010d819,%rdi$/;"	l
ffff80000010680c	kernel.asm	/^ffff80000010680c:	80 ff ff $/;"	l
ffff80000010680f	kernel.asm	/^ffff80000010680f:	48 b8 a9 3b 10 00 00 	movabs $0xffff800000103ba9,%rax$/;"	l
ffff800000106816	kernel.asm	/^ffff800000106816:	80 ff ff $/;"	l
ffff800000106819	kernel.asm	/^ffff800000106819:	ff d0                	callq  *%rax$/;"	l
ffff80000010681b	kernel.asm	/^ffff80000010681b:	48 89 c2             	mov    %rax,%rdx$/;"	l
ffff80000010681e	kernel.asm	/^ffff80000010681e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000106822	kernel.asm	/^ffff800000106822:	48 89 90 c8 00 00 00 	mov    %rdx,0xc8(%rax)$/;"	l
ffff800000106829	kernel.asm	/^ffff800000106829:	48 bf 00 bb 11 00 00 	movabs $0xffff80000011bb00,%rdi$/;"	l
ffff800000106830	kernel.asm	/^ffff800000106830:	80 ff ff $/;"	l
ffff800000106833	kernel.asm	/^ffff800000106833:	48 b8 d6 77 10 00 00 	movabs $0xffff8000001077d6,%rax$/;"	l
ffff80000010683a	kernel.asm	/^ffff80000010683a:	80 ff ff $/;"	l
ffff80000010683d	kernel.asm	/^ffff80000010683d:	ff d0                	callq  *%rax$/;"	l
ffff80000010683f	kernel.asm	/^ffff80000010683f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000106843	kernel.asm	/^ffff800000106843:	c7 40 18 03 00 00 00 	movl   $0x3,0x18(%rax)$/;"	l
ffff80000010684a	kernel.asm	/^ffff80000010684a:	48 bf 00 bb 11 00 00 	movabs $0xffff80000011bb00,%rdi$/;"	l
ffff800000106851	kernel.asm	/^ffff800000106851:	80 ff ff $/;"	l
ffff800000106854	kernel.asm	/^ffff800000106854:	48 b8 6f 78 10 00 00 	movabs $0xffff80000010786f,%rax$/;"	l
ffff80000010685b	kernel.asm	/^ffff80000010685b:	80 ff ff $/;"	l
ffff80000010685e	kernel.asm	/^ffff80000010685e:	ff d0                	callq  *%rax$/;"	l
ffff800000106860	kernel.asm	/^ffff800000106860:	90                   	nop$/;"	l
ffff800000106861	kernel.asm	/^ffff800000106861:	c9                   	leaveq $/;"	l
ffff800000106862	kernel.asm	/^ffff800000106862:	c3                   	retq   $/;"	l
ffff800000106863	kernel.asm	/^ffff800000106863 <growproc>:$/;"	l
ffff800000106863	kernel.asm	/^ffff800000106863:	55                   	push   %rbp$/;"	l
ffff800000106864	kernel.asm	/^ffff800000106864:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000106867	kernel.asm	/^ffff800000106867:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ffff80000010686b	kernel.asm	/^ffff80000010686b:	89 7d ec             	mov    %edi,-0x14(%rbp)$/;"	l
ffff80000010686e	kernel.asm	/^ffff80000010686e:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000106875	kernel.asm	/^ffff800000106875:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000106879	kernel.asm	/^ffff800000106879:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff80000010687c	kernel.asm	/^ffff80000010687c:	89 45 fc             	mov    %eax,-0x4(%rbp)$/;"	l
ffff80000010687f	kernel.asm	/^ffff80000010687f:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)$/;"	l
ffff800000106883	kernel.asm	/^ffff800000106883:	7e 3b                	jle    ffff8000001068c0 <growproc+0x5d>$/;"	l
ffff800000106885	kernel.asm	/^ffff800000106885:	8b 55 ec             	mov    -0x14(%rbp),%edx$/;"	l
ffff800000106888	kernel.asm	/^ffff800000106888:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff80000010688b	kernel.asm	/^ffff80000010688b:	01 c2                	add    %eax,%edx$/;"	l
ffff80000010688d	kernel.asm	/^ffff80000010688d:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000106894	kernel.asm	/^ffff800000106894:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000106898	kernel.asm	/^ffff800000106898:	48 8b 40 08          	mov    0x8(%rax),%rax$/;"	l
ffff80000010689c	kernel.asm	/^ffff80000010689c:	8b 4d fc             	mov    -0x4(%rbp),%ecx$/;"	l
ffff80000010689f	kernel.asm	/^ffff80000010689f:	89 ce                	mov    %ecx,%esi$/;"	l
ffff8000001068a1	kernel.asm	/^ffff8000001068a1:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001068a4	kernel.asm	/^ffff8000001068a4:	48 b8 b4 bd 10 00 00 	movabs $0xffff80000010bdb4,%rax$/;"	l
ffff8000001068ab	kernel.asm	/^ffff8000001068ab:	80 ff ff $/;"	l
ffff8000001068ae	kernel.asm	/^ffff8000001068ae:	ff d0                	callq  *%rax$/;"	l
ffff8000001068b0	kernel.asm	/^ffff8000001068b0:	89 45 fc             	mov    %eax,-0x4(%rbp)$/;"	l
ffff8000001068b3	kernel.asm	/^ffff8000001068b3:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)$/;"	l
ffff8000001068b7	kernel.asm	/^ffff8000001068b7:	75 4b                	jne    ffff800000106904 <growproc+0xa1>$/;"	l
ffff8000001068b9	kernel.asm	/^ffff8000001068b9:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff8000001068be	kernel.asm	/^ffff8000001068be:	eb 74                	jmp    ffff800000106934 <growproc+0xd1>$/;"	l
ffff8000001068c0	kernel.asm	/^ffff8000001068c0:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)$/;"	l
ffff8000001068c4	kernel.asm	/^ffff8000001068c4:	79 3e                	jns    ffff800000106904 <growproc+0xa1>$/;"	l
ffff8000001068c6	kernel.asm	/^ffff8000001068c6:	8b 55 ec             	mov    -0x14(%rbp),%edx$/;"	l
ffff8000001068c9	kernel.asm	/^ffff8000001068c9:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff8000001068cc	kernel.asm	/^ffff8000001068cc:	01 d0                	add    %edx,%eax$/;"	l
ffff8000001068ce	kernel.asm	/^ffff8000001068ce:	89 c2                	mov    %eax,%edx$/;"	l
ffff8000001068d0	kernel.asm	/^ffff8000001068d0:	8b 4d fc             	mov    -0x4(%rbp),%ecx$/;"	l
ffff8000001068d3	kernel.asm	/^ffff8000001068d3:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff8000001068da	kernel.asm	/^ffff8000001068da:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff8000001068de	kernel.asm	/^ffff8000001068de:	48 8b 40 08          	mov    0x8(%rax),%rax$/;"	l
ffff8000001068e2	kernel.asm	/^ffff8000001068e2:	48 89 ce             	mov    %rcx,%rsi$/;"	l
ffff8000001068e5	kernel.asm	/^ffff8000001068e5:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001068e8	kernel.asm	/^ffff8000001068e8:	48 b8 08 bf 10 00 00 	movabs $0xffff80000010bf08,%rax$/;"	l
ffff8000001068ef	kernel.asm	/^ffff8000001068ef:	80 ff ff $/;"	l
ffff8000001068f2	kernel.asm	/^ffff8000001068f2:	ff d0                	callq  *%rax$/;"	l
ffff8000001068f4	kernel.asm	/^ffff8000001068f4:	89 45 fc             	mov    %eax,-0x4(%rbp)$/;"	l
ffff8000001068f7	kernel.asm	/^ffff8000001068f7:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)$/;"	l
ffff8000001068fb	kernel.asm	/^ffff8000001068fb:	75 07                	jne    ffff800000106904 <growproc+0xa1>$/;"	l
ffff8000001068fd	kernel.asm	/^ffff8000001068fd:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff800000106902	kernel.asm	/^ffff800000106902:	eb 30                	jmp    ffff800000106934 <growproc+0xd1>$/;"	l
ffff800000106904	kernel.asm	/^ffff800000106904:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff80000010690b	kernel.asm	/^ffff80000010690b:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff80000010690f	kernel.asm	/^ffff80000010690f:	8b 55 fc             	mov    -0x4(%rbp),%edx$/;"	l
ffff800000106912	kernel.asm	/^ffff800000106912:	48 89 10             	mov    %rdx,(%rax)$/;"	l
ffff800000106915	kernel.asm	/^ffff800000106915:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff80000010691c	kernel.asm	/^ffff80000010691c:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000106920	kernel.asm	/^ffff800000106920:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000106923	kernel.asm	/^ffff800000106923:	48 b8 02 b8 10 00 00 	movabs $0xffff80000010b802,%rax$/;"	l
ffff80000010692a	kernel.asm	/^ffff80000010692a:	80 ff ff $/;"	l
ffff80000010692d	kernel.asm	/^ffff80000010692d:	ff d0                	callq  *%rax$/;"	l
ffff80000010692f	kernel.asm	/^ffff80000010692f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000106934	kernel.asm	/^ffff800000106934:	c9                   	leaveq $/;"	l
ffff800000106935	kernel.asm	/^ffff800000106935:	c3                   	retq   $/;"	l
ffff800000106936	kernel.asm	/^ffff800000106936 <fork>:$/;"	l
ffff800000106936	kernel.asm	/^ffff800000106936:	55                   	push   %rbp$/;"	l
ffff800000106937	kernel.asm	/^ffff800000106937:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010693a	kernel.asm	/^ffff80000010693a:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ffff80000010693e	kernel.asm	/^ffff80000010693e:	48 b8 2b 65 10 00 00 	movabs $0xffff80000010652b,%rax$/;"	l
ffff800000106945	kernel.asm	/^ffff800000106945:	80 ff ff $/;"	l
ffff800000106948	kernel.asm	/^ffff800000106948:	ff d0                	callq  *%rax$/;"	l
ffff80000010694a	kernel.asm	/^ffff80000010694a:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ffff80000010694e	kernel.asm	/^ffff80000010694e:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)$/;"	l
ffff800000106953	kernel.asm	/^ffff800000106953:	75 0a                	jne    ffff80000010695f <fork+0x29>$/;"	l
ffff800000106955	kernel.asm	/^ffff800000106955:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff80000010695a	kernel.asm	/^ffff80000010695a:	e9 f6 01 00 00       	jmpq   ffff800000106b55 <fork+0x21f>$/;"	l
ffff80000010695f	kernel.asm	/^ffff80000010695f:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000106966	kernel.asm	/^ffff800000106966:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff80000010696a	kernel.asm	/^ffff80000010696a:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff80000010696d	kernel.asm	/^ffff80000010696d:	89 c2                	mov    %eax,%edx$/;"	l
ffff80000010696f	kernel.asm	/^ffff80000010696f:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000106976	kernel.asm	/^ffff800000106976:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff80000010697a	kernel.asm	/^ffff80000010697a:	48 8b 40 08          	mov    0x8(%rax),%rax$/;"	l
ffff80000010697e	kernel.asm	/^ffff80000010697e:	89 d6                	mov    %edx,%esi$/;"	l
ffff800000106980	kernel.asm	/^ffff800000106980:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000106983	kernel.asm	/^ffff800000106983:	48 b8 9a c2 10 00 00 	movabs $0xffff80000010c29a,%rax$/;"	l
ffff80000010698a	kernel.asm	/^ffff80000010698a:	80 ff ff $/;"	l
ffff80000010698d	kernel.asm	/^ffff80000010698d:	ff d0                	callq  *%rax$/;"	l
ffff80000010698f	kernel.asm	/^ffff80000010698f:	48 89 c2             	mov    %rax,%rdx$/;"	l
ffff800000106992	kernel.asm	/^ffff800000106992:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000106996	kernel.asm	/^ffff800000106996:	48 89 50 08          	mov    %rdx,0x8(%rax)$/;"	l
ffff80000010699a	kernel.asm	/^ffff80000010699a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff80000010699e	kernel.asm	/^ffff80000010699e:	48 8b 40 08          	mov    0x8(%rax),%rax$/;"	l
ffff8000001069a2	kernel.asm	/^ffff8000001069a2:	48 85 c0             	test   %rax,%rax$/;"	l
ffff8000001069a5	kernel.asm	/^ffff8000001069a5:	75 38                	jne    ffff8000001069df <fork+0xa9>$/;"	l
ffff8000001069a7	kernel.asm	/^ffff8000001069a7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff8000001069ab	kernel.asm	/^ffff8000001069ab:	48 8b 40 10          	mov    0x10(%rax),%rax$/;"	l
ffff8000001069af	kernel.asm	/^ffff8000001069af:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001069b2	kernel.asm	/^ffff8000001069b2:	48 b8 db 44 10 00 00 	movabs $0xffff8000001044db,%rax$/;"	l
ffff8000001069b9	kernel.asm	/^ffff8000001069b9:	80 ff ff $/;"	l
ffff8000001069bc	kernel.asm	/^ffff8000001069bc:	ff d0                	callq  *%rax$/;"	l
ffff8000001069be	kernel.asm	/^ffff8000001069be:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff8000001069c2	kernel.asm	/^ffff8000001069c2:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)$/;"	l
ffff8000001069c9	kernel.asm	/^ffff8000001069c9:	00 $/;"	l
ffff8000001069ca	kernel.asm	/^ffff8000001069ca:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff8000001069ce	kernel.asm	/^ffff8000001069ce:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%rax)$/;"	l
ffff8000001069d5	kernel.asm	/^ffff8000001069d5:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff8000001069da	kernel.asm	/^ffff8000001069da:	e9 76 01 00 00       	jmpq   ffff800000106b55 <fork+0x21f>$/;"	l
ffff8000001069df	kernel.asm	/^ffff8000001069df:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff8000001069e6	kernel.asm	/^ffff8000001069e6:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff8000001069ea	kernel.asm	/^ffff8000001069ea:	48 8b 10             	mov    (%rax),%rdx$/;"	l
ffff8000001069ed	kernel.asm	/^ffff8000001069ed:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff8000001069f1	kernel.asm	/^ffff8000001069f1:	48 89 10             	mov    %rdx,(%rax)$/;"	l
ffff8000001069f4	kernel.asm	/^ffff8000001069f4:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff8000001069fb	kernel.asm	/^ffff8000001069fb:	64 48 8b 10          	mov    %fs:(%rax),%rdx$/;"	l
ffff8000001069ff	kernel.asm	/^ffff8000001069ff:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000106a03	kernel.asm	/^ffff800000106a03:	48 89 50 20          	mov    %rdx,0x20(%rax)$/;"	l
ffff800000106a07	kernel.asm	/^ffff800000106a07:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000106a0b	kernel.asm	/^ffff800000106a0b:	48 8b 50 28          	mov    0x28(%rax),%rdx$/;"	l
ffff800000106a0f	kernel.asm	/^ffff800000106a0f:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000106a16	kernel.asm	/^ffff800000106a16:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000106a1a	kernel.asm	/^ffff800000106a1a:	48 8b 40 28          	mov    0x28(%rax),%rax$/;"	l
ffff800000106a1e	kernel.asm	/^ffff800000106a1e:	48 89 c6             	mov    %rax,%rsi$/;"	l
ffff800000106a21	kernel.asm	/^ffff800000106a21:	b8 16 00 00 00       	mov    $0x16,%eax$/;"	l
ffff800000106a26	kernel.asm	/^ffff800000106a26:	48 89 d7             	mov    %rdx,%rdi$/;"	l
ffff800000106a29	kernel.asm	/^ffff800000106a29:	48 89 c1             	mov    %rax,%rcx$/;"	l
ffff800000106a2c	kernel.asm	/^ffff800000106a2c:	f3 48 a5             	rep movsq %ds:(%rsi),%es:(%rdi)$/;"	l
ffff800000106a2f	kernel.asm	/^ffff800000106a2f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000106a33	kernel.asm	/^ffff800000106a33:	48 8b 40 28          	mov    0x28(%rax),%rax$/;"	l
ffff800000106a37	kernel.asm	/^ffff800000106a37:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)$/;"	l
ffff800000106a3e	kernel.asm	/^ffff800000106a3e:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)$/;"	l
ffff800000106a45	kernel.asm	/^ffff800000106a45:	eb 62                	jmp    ffff800000106aa9 <fork+0x173>$/;"	l
ffff800000106a47	kernel.asm	/^ffff800000106a47:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000106a4e	kernel.asm	/^ffff800000106a4e:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000106a52	kernel.asm	/^ffff800000106a52:	8b 55 fc             	mov    -0x4(%rbp),%edx$/;"	l
ffff800000106a55	kernel.asm	/^ffff800000106a55:	48 63 d2             	movslq %edx,%rdx$/;"	l
ffff800000106a58	kernel.asm	/^ffff800000106a58:	48 83 c2 08          	add    $0x8,%rdx$/;"	l
ffff800000106a5c	kernel.asm	/^ffff800000106a5c:	48 8b 44 d0 08       	mov    0x8(%rax,%rdx,8),%rax$/;"	l
ffff800000106a61	kernel.asm	/^ffff800000106a61:	48 85 c0             	test   %rax,%rax$/;"	l
ffff800000106a64	kernel.asm	/^ffff800000106a64:	74 3f                	je     ffff800000106aa5 <fork+0x16f>$/;"	l
ffff800000106a66	kernel.asm	/^ffff800000106a66:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000106a6d	kernel.asm	/^ffff800000106a6d:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000106a71	kernel.asm	/^ffff800000106a71:	8b 55 fc             	mov    -0x4(%rbp),%edx$/;"	l
ffff800000106a74	kernel.asm	/^ffff800000106a74:	48 63 d2             	movslq %edx,%rdx$/;"	l
ffff800000106a77	kernel.asm	/^ffff800000106a77:	48 83 c2 08          	add    $0x8,%rdx$/;"	l
ffff800000106a7b	kernel.asm	/^ffff800000106a7b:	48 8b 44 d0 08       	mov    0x8(%rax,%rdx,8),%rax$/;"	l
ffff800000106a80	kernel.asm	/^ffff800000106a80:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000106a83	kernel.asm	/^ffff800000106a83:	48 b8 70 1f 10 00 00 	movabs $0xffff800000101f70,%rax$/;"	l
ffff800000106a8a	kernel.asm	/^ffff800000106a8a:	80 ff ff $/;"	l
ffff800000106a8d	kernel.asm	/^ffff800000106a8d:	ff d0                	callq  *%rax$/;"	l
ffff800000106a8f	kernel.asm	/^ffff800000106a8f:	48 89 c1             	mov    %rax,%rcx$/;"	l
ffff800000106a92	kernel.asm	/^ffff800000106a92:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000106a96	kernel.asm	/^ffff800000106a96:	8b 55 fc             	mov    -0x4(%rbp),%edx$/;"	l
ffff800000106a99	kernel.asm	/^ffff800000106a99:	48 63 d2             	movslq %edx,%rdx$/;"	l
ffff800000106a9c	kernel.asm	/^ffff800000106a9c:	48 83 c2 08          	add    $0x8,%rdx$/;"	l
ffff800000106aa0	kernel.asm	/^ffff800000106aa0:	48 89 4c d0 08       	mov    %rcx,0x8(%rax,%rdx,8)$/;"	l
ffff800000106aa5	kernel.asm	/^ffff800000106aa5:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)$/;"	l
ffff800000106aa9	kernel.asm	/^ffff800000106aa9:	83 7d fc 0f          	cmpl   $0xf,-0x4(%rbp)$/;"	l
ffff800000106aad	kernel.asm	/^ffff800000106aad:	7e 98                	jle    ffff800000106a47 <fork+0x111>$/;"	l
ffff800000106aaf	kernel.asm	/^ffff800000106aaf:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000106ab6	kernel.asm	/^ffff800000106ab6:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000106aba	kernel.asm	/^ffff800000106aba:	48 8b 80 c8 00 00 00 	mov    0xc8(%rax),%rax$/;"	l
ffff800000106ac1	kernel.asm	/^ffff800000106ac1:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000106ac4	kernel.asm	/^ffff800000106ac4:	48 b8 6a 2c 10 00 00 	movabs $0xffff800000102c6a,%rax$/;"	l
ffff800000106acb	kernel.asm	/^ffff800000106acb:	80 ff ff $/;"	l
ffff800000106ace	kernel.asm	/^ffff800000106ace:	ff d0                	callq  *%rax$/;"	l
ffff800000106ad0	kernel.asm	/^ffff800000106ad0:	48 89 c2             	mov    %rax,%rdx$/;"	l
ffff800000106ad3	kernel.asm	/^ffff800000106ad3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000106ad7	kernel.asm	/^ffff800000106ad7:	48 89 90 c8 00 00 00 	mov    %rdx,0xc8(%rax)$/;"	l
ffff800000106ade	kernel.asm	/^ffff800000106ade:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000106ae5	kernel.asm	/^ffff800000106ae5:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000106ae9	kernel.asm	/^ffff800000106ae9:	48 8d 88 d0 00 00 00 	lea    0xd0(%rax),%rcx$/;"	l
ffff800000106af0	kernel.asm	/^ffff800000106af0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000106af4	kernel.asm	/^ffff800000106af4:	48 05 d0 00 00 00    	add    $0xd0,%rax$/;"	l
ffff800000106afa	kernel.asm	/^ffff800000106afa:	ba 10 00 00 00       	mov    $0x10,%edx$/;"	l
ffff800000106aff	kernel.asm	/^ffff800000106aff:	48 89 ce             	mov    %rcx,%rsi$/;"	l
ffff800000106b02	kernel.asm	/^ffff800000106b02:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000106b05	kernel.asm	/^ffff800000106b05:	48 b8 22 7e 10 00 00 	movabs $0xffff800000107e22,%rax$/;"	l
ffff800000106b0c	kernel.asm	/^ffff800000106b0c:	80 ff ff $/;"	l
ffff800000106b0f	kernel.asm	/^ffff800000106b0f:	ff d0                	callq  *%rax$/;"	l
ffff800000106b11	kernel.asm	/^ffff800000106b11:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000106b15	kernel.asm	/^ffff800000106b15:	8b 40 1c             	mov    0x1c(%rax),%eax$/;"	l
ffff800000106b18	kernel.asm	/^ffff800000106b18:	89 45 ec             	mov    %eax,-0x14(%rbp)$/;"	l
ffff800000106b1b	kernel.asm	/^ffff800000106b1b:	48 bf 00 bb 11 00 00 	movabs $0xffff80000011bb00,%rdi$/;"	l
ffff800000106b22	kernel.asm	/^ffff800000106b22:	80 ff ff $/;"	l
ffff800000106b25	kernel.asm	/^ffff800000106b25:	48 b8 d6 77 10 00 00 	movabs $0xffff8000001077d6,%rax$/;"	l
ffff800000106b2c	kernel.asm	/^ffff800000106b2c:	80 ff ff $/;"	l
ffff800000106b2f	kernel.asm	/^ffff800000106b2f:	ff d0                	callq  *%rax$/;"	l
ffff800000106b31	kernel.asm	/^ffff800000106b31:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000106b35	kernel.asm	/^ffff800000106b35:	c7 40 18 03 00 00 00 	movl   $0x3,0x18(%rax)$/;"	l
ffff800000106b3c	kernel.asm	/^ffff800000106b3c:	48 bf 00 bb 11 00 00 	movabs $0xffff80000011bb00,%rdi$/;"	l
ffff800000106b43	kernel.asm	/^ffff800000106b43:	80 ff ff $/;"	l
ffff800000106b46	kernel.asm	/^ffff800000106b46:	48 b8 6f 78 10 00 00 	movabs $0xffff80000010786f,%rax$/;"	l
ffff800000106b4d	kernel.asm	/^ffff800000106b4d:	80 ff ff $/;"	l
ffff800000106b50	kernel.asm	/^ffff800000106b50:	ff d0                	callq  *%rax$/;"	l
ffff800000106b52	kernel.asm	/^ffff800000106b52:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
ffff800000106b55	kernel.asm	/^ffff800000106b55:	c9                   	leaveq $/;"	l
ffff800000106b56	kernel.asm	/^ffff800000106b56:	c3                   	retq   $/;"	l
ffff800000106b57	kernel.asm	/^ffff800000106b57 <exit>:$/;"	l
ffff800000106b57	kernel.asm	/^ffff800000106b57:	55                   	push   %rbp$/;"	l
ffff800000106b58	kernel.asm	/^ffff800000106b58:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000106b5b	kernel.asm	/^ffff800000106b5b:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff800000106b5f	kernel.asm	/^ffff800000106b5f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000106b64	kernel.asm	/^ffff800000106b64:	48 ba 44 44 10 00 00 	movabs $0xffff800000104444,%rdx$/;"	l
ffff800000106b6b	kernel.asm	/^ffff800000106b6b:	80 ff ff $/;"	l
ffff800000106b6e	kernel.asm	/^ffff800000106b6e:	ff d2                	callq  *%rdx$/;"	l
ffff800000106b70	kernel.asm	/^ffff800000106b70:	89 c6                	mov    %eax,%esi$/;"	l
ffff800000106b72	kernel.asm	/^ffff800000106b72:	48 bf 20 d8 10 00 00 	movabs $0xffff80000010d820,%rdi$/;"	l
ffff800000106b79	kernel.asm	/^ffff800000106b79:	80 ff ff $/;"	l
ffff800000106b7c	kernel.asm	/^ffff800000106b7c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000106b81	kernel.asm	/^ffff800000106b81:	48 ba ac 07 10 00 00 	movabs $0xffff8000001007ac,%rdx$/;"	l
ffff800000106b88	kernel.asm	/^ffff800000106b88:	80 ff ff $/;"	l
ffff800000106b8b	kernel.asm	/^ffff800000106b8b:	ff d2                	callq  *%rdx$/;"	l
ffff800000106b8d	kernel.asm	/^ffff800000106b8d:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000106b94	kernel.asm	/^ffff800000106b94:	64 48 8b 10          	mov    %fs:(%rax),%rdx$/;"	l
ffff800000106b98	kernel.asm	/^ffff800000106b98:	48 b8 68 f7 11 00 00 	movabs $0xffff80000011f768,%rax$/;"	l
ffff800000106b9f	kernel.asm	/^ffff800000106b9f:	80 ff ff $/;"	l
ffff800000106ba2	kernel.asm	/^ffff800000106ba2:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff800000106ba5	kernel.asm	/^ffff800000106ba5:	48 39 c2             	cmp    %rax,%rdx$/;"	l
ffff800000106ba8	kernel.asm	/^ffff800000106ba8:	75 16                	jne    ffff800000106bc0 <exit+0x69>$/;"	l
ffff800000106baa	kernel.asm	/^ffff800000106baa:	48 bf 4a d8 10 00 00 	movabs $0xffff80000010d84a,%rdi$/;"	l
ffff800000106bb1	kernel.asm	/^ffff800000106bb1:	80 ff ff $/;"	l
ffff800000106bb4	kernel.asm	/^ffff800000106bb4:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff800000106bbb	kernel.asm	/^ffff800000106bbb:	80 ff ff $/;"	l
ffff800000106bbe	kernel.asm	/^ffff800000106bbe:	ff d0                	callq  *%rax$/;"	l
ffff800000106bc0	kernel.asm	/^ffff800000106bc0:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)$/;"	l
ffff800000106bc7	kernel.asm	/^ffff800000106bc7:	eb 6a                	jmp    ffff800000106c33 <exit+0xdc>$/;"	l
ffff800000106bc9	kernel.asm	/^ffff800000106bc9:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000106bd0	kernel.asm	/^ffff800000106bd0:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000106bd4	kernel.asm	/^ffff800000106bd4:	8b 55 f4             	mov    -0xc(%rbp),%edx$/;"	l
ffff800000106bd7	kernel.asm	/^ffff800000106bd7:	48 63 d2             	movslq %edx,%rdx$/;"	l
ffff800000106bda	kernel.asm	/^ffff800000106bda:	48 83 c2 08          	add    $0x8,%rdx$/;"	l
ffff800000106bde	kernel.asm	/^ffff800000106bde:	48 8b 44 d0 08       	mov    0x8(%rax,%rdx,8),%rax$/;"	l
ffff800000106be3	kernel.asm	/^ffff800000106be3:	48 85 c0             	test   %rax,%rax$/;"	l
ffff800000106be6	kernel.asm	/^ffff800000106be6:	74 47                	je     ffff800000106c2f <exit+0xd8>$/;"	l
ffff800000106be8	kernel.asm	/^ffff800000106be8:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000106bef	kernel.asm	/^ffff800000106bef:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000106bf3	kernel.asm	/^ffff800000106bf3:	8b 55 f4             	mov    -0xc(%rbp),%edx$/;"	l
ffff800000106bf6	kernel.asm	/^ffff800000106bf6:	48 63 d2             	movslq %edx,%rdx$/;"	l
ffff800000106bf9	kernel.asm	/^ffff800000106bf9:	48 83 c2 08          	add    $0x8,%rdx$/;"	l
ffff800000106bfd	kernel.asm	/^ffff800000106bfd:	48 8b 44 d0 08       	mov    0x8(%rax,%rdx,8),%rax$/;"	l
ffff800000106c02	kernel.asm	/^ffff800000106c02:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000106c05	kernel.asm	/^ffff800000106c05:	48 b8 e0 1f 10 00 00 	movabs $0xffff800000101fe0,%rax$/;"	l
ffff800000106c0c	kernel.asm	/^ffff800000106c0c:	80 ff ff $/;"	l
ffff800000106c0f	kernel.asm	/^ffff800000106c0f:	ff d0                	callq  *%rax$/;"	l
ffff800000106c11	kernel.asm	/^ffff800000106c11:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000106c18	kernel.asm	/^ffff800000106c18:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000106c1c	kernel.asm	/^ffff800000106c1c:	8b 55 f4             	mov    -0xc(%rbp),%edx$/;"	l
ffff800000106c1f	kernel.asm	/^ffff800000106c1f:	48 63 d2             	movslq %edx,%rdx$/;"	l
ffff800000106c22	kernel.asm	/^ffff800000106c22:	48 83 c2 08          	add    $0x8,%rdx$/;"	l
ffff800000106c26	kernel.asm	/^ffff800000106c26:	48 c7 44 d0 08 00 00 	movq   $0x0,0x8(%rax,%rdx,8)$/;"	l
ffff800000106c2d	kernel.asm	/^ffff800000106c2d:	00 00 $/;"	l
ffff800000106c2f	kernel.asm	/^ffff800000106c2f:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)$/;"	l
ffff800000106c33	kernel.asm	/^ffff800000106c33:	83 7d f4 0f          	cmpl   $0xf,-0xc(%rbp)$/;"	l
ffff800000106c37	kernel.asm	/^ffff800000106c37:	7e 90                	jle    ffff800000106bc9 <exit+0x72>$/;"	l
ffff800000106c39	kernel.asm	/^ffff800000106c39:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000106c3e	kernel.asm	/^ffff800000106c3e:	48 ba d0 52 10 00 00 	movabs $0xffff8000001052d0,%rdx$/;"	l
ffff800000106c45	kernel.asm	/^ffff800000106c45:	80 ff ff $/;"	l
ffff800000106c48	kernel.asm	/^ffff800000106c48:	ff d2                	callq  *%rdx$/;"	l
ffff800000106c4a	kernel.asm	/^ffff800000106c4a:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000106c51	kernel.asm	/^ffff800000106c51:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000106c55	kernel.asm	/^ffff800000106c55:	48 8b 80 c8 00 00 00 	mov    0xc8(%rax),%rax$/;"	l
ffff800000106c5c	kernel.asm	/^ffff800000106c5c:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000106c5f	kernel.asm	/^ffff800000106c5f:	48 b8 b3 2e 10 00 00 	movabs $0xffff800000102eb3,%rax$/;"	l
ffff800000106c66	kernel.asm	/^ffff800000106c66:	80 ff ff $/;"	l
ffff800000106c69	kernel.asm	/^ffff800000106c69:	ff d0                	callq  *%rax$/;"	l
ffff800000106c6b	kernel.asm	/^ffff800000106c6b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000106c70	kernel.asm	/^ffff800000106c70:	48 ba a6 53 10 00 00 	movabs $0xffff8000001053a6,%rdx$/;"	l
ffff800000106c77	kernel.asm	/^ffff800000106c77:	80 ff ff $/;"	l
ffff800000106c7a	kernel.asm	/^ffff800000106c7a:	ff d2                	callq  *%rdx$/;"	l
ffff800000106c7c	kernel.asm	/^ffff800000106c7c:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000106c83	kernel.asm	/^ffff800000106c83:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000106c87	kernel.asm	/^ffff800000106c87:	48 c7 80 c8 00 00 00 	movq   $0x0,0xc8(%rax)$/;"	l
ffff800000106c8e	kernel.asm	/^ffff800000106c8e:	00 00 00 00 $/;"	l
ffff800000106c92	kernel.asm	/^ffff800000106c92:	48 bf 00 bb 11 00 00 	movabs $0xffff80000011bb00,%rdi$/;"	l
ffff800000106c99	kernel.asm	/^ffff800000106c99:	80 ff ff $/;"	l
ffff800000106c9c	kernel.asm	/^ffff800000106c9c:	48 b8 d6 77 10 00 00 	movabs $0xffff8000001077d6,%rax$/;"	l
ffff800000106ca3	kernel.asm	/^ffff800000106ca3:	80 ff ff $/;"	l
ffff800000106ca6	kernel.asm	/^ffff800000106ca6:	ff d0                	callq  *%rax$/;"	l
ffff800000106ca8	kernel.asm	/^ffff800000106ca8:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000106caf	kernel.asm	/^ffff800000106caf:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000106cb3	kernel.asm	/^ffff800000106cb3:	48 8b 40 20          	mov    0x20(%rax),%rax$/;"	l
ffff800000106cb7	kernel.asm	/^ffff800000106cb7:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000106cba	kernel.asm	/^ffff800000106cba:	48 b8 d8 72 10 00 00 	movabs $0xffff8000001072d8,%rax$/;"	l
ffff800000106cc1	kernel.asm	/^ffff800000106cc1:	80 ff ff $/;"	l
ffff800000106cc4	kernel.asm	/^ffff800000106cc4:	ff d0                	callq  *%rax$/;"	l
ffff800000106cc6	kernel.asm	/^ffff800000106cc6:	48 b8 68 bb 11 00 00 	movabs $0xffff80000011bb68,%rax$/;"	l
ffff800000106ccd	kernel.asm	/^ffff800000106ccd:	80 ff ff $/;"	l
ffff800000106cd0	kernel.asm	/^ffff800000106cd0:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff800000106cd4	kernel.asm	/^ffff800000106cd4:	eb 5d                	jmp    ffff800000106d33 <exit+0x1dc>$/;"	l
ffff800000106cd6	kernel.asm	/^ffff800000106cd6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000106cda	kernel.asm	/^ffff800000106cda:	48 8b 50 20          	mov    0x20(%rax),%rdx$/;"	l
ffff800000106cde	kernel.asm	/^ffff800000106cde:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000106ce5	kernel.asm	/^ffff800000106ce5:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000106ce9	kernel.asm	/^ffff800000106ce9:	48 39 c2             	cmp    %rax,%rdx$/;"	l
ffff800000106cec	kernel.asm	/^ffff800000106cec:	75 3d                	jne    ffff800000106d2b <exit+0x1d4>$/;"	l
ffff800000106cee	kernel.asm	/^ffff800000106cee:	48 b8 68 f7 11 00 00 	movabs $0xffff80000011f768,%rax$/;"	l
ffff800000106cf5	kernel.asm	/^ffff800000106cf5:	80 ff ff $/;"	l
ffff800000106cf8	kernel.asm	/^ffff800000106cf8:	48 8b 10             	mov    (%rax),%rdx$/;"	l
ffff800000106cfb	kernel.asm	/^ffff800000106cfb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000106cff	kernel.asm	/^ffff800000106cff:	48 89 50 20          	mov    %rdx,0x20(%rax)$/;"	l
ffff800000106d03	kernel.asm	/^ffff800000106d03:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000106d07	kernel.asm	/^ffff800000106d07:	8b 40 18             	mov    0x18(%rax),%eax$/;"	l
ffff800000106d0a	kernel.asm	/^ffff800000106d0a:	83 f8 05             	cmp    $0x5,%eax$/;"	l
ffff800000106d0d	kernel.asm	/^ffff800000106d0d:	75 1c                	jne    ffff800000106d2b <exit+0x1d4>$/;"	l
ffff800000106d0f	kernel.asm	/^ffff800000106d0f:	48 b8 68 f7 11 00 00 	movabs $0xffff80000011f768,%rax$/;"	l
ffff800000106d16	kernel.asm	/^ffff800000106d16:	80 ff ff $/;"	l
ffff800000106d19	kernel.asm	/^ffff800000106d19:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff800000106d1c	kernel.asm	/^ffff800000106d1c:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000106d1f	kernel.asm	/^ffff800000106d1f:	48 b8 d8 72 10 00 00 	movabs $0xffff8000001072d8,%rax$/;"	l
ffff800000106d26	kernel.asm	/^ffff800000106d26:	80 ff ff $/;"	l
ffff800000106d29	kernel.asm	/^ffff800000106d29:	ff d0                	callq  *%rax$/;"	l
ffff800000106d2b	kernel.asm	/^ffff800000106d2b:	48 81 45 f8 f0 00 00 	addq   $0xf0,-0x8(%rbp)$/;"	l
ffff800000106d32	kernel.asm	/^ffff800000106d32:	00 $/;"	l
ffff800000106d33	kernel.asm	/^ffff800000106d33:	48 b8 68 f7 11 00 00 	movabs $0xffff80000011f768,%rax$/;"	l
ffff800000106d3a	kernel.asm	/^ffff800000106d3a:	80 ff ff $/;"	l
ffff800000106d3d	kernel.asm	/^ffff800000106d3d:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)$/;"	l
ffff800000106d41	kernel.asm	/^ffff800000106d41:	72 93                	jb     ffff800000106cd6 <exit+0x17f>$/;"	l
ffff800000106d43	kernel.asm	/^ffff800000106d43:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000106d4a	kernel.asm	/^ffff800000106d4a:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000106d4e	kernel.asm	/^ffff800000106d4e:	c7 40 18 05 00 00 00 	movl   $0x5,0x18(%rax)$/;"	l
ffff800000106d55	kernel.asm	/^ffff800000106d55:	48 b8 f5 6f 10 00 00 	movabs $0xffff800000106ff5,%rax$/;"	l
ffff800000106d5c	kernel.asm	/^ffff800000106d5c:	80 ff ff $/;"	l
ffff800000106d5f	kernel.asm	/^ffff800000106d5f:	ff d0                	callq  *%rax$/;"	l
ffff800000106d61	kernel.asm	/^ffff800000106d61:	48 bf 57 d8 10 00 00 	movabs $0xffff80000010d857,%rdi$/;"	l
ffff800000106d68	kernel.asm	/^ffff800000106d68:	80 ff ff $/;"	l
ffff800000106d6b	kernel.asm	/^ffff800000106d6b:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff800000106d72	kernel.asm	/^ffff800000106d72:	80 ff ff $/;"	l
ffff800000106d75	kernel.asm	/^ffff800000106d75:	ff d0                	callq  *%rax$/;"	l
ffff800000106d77	kernel.asm	/^ffff800000106d77 <wait>:$/;"	l
ffff800000106d77	kernel.asm	/^ffff800000106d77:	55                   	push   %rbp$/;"	l
ffff800000106d78	kernel.asm	/^ffff800000106d78:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000106d7b	kernel.asm	/^ffff800000106d7b:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff800000106d7f	kernel.asm	/^ffff800000106d7f:	48 bf 00 bb 11 00 00 	movabs $0xffff80000011bb00,%rdi$/;"	l
ffff800000106d86	kernel.asm	/^ffff800000106d86:	80 ff ff $/;"	l
ffff800000106d89	kernel.asm	/^ffff800000106d89:	48 b8 d6 77 10 00 00 	movabs $0xffff8000001077d6,%rax$/;"	l
ffff800000106d90	kernel.asm	/^ffff800000106d90:	80 ff ff $/;"	l
ffff800000106d93	kernel.asm	/^ffff800000106d93:	ff d0                	callq  *%rax$/;"	l
ffff800000106d95	kernel.asm	/^ffff800000106d95:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)$/;"	l
ffff800000106d9c	kernel.asm	/^ffff800000106d9c:	48 b8 68 bb 11 00 00 	movabs $0xffff80000011bb68,%rax$/;"	l
ffff800000106da3	kernel.asm	/^ffff800000106da3:	80 ff ff $/;"	l
ffff800000106da6	kernel.asm	/^ffff800000106da6:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff800000106daa	kernel.asm	/^ffff800000106daa:	e9 d3 00 00 00       	jmpq   ffff800000106e82 <wait+0x10b>$/;"	l
ffff800000106daf	kernel.asm	/^ffff800000106daf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000106db3	kernel.asm	/^ffff800000106db3:	48 8b 50 20          	mov    0x20(%rax),%rdx$/;"	l
ffff800000106db7	kernel.asm	/^ffff800000106db7:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000106dbe	kernel.asm	/^ffff800000106dbe:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000106dc2	kernel.asm	/^ffff800000106dc2:	48 39 c2             	cmp    %rax,%rdx$/;"	l
ffff800000106dc5	kernel.asm	/^ffff800000106dc5:	0f 85 ae 00 00 00    	jne    ffff800000106e79 <wait+0x102>$/;"	l
ffff800000106dcb	kernel.asm	/^ffff800000106dcb:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%rbp)$/;"	l
ffff800000106dd2	kernel.asm	/^ffff800000106dd2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000106dd6	kernel.asm	/^ffff800000106dd6:	8b 40 18             	mov    0x18(%rax),%eax$/;"	l
ffff800000106dd9	kernel.asm	/^ffff800000106dd9:	83 f8 05             	cmp    $0x5,%eax$/;"	l
ffff800000106ddc	kernel.asm	/^ffff800000106ddc:	0f 85 98 00 00 00    	jne    ffff800000106e7a <wait+0x103>$/;"	l
ffff800000106de2	kernel.asm	/^ffff800000106de2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000106de6	kernel.asm	/^ffff800000106de6:	8b 40 1c             	mov    0x1c(%rax),%eax$/;"	l
ffff800000106de9	kernel.asm	/^ffff800000106de9:	89 45 f0             	mov    %eax,-0x10(%rbp)$/;"	l
ffff800000106dec	kernel.asm	/^ffff800000106dec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000106df0	kernel.asm	/^ffff800000106df0:	48 8b 40 10          	mov    0x10(%rax),%rax$/;"	l
ffff800000106df4	kernel.asm	/^ffff800000106df4:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000106df7	kernel.asm	/^ffff800000106df7:	48 b8 db 44 10 00 00 	movabs $0xffff8000001044db,%rax$/;"	l
ffff800000106dfe	kernel.asm	/^ffff800000106dfe:	80 ff ff $/;"	l
ffff800000106e01	kernel.asm	/^ffff800000106e01:	ff d0                	callq  *%rax$/;"	l
ffff800000106e03	kernel.asm	/^ffff800000106e03:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000106e07	kernel.asm	/^ffff800000106e07:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)$/;"	l
ffff800000106e0e	kernel.asm	/^ffff800000106e0e:	00 $/;"	l
ffff800000106e0f	kernel.asm	/^ffff800000106e0f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000106e13	kernel.asm	/^ffff800000106e13:	48 8b 40 08          	mov    0x8(%rax),%rax$/;"	l
ffff800000106e17	kernel.asm	/^ffff800000106e17:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000106e1a	kernel.asm	/^ffff800000106e1a:	48 b8 fe bf 10 00 00 	movabs $0xffff80000010bffe,%rax$/;"	l
ffff800000106e21	kernel.asm	/^ffff800000106e21:	80 ff ff $/;"	l
ffff800000106e24	kernel.asm	/^ffff800000106e24:	ff d0                	callq  *%rax$/;"	l
ffff800000106e26	kernel.asm	/^ffff800000106e26:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000106e2a	kernel.asm	/^ffff800000106e2a:	c7 40 1c 00 00 00 00 	movl   $0x0,0x1c(%rax)$/;"	l
ffff800000106e31	kernel.asm	/^ffff800000106e31:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000106e35	kernel.asm	/^ffff800000106e35:	48 c7 40 20 00 00 00 	movq   $0x0,0x20(%rax)$/;"	l
ffff800000106e3c	kernel.asm	/^ffff800000106e3c:	00 $/;"	l
ffff800000106e3d	kernel.asm	/^ffff800000106e3d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000106e41	kernel.asm	/^ffff800000106e41:	c6 80 d0 00 00 00 00 	movb   $0x0,0xd0(%rax)$/;"	l
ffff800000106e48	kernel.asm	/^ffff800000106e48:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000106e4c	kernel.asm	/^ffff800000106e4c:	c7 40 40 00 00 00 00 	movl   $0x0,0x40(%rax)$/;"	l
ffff800000106e53	kernel.asm	/^ffff800000106e53:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000106e57	kernel.asm	/^ffff800000106e57:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%rax)$/;"	l
ffff800000106e5e	kernel.asm	/^ffff800000106e5e:	48 bf 00 bb 11 00 00 	movabs $0xffff80000011bb00,%rdi$/;"	l
ffff800000106e65	kernel.asm	/^ffff800000106e65:	80 ff ff $/;"	l
ffff800000106e68	kernel.asm	/^ffff800000106e68:	48 b8 6f 78 10 00 00 	movabs $0xffff80000010786f,%rax$/;"	l
ffff800000106e6f	kernel.asm	/^ffff800000106e6f:	80 ff ff $/;"	l
ffff800000106e72	kernel.asm	/^ffff800000106e72:	ff d0                	callq  *%rax$/;"	l
ffff800000106e74	kernel.asm	/^ffff800000106e74:	8b 45 f0             	mov    -0x10(%rbp),%eax$/;"	l
ffff800000106e77	kernel.asm	/^ffff800000106e77:	eb 7b                	jmp    ffff800000106ef4 <wait+0x17d>$/;"	l
ffff800000106e79	kernel.asm	/^ffff800000106e79:	90                   	nop$/;"	l
ffff800000106e7a	kernel.asm	/^ffff800000106e7a:	48 81 45 f8 f0 00 00 	addq   $0xf0,-0x8(%rbp)$/;"	l
ffff800000106e81	kernel.asm	/^ffff800000106e81:	00 $/;"	l
ffff800000106e82	kernel.asm	/^ffff800000106e82:	48 b8 68 f7 11 00 00 	movabs $0xffff80000011f768,%rax$/;"	l
ffff800000106e89	kernel.asm	/^ffff800000106e89:	80 ff ff $/;"	l
ffff800000106e8c	kernel.asm	/^ffff800000106e8c:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)$/;"	l
ffff800000106e90	kernel.asm	/^ffff800000106e90:	0f 82 19 ff ff ff    	jb     ffff800000106daf <wait+0x38>$/;"	l
ffff800000106e96	kernel.asm	/^ffff800000106e96:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)$/;"	l
ffff800000106e9a	kernel.asm	/^ffff800000106e9a:	74 12                	je     ffff800000106eae <wait+0x137>$/;"	l
ffff800000106e9c	kernel.asm	/^ffff800000106e9c:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000106ea3	kernel.asm	/^ffff800000106ea3:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000106ea7	kernel.asm	/^ffff800000106ea7:	8b 40 40             	mov    0x40(%rax),%eax$/;"	l
ffff800000106eaa	kernel.asm	/^ffff800000106eaa:	85 c0                	test   %eax,%eax$/;"	l
ffff800000106eac	kernel.asm	/^ffff800000106eac:	74 1d                	je     ffff800000106ecb <wait+0x154>$/;"	l
ffff800000106eae	kernel.asm	/^ffff800000106eae:	48 bf 00 bb 11 00 00 	movabs $0xffff80000011bb00,%rdi$/;"	l
ffff800000106eb5	kernel.asm	/^ffff800000106eb5:	80 ff ff $/;"	l
ffff800000106eb8	kernel.asm	/^ffff800000106eb8:	48 b8 6f 78 10 00 00 	movabs $0xffff80000010786f,%rax$/;"	l
ffff800000106ebf	kernel.asm	/^ffff800000106ebf:	80 ff ff $/;"	l
ffff800000106ec2	kernel.asm	/^ffff800000106ec2:	ff d0                	callq  *%rax$/;"	l
ffff800000106ec4	kernel.asm	/^ffff800000106ec4:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff800000106ec9	kernel.asm	/^ffff800000106ec9:	eb 29                	jmp    ffff800000106ef4 <wait+0x17d>$/;"	l
ffff800000106ecb	kernel.asm	/^ffff800000106ecb:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000106ed2	kernel.asm	/^ffff800000106ed2:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000106ed6	kernel.asm	/^ffff800000106ed6:	48 be 00 bb 11 00 00 	movabs $0xffff80000011bb00,%rsi$/;"	l
ffff800000106edd	kernel.asm	/^ffff800000106edd:	80 ff ff $/;"	l
ffff800000106ee0	kernel.asm	/^ffff800000106ee0:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000106ee3	kernel.asm	/^ffff800000106ee3:	48 b8 cc 71 10 00 00 	movabs $0xffff8000001071cc,%rax$/;"	l
ffff800000106eea	kernel.asm	/^ffff800000106eea:	80 ff ff $/;"	l
ffff800000106eed	kernel.asm	/^ffff800000106eed:	ff d0                	callq  *%rax$/;"	l
ffff800000106eef	kernel.asm	/^ffff800000106eef:	e9 a1 fe ff ff       	jmpq   ffff800000106d95 <wait+0x1e>$/;"	l
ffff800000106ef4	kernel.asm	/^ffff800000106ef4:	c9                   	leaveq $/;"	l
ffff800000106ef5	kernel.asm	/^ffff800000106ef5:	c3                   	retq   $/;"	l
ffff800000106ef6	kernel.asm	/^ffff800000106ef6 <scheduler>:$/;"	l
ffff800000106ef6	kernel.asm	/^ffff800000106ef6:	55                   	push   %rbp$/;"	l
ffff800000106ef7	kernel.asm	/^ffff800000106ef7:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000106efa	kernel.asm	/^ffff800000106efa:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff800000106efe	kernel.asm	/^ffff800000106efe:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)$/;"	l
ffff800000106f05	kernel.asm	/^ffff800000106f05:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)$/;"	l
ffff800000106f09	kernel.asm	/^ffff800000106f09:	48 b8 fc 64 10 00 00 	movabs $0xffff8000001064fc,%rax$/;"	l
ffff800000106f10	kernel.asm	/^ffff800000106f10:	80 ff ff $/;"	l
ffff800000106f13	kernel.asm	/^ffff800000106f13:	ff d0                	callq  *%rax$/;"	l
ffff800000106f15	kernel.asm	/^ffff800000106f15:	48 bf 00 bb 11 00 00 	movabs $0xffff80000011bb00,%rdi$/;"	l
ffff800000106f1c	kernel.asm	/^ffff800000106f1c:	80 ff ff $/;"	l
ffff800000106f1f	kernel.asm	/^ffff800000106f1f:	48 b8 d6 77 10 00 00 	movabs $0xffff8000001077d6,%rax$/;"	l
ffff800000106f26	kernel.asm	/^ffff800000106f26:	80 ff ff $/;"	l
ffff800000106f29	kernel.asm	/^ffff800000106f29:	ff d0                	callq  *%rax$/;"	l
ffff800000106f2b	kernel.asm	/^ffff800000106f2b:	48 b8 68 bb 11 00 00 	movabs $0xffff80000011bb68,%rax$/;"	l
ffff800000106f32	kernel.asm	/^ffff800000106f32:	80 ff ff $/;"	l
ffff800000106f35	kernel.asm	/^ffff800000106f35:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ffff800000106f39	kernel.asm	/^ffff800000106f39:	e9 88 00 00 00       	jmpq   ffff800000106fc6 <scheduler+0xd0>$/;"	l
ffff800000106f3e	kernel.asm	/^ffff800000106f3e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000106f42	kernel.asm	/^ffff800000106f42:	8b 40 18             	mov    0x18(%rax),%eax$/;"	l
ffff800000106f45	kernel.asm	/^ffff800000106f45:	83 f8 03             	cmp    $0x3,%eax$/;"	l
ffff800000106f48	kernel.asm	/^ffff800000106f48:	75 73                	jne    ffff800000106fbd <scheduler+0xc7>$/;"	l
ffff800000106f4a	kernel.asm	/^ffff800000106f4a:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000106f51	kernel.asm	/^ffff800000106f51:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
ffff800000106f55	kernel.asm	/^ffff800000106f55:	64 48 89 10          	mov    %rdx,%fs:(%rax)$/;"	l
ffff800000106f59	kernel.asm	/^ffff800000106f59:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000106f5d	kernel.asm	/^ffff800000106f5d:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000106f60	kernel.asm	/^ffff800000106f60:	48 b8 02 b8 10 00 00 	movabs $0xffff80000010b802,%rax$/;"	l
ffff800000106f67	kernel.asm	/^ffff800000106f67:	80 ff ff $/;"	l
ffff800000106f6a	kernel.asm	/^ffff800000106f6a:	ff d0                	callq  *%rax$/;"	l
ffff800000106f6c	kernel.asm	/^ffff800000106f6c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000106f70	kernel.asm	/^ffff800000106f70:	c7 40 18 04 00 00 00 	movl   $0x4,0x18(%rax)$/;"	l
ffff800000106f77	kernel.asm	/^ffff800000106f77:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000106f7b	kernel.asm	/^ffff800000106f7b:	48 8b 40 30          	mov    0x30(%rax),%rax$/;"	l
ffff800000106f7f	kernel.asm	/^ffff800000106f7f:	48 c7 c2 f0 ff ff ff 	mov    $0xfffffffffffffff0,%rdx$/;"	l
ffff800000106f86	kernel.asm	/^ffff800000106f86:	64 48 8b 12          	mov    %fs:(%rdx),%rdx$/;"	l
ffff800000106f8a	kernel.asm	/^ffff800000106f8a:	48 83 c2 08          	add    $0x8,%rdx$/;"	l
ffff800000106f8e	kernel.asm	/^ffff800000106f8e:	48 89 c6             	mov    %rax,%rsi$/;"	l
ffff800000106f91	kernel.asm	/^ffff800000106f91:	48 89 d7             	mov    %rdx,%rdi$/;"	l
ffff800000106f94	kernel.asm	/^ffff800000106f94:	48 b8 b6 7e 10 00 00 	movabs $0xffff800000107eb6,%rax$/;"	l
ffff800000106f9b	kernel.asm	/^ffff800000106f9b:	80 ff ff $/;"	l
ffff800000106f9e	kernel.asm	/^ffff800000106f9e:	ff d0                	callq  *%rax$/;"	l
ffff800000106fa0	kernel.asm	/^ffff800000106fa0:	48 b8 d0 b7 10 00 00 	movabs $0xffff80000010b7d0,%rax$/;"	l
ffff800000106fa7	kernel.asm	/^ffff800000106fa7:	80 ff ff $/;"	l
ffff800000106faa	kernel.asm	/^ffff800000106faa:	ff d0                	callq  *%rax$/;"	l
ffff800000106fac	kernel.asm	/^ffff800000106fac:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000106fb3	kernel.asm	/^ffff800000106fb3:	64 48 c7 00 00 00 00 	movq   $0x0,%fs:(%rax)$/;"	l
ffff800000106fba	kernel.asm	/^ffff800000106fba:	00 $/;"	l
ffff800000106fbb	kernel.asm	/^ffff800000106fbb:	eb 01                	jmp    ffff800000106fbe <scheduler+0xc8>$/;"	l
ffff800000106fbd	kernel.asm	/^ffff800000106fbd:	90                   	nop$/;"	l
ffff800000106fbe	kernel.asm	/^ffff800000106fbe:	48 81 45 f0 f0 00 00 	addq   $0xf0,-0x10(%rbp)$/;"	l
ffff800000106fc5	kernel.asm	/^ffff800000106fc5:	00 $/;"	l
ffff800000106fc6	kernel.asm	/^ffff800000106fc6:	48 b8 68 f7 11 00 00 	movabs $0xffff80000011f768,%rax$/;"	l
ffff800000106fcd	kernel.asm	/^ffff800000106fcd:	80 ff ff $/;"	l
ffff800000106fd0	kernel.asm	/^ffff800000106fd0:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)$/;"	l
ffff800000106fd4	kernel.asm	/^ffff800000106fd4:	0f 82 64 ff ff ff    	jb     ffff800000106f3e <scheduler+0x48>$/;"	l
ffff800000106fda	kernel.asm	/^ffff800000106fda:	48 bf 00 bb 11 00 00 	movabs $0xffff80000011bb00,%rdi$/;"	l
ffff800000106fe1	kernel.asm	/^ffff800000106fe1:	80 ff ff $/;"	l
ffff800000106fe4	kernel.asm	/^ffff800000106fe4:	48 b8 6f 78 10 00 00 	movabs $0xffff80000010786f,%rax$/;"	l
ffff800000106feb	kernel.asm	/^ffff800000106feb:	80 ff ff $/;"	l
ffff800000106fee	kernel.asm	/^ffff800000106fee:	ff d0                	callq  *%rax$/;"	l
ffff800000106ff0	kernel.asm	/^ffff800000106ff0:	e9 10 ff ff ff       	jmpq   ffff800000106f05 <scheduler+0xf>$/;"	l
ffff800000106ff5	kernel.asm	/^ffff800000106ff5 <sched>:$/;"	l
ffff800000106ff5	kernel.asm	/^ffff800000106ff5:	55                   	push   %rbp$/;"	l
ffff800000106ff6	kernel.asm	/^ffff800000106ff6:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000106ff9	kernel.asm	/^ffff800000106ff9:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff800000106ffd	kernel.asm	/^ffff800000106ffd:	48 bf 00 bb 11 00 00 	movabs $0xffff80000011bb00,%rdi$/;"	l
ffff800000107004	kernel.asm	/^ffff800000107004:	80 ff ff $/;"	l
ffff800000107007	kernel.asm	/^ffff800000107007:	48 b8 ad 79 10 00 00 	movabs $0xffff8000001079ad,%rax$/;"	l
ffff80000010700e	kernel.asm	/^ffff80000010700e:	80 ff ff $/;"	l
ffff800000107011	kernel.asm	/^ffff800000107011:	ff d0                	callq  *%rax$/;"	l
ffff800000107013	kernel.asm	/^ffff800000107013:	85 c0                	test   %eax,%eax$/;"	l
ffff800000107015	kernel.asm	/^ffff800000107015:	75 16                	jne    ffff80000010702d <sched+0x38>$/;"	l
ffff800000107017	kernel.asm	/^ffff800000107017:	48 bf 63 d8 10 00 00 	movabs $0xffff80000010d863,%rdi$/;"	l
ffff80000010701e	kernel.asm	/^ffff80000010701e:	80 ff ff $/;"	l
ffff800000107021	kernel.asm	/^ffff800000107021:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff800000107028	kernel.asm	/^ffff800000107028:	80 ff ff $/;"	l
ffff80000010702b	kernel.asm	/^ffff80000010702b:	ff d0                	callq  *%rax$/;"	l
ffff80000010702d	kernel.asm	/^ffff80000010702d:	48 c7 c0 f0 ff ff ff 	mov    $0xfffffffffffffff0,%rax$/;"	l
ffff800000107034	kernel.asm	/^ffff800000107034:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000107038	kernel.asm	/^ffff800000107038:	8b 80 e4 00 00 00    	mov    0xe4(%rax),%eax$/;"	l
ffff80000010703e	kernel.asm	/^ffff80000010703e:	83 f8 01             	cmp    $0x1,%eax$/;"	l
ffff800000107041	kernel.asm	/^ffff800000107041:	74 16                	je     ffff800000107059 <sched+0x64>$/;"	l
ffff800000107043	kernel.asm	/^ffff800000107043:	48 bf 75 d8 10 00 00 	movabs $0xffff80000010d875,%rdi$/;"	l
ffff80000010704a	kernel.asm	/^ffff80000010704a:	80 ff ff $/;"	l
ffff80000010704d	kernel.asm	/^ffff80000010704d:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff800000107054	kernel.asm	/^ffff800000107054:	80 ff ff $/;"	l
ffff800000107057	kernel.asm	/^ffff800000107057:	ff d0                	callq  *%rax$/;"	l
ffff800000107059	kernel.asm	/^ffff800000107059:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000107060	kernel.asm	/^ffff800000107060:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000107064	kernel.asm	/^ffff800000107064:	8b 40 18             	mov    0x18(%rax),%eax$/;"	l
ffff800000107067	kernel.asm	/^ffff800000107067:	83 f8 04             	cmp    $0x4,%eax$/;"	l
ffff80000010706a	kernel.asm	/^ffff80000010706a:	75 16                	jne    ffff800000107082 <sched+0x8d>$/;"	l
ffff80000010706c	kernel.asm	/^ffff80000010706c:	48 bf 81 d8 10 00 00 	movabs $0xffff80000010d881,%rdi$/;"	l
ffff800000107073	kernel.asm	/^ffff800000107073:	80 ff ff $/;"	l
ffff800000107076	kernel.asm	/^ffff800000107076:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff80000010707d	kernel.asm	/^ffff80000010707d:	80 ff ff $/;"	l
ffff800000107080	kernel.asm	/^ffff800000107080:	ff d0                	callq  *%rax$/;"	l
ffff800000107082	kernel.asm	/^ffff800000107082:	48 b8 e8 64 10 00 00 	movabs $0xffff8000001064e8,%rax$/;"	l
ffff800000107089	kernel.asm	/^ffff800000107089:	80 ff ff $/;"	l
ffff80000010708c	kernel.asm	/^ffff80000010708c:	ff d0                	callq  *%rax$/;"	l
ffff80000010708e	kernel.asm	/^ffff80000010708e:	25 00 02 00 00       	and    $0x200,%eax$/;"	l
ffff800000107093	kernel.asm	/^ffff800000107093:	48 85 c0             	test   %rax,%rax$/;"	l
ffff800000107096	kernel.asm	/^ffff800000107096:	74 16                	je     ffff8000001070ae <sched+0xb9>$/;"	l
ffff800000107098	kernel.asm	/^ffff800000107098:	48 bf 8f d8 10 00 00 	movabs $0xffff80000010d88f,%rdi$/;"	l
ffff80000010709f	kernel.asm	/^ffff80000010709f:	80 ff ff $/;"	l
ffff8000001070a2	kernel.asm	/^ffff8000001070a2:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff8000001070a9	kernel.asm	/^ffff8000001070a9:	80 ff ff $/;"	l
ffff8000001070ac	kernel.asm	/^ffff8000001070ac:	ff d0                	callq  *%rax$/;"	l
ffff8000001070ae	kernel.asm	/^ffff8000001070ae:	48 c7 c0 f0 ff ff ff 	mov    $0xfffffffffffffff0,%rax$/;"	l
ffff8000001070b5	kernel.asm	/^ffff8000001070b5:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff8000001070b9	kernel.asm	/^ffff8000001070b9:	8b 80 e8 00 00 00    	mov    0xe8(%rax),%eax$/;"	l
ffff8000001070bf	kernel.asm	/^ffff8000001070bf:	89 45 fc             	mov    %eax,-0x4(%rbp)$/;"	l
ffff8000001070c2	kernel.asm	/^ffff8000001070c2:	48 c7 c0 f0 ff ff ff 	mov    $0xfffffffffffffff0,%rax$/;"	l
ffff8000001070c9	kernel.asm	/^ffff8000001070c9:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff8000001070cd	kernel.asm	/^ffff8000001070cd:	48 8b 40 08          	mov    0x8(%rax),%rax$/;"	l
ffff8000001070d1	kernel.asm	/^ffff8000001070d1:	48 c7 c2 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rdx$/;"	l
ffff8000001070d8	kernel.asm	/^ffff8000001070d8:	64 48 8b 12          	mov    %fs:(%rdx),%rdx$/;"	l
ffff8000001070dc	kernel.asm	/^ffff8000001070dc:	48 83 c2 30          	add    $0x30,%rdx$/;"	l
ffff8000001070e0	kernel.asm	/^ffff8000001070e0:	48 89 c6             	mov    %rax,%rsi$/;"	l
ffff8000001070e3	kernel.asm	/^ffff8000001070e3:	48 89 d7             	mov    %rdx,%rdi$/;"	l
ffff8000001070e6	kernel.asm	/^ffff8000001070e6:	48 b8 b6 7e 10 00 00 	movabs $0xffff800000107eb6,%rax$/;"	l
ffff8000001070ed	kernel.asm	/^ffff8000001070ed:	80 ff ff $/;"	l
ffff8000001070f0	kernel.asm	/^ffff8000001070f0:	ff d0                	callq  *%rax$/;"	l
ffff8000001070f2	kernel.asm	/^ffff8000001070f2:	48 c7 c0 f0 ff ff ff 	mov    $0xfffffffffffffff0,%rax$/;"	l
ffff8000001070f9	kernel.asm	/^ffff8000001070f9:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff8000001070fd	kernel.asm	/^ffff8000001070fd:	8b 55 fc             	mov    -0x4(%rbp),%edx$/;"	l
ffff800000107100	kernel.asm	/^ffff800000107100:	89 90 e8 00 00 00    	mov    %edx,0xe8(%rax)$/;"	l
ffff800000107106	kernel.asm	/^ffff800000107106:	90                   	nop$/;"	l
ffff800000107107	kernel.asm	/^ffff800000107107:	c9                   	leaveq $/;"	l
ffff800000107108	kernel.asm	/^ffff800000107108:	c3                   	retq   $/;"	l
ffff800000107109	kernel.asm	/^ffff800000107109 <yield>:$/;"	l
ffff800000107109	kernel.asm	/^ffff800000107109:	55                   	push   %rbp$/;"	l
ffff80000010710a	kernel.asm	/^ffff80000010710a:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010710d	kernel.asm	/^ffff80000010710d:	48 bf 00 bb 11 00 00 	movabs $0xffff80000011bb00,%rdi$/;"	l
ffff800000107114	kernel.asm	/^ffff800000107114:	80 ff ff $/;"	l
ffff800000107117	kernel.asm	/^ffff800000107117:	48 b8 d6 77 10 00 00 	movabs $0xffff8000001077d6,%rax$/;"	l
ffff80000010711e	kernel.asm	/^ffff80000010711e:	80 ff ff $/;"	l
ffff800000107121	kernel.asm	/^ffff800000107121:	ff d0                	callq  *%rax$/;"	l
ffff800000107123	kernel.asm	/^ffff800000107123:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff80000010712a	kernel.asm	/^ffff80000010712a:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff80000010712e	kernel.asm	/^ffff80000010712e:	c7 40 18 03 00 00 00 	movl   $0x3,0x18(%rax)$/;"	l
ffff800000107135	kernel.asm	/^ffff800000107135:	48 b8 f5 6f 10 00 00 	movabs $0xffff800000106ff5,%rax$/;"	l
ffff80000010713c	kernel.asm	/^ffff80000010713c:	80 ff ff $/;"	l
ffff80000010713f	kernel.asm	/^ffff80000010713f:	ff d0                	callq  *%rax$/;"	l
ffff800000107141	kernel.asm	/^ffff800000107141:	48 bf 00 bb 11 00 00 	movabs $0xffff80000011bb00,%rdi$/;"	l
ffff800000107148	kernel.asm	/^ffff800000107148:	80 ff ff $/;"	l
ffff80000010714b	kernel.asm	/^ffff80000010714b:	48 b8 6f 78 10 00 00 	movabs $0xffff80000010786f,%rax$/;"	l
ffff800000107152	kernel.asm	/^ffff800000107152:	80 ff ff $/;"	l
ffff800000107155	kernel.asm	/^ffff800000107155:	ff d0                	callq  *%rax$/;"	l
ffff800000107157	kernel.asm	/^ffff800000107157:	90                   	nop$/;"	l
ffff800000107158	kernel.asm	/^ffff800000107158:	5d                   	pop    %rbp$/;"	l
ffff800000107159	kernel.asm	/^ffff800000107159:	c3                   	retq   $/;"	l
ffff80000010715a	kernel.asm	/^ffff80000010715a <forkret>:$/;"	l
ffff80000010715a	kernel.asm	/^ffff80000010715a:	55                   	push   %rbp$/;"	l
ffff80000010715b	kernel.asm	/^ffff80000010715b:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010715e	kernel.asm	/^ffff80000010715e:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff800000107162	kernel.asm	/^ffff800000107162:	48 bf 00 bb 11 00 00 	movabs $0xffff80000011bb00,%rdi$/;"	l
ffff800000107169	kernel.asm	/^ffff800000107169:	80 ff ff $/;"	l
ffff80000010716c	kernel.asm	/^ffff80000010716c:	48 b8 6f 78 10 00 00 	movabs $0xffff80000010786f,%rax$/;"	l
ffff800000107173	kernel.asm	/^ffff800000107173:	80 ff ff $/;"	l
ffff800000107176	kernel.asm	/^ffff800000107176:	ff d0                	callq  *%rax$/;"	l
ffff800000107178	kernel.asm	/^ffff800000107178:	48 b8 64 e5 10 00 00 	movabs $0xffff80000010e564,%rax$/;"	l
ffff80000010717f	kernel.asm	/^ffff80000010717f:	80 ff ff $/;"	l
ffff800000107182	kernel.asm	/^ffff800000107182:	8b 00                	mov    (%rax),%eax$/;"	l
ffff800000107184	kernel.asm	/^ffff800000107184:	85 c0                	test   %eax,%eax$/;"	l
ffff800000107186	kernel.asm	/^ffff800000107186:	74 32                	je     ffff8000001071ba <forkret+0x60>$/;"	l
ffff800000107188	kernel.asm	/^ffff800000107188:	48 b8 64 e5 10 00 00 	movabs $0xffff80000010e564,%rax$/;"	l
ffff80000010718f	kernel.asm	/^ffff80000010718f:	80 ff ff $/;"	l
ffff800000107192	kernel.asm	/^ffff800000107192:	c7 00 00 00 00 00    	movl   $0x0,(%rax)$/;"	l
ffff800000107198	kernel.asm	/^ffff800000107198:	bf 01 00 00 00       	mov    $0x1,%edi$/;"	l
ffff80000010719d	kernel.asm	/^ffff80000010719d:	48 b8 53 28 10 00 00 	movabs $0xffff800000102853,%rax$/;"	l
ffff8000001071a4	kernel.asm	/^ffff8000001071a4:	80 ff ff $/;"	l
ffff8000001071a7	kernel.asm	/^ffff8000001071a7:	ff d0                	callq  *%rax$/;"	l
ffff8000001071a9	kernel.asm	/^ffff8000001071a9:	bf 01 00 00 00       	mov    $0x1,%edi$/;"	l
ffff8000001071ae	kernel.asm	/^ffff8000001071ae:	48 b8 8a 4f 10 00 00 	movabs $0xffff800000104f8a,%rax$/;"	l
ffff8000001071b5	kernel.asm	/^ffff8000001071b5:	80 ff ff $/;"	l
ffff8000001071b8	kernel.asm	/^ffff8000001071b8:	ff d0                	callq  *%rax$/;"	l
ffff8000001071ba	kernel.asm	/^ffff8000001071ba:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff8000001071c1	kernel.asm	/^ffff8000001071c1:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff8000001071c5	kernel.asm	/^ffff8000001071c5:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff8000001071c9	kernel.asm	/^ffff8000001071c9:	90                   	nop$/;"	l
ffff8000001071ca	kernel.asm	/^ffff8000001071ca:	c9                   	leaveq $/;"	l
ffff8000001071cb	kernel.asm	/^ffff8000001071cb:	c3                   	retq   $/;"	l
ffff8000001071cc	kernel.asm	/^ffff8000001071cc <sleep>:$/;"	l
ffff8000001071cc	kernel.asm	/^ffff8000001071cc:	55                   	push   %rbp$/;"	l
ffff8000001071cd	kernel.asm	/^ffff8000001071cd:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff8000001071d0	kernel.asm	/^ffff8000001071d0:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff8000001071d4	kernel.asm	/^ffff8000001071d4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)$/;"	l
ffff8000001071d8	kernel.asm	/^ffff8000001071d8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)$/;"	l
ffff8000001071dc	kernel.asm	/^ffff8000001071dc:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff8000001071e3	kernel.asm	/^ffff8000001071e3:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff8000001071e7	kernel.asm	/^ffff8000001071e7:	48 85 c0             	test   %rax,%rax$/;"	l
ffff8000001071ea	kernel.asm	/^ffff8000001071ea:	75 16                	jne    ffff800000107202 <sleep+0x36>$/;"	l
ffff8000001071ec	kernel.asm	/^ffff8000001071ec:	48 bf a3 d8 10 00 00 	movabs $0xffff80000010d8a3,%rdi$/;"	l
ffff8000001071f3	kernel.asm	/^ffff8000001071f3:	80 ff ff $/;"	l
ffff8000001071f6	kernel.asm	/^ffff8000001071f6:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff8000001071fd	kernel.asm	/^ffff8000001071fd:	80 ff ff $/;"	l
ffff800000107200	kernel.asm	/^ffff800000107200:	ff d0                	callq  *%rax$/;"	l
ffff800000107202	kernel.asm	/^ffff800000107202:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)$/;"	l
ffff800000107207	kernel.asm	/^ffff800000107207:	75 16                	jne    ffff80000010721f <sleep+0x53>$/;"	l
ffff800000107209	kernel.asm	/^ffff800000107209:	48 bf a9 d8 10 00 00 	movabs $0xffff80000010d8a9,%rdi$/;"	l
ffff800000107210	kernel.asm	/^ffff800000107210:	80 ff ff $/;"	l
ffff800000107213	kernel.asm	/^ffff800000107213:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff80000010721a	kernel.asm	/^ffff80000010721a:	80 ff ff $/;"	l
ffff80000010721d	kernel.asm	/^ffff80000010721d:	ff d0                	callq  *%rax$/;"	l
ffff80000010721f	kernel.asm	/^ffff80000010721f:	48 b8 00 bb 11 00 00 	movabs $0xffff80000011bb00,%rax$/;"	l
ffff800000107226	kernel.asm	/^ffff800000107226:	80 ff ff $/;"	l
ffff800000107229	kernel.asm	/^ffff800000107229:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)$/;"	l
ffff80000010722d	kernel.asm	/^ffff80000010722d:	74 29                	je     ffff800000107258 <sleep+0x8c>$/;"	l
ffff80000010722f	kernel.asm	/^ffff80000010722f:	48 bf 00 bb 11 00 00 	movabs $0xffff80000011bb00,%rdi$/;"	l
ffff800000107236	kernel.asm	/^ffff800000107236:	80 ff ff $/;"	l
ffff800000107239	kernel.asm	/^ffff800000107239:	48 b8 d6 77 10 00 00 	movabs $0xffff8000001077d6,%rax$/;"	l
ffff800000107240	kernel.asm	/^ffff800000107240:	80 ff ff $/;"	l
ffff800000107243	kernel.asm	/^ffff800000107243:	ff d0                	callq  *%rax$/;"	l
ffff800000107245	kernel.asm	/^ffff800000107245:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000107249	kernel.asm	/^ffff800000107249:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010724c	kernel.asm	/^ffff80000010724c:	48 b8 6f 78 10 00 00 	movabs $0xffff80000010786f,%rax$/;"	l
ffff800000107253	kernel.asm	/^ffff800000107253:	80 ff ff $/;"	l
ffff800000107256	kernel.asm	/^ffff800000107256:	ff d0                	callq  *%rax$/;"	l
ffff800000107258	kernel.asm	/^ffff800000107258:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff80000010725f	kernel.asm	/^ffff80000010725f:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000107263	kernel.asm	/^ffff800000107263:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx$/;"	l
ffff800000107267	kernel.asm	/^ffff800000107267:	48 89 50 38          	mov    %rdx,0x38(%rax)$/;"	l
ffff80000010726b	kernel.asm	/^ffff80000010726b:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000107272	kernel.asm	/^ffff800000107272:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000107276	kernel.asm	/^ffff800000107276:	c7 40 18 02 00 00 00 	movl   $0x2,0x18(%rax)$/;"	l
ffff80000010727d	kernel.asm	/^ffff80000010727d:	48 b8 f5 6f 10 00 00 	movabs $0xffff800000106ff5,%rax$/;"	l
ffff800000107284	kernel.asm	/^ffff800000107284:	80 ff ff $/;"	l
ffff800000107287	kernel.asm	/^ffff800000107287:	ff d0                	callq  *%rax$/;"	l
ffff800000107289	kernel.asm	/^ffff800000107289:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000107290	kernel.asm	/^ffff800000107290:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000107294	kernel.asm	/^ffff800000107294:	48 c7 40 38 00 00 00 	movq   $0x0,0x38(%rax)$/;"	l
ffff80000010729b	kernel.asm	/^ffff80000010729b:	00 $/;"	l
ffff80000010729c	kernel.asm	/^ffff80000010729c:	48 b8 00 bb 11 00 00 	movabs $0xffff80000011bb00,%rax$/;"	l
ffff8000001072a3	kernel.asm	/^ffff8000001072a3:	80 ff ff $/;"	l
ffff8000001072a6	kernel.asm	/^ffff8000001072a6:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)$/;"	l
ffff8000001072aa	kernel.asm	/^ffff8000001072aa:	74 29                	je     ffff8000001072d5 <sleep+0x109>$/;"	l
ffff8000001072ac	kernel.asm	/^ffff8000001072ac:	48 bf 00 bb 11 00 00 	movabs $0xffff80000011bb00,%rdi$/;"	l
ffff8000001072b3	kernel.asm	/^ffff8000001072b3:	80 ff ff $/;"	l
ffff8000001072b6	kernel.asm	/^ffff8000001072b6:	48 b8 6f 78 10 00 00 	movabs $0xffff80000010786f,%rax$/;"	l
ffff8000001072bd	kernel.asm	/^ffff8000001072bd:	80 ff ff $/;"	l
ffff8000001072c0	kernel.asm	/^ffff8000001072c0:	ff d0                	callq  *%rax$/;"	l
ffff8000001072c2	kernel.asm	/^ffff8000001072c2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff8000001072c6	kernel.asm	/^ffff8000001072c6:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001072c9	kernel.asm	/^ffff8000001072c9:	48 b8 d6 77 10 00 00 	movabs $0xffff8000001077d6,%rax$/;"	l
ffff8000001072d0	kernel.asm	/^ffff8000001072d0:	80 ff ff $/;"	l
ffff8000001072d3	kernel.asm	/^ffff8000001072d3:	ff d0                	callq  *%rax$/;"	l
ffff8000001072d5	kernel.asm	/^ffff8000001072d5:	90                   	nop$/;"	l
ffff8000001072d6	kernel.asm	/^ffff8000001072d6:	c9                   	leaveq $/;"	l
ffff8000001072d7	kernel.asm	/^ffff8000001072d7:	c3                   	retq   $/;"	l
ffff8000001072d8	kernel.asm	/^ffff8000001072d8 <wakeup1>:$/;"	l
ffff8000001072d8	kernel.asm	/^ffff8000001072d8:	55                   	push   %rbp$/;"	l
ffff8000001072d9	kernel.asm	/^ffff8000001072d9:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff8000001072dc	kernel.asm	/^ffff8000001072dc:	48 83 ec 18          	sub    $0x18,%rsp$/;"	l
ffff8000001072e0	kernel.asm	/^ffff8000001072e0:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
ffff8000001072e4	kernel.asm	/^ffff8000001072e4:	48 b8 68 bb 11 00 00 	movabs $0xffff80000011bb68,%rax$/;"	l
ffff8000001072eb	kernel.asm	/^ffff8000001072eb:	80 ff ff $/;"	l
ffff8000001072ee	kernel.asm	/^ffff8000001072ee:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff8000001072f2	kernel.asm	/^ffff8000001072f2:	eb 2d                	jmp    ffff800000107321 <wakeup1+0x49>$/;"	l
ffff8000001072f4	kernel.asm	/^ffff8000001072f4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001072f8	kernel.asm	/^ffff8000001072f8:	8b 40 18             	mov    0x18(%rax),%eax$/;"	l
ffff8000001072fb	kernel.asm	/^ffff8000001072fb:	83 f8 02             	cmp    $0x2,%eax$/;"	l
ffff8000001072fe	kernel.asm	/^ffff8000001072fe:	75 19                	jne    ffff800000107319 <wakeup1+0x41>$/;"	l
ffff800000107300	kernel.asm	/^ffff800000107300:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000107304	kernel.asm	/^ffff800000107304:	48 8b 40 38          	mov    0x38(%rax),%rax$/;"	l
ffff800000107308	kernel.asm	/^ffff800000107308:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax$/;"	l
ffff80000010730c	kernel.asm	/^ffff80000010730c:	75 0b                	jne    ffff800000107319 <wakeup1+0x41>$/;"	l
ffff80000010730e	kernel.asm	/^ffff80000010730e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000107312	kernel.asm	/^ffff800000107312:	c7 40 18 03 00 00 00 	movl   $0x3,0x18(%rax)$/;"	l
ffff800000107319	kernel.asm	/^ffff800000107319:	48 81 45 f8 f0 00 00 	addq   $0xf0,-0x8(%rbp)$/;"	l
ffff800000107320	kernel.asm	/^ffff800000107320:	00 $/;"	l
ffff800000107321	kernel.asm	/^ffff800000107321:	48 b8 68 f7 11 00 00 	movabs $0xffff80000011f768,%rax$/;"	l
ffff800000107328	kernel.asm	/^ffff800000107328:	80 ff ff $/;"	l
ffff80000010732b	kernel.asm	/^ffff80000010732b:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)$/;"	l
ffff80000010732f	kernel.asm	/^ffff80000010732f:	72 c3                	jb     ffff8000001072f4 <wakeup1+0x1c>$/;"	l
ffff800000107331	kernel.asm	/^ffff800000107331:	90                   	nop$/;"	l
ffff800000107332	kernel.asm	/^ffff800000107332:	c9                   	leaveq $/;"	l
ffff800000107333	kernel.asm	/^ffff800000107333:	c3                   	retq   $/;"	l
ffff800000107334	kernel.asm	/^ffff800000107334 <wakeup>:$/;"	l
ffff800000107334	kernel.asm	/^ffff800000107334:	55                   	push   %rbp$/;"	l
ffff800000107335	kernel.asm	/^ffff800000107335:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000107338	kernel.asm	/^ffff800000107338:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff80000010733c	kernel.asm	/^ffff80000010733c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)$/;"	l
ffff800000107340	kernel.asm	/^ffff800000107340:	48 bf 00 bb 11 00 00 	movabs $0xffff80000011bb00,%rdi$/;"	l
ffff800000107347	kernel.asm	/^ffff800000107347:	80 ff ff $/;"	l
ffff80000010734a	kernel.asm	/^ffff80000010734a:	48 b8 d6 77 10 00 00 	movabs $0xffff8000001077d6,%rax$/;"	l
ffff800000107351	kernel.asm	/^ffff800000107351:	80 ff ff $/;"	l
ffff800000107354	kernel.asm	/^ffff800000107354:	ff d0                	callq  *%rax$/;"	l
ffff800000107356	kernel.asm	/^ffff800000107356:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010735a	kernel.asm	/^ffff80000010735a:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010735d	kernel.asm	/^ffff80000010735d:	48 b8 d8 72 10 00 00 	movabs $0xffff8000001072d8,%rax$/;"	l
ffff800000107364	kernel.asm	/^ffff800000107364:	80 ff ff $/;"	l
ffff800000107367	kernel.asm	/^ffff800000107367:	ff d0                	callq  *%rax$/;"	l
ffff800000107369	kernel.asm	/^ffff800000107369:	48 bf 00 bb 11 00 00 	movabs $0xffff80000011bb00,%rdi$/;"	l
ffff800000107370	kernel.asm	/^ffff800000107370:	80 ff ff $/;"	l
ffff800000107373	kernel.asm	/^ffff800000107373:	48 b8 6f 78 10 00 00 	movabs $0xffff80000010786f,%rax$/;"	l
ffff80000010737a	kernel.asm	/^ffff80000010737a:	80 ff ff $/;"	l
ffff80000010737d	kernel.asm	/^ffff80000010737d:	ff d0                	callq  *%rax$/;"	l
ffff80000010737f	kernel.asm	/^ffff80000010737f:	90                   	nop$/;"	l
ffff800000107380	kernel.asm	/^ffff800000107380:	c9                   	leaveq $/;"	l
ffff800000107381	kernel.asm	/^ffff800000107381:	c3                   	retq   $/;"	l
ffff800000107382	kernel.asm	/^ffff800000107382 <kill>:$/;"	l
ffff800000107382	kernel.asm	/^ffff800000107382:	55                   	push   %rbp$/;"	l
ffff800000107383	kernel.asm	/^ffff800000107383:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000107386	kernel.asm	/^ffff800000107386:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ffff80000010738a	kernel.asm	/^ffff80000010738a:	89 7d ec             	mov    %edi,-0x14(%rbp)$/;"	l
ffff80000010738d	kernel.asm	/^ffff80000010738d:	48 bf 00 bb 11 00 00 	movabs $0xffff80000011bb00,%rdi$/;"	l
ffff800000107394	kernel.asm	/^ffff800000107394:	80 ff ff $/;"	l
ffff800000107397	kernel.asm	/^ffff800000107397:	48 b8 d6 77 10 00 00 	movabs $0xffff8000001077d6,%rax$/;"	l
ffff80000010739e	kernel.asm	/^ffff80000010739e:	80 ff ff $/;"	l
ffff8000001073a1	kernel.asm	/^ffff8000001073a1:	ff d0                	callq  *%rax$/;"	l
ffff8000001073a3	kernel.asm	/^ffff8000001073a3:	48 b8 68 bb 11 00 00 	movabs $0xffff80000011bb68,%rax$/;"	l
ffff8000001073aa	kernel.asm	/^ffff8000001073aa:	80 ff ff $/;"	l
ffff8000001073ad	kernel.asm	/^ffff8000001073ad:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff8000001073b1	kernel.asm	/^ffff8000001073b1:	eb 53                	jmp    ffff800000107406 <kill+0x84>$/;"	l
ffff8000001073b3	kernel.asm	/^ffff8000001073b3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001073b7	kernel.asm	/^ffff8000001073b7:	8b 40 1c             	mov    0x1c(%rax),%eax$/;"	l
ffff8000001073ba	kernel.asm	/^ffff8000001073ba:	3b 45 ec             	cmp    -0x14(%rbp),%eax$/;"	l
ffff8000001073bd	kernel.asm	/^ffff8000001073bd:	75 3f                	jne    ffff8000001073fe <kill+0x7c>$/;"	l
ffff8000001073bf	kernel.asm	/^ffff8000001073bf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001073c3	kernel.asm	/^ffff8000001073c3:	c7 40 40 01 00 00 00 	movl   $0x1,0x40(%rax)$/;"	l
ffff8000001073ca	kernel.asm	/^ffff8000001073ca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001073ce	kernel.asm	/^ffff8000001073ce:	8b 40 18             	mov    0x18(%rax),%eax$/;"	l
ffff8000001073d1	kernel.asm	/^ffff8000001073d1:	83 f8 02             	cmp    $0x2,%eax$/;"	l
ffff8000001073d4	kernel.asm	/^ffff8000001073d4:	75 0b                	jne    ffff8000001073e1 <kill+0x5f>$/;"	l
ffff8000001073d6	kernel.asm	/^ffff8000001073d6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001073da	kernel.asm	/^ffff8000001073da:	c7 40 18 03 00 00 00 	movl   $0x3,0x18(%rax)$/;"	l
ffff8000001073e1	kernel.asm	/^ffff8000001073e1:	48 bf 00 bb 11 00 00 	movabs $0xffff80000011bb00,%rdi$/;"	l
ffff8000001073e8	kernel.asm	/^ffff8000001073e8:	80 ff ff $/;"	l
ffff8000001073eb	kernel.asm	/^ffff8000001073eb:	48 b8 6f 78 10 00 00 	movabs $0xffff80000010786f,%rax$/;"	l
ffff8000001073f2	kernel.asm	/^ffff8000001073f2:	80 ff ff $/;"	l
ffff8000001073f5	kernel.asm	/^ffff8000001073f5:	ff d0                	callq  *%rax$/;"	l
ffff8000001073f7	kernel.asm	/^ffff8000001073f7:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff8000001073fc	kernel.asm	/^ffff8000001073fc:	eb 33                	jmp    ffff800000107431 <kill+0xaf>$/;"	l
ffff8000001073fe	kernel.asm	/^ffff8000001073fe:	48 81 45 f8 f0 00 00 	addq   $0xf0,-0x8(%rbp)$/;"	l
ffff800000107405	kernel.asm	/^ffff800000107405:	00 $/;"	l
ffff800000107406	kernel.asm	/^ffff800000107406:	48 b8 68 f7 11 00 00 	movabs $0xffff80000011f768,%rax$/;"	l
ffff80000010740d	kernel.asm	/^ffff80000010740d:	80 ff ff $/;"	l
ffff800000107410	kernel.asm	/^ffff800000107410:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)$/;"	l
ffff800000107414	kernel.asm	/^ffff800000107414:	72 9d                	jb     ffff8000001073b3 <kill+0x31>$/;"	l
ffff800000107416	kernel.asm	/^ffff800000107416:	48 bf 00 bb 11 00 00 	movabs $0xffff80000011bb00,%rdi$/;"	l
ffff80000010741d	kernel.asm	/^ffff80000010741d:	80 ff ff $/;"	l
ffff800000107420	kernel.asm	/^ffff800000107420:	48 b8 6f 78 10 00 00 	movabs $0xffff80000010786f,%rax$/;"	l
ffff800000107427	kernel.asm	/^ffff800000107427:	80 ff ff $/;"	l
ffff80000010742a	kernel.asm	/^ffff80000010742a:	ff d0                	callq  *%rax$/;"	l
ffff80000010742c	kernel.asm	/^ffff80000010742c:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff800000107431	kernel.asm	/^ffff800000107431:	c9                   	leaveq $/;"	l
ffff800000107432	kernel.asm	/^ffff800000107432:	c3                   	retq   $/;"	l
ffff800000107433	kernel.asm	/^ffff800000107433 <procdump>:$/;"	l
ffff800000107433	kernel.asm	/^ffff800000107433:	55                   	push   %rbp$/;"	l
ffff800000107434	kernel.asm	/^ffff800000107434:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000107437	kernel.asm	/^ffff800000107437:	48 83 ec 70          	sub    $0x70,%rsp$/;"	l
ffff80000010743b	kernel.asm	/^ffff80000010743b:	48 b8 68 bb 11 00 00 	movabs $0xffff80000011bb68,%rax$/;"	l
ffff800000107442	kernel.asm	/^ffff800000107442:	80 ff ff $/;"	l
ffff800000107445	kernel.asm	/^ffff800000107445:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ffff800000107449	kernel.asm	/^ffff800000107449:	e9 3b 01 00 00       	jmpq   ffff800000107589 <procdump+0x156>$/;"	l
ffff80000010744e	kernel.asm	/^ffff80000010744e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000107452	kernel.asm	/^ffff800000107452:	8b 40 18             	mov    0x18(%rax),%eax$/;"	l
ffff800000107455	kernel.asm	/^ffff800000107455:	85 c0                	test   %eax,%eax$/;"	l
ffff800000107457	kernel.asm	/^ffff800000107457:	0f 84 23 01 00 00    	je     ffff800000107580 <procdump+0x14d>$/;"	l
ffff80000010745d	kernel.asm	/^ffff80000010745d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000107461	kernel.asm	/^ffff800000107461:	8b 40 18             	mov    0x18(%rax),%eax$/;"	l
ffff800000107464	kernel.asm	/^ffff800000107464:	83 f8 05             	cmp    $0x5,%eax$/;"	l
ffff800000107467	kernel.asm	/^ffff800000107467:	77 39                	ja     ffff8000001074a2 <procdump+0x6f>$/;"	l
ffff800000107469	kernel.asm	/^ffff800000107469:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff80000010746d	kernel.asm	/^ffff80000010746d:	8b 50 18             	mov    0x18(%rax),%edx$/;"	l
ffff800000107470	kernel.asm	/^ffff800000107470:	48 b8 80 e5 10 00 00 	movabs $0xffff80000010e580,%rax$/;"	l
ffff800000107477	kernel.asm	/^ffff800000107477:	80 ff ff $/;"	l
ffff80000010747a	kernel.asm	/^ffff80000010747a:	89 d2                	mov    %edx,%edx$/;"	l
ffff80000010747c	kernel.asm	/^ffff80000010747c:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax$/;"	l
ffff800000107480	kernel.asm	/^ffff800000107480:	48 85 c0             	test   %rax,%rax$/;"	l
ffff800000107483	kernel.asm	/^ffff800000107483:	74 1d                	je     ffff8000001074a2 <procdump+0x6f>$/;"	l
ffff800000107485	kernel.asm	/^ffff800000107485:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000107489	kernel.asm	/^ffff800000107489:	8b 50 18             	mov    0x18(%rax),%edx$/;"	l
ffff80000010748c	kernel.asm	/^ffff80000010748c:	48 b8 80 e5 10 00 00 	movabs $0xffff80000010e580,%rax$/;"	l
ffff800000107493	kernel.asm	/^ffff800000107493:	80 ff ff $/;"	l
ffff800000107496	kernel.asm	/^ffff800000107496:	89 d2                	mov    %edx,%edx$/;"	l
ffff800000107498	kernel.asm	/^ffff800000107498:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax$/;"	l
ffff80000010749c	kernel.asm	/^ffff80000010749c:	48 89 45 e8          	mov    %rax,-0x18(%rbp)$/;"	l
ffff8000001074a0	kernel.asm	/^ffff8000001074a0:	eb 0e                	jmp    ffff8000001074b0 <procdump+0x7d>$/;"	l
ffff8000001074a2	kernel.asm	/^ffff8000001074a2:	48 b8 ba d8 10 00 00 	movabs $0xffff80000010d8ba,%rax$/;"	l
ffff8000001074a9	kernel.asm	/^ffff8000001074a9:	80 ff ff $/;"	l
ffff8000001074ac	kernel.asm	/^ffff8000001074ac:	48 89 45 e8          	mov    %rax,-0x18(%rbp)$/;"	l
ffff8000001074b0	kernel.asm	/^ffff8000001074b0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff8000001074b4	kernel.asm	/^ffff8000001074b4:	48 8d 88 d0 00 00 00 	lea    0xd0(%rax),%rcx$/;"	l
ffff8000001074bb	kernel.asm	/^ffff8000001074bb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff8000001074bf	kernel.asm	/^ffff8000001074bf:	8b 40 1c             	mov    0x1c(%rax),%eax$/;"	l
ffff8000001074c2	kernel.asm	/^ffff8000001074c2:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx$/;"	l
ffff8000001074c6	kernel.asm	/^ffff8000001074c6:	89 c6                	mov    %eax,%esi$/;"	l
ffff8000001074c8	kernel.asm	/^ffff8000001074c8:	48 bf be d8 10 00 00 	movabs $0xffff80000010d8be,%rdi$/;"	l
ffff8000001074cf	kernel.asm	/^ffff8000001074cf:	80 ff ff $/;"	l
ffff8000001074d2	kernel.asm	/^ffff8000001074d2:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff8000001074d7	kernel.asm	/^ffff8000001074d7:	49 b8 ac 07 10 00 00 	movabs $0xffff8000001007ac,%r8$/;"	l
ffff8000001074de	kernel.asm	/^ffff8000001074de:	80 ff ff $/;"	l
ffff8000001074e1	kernel.asm	/^ffff8000001074e1:	41 ff d0             	callq  *%r8$/;"	l
ffff8000001074e4	kernel.asm	/^ffff8000001074e4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff8000001074e8	kernel.asm	/^ffff8000001074e8:	8b 40 18             	mov    0x18(%rax),%eax$/;"	l
ffff8000001074eb	kernel.asm	/^ffff8000001074eb:	83 f8 02             	cmp    $0x2,%eax$/;"	l
ffff8000001074ee	kernel.asm	/^ffff8000001074ee:	75 73                	jne    ffff800000107563 <procdump+0x130>$/;"	l
ffff8000001074f0	kernel.asm	/^ffff8000001074f0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff8000001074f4	kernel.asm	/^ffff8000001074f4:	48 8b 40 30          	mov    0x30(%rax),%rax$/;"	l
ffff8000001074f8	kernel.asm	/^ffff8000001074f8:	48 8b 40 30          	mov    0x30(%rax),%rax$/;"	l
ffff8000001074fc	kernel.asm	/^ffff8000001074fc:	48 83 c0 10          	add    $0x10,%rax$/;"	l
ffff800000107500	kernel.asm	/^ffff800000107500:	48 89 c2             	mov    %rax,%rdx$/;"	l
ffff800000107503	kernel.asm	/^ffff800000107503:	48 8d 45 90          	lea    -0x70(%rbp),%rax$/;"	l
ffff800000107507	kernel.asm	/^ffff800000107507:	48 89 c6             	mov    %rax,%rsi$/;"	l
ffff80000010750a	kernel.asm	/^ffff80000010750a:	48 89 d7             	mov    %rdx,%rdi$/;"	l
ffff80000010750d	kernel.asm	/^ffff80000010750d:	48 b8 14 79 10 00 00 	movabs $0xffff800000107914,%rax$/;"	l
ffff800000107514	kernel.asm	/^ffff800000107514:	80 ff ff $/;"	l
ffff800000107517	kernel.asm	/^ffff800000107517:	ff d0                	callq  *%rax$/;"	l
ffff800000107519	kernel.asm	/^ffff800000107519:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)$/;"	l
ffff800000107520	kernel.asm	/^ffff800000107520:	eb 2c                	jmp    ffff80000010754e <procdump+0x11b>$/;"	l
ffff800000107522	kernel.asm	/^ffff800000107522:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff800000107525	kernel.asm	/^ffff800000107525:	48 98                	cltq   $/;"	l
ffff800000107527	kernel.asm	/^ffff800000107527:	48 8b 44 c5 90       	mov    -0x70(%rbp,%rax,8),%rax$/;"	l
ffff80000010752c	kernel.asm	/^ffff80000010752c:	48 89 c6             	mov    %rax,%rsi$/;"	l
ffff80000010752f	kernel.asm	/^ffff80000010752f:	48 bf c7 d8 10 00 00 	movabs $0xffff80000010d8c7,%rdi$/;"	l
ffff800000107536	kernel.asm	/^ffff800000107536:	80 ff ff $/;"	l
ffff800000107539	kernel.asm	/^ffff800000107539:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff80000010753e	kernel.asm	/^ffff80000010753e:	48 ba ac 07 10 00 00 	movabs $0xffff8000001007ac,%rdx$/;"	l
ffff800000107545	kernel.asm	/^ffff800000107545:	80 ff ff $/;"	l
ffff800000107548	kernel.asm	/^ffff800000107548:	ff d2                	callq  *%rdx$/;"	l
ffff80000010754a	kernel.asm	/^ffff80000010754a:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)$/;"	l
ffff80000010754e	kernel.asm	/^ffff80000010754e:	83 7d fc 09          	cmpl   $0x9,-0x4(%rbp)$/;"	l
ffff800000107552	kernel.asm	/^ffff800000107552:	7f 0f                	jg     ffff800000107563 <procdump+0x130>$/;"	l
ffff800000107554	kernel.asm	/^ffff800000107554:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff800000107557	kernel.asm	/^ffff800000107557:	48 98                	cltq   $/;"	l
ffff800000107559	kernel.asm	/^ffff800000107559:	48 8b 44 c5 90       	mov    -0x70(%rbp,%rax,8),%rax$/;"	l
ffff80000010755e	kernel.asm	/^ffff80000010755e:	48 85 c0             	test   %rax,%rax$/;"	l
ffff800000107561	kernel.asm	/^ffff800000107561:	75 bf                	jne    ffff800000107522 <procdump+0xef>$/;"	l
ffff800000107563	kernel.asm	/^ffff800000107563:	48 bf cb d8 10 00 00 	movabs $0xffff80000010d8cb,%rdi$/;"	l
ffff80000010756a	kernel.asm	/^ffff80000010756a:	80 ff ff $/;"	l
ffff80000010756d	kernel.asm	/^ffff80000010756d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000107572	kernel.asm	/^ffff800000107572:	48 ba ac 07 10 00 00 	movabs $0xffff8000001007ac,%rdx$/;"	l
ffff800000107579	kernel.asm	/^ffff800000107579:	80 ff ff $/;"	l
ffff80000010757c	kernel.asm	/^ffff80000010757c:	ff d2                	callq  *%rdx$/;"	l
ffff80000010757e	kernel.asm	/^ffff80000010757e:	eb 01                	jmp    ffff800000107581 <procdump+0x14e>$/;"	l
ffff800000107580	kernel.asm	/^ffff800000107580:	90                   	nop$/;"	l
ffff800000107581	kernel.asm	/^ffff800000107581:	48 81 45 f0 f0 00 00 	addq   $0xf0,-0x10(%rbp)$/;"	l
ffff800000107588	kernel.asm	/^ffff800000107588:	00 $/;"	l
ffff800000107589	kernel.asm	/^ffff800000107589:	48 b8 68 f7 11 00 00 	movabs $0xffff80000011f768,%rax$/;"	l
ffff800000107590	kernel.asm	/^ffff800000107590:	80 ff ff $/;"	l
ffff800000107593	kernel.asm	/^ffff800000107593:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)$/;"	l
ffff800000107597	kernel.asm	/^ffff800000107597:	0f 82 b1 fe ff ff    	jb     ffff80000010744e <procdump+0x1b>$/;"	l
ffff80000010759d	kernel.asm	/^ffff80000010759d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff8000001075a2	kernel.asm	/^ffff8000001075a2:	48 ba 44 44 10 00 00 	movabs $0xffff800000104444,%rdx$/;"	l
ffff8000001075a9	kernel.asm	/^ffff8000001075a9:	80 ff ff $/;"	l
ffff8000001075ac	kernel.asm	/^ffff8000001075ac:	ff d2                	callq  *%rdx$/;"	l
ffff8000001075ae	kernel.asm	/^ffff8000001075ae:	89 c6                	mov    %eax,%esi$/;"	l
ffff8000001075b0	kernel.asm	/^ffff8000001075b0:	48 bf cd d8 10 00 00 	movabs $0xffff80000010d8cd,%rdi$/;"	l
ffff8000001075b7	kernel.asm	/^ffff8000001075b7:	80 ff ff $/;"	l
ffff8000001075ba	kernel.asm	/^ffff8000001075ba:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff8000001075bf	kernel.asm	/^ffff8000001075bf:	48 ba ac 07 10 00 00 	movabs $0xffff8000001007ac,%rdx$/;"	l
ffff8000001075c6	kernel.asm	/^ffff8000001075c6:	80 ff ff $/;"	l
ffff8000001075c9	kernel.asm	/^ffff8000001075c9:	ff d2                	callq  *%rdx$/;"	l
ffff8000001075cb	kernel.asm	/^ffff8000001075cb:	90                   	nop$/;"	l
ffff8000001075cc	kernel.asm	/^ffff8000001075cc:	c9                   	leaveq $/;"	l
ffff8000001075cd	kernel.asm	/^ffff8000001075cd:	c3                   	retq   $/;"	l
ffff8000001075ce	kernel.asm	/^ffff8000001075ce <initsleeplock>:$/;"	l
ffff8000001075ce	kernel.asm	/^ffff8000001075ce:	55                   	push   %rbp$/;"	l
ffff8000001075cf	kernel.asm	/^ffff8000001075cf:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff8000001075d2	kernel.asm	/^ffff8000001075d2:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff8000001075d6	kernel.asm	/^ffff8000001075d6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)$/;"	l
ffff8000001075da	kernel.asm	/^ffff8000001075da:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)$/;"	l
ffff8000001075de	kernel.asm	/^ffff8000001075de:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001075e2	kernel.asm	/^ffff8000001075e2:	48 83 c0 08          	add    $0x8,%rax$/;"	l
ffff8000001075e6	kernel.asm	/^ffff8000001075e6:	48 be 07 d9 10 00 00 	movabs $0xffff80000010d907,%rsi$/;"	l
ffff8000001075ed	kernel.asm	/^ffff8000001075ed:	80 ff ff $/;"	l
ffff8000001075f0	kernel.asm	/^ffff8000001075f0:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001075f3	kernel.asm	/^ffff8000001075f3:	48 b8 a1 77 10 00 00 	movabs $0xffff8000001077a1,%rax$/;"	l
ffff8000001075fa	kernel.asm	/^ffff8000001075fa:	80 ff ff $/;"	l
ffff8000001075fd	kernel.asm	/^ffff8000001075fd:	ff d0                	callq  *%rax$/;"	l
ffff8000001075ff	kernel.asm	/^ffff8000001075ff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000107603	kernel.asm	/^ffff800000107603:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
ffff800000107607	kernel.asm	/^ffff800000107607:	48 89 50 70          	mov    %rdx,0x70(%rax)$/;"	l
ffff80000010760b	kernel.asm	/^ffff80000010760b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010760f	kernel.asm	/^ffff80000010760f:	c7 00 00 00 00 00    	movl   $0x0,(%rax)$/;"	l
ffff800000107615	kernel.asm	/^ffff800000107615:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000107619	kernel.asm	/^ffff800000107619:	c7 40 78 00 00 00 00 	movl   $0x0,0x78(%rax)$/;"	l
ffff800000107620	kernel.asm	/^ffff800000107620:	90                   	nop$/;"	l
ffff800000107621	kernel.asm	/^ffff800000107621:	c9                   	leaveq $/;"	l
ffff800000107622	kernel.asm	/^ffff800000107622:	c3                   	retq   $/;"	l
ffff800000107623	kernel.asm	/^ffff800000107623 <acquiresleep>:$/;"	l
ffff800000107623	kernel.asm	/^ffff800000107623:	55                   	push   %rbp$/;"	l
ffff800000107624	kernel.asm	/^ffff800000107624:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000107627	kernel.asm	/^ffff800000107627:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff80000010762b	kernel.asm	/^ffff80000010762b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)$/;"	l
ffff80000010762f	kernel.asm	/^ffff80000010762f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000107633	kernel.asm	/^ffff800000107633:	48 83 c0 08          	add    $0x8,%rax$/;"	l
ffff800000107637	kernel.asm	/^ffff800000107637:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010763a	kernel.asm	/^ffff80000010763a:	48 b8 d6 77 10 00 00 	movabs $0xffff8000001077d6,%rax$/;"	l
ffff800000107641	kernel.asm	/^ffff800000107641:	80 ff ff $/;"	l
ffff800000107644	kernel.asm	/^ffff800000107644:	ff d0                	callq  *%rax$/;"	l
ffff800000107646	kernel.asm	/^ffff800000107646:	eb 1e                	jmp    ffff800000107666 <acquiresleep+0x43>$/;"	l
ffff800000107648	kernel.asm	/^ffff800000107648:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010764c	kernel.asm	/^ffff80000010764c:	48 8d 50 08          	lea    0x8(%rax),%rdx$/;"	l
ffff800000107650	kernel.asm	/^ffff800000107650:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000107654	kernel.asm	/^ffff800000107654:	48 89 d6             	mov    %rdx,%rsi$/;"	l
ffff800000107657	kernel.asm	/^ffff800000107657:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010765a	kernel.asm	/^ffff80000010765a:	48 b8 cc 71 10 00 00 	movabs $0xffff8000001071cc,%rax$/;"	l
ffff800000107661	kernel.asm	/^ffff800000107661:	80 ff ff $/;"	l
ffff800000107664	kernel.asm	/^ffff800000107664:	ff d0                	callq  *%rax$/;"	l
ffff800000107666	kernel.asm	/^ffff800000107666:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010766a	kernel.asm	/^ffff80000010766a:	8b 00                	mov    (%rax),%eax$/;"	l
ffff80000010766c	kernel.asm	/^ffff80000010766c:	85 c0                	test   %eax,%eax$/;"	l
ffff80000010766e	kernel.asm	/^ffff80000010766e:	75 d8                	jne    ffff800000107648 <acquiresleep+0x25>$/;"	l
ffff800000107670	kernel.asm	/^ffff800000107670:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000107674	kernel.asm	/^ffff800000107674:	c7 00 01 00 00 00    	movl   $0x1,(%rax)$/;"	l
ffff80000010767a	kernel.asm	/^ffff80000010767a:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000107681	kernel.asm	/^ffff800000107681:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000107685	kernel.asm	/^ffff800000107685:	8b 50 1c             	mov    0x1c(%rax),%edx$/;"	l
ffff800000107688	kernel.asm	/^ffff800000107688:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010768c	kernel.asm	/^ffff80000010768c:	89 50 78             	mov    %edx,0x78(%rax)$/;"	l
ffff80000010768f	kernel.asm	/^ffff80000010768f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000107693	kernel.asm	/^ffff800000107693:	48 83 c0 08          	add    $0x8,%rax$/;"	l
ffff800000107697	kernel.asm	/^ffff800000107697:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010769a	kernel.asm	/^ffff80000010769a:	48 b8 6f 78 10 00 00 	movabs $0xffff80000010786f,%rax$/;"	l
ffff8000001076a1	kernel.asm	/^ffff8000001076a1:	80 ff ff $/;"	l
ffff8000001076a4	kernel.asm	/^ffff8000001076a4:	ff d0                	callq  *%rax$/;"	l
ffff8000001076a6	kernel.asm	/^ffff8000001076a6:	90                   	nop$/;"	l
ffff8000001076a7	kernel.asm	/^ffff8000001076a7:	c9                   	leaveq $/;"	l
ffff8000001076a8	kernel.asm	/^ffff8000001076a8:	c3                   	retq   $/;"	l
ffff8000001076a9	kernel.asm	/^ffff8000001076a9 <releasesleep>:$/;"	l
ffff8000001076a9	kernel.asm	/^ffff8000001076a9:	55                   	push   %rbp$/;"	l
ffff8000001076aa	kernel.asm	/^ffff8000001076aa:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff8000001076ad	kernel.asm	/^ffff8000001076ad:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff8000001076b1	kernel.asm	/^ffff8000001076b1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)$/;"	l
ffff8000001076b5	kernel.asm	/^ffff8000001076b5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001076b9	kernel.asm	/^ffff8000001076b9:	48 83 c0 08          	add    $0x8,%rax$/;"	l
ffff8000001076bd	kernel.asm	/^ffff8000001076bd:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001076c0	kernel.asm	/^ffff8000001076c0:	48 b8 d6 77 10 00 00 	movabs $0xffff8000001077d6,%rax$/;"	l
ffff8000001076c7	kernel.asm	/^ffff8000001076c7:	80 ff ff $/;"	l
ffff8000001076ca	kernel.asm	/^ffff8000001076ca:	ff d0                	callq  *%rax$/;"	l
ffff8000001076cc	kernel.asm	/^ffff8000001076cc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001076d0	kernel.asm	/^ffff8000001076d0:	c7 00 00 00 00 00    	movl   $0x0,(%rax)$/;"	l
ffff8000001076d6	kernel.asm	/^ffff8000001076d6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001076da	kernel.asm	/^ffff8000001076da:	c7 40 78 00 00 00 00 	movl   $0x0,0x78(%rax)$/;"	l
ffff8000001076e1	kernel.asm	/^ffff8000001076e1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001076e5	kernel.asm	/^ffff8000001076e5:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001076e8	kernel.asm	/^ffff8000001076e8:	48 b8 34 73 10 00 00 	movabs $0xffff800000107334,%rax$/;"	l
ffff8000001076ef	kernel.asm	/^ffff8000001076ef:	80 ff ff $/;"	l
ffff8000001076f2	kernel.asm	/^ffff8000001076f2:	ff d0                	callq  *%rax$/;"	l
ffff8000001076f4	kernel.asm	/^ffff8000001076f4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001076f8	kernel.asm	/^ffff8000001076f8:	48 83 c0 08          	add    $0x8,%rax$/;"	l
ffff8000001076fc	kernel.asm	/^ffff8000001076fc:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001076ff	kernel.asm	/^ffff8000001076ff:	48 b8 6f 78 10 00 00 	movabs $0xffff80000010786f,%rax$/;"	l
ffff800000107706	kernel.asm	/^ffff800000107706:	80 ff ff $/;"	l
ffff800000107709	kernel.asm	/^ffff800000107709:	ff d0                	callq  *%rax$/;"	l
ffff80000010770b	kernel.asm	/^ffff80000010770b:	90                   	nop$/;"	l
ffff80000010770c	kernel.asm	/^ffff80000010770c:	c9                   	leaveq $/;"	l
ffff80000010770d	kernel.asm	/^ffff80000010770d:	c3                   	retq   $/;"	l
ffff80000010770e	kernel.asm	/^ffff80000010770e <holdingsleep>:$/;"	l
ffff80000010770e	kernel.asm	/^ffff80000010770e:	55                   	push   %rbp$/;"	l
ffff80000010770f	kernel.asm	/^ffff80000010770f:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000107712	kernel.asm	/^ffff800000107712:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ffff800000107716	kernel.asm	/^ffff800000107716:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
ffff80000010771a	kernel.asm	/^ffff80000010771a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010771e	kernel.asm	/^ffff80000010771e:	48 83 c0 08          	add    $0x8,%rax$/;"	l
ffff800000107722	kernel.asm	/^ffff800000107722:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000107725	kernel.asm	/^ffff800000107725:	48 b8 d6 77 10 00 00 	movabs $0xffff8000001077d6,%rax$/;"	l
ffff80000010772c	kernel.asm	/^ffff80000010772c:	80 ff ff $/;"	l
ffff80000010772f	kernel.asm	/^ffff80000010772f:	ff d0                	callq  *%rax$/;"	l
ffff800000107731	kernel.asm	/^ffff800000107731:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000107735	kernel.asm	/^ffff800000107735:	8b 00                	mov    (%rax),%eax$/;"	l
ffff800000107737	kernel.asm	/^ffff800000107737:	89 45 fc             	mov    %eax,-0x4(%rbp)$/;"	l
ffff80000010773a	kernel.asm	/^ffff80000010773a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010773e	kernel.asm	/^ffff80000010773e:	48 83 c0 08          	add    $0x8,%rax$/;"	l
ffff800000107742	kernel.asm	/^ffff800000107742:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000107745	kernel.asm	/^ffff800000107745:	48 b8 6f 78 10 00 00 	movabs $0xffff80000010786f,%rax$/;"	l
ffff80000010774c	kernel.asm	/^ffff80000010774c:	80 ff ff $/;"	l
ffff80000010774f	kernel.asm	/^ffff80000010774f:	ff d0                	callq  *%rax$/;"	l
ffff800000107751	kernel.asm	/^ffff800000107751:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff800000107754	kernel.asm	/^ffff800000107754:	c9                   	leaveq $/;"	l
ffff800000107755	kernel.asm	/^ffff800000107755:	c3                   	retq   $/;"	l
ffff800000107756	kernel.asm	/^ffff800000107756 <readeflags>:$/;"	l
ffff800000107756	kernel.asm	/^ffff800000107756:	55                   	push   %rbp$/;"	l
ffff800000107757	kernel.asm	/^ffff800000107757:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010775a	kernel.asm	/^ffff80000010775a:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff80000010775e	kernel.asm	/^ffff80000010775e:	9c                   	pushfq $/;"	l
ffff80000010775f	kernel.asm	/^ffff80000010775f:	58                   	pop    %rax$/;"	l
ffff800000107760	kernel.asm	/^ffff800000107760:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff800000107764	kernel.asm	/^ffff800000107764:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000107768	kernel.asm	/^ffff800000107768:	c9                   	leaveq $/;"	l
ffff800000107769	kernel.asm	/^ffff800000107769:	c3                   	retq   $/;"	l
ffff80000010776a	kernel.asm	/^ffff80000010776a <cli>:$/;"	l
ffff80000010776a	kernel.asm	/^ffff80000010776a:	55                   	push   %rbp$/;"	l
ffff80000010776b	kernel.asm	/^ffff80000010776b:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010776e	kernel.asm	/^ffff80000010776e:	fa                   	cli    $/;"	l
ffff80000010776f	kernel.asm	/^ffff80000010776f:	90                   	nop$/;"	l
ffff800000107770	kernel.asm	/^ffff800000107770:	5d                   	pop    %rbp$/;"	l
ffff800000107771	kernel.asm	/^ffff800000107771:	c3                   	retq   $/;"	l
ffff800000107772	kernel.asm	/^ffff800000107772 <sti>:$/;"	l
ffff800000107772	kernel.asm	/^ffff800000107772:	55                   	push   %rbp$/;"	l
ffff800000107773	kernel.asm	/^ffff800000107773:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000107776	kernel.asm	/^ffff800000107776:	fb                   	sti    $/;"	l
ffff800000107777	kernel.asm	/^ffff800000107777:	90                   	nop$/;"	l
ffff800000107778	kernel.asm	/^ffff800000107778:	5d                   	pop    %rbp$/;"	l
ffff800000107779	kernel.asm	/^ffff800000107779:	c3                   	retq   $/;"	l
ffff80000010777a	kernel.asm	/^ffff80000010777a <xchg>:$/;"	l
ffff80000010777a	kernel.asm	/^ffff80000010777a:	55                   	push   %rbp$/;"	l
ffff80000010777b	kernel.asm	/^ffff80000010777b:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010777e	kernel.asm	/^ffff80000010777e:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ffff800000107782	kernel.asm	/^ffff800000107782:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
ffff800000107786	kernel.asm	/^ffff800000107786:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)$/;"	l
ffff80000010778a	kernel.asm	/^ffff80000010778a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx$/;"	l
ffff80000010778e	kernel.asm	/^ffff80000010778e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff800000107792	kernel.asm	/^ffff800000107792:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx$/;"	l
ffff800000107796	kernel.asm	/^ffff800000107796:	f0 87 02             	lock xchg %eax,(%rdx)$/;"	l
ffff800000107799	kernel.asm	/^ffff800000107799:	89 45 fc             	mov    %eax,-0x4(%rbp)$/;"	l
ffff80000010779c	kernel.asm	/^ffff80000010779c:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff80000010779f	kernel.asm	/^ffff80000010779f:	c9                   	leaveq $/;"	l
ffff8000001077a0	kernel.asm	/^ffff8000001077a0:	c3                   	retq   $/;"	l
ffff8000001077a1	kernel.asm	/^ffff8000001077a1 <initlock>:$/;"	l
ffff8000001077a1	kernel.asm	/^ffff8000001077a1:	55                   	push   %rbp$/;"	l
ffff8000001077a2	kernel.asm	/^ffff8000001077a2:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff8000001077a5	kernel.asm	/^ffff8000001077a5:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff8000001077a9	kernel.asm	/^ffff8000001077a9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)$/;"	l
ffff8000001077ad	kernel.asm	/^ffff8000001077ad:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)$/;"	l
ffff8000001077b1	kernel.asm	/^ffff8000001077b1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001077b5	kernel.asm	/^ffff8000001077b5:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
ffff8000001077b9	kernel.asm	/^ffff8000001077b9:	48 89 50 08          	mov    %rdx,0x8(%rax)$/;"	l
ffff8000001077bd	kernel.asm	/^ffff8000001077bd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001077c1	kernel.asm	/^ffff8000001077c1:	c7 00 00 00 00 00    	movl   $0x0,(%rax)$/;"	l
ffff8000001077c7	kernel.asm	/^ffff8000001077c7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001077cb	kernel.asm	/^ffff8000001077cb:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)$/;"	l
ffff8000001077d2	kernel.asm	/^ffff8000001077d2:	00 $/;"	l
ffff8000001077d3	kernel.asm	/^ffff8000001077d3:	90                   	nop$/;"	l
ffff8000001077d4	kernel.asm	/^ffff8000001077d4:	c9                   	leaveq $/;"	l
ffff8000001077d5	kernel.asm	/^ffff8000001077d5:	c3                   	retq   $/;"	l
ffff8000001077d6	kernel.asm	/^ffff8000001077d6 <acquire>:$/;"	l
ffff8000001077d6	kernel.asm	/^ffff8000001077d6:	55                   	push   %rbp$/;"	l
ffff8000001077d7	kernel.asm	/^ffff8000001077d7:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff8000001077da	kernel.asm	/^ffff8000001077da:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff8000001077de	kernel.asm	/^ffff8000001077de:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)$/;"	l
ffff8000001077e2	kernel.asm	/^ffff8000001077e2:	48 b8 e9 79 10 00 00 	movabs $0xffff8000001079e9,%rax$/;"	l
ffff8000001077e9	kernel.asm	/^ffff8000001077e9:	80 ff ff $/;"	l
ffff8000001077ec	kernel.asm	/^ffff8000001077ec:	ff d0                	callq  *%rax$/;"	l
ffff8000001077ee	kernel.asm	/^ffff8000001077ee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001077f2	kernel.asm	/^ffff8000001077f2:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001077f5	kernel.asm	/^ffff8000001077f5:	48 b8 ad 79 10 00 00 	movabs $0xffff8000001079ad,%rax$/;"	l
ffff8000001077fc	kernel.asm	/^ffff8000001077fc:	80 ff ff $/;"	l
ffff8000001077ff	kernel.asm	/^ffff8000001077ff:	ff d0                	callq  *%rax$/;"	l
ffff800000107801	kernel.asm	/^ffff800000107801:	85 c0                	test   %eax,%eax$/;"	l
ffff800000107803	kernel.asm	/^ffff800000107803:	74 16                	je     ffff80000010781b <acquire+0x45>$/;"	l
ffff800000107805	kernel.asm	/^ffff800000107805:	48 bf 12 d9 10 00 00 	movabs $0xffff80000010d912,%rdi$/;"	l
ffff80000010780c	kernel.asm	/^ffff80000010780c:	80 ff ff $/;"	l
ffff80000010780f	kernel.asm	/^ffff80000010780f:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff800000107816	kernel.asm	/^ffff800000107816:	80 ff ff $/;"	l
ffff800000107819	kernel.asm	/^ffff800000107819:	ff d0                	callq  *%rax$/;"	l
ffff80000010781b	kernel.asm	/^ffff80000010781b:	90                   	nop$/;"	l
ffff80000010781c	kernel.asm	/^ffff80000010781c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000107820	kernel.asm	/^ffff800000107820:	be 01 00 00 00       	mov    $0x1,%esi$/;"	l
ffff800000107825	kernel.asm	/^ffff800000107825:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000107828	kernel.asm	/^ffff800000107828:	48 b8 7a 77 10 00 00 	movabs $0xffff80000010777a,%rax$/;"	l
ffff80000010782f	kernel.asm	/^ffff80000010782f:	80 ff ff $/;"	l
ffff800000107832	kernel.asm	/^ffff800000107832:	ff d0                	callq  *%rax$/;"	l
ffff800000107834	kernel.asm	/^ffff800000107834:	85 c0                	test   %eax,%eax$/;"	l
ffff800000107836	kernel.asm	/^ffff800000107836:	75 e4                	jne    ffff80000010781c <acquire+0x46>$/;"	l
ffff800000107838	kernel.asm	/^ffff800000107838:	0f ae f0             	mfence $/;"	l
ffff80000010783b	kernel.asm	/^ffff80000010783b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010783f	kernel.asm	/^ffff80000010783f:	48 c7 c2 f0 ff ff ff 	mov    $0xfffffffffffffff0,%rdx$/;"	l
ffff800000107846	kernel.asm	/^ffff800000107846:	64 48 8b 12          	mov    %fs:(%rdx),%rdx$/;"	l
ffff80000010784a	kernel.asm	/^ffff80000010784a:	48 89 50 10          	mov    %rdx,0x10(%rax)$/;"	l
ffff80000010784e	kernel.asm	/^ffff80000010784e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000107852	kernel.asm	/^ffff800000107852:	48 8d 50 18          	lea    0x18(%rax),%rdx$/;"	l
ffff800000107856	kernel.asm	/^ffff800000107856:	48 8d 45 f8          	lea    -0x8(%rbp),%rax$/;"	l
ffff80000010785a	kernel.asm	/^ffff80000010785a:	48 89 d6             	mov    %rdx,%rsi$/;"	l
ffff80000010785d	kernel.asm	/^ffff80000010785d:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000107860	kernel.asm	/^ffff800000107860:	48 b8 e0 78 10 00 00 	movabs $0xffff8000001078e0,%rax$/;"	l
ffff800000107867	kernel.asm	/^ffff800000107867:	80 ff ff $/;"	l
ffff80000010786a	kernel.asm	/^ffff80000010786a:	ff d0                	callq  *%rax$/;"	l
ffff80000010786c	kernel.asm	/^ffff80000010786c:	90                   	nop$/;"	l
ffff80000010786d	kernel.asm	/^ffff80000010786d:	c9                   	leaveq $/;"	l
ffff80000010786e	kernel.asm	/^ffff80000010786e:	c3                   	retq   $/;"	l
ffff80000010786f	kernel.asm	/^ffff80000010786f <release>:$/;"	l
ffff80000010786f	kernel.asm	/^ffff80000010786f:	55                   	push   %rbp$/;"	l
ffff800000107870	kernel.asm	/^ffff800000107870:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000107873	kernel.asm	/^ffff800000107873:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff800000107877	kernel.asm	/^ffff800000107877:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)$/;"	l
ffff80000010787b	kernel.asm	/^ffff80000010787b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010787f	kernel.asm	/^ffff80000010787f:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000107882	kernel.asm	/^ffff800000107882:	48 b8 ad 79 10 00 00 	movabs $0xffff8000001079ad,%rax$/;"	l
ffff800000107889	kernel.asm	/^ffff800000107889:	80 ff ff $/;"	l
ffff80000010788c	kernel.asm	/^ffff80000010788c:	ff d0                	callq  *%rax$/;"	l
ffff80000010788e	kernel.asm	/^ffff80000010788e:	85 c0                	test   %eax,%eax$/;"	l
ffff800000107890	kernel.asm	/^ffff800000107890:	75 16                	jne    ffff8000001078a8 <release+0x39>$/;"	l
ffff800000107892	kernel.asm	/^ffff800000107892:	48 bf 1a d9 10 00 00 	movabs $0xffff80000010d91a,%rdi$/;"	l
ffff800000107899	kernel.asm	/^ffff800000107899:	80 ff ff $/;"	l
ffff80000010789c	kernel.asm	/^ffff80000010789c:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff8000001078a3	kernel.asm	/^ffff8000001078a3:	80 ff ff $/;"	l
ffff8000001078a6	kernel.asm	/^ffff8000001078a6:	ff d0                	callq  *%rax$/;"	l
ffff8000001078a8	kernel.asm	/^ffff8000001078a8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001078ac	kernel.asm	/^ffff8000001078ac:	48 c7 40 18 00 00 00 	movq   $0x0,0x18(%rax)$/;"	l
ffff8000001078b3	kernel.asm	/^ffff8000001078b3:	00 $/;"	l
ffff8000001078b4	kernel.asm	/^ffff8000001078b4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001078b8	kernel.asm	/^ffff8000001078b8:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)$/;"	l
ffff8000001078bf	kernel.asm	/^ffff8000001078bf:	00 $/;"	l
ffff8000001078c0	kernel.asm	/^ffff8000001078c0:	0f ae f0             	mfence $/;"	l
ffff8000001078c3	kernel.asm	/^ffff8000001078c3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001078c7	kernel.asm	/^ffff8000001078c7:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx$/;"	l
ffff8000001078cb	kernel.asm	/^ffff8000001078cb:	c7 00 00 00 00 00    	movl   $0x0,(%rax)$/;"	l
ffff8000001078d1	kernel.asm	/^ffff8000001078d1:	48 b8 63 7a 10 00 00 	movabs $0xffff800000107a63,%rax$/;"	l
ffff8000001078d8	kernel.asm	/^ffff8000001078d8:	80 ff ff $/;"	l
ffff8000001078db	kernel.asm	/^ffff8000001078db:	ff d0                	callq  *%rax$/;"	l
ffff8000001078dd	kernel.asm	/^ffff8000001078dd:	90                   	nop$/;"	l
ffff8000001078de	kernel.asm	/^ffff8000001078de:	c9                   	leaveq $/;"	l
ffff8000001078df	kernel.asm	/^ffff8000001078df:	c3                   	retq   $/;"	l
ffff8000001078e0	kernel.asm	/^ffff8000001078e0 <getcallerpcs>:$/;"	l
ffff8000001078e0	kernel.asm	/^ffff8000001078e0:	55                   	push   %rbp$/;"	l
ffff8000001078e1	kernel.asm	/^ffff8000001078e1:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff8000001078e4	kernel.asm	/^ffff8000001078e4:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ffff8000001078e8	kernel.asm	/^ffff8000001078e8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
ffff8000001078ec	kernel.asm	/^ffff8000001078ec:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)$/;"	l
ffff8000001078f0	kernel.asm	/^ffff8000001078f0:	48 89 e8             	mov    %rbp,%rax$/;"	l
ffff8000001078f3	kernel.asm	/^ffff8000001078f3:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff8000001078f7	kernel.asm	/^ffff8000001078f7:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx$/;"	l
ffff8000001078fb	kernel.asm	/^ffff8000001078fb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001078ff	kernel.asm	/^ffff8000001078ff:	48 89 d6             	mov    %rdx,%rsi$/;"	l
ffff800000107902	kernel.asm	/^ffff800000107902:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000107905	kernel.asm	/^ffff800000107905:	48 b8 14 79 10 00 00 	movabs $0xffff800000107914,%rax$/;"	l
ffff80000010790c	kernel.asm	/^ffff80000010790c:	80 ff ff $/;"	l
ffff80000010790f	kernel.asm	/^ffff80000010790f:	ff d0                	callq  *%rax$/;"	l
ffff800000107911	kernel.asm	/^ffff800000107911:	90                   	nop$/;"	l
ffff800000107912	kernel.asm	/^ffff800000107912:	c9                   	leaveq $/;"	l
ffff800000107913	kernel.asm	/^ffff800000107913:	c3                   	retq   $/;"	l
ffff800000107914	kernel.asm	/^ffff800000107914 <getstackpcs>:$/;"	l
ffff800000107914	kernel.asm	/^ffff800000107914:	55                   	push   %rbp$/;"	l
ffff800000107915	kernel.asm	/^ffff800000107915:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000107918	kernel.asm	/^ffff800000107918:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ffff80000010791c	kernel.asm	/^ffff80000010791c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
ffff800000107920	kernel.asm	/^ffff800000107920:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)$/;"	l
ffff800000107924	kernel.asm	/^ffff800000107924:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)$/;"	l
ffff80000010792b	kernel.asm	/^ffff80000010792b:	eb 50                	jmp    ffff80000010797d <getstackpcs+0x69>$/;"	l
ffff80000010792d	kernel.asm	/^ffff80000010792d:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)$/;"	l
ffff800000107932	kernel.asm	/^ffff800000107932:	74 70                	je     ffff8000001079a4 <getstackpcs+0x90>$/;"	l
ffff800000107934	kernel.asm	/^ffff800000107934:	48 b8 ff ff ff ff ff 	movabs $0xffff7fffffffffff,%rax$/;"	l
ffff80000010793b	kernel.asm	/^ffff80000010793b:	7f ff ff $/;"	l
ffff80000010793e	kernel.asm	/^ffff80000010793e:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)$/;"	l
ffff800000107942	kernel.asm	/^ffff800000107942:	76 60                	jbe    ffff8000001079a4 <getstackpcs+0x90>$/;"	l
ffff800000107944	kernel.asm	/^ffff800000107944:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff800000107949	kernel.asm	/^ffff800000107949:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)$/;"	l
ffff80000010794d	kernel.asm	/^ffff80000010794d:	74 55                	je     ffff8000001079a4 <getstackpcs+0x90>$/;"	l
ffff80000010794f	kernel.asm	/^ffff80000010794f:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff800000107952	kernel.asm	/^ffff800000107952:	48 98                	cltq   $/;"	l
ffff800000107954	kernel.asm	/^ffff800000107954:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx$/;"	l
ffff80000010795b	kernel.asm	/^ffff80000010795b:	00 $/;"	l
ffff80000010795c	kernel.asm	/^ffff80000010795c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff800000107960	kernel.asm	/^ffff800000107960:	48 01 c2             	add    %rax,%rdx$/;"	l
ffff800000107963	kernel.asm	/^ffff800000107963:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000107967	kernel.asm	/^ffff800000107967:	48 8b 40 08          	mov    0x8(%rax),%rax$/;"	l
ffff80000010796b	kernel.asm	/^ffff80000010796b:	48 89 02             	mov    %rax,(%rdx)$/;"	l
ffff80000010796e	kernel.asm	/^ffff80000010796e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000107972	kernel.asm	/^ffff800000107972:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff800000107975	kernel.asm	/^ffff800000107975:	48 89 45 e8          	mov    %rax,-0x18(%rbp)$/;"	l
ffff800000107979	kernel.asm	/^ffff800000107979:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)$/;"	l
ffff80000010797d	kernel.asm	/^ffff80000010797d:	83 7d fc 09          	cmpl   $0x9,-0x4(%rbp)$/;"	l
ffff800000107981	kernel.asm	/^ffff800000107981:	7e aa                	jle    ffff80000010792d <getstackpcs+0x19>$/;"	l
ffff800000107983	kernel.asm	/^ffff800000107983:	eb 1f                	jmp    ffff8000001079a4 <getstackpcs+0x90>$/;"	l
ffff800000107985	kernel.asm	/^ffff800000107985:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff800000107988	kernel.asm	/^ffff800000107988:	48 98                	cltq   $/;"	l
ffff80000010798a	kernel.asm	/^ffff80000010798a:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx$/;"	l
ffff800000107991	kernel.asm	/^ffff800000107991:	00 $/;"	l
ffff800000107992	kernel.asm	/^ffff800000107992:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff800000107996	kernel.asm	/^ffff800000107996:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff800000107999	kernel.asm	/^ffff800000107999:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)$/;"	l
ffff8000001079a0	kernel.asm	/^ffff8000001079a0:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)$/;"	l
ffff8000001079a4	kernel.asm	/^ffff8000001079a4:	83 7d fc 09          	cmpl   $0x9,-0x4(%rbp)$/;"	l
ffff8000001079a8	kernel.asm	/^ffff8000001079a8:	7e db                	jle    ffff800000107985 <getstackpcs+0x71>$/;"	l
ffff8000001079aa	kernel.asm	/^ffff8000001079aa:	90                   	nop$/;"	l
ffff8000001079ab	kernel.asm	/^ffff8000001079ab:	c9                   	leaveq $/;"	l
ffff8000001079ac	kernel.asm	/^ffff8000001079ac:	c3                   	retq   $/;"	l
ffff8000001079ad	kernel.asm	/^ffff8000001079ad <holding>:$/;"	l
ffff8000001079ad	kernel.asm	/^ffff8000001079ad:	55                   	push   %rbp$/;"	l
ffff8000001079ae	kernel.asm	/^ffff8000001079ae:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff8000001079b1	kernel.asm	/^ffff8000001079b1:	48 83 ec 08          	sub    $0x8,%rsp$/;"	l
ffff8000001079b5	kernel.asm	/^ffff8000001079b5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)$/;"	l
ffff8000001079b9	kernel.asm	/^ffff8000001079b9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001079bd	kernel.asm	/^ffff8000001079bd:	8b 00                	mov    (%rax),%eax$/;"	l
ffff8000001079bf	kernel.asm	/^ffff8000001079bf:	85 c0                	test   %eax,%eax$/;"	l
ffff8000001079c1	kernel.asm	/^ffff8000001079c1:	74 1f                	je     ffff8000001079e2 <holding+0x35>$/;"	l
ffff8000001079c3	kernel.asm	/^ffff8000001079c3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001079c7	kernel.asm	/^ffff8000001079c7:	48 8b 50 10          	mov    0x10(%rax),%rdx$/;"	l
ffff8000001079cb	kernel.asm	/^ffff8000001079cb:	48 c7 c0 f0 ff ff ff 	mov    $0xfffffffffffffff0,%rax$/;"	l
ffff8000001079d2	kernel.asm	/^ffff8000001079d2:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff8000001079d6	kernel.asm	/^ffff8000001079d6:	48 39 c2             	cmp    %rax,%rdx$/;"	l
ffff8000001079d9	kernel.asm	/^ffff8000001079d9:	75 07                	jne    ffff8000001079e2 <holding+0x35>$/;"	l
ffff8000001079db	kernel.asm	/^ffff8000001079db:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
ffff8000001079e0	kernel.asm	/^ffff8000001079e0:	eb 05                	jmp    ffff8000001079e7 <holding+0x3a>$/;"	l
ffff8000001079e2	kernel.asm	/^ffff8000001079e2:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff8000001079e7	kernel.asm	/^ffff8000001079e7:	c9                   	leaveq $/;"	l
ffff8000001079e8	kernel.asm	/^ffff8000001079e8:	c3                   	retq   $/;"	l
ffff8000001079e9	kernel.asm	/^ffff8000001079e9 <pushcli>:$/;"	l
ffff8000001079e9	kernel.asm	/^ffff8000001079e9:	55                   	push   %rbp$/;"	l
ffff8000001079ea	kernel.asm	/^ffff8000001079ea:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff8000001079ed	kernel.asm	/^ffff8000001079ed:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff8000001079f1	kernel.asm	/^ffff8000001079f1:	48 b8 56 77 10 00 00 	movabs $0xffff800000107756,%rax$/;"	l
ffff8000001079f8	kernel.asm	/^ffff8000001079f8:	80 ff ff $/;"	l
ffff8000001079fb	kernel.asm	/^ffff8000001079fb:	ff d0                	callq  *%rax$/;"	l
ffff8000001079fd	kernel.asm	/^ffff8000001079fd:	89 45 fc             	mov    %eax,-0x4(%rbp)$/;"	l
ffff800000107a00	kernel.asm	/^ffff800000107a00:	48 b8 6a 77 10 00 00 	movabs $0xffff80000010776a,%rax$/;"	l
ffff800000107a07	kernel.asm	/^ffff800000107a07:	80 ff ff $/;"	l
ffff800000107a0a	kernel.asm	/^ffff800000107a0a:	ff d0                	callq  *%rax$/;"	l
ffff800000107a0c	kernel.asm	/^ffff800000107a0c:	48 c7 c0 f0 ff ff ff 	mov    $0xfffffffffffffff0,%rax$/;"	l
ffff800000107a13	kernel.asm	/^ffff800000107a13:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000107a17	kernel.asm	/^ffff800000107a17:	8b 80 e4 00 00 00    	mov    0xe4(%rax),%eax$/;"	l
ffff800000107a1d	kernel.asm	/^ffff800000107a1d:	85 c0                	test   %eax,%eax$/;"	l
ffff800000107a1f	kernel.asm	/^ffff800000107a1f:	75 1a                	jne    ffff800000107a3b <pushcli+0x52>$/;"	l
ffff800000107a21	kernel.asm	/^ffff800000107a21:	48 c7 c0 f0 ff ff ff 	mov    $0xfffffffffffffff0,%rax$/;"	l
ffff800000107a28	kernel.asm	/^ffff800000107a28:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000107a2c	kernel.asm	/^ffff800000107a2c:	8b 55 fc             	mov    -0x4(%rbp),%edx$/;"	l
ffff800000107a2f	kernel.asm	/^ffff800000107a2f:	81 e2 00 02 00 00    	and    $0x200,%edx$/;"	l
ffff800000107a35	kernel.asm	/^ffff800000107a35:	89 90 e8 00 00 00    	mov    %edx,0xe8(%rax)$/;"	l
ffff800000107a3b	kernel.asm	/^ffff800000107a3b:	48 c7 c0 f0 ff ff ff 	mov    $0xfffffffffffffff0,%rax$/;"	l
ffff800000107a42	kernel.asm	/^ffff800000107a42:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000107a46	kernel.asm	/^ffff800000107a46:	48 c7 c2 f0 ff ff ff 	mov    $0xfffffffffffffff0,%rdx$/;"	l
ffff800000107a4d	kernel.asm	/^ffff800000107a4d:	64 48 8b 12          	mov    %fs:(%rdx),%rdx$/;"	l
ffff800000107a51	kernel.asm	/^ffff800000107a51:	8b 92 e4 00 00 00    	mov    0xe4(%rdx),%edx$/;"	l
ffff800000107a57	kernel.asm	/^ffff800000107a57:	83 c2 01             	add    $0x1,%edx$/;"	l
ffff800000107a5a	kernel.asm	/^ffff800000107a5a:	89 90 e4 00 00 00    	mov    %edx,0xe4(%rax)$/;"	l
ffff800000107a60	kernel.asm	/^ffff800000107a60:	90                   	nop$/;"	l
ffff800000107a61	kernel.asm	/^ffff800000107a61:	c9                   	leaveq $/;"	l
ffff800000107a62	kernel.asm	/^ffff800000107a62:	c3                   	retq   $/;"	l
ffff800000107a63	kernel.asm	/^ffff800000107a63 <popcli>:$/;"	l
ffff800000107a63	kernel.asm	/^ffff800000107a63:	55                   	push   %rbp$/;"	l
ffff800000107a64	kernel.asm	/^ffff800000107a64:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000107a67	kernel.asm	/^ffff800000107a67:	48 b8 56 77 10 00 00 	movabs $0xffff800000107756,%rax$/;"	l
ffff800000107a6e	kernel.asm	/^ffff800000107a6e:	80 ff ff $/;"	l
ffff800000107a71	kernel.asm	/^ffff800000107a71:	ff d0                	callq  *%rax$/;"	l
ffff800000107a73	kernel.asm	/^ffff800000107a73:	25 00 02 00 00       	and    $0x200,%eax$/;"	l
ffff800000107a78	kernel.asm	/^ffff800000107a78:	48 85 c0             	test   %rax,%rax$/;"	l
ffff800000107a7b	kernel.asm	/^ffff800000107a7b:	74 16                	je     ffff800000107a93 <popcli+0x30>$/;"	l
ffff800000107a7d	kernel.asm	/^ffff800000107a7d:	48 bf 22 d9 10 00 00 	movabs $0xffff80000010d922,%rdi$/;"	l
ffff800000107a84	kernel.asm	/^ffff800000107a84:	80 ff ff $/;"	l
ffff800000107a87	kernel.asm	/^ffff800000107a87:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff800000107a8e	kernel.asm	/^ffff800000107a8e:	80 ff ff $/;"	l
ffff800000107a91	kernel.asm	/^ffff800000107a91:	ff d0                	callq  *%rax$/;"	l
ffff800000107a93	kernel.asm	/^ffff800000107a93:	48 c7 c0 f0 ff ff ff 	mov    $0xfffffffffffffff0,%rax$/;"	l
ffff800000107a9a	kernel.asm	/^ffff800000107a9a:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000107a9e	kernel.asm	/^ffff800000107a9e:	8b 90 e4 00 00 00    	mov    0xe4(%rax),%edx$/;"	l
ffff800000107aa4	kernel.asm	/^ffff800000107aa4:	83 ea 01             	sub    $0x1,%edx$/;"	l
ffff800000107aa7	kernel.asm	/^ffff800000107aa7:	89 90 e4 00 00 00    	mov    %edx,0xe4(%rax)$/;"	l
ffff800000107aad	kernel.asm	/^ffff800000107aad:	8b 80 e4 00 00 00    	mov    0xe4(%rax),%eax$/;"	l
ffff800000107ab3	kernel.asm	/^ffff800000107ab3:	85 c0                	test   %eax,%eax$/;"	l
ffff800000107ab5	kernel.asm	/^ffff800000107ab5:	79 16                	jns    ffff800000107acd <popcli+0x6a>$/;"	l
ffff800000107ab7	kernel.asm	/^ffff800000107ab7:	48 bf 39 d9 10 00 00 	movabs $0xffff80000010d939,%rdi$/;"	l
ffff800000107abe	kernel.asm	/^ffff800000107abe:	80 ff ff $/;"	l
ffff800000107ac1	kernel.asm	/^ffff800000107ac1:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff800000107ac8	kernel.asm	/^ffff800000107ac8:	80 ff ff $/;"	l
ffff800000107acb	kernel.asm	/^ffff800000107acb:	ff d0                	callq  *%rax$/;"	l
ffff800000107acd	kernel.asm	/^ffff800000107acd:	48 c7 c0 f0 ff ff ff 	mov    $0xfffffffffffffff0,%rax$/;"	l
ffff800000107ad4	kernel.asm	/^ffff800000107ad4:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000107ad8	kernel.asm	/^ffff800000107ad8:	8b 80 e4 00 00 00    	mov    0xe4(%rax),%eax$/;"	l
ffff800000107ade	kernel.asm	/^ffff800000107ade:	85 c0                	test   %eax,%eax$/;"	l
ffff800000107ae0	kernel.asm	/^ffff800000107ae0:	75 21                	jne    ffff800000107b03 <popcli+0xa0>$/;"	l
ffff800000107ae2	kernel.asm	/^ffff800000107ae2:	48 c7 c0 f0 ff ff ff 	mov    $0xfffffffffffffff0,%rax$/;"	l
ffff800000107ae9	kernel.asm	/^ffff800000107ae9:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000107aed	kernel.asm	/^ffff800000107aed:	8b 80 e8 00 00 00    	mov    0xe8(%rax),%eax$/;"	l
ffff800000107af3	kernel.asm	/^ffff800000107af3:	85 c0                	test   %eax,%eax$/;"	l
ffff800000107af5	kernel.asm	/^ffff800000107af5:	74 0c                	je     ffff800000107b03 <popcli+0xa0>$/;"	l
ffff800000107af7	kernel.asm	/^ffff800000107af7:	48 b8 72 77 10 00 00 	movabs $0xffff800000107772,%rax$/;"	l
ffff800000107afe	kernel.asm	/^ffff800000107afe:	80 ff ff $/;"	l
ffff800000107b01	kernel.asm	/^ffff800000107b01:	ff d0                	callq  *%rax$/;"	l
ffff800000107b03	kernel.asm	/^ffff800000107b03:	90                   	nop$/;"	l
ffff800000107b04	kernel.asm	/^ffff800000107b04:	5d                   	pop    %rbp$/;"	l
ffff800000107b05	kernel.asm	/^ffff800000107b05:	c3                   	retq   $/;"	l
ffff800000107b06	kernel.asm	/^ffff800000107b06 <stosb>:$/;"	l
ffff800000107b06	kernel.asm	/^ffff800000107b06:	55                   	push   %rbp$/;"	l
ffff800000107b07	kernel.asm	/^ffff800000107b07:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000107b0a	kernel.asm	/^ffff800000107b0a:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff800000107b0e	kernel.asm	/^ffff800000107b0e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)$/;"	l
ffff800000107b12	kernel.asm	/^ffff800000107b12:	89 75 f4             	mov    %esi,-0xc(%rbp)$/;"	l
ffff800000107b15	kernel.asm	/^ffff800000107b15:	89 55 f0             	mov    %edx,-0x10(%rbp)$/;"	l
ffff800000107b18	kernel.asm	/^ffff800000107b18:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx$/;"	l
ffff800000107b1c	kernel.asm	/^ffff800000107b1c:	8b 55 f0             	mov    -0x10(%rbp),%edx$/;"	l
ffff800000107b1f	kernel.asm	/^ffff800000107b1f:	8b 45 f4             	mov    -0xc(%rbp),%eax$/;"	l
ffff800000107b22	kernel.asm	/^ffff800000107b22:	48 89 ce             	mov    %rcx,%rsi$/;"	l
ffff800000107b25	kernel.asm	/^ffff800000107b25:	48 89 f7             	mov    %rsi,%rdi$/;"	l
ffff800000107b28	kernel.asm	/^ffff800000107b28:	89 d1                	mov    %edx,%ecx$/;"	l
ffff800000107b2a	kernel.asm	/^ffff800000107b2a:	fc                   	cld    $/;"	l
ffff800000107b2b	kernel.asm	/^ffff800000107b2b:	f3 aa                	rep stos %al,%es:(%rdi)$/;"	l
ffff800000107b2d	kernel.asm	/^ffff800000107b2d:	89 ca                	mov    %ecx,%edx$/;"	l
ffff800000107b2f	kernel.asm	/^ffff800000107b2f:	48 89 fe             	mov    %rdi,%rsi$/;"	l
ffff800000107b32	kernel.asm	/^ffff800000107b32:	48 89 75 f8          	mov    %rsi,-0x8(%rbp)$/;"	l
ffff800000107b36	kernel.asm	/^ffff800000107b36:	89 55 f0             	mov    %edx,-0x10(%rbp)$/;"	l
ffff800000107b39	kernel.asm	/^ffff800000107b39:	90                   	nop$/;"	l
ffff800000107b3a	kernel.asm	/^ffff800000107b3a:	c9                   	leaveq $/;"	l
ffff800000107b3b	kernel.asm	/^ffff800000107b3b:	c3                   	retq   $/;"	l
ffff800000107b3c	kernel.asm	/^ffff800000107b3c <stosl>:$/;"	l
ffff800000107b3c	kernel.asm	/^ffff800000107b3c:	55                   	push   %rbp$/;"	l
ffff800000107b3d	kernel.asm	/^ffff800000107b3d:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000107b40	kernel.asm	/^ffff800000107b40:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff800000107b44	kernel.asm	/^ffff800000107b44:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)$/;"	l
ffff800000107b48	kernel.asm	/^ffff800000107b48:	89 75 f4             	mov    %esi,-0xc(%rbp)$/;"	l
ffff800000107b4b	kernel.asm	/^ffff800000107b4b:	89 55 f0             	mov    %edx,-0x10(%rbp)$/;"	l
ffff800000107b4e	kernel.asm	/^ffff800000107b4e:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx$/;"	l
ffff800000107b52	kernel.asm	/^ffff800000107b52:	8b 55 f0             	mov    -0x10(%rbp),%edx$/;"	l
ffff800000107b55	kernel.asm	/^ffff800000107b55:	8b 45 f4             	mov    -0xc(%rbp),%eax$/;"	l
ffff800000107b58	kernel.asm	/^ffff800000107b58:	48 89 ce             	mov    %rcx,%rsi$/;"	l
ffff800000107b5b	kernel.asm	/^ffff800000107b5b:	48 89 f7             	mov    %rsi,%rdi$/;"	l
ffff800000107b5e	kernel.asm	/^ffff800000107b5e:	89 d1                	mov    %edx,%ecx$/;"	l
ffff800000107b60	kernel.asm	/^ffff800000107b60:	fc                   	cld    $/;"	l
ffff800000107b61	kernel.asm	/^ffff800000107b61:	f3 ab                	rep stos %eax,%es:(%rdi)$/;"	l
ffff800000107b63	kernel.asm	/^ffff800000107b63:	89 ca                	mov    %ecx,%edx$/;"	l
ffff800000107b65	kernel.asm	/^ffff800000107b65:	48 89 fe             	mov    %rdi,%rsi$/;"	l
ffff800000107b68	kernel.asm	/^ffff800000107b68:	48 89 75 f8          	mov    %rsi,-0x8(%rbp)$/;"	l
ffff800000107b6c	kernel.asm	/^ffff800000107b6c:	89 55 f0             	mov    %edx,-0x10(%rbp)$/;"	l
ffff800000107b6f	kernel.asm	/^ffff800000107b6f:	90                   	nop$/;"	l
ffff800000107b70	kernel.asm	/^ffff800000107b70:	c9                   	leaveq $/;"	l
ffff800000107b71	kernel.asm	/^ffff800000107b71:	c3                   	retq   $/;"	l
ffff800000107b72	kernel.asm	/^ffff800000107b72 <memset>:$/;"	l
ffff800000107b72	kernel.asm	/^ffff800000107b72:	55                   	push   %rbp$/;"	l
ffff800000107b73	kernel.asm	/^ffff800000107b73:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000107b76	kernel.asm	/^ffff800000107b76:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff800000107b7a	kernel.asm	/^ffff800000107b7a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)$/;"	l
ffff800000107b7e	kernel.asm	/^ffff800000107b7e:	89 75 f4             	mov    %esi,-0xc(%rbp)$/;"	l
ffff800000107b81	kernel.asm	/^ffff800000107b81:	89 55 f0             	mov    %edx,-0x10(%rbp)$/;"	l
ffff800000107b84	kernel.asm	/^ffff800000107b84:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000107b88	kernel.asm	/^ffff800000107b88:	83 e0 03             	and    $0x3,%eax$/;"	l
ffff800000107b8b	kernel.asm	/^ffff800000107b8b:	48 85 c0             	test   %rax,%rax$/;"	l
ffff800000107b8e	kernel.asm	/^ffff800000107b8e:	75 4f                	jne    ffff800000107bdf <memset+0x6d>$/;"	l
ffff800000107b90	kernel.asm	/^ffff800000107b90:	8b 45 f0             	mov    -0x10(%rbp),%eax$/;"	l
ffff800000107b93	kernel.asm	/^ffff800000107b93:	83 e0 03             	and    $0x3,%eax$/;"	l
ffff800000107b96	kernel.asm	/^ffff800000107b96:	85 c0                	test   %eax,%eax$/;"	l
ffff800000107b98	kernel.asm	/^ffff800000107b98:	75 45                	jne    ffff800000107bdf <memset+0x6d>$/;"	l
ffff800000107b9a	kernel.asm	/^ffff800000107b9a:	81 65 f4 ff 00 00 00 	andl   $0xff,-0xc(%rbp)$/;"	l
ffff800000107ba1	kernel.asm	/^ffff800000107ba1:	8b 45 f0             	mov    -0x10(%rbp),%eax$/;"	l
ffff800000107ba4	kernel.asm	/^ffff800000107ba4:	c1 e8 02             	shr    $0x2,%eax$/;"	l
ffff800000107ba7	kernel.asm	/^ffff800000107ba7:	89 c6                	mov    %eax,%esi$/;"	l
ffff800000107ba9	kernel.asm	/^ffff800000107ba9:	8b 45 f4             	mov    -0xc(%rbp),%eax$/;"	l
ffff800000107bac	kernel.asm	/^ffff800000107bac:	c1 e0 18             	shl    $0x18,%eax$/;"	l
ffff800000107baf	kernel.asm	/^ffff800000107baf:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000107bb1	kernel.asm	/^ffff800000107bb1:	8b 45 f4             	mov    -0xc(%rbp),%eax$/;"	l
ffff800000107bb4	kernel.asm	/^ffff800000107bb4:	c1 e0 10             	shl    $0x10,%eax$/;"	l
ffff800000107bb7	kernel.asm	/^ffff800000107bb7:	09 c2                	or     %eax,%edx$/;"	l
ffff800000107bb9	kernel.asm	/^ffff800000107bb9:	8b 45 f4             	mov    -0xc(%rbp),%eax$/;"	l
ffff800000107bbc	kernel.asm	/^ffff800000107bbc:	c1 e0 08             	shl    $0x8,%eax$/;"	l
ffff800000107bbf	kernel.asm	/^ffff800000107bbf:	09 d0                	or     %edx,%eax$/;"	l
ffff800000107bc1	kernel.asm	/^ffff800000107bc1:	0b 45 f4             	or     -0xc(%rbp),%eax$/;"	l
ffff800000107bc4	kernel.asm	/^ffff800000107bc4:	89 c1                	mov    %eax,%ecx$/;"	l
ffff800000107bc6	kernel.asm	/^ffff800000107bc6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000107bca	kernel.asm	/^ffff800000107bca:	89 f2                	mov    %esi,%edx$/;"	l
ffff800000107bcc	kernel.asm	/^ffff800000107bcc:	89 ce                	mov    %ecx,%esi$/;"	l
ffff800000107bce	kernel.asm	/^ffff800000107bce:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000107bd1	kernel.asm	/^ffff800000107bd1:	48 b8 3c 7b 10 00 00 	movabs $0xffff800000107b3c,%rax$/;"	l
ffff800000107bd8	kernel.asm	/^ffff800000107bd8:	80 ff ff $/;"	l
ffff800000107bdb	kernel.asm	/^ffff800000107bdb:	ff d0                	callq  *%rax$/;"	l
ffff800000107bdd	kernel.asm	/^ffff800000107bdd:	eb 1b                	jmp    ffff800000107bfa <memset+0x88>$/;"	l
ffff800000107bdf	kernel.asm	/^ffff800000107bdf:	8b 55 f0             	mov    -0x10(%rbp),%edx$/;"	l
ffff800000107be2	kernel.asm	/^ffff800000107be2:	8b 4d f4             	mov    -0xc(%rbp),%ecx$/;"	l
ffff800000107be5	kernel.asm	/^ffff800000107be5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000107be9	kernel.asm	/^ffff800000107be9:	89 ce                	mov    %ecx,%esi$/;"	l
ffff800000107beb	kernel.asm	/^ffff800000107beb:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000107bee	kernel.asm	/^ffff800000107bee:	48 b8 06 7b 10 00 00 	movabs $0xffff800000107b06,%rax$/;"	l
ffff800000107bf5	kernel.asm	/^ffff800000107bf5:	80 ff ff $/;"	l
ffff800000107bf8	kernel.asm	/^ffff800000107bf8:	ff d0                	callq  *%rax$/;"	l
ffff800000107bfa	kernel.asm	/^ffff800000107bfa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000107bfe	kernel.asm	/^ffff800000107bfe:	c9                   	leaveq $/;"	l
ffff800000107bff	kernel.asm	/^ffff800000107bff:	c3                   	retq   $/;"	l
ffff800000107c00	kernel.asm	/^ffff800000107c00 <memcmp>:$/;"	l
ffff800000107c00	kernel.asm	/^ffff800000107c00:	55                   	push   %rbp$/;"	l
ffff800000107c01	kernel.asm	/^ffff800000107c01:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000107c04	kernel.asm	/^ffff800000107c04:	48 83 ec 28          	sub    $0x28,%rsp$/;"	l
ffff800000107c08	kernel.asm	/^ffff800000107c08:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
ffff800000107c0c	kernel.asm	/^ffff800000107c0c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)$/;"	l
ffff800000107c10	kernel.asm	/^ffff800000107c10:	89 55 dc             	mov    %edx,-0x24(%rbp)$/;"	l
ffff800000107c13	kernel.asm	/^ffff800000107c13:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000107c17	kernel.asm	/^ffff800000107c17:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff800000107c1b	kernel.asm	/^ffff800000107c1b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff800000107c1f	kernel.asm	/^ffff800000107c1f:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ffff800000107c23	kernel.asm	/^ffff800000107c23:	eb 36                	jmp    ffff800000107c5b <memcmp+0x5b>$/;"	l
ffff800000107c25	kernel.asm	/^ffff800000107c25:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000107c29	kernel.asm	/^ffff800000107c29:	0f b6 10             	movzbl (%rax),%edx$/;"	l
ffff800000107c2c	kernel.asm	/^ffff800000107c2c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000107c30	kernel.asm	/^ffff800000107c30:	0f b6 00             	movzbl (%rax),%eax$/;"	l
ffff800000107c33	kernel.asm	/^ffff800000107c33:	38 c2                	cmp    %al,%dl$/;"	l
ffff800000107c35	kernel.asm	/^ffff800000107c35:	74 1a                	je     ffff800000107c51 <memcmp+0x51>$/;"	l
ffff800000107c37	kernel.asm	/^ffff800000107c37:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000107c3b	kernel.asm	/^ffff800000107c3b:	0f b6 00             	movzbl (%rax),%eax$/;"	l
ffff800000107c3e	kernel.asm	/^ffff800000107c3e:	0f b6 d0             	movzbl %al,%edx$/;"	l
ffff800000107c41	kernel.asm	/^ffff800000107c41:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000107c45	kernel.asm	/^ffff800000107c45:	0f b6 00             	movzbl (%rax),%eax$/;"	l
ffff800000107c48	kernel.asm	/^ffff800000107c48:	0f b6 c0             	movzbl %al,%eax$/;"	l
ffff800000107c4b	kernel.asm	/^ffff800000107c4b:	29 c2                	sub    %eax,%edx$/;"	l
ffff800000107c4d	kernel.asm	/^ffff800000107c4d:	89 d0                	mov    %edx,%eax$/;"	l
ffff800000107c4f	kernel.asm	/^ffff800000107c4f:	eb 1c                	jmp    ffff800000107c6d <memcmp+0x6d>$/;"	l
ffff800000107c51	kernel.asm	/^ffff800000107c51:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)$/;"	l
ffff800000107c56	kernel.asm	/^ffff800000107c56:	48 83 45 f0 01       	addq   $0x1,-0x10(%rbp)$/;"	l
ffff800000107c5b	kernel.asm	/^ffff800000107c5b:	8b 45 dc             	mov    -0x24(%rbp),%eax$/;"	l
ffff800000107c5e	kernel.asm	/^ffff800000107c5e:	8d 50 ff             	lea    -0x1(%rax),%edx$/;"	l
ffff800000107c61	kernel.asm	/^ffff800000107c61:	89 55 dc             	mov    %edx,-0x24(%rbp)$/;"	l
ffff800000107c64	kernel.asm	/^ffff800000107c64:	85 c0                	test   %eax,%eax$/;"	l
ffff800000107c66	kernel.asm	/^ffff800000107c66:	75 bd                	jne    ffff800000107c25 <memcmp+0x25>$/;"	l
ffff800000107c68	kernel.asm	/^ffff800000107c68:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000107c6d	kernel.asm	/^ffff800000107c6d:	c9                   	leaveq $/;"	l
ffff800000107c6e	kernel.asm	/^ffff800000107c6e:	c3                   	retq   $/;"	l
ffff800000107c6f	kernel.asm	/^ffff800000107c6f <memmove>:$/;"	l
ffff800000107c6f	kernel.asm	/^ffff800000107c6f:	55                   	push   %rbp$/;"	l
ffff800000107c70	kernel.asm	/^ffff800000107c70:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000107c73	kernel.asm	/^ffff800000107c73:	48 83 ec 28          	sub    $0x28,%rsp$/;"	l
ffff800000107c77	kernel.asm	/^ffff800000107c77:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
ffff800000107c7b	kernel.asm	/^ffff800000107c7b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)$/;"	l
ffff800000107c7f	kernel.asm	/^ffff800000107c7f:	89 55 dc             	mov    %edx,-0x24(%rbp)$/;"	l
ffff800000107c82	kernel.asm	/^ffff800000107c82:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff800000107c86	kernel.asm	/^ffff800000107c86:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff800000107c8a	kernel.asm	/^ffff800000107c8a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000107c8e	kernel.asm	/^ffff800000107c8e:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ffff800000107c92	kernel.asm	/^ffff800000107c92:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000107c96	kernel.asm	/^ffff800000107c96:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax$/;"	l
ffff800000107c9a	kernel.asm	/^ffff800000107c9a:	73 63                	jae    ffff800000107cff <memmove+0x90>$/;"	l
ffff800000107c9c	kernel.asm	/^ffff800000107c9c:	8b 55 dc             	mov    -0x24(%rbp),%edx$/;"	l
ffff800000107c9f	kernel.asm	/^ffff800000107c9f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000107ca3	kernel.asm	/^ffff800000107ca3:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff800000107ca6	kernel.asm	/^ffff800000107ca6:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax$/;"	l
ffff800000107caa	kernel.asm	/^ffff800000107caa:	76 53                	jbe    ffff800000107cff <memmove+0x90>$/;"	l
ffff800000107cac	kernel.asm	/^ffff800000107cac:	8b 45 dc             	mov    -0x24(%rbp),%eax$/;"	l
ffff800000107caf	kernel.asm	/^ffff800000107caf:	48 01 45 f8          	add    %rax,-0x8(%rbp)$/;"	l
ffff800000107cb3	kernel.asm	/^ffff800000107cb3:	8b 45 dc             	mov    -0x24(%rbp),%eax$/;"	l
ffff800000107cb6	kernel.asm	/^ffff800000107cb6:	48 01 45 f0          	add    %rax,-0x10(%rbp)$/;"	l
ffff800000107cba	kernel.asm	/^ffff800000107cba:	eb 17                	jmp    ffff800000107cd3 <memmove+0x64>$/;"	l
ffff800000107cbc	kernel.asm	/^ffff800000107cbc:	48 83 6d f0 01       	subq   $0x1,-0x10(%rbp)$/;"	l
ffff800000107cc1	kernel.asm	/^ffff800000107cc1:	48 83 6d f8 01       	subq   $0x1,-0x8(%rbp)$/;"	l
ffff800000107cc6	kernel.asm	/^ffff800000107cc6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000107cca	kernel.asm	/^ffff800000107cca:	0f b6 10             	movzbl (%rax),%edx$/;"	l
ffff800000107ccd	kernel.asm	/^ffff800000107ccd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000107cd1	kernel.asm	/^ffff800000107cd1:	88 10                	mov    %dl,(%rax)$/;"	l
ffff800000107cd3	kernel.asm	/^ffff800000107cd3:	8b 45 dc             	mov    -0x24(%rbp),%eax$/;"	l
ffff800000107cd6	kernel.asm	/^ffff800000107cd6:	8d 50 ff             	lea    -0x1(%rax),%edx$/;"	l
ffff800000107cd9	kernel.asm	/^ffff800000107cd9:	89 55 dc             	mov    %edx,-0x24(%rbp)$/;"	l
ffff800000107cdc	kernel.asm	/^ffff800000107cdc:	85 c0                	test   %eax,%eax$/;"	l
ffff800000107cde	kernel.asm	/^ffff800000107cde:	75 dc                	jne    ffff800000107cbc <memmove+0x4d>$/;"	l
ffff800000107ce0	kernel.asm	/^ffff800000107ce0:	eb 2a                	jmp    ffff800000107d0c <memmove+0x9d>$/;"	l
ffff800000107ce2	kernel.asm	/^ffff800000107ce2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000107ce6	kernel.asm	/^ffff800000107ce6:	48 8d 50 01          	lea    0x1(%rax),%rdx$/;"	l
ffff800000107cea	kernel.asm	/^ffff800000107cea:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)$/;"	l
ffff800000107cee	kernel.asm	/^ffff800000107cee:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx$/;"	l
ffff800000107cf2	kernel.asm	/^ffff800000107cf2:	48 8d 4a 01          	lea    0x1(%rdx),%rcx$/;"	l
ffff800000107cf6	kernel.asm	/^ffff800000107cf6:	48 89 4d f8          	mov    %rcx,-0x8(%rbp)$/;"	l
ffff800000107cfa	kernel.asm	/^ffff800000107cfa:	0f b6 12             	movzbl (%rdx),%edx$/;"	l
ffff800000107cfd	kernel.asm	/^ffff800000107cfd:	88 10                	mov    %dl,(%rax)$/;"	l
ffff800000107cff	kernel.asm	/^ffff800000107cff:	8b 45 dc             	mov    -0x24(%rbp),%eax$/;"	l
ffff800000107d02	kernel.asm	/^ffff800000107d02:	8d 50 ff             	lea    -0x1(%rax),%edx$/;"	l
ffff800000107d05	kernel.asm	/^ffff800000107d05:	89 55 dc             	mov    %edx,-0x24(%rbp)$/;"	l
ffff800000107d08	kernel.asm	/^ffff800000107d08:	85 c0                	test   %eax,%eax$/;"	l
ffff800000107d0a	kernel.asm	/^ffff800000107d0a:	75 d6                	jne    ffff800000107ce2 <memmove+0x73>$/;"	l
ffff800000107d0c	kernel.asm	/^ffff800000107d0c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000107d10	kernel.asm	/^ffff800000107d10:	c9                   	leaveq $/;"	l
ffff800000107d11	kernel.asm	/^ffff800000107d11:	c3                   	retq   $/;"	l
ffff800000107d12	kernel.asm	/^ffff800000107d12 <memcpy>:$/;"	l
ffff800000107d12	kernel.asm	/^ffff800000107d12:	55                   	push   %rbp$/;"	l
ffff800000107d13	kernel.asm	/^ffff800000107d13:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000107d16	kernel.asm	/^ffff800000107d16:	48 83 ec 18          	sub    $0x18,%rsp$/;"	l
ffff800000107d1a	kernel.asm	/^ffff800000107d1a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)$/;"	l
ffff800000107d1e	kernel.asm	/^ffff800000107d1e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)$/;"	l
ffff800000107d22	kernel.asm	/^ffff800000107d22:	89 55 ec             	mov    %edx,-0x14(%rbp)$/;"	l
ffff800000107d25	kernel.asm	/^ffff800000107d25:	8b 55 ec             	mov    -0x14(%rbp),%edx$/;"	l
ffff800000107d28	kernel.asm	/^ffff800000107d28:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx$/;"	l
ffff800000107d2c	kernel.asm	/^ffff800000107d2c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000107d30	kernel.asm	/^ffff800000107d30:	48 89 ce             	mov    %rcx,%rsi$/;"	l
ffff800000107d33	kernel.asm	/^ffff800000107d33:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000107d36	kernel.asm	/^ffff800000107d36:	48 b8 6f 7c 10 00 00 	movabs $0xffff800000107c6f,%rax$/;"	l
ffff800000107d3d	kernel.asm	/^ffff800000107d3d:	80 ff ff $/;"	l
ffff800000107d40	kernel.asm	/^ffff800000107d40:	ff d0                	callq  *%rax$/;"	l
ffff800000107d42	kernel.asm	/^ffff800000107d42:	c9                   	leaveq $/;"	l
ffff800000107d43	kernel.asm	/^ffff800000107d43:	c3                   	retq   $/;"	l
ffff800000107d44	kernel.asm	/^ffff800000107d44 <strncmp>:$/;"	l
ffff800000107d44	kernel.asm	/^ffff800000107d44:	55                   	push   %rbp$/;"	l
ffff800000107d45	kernel.asm	/^ffff800000107d45:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000107d48	kernel.asm	/^ffff800000107d48:	48 83 ec 18          	sub    $0x18,%rsp$/;"	l
ffff800000107d4c	kernel.asm	/^ffff800000107d4c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)$/;"	l
ffff800000107d50	kernel.asm	/^ffff800000107d50:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)$/;"	l
ffff800000107d54	kernel.asm	/^ffff800000107d54:	89 55 ec             	mov    %edx,-0x14(%rbp)$/;"	l
ffff800000107d57	kernel.asm	/^ffff800000107d57:	eb 0e                	jmp    ffff800000107d67 <strncmp+0x23>$/;"	l
ffff800000107d59	kernel.asm	/^ffff800000107d59:	83 6d ec 01          	subl   $0x1,-0x14(%rbp)$/;"	l
ffff800000107d5d	kernel.asm	/^ffff800000107d5d:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)$/;"	l
ffff800000107d62	kernel.asm	/^ffff800000107d62:	48 83 45 f0 01       	addq   $0x1,-0x10(%rbp)$/;"	l
ffff800000107d67	kernel.asm	/^ffff800000107d67:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)$/;"	l
ffff800000107d6b	kernel.asm	/^ffff800000107d6b:	74 1d                	je     ffff800000107d8a <strncmp+0x46>$/;"	l
ffff800000107d6d	kernel.asm	/^ffff800000107d6d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000107d71	kernel.asm	/^ffff800000107d71:	0f b6 00             	movzbl (%rax),%eax$/;"	l
ffff800000107d74	kernel.asm	/^ffff800000107d74:	84 c0                	test   %al,%al$/;"	l
ffff800000107d76	kernel.asm	/^ffff800000107d76:	74 12                	je     ffff800000107d8a <strncmp+0x46>$/;"	l
ffff800000107d78	kernel.asm	/^ffff800000107d78:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000107d7c	kernel.asm	/^ffff800000107d7c:	0f b6 10             	movzbl (%rax),%edx$/;"	l
ffff800000107d7f	kernel.asm	/^ffff800000107d7f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000107d83	kernel.asm	/^ffff800000107d83:	0f b6 00             	movzbl (%rax),%eax$/;"	l
ffff800000107d86	kernel.asm	/^ffff800000107d86:	38 c2                	cmp    %al,%dl$/;"	l
ffff800000107d88	kernel.asm	/^ffff800000107d88:	74 cf                	je     ffff800000107d59 <strncmp+0x15>$/;"	l
ffff800000107d8a	kernel.asm	/^ffff800000107d8a:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)$/;"	l
ffff800000107d8e	kernel.asm	/^ffff800000107d8e:	75 07                	jne    ffff800000107d97 <strncmp+0x53>$/;"	l
ffff800000107d90	kernel.asm	/^ffff800000107d90:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000107d95	kernel.asm	/^ffff800000107d95:	eb 18                	jmp    ffff800000107daf <strncmp+0x6b>$/;"	l
ffff800000107d97	kernel.asm	/^ffff800000107d97:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000107d9b	kernel.asm	/^ffff800000107d9b:	0f b6 00             	movzbl (%rax),%eax$/;"	l
ffff800000107d9e	kernel.asm	/^ffff800000107d9e:	0f b6 d0             	movzbl %al,%edx$/;"	l
ffff800000107da1	kernel.asm	/^ffff800000107da1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000107da5	kernel.asm	/^ffff800000107da5:	0f b6 00             	movzbl (%rax),%eax$/;"	l
ffff800000107da8	kernel.asm	/^ffff800000107da8:	0f b6 c0             	movzbl %al,%eax$/;"	l
ffff800000107dab	kernel.asm	/^ffff800000107dab:	29 c2                	sub    %eax,%edx$/;"	l
ffff800000107dad	kernel.asm	/^ffff800000107dad:	89 d0                	mov    %edx,%eax$/;"	l
ffff800000107daf	kernel.asm	/^ffff800000107daf:	c9                   	leaveq $/;"	l
ffff800000107db0	kernel.asm	/^ffff800000107db0:	c3                   	retq   $/;"	l
ffff800000107db1	kernel.asm	/^ffff800000107db1 <strncpy>:$/;"	l
ffff800000107db1	kernel.asm	/^ffff800000107db1:	55                   	push   %rbp$/;"	l
ffff800000107db2	kernel.asm	/^ffff800000107db2:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000107db5	kernel.asm	/^ffff800000107db5:	48 83 ec 28          	sub    $0x28,%rsp$/;"	l
ffff800000107db9	kernel.asm	/^ffff800000107db9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
ffff800000107dbd	kernel.asm	/^ffff800000107dbd:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)$/;"	l
ffff800000107dc1	kernel.asm	/^ffff800000107dc1:	89 55 dc             	mov    %edx,-0x24(%rbp)$/;"	l
ffff800000107dc4	kernel.asm	/^ffff800000107dc4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000107dc8	kernel.asm	/^ffff800000107dc8:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff800000107dcc	kernel.asm	/^ffff800000107dcc:	90                   	nop$/;"	l
ffff800000107dcd	kernel.asm	/^ffff800000107dcd:	8b 45 dc             	mov    -0x24(%rbp),%eax$/;"	l
ffff800000107dd0	kernel.asm	/^ffff800000107dd0:	8d 50 ff             	lea    -0x1(%rax),%edx$/;"	l
ffff800000107dd3	kernel.asm	/^ffff800000107dd3:	89 55 dc             	mov    %edx,-0x24(%rbp)$/;"	l
ffff800000107dd6	kernel.asm	/^ffff800000107dd6:	85 c0                	test   %eax,%eax$/;"	l
ffff800000107dd8	kernel.asm	/^ffff800000107dd8:	7e 35                	jle    ffff800000107e0f <strncpy+0x5e>$/;"	l
ffff800000107dda	kernel.asm	/^ffff800000107dda:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000107dde	kernel.asm	/^ffff800000107dde:	48 8d 50 01          	lea    0x1(%rax),%rdx$/;"	l
ffff800000107de2	kernel.asm	/^ffff800000107de2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)$/;"	l
ffff800000107de6	kernel.asm	/^ffff800000107de6:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx$/;"	l
ffff800000107dea	kernel.asm	/^ffff800000107dea:	48 8d 4a 01          	lea    0x1(%rdx),%rcx$/;"	l
ffff800000107dee	kernel.asm	/^ffff800000107dee:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)$/;"	l
ffff800000107df2	kernel.asm	/^ffff800000107df2:	0f b6 12             	movzbl (%rdx),%edx$/;"	l
ffff800000107df5	kernel.asm	/^ffff800000107df5:	88 10                	mov    %dl,(%rax)$/;"	l
ffff800000107df7	kernel.asm	/^ffff800000107df7:	0f b6 00             	movzbl (%rax),%eax$/;"	l
ffff800000107dfa	kernel.asm	/^ffff800000107dfa:	84 c0                	test   %al,%al$/;"	l
ffff800000107dfc	kernel.asm	/^ffff800000107dfc:	75 cf                	jne    ffff800000107dcd <strncpy+0x1c>$/;"	l
ffff800000107dfe	kernel.asm	/^ffff800000107dfe:	eb 0f                	jmp    ffff800000107e0f <strncpy+0x5e>$/;"	l
ffff800000107e00	kernel.asm	/^ffff800000107e00:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000107e04	kernel.asm	/^ffff800000107e04:	48 8d 50 01          	lea    0x1(%rax),%rdx$/;"	l
ffff800000107e08	kernel.asm	/^ffff800000107e08:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)$/;"	l
ffff800000107e0c	kernel.asm	/^ffff800000107e0c:	c6 00 00             	movb   $0x0,(%rax)$/;"	l
ffff800000107e0f	kernel.asm	/^ffff800000107e0f:	8b 45 dc             	mov    -0x24(%rbp),%eax$/;"	l
ffff800000107e12	kernel.asm	/^ffff800000107e12:	8d 50 ff             	lea    -0x1(%rax),%edx$/;"	l
ffff800000107e15	kernel.asm	/^ffff800000107e15:	89 55 dc             	mov    %edx,-0x24(%rbp)$/;"	l
ffff800000107e18	kernel.asm	/^ffff800000107e18:	85 c0                	test   %eax,%eax$/;"	l
ffff800000107e1a	kernel.asm	/^ffff800000107e1a:	7f e4                	jg     ffff800000107e00 <strncpy+0x4f>$/;"	l
ffff800000107e1c	kernel.asm	/^ffff800000107e1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000107e20	kernel.asm	/^ffff800000107e20:	c9                   	leaveq $/;"	l
ffff800000107e21	kernel.asm	/^ffff800000107e21:	c3                   	retq   $/;"	l
ffff800000107e22	kernel.asm	/^ffff800000107e22 <safestrcpy>:$/;"	l
ffff800000107e22	kernel.asm	/^ffff800000107e22:	55                   	push   %rbp$/;"	l
ffff800000107e23	kernel.asm	/^ffff800000107e23:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000107e26	kernel.asm	/^ffff800000107e26:	48 83 ec 28          	sub    $0x28,%rsp$/;"	l
ffff800000107e2a	kernel.asm	/^ffff800000107e2a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
ffff800000107e2e	kernel.asm	/^ffff800000107e2e:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)$/;"	l
ffff800000107e32	kernel.asm	/^ffff800000107e32:	89 55 dc             	mov    %edx,-0x24(%rbp)$/;"	l
ffff800000107e35	kernel.asm	/^ffff800000107e35:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000107e39	kernel.asm	/^ffff800000107e39:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff800000107e3d	kernel.asm	/^ffff800000107e3d:	83 7d dc 00          	cmpl   $0x0,-0x24(%rbp)$/;"	l
ffff800000107e41	kernel.asm	/^ffff800000107e41:	7f 06                	jg     ffff800000107e49 <safestrcpy+0x27>$/;"	l
ffff800000107e43	kernel.asm	/^ffff800000107e43:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000107e47	kernel.asm	/^ffff800000107e47:	eb 39                	jmp    ffff800000107e82 <safestrcpy+0x60>$/;"	l
ffff800000107e49	kernel.asm	/^ffff800000107e49:	83 6d dc 01          	subl   $0x1,-0x24(%rbp)$/;"	l
ffff800000107e4d	kernel.asm	/^ffff800000107e4d:	83 7d dc 00          	cmpl   $0x0,-0x24(%rbp)$/;"	l
ffff800000107e51	kernel.asm	/^ffff800000107e51:	7e 24                	jle    ffff800000107e77 <safestrcpy+0x55>$/;"	l
ffff800000107e53	kernel.asm	/^ffff800000107e53:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000107e57	kernel.asm	/^ffff800000107e57:	48 8d 50 01          	lea    0x1(%rax),%rdx$/;"	l
ffff800000107e5b	kernel.asm	/^ffff800000107e5b:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)$/;"	l
ffff800000107e5f	kernel.asm	/^ffff800000107e5f:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx$/;"	l
ffff800000107e63	kernel.asm	/^ffff800000107e63:	48 8d 4a 01          	lea    0x1(%rdx),%rcx$/;"	l
ffff800000107e67	kernel.asm	/^ffff800000107e67:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)$/;"	l
ffff800000107e6b	kernel.asm	/^ffff800000107e6b:	0f b6 12             	movzbl (%rdx),%edx$/;"	l
ffff800000107e6e	kernel.asm	/^ffff800000107e6e:	88 10                	mov    %dl,(%rax)$/;"	l
ffff800000107e70	kernel.asm	/^ffff800000107e70:	0f b6 00             	movzbl (%rax),%eax$/;"	l
ffff800000107e73	kernel.asm	/^ffff800000107e73:	84 c0                	test   %al,%al$/;"	l
ffff800000107e75	kernel.asm	/^ffff800000107e75:	75 d2                	jne    ffff800000107e49 <safestrcpy+0x27>$/;"	l
ffff800000107e77	kernel.asm	/^ffff800000107e77:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000107e7b	kernel.asm	/^ffff800000107e7b:	c6 00 00             	movb   $0x0,(%rax)$/;"	l
ffff800000107e7e	kernel.asm	/^ffff800000107e7e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000107e82	kernel.asm	/^ffff800000107e82:	c9                   	leaveq $/;"	l
ffff800000107e83	kernel.asm	/^ffff800000107e83:	c3                   	retq   $/;"	l
ffff800000107e84	kernel.asm	/^ffff800000107e84 <strlen>:$/;"	l
ffff800000107e84	kernel.asm	/^ffff800000107e84:	55                   	push   %rbp$/;"	l
ffff800000107e85	kernel.asm	/^ffff800000107e85:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000107e88	kernel.asm	/^ffff800000107e88:	48 83 ec 18          	sub    $0x18,%rsp$/;"	l
ffff800000107e8c	kernel.asm	/^ffff800000107e8c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
ffff800000107e90	kernel.asm	/^ffff800000107e90:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)$/;"	l
ffff800000107e97	kernel.asm	/^ffff800000107e97:	eb 04                	jmp    ffff800000107e9d <strlen+0x19>$/;"	l
ffff800000107e99	kernel.asm	/^ffff800000107e99:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)$/;"	l
ffff800000107e9d	kernel.asm	/^ffff800000107e9d:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff800000107ea0	kernel.asm	/^ffff800000107ea0:	48 63 d0             	movslq %eax,%rdx$/;"	l
ffff800000107ea3	kernel.asm	/^ffff800000107ea3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000107ea7	kernel.asm	/^ffff800000107ea7:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff800000107eaa	kernel.asm	/^ffff800000107eaa:	0f b6 00             	movzbl (%rax),%eax$/;"	l
ffff800000107ead	kernel.asm	/^ffff800000107ead:	84 c0                	test   %al,%al$/;"	l
ffff800000107eaf	kernel.asm	/^ffff800000107eaf:	75 e8                	jne    ffff800000107e99 <strlen+0x15>$/;"	l
ffff800000107eb1	kernel.asm	/^ffff800000107eb1:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff800000107eb4	kernel.asm	/^ffff800000107eb4:	c9                   	leaveq $/;"	l
ffff800000107eb5	kernel.asm	/^ffff800000107eb5:	c3                   	retq   $/;"	l
ffff800000107eb6	kernel.asm	/^ffff800000107eb6 <swtch>:$/;"	l
ffff800000107eb6	kernel.asm	/^ffff800000107eb6:	55                   	push   %rbp$/;"	l
ffff800000107eb7	kernel.asm	/^ffff800000107eb7:	53                   	push   %rbx$/;"	l
ffff800000107eb8	kernel.asm	/^ffff800000107eb8:	41 53                	push   %r11$/;"	l
ffff800000107eba	kernel.asm	/^ffff800000107eba:	41 54                	push   %r12$/;"	l
ffff800000107ebc	kernel.asm	/^ffff800000107ebc:	41 55                	push   %r13$/;"	l
ffff800000107ebe	kernel.asm	/^ffff800000107ebe:	41 56                	push   %r14$/;"	l
ffff800000107ec0	kernel.asm	/^ffff800000107ec0:	41 57                	push   %r15$/;"	l
ffff800000107ec2	kernel.asm	/^ffff800000107ec2:	48 89 27             	mov    %rsp,(%rdi)$/;"	l
ffff800000107ec5	kernel.asm	/^ffff800000107ec5:	48 89 f4             	mov    %rsi,%rsp$/;"	l
ffff800000107ec8	kernel.asm	/^ffff800000107ec8:	41 5f                	pop    %r15$/;"	l
ffff800000107eca	kernel.asm	/^ffff800000107eca:	41 5e                	pop    %r14$/;"	l
ffff800000107ecc	kernel.asm	/^ffff800000107ecc:	41 5d                	pop    %r13$/;"	l
ffff800000107ece	kernel.asm	/^ffff800000107ece:	41 5c                	pop    %r12$/;"	l
ffff800000107ed0	kernel.asm	/^ffff800000107ed0:	41 5b                	pop    %r11$/;"	l
ffff800000107ed2	kernel.asm	/^ffff800000107ed2:	5b                   	pop    %rbx$/;"	l
ffff800000107ed3	kernel.asm	/^ffff800000107ed3:	5d                   	pop    %rbp$/;"	l
ffff800000107ed4	kernel.asm	/^ffff800000107ed4:	c3                   	retq   $/;"	l
ffff800000107ed5	kernel.asm	/^ffff800000107ed5 <fetchint>:$/;"	l
ffff800000107ed5	kernel.asm	/^ffff800000107ed5:	55                   	push   %rbp$/;"	l
ffff800000107ed6	kernel.asm	/^ffff800000107ed6:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000107ed9	kernel.asm	/^ffff800000107ed9:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff800000107edd	kernel.asm	/^ffff800000107edd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)$/;"	l
ffff800000107ee1	kernel.asm	/^ffff800000107ee1:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)$/;"	l
ffff800000107ee5	kernel.asm	/^ffff800000107ee5:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000107eec	kernel.asm	/^ffff800000107eec:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000107ef0	kernel.asm	/^ffff800000107ef0:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff800000107ef3	kernel.asm	/^ffff800000107ef3:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax$/;"	l
ffff800000107ef7	kernel.asm	/^ffff800000107ef7:	76 1b                	jbe    ffff800000107f14 <fetchint+0x3f>$/;"	l
ffff800000107ef9	kernel.asm	/^ffff800000107ef9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000107efd	kernel.asm	/^ffff800000107efd:	48 8d 50 04          	lea    0x4(%rax),%rdx$/;"	l
ffff800000107f01	kernel.asm	/^ffff800000107f01:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000107f08	kernel.asm	/^ffff800000107f08:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000107f0c	kernel.asm	/^ffff800000107f0c:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff800000107f0f	kernel.asm	/^ffff800000107f0f:	48 39 c2             	cmp    %rax,%rdx$/;"	l
ffff800000107f12	kernel.asm	/^ffff800000107f12:	76 07                	jbe    ffff800000107f1b <fetchint+0x46>$/;"	l
ffff800000107f14	kernel.asm	/^ffff800000107f14:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff800000107f19	kernel.asm	/^ffff800000107f19:	eb 11                	jmp    ffff800000107f2c <fetchint+0x57>$/;"	l
ffff800000107f1b	kernel.asm	/^ffff800000107f1b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000107f1f	kernel.asm	/^ffff800000107f1f:	8b 10                	mov    (%rax),%edx$/;"	l
ffff800000107f21	kernel.asm	/^ffff800000107f21:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000107f25	kernel.asm	/^ffff800000107f25:	89 10                	mov    %edx,(%rax)$/;"	l
ffff800000107f27	kernel.asm	/^ffff800000107f27:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000107f2c	kernel.asm	/^ffff800000107f2c:	c9                   	leaveq $/;"	l
ffff800000107f2d	kernel.asm	/^ffff800000107f2d:	c3                   	retq   $/;"	l
ffff800000107f2e	kernel.asm	/^ffff800000107f2e <fetchaddr>:$/;"	l
ffff800000107f2e	kernel.asm	/^ffff800000107f2e:	55                   	push   %rbp$/;"	l
ffff800000107f2f	kernel.asm	/^ffff800000107f2f:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000107f32	kernel.asm	/^ffff800000107f32:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff800000107f36	kernel.asm	/^ffff800000107f36:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)$/;"	l
ffff800000107f3a	kernel.asm	/^ffff800000107f3a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)$/;"	l
ffff800000107f3e	kernel.asm	/^ffff800000107f3e:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000107f45	kernel.asm	/^ffff800000107f45:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000107f49	kernel.asm	/^ffff800000107f49:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff800000107f4c	kernel.asm	/^ffff800000107f4c:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax$/;"	l
ffff800000107f50	kernel.asm	/^ffff800000107f50:	76 1b                	jbe    ffff800000107f6d <fetchaddr+0x3f>$/;"	l
ffff800000107f52	kernel.asm	/^ffff800000107f52:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000107f56	kernel.asm	/^ffff800000107f56:	48 8d 50 08          	lea    0x8(%rax),%rdx$/;"	l
ffff800000107f5a	kernel.asm	/^ffff800000107f5a:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000107f61	kernel.asm	/^ffff800000107f61:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000107f65	kernel.asm	/^ffff800000107f65:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff800000107f68	kernel.asm	/^ffff800000107f68:	48 39 c2             	cmp    %rax,%rdx$/;"	l
ffff800000107f6b	kernel.asm	/^ffff800000107f6b:	76 07                	jbe    ffff800000107f74 <fetchaddr+0x46>$/;"	l
ffff800000107f6d	kernel.asm	/^ffff800000107f6d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff800000107f72	kernel.asm	/^ffff800000107f72:	eb 13                	jmp    ffff800000107f87 <fetchaddr+0x59>$/;"	l
ffff800000107f74	kernel.asm	/^ffff800000107f74:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000107f78	kernel.asm	/^ffff800000107f78:	48 8b 10             	mov    (%rax),%rdx$/;"	l
ffff800000107f7b	kernel.asm	/^ffff800000107f7b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000107f7f	kernel.asm	/^ffff800000107f7f:	48 89 10             	mov    %rdx,(%rax)$/;"	l
ffff800000107f82	kernel.asm	/^ffff800000107f82:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000107f87	kernel.asm	/^ffff800000107f87:	c9                   	leaveq $/;"	l
ffff800000107f88	kernel.asm	/^ffff800000107f88:	c3                   	retq   $/;"	l
ffff800000107f89	kernel.asm	/^ffff800000107f89 <fetchstr>:$/;"	l
ffff800000107f89	kernel.asm	/^ffff800000107f89:	55                   	push   %rbp$/;"	l
ffff800000107f8a	kernel.asm	/^ffff800000107f8a:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000107f8d	kernel.asm	/^ffff800000107f8d:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ffff800000107f91	kernel.asm	/^ffff800000107f91:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
ffff800000107f95	kernel.asm	/^ffff800000107f95:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)$/;"	l
ffff800000107f99	kernel.asm	/^ffff800000107f99:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000107fa0	kernel.asm	/^ffff800000107fa0:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000107fa4	kernel.asm	/^ffff800000107fa4:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff800000107fa7	kernel.asm	/^ffff800000107fa7:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax$/;"	l
ffff800000107fab	kernel.asm	/^ffff800000107fab:	77 07                	ja     ffff800000107fb4 <fetchstr+0x2b>$/;"	l
ffff800000107fad	kernel.asm	/^ffff800000107fad:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff800000107fb2	kernel.asm	/^ffff800000107fb2:	eb 5c                	jmp    ffff800000108010 <fetchstr+0x87>$/;"	l
ffff800000107fb4	kernel.asm	/^ffff800000107fb4:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx$/;"	l
ffff800000107fb8	kernel.asm	/^ffff800000107fb8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff800000107fbc	kernel.asm	/^ffff800000107fbc:	48 89 10             	mov    %rdx,(%rax)$/;"	l
ffff800000107fbf	kernel.asm	/^ffff800000107fbf:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000107fc6	kernel.asm	/^ffff800000107fc6:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000107fca	kernel.asm	/^ffff800000107fca:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff800000107fcd	kernel.asm	/^ffff800000107fcd:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ffff800000107fd1	kernel.asm	/^ffff800000107fd1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff800000107fd5	kernel.asm	/^ffff800000107fd5:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff800000107fd8	kernel.asm	/^ffff800000107fd8:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff800000107fdc	kernel.asm	/^ffff800000107fdc:	eb 23                	jmp    ffff800000108001 <fetchstr+0x78>$/;"	l
ffff800000107fde	kernel.asm	/^ffff800000107fde:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000107fe2	kernel.asm	/^ffff800000107fe2:	0f b6 00             	movzbl (%rax),%eax$/;"	l
ffff800000107fe5	kernel.asm	/^ffff800000107fe5:	84 c0                	test   %al,%al$/;"	l
ffff800000107fe7	kernel.asm	/^ffff800000107fe7:	75 13                	jne    ffff800000107ffc <fetchstr+0x73>$/;"	l
ffff800000107fe9	kernel.asm	/^ffff800000107fe9:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx$/;"	l
ffff800000107fed	kernel.asm	/^ffff800000107fed:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff800000107ff1	kernel.asm	/^ffff800000107ff1:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff800000107ff4	kernel.asm	/^ffff800000107ff4:	48 29 c2             	sub    %rax,%rdx$/;"	l
ffff800000107ff7	kernel.asm	/^ffff800000107ff7:	48 89 d0             	mov    %rdx,%rax$/;"	l
ffff800000107ffa	kernel.asm	/^ffff800000107ffa:	eb 14                	jmp    ffff800000108010 <fetchstr+0x87>$/;"	l
ffff800000107ffc	kernel.asm	/^ffff800000107ffc:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)$/;"	l
ffff800000108001	kernel.asm	/^ffff800000108001:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000108005	kernel.asm	/^ffff800000108005:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax$/;"	l
ffff800000108009	kernel.asm	/^ffff800000108009:	72 d3                	jb     ffff800000107fde <fetchstr+0x55>$/;"	l
ffff80000010800b	kernel.asm	/^ffff80000010800b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff800000108010	kernel.asm	/^ffff800000108010:	c9                   	leaveq $/;"	l
ffff800000108011	kernel.asm	/^ffff800000108011:	c3                   	retq   $/;"	l
ffff800000108012	kernel.asm	/^ffff800000108012 <fetcharg>:$/;"	l
ffff800000108012	kernel.asm	/^ffff800000108012:	55                   	push   %rbp$/;"	l
ffff800000108013	kernel.asm	/^ffff800000108013:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000108016	kernel.asm	/^ffff800000108016:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff80000010801a	kernel.asm	/^ffff80000010801a:	89 7d fc             	mov    %edi,-0x4(%rbp)$/;"	l
ffff80000010801d	kernel.asm	/^ffff80000010801d:	83 7d fc 05          	cmpl   $0x5,-0x4(%rbp)$/;"	l
ffff800000108021	kernel.asm	/^ffff800000108021:	0f 87 9b 00 00 00    	ja     ffff8000001080c2 <fetcharg+0xb0>$/;"	l
ffff800000108027	kernel.asm	/^ffff800000108027:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff80000010802a	kernel.asm	/^ffff80000010802a:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx$/;"	l
ffff800000108031	kernel.asm	/^ffff800000108031:	00 $/;"	l
ffff800000108032	kernel.asm	/^ffff800000108032:	48 b8 50 d9 10 00 00 	movabs $0xffff80000010d950,%rax$/;"	l
ffff800000108039	kernel.asm	/^ffff800000108039:	80 ff ff $/;"	l
ffff80000010803c	kernel.asm	/^ffff80000010803c:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff80000010803f	kernel.asm	/^ffff80000010803f:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff800000108042	kernel.asm	/^ffff800000108042:	ff e0                	jmpq   *%rax$/;"	l
ffff800000108044	kernel.asm	/^ffff800000108044:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff80000010804b	kernel.asm	/^ffff80000010804b:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff80000010804f	kernel.asm	/^ffff80000010804f:	48 8b 40 28          	mov    0x28(%rax),%rax$/;"	l
ffff800000108053	kernel.asm	/^ffff800000108053:	48 8b 40 30          	mov    0x30(%rax),%rax$/;"	l
ffff800000108057	kernel.asm	/^ffff800000108057:	eb 7f                	jmp    ffff8000001080d8 <fetcharg+0xc6>$/;"	l
ffff800000108059	kernel.asm	/^ffff800000108059:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000108060	kernel.asm	/^ffff800000108060:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000108064	kernel.asm	/^ffff800000108064:	48 8b 40 28          	mov    0x28(%rax),%rax$/;"	l
ffff800000108068	kernel.asm	/^ffff800000108068:	48 8b 40 28          	mov    0x28(%rax),%rax$/;"	l
ffff80000010806c	kernel.asm	/^ffff80000010806c:	eb 6a                	jmp    ffff8000001080d8 <fetcharg+0xc6>$/;"	l
ffff80000010806e	kernel.asm	/^ffff80000010806e:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000108075	kernel.asm	/^ffff800000108075:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000108079	kernel.asm	/^ffff800000108079:	48 8b 40 28          	mov    0x28(%rax),%rax$/;"	l
ffff80000010807d	kernel.asm	/^ffff80000010807d:	48 8b 40 18          	mov    0x18(%rax),%rax$/;"	l
ffff800000108081	kernel.asm	/^ffff800000108081:	eb 55                	jmp    ffff8000001080d8 <fetcharg+0xc6>$/;"	l
ffff800000108083	kernel.asm	/^ffff800000108083:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff80000010808a	kernel.asm	/^ffff80000010808a:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff80000010808e	kernel.asm	/^ffff80000010808e:	48 8b 40 28          	mov    0x28(%rax),%rax$/;"	l
ffff800000108092	kernel.asm	/^ffff800000108092:	48 8b 40 48          	mov    0x48(%rax),%rax$/;"	l
ffff800000108096	kernel.asm	/^ffff800000108096:	eb 40                	jmp    ffff8000001080d8 <fetcharg+0xc6>$/;"	l
ffff800000108098	kernel.asm	/^ffff800000108098:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff80000010809f	kernel.asm	/^ffff80000010809f:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff8000001080a3	kernel.asm	/^ffff8000001080a3:	48 8b 40 28          	mov    0x28(%rax),%rax$/;"	l
ffff8000001080a7	kernel.asm	/^ffff8000001080a7:	48 8b 40 38          	mov    0x38(%rax),%rax$/;"	l
ffff8000001080ab	kernel.asm	/^ffff8000001080ab:	eb 2b                	jmp    ffff8000001080d8 <fetcharg+0xc6>$/;"	l
ffff8000001080ad	kernel.asm	/^ffff8000001080ad:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff8000001080b4	kernel.asm	/^ffff8000001080b4:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff8000001080b8	kernel.asm	/^ffff8000001080b8:	48 8b 40 28          	mov    0x28(%rax),%rax$/;"	l
ffff8000001080bc	kernel.asm	/^ffff8000001080bc:	48 8b 40 40          	mov    0x40(%rax),%rax$/;"	l
ffff8000001080c0	kernel.asm	/^ffff8000001080c0:	eb 16                	jmp    ffff8000001080d8 <fetcharg+0xc6>$/;"	l
ffff8000001080c2	kernel.asm	/^ffff8000001080c2:	48 bf 40 d9 10 00 00 	movabs $0xffff80000010d940,%rdi$/;"	l
ffff8000001080c9	kernel.asm	/^ffff8000001080c9:	80 ff ff $/;"	l
ffff8000001080cc	kernel.asm	/^ffff8000001080cc:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff8000001080d3	kernel.asm	/^ffff8000001080d3:	80 ff ff $/;"	l
ffff8000001080d6	kernel.asm	/^ffff8000001080d6:	ff d0                	callq  *%rax$/;"	l
ffff8000001080d8	kernel.asm	/^ffff8000001080d8:	c9                   	leaveq $/;"	l
ffff8000001080d9	kernel.asm	/^ffff8000001080d9:	c3                   	retq   $/;"	l
ffff8000001080da	kernel.asm	/^ffff8000001080da <argint>:$/;"	l
ffff8000001080da	kernel.asm	/^ffff8000001080da:	55                   	push   %rbp$/;"	l
ffff8000001080db	kernel.asm	/^ffff8000001080db:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff8000001080de	kernel.asm	/^ffff8000001080de:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff8000001080e2	kernel.asm	/^ffff8000001080e2:	89 7d fc             	mov    %edi,-0x4(%rbp)$/;"	l
ffff8000001080e5	kernel.asm	/^ffff8000001080e5:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)$/;"	l
ffff8000001080e9	kernel.asm	/^ffff8000001080e9:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff8000001080ec	kernel.asm	/^ffff8000001080ec:	89 c7                	mov    %eax,%edi$/;"	l
ffff8000001080ee	kernel.asm	/^ffff8000001080ee:	48 b8 12 80 10 00 00 	movabs $0xffff800000108012,%rax$/;"	l
ffff8000001080f5	kernel.asm	/^ffff8000001080f5:	80 ff ff $/;"	l
ffff8000001080f8	kernel.asm	/^ffff8000001080f8:	ff d0                	callq  *%rax$/;"	l
ffff8000001080fa	kernel.asm	/^ffff8000001080fa:	89 c2                	mov    %eax,%edx$/;"	l
ffff8000001080fc	kernel.asm	/^ffff8000001080fc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000108100	kernel.asm	/^ffff800000108100:	89 10                	mov    %edx,(%rax)$/;"	l
ffff800000108102	kernel.asm	/^ffff800000108102:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000108107	kernel.asm	/^ffff800000108107:	c9                   	leaveq $/;"	l
ffff800000108108	kernel.asm	/^ffff800000108108:	c3                   	retq   $/;"	l
ffff800000108109	kernel.asm	/^ffff800000108109 <argaddr>:$/;"	l
ffff800000108109	kernel.asm	/^ffff800000108109:	55                   	push   %rbp$/;"	l
ffff80000010810a	kernel.asm	/^ffff80000010810a:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010810d	kernel.asm	/^ffff80000010810d:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff800000108111	kernel.asm	/^ffff800000108111:	89 7d fc             	mov    %edi,-0x4(%rbp)$/;"	l
ffff800000108114	kernel.asm	/^ffff800000108114:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)$/;"	l
ffff800000108118	kernel.asm	/^ffff800000108118:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff80000010811b	kernel.asm	/^ffff80000010811b:	89 c7                	mov    %eax,%edi$/;"	l
ffff80000010811d	kernel.asm	/^ffff80000010811d:	48 b8 12 80 10 00 00 	movabs $0xffff800000108012,%rax$/;"	l
ffff800000108124	kernel.asm	/^ffff800000108124:	80 ff ff $/;"	l
ffff800000108127	kernel.asm	/^ffff800000108127:	ff d0                	callq  *%rax$/;"	l
ffff800000108129	kernel.asm	/^ffff800000108129:	48 89 c2             	mov    %rax,%rdx$/;"	l
ffff80000010812c	kernel.asm	/^ffff80000010812c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000108130	kernel.asm	/^ffff800000108130:	48 89 10             	mov    %rdx,(%rax)$/;"	l
ffff800000108133	kernel.asm	/^ffff800000108133:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000108138	kernel.asm	/^ffff800000108138:	c9                   	leaveq $/;"	l
ffff800000108139	kernel.asm	/^ffff800000108139:	c3                   	retq   $/;"	l
ffff80000010813a	kernel.asm	/^ffff80000010813a <argptr>:$/;"	l
ffff80000010813a	kernel.asm	/^ffff80000010813a:	55                   	push   %rbp$/;"	l
ffff80000010813b	kernel.asm	/^ffff80000010813b:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010813e	kernel.asm	/^ffff80000010813e:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ffff800000108142	kernel.asm	/^ffff800000108142:	89 7d ec             	mov    %edi,-0x14(%rbp)$/;"	l
ffff800000108145	kernel.asm	/^ffff800000108145:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)$/;"	l
ffff800000108149	kernel.asm	/^ffff800000108149:	89 55 e8             	mov    %edx,-0x18(%rbp)$/;"	l
ffff80000010814c	kernel.asm	/^ffff80000010814c:	48 8d 55 f8          	lea    -0x8(%rbp),%rdx$/;"	l
ffff800000108150	kernel.asm	/^ffff800000108150:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
ffff800000108153	kernel.asm	/^ffff800000108153:	48 89 d6             	mov    %rdx,%rsi$/;"	l
ffff800000108156	kernel.asm	/^ffff800000108156:	89 c7                	mov    %eax,%edi$/;"	l
ffff800000108158	kernel.asm	/^ffff800000108158:	48 b8 09 81 10 00 00 	movabs $0xffff800000108109,%rax$/;"	l
ffff80000010815f	kernel.asm	/^ffff80000010815f:	80 ff ff $/;"	l
ffff800000108162	kernel.asm	/^ffff800000108162:	ff d0                	callq  *%rax$/;"	l
ffff800000108164	kernel.asm	/^ffff800000108164:	85 c0                	test   %eax,%eax$/;"	l
ffff800000108166	kernel.asm	/^ffff800000108166:	79 07                	jns    ffff80000010816f <argptr+0x35>$/;"	l
ffff800000108168	kernel.asm	/^ffff800000108168:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff80000010816d	kernel.asm	/^ffff80000010816d:	eb 59                	jmp    ffff8000001081c8 <argptr+0x8e>$/;"	l
ffff80000010816f	kernel.asm	/^ffff80000010816f:	83 7d e8 00          	cmpl   $0x0,-0x18(%rbp)$/;"	l
ffff800000108173	kernel.asm	/^ffff800000108173:	78 39                	js     ffff8000001081ae <argptr+0x74>$/;"	l
ffff800000108175	kernel.asm	/^ffff800000108175:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000108179	kernel.asm	/^ffff800000108179:	89 c2                	mov    %eax,%edx$/;"	l
ffff80000010817b	kernel.asm	/^ffff80000010817b:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000108182	kernel.asm	/^ffff800000108182:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000108186	kernel.asm	/^ffff800000108186:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff800000108189	kernel.asm	/^ffff800000108189:	48 39 c2             	cmp    %rax,%rdx$/;"	l
ffff80000010818c	kernel.asm	/^ffff80000010818c:	73 20                	jae    ffff8000001081ae <argptr+0x74>$/;"	l
ffff80000010818e	kernel.asm	/^ffff80000010818e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000108192	kernel.asm	/^ffff800000108192:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000108194	kernel.asm	/^ffff800000108194:	8b 45 e8             	mov    -0x18(%rbp),%eax$/;"	l
ffff800000108197	kernel.asm	/^ffff800000108197:	01 d0                	add    %edx,%eax$/;"	l
ffff800000108199	kernel.asm	/^ffff800000108199:	89 c2                	mov    %eax,%edx$/;"	l
ffff80000010819b	kernel.asm	/^ffff80000010819b:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff8000001081a2	kernel.asm	/^ffff8000001081a2:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff8000001081a6	kernel.asm	/^ffff8000001081a6:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff8000001081a9	kernel.asm	/^ffff8000001081a9:	48 39 c2             	cmp    %rax,%rdx$/;"	l
ffff8000001081ac	kernel.asm	/^ffff8000001081ac:	76 07                	jbe    ffff8000001081b5 <argptr+0x7b>$/;"	l
ffff8000001081ae	kernel.asm	/^ffff8000001081ae:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff8000001081b3	kernel.asm	/^ffff8000001081b3:	eb 13                	jmp    ffff8000001081c8 <argptr+0x8e>$/;"	l
ffff8000001081b5	kernel.asm	/^ffff8000001081b5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001081b9	kernel.asm	/^ffff8000001081b9:	48 89 c2             	mov    %rax,%rdx$/;"	l
ffff8000001081bc	kernel.asm	/^ffff8000001081bc:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff8000001081c0	kernel.asm	/^ffff8000001081c0:	48 89 10             	mov    %rdx,(%rax)$/;"	l
ffff8000001081c3	kernel.asm	/^ffff8000001081c3:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff8000001081c8	kernel.asm	/^ffff8000001081c8:	c9                   	leaveq $/;"	l
ffff8000001081c9	kernel.asm	/^ffff8000001081c9:	c3                   	retq   $/;"	l
ffff8000001081ca	kernel.asm	/^ffff8000001081ca <argstr>:$/;"	l
ffff8000001081ca	kernel.asm	/^ffff8000001081ca:	55                   	push   %rbp$/;"	l
ffff8000001081cb	kernel.asm	/^ffff8000001081cb:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff8000001081ce	kernel.asm	/^ffff8000001081ce:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ffff8000001081d2	kernel.asm	/^ffff8000001081d2:	89 7d ec             	mov    %edi,-0x14(%rbp)$/;"	l
ffff8000001081d5	kernel.asm	/^ffff8000001081d5:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)$/;"	l
ffff8000001081d9	kernel.asm	/^ffff8000001081d9:	48 8d 55 fc          	lea    -0x4(%rbp),%rdx$/;"	l
ffff8000001081dd	kernel.asm	/^ffff8000001081dd:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
ffff8000001081e0	kernel.asm	/^ffff8000001081e0:	48 89 d6             	mov    %rdx,%rsi$/;"	l
ffff8000001081e3	kernel.asm	/^ffff8000001081e3:	89 c7                	mov    %eax,%edi$/;"	l
ffff8000001081e5	kernel.asm	/^ffff8000001081e5:	48 b8 da 80 10 00 00 	movabs $0xffff8000001080da,%rax$/;"	l
ffff8000001081ec	kernel.asm	/^ffff8000001081ec:	80 ff ff $/;"	l
ffff8000001081ef	kernel.asm	/^ffff8000001081ef:	ff d0                	callq  *%rax$/;"	l
ffff8000001081f1	kernel.asm	/^ffff8000001081f1:	85 c0                	test   %eax,%eax$/;"	l
ffff8000001081f3	kernel.asm	/^ffff8000001081f3:	79 07                	jns    ffff8000001081fc <argstr+0x32>$/;"	l
ffff8000001081f5	kernel.asm	/^ffff8000001081f5:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff8000001081fa	kernel.asm	/^ffff8000001081fa:	eb 1b                	jmp    ffff800000108217 <argstr+0x4d>$/;"	l
ffff8000001081fc	kernel.asm	/^ffff8000001081fc:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff8000001081ff	kernel.asm	/^ffff8000001081ff:	48 98                	cltq   $/;"	l
ffff800000108201	kernel.asm	/^ffff800000108201:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx$/;"	l
ffff800000108205	kernel.asm	/^ffff800000108205:	48 89 d6             	mov    %rdx,%rsi$/;"	l
ffff800000108208	kernel.asm	/^ffff800000108208:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010820b	kernel.asm	/^ffff80000010820b:	48 b8 89 7f 10 00 00 	movabs $0xffff800000107f89,%rax$/;"	l
ffff800000108212	kernel.asm	/^ffff800000108212:	80 ff ff $/;"	l
ffff800000108215	kernel.asm	/^ffff800000108215:	ff d0                	callq  *%rax$/;"	l
ffff800000108217	kernel.asm	/^ffff800000108217:	c9                   	leaveq $/;"	l
ffff800000108218	kernel.asm	/^ffff800000108218:	c3                   	retq   $/;"	l
ffff800000108219	kernel.asm	/^ffff800000108219 <syscall>:$/;"	l
ffff800000108219	kernel.asm	/^ffff800000108219:	55                   	push   %rbp$/;"	l
ffff80000010821a	kernel.asm	/^ffff80000010821a:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010821d	kernel.asm	/^ffff80000010821d:	53                   	push   %rbx$/;"	l
ffff80000010821e	kernel.asm	/^ffff80000010821e:	48 83 ec 18          	sub    $0x18,%rsp$/;"	l
ffff800000108222	kernel.asm	/^ffff800000108222:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000108229	kernel.asm	/^ffff800000108229:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff80000010822d	kernel.asm	/^ffff80000010822d:	48 8b 40 28          	mov    0x28(%rax),%rax$/;"	l
ffff800000108231	kernel.asm	/^ffff800000108231:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff800000108234	kernel.asm	/^ffff800000108234:	89 45 ec             	mov    %eax,-0x14(%rbp)$/;"	l
ffff800000108237	kernel.asm	/^ffff800000108237:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)$/;"	l
ffff80000010823b	kernel.asm	/^ffff80000010823b:	7e 4b                	jle    ffff800000108288 <syscall+0x6f>$/;"	l
ffff80000010823d	kernel.asm	/^ffff80000010823d:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
ffff800000108240	kernel.asm	/^ffff800000108240:	83 f8 17             	cmp    $0x17,%eax$/;"	l
ffff800000108243	kernel.asm	/^ffff800000108243:	77 43                	ja     ffff800000108288 <syscall+0x6f>$/;"	l
ffff800000108245	kernel.asm	/^ffff800000108245:	48 b8 c0 e5 10 00 00 	movabs $0xffff80000010e5c0,%rax$/;"	l
ffff80000010824c	kernel.asm	/^ffff80000010824c:	80 ff ff $/;"	l
ffff80000010824f	kernel.asm	/^ffff80000010824f:	8b 55 ec             	mov    -0x14(%rbp),%edx$/;"	l
ffff800000108252	kernel.asm	/^ffff800000108252:	48 63 d2             	movslq %edx,%rdx$/;"	l
ffff800000108255	kernel.asm	/^ffff800000108255:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax$/;"	l
ffff800000108259	kernel.asm	/^ffff800000108259:	48 85 c0             	test   %rax,%rax$/;"	l
ffff80000010825c	kernel.asm	/^ffff80000010825c:	74 2a                	je     ffff800000108288 <syscall+0x6f>$/;"	l
ffff80000010825e	kernel.asm	/^ffff80000010825e:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000108265	kernel.asm	/^ffff800000108265:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000108269	kernel.asm	/^ffff800000108269:	48 8b 58 28          	mov    0x28(%rax),%rbx$/;"	l
ffff80000010826d	kernel.asm	/^ffff80000010826d:	48 b8 c0 e5 10 00 00 	movabs $0xffff80000010e5c0,%rax$/;"	l
ffff800000108274	kernel.asm	/^ffff800000108274:	80 ff ff $/;"	l
ffff800000108277	kernel.asm	/^ffff800000108277:	8b 55 ec             	mov    -0x14(%rbp),%edx$/;"	l
ffff80000010827a	kernel.asm	/^ffff80000010827a:	48 63 d2             	movslq %edx,%rdx$/;"	l
ffff80000010827d	kernel.asm	/^ffff80000010827d:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax$/;"	l
ffff800000108281	kernel.asm	/^ffff800000108281:	ff d0                	callq  *%rax$/;"	l
ffff800000108283	kernel.asm	/^ffff800000108283:	48 89 03             	mov    %rax,(%rbx)$/;"	l
ffff800000108286	kernel.asm	/^ffff800000108286:	eb 5c                	jmp    ffff8000001082e4 <syscall+0xcb>$/;"	l
ffff800000108288	kernel.asm	/^ffff800000108288:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff80000010828f	kernel.asm	/^ffff80000010828f:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000108293	kernel.asm	/^ffff800000108293:	48 8d b0 d0 00 00 00 	lea    0xd0(%rax),%rsi$/;"	l
ffff80000010829a	kernel.asm	/^ffff80000010829a:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff8000001082a1	kernel.asm	/^ffff8000001082a1:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff8000001082a5	kernel.asm	/^ffff8000001082a5:	8b 40 1c             	mov    0x1c(%rax),%eax$/;"	l
ffff8000001082a8	kernel.asm	/^ffff8000001082a8:	8b 55 ec             	mov    -0x14(%rbp),%edx$/;"	l
ffff8000001082ab	kernel.asm	/^ffff8000001082ab:	89 d1                	mov    %edx,%ecx$/;"	l
ffff8000001082ad	kernel.asm	/^ffff8000001082ad:	48 89 f2             	mov    %rsi,%rdx$/;"	l
ffff8000001082b0	kernel.asm	/^ffff8000001082b0:	89 c6                	mov    %eax,%esi$/;"	l
ffff8000001082b2	kernel.asm	/^ffff8000001082b2:	48 bf 80 d9 10 00 00 	movabs $0xffff80000010d980,%rdi$/;"	l
ffff8000001082b9	kernel.asm	/^ffff8000001082b9:	80 ff ff $/;"	l
ffff8000001082bc	kernel.asm	/^ffff8000001082bc:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff8000001082c1	kernel.asm	/^ffff8000001082c1:	49 b8 ac 07 10 00 00 	movabs $0xffff8000001007ac,%r8$/;"	l
ffff8000001082c8	kernel.asm	/^ffff8000001082c8:	80 ff ff $/;"	l
ffff8000001082cb	kernel.asm	/^ffff8000001082cb:	41 ff d0             	callq  *%r8$/;"	l
ffff8000001082ce	kernel.asm	/^ffff8000001082ce:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff8000001082d5	kernel.asm	/^ffff8000001082d5:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff8000001082d9	kernel.asm	/^ffff8000001082d9:	48 8b 40 28          	mov    0x28(%rax),%rax$/;"	l
ffff8000001082dd	kernel.asm	/^ffff8000001082dd:	48 c7 00 ff ff ff ff 	movq   $0xffffffffffffffff,(%rax)$/;"	l
ffff8000001082e4	kernel.asm	/^ffff8000001082e4:	90                   	nop$/;"	l
ffff8000001082e5	kernel.asm	/^ffff8000001082e5:	48 83 c4 18          	add    $0x18,%rsp$/;"	l
ffff8000001082e9	kernel.asm	/^ffff8000001082e9:	5b                   	pop    %rbx$/;"	l
ffff8000001082ea	kernel.asm	/^ffff8000001082ea:	5d                   	pop    %rbp$/;"	l
ffff8000001082eb	kernel.asm	/^ffff8000001082eb:	c3                   	retq   $/;"	l
ffff8000001082ec	kernel.asm	/^ffff8000001082ec <argfd>:$/;"	l
ffff8000001082ec	kernel.asm	/^ffff8000001082ec:	55                   	push   %rbp$/;"	l
ffff8000001082ed	kernel.asm	/^ffff8000001082ed:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff8000001082f0	kernel.asm	/^ffff8000001082f0:	48 83 ec 30          	sub    $0x30,%rsp$/;"	l
ffff8000001082f4	kernel.asm	/^ffff8000001082f4:	89 7d ec             	mov    %edi,-0x14(%rbp)$/;"	l
ffff8000001082f7	kernel.asm	/^ffff8000001082f7:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)$/;"	l
ffff8000001082fb	kernel.asm	/^ffff8000001082fb:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)$/;"	l
ffff8000001082ff	kernel.asm	/^ffff8000001082ff:	48 8d 55 f4          	lea    -0xc(%rbp),%rdx$/;"	l
ffff800000108303	kernel.asm	/^ffff800000108303:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
ffff800000108306	kernel.asm	/^ffff800000108306:	48 89 d6             	mov    %rdx,%rsi$/;"	l
ffff800000108309	kernel.asm	/^ffff800000108309:	89 c7                	mov    %eax,%edi$/;"	l
ffff80000010830b	kernel.asm	/^ffff80000010830b:	48 b8 da 80 10 00 00 	movabs $0xffff8000001080da,%rax$/;"	l
ffff800000108312	kernel.asm	/^ffff800000108312:	80 ff ff $/;"	l
ffff800000108315	kernel.asm	/^ffff800000108315:	ff d0                	callq  *%rax$/;"	l
ffff800000108317	kernel.asm	/^ffff800000108317:	85 c0                	test   %eax,%eax$/;"	l
ffff800000108319	kernel.asm	/^ffff800000108319:	79 07                	jns    ffff800000108322 <argfd+0x36>$/;"	l
ffff80000010831b	kernel.asm	/^ffff80000010831b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff800000108320	kernel.asm	/^ffff800000108320:	eb 62                	jmp    ffff800000108384 <argfd+0x98>$/;"	l
ffff800000108322	kernel.asm	/^ffff800000108322:	8b 45 f4             	mov    -0xc(%rbp),%eax$/;"	l
ffff800000108325	kernel.asm	/^ffff800000108325:	85 c0                	test   %eax,%eax$/;"	l
ffff800000108327	kernel.asm	/^ffff800000108327:	78 2d                	js     ffff800000108356 <argfd+0x6a>$/;"	l
ffff800000108329	kernel.asm	/^ffff800000108329:	8b 45 f4             	mov    -0xc(%rbp),%eax$/;"	l
ffff80000010832c	kernel.asm	/^ffff80000010832c:	83 f8 0f             	cmp    $0xf,%eax$/;"	l
ffff80000010832f	kernel.asm	/^ffff80000010832f:	7f 25                	jg     ffff800000108356 <argfd+0x6a>$/;"	l
ffff800000108331	kernel.asm	/^ffff800000108331:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000108338	kernel.asm	/^ffff800000108338:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff80000010833c	kernel.asm	/^ffff80000010833c:	8b 55 f4             	mov    -0xc(%rbp),%edx$/;"	l
ffff80000010833f	kernel.asm	/^ffff80000010833f:	48 63 d2             	movslq %edx,%rdx$/;"	l
ffff800000108342	kernel.asm	/^ffff800000108342:	48 83 c2 08          	add    $0x8,%rdx$/;"	l
ffff800000108346	kernel.asm	/^ffff800000108346:	48 8b 44 d0 08       	mov    0x8(%rax,%rdx,8),%rax$/;"	l
ffff80000010834b	kernel.asm	/^ffff80000010834b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff80000010834f	kernel.asm	/^ffff80000010834f:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)$/;"	l
ffff800000108354	kernel.asm	/^ffff800000108354:	75 07                	jne    ffff80000010835d <argfd+0x71>$/;"	l
ffff800000108356	kernel.asm	/^ffff800000108356:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff80000010835b	kernel.asm	/^ffff80000010835b:	eb 27                	jmp    ffff800000108384 <argfd+0x98>$/;"	l
ffff80000010835d	kernel.asm	/^ffff80000010835d:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)$/;"	l
ffff800000108362	kernel.asm	/^ffff800000108362:	74 09                	je     ffff80000010836d <argfd+0x81>$/;"	l
ffff800000108364	kernel.asm	/^ffff800000108364:	8b 55 f4             	mov    -0xc(%rbp),%edx$/;"	l
ffff800000108367	kernel.asm	/^ffff800000108367:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff80000010836b	kernel.asm	/^ffff80000010836b:	89 10                	mov    %edx,(%rax)$/;"	l
ffff80000010836d	kernel.asm	/^ffff80000010836d:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)$/;"	l
ffff800000108372	kernel.asm	/^ffff800000108372:	74 0b                	je     ffff80000010837f <argfd+0x93>$/;"	l
ffff800000108374	kernel.asm	/^ffff800000108374:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff800000108378	kernel.asm	/^ffff800000108378:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx$/;"	l
ffff80000010837c	kernel.asm	/^ffff80000010837c:	48 89 10             	mov    %rdx,(%rax)$/;"	l
ffff80000010837f	kernel.asm	/^ffff80000010837f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000108384	kernel.asm	/^ffff800000108384:	c9                   	leaveq $/;"	l
ffff800000108385	kernel.asm	/^ffff800000108385:	c3                   	retq   $/;"	l
ffff800000108386	kernel.asm	/^ffff800000108386 <fdalloc>:$/;"	l
ffff800000108386	kernel.asm	/^ffff800000108386:	55                   	push   %rbp$/;"	l
ffff800000108387	kernel.asm	/^ffff800000108387:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010838a	kernel.asm	/^ffff80000010838a:	48 83 ec 18          	sub    $0x18,%rsp$/;"	l
ffff80000010838e	kernel.asm	/^ffff80000010838e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
ffff800000108392	kernel.asm	/^ffff800000108392:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)$/;"	l
ffff800000108399	kernel.asm	/^ffff800000108399:	eb 46                	jmp    ffff8000001083e1 <fdalloc+0x5b>$/;"	l
ffff80000010839b	kernel.asm	/^ffff80000010839b:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff8000001083a2	kernel.asm	/^ffff8000001083a2:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff8000001083a6	kernel.asm	/^ffff8000001083a6:	8b 55 fc             	mov    -0x4(%rbp),%edx$/;"	l
ffff8000001083a9	kernel.asm	/^ffff8000001083a9:	48 63 d2             	movslq %edx,%rdx$/;"	l
ffff8000001083ac	kernel.asm	/^ffff8000001083ac:	48 83 c2 08          	add    $0x8,%rdx$/;"	l
ffff8000001083b0	kernel.asm	/^ffff8000001083b0:	48 8b 44 d0 08       	mov    0x8(%rax,%rdx,8),%rax$/;"	l
ffff8000001083b5	kernel.asm	/^ffff8000001083b5:	48 85 c0             	test   %rax,%rax$/;"	l
ffff8000001083b8	kernel.asm	/^ffff8000001083b8:	75 23                	jne    ffff8000001083dd <fdalloc+0x57>$/;"	l
ffff8000001083ba	kernel.asm	/^ffff8000001083ba:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff8000001083c1	kernel.asm	/^ffff8000001083c1:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff8000001083c5	kernel.asm	/^ffff8000001083c5:	8b 55 fc             	mov    -0x4(%rbp),%edx$/;"	l
ffff8000001083c8	kernel.asm	/^ffff8000001083c8:	48 63 d2             	movslq %edx,%rdx$/;"	l
ffff8000001083cb	kernel.asm	/^ffff8000001083cb:	48 8d 4a 08          	lea    0x8(%rdx),%rcx$/;"	l
ffff8000001083cf	kernel.asm	/^ffff8000001083cf:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx$/;"	l
ffff8000001083d3	kernel.asm	/^ffff8000001083d3:	48 89 54 c8 08       	mov    %rdx,0x8(%rax,%rcx,8)$/;"	l
ffff8000001083d8	kernel.asm	/^ffff8000001083d8:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff8000001083db	kernel.asm	/^ffff8000001083db:	eb 0f                	jmp    ffff8000001083ec <fdalloc+0x66>$/;"	l
ffff8000001083dd	kernel.asm	/^ffff8000001083dd:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)$/;"	l
ffff8000001083e1	kernel.asm	/^ffff8000001083e1:	83 7d fc 0f          	cmpl   $0xf,-0x4(%rbp)$/;"	l
ffff8000001083e5	kernel.asm	/^ffff8000001083e5:	7e b4                	jle    ffff80000010839b <fdalloc+0x15>$/;"	l
ffff8000001083e7	kernel.asm	/^ffff8000001083e7:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff8000001083ec	kernel.asm	/^ffff8000001083ec:	c9                   	leaveq $/;"	l
ffff8000001083ed	kernel.asm	/^ffff8000001083ed:	c3                   	retq   $/;"	l
ffff8000001083ee	kernel.asm	/^ffff8000001083ee <sys_dup>:$/;"	l
ffff8000001083ee	kernel.asm	/^ffff8000001083ee:	55                   	push   %rbp$/;"	l
ffff8000001083ef	kernel.asm	/^ffff8000001083ef:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff8000001083f2	kernel.asm	/^ffff8000001083f2:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff8000001083f6	kernel.asm	/^ffff8000001083f6:	48 8d 45 f0          	lea    -0x10(%rbp),%rax$/;"	l
ffff8000001083fa	kernel.asm	/^ffff8000001083fa:	48 89 c2             	mov    %rax,%rdx$/;"	l
ffff8000001083fd	kernel.asm	/^ffff8000001083fd:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffff800000108402	kernel.asm	/^ffff800000108402:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
ffff800000108407	kernel.asm	/^ffff800000108407:	48 b8 ec 82 10 00 00 	movabs $0xffff8000001082ec,%rax$/;"	l
ffff80000010840e	kernel.asm	/^ffff80000010840e:	80 ff ff $/;"	l
ffff800000108411	kernel.asm	/^ffff800000108411:	ff d0                	callq  *%rax$/;"	l
ffff800000108413	kernel.asm	/^ffff800000108413:	85 c0                	test   %eax,%eax$/;"	l
ffff800000108415	kernel.asm	/^ffff800000108415:	79 07                	jns    ffff80000010841e <sys_dup+0x30>$/;"	l
ffff800000108417	kernel.asm	/^ffff800000108417:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff80000010841c	kernel.asm	/^ffff80000010841c:	eb 39                	jmp    ffff800000108457 <sys_dup+0x69>$/;"	l
ffff80000010841e	kernel.asm	/^ffff80000010841e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000108422	kernel.asm	/^ffff800000108422:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000108425	kernel.asm	/^ffff800000108425:	48 b8 86 83 10 00 00 	movabs $0xffff800000108386,%rax$/;"	l
ffff80000010842c	kernel.asm	/^ffff80000010842c:	80 ff ff $/;"	l
ffff80000010842f	kernel.asm	/^ffff80000010842f:	ff d0                	callq  *%rax$/;"	l
ffff800000108431	kernel.asm	/^ffff800000108431:	89 45 fc             	mov    %eax,-0x4(%rbp)$/;"	l
ffff800000108434	kernel.asm	/^ffff800000108434:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)$/;"	l
ffff800000108438	kernel.asm	/^ffff800000108438:	79 07                	jns    ffff800000108441 <sys_dup+0x53>$/;"	l
ffff80000010843a	kernel.asm	/^ffff80000010843a:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff80000010843f	kernel.asm	/^ffff80000010843f:	eb 16                	jmp    ffff800000108457 <sys_dup+0x69>$/;"	l
ffff800000108441	kernel.asm	/^ffff800000108441:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000108445	kernel.asm	/^ffff800000108445:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000108448	kernel.asm	/^ffff800000108448:	48 b8 70 1f 10 00 00 	movabs $0xffff800000101f70,%rax$/;"	l
ffff80000010844f	kernel.asm	/^ffff80000010844f:	80 ff ff $/;"	l
ffff800000108452	kernel.asm	/^ffff800000108452:	ff d0                	callq  *%rax$/;"	l
ffff800000108454	kernel.asm	/^ffff800000108454:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff800000108457	kernel.asm	/^ffff800000108457:	c9                   	leaveq $/;"	l
ffff800000108458	kernel.asm	/^ffff800000108458:	c3                   	retq   $/;"	l
ffff800000108459	kernel.asm	/^ffff800000108459 <sys_read>:$/;"	l
ffff800000108459	kernel.asm	/^ffff800000108459:	55                   	push   %rbp$/;"	l
ffff80000010845a	kernel.asm	/^ffff80000010845a:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010845d	kernel.asm	/^ffff80000010845d:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ffff800000108461	kernel.asm	/^ffff800000108461:	48 8d 45 f8          	lea    -0x8(%rbp),%rax$/;"	l
ffff800000108465	kernel.asm	/^ffff800000108465:	48 89 c2             	mov    %rax,%rdx$/;"	l
ffff800000108468	kernel.asm	/^ffff800000108468:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffff80000010846d	kernel.asm	/^ffff80000010846d:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
ffff800000108472	kernel.asm	/^ffff800000108472:	48 b8 ec 82 10 00 00 	movabs $0xffff8000001082ec,%rax$/;"	l
ffff800000108479	kernel.asm	/^ffff800000108479:	80 ff ff $/;"	l
ffff80000010847c	kernel.asm	/^ffff80000010847c:	ff d0                	callq  *%rax$/;"	l
ffff80000010847e	kernel.asm	/^ffff80000010847e:	85 c0                	test   %eax,%eax$/;"	l
ffff800000108480	kernel.asm	/^ffff800000108480:	78 3b                	js     ffff8000001084bd <sys_read+0x64>$/;"	l
ffff800000108482	kernel.asm	/^ffff800000108482:	48 8d 45 f4          	lea    -0xc(%rbp),%rax$/;"	l
ffff800000108486	kernel.asm	/^ffff800000108486:	48 89 c6             	mov    %rax,%rsi$/;"	l
ffff800000108489	kernel.asm	/^ffff800000108489:	bf 02 00 00 00       	mov    $0x2,%edi$/;"	l
ffff80000010848e	kernel.asm	/^ffff80000010848e:	48 b8 da 80 10 00 00 	movabs $0xffff8000001080da,%rax$/;"	l
ffff800000108495	kernel.asm	/^ffff800000108495:	80 ff ff $/;"	l
ffff800000108498	kernel.asm	/^ffff800000108498:	ff d0                	callq  *%rax$/;"	l
ffff80000010849a	kernel.asm	/^ffff80000010849a:	85 c0                	test   %eax,%eax$/;"	l
ffff80000010849c	kernel.asm	/^ffff80000010849c:	78 1f                	js     ffff8000001084bd <sys_read+0x64>$/;"	l
ffff80000010849e	kernel.asm	/^ffff80000010849e:	8b 55 f4             	mov    -0xc(%rbp),%edx$/;"	l
ffff8000001084a1	kernel.asm	/^ffff8000001084a1:	48 8d 45 e8          	lea    -0x18(%rbp),%rax$/;"	l
ffff8000001084a5	kernel.asm	/^ffff8000001084a5:	48 89 c6             	mov    %rax,%rsi$/;"	l
ffff8000001084a8	kernel.asm	/^ffff8000001084a8:	bf 01 00 00 00       	mov    $0x1,%edi$/;"	l
ffff8000001084ad	kernel.asm	/^ffff8000001084ad:	48 b8 3a 81 10 00 00 	movabs $0xffff80000010813a,%rax$/;"	l
ffff8000001084b4	kernel.asm	/^ffff8000001084b4:	80 ff ff $/;"	l
ffff8000001084b7	kernel.asm	/^ffff8000001084b7:	ff d0                	callq  *%rax$/;"	l
ffff8000001084b9	kernel.asm	/^ffff8000001084b9:	85 c0                	test   %eax,%eax$/;"	l
ffff8000001084bb	kernel.asm	/^ffff8000001084bb:	79 07                	jns    ffff8000001084c4 <sys_read+0x6b>$/;"	l
ffff8000001084bd	kernel.asm	/^ffff8000001084bd:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff8000001084c2	kernel.asm	/^ffff8000001084c2:	eb 1d                	jmp    ffff8000001084e1 <sys_read+0x88>$/;"	l
ffff8000001084c4	kernel.asm	/^ffff8000001084c4:	8b 55 f4             	mov    -0xc(%rbp),%edx$/;"	l
ffff8000001084c7	kernel.asm	/^ffff8000001084c7:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx$/;"	l
ffff8000001084cb	kernel.asm	/^ffff8000001084cb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001084cf	kernel.asm	/^ffff8000001084cf:	48 89 ce             	mov    %rcx,%rsi$/;"	l
ffff8000001084d2	kernel.asm	/^ffff8000001084d2:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001084d5	kernel.asm	/^ffff8000001084d5:	48 b8 3b 22 10 00 00 	movabs $0xffff80000010223b,%rax$/;"	l
ffff8000001084dc	kernel.asm	/^ffff8000001084dc:	80 ff ff $/;"	l
ffff8000001084df	kernel.asm	/^ffff8000001084df:	ff d0                	callq  *%rax$/;"	l
ffff8000001084e1	kernel.asm	/^ffff8000001084e1:	c9                   	leaveq $/;"	l
ffff8000001084e2	kernel.asm	/^ffff8000001084e2:	c3                   	retq   $/;"	l
ffff8000001084e3	kernel.asm	/^ffff8000001084e3 <sys_write>:$/;"	l
ffff8000001084e3	kernel.asm	/^ffff8000001084e3:	55                   	push   %rbp$/;"	l
ffff8000001084e4	kernel.asm	/^ffff8000001084e4:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff8000001084e7	kernel.asm	/^ffff8000001084e7:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ffff8000001084eb	kernel.asm	/^ffff8000001084eb:	48 8d 45 f8          	lea    -0x8(%rbp),%rax$/;"	l
ffff8000001084ef	kernel.asm	/^ffff8000001084ef:	48 89 c2             	mov    %rax,%rdx$/;"	l
ffff8000001084f2	kernel.asm	/^ffff8000001084f2:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffff8000001084f7	kernel.asm	/^ffff8000001084f7:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
ffff8000001084fc	kernel.asm	/^ffff8000001084fc:	48 b8 ec 82 10 00 00 	movabs $0xffff8000001082ec,%rax$/;"	l
ffff800000108503	kernel.asm	/^ffff800000108503:	80 ff ff $/;"	l
ffff800000108506	kernel.asm	/^ffff800000108506:	ff d0                	callq  *%rax$/;"	l
ffff800000108508	kernel.asm	/^ffff800000108508:	85 c0                	test   %eax,%eax$/;"	l
ffff80000010850a	kernel.asm	/^ffff80000010850a:	78 3b                	js     ffff800000108547 <sys_write+0x64>$/;"	l
ffff80000010850c	kernel.asm	/^ffff80000010850c:	48 8d 45 f4          	lea    -0xc(%rbp),%rax$/;"	l
ffff800000108510	kernel.asm	/^ffff800000108510:	48 89 c6             	mov    %rax,%rsi$/;"	l
ffff800000108513	kernel.asm	/^ffff800000108513:	bf 02 00 00 00       	mov    $0x2,%edi$/;"	l
ffff800000108518	kernel.asm	/^ffff800000108518:	48 b8 da 80 10 00 00 	movabs $0xffff8000001080da,%rax$/;"	l
ffff80000010851f	kernel.asm	/^ffff80000010851f:	80 ff ff $/;"	l
ffff800000108522	kernel.asm	/^ffff800000108522:	ff d0                	callq  *%rax$/;"	l
ffff800000108524	kernel.asm	/^ffff800000108524:	85 c0                	test   %eax,%eax$/;"	l
ffff800000108526	kernel.asm	/^ffff800000108526:	78 1f                	js     ffff800000108547 <sys_write+0x64>$/;"	l
ffff800000108528	kernel.asm	/^ffff800000108528:	8b 55 f4             	mov    -0xc(%rbp),%edx$/;"	l
ffff80000010852b	kernel.asm	/^ffff80000010852b:	48 8d 45 e8          	lea    -0x18(%rbp),%rax$/;"	l
ffff80000010852f	kernel.asm	/^ffff80000010852f:	48 89 c6             	mov    %rax,%rsi$/;"	l
ffff800000108532	kernel.asm	/^ffff800000108532:	bf 01 00 00 00       	mov    $0x1,%edi$/;"	l
ffff800000108537	kernel.asm	/^ffff800000108537:	48 b8 3a 81 10 00 00 	movabs $0xffff80000010813a,%rax$/;"	l
ffff80000010853e	kernel.asm	/^ffff80000010853e:	80 ff ff $/;"	l
ffff800000108541	kernel.asm	/^ffff800000108541:	ff d0                	callq  *%rax$/;"	l
ffff800000108543	kernel.asm	/^ffff800000108543:	85 c0                	test   %eax,%eax$/;"	l
ffff800000108545	kernel.asm	/^ffff800000108545:	79 07                	jns    ffff80000010854e <sys_write+0x6b>$/;"	l
ffff800000108547	kernel.asm	/^ffff800000108547:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff80000010854c	kernel.asm	/^ffff80000010854c:	eb 1d                	jmp    ffff80000010856b <sys_write+0x88>$/;"	l
ffff80000010854e	kernel.asm	/^ffff80000010854e:	8b 55 f4             	mov    -0xc(%rbp),%edx$/;"	l
ffff800000108551	kernel.asm	/^ffff800000108551:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx$/;"	l
ffff800000108555	kernel.asm	/^ffff800000108555:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000108559	kernel.asm	/^ffff800000108559:	48 89 ce             	mov    %rcx,%rsi$/;"	l
ffff80000010855c	kernel.asm	/^ffff80000010855c:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010855f	kernel.asm	/^ffff80000010855f:	48 b8 2c 23 10 00 00 	movabs $0xffff80000010232c,%rax$/;"	l
ffff800000108566	kernel.asm	/^ffff800000108566:	80 ff ff $/;"	l
ffff800000108569	kernel.asm	/^ffff800000108569:	ff d0                	callq  *%rax$/;"	l
ffff80000010856b	kernel.asm	/^ffff80000010856b:	c9                   	leaveq $/;"	l
ffff80000010856c	kernel.asm	/^ffff80000010856c:	c3                   	retq   $/;"	l
ffff80000010856d	kernel.asm	/^ffff80000010856d <sys_close>:$/;"	l
ffff80000010856d	kernel.asm	/^ffff80000010856d:	55                   	push   %rbp$/;"	l
ffff80000010856e	kernel.asm	/^ffff80000010856e:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000108571	kernel.asm	/^ffff800000108571:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff800000108575	kernel.asm	/^ffff800000108575:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx$/;"	l
ffff800000108579	kernel.asm	/^ffff800000108579:	48 8d 45 fc          	lea    -0x4(%rbp),%rax$/;"	l
ffff80000010857d	kernel.asm	/^ffff80000010857d:	48 89 c6             	mov    %rax,%rsi$/;"	l
ffff800000108580	kernel.asm	/^ffff800000108580:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
ffff800000108585	kernel.asm	/^ffff800000108585:	48 b8 ec 82 10 00 00 	movabs $0xffff8000001082ec,%rax$/;"	l
ffff80000010858c	kernel.asm	/^ffff80000010858c:	80 ff ff $/;"	l
ffff80000010858f	kernel.asm	/^ffff80000010858f:	ff d0                	callq  *%rax$/;"	l
ffff800000108591	kernel.asm	/^ffff800000108591:	85 c0                	test   %eax,%eax$/;"	l
ffff800000108593	kernel.asm	/^ffff800000108593:	79 07                	jns    ffff80000010859c <sys_close+0x2f>$/;"	l
ffff800000108595	kernel.asm	/^ffff800000108595:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff80000010859a	kernel.asm	/^ffff80000010859a:	eb 36                	jmp    ffff8000001085d2 <sys_close+0x65>$/;"	l
ffff80000010859c	kernel.asm	/^ffff80000010859c:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff8000001085a3	kernel.asm	/^ffff8000001085a3:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff8000001085a7	kernel.asm	/^ffff8000001085a7:	8b 55 fc             	mov    -0x4(%rbp),%edx$/;"	l
ffff8000001085aa	kernel.asm	/^ffff8000001085aa:	48 63 d2             	movslq %edx,%rdx$/;"	l
ffff8000001085ad	kernel.asm	/^ffff8000001085ad:	48 83 c2 08          	add    $0x8,%rdx$/;"	l
ffff8000001085b1	kernel.asm	/^ffff8000001085b1:	48 c7 44 d0 08 00 00 	movq   $0x0,0x8(%rax,%rdx,8)$/;"	l
ffff8000001085b8	kernel.asm	/^ffff8000001085b8:	00 00 $/;"	l
ffff8000001085ba	kernel.asm	/^ffff8000001085ba:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff8000001085be	kernel.asm	/^ffff8000001085be:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001085c1	kernel.asm	/^ffff8000001085c1:	48 b8 e0 1f 10 00 00 	movabs $0xffff800000101fe0,%rax$/;"	l
ffff8000001085c8	kernel.asm	/^ffff8000001085c8:	80 ff ff $/;"	l
ffff8000001085cb	kernel.asm	/^ffff8000001085cb:	ff d0                	callq  *%rax$/;"	l
ffff8000001085cd	kernel.asm	/^ffff8000001085cd:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff8000001085d2	kernel.asm	/^ffff8000001085d2:	c9                   	leaveq $/;"	l
ffff8000001085d3	kernel.asm	/^ffff8000001085d3:	c3                   	retq   $/;"	l
ffff8000001085d4	kernel.asm	/^ffff8000001085d4 <sys_ioctl>:$/;"	l
ffff8000001085d4	kernel.asm	/^ffff8000001085d4:	55                   	push   %rbp$/;"	l
ffff8000001085d5	kernel.asm	/^ffff8000001085d5:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff8000001085d8	kernel.asm	/^ffff8000001085d8:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ffff8000001085dc	kernel.asm	/^ffff8000001085dc:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx$/;"	l
ffff8000001085e0	kernel.asm	/^ffff8000001085e0:	48 8d 45 fc          	lea    -0x4(%rbp),%rax$/;"	l
ffff8000001085e4	kernel.asm	/^ffff8000001085e4:	48 89 c6             	mov    %rax,%rsi$/;"	l
ffff8000001085e7	kernel.asm	/^ffff8000001085e7:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
ffff8000001085ec	kernel.asm	/^ffff8000001085ec:	48 b8 ec 82 10 00 00 	movabs $0xffff8000001082ec,%rax$/;"	l
ffff8000001085f3	kernel.asm	/^ffff8000001085f3:	80 ff ff $/;"	l
ffff8000001085f6	kernel.asm	/^ffff8000001085f6:	ff d0                	callq  *%rax$/;"	l
ffff8000001085f8	kernel.asm	/^ffff8000001085f8:	85 c0                	test   %eax,%eax$/;"	l
ffff8000001085fa	kernel.asm	/^ffff8000001085fa:	79 07                	jns    ffff800000108603 <sys_ioctl+0x2f>$/;"	l
ffff8000001085fc	kernel.asm	/^ffff8000001085fc:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff800000108601	kernel.asm	/^ffff800000108601:	eb 61                	jmp    ffff800000108664 <sys_ioctl+0x90>$/;"	l
ffff800000108603	kernel.asm	/^ffff800000108603:	48 8d 45 f8          	lea    -0x8(%rbp),%rax$/;"	l
ffff800000108607	kernel.asm	/^ffff800000108607:	48 89 c6             	mov    %rax,%rsi$/;"	l
ffff80000010860a	kernel.asm	/^ffff80000010860a:	bf 01 00 00 00       	mov    $0x1,%edi$/;"	l
ffff80000010860f	kernel.asm	/^ffff80000010860f:	48 b8 da 80 10 00 00 	movabs $0xffff8000001080da,%rax$/;"	l
ffff800000108616	kernel.asm	/^ffff800000108616:	80 ff ff $/;"	l
ffff800000108619	kernel.asm	/^ffff800000108619:	ff d0                	callq  *%rax$/;"	l
ffff80000010861b	kernel.asm	/^ffff80000010861b:	85 c0                	test   %eax,%eax$/;"	l
ffff80000010861d	kernel.asm	/^ffff80000010861d:	79 07                	jns    ffff800000108626 <sys_ioctl+0x52>$/;"	l
ffff80000010861f	kernel.asm	/^ffff80000010861f:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff800000108624	kernel.asm	/^ffff800000108624:	eb 3e                	jmp    ffff800000108664 <sys_ioctl+0x90>$/;"	l
ffff800000108626	kernel.asm	/^ffff800000108626:	48 8d 45 f4          	lea    -0xc(%rbp),%rax$/;"	l
ffff80000010862a	kernel.asm	/^ffff80000010862a:	48 89 c6             	mov    %rax,%rsi$/;"	l
ffff80000010862d	kernel.asm	/^ffff80000010862d:	bf 02 00 00 00       	mov    $0x2,%edi$/;"	l
ffff800000108632	kernel.asm	/^ffff800000108632:	48 b8 da 80 10 00 00 	movabs $0xffff8000001080da,%rax$/;"	l
ffff800000108639	kernel.asm	/^ffff800000108639:	80 ff ff $/;"	l
ffff80000010863c	kernel.asm	/^ffff80000010863c:	ff d0                	callq  *%rax$/;"	l
ffff80000010863e	kernel.asm	/^ffff80000010863e:	85 c0                	test   %eax,%eax$/;"	l
ffff800000108640	kernel.asm	/^ffff800000108640:	79 07                	jns    ffff800000108649 <sys_ioctl+0x75>$/;"	l
ffff800000108642	kernel.asm	/^ffff800000108642:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff800000108647	kernel.asm	/^ffff800000108647:	eb 1b                	jmp    ffff800000108664 <sys_ioctl+0x90>$/;"	l
ffff800000108649	kernel.asm	/^ffff800000108649:	8b 55 f4             	mov    -0xc(%rbp),%edx$/;"	l
ffff80000010864c	kernel.asm	/^ffff80000010864c:	8b 4d f8             	mov    -0x8(%rbp),%ecx$/;"	l
ffff80000010864f	kernel.asm	/^ffff80000010864f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000108653	kernel.asm	/^ffff800000108653:	89 ce                	mov    %ecx,%esi$/;"	l
ffff800000108655	kernel.asm	/^ffff800000108655:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000108658	kernel.asm	/^ffff800000108658:	48 b8 15 21 10 00 00 	movabs $0xffff800000102115,%rax$/;"	l
ffff80000010865f	kernel.asm	/^ffff80000010865f:	80 ff ff $/;"	l
ffff800000108662	kernel.asm	/^ffff800000108662:	ff d0                	callq  *%rax$/;"	l
ffff800000108664	kernel.asm	/^ffff800000108664:	c9                   	leaveq $/;"	l
ffff800000108665	kernel.asm	/^ffff800000108665:	c3                   	retq   $/;"	l
ffff800000108666	kernel.asm	/^ffff800000108666 <sys_fstat>:$/;"	l
ffff800000108666	kernel.asm	/^ffff800000108666:	55                   	push   %rbp$/;"	l
ffff800000108667	kernel.asm	/^ffff800000108667:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010866a	kernel.asm	/^ffff80000010866a:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff80000010866e	kernel.asm	/^ffff80000010866e:	48 8d 45 f8          	lea    -0x8(%rbp),%rax$/;"	l
ffff800000108672	kernel.asm	/^ffff800000108672:	48 89 c2             	mov    %rax,%rdx$/;"	l
ffff800000108675	kernel.asm	/^ffff800000108675:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffff80000010867a	kernel.asm	/^ffff80000010867a:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
ffff80000010867f	kernel.asm	/^ffff80000010867f:	48 b8 ec 82 10 00 00 	movabs $0xffff8000001082ec,%rax$/;"	l
ffff800000108686	kernel.asm	/^ffff800000108686:	80 ff ff $/;"	l
ffff800000108689	kernel.asm	/^ffff800000108689:	ff d0                	callq  *%rax$/;"	l
ffff80000010868b	kernel.asm	/^ffff80000010868b:	85 c0                	test   %eax,%eax$/;"	l
ffff80000010868d	kernel.asm	/^ffff80000010868d:	78 21                	js     ffff8000001086b0 <sys_fstat+0x4a>$/;"	l
ffff80000010868f	kernel.asm	/^ffff80000010868f:	48 8d 45 f0          	lea    -0x10(%rbp),%rax$/;"	l
ffff800000108693	kernel.asm	/^ffff800000108693:	ba 14 00 00 00       	mov    $0x14,%edx$/;"	l
ffff800000108698	kernel.asm	/^ffff800000108698:	48 89 c6             	mov    %rax,%rsi$/;"	l
ffff80000010869b	kernel.asm	/^ffff80000010869b:	bf 01 00 00 00       	mov    $0x1,%edi$/;"	l
ffff8000001086a0	kernel.asm	/^ffff8000001086a0:	48 b8 3a 81 10 00 00 	movabs $0xffff80000010813a,%rax$/;"	l
ffff8000001086a7	kernel.asm	/^ffff8000001086a7:	80 ff ff $/;"	l
ffff8000001086aa	kernel.asm	/^ffff8000001086aa:	ff d0                	callq  *%rax$/;"	l
ffff8000001086ac	kernel.asm	/^ffff8000001086ac:	85 c0                	test   %eax,%eax$/;"	l
ffff8000001086ae	kernel.asm	/^ffff8000001086ae:	79 07                	jns    ffff8000001086b7 <sys_fstat+0x51>$/;"	l
ffff8000001086b0	kernel.asm	/^ffff8000001086b0:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff8000001086b5	kernel.asm	/^ffff8000001086b5:	eb 1a                	jmp    ffff8000001086d1 <sys_fstat+0x6b>$/;"	l
ffff8000001086b7	kernel.asm	/^ffff8000001086b7:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
ffff8000001086bb	kernel.asm	/^ffff8000001086bb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001086bf	kernel.asm	/^ffff8000001086bf:	48 89 d6             	mov    %rdx,%rsi$/;"	l
ffff8000001086c2	kernel.asm	/^ffff8000001086c2:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001086c5	kernel.asm	/^ffff8000001086c5:	48 b8 c6 21 10 00 00 	movabs $0xffff8000001021c6,%rax$/;"	l
ffff8000001086cc	kernel.asm	/^ffff8000001086cc:	80 ff ff $/;"	l
ffff8000001086cf	kernel.asm	/^ffff8000001086cf:	ff d0                	callq  *%rax$/;"	l
ffff8000001086d1	kernel.asm	/^ffff8000001086d1:	c9                   	leaveq $/;"	l
ffff8000001086d2	kernel.asm	/^ffff8000001086d2:	c3                   	retq   $/;"	l
ffff8000001086d3	kernel.asm	/^ffff8000001086d3 <sys_link>:$/;"	l
ffff8000001086d3	kernel.asm	/^ffff8000001086d3:	55                   	push   %rbp$/;"	l
ffff8000001086d4	kernel.asm	/^ffff8000001086d4:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff8000001086d7	kernel.asm	/^ffff8000001086d7:	48 83 ec 30          	sub    $0x30,%rsp$/;"	l
ffff8000001086db	kernel.asm	/^ffff8000001086db:	48 8d 45 d0          	lea    -0x30(%rbp),%rax$/;"	l
ffff8000001086df	kernel.asm	/^ffff8000001086df:	48 89 c6             	mov    %rax,%rsi$/;"	l
ffff8000001086e2	kernel.asm	/^ffff8000001086e2:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
ffff8000001086e7	kernel.asm	/^ffff8000001086e7:	48 b8 ca 81 10 00 00 	movabs $0xffff8000001081ca,%rax$/;"	l
ffff8000001086ee	kernel.asm	/^ffff8000001086ee:	80 ff ff $/;"	l
ffff8000001086f1	kernel.asm	/^ffff8000001086f1:	ff d0                	callq  *%rax$/;"	l
ffff8000001086f3	kernel.asm	/^ffff8000001086f3:	85 c0                	test   %eax,%eax$/;"	l
ffff8000001086f5	kernel.asm	/^ffff8000001086f5:	78 1c                	js     ffff800000108713 <sys_link+0x40>$/;"	l
ffff8000001086f7	kernel.asm	/^ffff8000001086f7:	48 8d 45 d8          	lea    -0x28(%rbp),%rax$/;"	l
ffff8000001086fb	kernel.asm	/^ffff8000001086fb:	48 89 c6             	mov    %rax,%rsi$/;"	l
ffff8000001086fe	kernel.asm	/^ffff8000001086fe:	bf 01 00 00 00       	mov    $0x1,%edi$/;"	l
ffff800000108703	kernel.asm	/^ffff800000108703:	48 b8 ca 81 10 00 00 	movabs $0xffff8000001081ca,%rax$/;"	l
ffff80000010870a	kernel.asm	/^ffff80000010870a:	80 ff ff $/;"	l
ffff80000010870d	kernel.asm	/^ffff80000010870d:	ff d0                	callq  *%rax$/;"	l
ffff80000010870f	kernel.asm	/^ffff80000010870f:	85 c0                	test   %eax,%eax$/;"	l
ffff800000108711	kernel.asm	/^ffff800000108711:	79 0a                	jns    ffff80000010871d <sys_link+0x4a>$/;"	l
ffff800000108713	kernel.asm	/^ffff800000108713:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff800000108718	kernel.asm	/^ffff800000108718:	e9 0c 02 00 00       	jmpq   ffff800000108929 <sys_link+0x256>$/;"	l
ffff80000010871d	kernel.asm	/^ffff80000010871d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000108722	kernel.asm	/^ffff800000108722:	48 ba d0 52 10 00 00 	movabs $0xffff8000001052d0,%rdx$/;"	l
ffff800000108729	kernel.asm	/^ffff800000108729:	80 ff ff $/;"	l
ffff80000010872c	kernel.asm	/^ffff80000010872c:	ff d2                	callq  *%rdx$/;"	l
ffff80000010872e	kernel.asm	/^ffff80000010872e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax$/;"	l
ffff800000108732	kernel.asm	/^ffff800000108732:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000108735	kernel.asm	/^ffff800000108735:	48 b8 a9 3b 10 00 00 	movabs $0xffff800000103ba9,%rax$/;"	l
ffff80000010873c	kernel.asm	/^ffff80000010873c:	80 ff ff $/;"	l
ffff80000010873f	kernel.asm	/^ffff80000010873f:	ff d0                	callq  *%rax$/;"	l
ffff800000108741	kernel.asm	/^ffff800000108741:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff800000108745	kernel.asm	/^ffff800000108745:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)$/;"	l
ffff80000010874a	kernel.asm	/^ffff80000010874a:	75 1b                	jne    ffff800000108767 <sys_link+0x94>$/;"	l
ffff80000010874c	kernel.asm	/^ffff80000010874c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000108751	kernel.asm	/^ffff800000108751:	48 ba a6 53 10 00 00 	movabs $0xffff8000001053a6,%rdx$/;"	l
ffff800000108758	kernel.asm	/^ffff800000108758:	80 ff ff $/;"	l
ffff80000010875b	kernel.asm	/^ffff80000010875b:	ff d2                	callq  *%rdx$/;"	l
ffff80000010875d	kernel.asm	/^ffff80000010875d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff800000108762	kernel.asm	/^ffff800000108762:	e9 c2 01 00 00       	jmpq   ffff800000108929 <sys_link+0x256>$/;"	l
ffff800000108767	kernel.asm	/^ffff800000108767:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010876b	kernel.asm	/^ffff80000010876b:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010876e	kernel.asm	/^ffff80000010876e:	48 b8 b9 2c 10 00 00 	movabs $0xffff800000102cb9,%rax$/;"	l
ffff800000108775	kernel.asm	/^ffff800000108775:	80 ff ff $/;"	l
ffff800000108778	kernel.asm	/^ffff800000108778:	ff d0                	callq  *%rax$/;"	l
ffff80000010877a	kernel.asm	/^ffff80000010877a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010877e	kernel.asm	/^ffff80000010877e:	0f b7 80 94 00 00 00 	movzwl 0x94(%rax),%eax$/;"	l
ffff800000108785	kernel.asm	/^ffff800000108785:	66 83 f8 01          	cmp    $0x1,%ax$/;"	l
ffff800000108789	kernel.asm	/^ffff800000108789:	75 2e                	jne    ffff8000001087b9 <sys_link+0xe6>$/;"	l
ffff80000010878b	kernel.asm	/^ffff80000010878b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010878f	kernel.asm	/^ffff80000010878f:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000108792	kernel.asm	/^ffff800000108792:	48 b8 9d 2f 10 00 00 	movabs $0xffff800000102f9d,%rax$/;"	l
ffff800000108799	kernel.asm	/^ffff800000108799:	80 ff ff $/;"	l
ffff80000010879c	kernel.asm	/^ffff80000010879c:	ff d0                	callq  *%rax$/;"	l
ffff80000010879e	kernel.asm	/^ffff80000010879e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff8000001087a3	kernel.asm	/^ffff8000001087a3:	48 ba a6 53 10 00 00 	movabs $0xffff8000001053a6,%rdx$/;"	l
ffff8000001087aa	kernel.asm	/^ffff8000001087aa:	80 ff ff $/;"	l
ffff8000001087ad	kernel.asm	/^ffff8000001087ad:	ff d2                	callq  *%rdx$/;"	l
ffff8000001087af	kernel.asm	/^ffff8000001087af:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff8000001087b4	kernel.asm	/^ffff8000001087b4:	e9 70 01 00 00       	jmpq   ffff800000108929 <sys_link+0x256>$/;"	l
ffff8000001087b9	kernel.asm	/^ffff8000001087b9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001087bd	kernel.asm	/^ffff8000001087bd:	0f b7 80 9a 00 00 00 	movzwl 0x9a(%rax),%eax$/;"	l
ffff8000001087c4	kernel.asm	/^ffff8000001087c4:	83 c0 01             	add    $0x1,%eax$/;"	l
ffff8000001087c7	kernel.asm	/^ffff8000001087c7:	89 c2                	mov    %eax,%edx$/;"	l
ffff8000001087c9	kernel.asm	/^ffff8000001087c9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001087cd	kernel.asm	/^ffff8000001087cd:	66 89 90 9a 00 00 00 	mov    %dx,0x9a(%rax)$/;"	l
ffff8000001087d4	kernel.asm	/^ffff8000001087d4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001087d8	kernel.asm	/^ffff8000001087d8:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001087db	kernel.asm	/^ffff8000001087db:	48 b8 27 2a 10 00 00 	movabs $0xffff800000102a27,%rax$/;"	l
ffff8000001087e2	kernel.asm	/^ffff8000001087e2:	80 ff ff $/;"	l
ffff8000001087e5	kernel.asm	/^ffff8000001087e5:	ff d0                	callq  *%rax$/;"	l
ffff8000001087e7	kernel.asm	/^ffff8000001087e7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001087eb	kernel.asm	/^ffff8000001087eb:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001087ee	kernel.asm	/^ffff8000001087ee:	48 b8 4a 2e 10 00 00 	movabs $0xffff800000102e4a,%rax$/;"	l
ffff8000001087f5	kernel.asm	/^ffff8000001087f5:	80 ff ff $/;"	l
ffff8000001087f8	kernel.asm	/^ffff8000001087f8:	ff d0                	callq  *%rax$/;"	l
ffff8000001087fa	kernel.asm	/^ffff8000001087fa:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff8000001087fe	kernel.asm	/^ffff8000001087fe:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx$/;"	l
ffff800000108802	kernel.asm	/^ffff800000108802:	48 89 d6             	mov    %rdx,%rsi$/;"	l
ffff800000108805	kernel.asm	/^ffff800000108805:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000108808	kernel.asm	/^ffff800000108808:	48 b8 d3 3b 10 00 00 	movabs $0xffff800000103bd3,%rax$/;"	l
ffff80000010880f	kernel.asm	/^ffff80000010880f:	80 ff ff $/;"	l
ffff800000108812	kernel.asm	/^ffff800000108812:	ff d0                	callq  *%rax$/;"	l
ffff800000108814	kernel.asm	/^ffff800000108814:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ffff800000108818	kernel.asm	/^ffff800000108818:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)$/;"	l
ffff80000010881d	kernel.asm	/^ffff80000010881d:	0f 84 9b 00 00 00    	je     ffff8000001088be <sys_link+0x1eb>$/;"	l
ffff800000108823	kernel.asm	/^ffff800000108823:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000108827	kernel.asm	/^ffff800000108827:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010882a	kernel.asm	/^ffff80000010882a:	48 b8 b9 2c 10 00 00 	movabs $0xffff800000102cb9,%rax$/;"	l
ffff800000108831	kernel.asm	/^ffff800000108831:	80 ff ff $/;"	l
ffff800000108834	kernel.asm	/^ffff800000108834:	ff d0                	callq  *%rax$/;"	l
ffff800000108836	kernel.asm	/^ffff800000108836:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff80000010883a	kernel.asm	/^ffff80000010883a:	8b 10                	mov    (%rax),%edx$/;"	l
ffff80000010883c	kernel.asm	/^ffff80000010883c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000108840	kernel.asm	/^ffff800000108840:	8b 00                	mov    (%rax),%eax$/;"	l
ffff800000108842	kernel.asm	/^ffff800000108842:	39 c2                	cmp    %eax,%edx$/;"	l
ffff800000108844	kernel.asm	/^ffff800000108844:	75 25                	jne    ffff80000010886b <sys_link+0x198>$/;"	l
ffff800000108846	kernel.asm	/^ffff800000108846:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010884a	kernel.asm	/^ffff80000010884a:	8b 50 04             	mov    0x4(%rax),%edx$/;"	l
ffff80000010884d	kernel.asm	/^ffff80000010884d:	48 8d 4d e0          	lea    -0x20(%rbp),%rcx$/;"	l
ffff800000108851	kernel.asm	/^ffff800000108851:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000108855	kernel.asm	/^ffff800000108855:	48 89 ce             	mov    %rcx,%rsi$/;"	l
ffff800000108858	kernel.asm	/^ffff800000108858:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010885b	kernel.asm	/^ffff80000010885b:	48 b8 1f 38 10 00 00 	movabs $0xffff80000010381f,%rax$/;"	l
ffff800000108862	kernel.asm	/^ffff800000108862:	80 ff ff $/;"	l
ffff800000108865	kernel.asm	/^ffff800000108865:	ff d0                	callq  *%rax$/;"	l
ffff800000108867	kernel.asm	/^ffff800000108867:	85 c0                	test   %eax,%eax$/;"	l
ffff800000108869	kernel.asm	/^ffff800000108869:	79 15                	jns    ffff800000108880 <sys_link+0x1ad>$/;"	l
ffff80000010886b	kernel.asm	/^ffff80000010886b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff80000010886f	kernel.asm	/^ffff80000010886f:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000108872	kernel.asm	/^ffff800000108872:	48 b8 9d 2f 10 00 00 	movabs $0xffff800000102f9d,%rax$/;"	l
ffff800000108879	kernel.asm	/^ffff800000108879:	80 ff ff $/;"	l
ffff80000010887c	kernel.asm	/^ffff80000010887c:	ff d0                	callq  *%rax$/;"	l
ffff80000010887e	kernel.asm	/^ffff80000010887e:	eb 3f                	jmp    ffff8000001088bf <sys_link+0x1ec>$/;"	l
ffff800000108880	kernel.asm	/^ffff800000108880:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000108884	kernel.asm	/^ffff800000108884:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000108887	kernel.asm	/^ffff800000108887:	48 b8 9d 2f 10 00 00 	movabs $0xffff800000102f9d,%rax$/;"	l
ffff80000010888e	kernel.asm	/^ffff80000010888e:	80 ff ff $/;"	l
ffff800000108891	kernel.asm	/^ffff800000108891:	ff d0                	callq  *%rax$/;"	l
ffff800000108893	kernel.asm	/^ffff800000108893:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000108897	kernel.asm	/^ffff800000108897:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010889a	kernel.asm	/^ffff80000010889a:	48 b8 b3 2e 10 00 00 	movabs $0xffff800000102eb3,%rax$/;"	l
ffff8000001088a1	kernel.asm	/^ffff8000001088a1:	80 ff ff $/;"	l
ffff8000001088a4	kernel.asm	/^ffff8000001088a4:	ff d0                	callq  *%rax$/;"	l
ffff8000001088a6	kernel.asm	/^ffff8000001088a6:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff8000001088ab	kernel.asm	/^ffff8000001088ab:	48 ba a6 53 10 00 00 	movabs $0xffff8000001053a6,%rdx$/;"	l
ffff8000001088b2	kernel.asm	/^ffff8000001088b2:	80 ff ff $/;"	l
ffff8000001088b5	kernel.asm	/^ffff8000001088b5:	ff d2                	callq  *%rdx$/;"	l
ffff8000001088b7	kernel.asm	/^ffff8000001088b7:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff8000001088bc	kernel.asm	/^ffff8000001088bc:	eb 6b                	jmp    ffff800000108929 <sys_link+0x256>$/;"	l
ffff8000001088be	kernel.asm	/^ffff8000001088be:	90                   	nop$/;"	l
ffff8000001088bf	kernel.asm	/^ffff8000001088bf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001088c3	kernel.asm	/^ffff8000001088c3:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001088c6	kernel.asm	/^ffff8000001088c6:	48 b8 b9 2c 10 00 00 	movabs $0xffff800000102cb9,%rax$/;"	l
ffff8000001088cd	kernel.asm	/^ffff8000001088cd:	80 ff ff $/;"	l
ffff8000001088d0	kernel.asm	/^ffff8000001088d0:	ff d0                	callq  *%rax$/;"	l
ffff8000001088d2	kernel.asm	/^ffff8000001088d2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001088d6	kernel.asm	/^ffff8000001088d6:	0f b7 80 9a 00 00 00 	movzwl 0x9a(%rax),%eax$/;"	l
ffff8000001088dd	kernel.asm	/^ffff8000001088dd:	83 e8 01             	sub    $0x1,%eax$/;"	l
ffff8000001088e0	kernel.asm	/^ffff8000001088e0:	89 c2                	mov    %eax,%edx$/;"	l
ffff8000001088e2	kernel.asm	/^ffff8000001088e2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001088e6	kernel.asm	/^ffff8000001088e6:	66 89 90 9a 00 00 00 	mov    %dx,0x9a(%rax)$/;"	l
ffff8000001088ed	kernel.asm	/^ffff8000001088ed:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff8000001088f1	kernel.asm	/^ffff8000001088f1:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001088f4	kernel.asm	/^ffff8000001088f4:	48 b8 27 2a 10 00 00 	movabs $0xffff800000102a27,%rax$/;"	l
ffff8000001088fb	kernel.asm	/^ffff8000001088fb:	80 ff ff $/;"	l
ffff8000001088fe	kernel.asm	/^ffff8000001088fe:	ff d0                	callq  *%rax$/;"	l
ffff800000108900	kernel.asm	/^ffff800000108900:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000108904	kernel.asm	/^ffff800000108904:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000108907	kernel.asm	/^ffff800000108907:	48 b8 9d 2f 10 00 00 	movabs $0xffff800000102f9d,%rax$/;"	l
ffff80000010890e	kernel.asm	/^ffff80000010890e:	80 ff ff $/;"	l
ffff800000108911	kernel.asm	/^ffff800000108911:	ff d0                	callq  *%rax$/;"	l
ffff800000108913	kernel.asm	/^ffff800000108913:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000108918	kernel.asm	/^ffff800000108918:	48 ba a6 53 10 00 00 	movabs $0xffff8000001053a6,%rdx$/;"	l
ffff80000010891f	kernel.asm	/^ffff80000010891f:	80 ff ff $/;"	l
ffff800000108922	kernel.asm	/^ffff800000108922:	ff d2                	callq  *%rdx$/;"	l
ffff800000108924	kernel.asm	/^ffff800000108924:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff800000108929	kernel.asm	/^ffff800000108929:	c9                   	leaveq $/;"	l
ffff80000010892a	kernel.asm	/^ffff80000010892a:	c3                   	retq   $/;"	l
ffff80000010892b	kernel.asm	/^ffff80000010892b <isdirempty>:$/;"	l
ffff80000010892b	kernel.asm	/^ffff80000010892b:	55                   	push   %rbp$/;"	l
ffff80000010892c	kernel.asm	/^ffff80000010892c:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010892f	kernel.asm	/^ffff80000010892f:	48 83 ec 30          	sub    $0x30,%rsp$/;"	l
ffff800000108933	kernel.asm	/^ffff800000108933:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)$/;"	l
ffff800000108937	kernel.asm	/^ffff800000108937:	c7 45 fc 20 00 00 00 	movl   $0x20,-0x4(%rbp)$/;"	l
ffff80000010893e	kernel.asm	/^ffff80000010893e:	eb 53                	jmp    ffff800000108993 <isdirempty+0x68>$/;"	l
ffff800000108940	kernel.asm	/^ffff800000108940:	8b 55 fc             	mov    -0x4(%rbp),%edx$/;"	l
ffff800000108943	kernel.asm	/^ffff800000108943:	48 8d 75 e0          	lea    -0x20(%rbp),%rsi$/;"	l
ffff800000108947	kernel.asm	/^ffff800000108947:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff80000010894b	kernel.asm	/^ffff80000010894b:	b9 10 00 00 00       	mov    $0x10,%ecx$/;"	l
ffff800000108950	kernel.asm	/^ffff800000108950:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000108953	kernel.asm	/^ffff800000108953:	48 b8 0d 33 10 00 00 	movabs $0xffff80000010330d,%rax$/;"	l
ffff80000010895a	kernel.asm	/^ffff80000010895a:	80 ff ff $/;"	l
ffff80000010895d	kernel.asm	/^ffff80000010895d:	ff d0                	callq  *%rax$/;"	l
ffff80000010895f	kernel.asm	/^ffff80000010895f:	83 f8 10             	cmp    $0x10,%eax$/;"	l
ffff800000108962	kernel.asm	/^ffff800000108962:	74 16                	je     ffff80000010897a <isdirempty+0x4f>$/;"	l
ffff800000108964	kernel.asm	/^ffff800000108964:	48 bf 9c d9 10 00 00 	movabs $0xffff80000010d99c,%rdi$/;"	l
ffff80000010896b	kernel.asm	/^ffff80000010896b:	80 ff ff $/;"	l
ffff80000010896e	kernel.asm	/^ffff80000010896e:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff800000108975	kernel.asm	/^ffff800000108975:	80 ff ff $/;"	l
ffff800000108978	kernel.asm	/^ffff800000108978:	ff d0                	callq  *%rax$/;"	l
ffff80000010897a	kernel.asm	/^ffff80000010897a:	0f b7 45 e0          	movzwl -0x20(%rbp),%eax$/;"	l
ffff80000010897e	kernel.asm	/^ffff80000010897e:	66 85 c0             	test   %ax,%ax$/;"	l
ffff800000108981	kernel.asm	/^ffff800000108981:	74 07                	je     ffff80000010898a <isdirempty+0x5f>$/;"	l
ffff800000108983	kernel.asm	/^ffff800000108983:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000108988	kernel.asm	/^ffff800000108988:	eb 1f                	jmp    ffff8000001089a9 <isdirempty+0x7e>$/;"	l
ffff80000010898a	kernel.asm	/^ffff80000010898a:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff80000010898d	kernel.asm	/^ffff80000010898d:	83 c0 10             	add    $0x10,%eax$/;"	l
ffff800000108990	kernel.asm	/^ffff800000108990:	89 45 fc             	mov    %eax,-0x4(%rbp)$/;"	l
ffff800000108993	kernel.asm	/^ffff800000108993:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff800000108997	kernel.asm	/^ffff800000108997:	8b 90 9c 00 00 00    	mov    0x9c(%rax),%edx$/;"	l
ffff80000010899d	kernel.asm	/^ffff80000010899d:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff8000001089a0	kernel.asm	/^ffff8000001089a0:	39 c2                	cmp    %eax,%edx$/;"	l
ffff8000001089a2	kernel.asm	/^ffff8000001089a2:	77 9c                	ja     ffff800000108940 <isdirempty+0x15>$/;"	l
ffff8000001089a4	kernel.asm	/^ffff8000001089a4:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
ffff8000001089a9	kernel.asm	/^ffff8000001089a9:	c9                   	leaveq $/;"	l
ffff8000001089aa	kernel.asm	/^ffff8000001089aa:	c3                   	retq   $/;"	l
ffff8000001089ab	kernel.asm	/^ffff8000001089ab <sys_unlink>:$/;"	l
ffff8000001089ab	kernel.asm	/^ffff8000001089ab:	55                   	push   %rbp$/;"	l
ffff8000001089ac	kernel.asm	/^ffff8000001089ac:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff8000001089af	kernel.asm	/^ffff8000001089af:	48 83 ec 40          	sub    $0x40,%rsp$/;"	l
ffff8000001089b3	kernel.asm	/^ffff8000001089b3:	48 8d 45 c8          	lea    -0x38(%rbp),%rax$/;"	l
ffff8000001089b7	kernel.asm	/^ffff8000001089b7:	48 89 c6             	mov    %rax,%rsi$/;"	l
ffff8000001089ba	kernel.asm	/^ffff8000001089ba:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
ffff8000001089bf	kernel.asm	/^ffff8000001089bf:	48 b8 ca 81 10 00 00 	movabs $0xffff8000001081ca,%rax$/;"	l
ffff8000001089c6	kernel.asm	/^ffff8000001089c6:	80 ff ff $/;"	l
ffff8000001089c9	kernel.asm	/^ffff8000001089c9:	ff d0                	callq  *%rax$/;"	l
ffff8000001089cb	kernel.asm	/^ffff8000001089cb:	85 c0                	test   %eax,%eax$/;"	l
ffff8000001089cd	kernel.asm	/^ffff8000001089cd:	79 0a                	jns    ffff8000001089d9 <sys_unlink+0x2e>$/;"	l
ffff8000001089cf	kernel.asm	/^ffff8000001089cf:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff8000001089d4	kernel.asm	/^ffff8000001089d4:	e9 80 02 00 00       	jmpq   ffff800000108c59 <sys_unlink+0x2ae>$/;"	l
ffff8000001089d9	kernel.asm	/^ffff8000001089d9:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff8000001089de	kernel.asm	/^ffff8000001089de:	48 ba d0 52 10 00 00 	movabs $0xffff8000001052d0,%rdx$/;"	l
ffff8000001089e5	kernel.asm	/^ffff8000001089e5:	80 ff ff $/;"	l
ffff8000001089e8	kernel.asm	/^ffff8000001089e8:	ff d2                	callq  *%rdx$/;"	l
ffff8000001089ea	kernel.asm	/^ffff8000001089ea:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
ffff8000001089ee	kernel.asm	/^ffff8000001089ee:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx$/;"	l
ffff8000001089f2	kernel.asm	/^ffff8000001089f2:	48 89 d6             	mov    %rdx,%rsi$/;"	l
ffff8000001089f5	kernel.asm	/^ffff8000001089f5:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001089f8	kernel.asm	/^ffff8000001089f8:	48 b8 d3 3b 10 00 00 	movabs $0xffff800000103bd3,%rax$/;"	l
ffff8000001089ff	kernel.asm	/^ffff8000001089ff:	80 ff ff $/;"	l
ffff800000108a02	kernel.asm	/^ffff800000108a02:	ff d0                	callq  *%rax$/;"	l
ffff800000108a04	kernel.asm	/^ffff800000108a04:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff800000108a08	kernel.asm	/^ffff800000108a08:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)$/;"	l
ffff800000108a0d	kernel.asm	/^ffff800000108a0d:	75 1b                	jne    ffff800000108a2a <sys_unlink+0x7f>$/;"	l
ffff800000108a0f	kernel.asm	/^ffff800000108a0f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000108a14	kernel.asm	/^ffff800000108a14:	48 ba a6 53 10 00 00 	movabs $0xffff8000001053a6,%rdx$/;"	l
ffff800000108a1b	kernel.asm	/^ffff800000108a1b:	80 ff ff $/;"	l
ffff800000108a1e	kernel.asm	/^ffff800000108a1e:	ff d2                	callq  *%rdx$/;"	l
ffff800000108a20	kernel.asm	/^ffff800000108a20:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff800000108a25	kernel.asm	/^ffff800000108a25:	e9 2f 02 00 00       	jmpq   ffff800000108c59 <sys_unlink+0x2ae>$/;"	l
ffff800000108a2a	kernel.asm	/^ffff800000108a2a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000108a2e	kernel.asm	/^ffff800000108a2e:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000108a31	kernel.asm	/^ffff800000108a31:	48 b8 b9 2c 10 00 00 	movabs $0xffff800000102cb9,%rax$/;"	l
ffff800000108a38	kernel.asm	/^ffff800000108a38:	80 ff ff $/;"	l
ffff800000108a3b	kernel.asm	/^ffff800000108a3b:	ff d0                	callq  *%rax$/;"	l
ffff800000108a3d	kernel.asm	/^ffff800000108a3d:	48 8d 45 d0          	lea    -0x30(%rbp),%rax$/;"	l
ffff800000108a41	kernel.asm	/^ffff800000108a41:	48 be ae d9 10 00 00 	movabs $0xffff80000010d9ae,%rsi$/;"	l
ffff800000108a48	kernel.asm	/^ffff800000108a48:	80 ff ff $/;"	l
ffff800000108a4b	kernel.asm	/^ffff800000108a4b:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000108a4e	kernel.asm	/^ffff800000108a4e:	48 b8 ee 36 10 00 00 	movabs $0xffff8000001036ee,%rax$/;"	l
ffff800000108a55	kernel.asm	/^ffff800000108a55:	80 ff ff $/;"	l
ffff800000108a58	kernel.asm	/^ffff800000108a58:	ff d0                	callq  *%rax$/;"	l
ffff800000108a5a	kernel.asm	/^ffff800000108a5a:	85 c0                	test   %eax,%eax$/;"	l
ffff800000108a5c	kernel.asm	/^ffff800000108a5c:	0f 84 ce 01 00 00    	je     ffff800000108c30 <sys_unlink+0x285>$/;"	l
ffff800000108a62	kernel.asm	/^ffff800000108a62:	48 8d 45 d0          	lea    -0x30(%rbp),%rax$/;"	l
ffff800000108a66	kernel.asm	/^ffff800000108a66:	48 be b0 d9 10 00 00 	movabs $0xffff80000010d9b0,%rsi$/;"	l
ffff800000108a6d	kernel.asm	/^ffff800000108a6d:	80 ff ff $/;"	l
ffff800000108a70	kernel.asm	/^ffff800000108a70:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000108a73	kernel.asm	/^ffff800000108a73:	48 b8 ee 36 10 00 00 	movabs $0xffff8000001036ee,%rax$/;"	l
ffff800000108a7a	kernel.asm	/^ffff800000108a7a:	80 ff ff $/;"	l
ffff800000108a7d	kernel.asm	/^ffff800000108a7d:	ff d0                	callq  *%rax$/;"	l
ffff800000108a7f	kernel.asm	/^ffff800000108a7f:	85 c0                	test   %eax,%eax$/;"	l
ffff800000108a81	kernel.asm	/^ffff800000108a81:	0f 84 a9 01 00 00    	je     ffff800000108c30 <sys_unlink+0x285>$/;"	l
ffff800000108a87	kernel.asm	/^ffff800000108a87:	48 8d 55 c4          	lea    -0x3c(%rbp),%rdx$/;"	l
ffff800000108a8b	kernel.asm	/^ffff800000108a8b:	48 8d 4d d0          	lea    -0x30(%rbp),%rcx$/;"	l
ffff800000108a8f	kernel.asm	/^ffff800000108a8f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000108a93	kernel.asm	/^ffff800000108a93:	48 89 ce             	mov    %rcx,%rsi$/;"	l
ffff800000108a96	kernel.asm	/^ffff800000108a96:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000108a99	kernel.asm	/^ffff800000108a99:	48 b8 1f 37 10 00 00 	movabs $0xffff80000010371f,%rax$/;"	l
ffff800000108aa0	kernel.asm	/^ffff800000108aa0:	80 ff ff $/;"	l
ffff800000108aa3	kernel.asm	/^ffff800000108aa3:	ff d0                	callq  *%rax$/;"	l
ffff800000108aa5	kernel.asm	/^ffff800000108aa5:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ffff800000108aa9	kernel.asm	/^ffff800000108aa9:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)$/;"	l
ffff800000108aae	kernel.asm	/^ffff800000108aae:	0f 84 7b 01 00 00    	je     ffff800000108c2f <sys_unlink+0x284>$/;"	l
ffff800000108ab4	kernel.asm	/^ffff800000108ab4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000108ab8	kernel.asm	/^ffff800000108ab8:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000108abb	kernel.asm	/^ffff800000108abb:	48 b8 b9 2c 10 00 00 	movabs $0xffff800000102cb9,%rax$/;"	l
ffff800000108ac2	kernel.asm	/^ffff800000108ac2:	80 ff ff $/;"	l
ffff800000108ac5	kernel.asm	/^ffff800000108ac5:	ff d0                	callq  *%rax$/;"	l
ffff800000108ac7	kernel.asm	/^ffff800000108ac7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000108acb	kernel.asm	/^ffff800000108acb:	0f b7 80 9a 00 00 00 	movzwl 0x9a(%rax),%eax$/;"	l
ffff800000108ad2	kernel.asm	/^ffff800000108ad2:	66 85 c0             	test   %ax,%ax$/;"	l
ffff800000108ad5	kernel.asm	/^ffff800000108ad5:	7f 16                	jg     ffff800000108aed <sys_unlink+0x142>$/;"	l
ffff800000108ad7	kernel.asm	/^ffff800000108ad7:	48 bf b3 d9 10 00 00 	movabs $0xffff80000010d9b3,%rdi$/;"	l
ffff800000108ade	kernel.asm	/^ffff800000108ade:	80 ff ff $/;"	l
ffff800000108ae1	kernel.asm	/^ffff800000108ae1:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff800000108ae8	kernel.asm	/^ffff800000108ae8:	80 ff ff $/;"	l
ffff800000108aeb	kernel.asm	/^ffff800000108aeb:	ff d0                	callq  *%rax$/;"	l
ffff800000108aed	kernel.asm	/^ffff800000108aed:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000108af1	kernel.asm	/^ffff800000108af1:	0f b7 80 94 00 00 00 	movzwl 0x94(%rax),%eax$/;"	l
ffff800000108af8	kernel.asm	/^ffff800000108af8:	66 83 f8 01          	cmp    $0x1,%ax$/;"	l
ffff800000108afc	kernel.asm	/^ffff800000108afc:	75 2f                	jne    ffff800000108b2d <sys_unlink+0x182>$/;"	l
ffff800000108afe	kernel.asm	/^ffff800000108afe:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000108b02	kernel.asm	/^ffff800000108b02:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000108b05	kernel.asm	/^ffff800000108b05:	48 b8 2b 89 10 00 00 	movabs $0xffff80000010892b,%rax$/;"	l
ffff800000108b0c	kernel.asm	/^ffff800000108b0c:	80 ff ff $/;"	l
ffff800000108b0f	kernel.asm	/^ffff800000108b0f:	ff d0                	callq  *%rax$/;"	l
ffff800000108b11	kernel.asm	/^ffff800000108b11:	85 c0                	test   %eax,%eax$/;"	l
ffff800000108b13	kernel.asm	/^ffff800000108b13:	75 18                	jne    ffff800000108b2d <sys_unlink+0x182>$/;"	l
ffff800000108b15	kernel.asm	/^ffff800000108b15:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000108b19	kernel.asm	/^ffff800000108b19:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000108b1c	kernel.asm	/^ffff800000108b1c:	48 b8 9d 2f 10 00 00 	movabs $0xffff800000102f9d,%rax$/;"	l
ffff800000108b23	kernel.asm	/^ffff800000108b23:	80 ff ff $/;"	l
ffff800000108b26	kernel.asm	/^ffff800000108b26:	ff d0                	callq  *%rax$/;"	l
ffff800000108b28	kernel.asm	/^ffff800000108b28:	e9 03 01 00 00       	jmpq   ffff800000108c30 <sys_unlink+0x285>$/;"	l
ffff800000108b2d	kernel.asm	/^ffff800000108b2d:	48 8d 45 e0          	lea    -0x20(%rbp),%rax$/;"	l
ffff800000108b31	kernel.asm	/^ffff800000108b31:	ba 10 00 00 00       	mov    $0x10,%edx$/;"	l
ffff800000108b36	kernel.asm	/^ffff800000108b36:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffff800000108b3b	kernel.asm	/^ffff800000108b3b:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000108b3e	kernel.asm	/^ffff800000108b3e:	48 b8 72 7b 10 00 00 	movabs $0xffff800000107b72,%rax$/;"	l
ffff800000108b45	kernel.asm	/^ffff800000108b45:	80 ff ff $/;"	l
ffff800000108b48	kernel.asm	/^ffff800000108b48:	ff d0                	callq  *%rax$/;"	l
ffff800000108b4a	kernel.asm	/^ffff800000108b4a:	8b 55 c4             	mov    -0x3c(%rbp),%edx$/;"	l
ffff800000108b4d	kernel.asm	/^ffff800000108b4d:	48 8d 75 e0          	lea    -0x20(%rbp),%rsi$/;"	l
ffff800000108b51	kernel.asm	/^ffff800000108b51:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000108b55	kernel.asm	/^ffff800000108b55:	b9 10 00 00 00       	mov    $0x10,%ecx$/;"	l
ffff800000108b5a	kernel.asm	/^ffff800000108b5a:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000108b5d	kernel.asm	/^ffff800000108b5d:	48 b8 dc 34 10 00 00 	movabs $0xffff8000001034dc,%rax$/;"	l
ffff800000108b64	kernel.asm	/^ffff800000108b64:	80 ff ff $/;"	l
ffff800000108b67	kernel.asm	/^ffff800000108b67:	ff d0                	callq  *%rax$/;"	l
ffff800000108b69	kernel.asm	/^ffff800000108b69:	83 f8 10             	cmp    $0x10,%eax$/;"	l
ffff800000108b6c	kernel.asm	/^ffff800000108b6c:	74 16                	je     ffff800000108b84 <sys_unlink+0x1d9>$/;"	l
ffff800000108b6e	kernel.asm	/^ffff800000108b6e:	48 bf c5 d9 10 00 00 	movabs $0xffff80000010d9c5,%rdi$/;"	l
ffff800000108b75	kernel.asm	/^ffff800000108b75:	80 ff ff $/;"	l
ffff800000108b78	kernel.asm	/^ffff800000108b78:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff800000108b7f	kernel.asm	/^ffff800000108b7f:	80 ff ff $/;"	l
ffff800000108b82	kernel.asm	/^ffff800000108b82:	ff d0                	callq  *%rax$/;"	l
ffff800000108b84	kernel.asm	/^ffff800000108b84:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000108b88	kernel.asm	/^ffff800000108b88:	0f b7 80 94 00 00 00 	movzwl 0x94(%rax),%eax$/;"	l
ffff800000108b8f	kernel.asm	/^ffff800000108b8f:	66 83 f8 01          	cmp    $0x1,%ax$/;"	l
ffff800000108b93	kernel.asm	/^ffff800000108b93:	75 2e                	jne    ffff800000108bc3 <sys_unlink+0x218>$/;"	l
ffff800000108b95	kernel.asm	/^ffff800000108b95:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000108b99	kernel.asm	/^ffff800000108b99:	0f b7 80 9a 00 00 00 	movzwl 0x9a(%rax),%eax$/;"	l
ffff800000108ba0	kernel.asm	/^ffff800000108ba0:	83 e8 01             	sub    $0x1,%eax$/;"	l
ffff800000108ba3	kernel.asm	/^ffff800000108ba3:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000108ba5	kernel.asm	/^ffff800000108ba5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000108ba9	kernel.asm	/^ffff800000108ba9:	66 89 90 9a 00 00 00 	mov    %dx,0x9a(%rax)$/;"	l
ffff800000108bb0	kernel.asm	/^ffff800000108bb0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000108bb4	kernel.asm	/^ffff800000108bb4:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000108bb7	kernel.asm	/^ffff800000108bb7:	48 b8 27 2a 10 00 00 	movabs $0xffff800000102a27,%rax$/;"	l
ffff800000108bbe	kernel.asm	/^ffff800000108bbe:	80 ff ff $/;"	l
ffff800000108bc1	kernel.asm	/^ffff800000108bc1:	ff d0                	callq  *%rax$/;"	l
ffff800000108bc3	kernel.asm	/^ffff800000108bc3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000108bc7	kernel.asm	/^ffff800000108bc7:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000108bca	kernel.asm	/^ffff800000108bca:	48 b8 9d 2f 10 00 00 	movabs $0xffff800000102f9d,%rax$/;"	l
ffff800000108bd1	kernel.asm	/^ffff800000108bd1:	80 ff ff $/;"	l
ffff800000108bd4	kernel.asm	/^ffff800000108bd4:	ff d0                	callq  *%rax$/;"	l
ffff800000108bd6	kernel.asm	/^ffff800000108bd6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000108bda	kernel.asm	/^ffff800000108bda:	0f b7 80 9a 00 00 00 	movzwl 0x9a(%rax),%eax$/;"	l
ffff800000108be1	kernel.asm	/^ffff800000108be1:	83 e8 01             	sub    $0x1,%eax$/;"	l
ffff800000108be4	kernel.asm	/^ffff800000108be4:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000108be6	kernel.asm	/^ffff800000108be6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000108bea	kernel.asm	/^ffff800000108bea:	66 89 90 9a 00 00 00 	mov    %dx,0x9a(%rax)$/;"	l
ffff800000108bf1	kernel.asm	/^ffff800000108bf1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000108bf5	kernel.asm	/^ffff800000108bf5:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000108bf8	kernel.asm	/^ffff800000108bf8:	48 b8 27 2a 10 00 00 	movabs $0xffff800000102a27,%rax$/;"	l
ffff800000108bff	kernel.asm	/^ffff800000108bff:	80 ff ff $/;"	l
ffff800000108c02	kernel.asm	/^ffff800000108c02:	ff d0                	callq  *%rax$/;"	l
ffff800000108c04	kernel.asm	/^ffff800000108c04:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000108c08	kernel.asm	/^ffff800000108c08:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000108c0b	kernel.asm	/^ffff800000108c0b:	48 b8 9d 2f 10 00 00 	movabs $0xffff800000102f9d,%rax$/;"	l
ffff800000108c12	kernel.asm	/^ffff800000108c12:	80 ff ff $/;"	l
ffff800000108c15	kernel.asm	/^ffff800000108c15:	ff d0                	callq  *%rax$/;"	l
ffff800000108c17	kernel.asm	/^ffff800000108c17:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000108c1c	kernel.asm	/^ffff800000108c1c:	48 ba a6 53 10 00 00 	movabs $0xffff8000001053a6,%rdx$/;"	l
ffff800000108c23	kernel.asm	/^ffff800000108c23:	80 ff ff $/;"	l
ffff800000108c26	kernel.asm	/^ffff800000108c26:	ff d2                	callq  *%rdx$/;"	l
ffff800000108c28	kernel.asm	/^ffff800000108c28:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000108c2d	kernel.asm	/^ffff800000108c2d:	eb 2a                	jmp    ffff800000108c59 <sys_unlink+0x2ae>$/;"	l
ffff800000108c2f	kernel.asm	/^ffff800000108c2f:	90                   	nop$/;"	l
ffff800000108c30	kernel.asm	/^ffff800000108c30:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000108c34	kernel.asm	/^ffff800000108c34:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000108c37	kernel.asm	/^ffff800000108c37:	48 b8 9d 2f 10 00 00 	movabs $0xffff800000102f9d,%rax$/;"	l
ffff800000108c3e	kernel.asm	/^ffff800000108c3e:	80 ff ff $/;"	l
ffff800000108c41	kernel.asm	/^ffff800000108c41:	ff d0                	callq  *%rax$/;"	l
ffff800000108c43	kernel.asm	/^ffff800000108c43:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000108c48	kernel.asm	/^ffff800000108c48:	48 ba a6 53 10 00 00 	movabs $0xffff8000001053a6,%rdx$/;"	l
ffff800000108c4f	kernel.asm	/^ffff800000108c4f:	80 ff ff $/;"	l
ffff800000108c52	kernel.asm	/^ffff800000108c52:	ff d2                	callq  *%rdx$/;"	l
ffff800000108c54	kernel.asm	/^ffff800000108c54:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff800000108c59	kernel.asm	/^ffff800000108c59:	c9                   	leaveq $/;"	l
ffff800000108c5a	kernel.asm	/^ffff800000108c5a:	c3                   	retq   $/;"	l
ffff800000108c5b	kernel.asm	/^ffff800000108c5b <create>:$/;"	l
ffff800000108c5b	kernel.asm	/^ffff800000108c5b:	55                   	push   %rbp$/;"	l
ffff800000108c5c	kernel.asm	/^ffff800000108c5c:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000108c5f	kernel.asm	/^ffff800000108c5f:	48 83 ec 50          	sub    $0x50,%rsp$/;"	l
ffff800000108c63	kernel.asm	/^ffff800000108c63:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)$/;"	l
ffff800000108c67	kernel.asm	/^ffff800000108c67:	89 c8                	mov    %ecx,%eax$/;"	l
ffff800000108c69	kernel.asm	/^ffff800000108c69:	66 89 75 c4          	mov    %si,-0x3c(%rbp)$/;"	l
ffff800000108c6d	kernel.asm	/^ffff800000108c6d:	66 89 55 c0          	mov    %dx,-0x40(%rbp)$/;"	l
ffff800000108c71	kernel.asm	/^ffff800000108c71:	66 89 45 bc          	mov    %ax,-0x44(%rbp)$/;"	l
ffff800000108c75	kernel.asm	/^ffff800000108c75:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx$/;"	l
ffff800000108c79	kernel.asm	/^ffff800000108c79:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
ffff800000108c7d	kernel.asm	/^ffff800000108c7d:	48 89 d6             	mov    %rdx,%rsi$/;"	l
ffff800000108c80	kernel.asm	/^ffff800000108c80:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000108c83	kernel.asm	/^ffff800000108c83:	48 b8 d3 3b 10 00 00 	movabs $0xffff800000103bd3,%rax$/;"	l
ffff800000108c8a	kernel.asm	/^ffff800000108c8a:	80 ff ff $/;"	l
ffff800000108c8d	kernel.asm	/^ffff800000108c8d:	ff d0                	callq  *%rax$/;"	l
ffff800000108c8f	kernel.asm	/^ffff800000108c8f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff800000108c93	kernel.asm	/^ffff800000108c93:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)$/;"	l
ffff800000108c98	kernel.asm	/^ffff800000108c98:	75 0a                	jne    ffff800000108ca4 <create+0x49>$/;"	l
ffff800000108c9a	kernel.asm	/^ffff800000108c9a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000108c9f	kernel.asm	/^ffff800000108c9f:	e9 1d 02 00 00       	jmpq   ffff800000108ec1 <create+0x266>$/;"	l
ffff800000108ca4	kernel.asm	/^ffff800000108ca4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000108ca8	kernel.asm	/^ffff800000108ca8:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000108cab	kernel.asm	/^ffff800000108cab:	48 b8 b9 2c 10 00 00 	movabs $0xffff800000102cb9,%rax$/;"	l
ffff800000108cb2	kernel.asm	/^ffff800000108cb2:	80 ff ff $/;"	l
ffff800000108cb5	kernel.asm	/^ffff800000108cb5:	ff d0                	callq  *%rax$/;"	l
ffff800000108cb7	kernel.asm	/^ffff800000108cb7:	48 8d 55 ec          	lea    -0x14(%rbp),%rdx$/;"	l
ffff800000108cbb	kernel.asm	/^ffff800000108cbb:	48 8d 4d d0          	lea    -0x30(%rbp),%rcx$/;"	l
ffff800000108cbf	kernel.asm	/^ffff800000108cbf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000108cc3	kernel.asm	/^ffff800000108cc3:	48 89 ce             	mov    %rcx,%rsi$/;"	l
ffff800000108cc6	kernel.asm	/^ffff800000108cc6:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000108cc9	kernel.asm	/^ffff800000108cc9:	48 b8 1f 37 10 00 00 	movabs $0xffff80000010371f,%rax$/;"	l
ffff800000108cd0	kernel.asm	/^ffff800000108cd0:	80 ff ff $/;"	l
ffff800000108cd3	kernel.asm	/^ffff800000108cd3:	ff d0                	callq  *%rax$/;"	l
ffff800000108cd5	kernel.asm	/^ffff800000108cd5:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ffff800000108cd9	kernel.asm	/^ffff800000108cd9:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)$/;"	l
ffff800000108cde	kernel.asm	/^ffff800000108cde:	74 64                	je     ffff800000108d44 <create+0xe9>$/;"	l
ffff800000108ce0	kernel.asm	/^ffff800000108ce0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000108ce4	kernel.asm	/^ffff800000108ce4:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000108ce7	kernel.asm	/^ffff800000108ce7:	48 b8 9d 2f 10 00 00 	movabs $0xffff800000102f9d,%rax$/;"	l
ffff800000108cee	kernel.asm	/^ffff800000108cee:	80 ff ff $/;"	l
ffff800000108cf1	kernel.asm	/^ffff800000108cf1:	ff d0                	callq  *%rax$/;"	l
ffff800000108cf3	kernel.asm	/^ffff800000108cf3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000108cf7	kernel.asm	/^ffff800000108cf7:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000108cfa	kernel.asm	/^ffff800000108cfa:	48 b8 b9 2c 10 00 00 	movabs $0xffff800000102cb9,%rax$/;"	l
ffff800000108d01	kernel.asm	/^ffff800000108d01:	80 ff ff $/;"	l
ffff800000108d04	kernel.asm	/^ffff800000108d04:	ff d0                	callq  *%rax$/;"	l
ffff800000108d06	kernel.asm	/^ffff800000108d06:	66 83 7d c4 02       	cmpw   $0x2,-0x3c(%rbp)$/;"	l
ffff800000108d0b	kernel.asm	/^ffff800000108d0b:	75 1a                	jne    ffff800000108d27 <create+0xcc>$/;"	l
ffff800000108d0d	kernel.asm	/^ffff800000108d0d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000108d11	kernel.asm	/^ffff800000108d11:	0f b7 80 94 00 00 00 	movzwl 0x94(%rax),%eax$/;"	l
ffff800000108d18	kernel.asm	/^ffff800000108d18:	66 83 f8 02          	cmp    $0x2,%ax$/;"	l
ffff800000108d1c	kernel.asm	/^ffff800000108d1c:	75 09                	jne    ffff800000108d27 <create+0xcc>$/;"	l
ffff800000108d1e	kernel.asm	/^ffff800000108d1e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000108d22	kernel.asm	/^ffff800000108d22:	e9 9a 01 00 00       	jmpq   ffff800000108ec1 <create+0x266>$/;"	l
ffff800000108d27	kernel.asm	/^ffff800000108d27:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000108d2b	kernel.asm	/^ffff800000108d2b:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000108d2e	kernel.asm	/^ffff800000108d2e:	48 b8 9d 2f 10 00 00 	movabs $0xffff800000102f9d,%rax$/;"	l
ffff800000108d35	kernel.asm	/^ffff800000108d35:	80 ff ff $/;"	l
ffff800000108d38	kernel.asm	/^ffff800000108d38:	ff d0                	callq  *%rax$/;"	l
ffff800000108d3a	kernel.asm	/^ffff800000108d3a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000108d3f	kernel.asm	/^ffff800000108d3f:	e9 7d 01 00 00       	jmpq   ffff800000108ec1 <create+0x266>$/;"	l
ffff800000108d44	kernel.asm	/^ffff800000108d44:	0f bf 55 c4          	movswl -0x3c(%rbp),%edx$/;"	l
ffff800000108d48	kernel.asm	/^ffff800000108d48:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000108d4c	kernel.asm	/^ffff800000108d4c:	8b 00                	mov    (%rax),%eax$/;"	l
ffff800000108d4e	kernel.asm	/^ffff800000108d4e:	89 d6                	mov    %edx,%esi$/;"	l
ffff800000108d50	kernel.asm	/^ffff800000108d50:	89 c7                	mov    %eax,%edi$/;"	l
ffff800000108d52	kernel.asm	/^ffff800000108d52:	48 b8 02 29 10 00 00 	movabs $0xffff800000102902,%rax$/;"	l
ffff800000108d59	kernel.asm	/^ffff800000108d59:	80 ff ff $/;"	l
ffff800000108d5c	kernel.asm	/^ffff800000108d5c:	ff d0                	callq  *%rax$/;"	l
ffff800000108d5e	kernel.asm	/^ffff800000108d5e:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ffff800000108d62	kernel.asm	/^ffff800000108d62:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)$/;"	l
ffff800000108d67	kernel.asm	/^ffff800000108d67:	75 16                	jne    ffff800000108d7f <create+0x124>$/;"	l
ffff800000108d69	kernel.asm	/^ffff800000108d69:	48 bf d4 d9 10 00 00 	movabs $0xffff80000010d9d4,%rdi$/;"	l
ffff800000108d70	kernel.asm	/^ffff800000108d70:	80 ff ff $/;"	l
ffff800000108d73	kernel.asm	/^ffff800000108d73:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff800000108d7a	kernel.asm	/^ffff800000108d7a:	80 ff ff $/;"	l
ffff800000108d7d	kernel.asm	/^ffff800000108d7d:	ff d0                	callq  *%rax$/;"	l
ffff800000108d7f	kernel.asm	/^ffff800000108d7f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000108d83	kernel.asm	/^ffff800000108d83:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000108d86	kernel.asm	/^ffff800000108d86:	48 b8 b9 2c 10 00 00 	movabs $0xffff800000102cb9,%rax$/;"	l
ffff800000108d8d	kernel.asm	/^ffff800000108d8d:	80 ff ff $/;"	l
ffff800000108d90	kernel.asm	/^ffff800000108d90:	ff d0                	callq  *%rax$/;"	l
ffff800000108d92	kernel.asm	/^ffff800000108d92:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000108d96	kernel.asm	/^ffff800000108d96:	0f b7 55 c0          	movzwl -0x40(%rbp),%edx$/;"	l
ffff800000108d9a	kernel.asm	/^ffff800000108d9a:	66 89 90 96 00 00 00 	mov    %dx,0x96(%rax)$/;"	l
ffff800000108da1	kernel.asm	/^ffff800000108da1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000108da5	kernel.asm	/^ffff800000108da5:	0f b7 55 bc          	movzwl -0x44(%rbp),%edx$/;"	l
ffff800000108da9	kernel.asm	/^ffff800000108da9:	66 89 90 98 00 00 00 	mov    %dx,0x98(%rax)$/;"	l
ffff800000108db0	kernel.asm	/^ffff800000108db0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000108db4	kernel.asm	/^ffff800000108db4:	66 c7 80 9a 00 00 00 	movw   $0x1,0x9a(%rax)$/;"	l
ffff800000108dbb	kernel.asm	/^ffff800000108dbb:	01 00 $/;"	l
ffff800000108dbd	kernel.asm	/^ffff800000108dbd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000108dc1	kernel.asm	/^ffff800000108dc1:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000108dc4	kernel.asm	/^ffff800000108dc4:	48 b8 27 2a 10 00 00 	movabs $0xffff800000102a27,%rax$/;"	l
ffff800000108dcb	kernel.asm	/^ffff800000108dcb:	80 ff ff $/;"	l
ffff800000108dce	kernel.asm	/^ffff800000108dce:	ff d0                	callq  *%rax$/;"	l
ffff800000108dd0	kernel.asm	/^ffff800000108dd0:	66 83 7d c4 01       	cmpw   $0x1,-0x3c(%rbp)$/;"	l
ffff800000108dd5	kernel.asm	/^ffff800000108dd5:	0f 85 94 00 00 00    	jne    ffff800000108e6f <create+0x214>$/;"	l
ffff800000108ddb	kernel.asm	/^ffff800000108ddb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000108ddf	kernel.asm	/^ffff800000108ddf:	0f b7 80 9a 00 00 00 	movzwl 0x9a(%rax),%eax$/;"	l
ffff800000108de6	kernel.asm	/^ffff800000108de6:	83 c0 01             	add    $0x1,%eax$/;"	l
ffff800000108de9	kernel.asm	/^ffff800000108de9:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000108deb	kernel.asm	/^ffff800000108deb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000108def	kernel.asm	/^ffff800000108def:	66 89 90 9a 00 00 00 	mov    %dx,0x9a(%rax)$/;"	l
ffff800000108df6	kernel.asm	/^ffff800000108df6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000108dfa	kernel.asm	/^ffff800000108dfa:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000108dfd	kernel.asm	/^ffff800000108dfd:	48 b8 27 2a 10 00 00 	movabs $0xffff800000102a27,%rax$/;"	l
ffff800000108e04	kernel.asm	/^ffff800000108e04:	80 ff ff $/;"	l
ffff800000108e07	kernel.asm	/^ffff800000108e07:	ff d0                	callq  *%rax$/;"	l
ffff800000108e09	kernel.asm	/^ffff800000108e09:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000108e0d	kernel.asm	/^ffff800000108e0d:	8b 50 04             	mov    0x4(%rax),%edx$/;"	l
ffff800000108e10	kernel.asm	/^ffff800000108e10:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000108e14	kernel.asm	/^ffff800000108e14:	48 be ae d9 10 00 00 	movabs $0xffff80000010d9ae,%rsi$/;"	l
ffff800000108e1b	kernel.asm	/^ffff800000108e1b:	80 ff ff $/;"	l
ffff800000108e1e	kernel.asm	/^ffff800000108e1e:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000108e21	kernel.asm	/^ffff800000108e21:	48 b8 1f 38 10 00 00 	movabs $0xffff80000010381f,%rax$/;"	l
ffff800000108e28	kernel.asm	/^ffff800000108e28:	80 ff ff $/;"	l
ffff800000108e2b	kernel.asm	/^ffff800000108e2b:	ff d0                	callq  *%rax$/;"	l
ffff800000108e2d	kernel.asm	/^ffff800000108e2d:	85 c0                	test   %eax,%eax$/;"	l
ffff800000108e2f	kernel.asm	/^ffff800000108e2f:	78 28                	js     ffff800000108e59 <create+0x1fe>$/;"	l
ffff800000108e31	kernel.asm	/^ffff800000108e31:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000108e35	kernel.asm	/^ffff800000108e35:	8b 50 04             	mov    0x4(%rax),%edx$/;"	l
ffff800000108e38	kernel.asm	/^ffff800000108e38:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000108e3c	kernel.asm	/^ffff800000108e3c:	48 be b0 d9 10 00 00 	movabs $0xffff80000010d9b0,%rsi$/;"	l
ffff800000108e43	kernel.asm	/^ffff800000108e43:	80 ff ff $/;"	l
ffff800000108e46	kernel.asm	/^ffff800000108e46:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000108e49	kernel.asm	/^ffff800000108e49:	48 b8 1f 38 10 00 00 	movabs $0xffff80000010381f,%rax$/;"	l
ffff800000108e50	kernel.asm	/^ffff800000108e50:	80 ff ff $/;"	l
ffff800000108e53	kernel.asm	/^ffff800000108e53:	ff d0                	callq  *%rax$/;"	l
ffff800000108e55	kernel.asm	/^ffff800000108e55:	85 c0                	test   %eax,%eax$/;"	l
ffff800000108e57	kernel.asm	/^ffff800000108e57:	79 16                	jns    ffff800000108e6f <create+0x214>$/;"	l
ffff800000108e59	kernel.asm	/^ffff800000108e59:	48 bf e3 d9 10 00 00 	movabs $0xffff80000010d9e3,%rdi$/;"	l
ffff800000108e60	kernel.asm	/^ffff800000108e60:	80 ff ff $/;"	l
ffff800000108e63	kernel.asm	/^ffff800000108e63:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff800000108e6a	kernel.asm	/^ffff800000108e6a:	80 ff ff $/;"	l
ffff800000108e6d	kernel.asm	/^ffff800000108e6d:	ff d0                	callq  *%rax$/;"	l
ffff800000108e6f	kernel.asm	/^ffff800000108e6f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000108e73	kernel.asm	/^ffff800000108e73:	8b 50 04             	mov    0x4(%rax),%edx$/;"	l
ffff800000108e76	kernel.asm	/^ffff800000108e76:	48 8d 4d d0          	lea    -0x30(%rbp),%rcx$/;"	l
ffff800000108e7a	kernel.asm	/^ffff800000108e7a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000108e7e	kernel.asm	/^ffff800000108e7e:	48 89 ce             	mov    %rcx,%rsi$/;"	l
ffff800000108e81	kernel.asm	/^ffff800000108e81:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000108e84	kernel.asm	/^ffff800000108e84:	48 b8 1f 38 10 00 00 	movabs $0xffff80000010381f,%rax$/;"	l
ffff800000108e8b	kernel.asm	/^ffff800000108e8b:	80 ff ff $/;"	l
ffff800000108e8e	kernel.asm	/^ffff800000108e8e:	ff d0                	callq  *%rax$/;"	l
ffff800000108e90	kernel.asm	/^ffff800000108e90:	85 c0                	test   %eax,%eax$/;"	l
ffff800000108e92	kernel.asm	/^ffff800000108e92:	79 16                	jns    ffff800000108eaa <create+0x24f>$/;"	l
ffff800000108e94	kernel.asm	/^ffff800000108e94:	48 bf ef d9 10 00 00 	movabs $0xffff80000010d9ef,%rdi$/;"	l
ffff800000108e9b	kernel.asm	/^ffff800000108e9b:	80 ff ff $/;"	l
ffff800000108e9e	kernel.asm	/^ffff800000108e9e:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff800000108ea5	kernel.asm	/^ffff800000108ea5:	80 ff ff $/;"	l
ffff800000108ea8	kernel.asm	/^ffff800000108ea8:	ff d0                	callq  *%rax$/;"	l
ffff800000108eaa	kernel.asm	/^ffff800000108eaa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000108eae	kernel.asm	/^ffff800000108eae:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000108eb1	kernel.asm	/^ffff800000108eb1:	48 b8 9d 2f 10 00 00 	movabs $0xffff800000102f9d,%rax$/;"	l
ffff800000108eb8	kernel.asm	/^ffff800000108eb8:	80 ff ff $/;"	l
ffff800000108ebb	kernel.asm	/^ffff800000108ebb:	ff d0                	callq  *%rax$/;"	l
ffff800000108ebd	kernel.asm	/^ffff800000108ebd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000108ec1	kernel.asm	/^ffff800000108ec1:	c9                   	leaveq $/;"	l
ffff800000108ec2	kernel.asm	/^ffff800000108ec2:	c3                   	retq   $/;"	l
ffff800000108ec3	kernel.asm	/^ffff800000108ec3 <sys_open>:$/;"	l
ffff800000108ec3	kernel.asm	/^ffff800000108ec3:	55                   	push   %rbp$/;"	l
ffff800000108ec4	kernel.asm	/^ffff800000108ec4:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000108ec7	kernel.asm	/^ffff800000108ec7:	48 83 ec 30          	sub    $0x30,%rsp$/;"	l
ffff800000108ecb	kernel.asm	/^ffff800000108ecb:	48 8d 45 e0          	lea    -0x20(%rbp),%rax$/;"	l
ffff800000108ecf	kernel.asm	/^ffff800000108ecf:	48 89 c6             	mov    %rax,%rsi$/;"	l
ffff800000108ed2	kernel.asm	/^ffff800000108ed2:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
ffff800000108ed7	kernel.asm	/^ffff800000108ed7:	48 b8 ca 81 10 00 00 	movabs $0xffff8000001081ca,%rax$/;"	l
ffff800000108ede	kernel.asm	/^ffff800000108ede:	80 ff ff $/;"	l
ffff800000108ee1	kernel.asm	/^ffff800000108ee1:	ff d0                	callq  *%rax$/;"	l
ffff800000108ee3	kernel.asm	/^ffff800000108ee3:	85 c0                	test   %eax,%eax$/;"	l
ffff800000108ee5	kernel.asm	/^ffff800000108ee5:	78 1c                	js     ffff800000108f03 <sys_open+0x40>$/;"	l
ffff800000108ee7	kernel.asm	/^ffff800000108ee7:	48 8d 45 dc          	lea    -0x24(%rbp),%rax$/;"	l
ffff800000108eeb	kernel.asm	/^ffff800000108eeb:	48 89 c6             	mov    %rax,%rsi$/;"	l
ffff800000108eee	kernel.asm	/^ffff800000108eee:	bf 01 00 00 00       	mov    $0x1,%edi$/;"	l
ffff800000108ef3	kernel.asm	/^ffff800000108ef3:	48 b8 da 80 10 00 00 	movabs $0xffff8000001080da,%rax$/;"	l
ffff800000108efa	kernel.asm	/^ffff800000108efa:	80 ff ff $/;"	l
ffff800000108efd	kernel.asm	/^ffff800000108efd:	ff d0                	callq  *%rax$/;"	l
ffff800000108eff	kernel.asm	/^ffff800000108eff:	85 c0                	test   %eax,%eax$/;"	l
ffff800000108f01	kernel.asm	/^ffff800000108f01:	79 0a                	jns    ffff800000108f0d <sys_open+0x4a>$/;"	l
ffff800000108f03	kernel.asm	/^ffff800000108f03:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff800000108f08	kernel.asm	/^ffff800000108f08:	e9 fb 01 00 00       	jmpq   ffff800000109108 <sys_open+0x245>$/;"	l
ffff800000108f0d	kernel.asm	/^ffff800000108f0d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000108f12	kernel.asm	/^ffff800000108f12:	48 ba d0 52 10 00 00 	movabs $0xffff8000001052d0,%rdx$/;"	l
ffff800000108f19	kernel.asm	/^ffff800000108f19:	80 ff ff $/;"	l
ffff800000108f1c	kernel.asm	/^ffff800000108f1c:	ff d2                	callq  *%rdx$/;"	l
ffff800000108f1e	kernel.asm	/^ffff800000108f1e:	8b 45 dc             	mov    -0x24(%rbp),%eax$/;"	l
ffff800000108f21	kernel.asm	/^ffff800000108f21:	25 00 02 00 00       	and    $0x200,%eax$/;"	l
ffff800000108f26	kernel.asm	/^ffff800000108f26:	85 c0                	test   %eax,%eax$/;"	l
ffff800000108f28	kernel.asm	/^ffff800000108f28:	74 4c                	je     ffff800000108f76 <sys_open+0xb3>$/;"	l
ffff800000108f2a	kernel.asm	/^ffff800000108f2a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff800000108f2e	kernel.asm	/^ffff800000108f2e:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
ffff800000108f33	kernel.asm	/^ffff800000108f33:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
ffff800000108f38	kernel.asm	/^ffff800000108f38:	be 02 00 00 00       	mov    $0x2,%esi$/;"	l
ffff800000108f3d	kernel.asm	/^ffff800000108f3d:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000108f40	kernel.asm	/^ffff800000108f40:	48 b8 5b 8c 10 00 00 	movabs $0xffff800000108c5b,%rax$/;"	l
ffff800000108f47	kernel.asm	/^ffff800000108f47:	80 ff ff $/;"	l
ffff800000108f4a	kernel.asm	/^ffff800000108f4a:	ff d0                	callq  *%rax$/;"	l
ffff800000108f4c	kernel.asm	/^ffff800000108f4c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff800000108f50	kernel.asm	/^ffff800000108f50:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)$/;"	l
ffff800000108f55	kernel.asm	/^ffff800000108f55:	0f 85 ad 00 00 00    	jne    ffff800000109008 <sys_open+0x145>$/;"	l
ffff800000108f5b	kernel.asm	/^ffff800000108f5b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000108f60	kernel.asm	/^ffff800000108f60:	48 ba a6 53 10 00 00 	movabs $0xffff8000001053a6,%rdx$/;"	l
ffff800000108f67	kernel.asm	/^ffff800000108f67:	80 ff ff $/;"	l
ffff800000108f6a	kernel.asm	/^ffff800000108f6a:	ff d2                	callq  *%rdx$/;"	l
ffff800000108f6c	kernel.asm	/^ffff800000108f6c:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff800000108f71	kernel.asm	/^ffff800000108f71:	e9 92 01 00 00       	jmpq   ffff800000109108 <sys_open+0x245>$/;"	l
ffff800000108f76	kernel.asm	/^ffff800000108f76:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff800000108f7a	kernel.asm	/^ffff800000108f7a:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000108f7d	kernel.asm	/^ffff800000108f7d:	48 b8 a9 3b 10 00 00 	movabs $0xffff800000103ba9,%rax$/;"	l
ffff800000108f84	kernel.asm	/^ffff800000108f84:	80 ff ff $/;"	l
ffff800000108f87	kernel.asm	/^ffff800000108f87:	ff d0                	callq  *%rax$/;"	l
ffff800000108f89	kernel.asm	/^ffff800000108f89:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff800000108f8d	kernel.asm	/^ffff800000108f8d:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)$/;"	l
ffff800000108f92	kernel.asm	/^ffff800000108f92:	75 1b                	jne    ffff800000108faf <sys_open+0xec>$/;"	l
ffff800000108f94	kernel.asm	/^ffff800000108f94:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000108f99	kernel.asm	/^ffff800000108f99:	48 ba a6 53 10 00 00 	movabs $0xffff8000001053a6,%rdx$/;"	l
ffff800000108fa0	kernel.asm	/^ffff800000108fa0:	80 ff ff $/;"	l
ffff800000108fa3	kernel.asm	/^ffff800000108fa3:	ff d2                	callq  *%rdx$/;"	l
ffff800000108fa5	kernel.asm	/^ffff800000108fa5:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff800000108faa	kernel.asm	/^ffff800000108faa:	e9 59 01 00 00       	jmpq   ffff800000109108 <sys_open+0x245>$/;"	l
ffff800000108faf	kernel.asm	/^ffff800000108faf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000108fb3	kernel.asm	/^ffff800000108fb3:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000108fb6	kernel.asm	/^ffff800000108fb6:	48 b8 b9 2c 10 00 00 	movabs $0xffff800000102cb9,%rax$/;"	l
ffff800000108fbd	kernel.asm	/^ffff800000108fbd:	80 ff ff $/;"	l
ffff800000108fc0	kernel.asm	/^ffff800000108fc0:	ff d0                	callq  *%rax$/;"	l
ffff800000108fc2	kernel.asm	/^ffff800000108fc2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000108fc6	kernel.asm	/^ffff800000108fc6:	0f b7 80 94 00 00 00 	movzwl 0x94(%rax),%eax$/;"	l
ffff800000108fcd	kernel.asm	/^ffff800000108fcd:	66 83 f8 01          	cmp    $0x1,%ax$/;"	l
ffff800000108fd1	kernel.asm	/^ffff800000108fd1:	75 35                	jne    ffff800000109008 <sys_open+0x145>$/;"	l
ffff800000108fd3	kernel.asm	/^ffff800000108fd3:	8b 45 dc             	mov    -0x24(%rbp),%eax$/;"	l
ffff800000108fd6	kernel.asm	/^ffff800000108fd6:	85 c0                	test   %eax,%eax$/;"	l
ffff800000108fd8	kernel.asm	/^ffff800000108fd8:	74 2e                	je     ffff800000109008 <sys_open+0x145>$/;"	l
ffff800000108fda	kernel.asm	/^ffff800000108fda:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000108fde	kernel.asm	/^ffff800000108fde:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000108fe1	kernel.asm	/^ffff800000108fe1:	48 b8 9d 2f 10 00 00 	movabs $0xffff800000102f9d,%rax$/;"	l
ffff800000108fe8	kernel.asm	/^ffff800000108fe8:	80 ff ff $/;"	l
ffff800000108feb	kernel.asm	/^ffff800000108feb:	ff d0                	callq  *%rax$/;"	l
ffff800000108fed	kernel.asm	/^ffff800000108fed:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000108ff2	kernel.asm	/^ffff800000108ff2:	48 ba a6 53 10 00 00 	movabs $0xffff8000001053a6,%rdx$/;"	l
ffff800000108ff9	kernel.asm	/^ffff800000108ff9:	80 ff ff $/;"	l
ffff800000108ffc	kernel.asm	/^ffff800000108ffc:	ff d2                	callq  *%rdx$/;"	l
ffff800000108ffe	kernel.asm	/^ffff800000108ffe:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff800000109003	kernel.asm	/^ffff800000109003:	e9 00 01 00 00       	jmpq   ffff800000109108 <sys_open+0x245>$/;"	l
ffff800000109008	kernel.asm	/^ffff800000109008:	48 b8 de 1e 10 00 00 	movabs $0xffff800000101ede,%rax$/;"	l
ffff80000010900f	kernel.asm	/^ffff80000010900f:	80 ff ff $/;"	l
ffff800000109012	kernel.asm	/^ffff800000109012:	ff d0                	callq  *%rax$/;"	l
ffff800000109014	kernel.asm	/^ffff800000109014:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ffff800000109018	kernel.asm	/^ffff800000109018:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)$/;"	l
ffff80000010901d	kernel.asm	/^ffff80000010901d:	74 1c                	je     ffff80000010903b <sys_open+0x178>$/;"	l
ffff80000010901f	kernel.asm	/^ffff80000010901f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000109023	kernel.asm	/^ffff800000109023:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000109026	kernel.asm	/^ffff800000109026:	48 b8 86 83 10 00 00 	movabs $0xffff800000108386,%rax$/;"	l
ffff80000010902d	kernel.asm	/^ffff80000010902d:	80 ff ff $/;"	l
ffff800000109030	kernel.asm	/^ffff800000109030:	ff d0                	callq  *%rax$/;"	l
ffff800000109032	kernel.asm	/^ffff800000109032:	89 45 ec             	mov    %eax,-0x14(%rbp)$/;"	l
ffff800000109035	kernel.asm	/^ffff800000109035:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)$/;"	l
ffff800000109039	kernel.asm	/^ffff800000109039:	79 48                	jns    ffff800000109083 <sys_open+0x1c0>$/;"	l
ffff80000010903b	kernel.asm	/^ffff80000010903b:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)$/;"	l
ffff800000109040	kernel.asm	/^ffff800000109040:	74 13                	je     ffff800000109055 <sys_open+0x192>$/;"	l
ffff800000109042	kernel.asm	/^ffff800000109042:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000109046	kernel.asm	/^ffff800000109046:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000109049	kernel.asm	/^ffff800000109049:	48 b8 e0 1f 10 00 00 	movabs $0xffff800000101fe0,%rax$/;"	l
ffff800000109050	kernel.asm	/^ffff800000109050:	80 ff ff $/;"	l
ffff800000109053	kernel.asm	/^ffff800000109053:	ff d0                	callq  *%rax$/;"	l
ffff800000109055	kernel.asm	/^ffff800000109055:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000109059	kernel.asm	/^ffff800000109059:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010905c	kernel.asm	/^ffff80000010905c:	48 b8 9d 2f 10 00 00 	movabs $0xffff800000102f9d,%rax$/;"	l
ffff800000109063	kernel.asm	/^ffff800000109063:	80 ff ff $/;"	l
ffff800000109066	kernel.asm	/^ffff800000109066:	ff d0                	callq  *%rax$/;"	l
ffff800000109068	kernel.asm	/^ffff800000109068:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff80000010906d	kernel.asm	/^ffff80000010906d:	48 ba a6 53 10 00 00 	movabs $0xffff8000001053a6,%rdx$/;"	l
ffff800000109074	kernel.asm	/^ffff800000109074:	80 ff ff $/;"	l
ffff800000109077	kernel.asm	/^ffff800000109077:	ff d2                	callq  *%rdx$/;"	l
ffff800000109079	kernel.asm	/^ffff800000109079:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff80000010907e	kernel.asm	/^ffff80000010907e:	e9 85 00 00 00       	jmpq   ffff800000109108 <sys_open+0x245>$/;"	l
ffff800000109083	kernel.asm	/^ffff800000109083:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000109087	kernel.asm	/^ffff800000109087:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010908a	kernel.asm	/^ffff80000010908a:	48 b8 4a 2e 10 00 00 	movabs $0xffff800000102e4a,%rax$/;"	l
ffff800000109091	kernel.asm	/^ffff800000109091:	80 ff ff $/;"	l
ffff800000109094	kernel.asm	/^ffff800000109094:	ff d0                	callq  *%rax$/;"	l
ffff800000109096	kernel.asm	/^ffff800000109096:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff80000010909b	kernel.asm	/^ffff80000010909b:	48 ba a6 53 10 00 00 	movabs $0xffff8000001053a6,%rdx$/;"	l
ffff8000001090a2	kernel.asm	/^ffff8000001090a2:	80 ff ff $/;"	l
ffff8000001090a5	kernel.asm	/^ffff8000001090a5:	ff d2                	callq  *%rdx$/;"	l
ffff8000001090a7	kernel.asm	/^ffff8000001090a7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff8000001090ab	kernel.asm	/^ffff8000001090ab:	c7 00 02 00 00 00    	movl   $0x2,(%rax)$/;"	l
ffff8000001090b1	kernel.asm	/^ffff8000001090b1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff8000001090b5	kernel.asm	/^ffff8000001090b5:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx$/;"	l
ffff8000001090b9	kernel.asm	/^ffff8000001090b9:	48 89 50 18          	mov    %rdx,0x18(%rax)$/;"	l
ffff8000001090bd	kernel.asm	/^ffff8000001090bd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff8000001090c1	kernel.asm	/^ffff8000001090c1:	c7 40 20 00 00 00 00 	movl   $0x0,0x20(%rax)$/;"	l
ffff8000001090c8	kernel.asm	/^ffff8000001090c8:	8b 45 dc             	mov    -0x24(%rbp),%eax$/;"	l
ffff8000001090cb	kernel.asm	/^ffff8000001090cb:	83 e0 01             	and    $0x1,%eax$/;"	l
ffff8000001090ce	kernel.asm	/^ffff8000001090ce:	85 c0                	test   %eax,%eax$/;"	l
ffff8000001090d0	kernel.asm	/^ffff8000001090d0:	0f 94 c0             	sete   %al$/;"	l
ffff8000001090d3	kernel.asm	/^ffff8000001090d3:	89 c2                	mov    %eax,%edx$/;"	l
ffff8000001090d5	kernel.asm	/^ffff8000001090d5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff8000001090d9	kernel.asm	/^ffff8000001090d9:	88 50 08             	mov    %dl,0x8(%rax)$/;"	l
ffff8000001090dc	kernel.asm	/^ffff8000001090dc:	8b 45 dc             	mov    -0x24(%rbp),%eax$/;"	l
ffff8000001090df	kernel.asm	/^ffff8000001090df:	83 e0 01             	and    $0x1,%eax$/;"	l
ffff8000001090e2	kernel.asm	/^ffff8000001090e2:	85 c0                	test   %eax,%eax$/;"	l
ffff8000001090e4	kernel.asm	/^ffff8000001090e4:	75 0a                	jne    ffff8000001090f0 <sys_open+0x22d>$/;"	l
ffff8000001090e6	kernel.asm	/^ffff8000001090e6:	8b 45 dc             	mov    -0x24(%rbp),%eax$/;"	l
ffff8000001090e9	kernel.asm	/^ffff8000001090e9:	83 e0 02             	and    $0x2,%eax$/;"	l
ffff8000001090ec	kernel.asm	/^ffff8000001090ec:	85 c0                	test   %eax,%eax$/;"	l
ffff8000001090ee	kernel.asm	/^ffff8000001090ee:	74 07                	je     ffff8000001090f7 <sys_open+0x234>$/;"	l
ffff8000001090f0	kernel.asm	/^ffff8000001090f0:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
ffff8000001090f5	kernel.asm	/^ffff8000001090f5:	eb 05                	jmp    ffff8000001090fc <sys_open+0x239>$/;"	l
ffff8000001090f7	kernel.asm	/^ffff8000001090f7:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff8000001090fc	kernel.asm	/^ffff8000001090fc:	89 c2                	mov    %eax,%edx$/;"	l
ffff8000001090fe	kernel.asm	/^ffff8000001090fe:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000109102	kernel.asm	/^ffff800000109102:	88 50 09             	mov    %dl,0x9(%rax)$/;"	l
ffff800000109105	kernel.asm	/^ffff800000109105:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
ffff800000109108	kernel.asm	/^ffff800000109108:	c9                   	leaveq $/;"	l
ffff800000109109	kernel.asm	/^ffff800000109109:	c3                   	retq   $/;"	l
ffff80000010910a	kernel.asm	/^ffff80000010910a <sys_mkdir>:$/;"	l
ffff80000010910a	kernel.asm	/^ffff80000010910a:	55                   	push   %rbp$/;"	l
ffff80000010910b	kernel.asm	/^ffff80000010910b:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010910e	kernel.asm	/^ffff80000010910e:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff800000109112	kernel.asm	/^ffff800000109112:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000109117	kernel.asm	/^ffff800000109117:	48 ba d0 52 10 00 00 	movabs $0xffff8000001052d0,%rdx$/;"	l
ffff80000010911e	kernel.asm	/^ffff80000010911e:	80 ff ff $/;"	l
ffff800000109121	kernel.asm	/^ffff800000109121:	ff d2                	callq  *%rdx$/;"	l
ffff800000109123	kernel.asm	/^ffff800000109123:	48 8d 45 f0          	lea    -0x10(%rbp),%rax$/;"	l
ffff800000109127	kernel.asm	/^ffff800000109127:	48 89 c6             	mov    %rax,%rsi$/;"	l
ffff80000010912a	kernel.asm	/^ffff80000010912a:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
ffff80000010912f	kernel.asm	/^ffff80000010912f:	48 b8 ca 81 10 00 00 	movabs $0xffff8000001081ca,%rax$/;"	l
ffff800000109136	kernel.asm	/^ffff800000109136:	80 ff ff $/;"	l
ffff800000109139	kernel.asm	/^ffff800000109139:	ff d0                	callq  *%rax$/;"	l
ffff80000010913b	kernel.asm	/^ffff80000010913b:	85 c0                	test   %eax,%eax$/;"	l
ffff80000010913d	kernel.asm	/^ffff80000010913d:	78 2d                	js     ffff80000010916c <sys_mkdir+0x62>$/;"	l
ffff80000010913f	kernel.asm	/^ffff80000010913f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000109143	kernel.asm	/^ffff800000109143:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
ffff800000109148	kernel.asm	/^ffff800000109148:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
ffff80000010914d	kernel.asm	/^ffff80000010914d:	be 01 00 00 00       	mov    $0x1,%esi$/;"	l
ffff800000109152	kernel.asm	/^ffff800000109152:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000109155	kernel.asm	/^ffff800000109155:	48 b8 5b 8c 10 00 00 	movabs $0xffff800000108c5b,%rax$/;"	l
ffff80000010915c	kernel.asm	/^ffff80000010915c:	80 ff ff $/;"	l
ffff80000010915f	kernel.asm	/^ffff80000010915f:	ff d0                	callq  *%rax$/;"	l
ffff800000109161	kernel.asm	/^ffff800000109161:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff800000109165	kernel.asm	/^ffff800000109165:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)$/;"	l
ffff80000010916a	kernel.asm	/^ffff80000010916a:	75 18                	jne    ffff800000109184 <sys_mkdir+0x7a>$/;"	l
ffff80000010916c	kernel.asm	/^ffff80000010916c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000109171	kernel.asm	/^ffff800000109171:	48 ba a6 53 10 00 00 	movabs $0xffff8000001053a6,%rdx$/;"	l
ffff800000109178	kernel.asm	/^ffff800000109178:	80 ff ff $/;"	l
ffff80000010917b	kernel.asm	/^ffff80000010917b:	ff d2                	callq  *%rdx$/;"	l
ffff80000010917d	kernel.asm	/^ffff80000010917d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff800000109182	kernel.asm	/^ffff800000109182:	eb 29                	jmp    ffff8000001091ad <sys_mkdir+0xa3>$/;"	l
ffff800000109184	kernel.asm	/^ffff800000109184:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000109188	kernel.asm	/^ffff800000109188:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010918b	kernel.asm	/^ffff80000010918b:	48 b8 9d 2f 10 00 00 	movabs $0xffff800000102f9d,%rax$/;"	l
ffff800000109192	kernel.asm	/^ffff800000109192:	80 ff ff $/;"	l
ffff800000109195	kernel.asm	/^ffff800000109195:	ff d0                	callq  *%rax$/;"	l
ffff800000109197	kernel.asm	/^ffff800000109197:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff80000010919c	kernel.asm	/^ffff80000010919c:	48 ba a6 53 10 00 00 	movabs $0xffff8000001053a6,%rdx$/;"	l
ffff8000001091a3	kernel.asm	/^ffff8000001091a3:	80 ff ff $/;"	l
ffff8000001091a6	kernel.asm	/^ffff8000001091a6:	ff d2                	callq  *%rdx$/;"	l
ffff8000001091a8	kernel.asm	/^ffff8000001091a8:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff8000001091ad	kernel.asm	/^ffff8000001091ad:	c9                   	leaveq $/;"	l
ffff8000001091ae	kernel.asm	/^ffff8000001091ae:	c3                   	retq   $/;"	l
ffff8000001091af	kernel.asm	/^ffff8000001091af <sys_mknod>:$/;"	l
ffff8000001091af	kernel.asm	/^ffff8000001091af:	55                   	push   %rbp$/;"	l
ffff8000001091b0	kernel.asm	/^ffff8000001091b0:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff8000001091b3	kernel.asm	/^ffff8000001091b3:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ffff8000001091b7	kernel.asm	/^ffff8000001091b7:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff8000001091bc	kernel.asm	/^ffff8000001091bc:	48 ba d0 52 10 00 00 	movabs $0xffff8000001052d0,%rdx$/;"	l
ffff8000001091c3	kernel.asm	/^ffff8000001091c3:	80 ff ff $/;"	l
ffff8000001091c6	kernel.asm	/^ffff8000001091c6:	ff d2                	callq  *%rdx$/;"	l
ffff8000001091c8	kernel.asm	/^ffff8000001091c8:	48 8d 45 f0          	lea    -0x10(%rbp),%rax$/;"	l
ffff8000001091cc	kernel.asm	/^ffff8000001091cc:	48 89 c6             	mov    %rax,%rsi$/;"	l
ffff8000001091cf	kernel.asm	/^ffff8000001091cf:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
ffff8000001091d4	kernel.asm	/^ffff8000001091d4:	48 b8 ca 81 10 00 00 	movabs $0xffff8000001081ca,%rax$/;"	l
ffff8000001091db	kernel.asm	/^ffff8000001091db:	80 ff ff $/;"	l
ffff8000001091de	kernel.asm	/^ffff8000001091de:	ff d0                	callq  *%rax$/;"	l
ffff8000001091e0	kernel.asm	/^ffff8000001091e0:	85 c0                	test   %eax,%eax$/;"	l
ffff8000001091e2	kernel.asm	/^ffff8000001091e2:	78 67                	js     ffff80000010924b <sys_mknod+0x9c>$/;"	l
ffff8000001091e4	kernel.asm	/^ffff8000001091e4:	48 8d 45 ec          	lea    -0x14(%rbp),%rax$/;"	l
ffff8000001091e8	kernel.asm	/^ffff8000001091e8:	48 89 c6             	mov    %rax,%rsi$/;"	l
ffff8000001091eb	kernel.asm	/^ffff8000001091eb:	bf 01 00 00 00       	mov    $0x1,%edi$/;"	l
ffff8000001091f0	kernel.asm	/^ffff8000001091f0:	48 b8 da 80 10 00 00 	movabs $0xffff8000001080da,%rax$/;"	l
ffff8000001091f7	kernel.asm	/^ffff8000001091f7:	80 ff ff $/;"	l
ffff8000001091fa	kernel.asm	/^ffff8000001091fa:	ff d0                	callq  *%rax$/;"	l
ffff8000001091fc	kernel.asm	/^ffff8000001091fc:	85 c0                	test   %eax,%eax$/;"	l
ffff8000001091fe	kernel.asm	/^ffff8000001091fe:	78 4b                	js     ffff80000010924b <sys_mknod+0x9c>$/;"	l
ffff800000109200	kernel.asm	/^ffff800000109200:	48 8d 45 e8          	lea    -0x18(%rbp),%rax$/;"	l
ffff800000109204	kernel.asm	/^ffff800000109204:	48 89 c6             	mov    %rax,%rsi$/;"	l
ffff800000109207	kernel.asm	/^ffff800000109207:	bf 02 00 00 00       	mov    $0x2,%edi$/;"	l
ffff80000010920c	kernel.asm	/^ffff80000010920c:	48 b8 da 80 10 00 00 	movabs $0xffff8000001080da,%rax$/;"	l
ffff800000109213	kernel.asm	/^ffff800000109213:	80 ff ff $/;"	l
ffff800000109216	kernel.asm	/^ffff800000109216:	ff d0                	callq  *%rax$/;"	l
ffff800000109218	kernel.asm	/^ffff800000109218:	85 c0                	test   %eax,%eax$/;"	l
ffff80000010921a	kernel.asm	/^ffff80000010921a:	78 2f                	js     ffff80000010924b <sys_mknod+0x9c>$/;"	l
ffff80000010921c	kernel.asm	/^ffff80000010921c:	8b 45 e8             	mov    -0x18(%rbp),%eax$/;"	l
ffff80000010921f	kernel.asm	/^ffff80000010921f:	0f bf c8             	movswl %ax,%ecx$/;"	l
ffff800000109222	kernel.asm	/^ffff800000109222:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
ffff800000109225	kernel.asm	/^ffff800000109225:	0f bf d0             	movswl %ax,%edx$/;"	l
ffff800000109228	kernel.asm	/^ffff800000109228:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff80000010922c	kernel.asm	/^ffff80000010922c:	be 03 00 00 00       	mov    $0x3,%esi$/;"	l
ffff800000109231	kernel.asm	/^ffff800000109231:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000109234	kernel.asm	/^ffff800000109234:	48 b8 5b 8c 10 00 00 	movabs $0xffff800000108c5b,%rax$/;"	l
ffff80000010923b	kernel.asm	/^ffff80000010923b:	80 ff ff $/;"	l
ffff80000010923e	kernel.asm	/^ffff80000010923e:	ff d0                	callq  *%rax$/;"	l
ffff800000109240	kernel.asm	/^ffff800000109240:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff800000109244	kernel.asm	/^ffff800000109244:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)$/;"	l
ffff800000109249	kernel.asm	/^ffff800000109249:	75 18                	jne    ffff800000109263 <sys_mknod+0xb4>$/;"	l
ffff80000010924b	kernel.asm	/^ffff80000010924b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000109250	kernel.asm	/^ffff800000109250:	48 ba a6 53 10 00 00 	movabs $0xffff8000001053a6,%rdx$/;"	l
ffff800000109257	kernel.asm	/^ffff800000109257:	80 ff ff $/;"	l
ffff80000010925a	kernel.asm	/^ffff80000010925a:	ff d2                	callq  *%rdx$/;"	l
ffff80000010925c	kernel.asm	/^ffff80000010925c:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff800000109261	kernel.asm	/^ffff800000109261:	eb 29                	jmp    ffff80000010928c <sys_mknod+0xdd>$/;"	l
ffff800000109263	kernel.asm	/^ffff800000109263:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000109267	kernel.asm	/^ffff800000109267:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010926a	kernel.asm	/^ffff80000010926a:	48 b8 9d 2f 10 00 00 	movabs $0xffff800000102f9d,%rax$/;"	l
ffff800000109271	kernel.asm	/^ffff800000109271:	80 ff ff $/;"	l
ffff800000109274	kernel.asm	/^ffff800000109274:	ff d0                	callq  *%rax$/;"	l
ffff800000109276	kernel.asm	/^ffff800000109276:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff80000010927b	kernel.asm	/^ffff80000010927b:	48 ba a6 53 10 00 00 	movabs $0xffff8000001053a6,%rdx$/;"	l
ffff800000109282	kernel.asm	/^ffff800000109282:	80 ff ff $/;"	l
ffff800000109285	kernel.asm	/^ffff800000109285:	ff d2                	callq  *%rdx$/;"	l
ffff800000109287	kernel.asm	/^ffff800000109287:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff80000010928c	kernel.asm	/^ffff80000010928c:	c9                   	leaveq $/;"	l
ffff80000010928d	kernel.asm	/^ffff80000010928d:	c3                   	retq   $/;"	l
ffff80000010928e	kernel.asm	/^ffff80000010928e <sys_chdir>:$/;"	l
ffff80000010928e	kernel.asm	/^ffff80000010928e:	55                   	push   %rbp$/;"	l
ffff80000010928f	kernel.asm	/^ffff80000010928f:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000109292	kernel.asm	/^ffff800000109292:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff800000109296	kernel.asm	/^ffff800000109296:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff80000010929b	kernel.asm	/^ffff80000010929b:	48 ba d0 52 10 00 00 	movabs $0xffff8000001052d0,%rdx$/;"	l
ffff8000001092a2	kernel.asm	/^ffff8000001092a2:	80 ff ff $/;"	l
ffff8000001092a5	kernel.asm	/^ffff8000001092a5:	ff d2                	callq  *%rdx$/;"	l
ffff8000001092a7	kernel.asm	/^ffff8000001092a7:	48 8d 45 f0          	lea    -0x10(%rbp),%rax$/;"	l
ffff8000001092ab	kernel.asm	/^ffff8000001092ab:	48 89 c6             	mov    %rax,%rsi$/;"	l
ffff8000001092ae	kernel.asm	/^ffff8000001092ae:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
ffff8000001092b3	kernel.asm	/^ffff8000001092b3:	48 b8 ca 81 10 00 00 	movabs $0xffff8000001081ca,%rax$/;"	l
ffff8000001092ba	kernel.asm	/^ffff8000001092ba:	80 ff ff $/;"	l
ffff8000001092bd	kernel.asm	/^ffff8000001092bd:	ff d0                	callq  *%rax$/;"	l
ffff8000001092bf	kernel.asm	/^ffff8000001092bf:	85 c0                	test   %eax,%eax$/;"	l
ffff8000001092c1	kernel.asm	/^ffff8000001092c1:	78 1e                	js     ffff8000001092e1 <sys_chdir+0x53>$/;"	l
ffff8000001092c3	kernel.asm	/^ffff8000001092c3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff8000001092c7	kernel.asm	/^ffff8000001092c7:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001092ca	kernel.asm	/^ffff8000001092ca:	48 b8 a9 3b 10 00 00 	movabs $0xffff800000103ba9,%rax$/;"	l
ffff8000001092d1	kernel.asm	/^ffff8000001092d1:	80 ff ff $/;"	l
ffff8000001092d4	kernel.asm	/^ffff8000001092d4:	ff d0                	callq  *%rax$/;"	l
ffff8000001092d6	kernel.asm	/^ffff8000001092d6:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff8000001092da	kernel.asm	/^ffff8000001092da:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)$/;"	l
ffff8000001092df	kernel.asm	/^ffff8000001092df:	75 1b                	jne    ffff8000001092fc <sys_chdir+0x6e>$/;"	l
ffff8000001092e1	kernel.asm	/^ffff8000001092e1:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff8000001092e6	kernel.asm	/^ffff8000001092e6:	48 ba a6 53 10 00 00 	movabs $0xffff8000001053a6,%rdx$/;"	l
ffff8000001092ed	kernel.asm	/^ffff8000001092ed:	80 ff ff $/;"	l
ffff8000001092f0	kernel.asm	/^ffff8000001092f0:	ff d2                	callq  *%rdx$/;"	l
ffff8000001092f2	kernel.asm	/^ffff8000001092f2:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff8000001092f7	kernel.asm	/^ffff8000001092f7:	e9 af 00 00 00       	jmpq   ffff8000001093ab <sys_chdir+0x11d>$/;"	l
ffff8000001092fc	kernel.asm	/^ffff8000001092fc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000109300	kernel.asm	/^ffff800000109300:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000109303	kernel.asm	/^ffff800000109303:	48 b8 b9 2c 10 00 00 	movabs $0xffff800000102cb9,%rax$/;"	l
ffff80000010930a	kernel.asm	/^ffff80000010930a:	80 ff ff $/;"	l
ffff80000010930d	kernel.asm	/^ffff80000010930d:	ff d0                	callq  *%rax$/;"	l
ffff80000010930f	kernel.asm	/^ffff80000010930f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000109313	kernel.asm	/^ffff800000109313:	0f b7 80 94 00 00 00 	movzwl 0x94(%rax),%eax$/;"	l
ffff80000010931a	kernel.asm	/^ffff80000010931a:	66 83 f8 01          	cmp    $0x1,%ax$/;"	l
ffff80000010931e	kernel.asm	/^ffff80000010931e:	74 2b                	je     ffff80000010934b <sys_chdir+0xbd>$/;"	l
ffff800000109320	kernel.asm	/^ffff800000109320:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000109324	kernel.asm	/^ffff800000109324:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000109327	kernel.asm	/^ffff800000109327:	48 b8 9d 2f 10 00 00 	movabs $0xffff800000102f9d,%rax$/;"	l
ffff80000010932e	kernel.asm	/^ffff80000010932e:	80 ff ff $/;"	l
ffff800000109331	kernel.asm	/^ffff800000109331:	ff d0                	callq  *%rax$/;"	l
ffff800000109333	kernel.asm	/^ffff800000109333:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000109338	kernel.asm	/^ffff800000109338:	48 ba a6 53 10 00 00 	movabs $0xffff8000001053a6,%rdx$/;"	l
ffff80000010933f	kernel.asm	/^ffff80000010933f:	80 ff ff $/;"	l
ffff800000109342	kernel.asm	/^ffff800000109342:	ff d2                	callq  *%rdx$/;"	l
ffff800000109344	kernel.asm	/^ffff800000109344:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff800000109349	kernel.asm	/^ffff800000109349:	eb 60                	jmp    ffff8000001093ab <sys_chdir+0x11d>$/;"	l
ffff80000010934b	kernel.asm	/^ffff80000010934b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010934f	kernel.asm	/^ffff80000010934f:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000109352	kernel.asm	/^ffff800000109352:	48 b8 4a 2e 10 00 00 	movabs $0xffff800000102e4a,%rax$/;"	l
ffff800000109359	kernel.asm	/^ffff800000109359:	80 ff ff $/;"	l
ffff80000010935c	kernel.asm	/^ffff80000010935c:	ff d0                	callq  *%rax$/;"	l
ffff80000010935e	kernel.asm	/^ffff80000010935e:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000109365	kernel.asm	/^ffff800000109365:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000109369	kernel.asm	/^ffff800000109369:	48 8b 80 c8 00 00 00 	mov    0xc8(%rax),%rax$/;"	l
ffff800000109370	kernel.asm	/^ffff800000109370:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000109373	kernel.asm	/^ffff800000109373:	48 b8 b3 2e 10 00 00 	movabs $0xffff800000102eb3,%rax$/;"	l
ffff80000010937a	kernel.asm	/^ffff80000010937a:	80 ff ff $/;"	l
ffff80000010937d	kernel.asm	/^ffff80000010937d:	ff d0                	callq  *%rax$/;"	l
ffff80000010937f	kernel.asm	/^ffff80000010937f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000109384	kernel.asm	/^ffff800000109384:	48 ba a6 53 10 00 00 	movabs $0xffff8000001053a6,%rdx$/;"	l
ffff80000010938b	kernel.asm	/^ffff80000010938b:	80 ff ff $/;"	l
ffff80000010938e	kernel.asm	/^ffff80000010938e:	ff d2                	callq  *%rdx$/;"	l
ffff800000109390	kernel.asm	/^ffff800000109390:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000109397	kernel.asm	/^ffff800000109397:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff80000010939b	kernel.asm	/^ffff80000010939b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx$/;"	l
ffff80000010939f	kernel.asm	/^ffff80000010939f:	48 89 90 c8 00 00 00 	mov    %rdx,0xc8(%rax)$/;"	l
ffff8000001093a6	kernel.asm	/^ffff8000001093a6:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff8000001093ab	kernel.asm	/^ffff8000001093ab:	c9                   	leaveq $/;"	l
ffff8000001093ac	kernel.asm	/^ffff8000001093ac:	c3                   	retq   $/;"	l
ffff8000001093ad	kernel.asm	/^ffff8000001093ad <sys_exec>:$/;"	l
ffff8000001093ad	kernel.asm	/^ffff8000001093ad:	55                   	push   %rbp$/;"	l
ffff8000001093ae	kernel.asm	/^ffff8000001093ae:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff8000001093b1	kernel.asm	/^ffff8000001093b1:	48 81 ec 20 01 00 00 	sub    $0x120,%rsp$/;"	l
ffff8000001093b8	kernel.asm	/^ffff8000001093b8:	48 8d 45 f0          	lea    -0x10(%rbp),%rax$/;"	l
ffff8000001093bc	kernel.asm	/^ffff8000001093bc:	48 89 c6             	mov    %rax,%rsi$/;"	l
ffff8000001093bf	kernel.asm	/^ffff8000001093bf:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
ffff8000001093c4	kernel.asm	/^ffff8000001093c4:	48 b8 ca 81 10 00 00 	movabs $0xffff8000001081ca,%rax$/;"	l
ffff8000001093cb	kernel.asm	/^ffff8000001093cb:	80 ff ff $/;"	l
ffff8000001093ce	kernel.asm	/^ffff8000001093ce:	ff d0                	callq  *%rax$/;"	l
ffff8000001093d0	kernel.asm	/^ffff8000001093d0:	85 c0                	test   %eax,%eax$/;"	l
ffff8000001093d2	kernel.asm	/^ffff8000001093d2:	78 24                	js     ffff8000001093f8 <sys_exec+0x4b>$/;"	l
ffff8000001093d4	kernel.asm	/^ffff8000001093d4:	48 8d 85 e8 fe ff ff 	lea    -0x118(%rbp),%rax$/;"	l
ffff8000001093db	kernel.asm	/^ffff8000001093db:	48 89 c6             	mov    %rax,%rsi$/;"	l
ffff8000001093de	kernel.asm	/^ffff8000001093de:	bf 01 00 00 00       	mov    $0x1,%edi$/;"	l
ffff8000001093e3	kernel.asm	/^ffff8000001093e3:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff8000001093e8	kernel.asm	/^ffff8000001093e8:	48 ba 09 81 10 00 00 	movabs $0xffff800000108109,%rdx$/;"	l
ffff8000001093ef	kernel.asm	/^ffff8000001093ef:	80 ff ff $/;"	l
ffff8000001093f2	kernel.asm	/^ffff8000001093f2:	ff d2                	callq  *%rdx$/;"	l
ffff8000001093f4	kernel.asm	/^ffff8000001093f4:	85 c0                	test   %eax,%eax$/;"	l
ffff8000001093f6	kernel.asm	/^ffff8000001093f6:	79 0a                	jns    ffff800000109402 <sys_exec+0x55>$/;"	l
ffff8000001093f8	kernel.asm	/^ffff8000001093f8:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff8000001093fd	kernel.asm	/^ffff8000001093fd:	e9 f7 00 00 00       	jmpq   ffff8000001094f9 <sys_exec+0x14c>$/;"	l
ffff800000109402	kernel.asm	/^ffff800000109402:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax$/;"	l
ffff800000109409	kernel.asm	/^ffff800000109409:	ba 00 01 00 00       	mov    $0x100,%edx$/;"	l
ffff80000010940e	kernel.asm	/^ffff80000010940e:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffff800000109413	kernel.asm	/^ffff800000109413:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000109416	kernel.asm	/^ffff800000109416:	48 b8 72 7b 10 00 00 	movabs $0xffff800000107b72,%rax$/;"	l
ffff80000010941d	kernel.asm	/^ffff80000010941d:	80 ff ff $/;"	l
ffff800000109420	kernel.asm	/^ffff800000109420:	ff d0                	callq  *%rax$/;"	l
ffff800000109422	kernel.asm	/^ffff800000109422:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)$/;"	l
ffff800000109429	kernel.asm	/^ffff800000109429:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff80000010942c	kernel.asm	/^ffff80000010942c:	83 f8 1f             	cmp    $0x1f,%eax$/;"	l
ffff80000010942f	kernel.asm	/^ffff80000010942f:	76 0a                	jbe    ffff80000010943b <sys_exec+0x8e>$/;"	l
ffff800000109431	kernel.asm	/^ffff800000109431:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff800000109436	kernel.asm	/^ffff800000109436:	e9 be 00 00 00       	jmpq   ffff8000001094f9 <sys_exec+0x14c>$/;"	l
ffff80000010943b	kernel.asm	/^ffff80000010943b:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff80000010943e	kernel.asm	/^ffff80000010943e:	48 98                	cltq   $/;"	l
ffff800000109440	kernel.asm	/^ffff800000109440:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx$/;"	l
ffff800000109447	kernel.asm	/^ffff800000109447:	00 $/;"	l
ffff800000109448	kernel.asm	/^ffff800000109448:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax$/;"	l
ffff80000010944f	kernel.asm	/^ffff80000010944f:	48 01 c2             	add    %rax,%rdx$/;"	l
ffff800000109452	kernel.asm	/^ffff800000109452:	48 8d 85 e0 fe ff ff 	lea    -0x120(%rbp),%rax$/;"	l
ffff800000109459	kernel.asm	/^ffff800000109459:	48 89 c6             	mov    %rax,%rsi$/;"	l
ffff80000010945c	kernel.asm	/^ffff80000010945c:	48 89 d7             	mov    %rdx,%rdi$/;"	l
ffff80000010945f	kernel.asm	/^ffff80000010945f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000109464	kernel.asm	/^ffff800000109464:	48 ba 2e 7f 10 00 00 	movabs $0xffff800000107f2e,%rdx$/;"	l
ffff80000010946b	kernel.asm	/^ffff80000010946b:	80 ff ff $/;"	l
ffff80000010946e	kernel.asm	/^ffff80000010946e:	ff d2                	callq  *%rdx$/;"	l
ffff800000109470	kernel.asm	/^ffff800000109470:	85 c0                	test   %eax,%eax$/;"	l
ffff800000109472	kernel.asm	/^ffff800000109472:	79 07                	jns    ffff80000010947b <sys_exec+0xce>$/;"	l
ffff800000109474	kernel.asm	/^ffff800000109474:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff800000109479	kernel.asm	/^ffff800000109479:	eb 7e                	jmp    ffff8000001094f9 <sys_exec+0x14c>$/;"	l
ffff80000010947b	kernel.asm	/^ffff80000010947b:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax$/;"	l
ffff800000109482	kernel.asm	/^ffff800000109482:	48 85 c0             	test   %rax,%rax$/;"	l
ffff800000109485	kernel.asm	/^ffff800000109485:	75 31                	jne    ffff8000001094b8 <sys_exec+0x10b>$/;"	l
ffff800000109487	kernel.asm	/^ffff800000109487:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff80000010948a	kernel.asm	/^ffff80000010948a:	48 98                	cltq   $/;"	l
ffff80000010948c	kernel.asm	/^ffff80000010948c:	48 c7 84 c5 f0 fe ff 	movq   $0x0,-0x110(%rbp,%rax,8)$/;"	l
ffff800000109493	kernel.asm	/^ffff800000109493:	ff 00 00 00 00 $/;"	l
ffff800000109498	kernel.asm	/^ffff800000109498:	90                   	nop$/;"	l
ffff800000109499	kernel.asm	/^ffff800000109499:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff80000010949d	kernel.asm	/^ffff80000010949d:	48 8d 95 f0 fe ff ff 	lea    -0x110(%rbp),%rdx$/;"	l
ffff8000001094a4	kernel.asm	/^ffff8000001094a4:	48 89 d6             	mov    %rdx,%rsi$/;"	l
ffff8000001094a7	kernel.asm	/^ffff8000001094a7:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001094aa	kernel.asm	/^ffff8000001094aa:	48 b8 97 18 10 00 00 	movabs $0xffff800000101897,%rax$/;"	l
ffff8000001094b1	kernel.asm	/^ffff8000001094b1:	80 ff ff $/;"	l
ffff8000001094b4	kernel.asm	/^ffff8000001094b4:	ff d0                	callq  *%rax$/;"	l
ffff8000001094b6	kernel.asm	/^ffff8000001094b6:	eb 41                	jmp    ffff8000001094f9 <sys_exec+0x14c>$/;"	l
ffff8000001094b8	kernel.asm	/^ffff8000001094b8:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax$/;"	l
ffff8000001094bf	kernel.asm	/^ffff8000001094bf:	8b 55 fc             	mov    -0x4(%rbp),%edx$/;"	l
ffff8000001094c2	kernel.asm	/^ffff8000001094c2:	48 63 d2             	movslq %edx,%rdx$/;"	l
ffff8000001094c5	kernel.asm	/^ffff8000001094c5:	48 c1 e2 03          	shl    $0x3,%rdx$/;"	l
ffff8000001094c9	kernel.asm	/^ffff8000001094c9:	48 01 c2             	add    %rax,%rdx$/;"	l
ffff8000001094cc	kernel.asm	/^ffff8000001094cc:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax$/;"	l
ffff8000001094d3	kernel.asm	/^ffff8000001094d3:	48 89 d6             	mov    %rdx,%rsi$/;"	l
ffff8000001094d6	kernel.asm	/^ffff8000001094d6:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001094d9	kernel.asm	/^ffff8000001094d9:	48 b8 89 7f 10 00 00 	movabs $0xffff800000107f89,%rax$/;"	l
ffff8000001094e0	kernel.asm	/^ffff8000001094e0:	80 ff ff $/;"	l
ffff8000001094e3	kernel.asm	/^ffff8000001094e3:	ff d0                	callq  *%rax$/;"	l
ffff8000001094e5	kernel.asm	/^ffff8000001094e5:	85 c0                	test   %eax,%eax$/;"	l
ffff8000001094e7	kernel.asm	/^ffff8000001094e7:	79 07                	jns    ffff8000001094f0 <sys_exec+0x143>$/;"	l
ffff8000001094e9	kernel.asm	/^ffff8000001094e9:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff8000001094ee	kernel.asm	/^ffff8000001094ee:	eb 09                	jmp    ffff8000001094f9 <sys_exec+0x14c>$/;"	l
ffff8000001094f0	kernel.asm	/^ffff8000001094f0:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)$/;"	l
ffff8000001094f4	kernel.asm	/^ffff8000001094f4:	e9 30 ff ff ff       	jmpq   ffff800000109429 <sys_exec+0x7c>$/;"	l
ffff8000001094f9	kernel.asm	/^ffff8000001094f9:	c9                   	leaveq $/;"	l
ffff8000001094fa	kernel.asm	/^ffff8000001094fa:	c3                   	retq   $/;"	l
ffff8000001094fb	kernel.asm	/^ffff8000001094fb <sys_pipe>:$/;"	l
ffff8000001094fb	kernel.asm	/^ffff8000001094fb:	55                   	push   %rbp$/;"	l
ffff8000001094fc	kernel.asm	/^ffff8000001094fc:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff8000001094ff	kernel.asm	/^ffff8000001094ff:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ffff800000109503	kernel.asm	/^ffff800000109503:	48 8d 45 f0          	lea    -0x10(%rbp),%rax$/;"	l
ffff800000109507	kernel.asm	/^ffff800000109507:	ba 08 00 00 00       	mov    $0x8,%edx$/;"	l
ffff80000010950c	kernel.asm	/^ffff80000010950c:	48 89 c6             	mov    %rax,%rsi$/;"	l
ffff80000010950f	kernel.asm	/^ffff80000010950f:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
ffff800000109514	kernel.asm	/^ffff800000109514:	48 b8 3a 81 10 00 00 	movabs $0xffff80000010813a,%rax$/;"	l
ffff80000010951b	kernel.asm	/^ffff80000010951b:	80 ff ff $/;"	l
ffff80000010951e	kernel.asm	/^ffff80000010951e:	ff d0                	callq  *%rax$/;"	l
ffff800000109520	kernel.asm	/^ffff800000109520:	85 c0                	test   %eax,%eax$/;"	l
ffff800000109522	kernel.asm	/^ffff800000109522:	79 0a                	jns    ffff80000010952e <sys_pipe+0x33>$/;"	l
ffff800000109524	kernel.asm	/^ffff800000109524:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff800000109529	kernel.asm	/^ffff800000109529:	e9 d3 00 00 00       	jmpq   ffff800000109601 <sys_pipe+0x106>$/;"	l
ffff80000010952e	kernel.asm	/^ffff80000010952e:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx$/;"	l
ffff800000109532	kernel.asm	/^ffff800000109532:	48 8d 45 e8          	lea    -0x18(%rbp),%rax$/;"	l
ffff800000109536	kernel.asm	/^ffff800000109536:	48 89 d6             	mov    %rdx,%rsi$/;"	l
ffff800000109539	kernel.asm	/^ffff800000109539:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010953c	kernel.asm	/^ffff80000010953c:	48 b8 e1 5f 10 00 00 	movabs $0xffff800000105fe1,%rax$/;"	l
ffff800000109543	kernel.asm	/^ffff800000109543:	80 ff ff $/;"	l
ffff800000109546	kernel.asm	/^ffff800000109546:	ff d0                	callq  *%rax$/;"	l
ffff800000109548	kernel.asm	/^ffff800000109548:	85 c0                	test   %eax,%eax$/;"	l
ffff80000010954a	kernel.asm	/^ffff80000010954a:	79 0a                	jns    ffff800000109556 <sys_pipe+0x5b>$/;"	l
ffff80000010954c	kernel.asm	/^ffff80000010954c:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff800000109551	kernel.asm	/^ffff800000109551:	e9 ab 00 00 00       	jmpq   ffff800000109601 <sys_pipe+0x106>$/;"	l
ffff800000109556	kernel.asm	/^ffff800000109556:	c7 45 fc ff ff ff ff 	movl   $0xffffffff,-0x4(%rbp)$/;"	l
ffff80000010955d	kernel.asm	/^ffff80000010955d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000109561	kernel.asm	/^ffff800000109561:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000109564	kernel.asm	/^ffff800000109564:	48 b8 86 83 10 00 00 	movabs $0xffff800000108386,%rax$/;"	l
ffff80000010956b	kernel.asm	/^ffff80000010956b:	80 ff ff $/;"	l
ffff80000010956e	kernel.asm	/^ffff80000010956e:	ff d0                	callq  *%rax$/;"	l
ffff800000109570	kernel.asm	/^ffff800000109570:	89 45 fc             	mov    %eax,-0x4(%rbp)$/;"	l
ffff800000109573	kernel.asm	/^ffff800000109573:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)$/;"	l
ffff800000109577	kernel.asm	/^ffff800000109577:	78 1c                	js     ffff800000109595 <sys_pipe+0x9a>$/;"	l
ffff800000109579	kernel.asm	/^ffff800000109579:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff80000010957d	kernel.asm	/^ffff80000010957d:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000109580	kernel.asm	/^ffff800000109580:	48 b8 86 83 10 00 00 	movabs $0xffff800000108386,%rax$/;"	l
ffff800000109587	kernel.asm	/^ffff800000109587:	80 ff ff $/;"	l
ffff80000010958a	kernel.asm	/^ffff80000010958a:	ff d0                	callq  *%rax$/;"	l
ffff80000010958c	kernel.asm	/^ffff80000010958c:	89 45 f8             	mov    %eax,-0x8(%rbp)$/;"	l
ffff80000010958f	kernel.asm	/^ffff80000010958f:	83 7d f8 00          	cmpl   $0x0,-0x8(%rbp)$/;"	l
ffff800000109593	kernel.asm	/^ffff800000109593:	79 51                	jns    ffff8000001095e6 <sys_pipe+0xeb>$/;"	l
ffff800000109595	kernel.asm	/^ffff800000109595:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)$/;"	l
ffff800000109599	kernel.asm	/^ffff800000109599:	78 1e                	js     ffff8000001095b9 <sys_pipe+0xbe>$/;"	l
ffff80000010959b	kernel.asm	/^ffff80000010959b:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff8000001095a2	kernel.asm	/^ffff8000001095a2:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff8000001095a6	kernel.asm	/^ffff8000001095a6:	8b 55 fc             	mov    -0x4(%rbp),%edx$/;"	l
ffff8000001095a9	kernel.asm	/^ffff8000001095a9:	48 63 d2             	movslq %edx,%rdx$/;"	l
ffff8000001095ac	kernel.asm	/^ffff8000001095ac:	48 83 c2 08          	add    $0x8,%rdx$/;"	l
ffff8000001095b0	kernel.asm	/^ffff8000001095b0:	48 c7 44 d0 08 00 00 	movq   $0x0,0x8(%rax,%rdx,8)$/;"	l
ffff8000001095b7	kernel.asm	/^ffff8000001095b7:	00 00 $/;"	l
ffff8000001095b9	kernel.asm	/^ffff8000001095b9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff8000001095bd	kernel.asm	/^ffff8000001095bd:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001095c0	kernel.asm	/^ffff8000001095c0:	48 b8 e0 1f 10 00 00 	movabs $0xffff800000101fe0,%rax$/;"	l
ffff8000001095c7	kernel.asm	/^ffff8000001095c7:	80 ff ff $/;"	l
ffff8000001095ca	kernel.asm	/^ffff8000001095ca:	ff d0                	callq  *%rax$/;"	l
ffff8000001095cc	kernel.asm	/^ffff8000001095cc:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff8000001095d0	kernel.asm	/^ffff8000001095d0:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001095d3	kernel.asm	/^ffff8000001095d3:	48 b8 e0 1f 10 00 00 	movabs $0xffff800000101fe0,%rax$/;"	l
ffff8000001095da	kernel.asm	/^ffff8000001095da:	80 ff ff $/;"	l
ffff8000001095dd	kernel.asm	/^ffff8000001095dd:	ff d0                	callq  *%rax$/;"	l
ffff8000001095df	kernel.asm	/^ffff8000001095df:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff8000001095e4	kernel.asm	/^ffff8000001095e4:	eb 1b                	jmp    ffff800000109601 <sys_pipe+0x106>$/;"	l
ffff8000001095e6	kernel.asm	/^ffff8000001095e6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff8000001095ea	kernel.asm	/^ffff8000001095ea:	8b 55 fc             	mov    -0x4(%rbp),%edx$/;"	l
ffff8000001095ed	kernel.asm	/^ffff8000001095ed:	89 10                	mov    %edx,(%rax)$/;"	l
ffff8000001095ef	kernel.asm	/^ffff8000001095ef:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff8000001095f3	kernel.asm	/^ffff8000001095f3:	48 8d 50 04          	lea    0x4(%rax),%rdx$/;"	l
ffff8000001095f7	kernel.asm	/^ffff8000001095f7:	8b 45 f8             	mov    -0x8(%rbp),%eax$/;"	l
ffff8000001095fa	kernel.asm	/^ffff8000001095fa:	89 02                	mov    %eax,(%rdx)$/;"	l
ffff8000001095fc	kernel.asm	/^ffff8000001095fc:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000109601	kernel.asm	/^ffff800000109601:	c9                   	leaveq $/;"	l
ffff800000109602	kernel.asm	/^ffff800000109602:	c3                   	retq   $/;"	l
ffff800000109603	kernel.asm	/^ffff800000109603 <sys_fork>:$/;"	l
ffff800000109603	kernel.asm	/^ffff800000109603:	55                   	push   %rbp$/;"	l
ffff800000109604	kernel.asm	/^ffff800000109604:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000109607	kernel.asm	/^ffff800000109607:	48 b8 36 69 10 00 00 	movabs $0xffff800000106936,%rax$/;"	l
ffff80000010960e	kernel.asm	/^ffff80000010960e:	80 ff ff $/;"	l
ffff800000109611	kernel.asm	/^ffff800000109611:	ff d0                	callq  *%rax$/;"	l
ffff800000109613	kernel.asm	/^ffff800000109613:	5d                   	pop    %rbp$/;"	l
ffff800000109614	kernel.asm	/^ffff800000109614:	c3                   	retq   $/;"	l
ffff800000109615	kernel.asm	/^ffff800000109615 <sys_exit>:$/;"	l
ffff800000109615	kernel.asm	/^ffff800000109615:	55                   	push   %rbp$/;"	l
ffff800000109616	kernel.asm	/^ffff800000109616:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000109619	kernel.asm	/^ffff800000109619:	48 b8 57 6b 10 00 00 	movabs $0xffff800000106b57,%rax$/;"	l
ffff800000109620	kernel.asm	/^ffff800000109620:	80 ff ff $/;"	l
ffff800000109623	kernel.asm	/^ffff800000109623:	ff d0                	callq  *%rax$/;"	l
ffff800000109625	kernel.asm	/^ffff800000109625:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff80000010962a	kernel.asm	/^ffff80000010962a:	5d                   	pop    %rbp$/;"	l
ffff80000010962b	kernel.asm	/^ffff80000010962b:	c3                   	retq   $/;"	l
ffff80000010962c	kernel.asm	/^ffff80000010962c <sys_wait>:$/;"	l
ffff80000010962c	kernel.asm	/^ffff80000010962c:	55                   	push   %rbp$/;"	l
ffff80000010962d	kernel.asm	/^ffff80000010962d:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000109630	kernel.asm	/^ffff800000109630:	48 b8 77 6d 10 00 00 	movabs $0xffff800000106d77,%rax$/;"	l
ffff800000109637	kernel.asm	/^ffff800000109637:	80 ff ff $/;"	l
ffff80000010963a	kernel.asm	/^ffff80000010963a:	ff d0                	callq  *%rax$/;"	l
ffff80000010963c	kernel.asm	/^ffff80000010963c:	5d                   	pop    %rbp$/;"	l
ffff80000010963d	kernel.asm	/^ffff80000010963d:	c3                   	retq   $/;"	l
ffff80000010963e	kernel.asm	/^ffff80000010963e <sys_kill>:$/;"	l
ffff80000010963e	kernel.asm	/^ffff80000010963e:	55                   	push   %rbp$/;"	l
ffff80000010963f	kernel.asm	/^ffff80000010963f:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000109642	kernel.asm	/^ffff800000109642:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff800000109646	kernel.asm	/^ffff800000109646:	48 8d 45 fc          	lea    -0x4(%rbp),%rax$/;"	l
ffff80000010964a	kernel.asm	/^ffff80000010964a:	48 89 c6             	mov    %rax,%rsi$/;"	l
ffff80000010964d	kernel.asm	/^ffff80000010964d:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
ffff800000109652	kernel.asm	/^ffff800000109652:	48 b8 da 80 10 00 00 	movabs $0xffff8000001080da,%rax$/;"	l
ffff800000109659	kernel.asm	/^ffff800000109659:	80 ff ff $/;"	l
ffff80000010965c	kernel.asm	/^ffff80000010965c:	ff d0                	callq  *%rax$/;"	l
ffff80000010965e	kernel.asm	/^ffff80000010965e:	85 c0                	test   %eax,%eax$/;"	l
ffff800000109660	kernel.asm	/^ffff800000109660:	79 07                	jns    ffff800000109669 <sys_kill+0x2b>$/;"	l
ffff800000109662	kernel.asm	/^ffff800000109662:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff800000109667	kernel.asm	/^ffff800000109667:	eb 11                	jmp    ffff80000010967a <sys_kill+0x3c>$/;"	l
ffff800000109669	kernel.asm	/^ffff800000109669:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff80000010966c	kernel.asm	/^ffff80000010966c:	89 c7                	mov    %eax,%edi$/;"	l
ffff80000010966e	kernel.asm	/^ffff80000010966e:	48 b8 82 73 10 00 00 	movabs $0xffff800000107382,%rax$/;"	l
ffff800000109675	kernel.asm	/^ffff800000109675:	80 ff ff $/;"	l
ffff800000109678	kernel.asm	/^ffff800000109678:	ff d0                	callq  *%rax$/;"	l
ffff80000010967a	kernel.asm	/^ffff80000010967a:	c9                   	leaveq $/;"	l
ffff80000010967b	kernel.asm	/^ffff80000010967b:	c3                   	retq   $/;"	l
ffff80000010967c	kernel.asm	/^ffff80000010967c <sys_getpid>:$/;"	l
ffff80000010967c	kernel.asm	/^ffff80000010967c:	55                   	push   %rbp$/;"	l
ffff80000010967d	kernel.asm	/^ffff80000010967d:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000109680	kernel.asm	/^ffff800000109680:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000109687	kernel.asm	/^ffff800000109687:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff80000010968b	kernel.asm	/^ffff80000010968b:	8b 40 1c             	mov    0x1c(%rax),%eax$/;"	l
ffff80000010968e	kernel.asm	/^ffff80000010968e:	5d                   	pop    %rbp$/;"	l
ffff80000010968f	kernel.asm	/^ffff80000010968f:	c3                   	retq   $/;"	l
ffff800000109690	kernel.asm	/^ffff800000109690 <sys_sbrk>:$/;"	l
ffff800000109690	kernel.asm	/^ffff800000109690:	55                   	push   %rbp$/;"	l
ffff800000109691	kernel.asm	/^ffff800000109691:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000109694	kernel.asm	/^ffff800000109694:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff800000109698	kernel.asm	/^ffff800000109698:	48 8d 45 f8          	lea    -0x8(%rbp),%rax$/;"	l
ffff80000010969c	kernel.asm	/^ffff80000010969c:	48 89 c6             	mov    %rax,%rsi$/;"	l
ffff80000010969f	kernel.asm	/^ffff80000010969f:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
ffff8000001096a4	kernel.asm	/^ffff8000001096a4:	48 b8 da 80 10 00 00 	movabs $0xffff8000001080da,%rax$/;"	l
ffff8000001096ab	kernel.asm	/^ffff8000001096ab:	80 ff ff $/;"	l
ffff8000001096ae	kernel.asm	/^ffff8000001096ae:	ff d0                	callq  *%rax$/;"	l
ffff8000001096b0	kernel.asm	/^ffff8000001096b0:	85 c0                	test   %eax,%eax$/;"	l
ffff8000001096b2	kernel.asm	/^ffff8000001096b2:	79 07                	jns    ffff8000001096bb <sys_sbrk+0x2b>$/;"	l
ffff8000001096b4	kernel.asm	/^ffff8000001096b4:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff8000001096b9	kernel.asm	/^ffff8000001096b9:	eb 30                	jmp    ffff8000001096eb <sys_sbrk+0x5b>$/;"	l
ffff8000001096bb	kernel.asm	/^ffff8000001096bb:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff8000001096c2	kernel.asm	/^ffff8000001096c2:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff8000001096c6	kernel.asm	/^ffff8000001096c6:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff8000001096c9	kernel.asm	/^ffff8000001096c9:	89 45 fc             	mov    %eax,-0x4(%rbp)$/;"	l
ffff8000001096cc	kernel.asm	/^ffff8000001096cc:	8b 45 f8             	mov    -0x8(%rbp),%eax$/;"	l
ffff8000001096cf	kernel.asm	/^ffff8000001096cf:	89 c7                	mov    %eax,%edi$/;"	l
ffff8000001096d1	kernel.asm	/^ffff8000001096d1:	48 b8 63 68 10 00 00 	movabs $0xffff800000106863,%rax$/;"	l
ffff8000001096d8	kernel.asm	/^ffff8000001096d8:	80 ff ff $/;"	l
ffff8000001096db	kernel.asm	/^ffff8000001096db:	ff d0                	callq  *%rax$/;"	l
ffff8000001096dd	kernel.asm	/^ffff8000001096dd:	85 c0                	test   %eax,%eax$/;"	l
ffff8000001096df	kernel.asm	/^ffff8000001096df:	79 07                	jns    ffff8000001096e8 <sys_sbrk+0x58>$/;"	l
ffff8000001096e1	kernel.asm	/^ffff8000001096e1:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff8000001096e6	kernel.asm	/^ffff8000001096e6:	eb 03                	jmp    ffff8000001096eb <sys_sbrk+0x5b>$/;"	l
ffff8000001096e8	kernel.asm	/^ffff8000001096e8:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff8000001096eb	kernel.asm	/^ffff8000001096eb:	c9                   	leaveq $/;"	l
ffff8000001096ec	kernel.asm	/^ffff8000001096ec:	c3                   	retq   $/;"	l
ffff8000001096ed	kernel.asm	/^ffff8000001096ed <argfd>:$/;"	l
ffff8000001096ed	kernel.asm	/^ffff8000001096ed:	55                   	push   %rbp$/;"	l
ffff8000001096ee	kernel.asm	/^ffff8000001096ee:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff8000001096f1	kernel.asm	/^ffff8000001096f1:	48 83 ec 30          	sub    $0x30,%rsp$/;"	l
ffff8000001096f5	kernel.asm	/^ffff8000001096f5:	89 7d ec             	mov    %edi,-0x14(%rbp)$/;"	l
ffff8000001096f8	kernel.asm	/^ffff8000001096f8:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)$/;"	l
ffff8000001096fc	kernel.asm	/^ffff8000001096fc:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)$/;"	l
ffff800000109700	kernel.asm	/^ffff800000109700:	48 8d 55 f4          	lea    -0xc(%rbp),%rdx$/;"	l
ffff800000109704	kernel.asm	/^ffff800000109704:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
ffff800000109707	kernel.asm	/^ffff800000109707:	48 89 d6             	mov    %rdx,%rsi$/;"	l
ffff80000010970a	kernel.asm	/^ffff80000010970a:	89 c7                	mov    %eax,%edi$/;"	l
ffff80000010970c	kernel.asm	/^ffff80000010970c:	48 b8 da 80 10 00 00 	movabs $0xffff8000001080da,%rax$/;"	l
ffff800000109713	kernel.asm	/^ffff800000109713:	80 ff ff $/;"	l
ffff800000109716	kernel.asm	/^ffff800000109716:	ff d0                	callq  *%rax$/;"	l
ffff800000109718	kernel.asm	/^ffff800000109718:	85 c0                	test   %eax,%eax$/;"	l
ffff80000010971a	kernel.asm	/^ffff80000010971a:	79 07                	jns    ffff800000109723 <argfd+0x36>$/;"	l
ffff80000010971c	kernel.asm	/^ffff80000010971c:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff800000109721	kernel.asm	/^ffff800000109721:	eb 62                	jmp    ffff800000109785 <argfd+0x98>$/;"	l
ffff800000109723	kernel.asm	/^ffff800000109723:	8b 45 f4             	mov    -0xc(%rbp),%eax$/;"	l
ffff800000109726	kernel.asm	/^ffff800000109726:	85 c0                	test   %eax,%eax$/;"	l
ffff800000109728	kernel.asm	/^ffff800000109728:	78 2d                	js     ffff800000109757 <argfd+0x6a>$/;"	l
ffff80000010972a	kernel.asm	/^ffff80000010972a:	8b 45 f4             	mov    -0xc(%rbp),%eax$/;"	l
ffff80000010972d	kernel.asm	/^ffff80000010972d:	83 f8 0f             	cmp    $0xf,%eax$/;"	l
ffff800000109730	kernel.asm	/^ffff800000109730:	7f 25                	jg     ffff800000109757 <argfd+0x6a>$/;"	l
ffff800000109732	kernel.asm	/^ffff800000109732:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000109739	kernel.asm	/^ffff800000109739:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff80000010973d	kernel.asm	/^ffff80000010973d:	8b 55 f4             	mov    -0xc(%rbp),%edx$/;"	l
ffff800000109740	kernel.asm	/^ffff800000109740:	48 63 d2             	movslq %edx,%rdx$/;"	l
ffff800000109743	kernel.asm	/^ffff800000109743:	48 83 c2 08          	add    $0x8,%rdx$/;"	l
ffff800000109747	kernel.asm	/^ffff800000109747:	48 8b 44 d0 08       	mov    0x8(%rax,%rdx,8),%rax$/;"	l
ffff80000010974c	kernel.asm	/^ffff80000010974c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff800000109750	kernel.asm	/^ffff800000109750:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)$/;"	l
ffff800000109755	kernel.asm	/^ffff800000109755:	75 07                	jne    ffff80000010975e <argfd+0x71>$/;"	l
ffff800000109757	kernel.asm	/^ffff800000109757:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff80000010975c	kernel.asm	/^ffff80000010975c:	eb 27                	jmp    ffff800000109785 <argfd+0x98>$/;"	l
ffff80000010975e	kernel.asm	/^ffff80000010975e:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)$/;"	l
ffff800000109763	kernel.asm	/^ffff800000109763:	74 09                	je     ffff80000010976e <argfd+0x81>$/;"	l
ffff800000109765	kernel.asm	/^ffff800000109765:	8b 55 f4             	mov    -0xc(%rbp),%edx$/;"	l
ffff800000109768	kernel.asm	/^ffff800000109768:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff80000010976c	kernel.asm	/^ffff80000010976c:	89 10                	mov    %edx,(%rax)$/;"	l
ffff80000010976e	kernel.asm	/^ffff80000010976e:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)$/;"	l
ffff800000109773	kernel.asm	/^ffff800000109773:	74 0b                	je     ffff800000109780 <argfd+0x93>$/;"	l
ffff800000109775	kernel.asm	/^ffff800000109775:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff800000109779	kernel.asm	/^ffff800000109779:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx$/;"	l
ffff80000010977d	kernel.asm	/^ffff80000010977d:	48 89 10             	mov    %rdx,(%rax)$/;"	l
ffff800000109780	kernel.asm	/^ffff800000109780:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000109785	kernel.asm	/^ffff800000109785:	c9                   	leaveq $/;"	l
ffff800000109786	kernel.asm	/^ffff800000109786:	c3                   	retq   $/;"	l
ffff800000109787	kernel.asm	/^ffff800000109787 <sys_mmap>:$/;"	l
ffff800000109787	kernel.asm	/^ffff800000109787:	55                   	push   %rbp$/;"	l
ffff800000109788	kernel.asm	/^ffff800000109788:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010978b	kernel.asm	/^ffff80000010978b:	48 83 ec 40          	sub    $0x40,%rsp$/;"	l
ffff80000010978f	kernel.asm	/^ffff80000010978f:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000109796	kernel.asm	/^ffff800000109796:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff80000010979a	kernel.asm	/^ffff80000010979a:	48 8b 40 08          	mov    0x8(%rax),%rax$/;"	l
ffff80000010979e	kernel.asm	/^ffff80000010979e:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ffff8000001097a2	kernel.asm	/^ffff8000001097a2:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx$/;"	l
ffff8000001097a6	kernel.asm	/^ffff8000001097a6:	48 8d 45 cc          	lea    -0x34(%rbp),%rax$/;"	l
ffff8000001097aa	kernel.asm	/^ffff8000001097aa:	48 89 c6             	mov    %rax,%rsi$/;"	l
ffff8000001097ad	kernel.asm	/^ffff8000001097ad:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
ffff8000001097b2	kernel.asm	/^ffff8000001097b2:	48 b8 ed 96 10 00 00 	movabs $0xffff8000001096ed,%rax$/;"	l
ffff8000001097b9	kernel.asm	/^ffff8000001097b9:	80 ff ff $/;"	l
ffff8000001097bc	kernel.asm	/^ffff8000001097bc:	ff d0                	callq  *%rax$/;"	l
ffff8000001097be	kernel.asm	/^ffff8000001097be:	85 c0                	test   %eax,%eax$/;"	l
ffff8000001097c0	kernel.asm	/^ffff8000001097c0:	78 1c                	js     ffff8000001097de <sys_mmap+0x57>$/;"	l
ffff8000001097c2	kernel.asm	/^ffff8000001097c2:	48 8d 45 c8          	lea    -0x38(%rbp),%rax$/;"	l
ffff8000001097c6	kernel.asm	/^ffff8000001097c6:	48 89 c6             	mov    %rax,%rsi$/;"	l
ffff8000001097c9	kernel.asm	/^ffff8000001097c9:	bf 01 00 00 00       	mov    $0x1,%edi$/;"	l
ffff8000001097ce	kernel.asm	/^ffff8000001097ce:	48 b8 da 80 10 00 00 	movabs $0xffff8000001080da,%rax$/;"	l
ffff8000001097d5	kernel.asm	/^ffff8000001097d5:	80 ff ff $/;"	l
ffff8000001097d8	kernel.asm	/^ffff8000001097d8:	ff d0                	callq  *%rax$/;"	l
ffff8000001097da	kernel.asm	/^ffff8000001097da:	85 c0                	test   %eax,%eax$/;"	l
ffff8000001097dc	kernel.asm	/^ffff8000001097dc:	79 0c                	jns    ffff8000001097ea <sys_mmap+0x63>$/;"	l
ffff8000001097de	kernel.asm	/^ffff8000001097de:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax$/;"	l
ffff8000001097e5	kernel.asm	/^ffff8000001097e5:	e9 17 02 00 00       	jmpq   ffff800000109a01 <sys_mmap+0x27a>$/;"	l
ffff8000001097ea	kernel.asm	/^ffff8000001097ea:	8b 45 c8             	mov    -0x38(%rbp),%eax$/;"	l
ffff8000001097ed	kernel.asm	/^ffff8000001097ed:	85 c0                	test   %eax,%eax$/;"	l
ffff8000001097ef	kernel.asm	/^ffff8000001097ef:	75 0c                	jne    ffff8000001097fd <sys_mmap+0x76>$/;"	l
ffff8000001097f1	kernel.asm	/^ffff8000001097f1:	48 b8 00 da 10 00 00 	movabs $0xffff80000010da00,%rax$/;"	l
ffff8000001097f8	kernel.asm	/^ffff8000001097f8:	80 ff ff $/;"	l
ffff8000001097fb	kernel.asm	/^ffff8000001097fb:	eb 0a                	jmp    ffff800000109807 <sys_mmap+0x80>$/;"	l
ffff8000001097fd	kernel.asm	/^ffff8000001097fd:	48 b8 06 da 10 00 00 	movabs $0xffff80000010da06,%rax$/;"	l
ffff800000109804	kernel.asm	/^ffff800000109804:	80 ff ff $/;"	l
ffff800000109807	kernel.asm	/^ffff800000109807:	8b 4d cc             	mov    -0x34(%rbp),%ecx$/;"	l
ffff80000010980a	kernel.asm	/^ffff80000010980a:	48 89 c2             	mov    %rax,%rdx$/;"	l
ffff80000010980d	kernel.asm	/^ffff80000010980d:	89 ce                	mov    %ecx,%esi$/;"	l
ffff80000010980f	kernel.asm	/^ffff80000010980f:	48 bf 0b da 10 00 00 	movabs $0xffff80000010da0b,%rdi$/;"	l
ffff800000109816	kernel.asm	/^ffff800000109816:	80 ff ff $/;"	l
ffff800000109819	kernel.asm	/^ffff800000109819:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff80000010981e	kernel.asm	/^ffff80000010981e:	48 b9 ac 07 10 00 00 	movabs $0xffff8000001007ac,%rcx$/;"	l
ffff800000109825	kernel.asm	/^ffff800000109825:	80 ff ff $/;"	l
ffff800000109828	kernel.asm	/^ffff800000109828:	ff d1                	callq  *%rcx$/;"	l
ffff80000010982a	kernel.asm	/^ffff80000010982a:	8b 45 c8             	mov    -0x38(%rbp),%eax$/;"	l
ffff80000010982d	kernel.asm	/^ffff80000010982d:	85 c0                	test   %eax,%eax$/;"	l
ffff80000010982f	kernel.asm	/^ffff80000010982f:	74 0e                	je     ffff80000010983f <sys_mmap+0xb8>$/;"	l
ffff800000109831	kernel.asm	/^ffff800000109831:	83 f8 01             	cmp    $0x1,%eax$/;"	l
ffff800000109834	kernel.asm	/^ffff800000109834:	0f 84 62 01 00 00    	je     ffff80000010999c <sys_mmap+0x215>$/;"	l
ffff80000010983a	kernel.asm	/^ffff80000010983a:	e9 a0 01 00 00       	jmpq   ffff8000001099df <sys_mmap+0x258>$/;"	l
ffff80000010983f	kernel.asm	/^ffff80000010983f:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000109846	kernel.asm	/^ffff800000109846:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff80000010984a	kernel.asm	/^ffff80000010984a:	48 8b 90 e0 00 00 00 	mov    0xe0(%rax),%rdx$/;"	l
ffff800000109851	kernel.asm	/^ffff800000109851:	48 b8 00 00 00 00 00 	movabs $0x400000000000,%rax$/;"	l
ffff800000109858	kernel.asm	/^ffff800000109858:	40 00 00 $/;"	l
ffff80000010985b	kernel.asm	/^ffff80000010985b:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff80000010985e	kernel.asm	/^ffff80000010985e:	48 89 45 e8          	mov    %rax,-0x18(%rbp)$/;"	l
ffff800000109862	kernel.asm	/^ffff800000109862:	48 8b 45 c0          	mov    -0x40(%rbp),%rax$/;"	l
ffff800000109866	kernel.asm	/^ffff800000109866:	48 8b 40 18          	mov    0x18(%rax),%rax$/;"	l
ffff80000010986a	kernel.asm	/^ffff80000010986a:	8b 80 9c 00 00 00    	mov    0x9c(%rax),%eax$/;"	l
ffff800000109870	kernel.asm	/^ffff800000109870:	89 c0                	mov    %eax,%eax$/;"	l
ffff800000109872	kernel.asm	/^ffff800000109872:	48 89 45 e0          	mov    %rax,-0x20(%rbp)$/;"	l
ffff800000109876	kernel.asm	/^ffff800000109876:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx$/;"	l
ffff80000010987a	kernel.asm	/^ffff80000010987a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff80000010987e	kernel.asm	/^ffff80000010987e:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff800000109881	kernel.asm	/^ffff800000109881:	48 05 ff 0f 00 00    	add    $0xfff,%rax$/;"	l
ffff800000109887	kernel.asm	/^ffff800000109887:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax$/;"	l
ffff80000010988d	kernel.asm	/^ffff80000010988d:	48 89 45 d8          	mov    %rax,-0x28(%rbp)$/;"	l
ffff800000109891	kernel.asm	/^ffff800000109891:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000109895	kernel.asm	/^ffff800000109895:	48 05 ff 0f 00 00    	add    $0xfff,%rax$/;"	l
ffff80000010989b	kernel.asm	/^ffff80000010989b:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax$/;"	l
ffff8000001098a1	kernel.asm	/^ffff8000001098a1:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff8000001098a5	kernel.asm	/^ffff8000001098a5:	e9 a1 00 00 00       	jmpq   ffff80000010994b <sys_mmap+0x1c4>$/;"	l
ffff8000001098aa	kernel.asm	/^ffff8000001098aa:	48 b8 d1 45 10 00 00 	movabs $0xffff8000001045d1,%rax$/;"	l
ffff8000001098b1	kernel.asm	/^ffff8000001098b1:	80 ff ff $/;"	l
ffff8000001098b4	kernel.asm	/^ffff8000001098b4:	ff d0                	callq  *%rax$/;"	l
ffff8000001098b6	kernel.asm	/^ffff8000001098b6:	48 89 45 d0          	mov    %rax,-0x30(%rbp)$/;"	l
ffff8000001098ba	kernel.asm	/^ffff8000001098ba:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)$/;"	l
ffff8000001098bf	kernel.asm	/^ffff8000001098bf:	75 0a                	jne    ffff8000001098cb <sys_mmap+0x144>$/;"	l
ffff8000001098c1	kernel.asm	/^ffff8000001098c1:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff8000001098c6	kernel.asm	/^ffff8000001098c6:	e9 36 01 00 00       	jmpq   ffff800000109a01 <sys_mmap+0x27a>$/;"	l
ffff8000001098cb	kernel.asm	/^ffff8000001098cb:	48 8b 45 d0          	mov    -0x30(%rbp),%rax$/;"	l
ffff8000001098cf	kernel.asm	/^ffff8000001098cf:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
ffff8000001098d4	kernel.asm	/^ffff8000001098d4:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffff8000001098d9	kernel.asm	/^ffff8000001098d9:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001098dc	kernel.asm	/^ffff8000001098dc:	48 b8 72 7b 10 00 00 	movabs $0xffff800000107b72,%rax$/;"	l
ffff8000001098e3	kernel.asm	/^ffff8000001098e3:	80 ff ff $/;"	l
ffff8000001098e6	kernel.asm	/^ffff8000001098e6:	ff d0                	callq  *%rax$/;"	l
ffff8000001098e8	kernel.asm	/^ffff8000001098e8:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx$/;"	l
ffff8000001098ec	kernel.asm	/^ffff8000001098ec:	48 b8 00 00 00 00 00 	movabs $0x800000000000,%rax$/;"	l
ffff8000001098f3	kernel.asm	/^ffff8000001098f3:	80 00 00 $/;"	l
ffff8000001098f6	kernel.asm	/^ffff8000001098f6:	48 01 c2             	add    %rax,%rdx$/;"	l
ffff8000001098f9	kernel.asm	/^ffff8000001098f9:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi$/;"	l
ffff8000001098fd	kernel.asm	/^ffff8000001098fd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000109901	kernel.asm	/^ffff800000109901:	41 b8 06 00 00 00    	mov    $0x6,%r8d$/;"	l
ffff800000109907	kernel.asm	/^ffff800000109907:	48 89 d1             	mov    %rdx,%rcx$/;"	l
ffff80000010990a	kernel.asm	/^ffff80000010990a:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
ffff80000010990f	kernel.asm	/^ffff80000010990f:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000109912	kernel.asm	/^ffff800000109912:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000109917	kernel.asm	/^ffff800000109917:	49 b9 05 bb 10 00 00 	movabs $0xffff80000010bb05,%r9$/;"	l
ffff80000010991e	kernel.asm	/^ffff80000010991e:	80 ff ff $/;"	l
ffff800000109921	kernel.asm	/^ffff800000109921:	41 ff d1             	callq  *%r9$/;"	l
ffff800000109924	kernel.asm	/^ffff800000109924:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx$/;"	l
ffff800000109928	kernel.asm	/^ffff800000109928:	48 8b 45 c0          	mov    -0x40(%rbp),%rax$/;"	l
ffff80000010992c	kernel.asm	/^ffff80000010992c:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
ffff800000109931	kernel.asm	/^ffff800000109931:	48 89 ce             	mov    %rcx,%rsi$/;"	l
ffff800000109934	kernel.asm	/^ffff800000109934:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000109937	kernel.asm	/^ffff800000109937:	48 b8 3b 22 10 00 00 	movabs $0xffff80000010223b,%rax$/;"	l
ffff80000010993e	kernel.asm	/^ffff80000010993e:	80 ff ff $/;"	l
ffff800000109941	kernel.asm	/^ffff800000109941:	ff d0                	callq  *%rax$/;"	l
ffff800000109943	kernel.asm	/^ffff800000109943:	48 81 45 f8 00 10 00 	addq   $0x1000,-0x8(%rbp)$/;"	l
ffff80000010994a	kernel.asm	/^ffff80000010994a:	00 $/;"	l
ffff80000010994b	kernel.asm	/^ffff80000010994b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010994f	kernel.asm	/^ffff80000010994f:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax$/;"	l
ffff800000109953	kernel.asm	/^ffff800000109953:	0f 82 51 ff ff ff    	jb     ffff8000001098aa <sys_mmap+0x123>$/;"	l
ffff800000109959	kernel.asm	/^ffff800000109959:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000109960	kernel.asm	/^ffff800000109960:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000109964	kernel.asm	/^ffff800000109964:	48 b9 00 00 00 00 00 	movabs $0xffffc00000000000,%rcx$/;"	l
ffff80000010996b	kernel.asm	/^ffff80000010996b:	c0 ff ff $/;"	l
ffff80000010996e	kernel.asm	/^ffff80000010996e:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx$/;"	l
ffff800000109972	kernel.asm	/^ffff800000109972:	48 01 ca             	add    %rcx,%rdx$/;"	l
ffff800000109975	kernel.asm	/^ffff800000109975:	48 89 90 e0 00 00 00 	mov    %rdx,0xe0(%rax)$/;"	l
ffff80000010997c	kernel.asm	/^ffff80000010997c:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000109983	kernel.asm	/^ffff800000109983:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000109987	kernel.asm	/^ffff800000109987:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010998a	kernel.asm	/^ffff80000010998a:	48 b8 02 b8 10 00 00 	movabs $0xffff80000010b802,%rax$/;"	l
ffff800000109991	kernel.asm	/^ffff800000109991:	80 ff ff $/;"	l
ffff800000109994	kernel.asm	/^ffff800000109994:	ff d0                	callq  *%rax$/;"	l
ffff800000109996	kernel.asm	/^ffff800000109996:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010999a	kernel.asm	/^ffff80000010999a:	eb 65                	jmp    ffff800000109a01 <sys_mmap+0x27a>$/;"	l
ffff80000010999c	kernel.asm	/^ffff80000010999c:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff8000001099a3	kernel.asm	/^ffff8000001099a3:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff8000001099a7	kernel.asm	/^ffff8000001099a7:	48 8b 90 e0 00 00 00 	mov    0xe0(%rax),%rdx$/;"	l
ffff8000001099ae	kernel.asm	/^ffff8000001099ae:	48 b8 00 00 00 00 00 	movabs $0x400000000000,%rax$/;"	l
ffff8000001099b5	kernel.asm	/^ffff8000001099b5:	40 00 00 $/;"	l
ffff8000001099b8	kernel.asm	/^ffff8000001099b8:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff8000001099bb	kernel.asm	/^ffff8000001099bb:	48 89 45 e8          	mov    %rax,-0x18(%rbp)$/;"	l
ffff8000001099bf	kernel.asm	/^ffff8000001099bf:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff8000001099c6	kernel.asm	/^ffff8000001099c6:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff8000001099ca	kernel.asm	/^ffff8000001099ca:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff8000001099cd	kernel.asm	/^ffff8000001099cd:	48 b8 02 b8 10 00 00 	movabs $0xffff80000010b802,%rax$/;"	l
ffff8000001099d4	kernel.asm	/^ffff8000001099d4:	80 ff ff $/;"	l
ffff8000001099d7	kernel.asm	/^ffff8000001099d7:	ff d0                	callq  *%rax$/;"	l
ffff8000001099d9	kernel.asm	/^ffff8000001099d9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff8000001099dd	kernel.asm	/^ffff8000001099dd:	eb 22                	jmp    ffff800000109a01 <sys_mmap+0x27a>$/;"	l
ffff8000001099df	kernel.asm	/^ffff8000001099df:	48 bf 28 da 10 00 00 	movabs $0xffff80000010da28,%rdi$/;"	l
ffff8000001099e6	kernel.asm	/^ffff8000001099e6:	80 ff ff $/;"	l
ffff8000001099e9	kernel.asm	/^ffff8000001099e9:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff8000001099ee	kernel.asm	/^ffff8000001099ee:	48 ba ac 07 10 00 00 	movabs $0xffff8000001007ac,%rdx$/;"	l
ffff8000001099f5	kernel.asm	/^ffff8000001099f5:	80 ff ff $/;"	l
ffff8000001099f8	kernel.asm	/^ffff8000001099f8:	ff d2                	callq  *%rdx$/;"	l
ffff8000001099fa	kernel.asm	/^ffff8000001099fa:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax$/;"	l
ffff800000109a01	kernel.asm	/^ffff800000109a01:	c9                   	leaveq $/;"	l
ffff800000109a02	kernel.asm	/^ffff800000109a02:	c3                   	retq   $/;"	l
ffff800000109a03	kernel.asm	/^ffff800000109a03 <pageintr>:$/;"	l
ffff800000109a03	kernel.asm	/^ffff800000109a03:	55                   	push   %rbp$/;"	l
ffff800000109a04	kernel.asm	/^ffff800000109a04:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000109a07	kernel.asm	/^ffff800000109a07:	48 83 ec 50          	sub    $0x50,%rsp$/;"	l
ffff800000109a0b	kernel.asm	/^ffff800000109a0b:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)$/;"	l
ffff800000109a0f	kernel.asm	/^ffff800000109a0f:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000109a16	kernel.asm	/^ffff800000109a16:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000109a1a	kernel.asm	/^ffff800000109a1a:	48 8b 40 08          	mov    0x8(%rax),%rax$/;"	l
ffff800000109a1e	kernel.asm	/^ffff800000109a1e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff800000109a22	kernel.asm	/^ffff800000109a22:	48 8b 45 b8          	mov    -0x48(%rbp),%rax$/;"	l
ffff800000109a26	kernel.asm	/^ffff800000109a26:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax$/;"	l
ffff800000109a2c	kernel.asm	/^ffff800000109a2c:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ffff800000109a30	kernel.asm	/^ffff800000109a30:	48 8d 55 c8          	lea    -0x38(%rbp),%rdx$/;"	l
ffff800000109a34	kernel.asm	/^ffff800000109a34:	48 8d 45 d4          	lea    -0x2c(%rbp),%rax$/;"	l
ffff800000109a38	kernel.asm	/^ffff800000109a38:	48 89 c6             	mov    %rax,%rsi$/;"	l
ffff800000109a3b	kernel.asm	/^ffff800000109a3b:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
ffff800000109a40	kernel.asm	/^ffff800000109a40:	48 b8 ed 96 10 00 00 	movabs $0xffff8000001096ed,%rax$/;"	l
ffff800000109a47	kernel.asm	/^ffff800000109a47:	80 ff ff $/;"	l
ffff800000109a4a	kernel.asm	/^ffff800000109a4a:	ff d0                	callq  *%rax$/;"	l
ffff800000109a4c	kernel.asm	/^ffff800000109a4c:	85 c0                	test   %eax,%eax$/;"	l
ffff800000109a4e	kernel.asm	/^ffff800000109a4e:	0f 88 1c 01 00 00    	js     ffff800000109b70 <pageintr+0x16d>$/;"	l
ffff800000109a54	kernel.asm	/^ffff800000109a54:	48 8d 45 d0          	lea    -0x30(%rbp),%rax$/;"	l
ffff800000109a58	kernel.asm	/^ffff800000109a58:	48 89 c6             	mov    %rax,%rsi$/;"	l
ffff800000109a5b	kernel.asm	/^ffff800000109a5b:	bf 01 00 00 00       	mov    $0x1,%edi$/;"	l
ffff800000109a60	kernel.asm	/^ffff800000109a60:	48 b8 da 80 10 00 00 	movabs $0xffff8000001080da,%rax$/;"	l
ffff800000109a67	kernel.asm	/^ffff800000109a67:	80 ff ff $/;"	l
ffff800000109a6a	kernel.asm	/^ffff800000109a6a:	ff d0                	callq  *%rax$/;"	l
ffff800000109a6c	kernel.asm	/^ffff800000109a6c:	85 c0                	test   %eax,%eax$/;"	l
ffff800000109a6e	kernel.asm	/^ffff800000109a6e:	0f 88 fc 00 00 00    	js     ffff800000109b70 <pageintr+0x16d>$/;"	l
ffff800000109a74	kernel.asm	/^ffff800000109a74:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000109a7b	kernel.asm	/^ffff800000109a7b:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000109a7f	kernel.asm	/^ffff800000109a7f:	48 8b 90 e0 00 00 00 	mov    0xe0(%rax),%rdx$/;"	l
ffff800000109a86	kernel.asm	/^ffff800000109a86:	48 b8 00 00 00 00 00 	movabs $0x400000000000,%rax$/;"	l
ffff800000109a8d	kernel.asm	/^ffff800000109a8d:	40 00 00 $/;"	l
ffff800000109a90	kernel.asm	/^ffff800000109a90:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff800000109a93	kernel.asm	/^ffff800000109a93:	48 89 45 e8          	mov    %rax,-0x18(%rbp)$/;"	l
ffff800000109a97	kernel.asm	/^ffff800000109a97:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000109a9b	kernel.asm	/^ffff800000109a9b:	48 05 ff 1f 00 00    	add    $0x1fff,%rax$/;"	l
ffff800000109aa1	kernel.asm	/^ffff800000109aa1:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax$/;"	l
ffff800000109aa7	kernel.asm	/^ffff800000109aa7:	48 89 45 e0          	mov    %rax,-0x20(%rbp)$/;"	l
ffff800000109aab	kernel.asm	/^ffff800000109aab:	48 b8 d1 45 10 00 00 	movabs $0xffff8000001045d1,%rax$/;"	l
ffff800000109ab2	kernel.asm	/^ffff800000109ab2:	80 ff ff $/;"	l
ffff800000109ab5	kernel.asm	/^ffff800000109ab5:	ff d0                	callq  *%rax$/;"	l
ffff800000109ab7	kernel.asm	/^ffff800000109ab7:	48 89 45 d8          	mov    %rax,-0x28(%rbp)$/;"	l
ffff800000109abb	kernel.asm	/^ffff800000109abb:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)$/;"	l
ffff800000109ac0	kernel.asm	/^ffff800000109ac0:	0f 84 ad 00 00 00    	je     ffff800000109b73 <pageintr+0x170>$/;"	l
ffff800000109ac6	kernel.asm	/^ffff800000109ac6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff800000109aca	kernel.asm	/^ffff800000109aca:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
ffff800000109acf	kernel.asm	/^ffff800000109acf:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffff800000109ad4	kernel.asm	/^ffff800000109ad4:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000109ad7	kernel.asm	/^ffff800000109ad7:	48 b8 72 7b 10 00 00 	movabs $0xffff800000107b72,%rax$/;"	l
ffff800000109ade	kernel.asm	/^ffff800000109ade:	80 ff ff $/;"	l
ffff800000109ae1	kernel.asm	/^ffff800000109ae1:	ff d0                	callq  *%rax$/;"	l
ffff800000109ae3	kernel.asm	/^ffff800000109ae3:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx$/;"	l
ffff800000109ae7	kernel.asm	/^ffff800000109ae7:	48 b8 00 00 00 00 00 	movabs $0x800000000000,%rax$/;"	l
ffff800000109aee	kernel.asm	/^ffff800000109aee:	80 00 00 $/;"	l
ffff800000109af1	kernel.asm	/^ffff800000109af1:	48 01 c2             	add    %rax,%rdx$/;"	l
ffff800000109af4	kernel.asm	/^ffff800000109af4:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi$/;"	l
ffff800000109af8	kernel.asm	/^ffff800000109af8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000109afc	kernel.asm	/^ffff800000109afc:	41 b8 06 00 00 00    	mov    $0x6,%r8d$/;"	l
ffff800000109b02	kernel.asm	/^ffff800000109b02:	48 89 d1             	mov    %rdx,%rcx$/;"	l
ffff800000109b05	kernel.asm	/^ffff800000109b05:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
ffff800000109b0a	kernel.asm	/^ffff800000109b0a:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000109b0d	kernel.asm	/^ffff800000109b0d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000109b12	kernel.asm	/^ffff800000109b12:	49 b9 05 bb 10 00 00 	movabs $0xffff80000010bb05,%r9$/;"	l
ffff800000109b19	kernel.asm	/^ffff800000109b19:	80 ff ff $/;"	l
ffff800000109b1c	kernel.asm	/^ffff800000109b1c:	41 ff d1             	callq  *%r9$/;"	l
ffff800000109b1f	kernel.asm	/^ffff800000109b1f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff800000109b23	kernel.asm	/^ffff800000109b23:	89 c2                	mov    %eax,%edx$/;"	l
ffff800000109b25	kernel.asm	/^ffff800000109b25:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000109b29	kernel.asm	/^ffff800000109b29:	29 c2                	sub    %eax,%edx$/;"	l
ffff800000109b2b	kernel.asm	/^ffff800000109b2b:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi$/;"	l
ffff800000109b2f	kernel.asm	/^ffff800000109b2f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
ffff800000109b33	kernel.asm	/^ffff800000109b33:	48 8b 40 18          	mov    0x18(%rax),%rax$/;"	l
ffff800000109b37	kernel.asm	/^ffff800000109b37:	b9 00 10 00 00       	mov    $0x1000,%ecx$/;"	l
ffff800000109b3c	kernel.asm	/^ffff800000109b3c:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000109b3f	kernel.asm	/^ffff800000109b3f:	48 b8 0d 33 10 00 00 	movabs $0xffff80000010330d,%rax$/;"	l
ffff800000109b46	kernel.asm	/^ffff800000109b46:	80 ff ff $/;"	l
ffff800000109b49	kernel.asm	/^ffff800000109b49:	ff d0                	callq  *%rax$/;"	l
ffff800000109b4b	kernel.asm	/^ffff800000109b4b:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000109b52	kernel.asm	/^ffff800000109b52:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000109b56	kernel.asm	/^ffff800000109b56:	48 b9 00 00 00 00 00 	movabs $0xffffc00000000000,%rcx$/;"	l
ffff800000109b5d	kernel.asm	/^ffff800000109b5d:	c0 ff ff $/;"	l
ffff800000109b60	kernel.asm	/^ffff800000109b60:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx$/;"	l
ffff800000109b64	kernel.asm	/^ffff800000109b64:	48 01 ca             	add    %rcx,%rdx$/;"	l
ffff800000109b67	kernel.asm	/^ffff800000109b67:	48 89 90 e0 00 00 00 	mov    %rdx,0xe0(%rax)$/;"	l
ffff800000109b6e	kernel.asm	/^ffff800000109b6e:	eb 04                	jmp    ffff800000109b74 <pageintr+0x171>$/;"	l
ffff800000109b70	kernel.asm	/^ffff800000109b70:	90                   	nop$/;"	l
ffff800000109b71	kernel.asm	/^ffff800000109b71:	eb 01                	jmp    ffff800000109b74 <pageintr+0x171>$/;"	l
ffff800000109b73	kernel.asm	/^ffff800000109b73:	90                   	nop$/;"	l
ffff800000109b74	kernel.asm	/^ffff800000109b74:	c9                   	leaveq $/;"	l
ffff800000109b75	kernel.asm	/^ffff800000109b75:	c3                   	retq   $/;"	l
ffff800000109b76	kernel.asm	/^ffff800000109b76 <sys_sleep>:$/;"	l
ffff800000109b76	kernel.asm	/^ffff800000109b76:	55                   	push   %rbp$/;"	l
ffff800000109b77	kernel.asm	/^ffff800000109b77:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000109b7a	kernel.asm	/^ffff800000109b7a:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff800000109b7e	kernel.asm	/^ffff800000109b7e:	48 8d 45 f8          	lea    -0x8(%rbp),%rax$/;"	l
ffff800000109b82	kernel.asm	/^ffff800000109b82:	48 89 c6             	mov    %rax,%rsi$/;"	l
ffff800000109b85	kernel.asm	/^ffff800000109b85:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
ffff800000109b8a	kernel.asm	/^ffff800000109b8a:	48 b8 da 80 10 00 00 	movabs $0xffff8000001080da,%rax$/;"	l
ffff800000109b91	kernel.asm	/^ffff800000109b91:	80 ff ff $/;"	l
ffff800000109b94	kernel.asm	/^ffff800000109b94:	ff d0                	callq  *%rax$/;"	l
ffff800000109b96	kernel.asm	/^ffff800000109b96:	85 c0                	test   %eax,%eax$/;"	l
ffff800000109b98	kernel.asm	/^ffff800000109b98:	79 0a                	jns    ffff800000109ba4 <sys_sleep+0x2e>$/;"	l
ffff800000109b9a	kernel.asm	/^ffff800000109b9a:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff800000109b9f	kernel.asm	/^ffff800000109b9f:	e9 a7 00 00 00       	jmpq   ffff800000109c4b <sys_sleep+0xd5>$/;"	l
ffff800000109ba4	kernel.asm	/^ffff800000109ba4:	48 bf a0 f7 11 00 00 	movabs $0xffff80000011f7a0,%rdi$/;"	l
ffff800000109bab	kernel.asm	/^ffff800000109bab:	80 ff ff $/;"	l
ffff800000109bae	kernel.asm	/^ffff800000109bae:	48 b8 d6 77 10 00 00 	movabs $0xffff8000001077d6,%rax$/;"	l
ffff800000109bb5	kernel.asm	/^ffff800000109bb5:	80 ff ff $/;"	l
ffff800000109bb8	kernel.asm	/^ffff800000109bb8:	ff d0                	callq  *%rax$/;"	l
ffff800000109bba	kernel.asm	/^ffff800000109bba:	48 b8 08 f8 11 00 00 	movabs $0xffff80000011f808,%rax$/;"	l
ffff800000109bc1	kernel.asm	/^ffff800000109bc1:	80 ff ff $/;"	l
ffff800000109bc4	kernel.asm	/^ffff800000109bc4:	8b 00                	mov    (%rax),%eax$/;"	l
ffff800000109bc6	kernel.asm	/^ffff800000109bc6:	89 45 fc             	mov    %eax,-0x4(%rbp)$/;"	l
ffff800000109bc9	kernel.asm	/^ffff800000109bc9:	eb 4f                	jmp    ffff800000109c1a <sys_sleep+0xa4>$/;"	l
ffff800000109bcb	kernel.asm	/^ffff800000109bcb:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000109bd2	kernel.asm	/^ffff800000109bd2:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000109bd6	kernel.asm	/^ffff800000109bd6:	8b 40 40             	mov    0x40(%rax),%eax$/;"	l
ffff800000109bd9	kernel.asm	/^ffff800000109bd9:	85 c0                	test   %eax,%eax$/;"	l
ffff800000109bdb	kernel.asm	/^ffff800000109bdb:	74 1d                	je     ffff800000109bfa <sys_sleep+0x84>$/;"	l
ffff800000109bdd	kernel.asm	/^ffff800000109bdd:	48 bf a0 f7 11 00 00 	movabs $0xffff80000011f7a0,%rdi$/;"	l
ffff800000109be4	kernel.asm	/^ffff800000109be4:	80 ff ff $/;"	l
ffff800000109be7	kernel.asm	/^ffff800000109be7:	48 b8 6f 78 10 00 00 	movabs $0xffff80000010786f,%rax$/;"	l
ffff800000109bee	kernel.asm	/^ffff800000109bee:	80 ff ff $/;"	l
ffff800000109bf1	kernel.asm	/^ffff800000109bf1:	ff d0                	callq  *%rax$/;"	l
ffff800000109bf3	kernel.asm	/^ffff800000109bf3:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff800000109bf8	kernel.asm	/^ffff800000109bf8:	eb 51                	jmp    ffff800000109c4b <sys_sleep+0xd5>$/;"	l
ffff800000109bfa	kernel.asm	/^ffff800000109bfa:	48 be a0 f7 11 00 00 	movabs $0xffff80000011f7a0,%rsi$/;"	l
ffff800000109c01	kernel.asm	/^ffff800000109c01:	80 ff ff $/;"	l
ffff800000109c04	kernel.asm	/^ffff800000109c04:	48 bf 08 f8 11 00 00 	movabs $0xffff80000011f808,%rdi$/;"	l
ffff800000109c0b	kernel.asm	/^ffff800000109c0b:	80 ff ff $/;"	l
ffff800000109c0e	kernel.asm	/^ffff800000109c0e:	48 b8 cc 71 10 00 00 	movabs $0xffff8000001071cc,%rax$/;"	l
ffff800000109c15	kernel.asm	/^ffff800000109c15:	80 ff ff $/;"	l
ffff800000109c18	kernel.asm	/^ffff800000109c18:	ff d0                	callq  *%rax$/;"	l
ffff800000109c1a	kernel.asm	/^ffff800000109c1a:	48 b8 08 f8 11 00 00 	movabs $0xffff80000011f808,%rax$/;"	l
ffff800000109c21	kernel.asm	/^ffff800000109c21:	80 ff ff $/;"	l
ffff800000109c24	kernel.asm	/^ffff800000109c24:	8b 00                	mov    (%rax),%eax$/;"	l
ffff800000109c26	kernel.asm	/^ffff800000109c26:	2b 45 fc             	sub    -0x4(%rbp),%eax$/;"	l
ffff800000109c29	kernel.asm	/^ffff800000109c29:	8b 55 f8             	mov    -0x8(%rbp),%edx$/;"	l
ffff800000109c2c	kernel.asm	/^ffff800000109c2c:	39 d0                	cmp    %edx,%eax$/;"	l
ffff800000109c2e	kernel.asm	/^ffff800000109c2e:	72 9b                	jb     ffff800000109bcb <sys_sleep+0x55>$/;"	l
ffff800000109c30	kernel.asm	/^ffff800000109c30:	48 bf a0 f7 11 00 00 	movabs $0xffff80000011f7a0,%rdi$/;"	l
ffff800000109c37	kernel.asm	/^ffff800000109c37:	80 ff ff $/;"	l
ffff800000109c3a	kernel.asm	/^ffff800000109c3a:	48 b8 6f 78 10 00 00 	movabs $0xffff80000010786f,%rax$/;"	l
ffff800000109c41	kernel.asm	/^ffff800000109c41:	80 ff ff $/;"	l
ffff800000109c44	kernel.asm	/^ffff800000109c44:	ff d0                	callq  *%rax$/;"	l
ffff800000109c46	kernel.asm	/^ffff800000109c46:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff800000109c4b	kernel.asm	/^ffff800000109c4b:	c9                   	leaveq $/;"	l
ffff800000109c4c	kernel.asm	/^ffff800000109c4c:	c3                   	retq   $/;"	l
ffff800000109c4d	kernel.asm	/^ffff800000109c4d <sys_uptime>:$/;"	l
ffff800000109c4d	kernel.asm	/^ffff800000109c4d:	55                   	push   %rbp$/;"	l
ffff800000109c4e	kernel.asm	/^ffff800000109c4e:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000109c51	kernel.asm	/^ffff800000109c51:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff800000109c55	kernel.asm	/^ffff800000109c55:	48 bf a0 f7 11 00 00 	movabs $0xffff80000011f7a0,%rdi$/;"	l
ffff800000109c5c	kernel.asm	/^ffff800000109c5c:	80 ff ff $/;"	l
ffff800000109c5f	kernel.asm	/^ffff800000109c5f:	48 b8 d6 77 10 00 00 	movabs $0xffff8000001077d6,%rax$/;"	l
ffff800000109c66	kernel.asm	/^ffff800000109c66:	80 ff ff $/;"	l
ffff800000109c69	kernel.asm	/^ffff800000109c69:	ff d0                	callq  *%rax$/;"	l
ffff800000109c6b	kernel.asm	/^ffff800000109c6b:	48 b8 08 f8 11 00 00 	movabs $0xffff80000011f808,%rax$/;"	l
ffff800000109c72	kernel.asm	/^ffff800000109c72:	80 ff ff $/;"	l
ffff800000109c75	kernel.asm	/^ffff800000109c75:	8b 00                	mov    (%rax),%eax$/;"	l
ffff800000109c77	kernel.asm	/^ffff800000109c77:	89 45 fc             	mov    %eax,-0x4(%rbp)$/;"	l
ffff800000109c7a	kernel.asm	/^ffff800000109c7a:	48 bf a0 f7 11 00 00 	movabs $0xffff80000011f7a0,%rdi$/;"	l
ffff800000109c81	kernel.asm	/^ffff800000109c81:	80 ff ff $/;"	l
ffff800000109c84	kernel.asm	/^ffff800000109c84:	48 b8 6f 78 10 00 00 	movabs $0xffff80000010786f,%rax$/;"	l
ffff800000109c8b	kernel.asm	/^ffff800000109c8b:	80 ff ff $/;"	l
ffff800000109c8e	kernel.asm	/^ffff800000109c8e:	ff d0                	callq  *%rax$/;"	l
ffff800000109c90	kernel.asm	/^ffff800000109c90:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff800000109c93	kernel.asm	/^ffff800000109c93:	c9                   	leaveq $/;"	l
ffff800000109c94	kernel.asm	/^ffff800000109c94:	c3                   	retq   $/;"	l
ffff800000109c95	kernel.asm	/^ffff800000109c95 <alltraps>:$/;"	l
ffff800000109c95	kernel.asm	/^ffff800000109c95:	41 57                	push   %r15$/;"	l
ffff800000109c97	kernel.asm	/^ffff800000109c97:	41 56                	push   %r14$/;"	l
ffff800000109c99	kernel.asm	/^ffff800000109c99:	41 55                	push   %r13$/;"	l
ffff800000109c9b	kernel.asm	/^ffff800000109c9b:	41 54                	push   %r12$/;"	l
ffff800000109c9d	kernel.asm	/^ffff800000109c9d:	41 53                	push   %r11$/;"	l
ffff800000109c9f	kernel.asm	/^ffff800000109c9f:	41 52                	push   %r10$/;"	l
ffff800000109ca1	kernel.asm	/^ffff800000109ca1:	41 51                	push   %r9$/;"	l
ffff800000109ca3	kernel.asm	/^ffff800000109ca3:	41 50                	push   %r8$/;"	l
ffff800000109ca5	kernel.asm	/^ffff800000109ca5:	57                   	push   %rdi$/;"	l
ffff800000109ca6	kernel.asm	/^ffff800000109ca6:	56                   	push   %rsi$/;"	l
ffff800000109ca7	kernel.asm	/^ffff800000109ca7:	55                   	push   %rbp$/;"	l
ffff800000109ca8	kernel.asm	/^ffff800000109ca8:	52                   	push   %rdx$/;"	l
ffff800000109ca9	kernel.asm	/^ffff800000109ca9:	51                   	push   %rcx$/;"	l
ffff800000109caa	kernel.asm	/^ffff800000109caa:	53                   	push   %rbx$/;"	l
ffff800000109cab	kernel.asm	/^ffff800000109cab:	50                   	push   %rax$/;"	l
ffff800000109cac	kernel.asm	/^ffff800000109cac:	48 89 e7             	mov    %rsp,%rdi$/;"	l
ffff800000109caf	kernel.asm	/^ffff800000109caf:	e8 c2 02 00 00       	callq  ffff800000109f76 <trap>$/;"	l
ffff800000109cb4	kernel.asm	/^ffff800000109cb4 <trapret>:$/;"	l
ffff800000109cb4	kernel.asm	/^ffff800000109cb4:	58                   	pop    %rax$/;"	l
ffff800000109cb5	kernel.asm	/^ffff800000109cb5:	5b                   	pop    %rbx$/;"	l
ffff800000109cb6	kernel.asm	/^ffff800000109cb6:	59                   	pop    %rcx$/;"	l
ffff800000109cb7	kernel.asm	/^ffff800000109cb7:	5a                   	pop    %rdx$/;"	l
ffff800000109cb8	kernel.asm	/^ffff800000109cb8:	5d                   	pop    %rbp$/;"	l
ffff800000109cb9	kernel.asm	/^ffff800000109cb9:	5e                   	pop    %rsi$/;"	l
ffff800000109cba	kernel.asm	/^ffff800000109cba:	5f                   	pop    %rdi$/;"	l
ffff800000109cbb	kernel.asm	/^ffff800000109cbb:	41 58                	pop    %r8$/;"	l
ffff800000109cbd	kernel.asm	/^ffff800000109cbd:	41 59                	pop    %r9$/;"	l
ffff800000109cbf	kernel.asm	/^ffff800000109cbf:	41 5a                	pop    %r10$/;"	l
ffff800000109cc1	kernel.asm	/^ffff800000109cc1:	41 5b                	pop    %r11$/;"	l
ffff800000109cc3	kernel.asm	/^ffff800000109cc3:	41 5c                	pop    %r12$/;"	l
ffff800000109cc5	kernel.asm	/^ffff800000109cc5:	41 5d                	pop    %r13$/;"	l
ffff800000109cc7	kernel.asm	/^ffff800000109cc7:	41 5e                	pop    %r14$/;"	l
ffff800000109cc9	kernel.asm	/^ffff800000109cc9:	41 5f                	pop    %r15$/;"	l
ffff800000109ccb	kernel.asm	/^ffff800000109ccb:	48 83 c4 10          	add    $0x10,%rsp$/;"	l
ffff800000109ccf	kernel.asm	/^ffff800000109ccf:	48 cf                	iretq  $/;"	l
ffff800000109cd1	kernel.asm	/^ffff800000109cd1 <syscall_trap>:$/;"	l
ffff800000109cd1	kernel.asm	/^ffff800000109cd1:	41 57                	push   %r15$/;"	l
ffff800000109cd3	kernel.asm	/^ffff800000109cd3:	41 56                	push   %r14$/;"	l
ffff800000109cd5	kernel.asm	/^ffff800000109cd5:	41 55                	push   %r13$/;"	l
ffff800000109cd7	kernel.asm	/^ffff800000109cd7:	41 54                	push   %r12$/;"	l
ffff800000109cd9	kernel.asm	/^ffff800000109cd9:	41 53                	push   %r11$/;"	l
ffff800000109cdb	kernel.asm	/^ffff800000109cdb:	41 52                	push   %r10$/;"	l
ffff800000109cdd	kernel.asm	/^ffff800000109cdd:	41 51                	push   %r9$/;"	l
ffff800000109cdf	kernel.asm	/^ffff800000109cdf:	41 50                	push   %r8$/;"	l
ffff800000109ce1	kernel.asm	/^ffff800000109ce1:	57                   	push   %rdi$/;"	l
ffff800000109ce2	kernel.asm	/^ffff800000109ce2:	56                   	push   %rsi$/;"	l
ffff800000109ce3	kernel.asm	/^ffff800000109ce3:	55                   	push   %rbp$/;"	l
ffff800000109ce4	kernel.asm	/^ffff800000109ce4:	52                   	push   %rdx$/;"	l
ffff800000109ce5	kernel.asm	/^ffff800000109ce5:	51                   	push   %rcx$/;"	l
ffff800000109ce6	kernel.asm	/^ffff800000109ce6:	53                   	push   %rbx$/;"	l
ffff800000109ce7	kernel.asm	/^ffff800000109ce7:	50                   	push   %rax$/;"	l
ffff800000109ce8	kernel.asm	/^ffff800000109ce8:	48 89 e7             	mov    %rsp,%rdi$/;"	l
ffff800000109ceb	kernel.asm	/^ffff800000109ceb:	e8 86 02 00 00       	callq  ffff800000109f76 <trap>$/;"	l
ffff800000109cf0	kernel.asm	/^ffff800000109cf0 <syscall_trapret>:$/;"	l
ffff800000109cf0	kernel.asm	/^ffff800000109cf0:	58                   	pop    %rax$/;"	l
ffff800000109cf1	kernel.asm	/^ffff800000109cf1:	5b                   	pop    %rbx$/;"	l
ffff800000109cf2	kernel.asm	/^ffff800000109cf2:	59                   	pop    %rcx$/;"	l
ffff800000109cf3	kernel.asm	/^ffff800000109cf3:	5a                   	pop    %rdx$/;"	l
ffff800000109cf4	kernel.asm	/^ffff800000109cf4:	5d                   	pop    %rbp$/;"	l
ffff800000109cf5	kernel.asm	/^ffff800000109cf5:	5e                   	pop    %rsi$/;"	l
ffff800000109cf6	kernel.asm	/^ffff800000109cf6:	5f                   	pop    %rdi$/;"	l
ffff800000109cf7	kernel.asm	/^ffff800000109cf7:	41 58                	pop    %r8$/;"	l
ffff800000109cf9	kernel.asm	/^ffff800000109cf9:	41 59                	pop    %r9$/;"	l
ffff800000109cfb	kernel.asm	/^ffff800000109cfb:	41 5a                	pop    %r10$/;"	l
ffff800000109cfd	kernel.asm	/^ffff800000109cfd:	41 5b                	pop    %r11$/;"	l
ffff800000109cff	kernel.asm	/^ffff800000109cff:	41 5c                	pop    %r12$/;"	l
ffff800000109d01	kernel.asm	/^ffff800000109d01:	41 5d                	pop    %r13$/;"	l
ffff800000109d03	kernel.asm	/^ffff800000109d03:	41 5e                	pop    %r14$/;"	l
ffff800000109d05	kernel.asm	/^ffff800000109d05:	41 5f                	pop    %r15$/;"	l
ffff800000109d07	kernel.asm	/^ffff800000109d07:	48 83 c4 28          	add    $0x28,%rsp$/;"	l
ffff800000109d0b	kernel.asm	/^ffff800000109d0b:	48 8b 24 24          	mov    (%rsp),%rsp$/;"	l
ffff800000109d0f	kernel.asm	/^ffff800000109d0f:	48 0f 07             	sysretq $/;"	l
ffff800000109d12	kernel.asm	/^ffff800000109d12 <lidt>:$/;"	l
ffff800000109d12	kernel.asm	/^ffff800000109d12:	55                   	push   %rbp$/;"	l
ffff800000109d13	kernel.asm	/^ffff800000109d13:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000109d16	kernel.asm	/^ffff800000109d16:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ffff800000109d1a	kernel.asm	/^ffff800000109d1a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
ffff800000109d1e	kernel.asm	/^ffff800000109d1e:	89 75 e4             	mov    %esi,-0x1c(%rbp)$/;"	l
ffff800000109d21	kernel.asm	/^ffff800000109d21:	8b 45 e4             	mov    -0x1c(%rbp),%eax$/;"	l
ffff800000109d24	kernel.asm	/^ffff800000109d24:	83 e8 01             	sub    $0x1,%eax$/;"	l
ffff800000109d27	kernel.asm	/^ffff800000109d27:	66 89 45 f0          	mov    %ax,-0x10(%rbp)$/;"	l
ffff800000109d2b	kernel.asm	/^ffff800000109d2b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000109d2f	kernel.asm	/^ffff800000109d2f:	66 89 45 f2          	mov    %ax,-0xe(%rbp)$/;"	l
ffff800000109d33	kernel.asm	/^ffff800000109d33:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000109d37	kernel.asm	/^ffff800000109d37:	48 c1 e8 10          	shr    $0x10,%rax$/;"	l
ffff800000109d3b	kernel.asm	/^ffff800000109d3b:	66 89 45 f4          	mov    %ax,-0xc(%rbp)$/;"	l
ffff800000109d3f	kernel.asm	/^ffff800000109d3f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000109d43	kernel.asm	/^ffff800000109d43:	48 c1 e8 20          	shr    $0x20,%rax$/;"	l
ffff800000109d47	kernel.asm	/^ffff800000109d47:	66 89 45 f6          	mov    %ax,-0xa(%rbp)$/;"	l
ffff800000109d4b	kernel.asm	/^ffff800000109d4b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000109d4f	kernel.asm	/^ffff800000109d4f:	48 c1 e8 30          	shr    $0x30,%rax$/;"	l
ffff800000109d53	kernel.asm	/^ffff800000109d53:	66 89 45 f8          	mov    %ax,-0x8(%rbp)$/;"	l
ffff800000109d57	kernel.asm	/^ffff800000109d57:	48 8d 45 f0          	lea    -0x10(%rbp),%rax$/;"	l
ffff800000109d5b	kernel.asm	/^ffff800000109d5b:	0f 01 18             	lidt   (%rax)$/;"	l
ffff800000109d5e	kernel.asm	/^ffff800000109d5e:	90                   	nop$/;"	l
ffff800000109d5f	kernel.asm	/^ffff800000109d5f:	c9                   	leaveq $/;"	l
ffff800000109d60	kernel.asm	/^ffff800000109d60:	c3                   	retq   $/;"	l
ffff800000109d61	kernel.asm	/^ffff800000109d61 <rcr2>:$/;"	l
ffff800000109d61	kernel.asm	/^ffff800000109d61:	55                   	push   %rbp$/;"	l
ffff800000109d62	kernel.asm	/^ffff800000109d62:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000109d65	kernel.asm	/^ffff800000109d65:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff800000109d69	kernel.asm	/^ffff800000109d69:	0f 20 d0             	mov    %cr2,%rax$/;"	l
ffff800000109d6c	kernel.asm	/^ffff800000109d6c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff800000109d70	kernel.asm	/^ffff800000109d70:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff800000109d74	kernel.asm	/^ffff800000109d74:	c9                   	leaveq $/;"	l
ffff800000109d75	kernel.asm	/^ffff800000109d75:	c3                   	retq   $/;"	l
ffff800000109d76	kernel.asm	/^ffff800000109d76 <mkgate>:$/;"	l
ffff800000109d76	kernel.asm	/^ffff800000109d76:	55                   	push   %rbp$/;"	l
ffff800000109d77	kernel.asm	/^ffff800000109d77:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000109d7a	kernel.asm	/^ffff800000109d7a:	48 83 ec 30          	sub    $0x30,%rsp$/;"	l
ffff800000109d7e	kernel.asm	/^ffff800000109d7e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
ffff800000109d82	kernel.asm	/^ffff800000109d82:	89 75 e4             	mov    %esi,-0x1c(%rbp)$/;"	l
ffff800000109d85	kernel.asm	/^ffff800000109d85:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)$/;"	l
ffff800000109d89	kernel.asm	/^ffff800000109d89:	89 4d e0             	mov    %ecx,-0x20(%rbp)$/;"	l
ffff800000109d8c	kernel.asm	/^ffff800000109d8c:	44 89 45 d4          	mov    %r8d,-0x2c(%rbp)$/;"	l
ffff800000109d90	kernel.asm	/^ffff800000109d90:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff800000109d94	kernel.asm	/^ffff800000109d94:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff800000109d98	kernel.asm	/^ffff800000109d98:	c1 65 e4 02          	shll   $0x2,-0x1c(%rbp)$/;"	l
ffff800000109d9c	kernel.asm	/^ffff800000109d9c:	8b 45 e4             	mov    -0x1c(%rbp),%eax$/;"	l
ffff800000109d9f	kernel.asm	/^ffff800000109d9f:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx$/;"	l
ffff800000109da6	kernel.asm	/^ffff800000109da6:	00 $/;"	l
ffff800000109da7	kernel.asm	/^ffff800000109da7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000109dab	kernel.asm	/^ffff800000109dab:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff800000109dae	kernel.asm	/^ffff800000109dae:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx$/;"	l
ffff800000109db2	kernel.asm	/^ffff800000109db2:	0f b7 d2             	movzwl %dx,%edx$/;"	l
ffff800000109db5	kernel.asm	/^ffff800000109db5:	81 ca 00 00 08 00    	or     $0x80000,%edx$/;"	l
ffff800000109dbb	kernel.asm	/^ffff800000109dbb:	89 10                	mov    %edx,(%rax)$/;"	l
ffff800000109dbd	kernel.asm	/^ffff800000109dbd:	8b 45 e4             	mov    -0x1c(%rbp),%eax$/;"	l
ffff800000109dc0	kernel.asm	/^ffff800000109dc0:	83 c0 01             	add    $0x1,%eax$/;"	l
ffff800000109dc3	kernel.asm	/^ffff800000109dc3:	89 c0                	mov    %eax,%eax$/;"	l
ffff800000109dc5	kernel.asm	/^ffff800000109dc5:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx$/;"	l
ffff800000109dcc	kernel.asm	/^ffff800000109dcc:	00 $/;"	l
ffff800000109dcd	kernel.asm	/^ffff800000109dcd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000109dd1	kernel.asm	/^ffff800000109dd1:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff800000109dd4	kernel.asm	/^ffff800000109dd4:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx$/;"	l
ffff800000109dd8	kernel.asm	/^ffff800000109dd8:	89 d1                	mov    %edx,%ecx$/;"	l
ffff800000109dda	kernel.asm	/^ffff800000109dda:	66 b9 00 00          	mov    $0x0,%cx$/;"	l
ffff800000109dde	kernel.asm	/^ffff800000109dde:	8b 55 e0             	mov    -0x20(%rbp),%edx$/;"	l
ffff800000109de1	kernel.asm	/^ffff800000109de1:	83 e2 03             	and    $0x3,%edx$/;"	l
ffff800000109de4	kernel.asm	/^ffff800000109de4:	c1 e2 0d             	shl    $0xd,%edx$/;"	l
ffff800000109de7	kernel.asm	/^ffff800000109de7:	09 ca                	or     %ecx,%edx$/;"	l
ffff800000109de9	kernel.asm	/^ffff800000109de9:	80 ce 8e             	or     $0x8e,%dh$/;"	l
ffff800000109dec	kernel.asm	/^ffff800000109dec:	89 10                	mov    %edx,(%rax)$/;"	l
ffff800000109dee	kernel.asm	/^ffff800000109dee:	83 7d d4 00          	cmpl   $0x0,-0x2c(%rbp)$/;"	l
ffff800000109df2	kernel.asm	/^ffff800000109df2:	74 35                	je     ffff800000109e29 <mkgate+0xb3>$/;"	l
ffff800000109df4	kernel.asm	/^ffff800000109df4:	8b 45 e4             	mov    -0x1c(%rbp),%eax$/;"	l
ffff800000109df7	kernel.asm	/^ffff800000109df7:	83 c0 01             	add    $0x1,%eax$/;"	l
ffff800000109dfa	kernel.asm	/^ffff800000109dfa:	89 c0                	mov    %eax,%eax$/;"	l
ffff800000109dfc	kernel.asm	/^ffff800000109dfc:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx$/;"	l
ffff800000109e03	kernel.asm	/^ffff800000109e03:	00 $/;"	l
ffff800000109e04	kernel.asm	/^ffff800000109e04:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000109e08	kernel.asm	/^ffff800000109e08:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff800000109e0b	kernel.asm	/^ffff800000109e0b:	8b 55 e4             	mov    -0x1c(%rbp),%edx$/;"	l
ffff800000109e0e	kernel.asm	/^ffff800000109e0e:	83 c2 01             	add    $0x1,%edx$/;"	l
ffff800000109e11	kernel.asm	/^ffff800000109e11:	89 d2                	mov    %edx,%edx$/;"	l
ffff800000109e13	kernel.asm	/^ffff800000109e13:	48 8d 0c 95 00 00 00 	lea    0x0(,%rdx,4),%rcx$/;"	l
ffff800000109e1a	kernel.asm	/^ffff800000109e1a:	00 $/;"	l
ffff800000109e1b	kernel.asm	/^ffff800000109e1b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx$/;"	l
ffff800000109e1f	kernel.asm	/^ffff800000109e1f:	48 01 ca             	add    %rcx,%rdx$/;"	l
ffff800000109e22	kernel.asm	/^ffff800000109e22:	8b 12                	mov    (%rdx),%edx$/;"	l
ffff800000109e24	kernel.asm	/^ffff800000109e24:	80 ce 01             	or     $0x1,%dh$/;"	l
ffff800000109e27	kernel.asm	/^ffff800000109e27:	89 10                	mov    %edx,(%rax)$/;"	l
ffff800000109e29	kernel.asm	/^ffff800000109e29:	8b 45 e4             	mov    -0x1c(%rbp),%eax$/;"	l
ffff800000109e2c	kernel.asm	/^ffff800000109e2c:	83 c0 02             	add    $0x2,%eax$/;"	l
ffff800000109e2f	kernel.asm	/^ffff800000109e2f:	89 c0                	mov    %eax,%eax$/;"	l
ffff800000109e31	kernel.asm	/^ffff800000109e31:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx$/;"	l
ffff800000109e38	kernel.asm	/^ffff800000109e38:	00 $/;"	l
ffff800000109e39	kernel.asm	/^ffff800000109e39:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000109e3d	kernel.asm	/^ffff800000109e3d:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff800000109e40	kernel.asm	/^ffff800000109e40:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx$/;"	l
ffff800000109e44	kernel.asm	/^ffff800000109e44:	48 c1 ea 20          	shr    $0x20,%rdx$/;"	l
ffff800000109e48	kernel.asm	/^ffff800000109e48:	89 10                	mov    %edx,(%rax)$/;"	l
ffff800000109e4a	kernel.asm	/^ffff800000109e4a:	8b 45 e4             	mov    -0x1c(%rbp),%eax$/;"	l
ffff800000109e4d	kernel.asm	/^ffff800000109e4d:	83 c0 03             	add    $0x3,%eax$/;"	l
ffff800000109e50	kernel.asm	/^ffff800000109e50:	89 c0                	mov    %eax,%eax$/;"	l
ffff800000109e52	kernel.asm	/^ffff800000109e52:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx$/;"	l
ffff800000109e59	kernel.asm	/^ffff800000109e59:	00 $/;"	l
ffff800000109e5a	kernel.asm	/^ffff800000109e5a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff800000109e5e	kernel.asm	/^ffff800000109e5e:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff800000109e61	kernel.asm	/^ffff800000109e61:	c7 00 00 00 00 00    	movl   $0x0,(%rax)$/;"	l
ffff800000109e67	kernel.asm	/^ffff800000109e67:	90                   	nop$/;"	l
ffff800000109e68	kernel.asm	/^ffff800000109e68:	c9                   	leaveq $/;"	l
ffff800000109e69	kernel.asm	/^ffff800000109e69:	c3                   	retq   $/;"	l
ffff800000109e6a	kernel.asm	/^ffff800000109e6a <idtinit>:$/;"	l
ffff800000109e6a	kernel.asm	/^ffff800000109e6a:	55                   	push   %rbp$/;"	l
ffff800000109e6b	kernel.asm	/^ffff800000109e6b:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000109e6e	kernel.asm	/^ffff800000109e6e:	48 b8 80 f7 11 00 00 	movabs $0xffff80000011f780,%rax$/;"	l
ffff800000109e75	kernel.asm	/^ffff800000109e75:	80 ff ff $/;"	l
ffff800000109e78	kernel.asm	/^ffff800000109e78:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff800000109e7b	kernel.asm	/^ffff800000109e7b:	be 00 10 00 00       	mov    $0x1000,%esi$/;"	l
ffff800000109e80	kernel.asm	/^ffff800000109e80:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000109e83	kernel.asm	/^ffff800000109e83:	48 b8 12 9d 10 00 00 	movabs $0xffff800000109d12,%rax$/;"	l
ffff800000109e8a	kernel.asm	/^ffff800000109e8a:	80 ff ff $/;"	l
ffff800000109e8d	kernel.asm	/^ffff800000109e8d:	ff d0                	callq  *%rax$/;"	l
ffff800000109e8f	kernel.asm	/^ffff800000109e8f:	90                   	nop$/;"	l
ffff800000109e90	kernel.asm	/^ffff800000109e90:	5d                   	pop    %rbp$/;"	l
ffff800000109e91	kernel.asm	/^ffff800000109e91:	c3                   	retq   $/;"	l
ffff800000109e92	kernel.asm	/^ffff800000109e92 <tvinit>:$/;"	l
ffff800000109e92	kernel.asm	/^ffff800000109e92:	55                   	push   %rbp$/;"	l
ffff800000109e93	kernel.asm	/^ffff800000109e93:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000109e96	kernel.asm	/^ffff800000109e96:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff800000109e9a	kernel.asm	/^ffff800000109e9a:	48 b8 d1 45 10 00 00 	movabs $0xffff8000001045d1,%rax$/;"	l
ffff800000109ea1	kernel.asm	/^ffff800000109ea1:	80 ff ff $/;"	l
ffff800000109ea4	kernel.asm	/^ffff800000109ea4:	ff d0                	callq  *%rax$/;"	l
ffff800000109ea6	kernel.asm	/^ffff800000109ea6:	48 89 c2             	mov    %rax,%rdx$/;"	l
ffff800000109ea9	kernel.asm	/^ffff800000109ea9:	48 b8 80 f7 11 00 00 	movabs $0xffff80000011f780,%rax$/;"	l
ffff800000109eb0	kernel.asm	/^ffff800000109eb0:	80 ff ff $/;"	l
ffff800000109eb3	kernel.asm	/^ffff800000109eb3:	48 89 10             	mov    %rdx,(%rax)$/;"	l
ffff800000109eb6	kernel.asm	/^ffff800000109eb6:	48 b8 80 f7 11 00 00 	movabs $0xffff80000011f780,%rax$/;"	l
ffff800000109ebd	kernel.asm	/^ffff800000109ebd:	80 ff ff $/;"	l
ffff800000109ec0	kernel.asm	/^ffff800000109ec0:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff800000109ec3	kernel.asm	/^ffff800000109ec3:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
ffff800000109ec8	kernel.asm	/^ffff800000109ec8:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffff800000109ecd	kernel.asm	/^ffff800000109ecd:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000109ed0	kernel.asm	/^ffff800000109ed0:	48 b8 72 7b 10 00 00 	movabs $0xffff800000107b72,%rax$/;"	l
ffff800000109ed7	kernel.asm	/^ffff800000109ed7:	80 ff ff $/;"	l
ffff800000109eda	kernel.asm	/^ffff800000109eda:	ff d0                	callq  *%rax$/;"	l
ffff800000109edc	kernel.asm	/^ffff800000109edc:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)$/;"	l
ffff800000109ee3	kernel.asm	/^ffff800000109ee3:	eb 45                	jmp    ffff800000109f2a <tvinit+0x98>$/;"	l
ffff800000109ee5	kernel.asm	/^ffff800000109ee5:	48 b8 80 e6 10 00 00 	movabs $0xffff80000010e680,%rax$/;"	l
ffff800000109eec	kernel.asm	/^ffff800000109eec:	80 ff ff $/;"	l
ffff800000109eef	kernel.asm	/^ffff800000109eef:	8b 55 fc             	mov    -0x4(%rbp),%edx$/;"	l
ffff800000109ef2	kernel.asm	/^ffff800000109ef2:	48 63 d2             	movslq %edx,%rdx$/;"	l
ffff800000109ef5	kernel.asm	/^ffff800000109ef5:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax$/;"	l
ffff800000109ef9	kernel.asm	/^ffff800000109ef9:	48 89 c2             	mov    %rax,%rdx$/;"	l
ffff800000109efc	kernel.asm	/^ffff800000109efc:	8b 75 fc             	mov    -0x4(%rbp),%esi$/;"	l
ffff800000109eff	kernel.asm	/^ffff800000109eff:	48 b8 80 f7 11 00 00 	movabs $0xffff80000011f780,%rax$/;"	l
ffff800000109f06	kernel.asm	/^ffff800000109f06:	80 ff ff $/;"	l
ffff800000109f09	kernel.asm	/^ffff800000109f09:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff800000109f0c	kernel.asm	/^ffff800000109f0c:	41 b8 00 00 00 00    	mov    $0x0,%r8d$/;"	l
ffff800000109f12	kernel.asm	/^ffff800000109f12:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
ffff800000109f17	kernel.asm	/^ffff800000109f17:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000109f1a	kernel.asm	/^ffff800000109f1a:	48 b8 76 9d 10 00 00 	movabs $0xffff800000109d76,%rax$/;"	l
ffff800000109f21	kernel.asm	/^ffff800000109f21:	80 ff ff $/;"	l
ffff800000109f24	kernel.asm	/^ffff800000109f24:	ff d0                	callq  *%rax$/;"	l
ffff800000109f26	kernel.asm	/^ffff800000109f26:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)$/;"	l
ffff800000109f2a	kernel.asm	/^ffff800000109f2a:	81 7d fc ff 00 00 00 	cmpl   $0xff,-0x4(%rbp)$/;"	l
ffff800000109f31	kernel.asm	/^ffff800000109f31:	7e b2                	jle    ffff800000109ee5 <tvinit+0x53>$/;"	l
ffff800000109f33	kernel.asm	/^ffff800000109f33:	48 b8 80 e6 10 00 00 	movabs $0xffff80000010e680,%rax$/;"	l
ffff800000109f3a	kernel.asm	/^ffff800000109f3a:	80 ff ff $/;"	l
ffff800000109f3d	kernel.asm	/^ffff800000109f3d:	48 8b 80 00 02 00 00 	mov    0x200(%rax),%rax$/;"	l
ffff800000109f44	kernel.asm	/^ffff800000109f44:	48 89 c2             	mov    %rax,%rdx$/;"	l
ffff800000109f47	kernel.asm	/^ffff800000109f47:	48 b8 80 f7 11 00 00 	movabs $0xffff80000011f780,%rax$/;"	l
ffff800000109f4e	kernel.asm	/^ffff800000109f4e:	80 ff ff $/;"	l
ffff800000109f51	kernel.asm	/^ffff800000109f51:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff800000109f54	kernel.asm	/^ffff800000109f54:	41 b8 01 00 00 00    	mov    $0x1,%r8d$/;"	l
ffff800000109f5a	kernel.asm	/^ffff800000109f5a:	b9 03 00 00 00       	mov    $0x3,%ecx$/;"	l
ffff800000109f5f	kernel.asm	/^ffff800000109f5f:	be 40 00 00 00       	mov    $0x40,%esi$/;"	l
ffff800000109f64	kernel.asm	/^ffff800000109f64:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff800000109f67	kernel.asm	/^ffff800000109f67:	48 b8 76 9d 10 00 00 	movabs $0xffff800000109d76,%rax$/;"	l
ffff800000109f6e	kernel.asm	/^ffff800000109f6e:	80 ff ff $/;"	l
ffff800000109f71	kernel.asm	/^ffff800000109f71:	ff d0                	callq  *%rax$/;"	l
ffff800000109f73	kernel.asm	/^ffff800000109f73:	90                   	nop$/;"	l
ffff800000109f74	kernel.asm	/^ffff800000109f74:	c9                   	leaveq $/;"	l
ffff800000109f75	kernel.asm	/^ffff800000109f75:	c3                   	retq   $/;"	l
ffff800000109f76	kernel.asm	/^ffff800000109f76 <trap>:$/;"	l
ffff800000109f76	kernel.asm	/^ffff800000109f76:	55                   	push   %rbp$/;"	l
ffff800000109f77	kernel.asm	/^ffff800000109f77:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff800000109f7a	kernel.asm	/^ffff800000109f7a:	41 54                	push   %r12$/;"	l
ffff800000109f7c	kernel.asm	/^ffff800000109f7c:	53                   	push   %rbx$/;"	l
ffff800000109f7d	kernel.asm	/^ffff800000109f7d:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ffff800000109f81	kernel.asm	/^ffff800000109f81:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)$/;"	l
ffff800000109f85	kernel.asm	/^ffff800000109f85:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff800000109f89	kernel.asm	/^ffff800000109f89:	48 8b 40 78          	mov    0x78(%rax),%rax$/;"	l
ffff800000109f8d	kernel.asm	/^ffff800000109f8d:	48 83 f8 40          	cmp    $0x40,%rax$/;"	l
ffff800000109f91	kernel.asm	/^ffff800000109f91:	75 73                	jne    ffff80000010a006 <trap+0x90>$/;"	l
ffff800000109f93	kernel.asm	/^ffff800000109f93:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000109f9a	kernel.asm	/^ffff800000109f9a:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000109f9e	kernel.asm	/^ffff800000109f9e:	8b 40 40             	mov    0x40(%rax),%eax$/;"	l
ffff800000109fa1	kernel.asm	/^ffff800000109fa1:	85 c0                	test   %eax,%eax$/;"	l
ffff800000109fa3	kernel.asm	/^ffff800000109fa3:	74 0c                	je     ffff800000109fb1 <trap+0x3b>$/;"	l
ffff800000109fa5	kernel.asm	/^ffff800000109fa5:	48 b8 57 6b 10 00 00 	movabs $0xffff800000106b57,%rax$/;"	l
ffff800000109fac	kernel.asm	/^ffff800000109fac:	80 ff ff $/;"	l
ffff800000109faf	kernel.asm	/^ffff800000109faf:	ff d0                	callq  *%rax$/;"	l
ffff800000109fb1	kernel.asm	/^ffff800000109fb1:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000109fb8	kernel.asm	/^ffff800000109fb8:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000109fbc	kernel.asm	/^ffff800000109fbc:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx$/;"	l
ffff800000109fc0	kernel.asm	/^ffff800000109fc0:	48 89 50 28          	mov    %rdx,0x28(%rax)$/;"	l
ffff800000109fc4	kernel.asm	/^ffff800000109fc4:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000109fcb	kernel.asm	/^ffff800000109fcb:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000109fcf	kernel.asm	/^ffff800000109fcf:	48 89 45 e8          	mov    %rax,-0x18(%rbp)$/;"	l
ffff800000109fd3	kernel.asm	/^ffff800000109fd3:	48 b8 19 82 10 00 00 	movabs $0xffff800000108219,%rax$/;"	l
ffff800000109fda	kernel.asm	/^ffff800000109fda:	80 ff ff $/;"	l
ffff800000109fdd	kernel.asm	/^ffff800000109fdd:	ff d0                	callq  *%rax$/;"	l
ffff800000109fdf	kernel.asm	/^ffff800000109fdf:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff800000109fe6	kernel.asm	/^ffff800000109fe6:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff800000109fea	kernel.asm	/^ffff800000109fea:	8b 40 40             	mov    0x40(%rax),%eax$/;"	l
ffff800000109fed	kernel.asm	/^ffff800000109fed:	85 c0                	test   %eax,%eax$/;"	l
ffff800000109fef	kernel.asm	/^ffff800000109fef:	0f 84 ba 03 00 00    	je     ffff80000010a3af <trap+0x439>$/;"	l
ffff800000109ff5	kernel.asm	/^ffff800000109ff5:	48 b8 57 6b 10 00 00 	movabs $0xffff800000106b57,%rax$/;"	l
ffff800000109ffc	kernel.asm	/^ffff800000109ffc:	80 ff ff $/;"	l
ffff800000109fff	kernel.asm	/^ffff800000109fff:	ff d0                	callq  *%rax$/;"	l
ffff80000010a001	kernel.asm	/^ffff80000010a001:	e9 a9 03 00 00       	jmpq   ffff80000010a3af <trap+0x439>$/;"	l
ffff80000010a006	kernel.asm	/^ffff80000010a006:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff80000010a00a	kernel.asm	/^ffff80000010a00a:	48 8b 40 78          	mov    0x78(%rax),%rax$/;"	l
ffff80000010a00e	kernel.asm	/^ffff80000010a00e:	48 83 e8 0e          	sub    $0xe,%rax$/;"	l
ffff80000010a012	kernel.asm	/^ffff80000010a012:	48 83 f8 31          	cmp    $0x31,%rax$/;"	l
ffff80000010a016	kernel.asm	/^ffff80000010a016:	0f 87 72 01 00 00    	ja     ffff80000010a18e <trap+0x218>$/;"	l
ffff80000010a01c	kernel.asm	/^ffff80000010a01c:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx$/;"	l
ffff80000010a023	kernel.asm	/^ffff80000010a023:	00 $/;"	l
ffff80000010a024	kernel.asm	/^ffff80000010a024:	48 b8 08 db 10 00 00 	movabs $0xffff80000010db08,%rax$/;"	l
ffff80000010a02b	kernel.asm	/^ffff80000010a02b:	80 ff ff $/;"	l
ffff80000010a02e	kernel.asm	/^ffff80000010a02e:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff80000010a031	kernel.asm	/^ffff80000010a031:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff80000010a034	kernel.asm	/^ffff80000010a034:	ff e0                	jmpq   *%rax$/;"	l
ffff80000010a036	kernel.asm	/^ffff80000010a036:	48 b8 61 9d 10 00 00 	movabs $0xffff800000109d61,%rax$/;"	l
ffff80000010a03d	kernel.asm	/^ffff80000010a03d:	80 ff ff $/;"	l
ffff80000010a040	kernel.asm	/^ffff80000010a040:	ff d0                	callq  *%rax$/;"	l
ffff80000010a042	kernel.asm	/^ffff80000010a042:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010a045	kernel.asm	/^ffff80000010a045:	48 b8 03 9a 10 00 00 	movabs $0xffff800000109a03,%rax$/;"	l
ffff80000010a04c	kernel.asm	/^ffff80000010a04c:	80 ff ff $/;"	l
ffff80000010a04f	kernel.asm	/^ffff80000010a04f:	ff d0                	callq  *%rax$/;"	l
ffff80000010a051	kernel.asm	/^ffff80000010a051:	48 b8 a5 4b 10 00 00 	movabs $0xffff800000104ba5,%rax$/;"	l
ffff80000010a058	kernel.asm	/^ffff80000010a058:	80 ff ff $/;"	l
ffff80000010a05b	kernel.asm	/^ffff80000010a05b:	ff d0                	callq  *%rax$/;"	l
ffff80000010a05d	kernel.asm	/^ffff80000010a05d:	e9 8a 02 00 00       	jmpq   ffff80000010a2ec <trap+0x376>$/;"	l
ffff80000010a062	kernel.asm	/^ffff80000010a062:	48 b8 9d 4a 10 00 00 	movabs $0xffff800000104a9d,%rax$/;"	l
ffff80000010a069	kernel.asm	/^ffff80000010a069:	80 ff ff $/;"	l
ffff80000010a06c	kernel.asm	/^ffff80000010a06c:	ff d0                	callq  *%rax$/;"	l
ffff80000010a06e	kernel.asm	/^ffff80000010a06e:	85 c0                	test   %eax,%eax$/;"	l
ffff80000010a070	kernel.asm	/^ffff80000010a070:	75 5d                	jne    ffff80000010a0cf <trap+0x159>$/;"	l
ffff80000010a072	kernel.asm	/^ffff80000010a072:	48 bf a0 f7 11 00 00 	movabs $0xffff80000011f7a0,%rdi$/;"	l
ffff80000010a079	kernel.asm	/^ffff80000010a079:	80 ff ff $/;"	l
ffff80000010a07c	kernel.asm	/^ffff80000010a07c:	48 b8 d6 77 10 00 00 	movabs $0xffff8000001077d6,%rax$/;"	l
ffff80000010a083	kernel.asm	/^ffff80000010a083:	80 ff ff $/;"	l
ffff80000010a086	kernel.asm	/^ffff80000010a086:	ff d0                	callq  *%rax$/;"	l
ffff80000010a088	kernel.asm	/^ffff80000010a088:	48 b8 08 f8 11 00 00 	movabs $0xffff80000011f808,%rax$/;"	l
ffff80000010a08f	kernel.asm	/^ffff80000010a08f:	80 ff ff $/;"	l
ffff80000010a092	kernel.asm	/^ffff80000010a092:	8b 00                	mov    (%rax),%eax$/;"	l
ffff80000010a094	kernel.asm	/^ffff80000010a094:	8d 50 01             	lea    0x1(%rax),%edx$/;"	l
ffff80000010a097	kernel.asm	/^ffff80000010a097:	48 b8 08 f8 11 00 00 	movabs $0xffff80000011f808,%rax$/;"	l
ffff80000010a09e	kernel.asm	/^ffff80000010a09e:	80 ff ff $/;"	l
ffff80000010a0a1	kernel.asm	/^ffff80000010a0a1:	89 10                	mov    %edx,(%rax)$/;"	l
ffff80000010a0a3	kernel.asm	/^ffff80000010a0a3:	48 bf 08 f8 11 00 00 	movabs $0xffff80000011f808,%rdi$/;"	l
ffff80000010a0aa	kernel.asm	/^ffff80000010a0aa:	80 ff ff $/;"	l
ffff80000010a0ad	kernel.asm	/^ffff80000010a0ad:	48 b8 34 73 10 00 00 	movabs $0xffff800000107334,%rax$/;"	l
ffff80000010a0b4	kernel.asm	/^ffff80000010a0b4:	80 ff ff $/;"	l
ffff80000010a0b7	kernel.asm	/^ffff80000010a0b7:	ff d0                	callq  *%rax$/;"	l
ffff80000010a0b9	kernel.asm	/^ffff80000010a0b9:	48 bf a0 f7 11 00 00 	movabs $0xffff80000011f7a0,%rdi$/;"	l
ffff80000010a0c0	kernel.asm	/^ffff80000010a0c0:	80 ff ff $/;"	l
ffff80000010a0c3	kernel.asm	/^ffff80000010a0c3:	48 b8 6f 78 10 00 00 	movabs $0xffff80000010786f,%rax$/;"	l
ffff80000010a0ca	kernel.asm	/^ffff80000010a0ca:	80 ff ff $/;"	l
ffff80000010a0cd	kernel.asm	/^ffff80000010a0cd:	ff d0                	callq  *%rax$/;"	l
ffff80000010a0cf	kernel.asm	/^ffff80000010a0cf:	48 b8 a5 4b 10 00 00 	movabs $0xffff800000104ba5,%rax$/;"	l
ffff80000010a0d6	kernel.asm	/^ffff80000010a0d6:	80 ff ff $/;"	l
ffff80000010a0d9	kernel.asm	/^ffff80000010a0d9:	ff d0                	callq  *%rax$/;"	l
ffff80000010a0db	kernel.asm	/^ffff80000010a0db:	e9 0c 02 00 00       	jmpq   ffff80000010a2ec <trap+0x376>$/;"	l
ffff80000010a0e0	kernel.asm	/^ffff80000010a0e0:	48 b8 8e 3f 10 00 00 	movabs $0xffff800000103f8e,%rax$/;"	l
ffff80000010a0e7	kernel.asm	/^ffff80000010a0e7:	80 ff ff $/;"	l
ffff80000010a0ea	kernel.asm	/^ffff80000010a0ea:	ff d0                	callq  *%rax$/;"	l
ffff80000010a0ec	kernel.asm	/^ffff80000010a0ec:	48 b8 a5 4b 10 00 00 	movabs $0xffff800000104ba5,%rax$/;"	l
ffff80000010a0f3	kernel.asm	/^ffff80000010a0f3:	80 ff ff $/;"	l
ffff80000010a0f6	kernel.asm	/^ffff80000010a0f6:	ff d0                	callq  *%rax$/;"	l
ffff80000010a0f8	kernel.asm	/^ffff80000010a0f8:	e9 ef 01 00 00       	jmpq   ffff80000010a2ec <trap+0x376>$/;"	l
ffff80000010a0fd	kernel.asm	/^ffff80000010a0fd:	48 b8 5c 48 10 00 00 	movabs $0xffff80000010485c,%rax$/;"	l
ffff80000010a104	kernel.asm	/^ffff80000010a104:	80 ff ff $/;"	l
ffff80000010a107	kernel.asm	/^ffff80000010a107:	ff d0                	callq  *%rax$/;"	l
ffff80000010a109	kernel.asm	/^ffff80000010a109:	48 b8 a5 4b 10 00 00 	movabs $0xffff800000104ba5,%rax$/;"	l
ffff80000010a110	kernel.asm	/^ffff80000010a110:	80 ff ff $/;"	l
ffff80000010a113	kernel.asm	/^ffff80000010a113:	ff d0                	callq  *%rax$/;"	l
ffff80000010a115	kernel.asm	/^ffff80000010a115:	e9 d2 01 00 00       	jmpq   ffff80000010a2ec <trap+0x376>$/;"	l
ffff80000010a11a	kernel.asm	/^ffff80000010a11a:	48 b8 16 a6 10 00 00 	movabs $0xffff80000010a616,%rax$/;"	l
ffff80000010a121	kernel.asm	/^ffff80000010a121:	80 ff ff $/;"	l
ffff80000010a124	kernel.asm	/^ffff80000010a124:	ff d0                	callq  *%rax$/;"	l
ffff80000010a126	kernel.asm	/^ffff80000010a126:	48 b8 a5 4b 10 00 00 	movabs $0xffff800000104ba5,%rax$/;"	l
ffff80000010a12d	kernel.asm	/^ffff80000010a12d:	80 ff ff $/;"	l
ffff80000010a130	kernel.asm	/^ffff80000010a130:	ff d0                	callq  *%rax$/;"	l
ffff80000010a132	kernel.asm	/^ffff80000010a132:	e9 b5 01 00 00       	jmpq   ffff80000010a2ec <trap+0x376>$/;"	l
ffff80000010a137	kernel.asm	/^ffff80000010a137:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff80000010a13b	kernel.asm	/^ffff80000010a13b:	4c 8b a0 88 00 00 00 	mov    0x88(%rax),%r12$/;"	l
ffff80000010a142	kernel.asm	/^ffff80000010a142:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff80000010a146	kernel.asm	/^ffff80000010a146:	48 8b 98 90 00 00 00 	mov    0x90(%rax),%rbx$/;"	l
ffff80000010a14d	kernel.asm	/^ffff80000010a14d:	48 b8 9d 4a 10 00 00 	movabs $0xffff800000104a9d,%rax$/;"	l
ffff80000010a154	kernel.asm	/^ffff80000010a154:	80 ff ff $/;"	l
ffff80000010a157	kernel.asm	/^ffff80000010a157:	ff d0                	callq  *%rax$/;"	l
ffff80000010a159	kernel.asm	/^ffff80000010a159:	4c 89 e1             	mov    %r12,%rcx$/;"	l
ffff80000010a15c	kernel.asm	/^ffff80000010a15c:	48 89 da             	mov    %rbx,%rdx$/;"	l
ffff80000010a15f	kernel.asm	/^ffff80000010a15f:	89 c6                	mov    %eax,%esi$/;"	l
ffff80000010a161	kernel.asm	/^ffff80000010a161:	48 bf 50 da 10 00 00 	movabs $0xffff80000010da50,%rdi$/;"	l
ffff80000010a168	kernel.asm	/^ffff80000010a168:	80 ff ff $/;"	l
ffff80000010a16b	kernel.asm	/^ffff80000010a16b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff80000010a170	kernel.asm	/^ffff80000010a170:	49 b8 ac 07 10 00 00 	movabs $0xffff8000001007ac,%r8$/;"	l
ffff80000010a177	kernel.asm	/^ffff80000010a177:	80 ff ff $/;"	l
ffff80000010a17a	kernel.asm	/^ffff80000010a17a:	41 ff d0             	callq  *%r8$/;"	l
ffff80000010a17d	kernel.asm	/^ffff80000010a17d:	48 b8 a5 4b 10 00 00 	movabs $0xffff800000104ba5,%rax$/;"	l
ffff80000010a184	kernel.asm	/^ffff80000010a184:	80 ff ff $/;"	l
ffff80000010a187	kernel.asm	/^ffff80000010a187:	ff d0                	callq  *%rax$/;"	l
ffff80000010a189	kernel.asm	/^ffff80000010a189:	e9 5e 01 00 00       	jmpq   ffff80000010a2ec <trap+0x376>$/;"	l
ffff80000010a18e	kernel.asm	/^ffff80000010a18e:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff80000010a195	kernel.asm	/^ffff80000010a195:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff80000010a199	kernel.asm	/^ffff80000010a199:	48 85 c0             	test   %rax,%rax$/;"	l
ffff80000010a19c	kernel.asm	/^ffff80000010a19c:	74 17                	je     ffff80000010a1b5 <trap+0x23f>$/;"	l
ffff80000010a19e	kernel.asm	/^ffff80000010a19e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff80000010a1a2	kernel.asm	/^ffff80000010a1a2:	48 8b 80 90 00 00 00 	mov    0x90(%rax),%rax$/;"	l
ffff80000010a1a9	kernel.asm	/^ffff80000010a1a9:	83 e0 03             	and    $0x3,%eax$/;"	l
ffff80000010a1ac	kernel.asm	/^ffff80000010a1ac:	48 85 c0             	test   %rax,%rax$/;"	l
ffff80000010a1af	kernel.asm	/^ffff80000010a1af:	0f 85 96 00 00 00    	jne    ffff80000010a24b <trap+0x2d5>$/;"	l
ffff80000010a1b5	kernel.asm	/^ffff80000010a1b5:	48 b8 61 9d 10 00 00 	movabs $0xffff800000109d61,%rax$/;"	l
ffff80000010a1bc	kernel.asm	/^ffff80000010a1bc:	80 ff ff $/;"	l
ffff80000010a1bf	kernel.asm	/^ffff80000010a1bf:	ff d0                	callq  *%rax$/;"	l
ffff80000010a1c1	kernel.asm	/^ffff80000010a1c1:	49 89 c4             	mov    %rax,%r12$/;"	l
ffff80000010a1c4	kernel.asm	/^ffff80000010a1c4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff80000010a1c8	kernel.asm	/^ffff80000010a1c8:	48 8b 98 88 00 00 00 	mov    0x88(%rax),%rbx$/;"	l
ffff80000010a1cf	kernel.asm	/^ffff80000010a1cf:	48 b8 9d 4a 10 00 00 	movabs $0xffff800000104a9d,%rax$/;"	l
ffff80000010a1d6	kernel.asm	/^ffff80000010a1d6:	80 ff ff $/;"	l
ffff80000010a1d9	kernel.asm	/^ffff80000010a1d9:	ff d0                	callq  *%rax$/;"	l
ffff80000010a1db	kernel.asm	/^ffff80000010a1db:	89 c2                	mov    %eax,%edx$/;"	l
ffff80000010a1dd	kernel.asm	/^ffff80000010a1dd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff80000010a1e1	kernel.asm	/^ffff80000010a1e1:	48 8b 40 78          	mov    0x78(%rax),%rax$/;"	l
ffff80000010a1e5	kernel.asm	/^ffff80000010a1e5:	4d 89 e0             	mov    %r12,%r8$/;"	l
ffff80000010a1e8	kernel.asm	/^ffff80000010a1e8:	48 89 d9             	mov    %rbx,%rcx$/;"	l
ffff80000010a1eb	kernel.asm	/^ffff80000010a1eb:	48 89 c6             	mov    %rax,%rsi$/;"	l
ffff80000010a1ee	kernel.asm	/^ffff80000010a1ee:	48 bf 78 da 10 00 00 	movabs $0xffff80000010da78,%rdi$/;"	l
ffff80000010a1f5	kernel.asm	/^ffff80000010a1f5:	80 ff ff $/;"	l
ffff80000010a1f8	kernel.asm	/^ffff80000010a1f8:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff80000010a1fd	kernel.asm	/^ffff80000010a1fd:	49 b9 ac 07 10 00 00 	movabs $0xffff8000001007ac,%r9$/;"	l
ffff80000010a204	kernel.asm	/^ffff80000010a204:	80 ff ff $/;"	l
ffff80000010a207	kernel.asm	/^ffff80000010a207:	41 ff d1             	callq  *%r9$/;"	l
ffff80000010a20a	kernel.asm	/^ffff80000010a20a:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff80000010a211	kernel.asm	/^ffff80000010a211:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff80000010a215	kernel.asm	/^ffff80000010a215:	8b 40 1c             	mov    0x1c(%rax),%eax$/;"	l
ffff80000010a218	kernel.asm	/^ffff80000010a218:	89 c6                	mov    %eax,%esi$/;"	l
ffff80000010a21a	kernel.asm	/^ffff80000010a21a:	48 bf aa da 10 00 00 	movabs $0xffff80000010daaa,%rdi$/;"	l
ffff80000010a221	kernel.asm	/^ffff80000010a221:	80 ff ff $/;"	l
ffff80000010a224	kernel.asm	/^ffff80000010a224:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff80000010a229	kernel.asm	/^ffff80000010a229:	48 ba ac 07 10 00 00 	movabs $0xffff8000001007ac,%rdx$/;"	l
ffff80000010a230	kernel.asm	/^ffff80000010a230:	80 ff ff $/;"	l
ffff80000010a233	kernel.asm	/^ffff80000010a233:	ff d2                	callq  *%rdx$/;"	l
ffff80000010a235	kernel.asm	/^ffff80000010a235:	48 bf b7 da 10 00 00 	movabs $0xffff80000010dab7,%rdi$/;"	l
ffff80000010a23c	kernel.asm	/^ffff80000010a23c:	80 ff ff $/;"	l
ffff80000010a23f	kernel.asm	/^ffff80000010a23f:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff80000010a246	kernel.asm	/^ffff80000010a246:	80 ff ff $/;"	l
ffff80000010a249	kernel.asm	/^ffff80000010a249:	ff d0                	callq  *%rax$/;"	l
ffff80000010a24b	kernel.asm	/^ffff80000010a24b:	48 b8 61 9d 10 00 00 	movabs $0xffff800000109d61,%rax$/;"	l
ffff80000010a252	kernel.asm	/^ffff80000010a252:	80 ff ff $/;"	l
ffff80000010a255	kernel.asm	/^ffff80000010a255:	ff d0                	callq  *%rax$/;"	l
ffff80000010a257	kernel.asm	/^ffff80000010a257:	49 89 c4             	mov    %rax,%r12$/;"	l
ffff80000010a25a	kernel.asm	/^ffff80000010a25a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff80000010a25e	kernel.asm	/^ffff80000010a25e:	48 8b 98 88 00 00 00 	mov    0x88(%rax),%rbx$/;"	l
ffff80000010a265	kernel.asm	/^ffff80000010a265:	48 b8 9d 4a 10 00 00 	movabs $0xffff800000104a9d,%rax$/;"	l
ffff80000010a26c	kernel.asm	/^ffff80000010a26c:	80 ff ff $/;"	l
ffff80000010a26f	kernel.asm	/^ffff80000010a26f:	ff d0                	callq  *%rax$/;"	l
ffff80000010a271	kernel.asm	/^ffff80000010a271:	89 c7                	mov    %eax,%edi$/;"	l
ffff80000010a273	kernel.asm	/^ffff80000010a273:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff80000010a277	kernel.asm	/^ffff80000010a277:	48 8b 88 80 00 00 00 	mov    0x80(%rax),%rcx$/;"	l
ffff80000010a27e	kernel.asm	/^ffff80000010a27e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff80000010a282	kernel.asm	/^ffff80000010a282:	48 8b 50 78          	mov    0x78(%rax),%rdx$/;"	l
ffff80000010a286	kernel.asm	/^ffff80000010a286:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff80000010a28d	kernel.asm	/^ffff80000010a28d:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff80000010a291	kernel.asm	/^ffff80000010a291:	48 8d b0 d0 00 00 00 	lea    0xd0(%rax),%rsi$/;"	l
ffff80000010a298	kernel.asm	/^ffff80000010a298:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff80000010a29f	kernel.asm	/^ffff80000010a29f:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff80000010a2a3	kernel.asm	/^ffff80000010a2a3:	8b 40 1c             	mov    0x1c(%rax),%eax$/;"	l
ffff80000010a2a6	kernel.asm	/^ffff80000010a2a6:	41 54                	push   %r12$/;"	l
ffff80000010a2a8	kernel.asm	/^ffff80000010a2a8:	53                   	push   %rbx$/;"	l
ffff80000010a2a9	kernel.asm	/^ffff80000010a2a9:	41 89 f9             	mov    %edi,%r9d$/;"	l
ffff80000010a2ac	kernel.asm	/^ffff80000010a2ac:	49 89 c8             	mov    %rcx,%r8$/;"	l
ffff80000010a2af	kernel.asm	/^ffff80000010a2af:	48 89 d1             	mov    %rdx,%rcx$/;"	l
ffff80000010a2b2	kernel.asm	/^ffff80000010a2b2:	48 89 f2             	mov    %rsi,%rdx$/;"	l
ffff80000010a2b5	kernel.asm	/^ffff80000010a2b5:	89 c6                	mov    %eax,%esi$/;"	l
ffff80000010a2b7	kernel.asm	/^ffff80000010a2b7:	48 bf c0 da 10 00 00 	movabs $0xffff80000010dac0,%rdi$/;"	l
ffff80000010a2be	kernel.asm	/^ffff80000010a2be:	80 ff ff $/;"	l
ffff80000010a2c1	kernel.asm	/^ffff80000010a2c1:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff80000010a2c6	kernel.asm	/^ffff80000010a2c6:	49 ba ac 07 10 00 00 	movabs $0xffff8000001007ac,%r10$/;"	l
ffff80000010a2cd	kernel.asm	/^ffff80000010a2cd:	80 ff ff $/;"	l
ffff80000010a2d0	kernel.asm	/^ffff80000010a2d0:	41 ff d2             	callq  *%r10$/;"	l
ffff80000010a2d3	kernel.asm	/^ffff80000010a2d3:	48 83 c4 10          	add    $0x10,%rsp$/;"	l
ffff80000010a2d7	kernel.asm	/^ffff80000010a2d7:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff80000010a2de	kernel.asm	/^ffff80000010a2de:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff80000010a2e2	kernel.asm	/^ffff80000010a2e2:	c7 40 40 01 00 00 00 	movl   $0x1,0x40(%rax)$/;"	l
ffff80000010a2e9	kernel.asm	/^ffff80000010a2e9:	eb 01                	jmp    ffff80000010a2ec <trap+0x376>$/;"	l
ffff80000010a2eb	kernel.asm	/^ffff80000010a2eb:	90                   	nop$/;"	l
ffff80000010a2ec	kernel.asm	/^ffff80000010a2ec:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff80000010a2f3	kernel.asm	/^ffff80000010a2f3:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff80000010a2f7	kernel.asm	/^ffff80000010a2f7:	48 85 c0             	test   %rax,%rax$/;"	l
ffff80000010a2fa	kernel.asm	/^ffff80000010a2fa:	74 32                	je     ffff80000010a32e <trap+0x3b8>$/;"	l
ffff80000010a2fc	kernel.asm	/^ffff80000010a2fc:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff80000010a303	kernel.asm	/^ffff80000010a303:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff80000010a307	kernel.asm	/^ffff80000010a307:	8b 40 40             	mov    0x40(%rax),%eax$/;"	l
ffff80000010a30a	kernel.asm	/^ffff80000010a30a:	85 c0                	test   %eax,%eax$/;"	l
ffff80000010a30c	kernel.asm	/^ffff80000010a30c:	74 20                	je     ffff80000010a32e <trap+0x3b8>$/;"	l
ffff80000010a30e	kernel.asm	/^ffff80000010a30e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff80000010a312	kernel.asm	/^ffff80000010a312:	48 8b 80 90 00 00 00 	mov    0x90(%rax),%rax$/;"	l
ffff80000010a319	kernel.asm	/^ffff80000010a319:	83 e0 03             	and    $0x3,%eax$/;"	l
ffff80000010a31c	kernel.asm	/^ffff80000010a31c:	48 83 f8 03          	cmp    $0x3,%rax$/;"	l
ffff80000010a320	kernel.asm	/^ffff80000010a320:	75 0c                	jne    ffff80000010a32e <trap+0x3b8>$/;"	l
ffff80000010a322	kernel.asm	/^ffff80000010a322:	48 b8 57 6b 10 00 00 	movabs $0xffff800000106b57,%rax$/;"	l
ffff80000010a329	kernel.asm	/^ffff80000010a329:	80 ff ff $/;"	l
ffff80000010a32c	kernel.asm	/^ffff80000010a32c:	ff d0                	callq  *%rax$/;"	l
ffff80000010a32e	kernel.asm	/^ffff80000010a32e:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff80000010a335	kernel.asm	/^ffff80000010a335:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff80000010a339	kernel.asm	/^ffff80000010a339:	48 85 c0             	test   %rax,%rax$/;"	l
ffff80000010a33c	kernel.asm	/^ffff80000010a33c:	74 2d                	je     ffff80000010a36b <trap+0x3f5>$/;"	l
ffff80000010a33e	kernel.asm	/^ffff80000010a33e:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff80000010a345	kernel.asm	/^ffff80000010a345:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff80000010a349	kernel.asm	/^ffff80000010a349:	8b 40 18             	mov    0x18(%rax),%eax$/;"	l
ffff80000010a34c	kernel.asm	/^ffff80000010a34c:	83 f8 04             	cmp    $0x4,%eax$/;"	l
ffff80000010a34f	kernel.asm	/^ffff80000010a34f:	75 1a                	jne    ffff80000010a36b <trap+0x3f5>$/;"	l
ffff80000010a351	kernel.asm	/^ffff80000010a351:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff80000010a355	kernel.asm	/^ffff80000010a355:	48 8b 40 78          	mov    0x78(%rax),%rax$/;"	l
ffff80000010a359	kernel.asm	/^ffff80000010a359:	48 83 f8 20          	cmp    $0x20,%rax$/;"	l
ffff80000010a35d	kernel.asm	/^ffff80000010a35d:	75 0c                	jne    ffff80000010a36b <trap+0x3f5>$/;"	l
ffff80000010a35f	kernel.asm	/^ffff80000010a35f:	48 b8 09 71 10 00 00 	movabs $0xffff800000107109,%rax$/;"	l
ffff80000010a366	kernel.asm	/^ffff80000010a366:	80 ff ff $/;"	l
ffff80000010a369	kernel.asm	/^ffff80000010a369:	ff d0                	callq  *%rax$/;"	l
ffff80000010a36b	kernel.asm	/^ffff80000010a36b:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff80000010a372	kernel.asm	/^ffff80000010a372:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff80000010a376	kernel.asm	/^ffff80000010a376:	48 85 c0             	test   %rax,%rax$/;"	l
ffff80000010a379	kernel.asm	/^ffff80000010a379:	74 35                	je     ffff80000010a3b0 <trap+0x43a>$/;"	l
ffff80000010a37b	kernel.asm	/^ffff80000010a37b:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax$/;"	l
ffff80000010a382	kernel.asm	/^ffff80000010a382:	64 48 8b 00          	mov    %fs:(%rax),%rax$/;"	l
ffff80000010a386	kernel.asm	/^ffff80000010a386:	8b 40 40             	mov    0x40(%rax),%eax$/;"	l
ffff80000010a389	kernel.asm	/^ffff80000010a389:	85 c0                	test   %eax,%eax$/;"	l
ffff80000010a38b	kernel.asm	/^ffff80000010a38b:	74 23                	je     ffff80000010a3b0 <trap+0x43a>$/;"	l
ffff80000010a38d	kernel.asm	/^ffff80000010a38d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff80000010a391	kernel.asm	/^ffff80000010a391:	48 8b 80 90 00 00 00 	mov    0x90(%rax),%rax$/;"	l
ffff80000010a398	kernel.asm	/^ffff80000010a398:	83 e0 03             	and    $0x3,%eax$/;"	l
ffff80000010a39b	kernel.asm	/^ffff80000010a39b:	48 83 f8 03          	cmp    $0x3,%rax$/;"	l
ffff80000010a39f	kernel.asm	/^ffff80000010a39f:	75 0f                	jne    ffff80000010a3b0 <trap+0x43a>$/;"	l
ffff80000010a3a1	kernel.asm	/^ffff80000010a3a1:	48 b8 57 6b 10 00 00 	movabs $0xffff800000106b57,%rax$/;"	l
ffff80000010a3a8	kernel.asm	/^ffff80000010a3a8:	80 ff ff $/;"	l
ffff80000010a3ab	kernel.asm	/^ffff80000010a3ab:	ff d0                	callq  *%rax$/;"	l
ffff80000010a3ad	kernel.asm	/^ffff80000010a3ad:	eb 01                	jmp    ffff80000010a3b0 <trap+0x43a>$/;"	l
ffff80000010a3af	kernel.asm	/^ffff80000010a3af:	90                   	nop$/;"	l
ffff80000010a3b0	kernel.asm	/^ffff80000010a3b0:	48 8d 65 f0          	lea    -0x10(%rbp),%rsp$/;"	l
ffff80000010a3b4	kernel.asm	/^ffff80000010a3b4:	5b                   	pop    %rbx$/;"	l
ffff80000010a3b5	kernel.asm	/^ffff80000010a3b5:	41 5c                	pop    %r12$/;"	l
ffff80000010a3b7	kernel.asm	/^ffff80000010a3b7:	5d                   	pop    %rbp$/;"	l
ffff80000010a3b8	kernel.asm	/^ffff80000010a3b8:	c3                   	retq   $/;"	l
ffff80000010a3b9	kernel.asm	/^ffff80000010a3b9 <inb>:$/;"	l
ffff80000010a3b9	kernel.asm	/^ffff80000010a3b9:	55                   	push   %rbp$/;"	l
ffff80000010a3ba	kernel.asm	/^ffff80000010a3ba:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010a3bd	kernel.asm	/^ffff80000010a3bd:	48 83 ec 18          	sub    $0x18,%rsp$/;"	l
ffff80000010a3c1	kernel.asm	/^ffff80000010a3c1:	89 f8                	mov    %edi,%eax$/;"	l
ffff80000010a3c3	kernel.asm	/^ffff80000010a3c3:	66 89 45 ec          	mov    %ax,-0x14(%rbp)$/;"	l
ffff80000010a3c7	kernel.asm	/^ffff80000010a3c7:	0f b7 45 ec          	movzwl -0x14(%rbp),%eax$/;"	l
ffff80000010a3cb	kernel.asm	/^ffff80000010a3cb:	89 c2                	mov    %eax,%edx$/;"	l
ffff80000010a3cd	kernel.asm	/^ffff80000010a3cd:	ec                   	in     (%dx),%al$/;"	l
ffff80000010a3ce	kernel.asm	/^ffff80000010a3ce:	88 45 ff             	mov    %al,-0x1(%rbp)$/;"	l
ffff80000010a3d1	kernel.asm	/^ffff80000010a3d1:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax$/;"	l
ffff80000010a3d5	kernel.asm	/^ffff80000010a3d5:	c9                   	leaveq $/;"	l
ffff80000010a3d6	kernel.asm	/^ffff80000010a3d6:	c3                   	retq   $/;"	l
ffff80000010a3d7	kernel.asm	/^ffff80000010a3d7 <outb>:$/;"	l
ffff80000010a3d7	kernel.asm	/^ffff80000010a3d7:	55                   	push   %rbp$/;"	l
ffff80000010a3d8	kernel.asm	/^ffff80000010a3d8:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010a3db	kernel.asm	/^ffff80000010a3db:	48 83 ec 08          	sub    $0x8,%rsp$/;"	l
ffff80000010a3df	kernel.asm	/^ffff80000010a3df:	89 fa                	mov    %edi,%edx$/;"	l
ffff80000010a3e1	kernel.asm	/^ffff80000010a3e1:	89 f0                	mov    %esi,%eax$/;"	l
ffff80000010a3e3	kernel.asm	/^ffff80000010a3e3:	66 89 55 fc          	mov    %dx,-0x4(%rbp)$/;"	l
ffff80000010a3e7	kernel.asm	/^ffff80000010a3e7:	88 45 f8             	mov    %al,-0x8(%rbp)$/;"	l
ffff80000010a3ea	kernel.asm	/^ffff80000010a3ea:	0f b6 45 f8          	movzbl -0x8(%rbp),%eax$/;"	l
ffff80000010a3ee	kernel.asm	/^ffff80000010a3ee:	0f b7 55 fc          	movzwl -0x4(%rbp),%edx$/;"	l
ffff80000010a3f2	kernel.asm	/^ffff80000010a3f2:	ee                   	out    %al,(%dx)$/;"	l
ffff80000010a3f3	kernel.asm	/^ffff80000010a3f3:	90                   	nop$/;"	l
ffff80000010a3f4	kernel.asm	/^ffff80000010a3f4:	c9                   	leaveq $/;"	l
ffff80000010a3f5	kernel.asm	/^ffff80000010a3f5:	c3                   	retq   $/;"	l
ffff80000010a3f6	kernel.asm	/^ffff80000010a3f6 <uartearlyinit>:$/;"	l
ffff80000010a3f6	kernel.asm	/^ffff80000010a3f6:	55                   	push   %rbp$/;"	l
ffff80000010a3f7	kernel.asm	/^ffff80000010a3f7:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010a3fa	kernel.asm	/^ffff80000010a3fa:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff80000010a3fe	kernel.asm	/^ffff80000010a3fe:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffff80000010a403	kernel.asm	/^ffff80000010a403:	bf fa 03 00 00       	mov    $0x3fa,%edi$/;"	l
ffff80000010a408	kernel.asm	/^ffff80000010a408:	48 b8 d7 a3 10 00 00 	movabs $0xffff80000010a3d7,%rax$/;"	l
ffff80000010a40f	kernel.asm	/^ffff80000010a40f:	80 ff ff $/;"	l
ffff80000010a412	kernel.asm	/^ffff80000010a412:	ff d0                	callq  *%rax$/;"	l
ffff80000010a414	kernel.asm	/^ffff80000010a414:	be 80 00 00 00       	mov    $0x80,%esi$/;"	l
ffff80000010a419	kernel.asm	/^ffff80000010a419:	bf fb 03 00 00       	mov    $0x3fb,%edi$/;"	l
ffff80000010a41e	kernel.asm	/^ffff80000010a41e:	48 b8 d7 a3 10 00 00 	movabs $0xffff80000010a3d7,%rax$/;"	l
ffff80000010a425	kernel.asm	/^ffff80000010a425:	80 ff ff $/;"	l
ffff80000010a428	kernel.asm	/^ffff80000010a428:	ff d0                	callq  *%rax$/;"	l
ffff80000010a42a	kernel.asm	/^ffff80000010a42a:	be 0c 00 00 00       	mov    $0xc,%esi$/;"	l
ffff80000010a42f	kernel.asm	/^ffff80000010a42f:	bf f8 03 00 00       	mov    $0x3f8,%edi$/;"	l
ffff80000010a434	kernel.asm	/^ffff80000010a434:	48 b8 d7 a3 10 00 00 	movabs $0xffff80000010a3d7,%rax$/;"	l
ffff80000010a43b	kernel.asm	/^ffff80000010a43b:	80 ff ff $/;"	l
ffff80000010a43e	kernel.asm	/^ffff80000010a43e:	ff d0                	callq  *%rax$/;"	l
ffff80000010a440	kernel.asm	/^ffff80000010a440:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffff80000010a445	kernel.asm	/^ffff80000010a445:	bf f9 03 00 00       	mov    $0x3f9,%edi$/;"	l
ffff80000010a44a	kernel.asm	/^ffff80000010a44a:	48 b8 d7 a3 10 00 00 	movabs $0xffff80000010a3d7,%rax$/;"	l
ffff80000010a451	kernel.asm	/^ffff80000010a451:	80 ff ff $/;"	l
ffff80000010a454	kernel.asm	/^ffff80000010a454:	ff d0                	callq  *%rax$/;"	l
ffff80000010a456	kernel.asm	/^ffff80000010a456:	be 03 00 00 00       	mov    $0x3,%esi$/;"	l
ffff80000010a45b	kernel.asm	/^ffff80000010a45b:	bf fb 03 00 00       	mov    $0x3fb,%edi$/;"	l
ffff80000010a460	kernel.asm	/^ffff80000010a460:	48 b8 d7 a3 10 00 00 	movabs $0xffff80000010a3d7,%rax$/;"	l
ffff80000010a467	kernel.asm	/^ffff80000010a467:	80 ff ff $/;"	l
ffff80000010a46a	kernel.asm	/^ffff80000010a46a:	ff d0                	callq  *%rax$/;"	l
ffff80000010a46c	kernel.asm	/^ffff80000010a46c:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffff80000010a471	kernel.asm	/^ffff80000010a471:	bf fc 03 00 00       	mov    $0x3fc,%edi$/;"	l
ffff80000010a476	kernel.asm	/^ffff80000010a476:	48 b8 d7 a3 10 00 00 	movabs $0xffff80000010a3d7,%rax$/;"	l
ffff80000010a47d	kernel.asm	/^ffff80000010a47d:	80 ff ff $/;"	l
ffff80000010a480	kernel.asm	/^ffff80000010a480:	ff d0                	callq  *%rax$/;"	l
ffff80000010a482	kernel.asm	/^ffff80000010a482:	be 01 00 00 00       	mov    $0x1,%esi$/;"	l
ffff80000010a487	kernel.asm	/^ffff80000010a487:	bf f9 03 00 00       	mov    $0x3f9,%edi$/;"	l
ffff80000010a48c	kernel.asm	/^ffff80000010a48c:	48 b8 d7 a3 10 00 00 	movabs $0xffff80000010a3d7,%rax$/;"	l
ffff80000010a493	kernel.asm	/^ffff80000010a493:	80 ff ff $/;"	l
ffff80000010a496	kernel.asm	/^ffff80000010a496:	ff d0                	callq  *%rax$/;"	l
ffff80000010a498	kernel.asm	/^ffff80000010a498:	bf fd 03 00 00       	mov    $0x3fd,%edi$/;"	l
ffff80000010a49d	kernel.asm	/^ffff80000010a49d:	48 b8 b9 a3 10 00 00 	movabs $0xffff80000010a3b9,%rax$/;"	l
ffff80000010a4a4	kernel.asm	/^ffff80000010a4a4:	80 ff ff $/;"	l
ffff80000010a4a7	kernel.asm	/^ffff80000010a4a7:	ff d0                	callq  *%rax$/;"	l
ffff80000010a4a9	kernel.asm	/^ffff80000010a4a9:	3c ff                	cmp    $0xff,%al$/;"	l
ffff80000010a4ab	kernel.asm	/^ffff80000010a4ab:	74 4a                	je     ffff80000010a4f7 <uartearlyinit+0x101>$/;"	l
ffff80000010a4ad	kernel.asm	/^ffff80000010a4ad:	48 b8 0c f8 11 00 00 	movabs $0xffff80000011f80c,%rax$/;"	l
ffff80000010a4b4	kernel.asm	/^ffff80000010a4b4:	80 ff ff $/;"	l
ffff80000010a4b7	kernel.asm	/^ffff80000010a4b7:	c7 00 01 00 00 00    	movl   $0x1,(%rax)$/;"	l
ffff80000010a4bd	kernel.asm	/^ffff80000010a4bd:	48 b8 98 dc 10 00 00 	movabs $0xffff80000010dc98,%rax$/;"	l
ffff80000010a4c4	kernel.asm	/^ffff80000010a4c4:	80 ff ff $/;"	l
ffff80000010a4c7	kernel.asm	/^ffff80000010a4c7:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff80000010a4cb	kernel.asm	/^ffff80000010a4cb:	eb 1d                	jmp    ffff80000010a4ea <uartearlyinit+0xf4>$/;"	l
ffff80000010a4cd	kernel.asm	/^ffff80000010a4cd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010a4d1	kernel.asm	/^ffff80000010a4d1:	0f b6 00             	movzbl (%rax),%eax$/;"	l
ffff80000010a4d4	kernel.asm	/^ffff80000010a4d4:	0f be c0             	movsbl %al,%eax$/;"	l
ffff80000010a4d7	kernel.asm	/^ffff80000010a4d7:	89 c7                	mov    %eax,%edi$/;"	l
ffff80000010a4d9	kernel.asm	/^ffff80000010a4d9:	48 b8 4b a5 10 00 00 	movabs $0xffff80000010a54b,%rax$/;"	l
ffff80000010a4e0	kernel.asm	/^ffff80000010a4e0:	80 ff ff $/;"	l
ffff80000010a4e3	kernel.asm	/^ffff80000010a4e3:	ff d0                	callq  *%rax$/;"	l
ffff80000010a4e5	kernel.asm	/^ffff80000010a4e5:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)$/;"	l
ffff80000010a4ea	kernel.asm	/^ffff80000010a4ea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010a4ee	kernel.asm	/^ffff80000010a4ee:	0f b6 00             	movzbl (%rax),%eax$/;"	l
ffff80000010a4f1	kernel.asm	/^ffff80000010a4f1:	84 c0                	test   %al,%al$/;"	l
ffff80000010a4f3	kernel.asm	/^ffff80000010a4f3:	75 d8                	jne    ffff80000010a4cd <uartearlyinit+0xd7>$/;"	l
ffff80000010a4f5	kernel.asm	/^ffff80000010a4f5:	eb 01                	jmp    ffff80000010a4f8 <uartearlyinit+0x102>$/;"	l
ffff80000010a4f7	kernel.asm	/^ffff80000010a4f7:	90                   	nop$/;"	l
ffff80000010a4f8	kernel.asm	/^ffff80000010a4f8:	c9                   	leaveq $/;"	l
ffff80000010a4f9	kernel.asm	/^ffff80000010a4f9:	c3                   	retq   $/;"	l
ffff80000010a4fa	kernel.asm	/^ffff80000010a4fa <uartinit>:$/;"	l
ffff80000010a4fa	kernel.asm	/^ffff80000010a4fa:	55                   	push   %rbp$/;"	l
ffff80000010a4fb	kernel.asm	/^ffff80000010a4fb:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010a4fe	kernel.asm	/^ffff80000010a4fe:	48 b8 0c f8 11 00 00 	movabs $0xffff80000011f80c,%rax$/;"	l
ffff80000010a505	kernel.asm	/^ffff80000010a505:	80 ff ff $/;"	l
ffff80000010a508	kernel.asm	/^ffff80000010a508:	8b 00                	mov    (%rax),%eax$/;"	l
ffff80000010a50a	kernel.asm	/^ffff80000010a50a:	85 c0                	test   %eax,%eax$/;"	l
ffff80000010a50c	kernel.asm	/^ffff80000010a50c:	74 3a                	je     ffff80000010a548 <uartinit+0x4e>$/;"	l
ffff80000010a50e	kernel.asm	/^ffff80000010a50e:	bf fa 03 00 00       	mov    $0x3fa,%edi$/;"	l
ffff80000010a513	kernel.asm	/^ffff80000010a513:	48 b8 b9 a3 10 00 00 	movabs $0xffff80000010a3b9,%rax$/;"	l
ffff80000010a51a	kernel.asm	/^ffff80000010a51a:	80 ff ff $/;"	l
ffff80000010a51d	kernel.asm	/^ffff80000010a51d:	ff d0                	callq  *%rax$/;"	l
ffff80000010a51f	kernel.asm	/^ffff80000010a51f:	bf f8 03 00 00       	mov    $0x3f8,%edi$/;"	l
ffff80000010a524	kernel.asm	/^ffff80000010a524:	48 b8 b9 a3 10 00 00 	movabs $0xffff80000010a3b9,%rax$/;"	l
ffff80000010a52b	kernel.asm	/^ffff80000010a52b:	80 ff ff $/;"	l
ffff80000010a52e	kernel.asm	/^ffff80000010a52e:	ff d0                	callq  *%rax$/;"	l
ffff80000010a530	kernel.asm	/^ffff80000010a530:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffff80000010a535	kernel.asm	/^ffff80000010a535:	bf 04 00 00 00       	mov    $0x4,%edi$/;"	l
ffff80000010a53a	kernel.asm	/^ffff80000010a53a:	48 b8 54 43 10 00 00 	movabs $0xffff800000104354,%rax$/;"	l
ffff80000010a541	kernel.asm	/^ffff80000010a541:	80 ff ff $/;"	l
ffff80000010a544	kernel.asm	/^ffff80000010a544:	ff d0                	callq  *%rax$/;"	l
ffff80000010a546	kernel.asm	/^ffff80000010a546:	eb 01                	jmp    ffff80000010a549 <uartinit+0x4f>$/;"	l
ffff80000010a548	kernel.asm	/^ffff80000010a548:	90                   	nop$/;"	l
ffff80000010a549	kernel.asm	/^ffff80000010a549:	5d                   	pop    %rbp$/;"	l
ffff80000010a54a	kernel.asm	/^ffff80000010a54a:	c3                   	retq   $/;"	l
ffff80000010a54b	kernel.asm	/^ffff80000010a54b <uartputc>:$/;"	l
ffff80000010a54b	kernel.asm	/^ffff80000010a54b:	55                   	push   %rbp$/;"	l
ffff80000010a54c	kernel.asm	/^ffff80000010a54c:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010a54f	kernel.asm	/^ffff80000010a54f:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ffff80000010a553	kernel.asm	/^ffff80000010a553:	89 7d ec             	mov    %edi,-0x14(%rbp)$/;"	l
ffff80000010a556	kernel.asm	/^ffff80000010a556:	48 b8 0c f8 11 00 00 	movabs $0xffff80000011f80c,%rax$/;"	l
ffff80000010a55d	kernel.asm	/^ffff80000010a55d:	80 ff ff $/;"	l
ffff80000010a560	kernel.asm	/^ffff80000010a560:	8b 00                	mov    (%rax),%eax$/;"	l
ffff80000010a562	kernel.asm	/^ffff80000010a562:	85 c0                	test   %eax,%eax$/;"	l
ffff80000010a564	kernel.asm	/^ffff80000010a564:	74 5a                	je     ffff80000010a5c0 <uartputc+0x75>$/;"	l
ffff80000010a566	kernel.asm	/^ffff80000010a566:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)$/;"	l
ffff80000010a56d	kernel.asm	/^ffff80000010a56d:	eb 15                	jmp    ffff80000010a584 <uartputc+0x39>$/;"	l
ffff80000010a56f	kernel.asm	/^ffff80000010a56f:	bf 0a 00 00 00       	mov    $0xa,%edi$/;"	l
ffff80000010a574	kernel.asm	/^ffff80000010a574:	48 b8 d4 4b 10 00 00 	movabs $0xffff800000104bd4,%rax$/;"	l
ffff80000010a57b	kernel.asm	/^ffff80000010a57b:	80 ff ff $/;"	l
ffff80000010a57e	kernel.asm	/^ffff80000010a57e:	ff d0                	callq  *%rax$/;"	l
ffff80000010a580	kernel.asm	/^ffff80000010a580:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)$/;"	l
ffff80000010a584	kernel.asm	/^ffff80000010a584:	83 7d fc 7f          	cmpl   $0x7f,-0x4(%rbp)$/;"	l
ffff80000010a588	kernel.asm	/^ffff80000010a588:	7f 1b                	jg     ffff80000010a5a5 <uartputc+0x5a>$/;"	l
ffff80000010a58a	kernel.asm	/^ffff80000010a58a:	bf fd 03 00 00       	mov    $0x3fd,%edi$/;"	l
ffff80000010a58f	kernel.asm	/^ffff80000010a58f:	48 b8 b9 a3 10 00 00 	movabs $0xffff80000010a3b9,%rax$/;"	l
ffff80000010a596	kernel.asm	/^ffff80000010a596:	80 ff ff $/;"	l
ffff80000010a599	kernel.asm	/^ffff80000010a599:	ff d0                	callq  *%rax$/;"	l
ffff80000010a59b	kernel.asm	/^ffff80000010a59b:	0f b6 c0             	movzbl %al,%eax$/;"	l
ffff80000010a59e	kernel.asm	/^ffff80000010a59e:	83 e0 20             	and    $0x20,%eax$/;"	l
ffff80000010a5a1	kernel.asm	/^ffff80000010a5a1:	85 c0                	test   %eax,%eax$/;"	l
ffff80000010a5a3	kernel.asm	/^ffff80000010a5a3:	74 ca                	je     ffff80000010a56f <uartputc+0x24>$/;"	l
ffff80000010a5a5	kernel.asm	/^ffff80000010a5a5:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
ffff80000010a5a8	kernel.asm	/^ffff80000010a5a8:	0f b6 c0             	movzbl %al,%eax$/;"	l
ffff80000010a5ab	kernel.asm	/^ffff80000010a5ab:	89 c6                	mov    %eax,%esi$/;"	l
ffff80000010a5ad	kernel.asm	/^ffff80000010a5ad:	bf f8 03 00 00       	mov    $0x3f8,%edi$/;"	l
ffff80000010a5b2	kernel.asm	/^ffff80000010a5b2:	48 b8 d7 a3 10 00 00 	movabs $0xffff80000010a3d7,%rax$/;"	l
ffff80000010a5b9	kernel.asm	/^ffff80000010a5b9:	80 ff ff $/;"	l
ffff80000010a5bc	kernel.asm	/^ffff80000010a5bc:	ff d0                	callq  *%rax$/;"	l
ffff80000010a5be	kernel.asm	/^ffff80000010a5be:	eb 01                	jmp    ffff80000010a5c1 <uartputc+0x76>$/;"	l
ffff80000010a5c0	kernel.asm	/^ffff80000010a5c0:	90                   	nop$/;"	l
ffff80000010a5c1	kernel.asm	/^ffff80000010a5c1:	c9                   	leaveq $/;"	l
ffff80000010a5c2	kernel.asm	/^ffff80000010a5c2:	c3                   	retq   $/;"	l
ffff80000010a5c3	kernel.asm	/^ffff80000010a5c3 <uartgetc>:$/;"	l
ffff80000010a5c3	kernel.asm	/^ffff80000010a5c3:	55                   	push   %rbp$/;"	l
ffff80000010a5c4	kernel.asm	/^ffff80000010a5c4:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010a5c7	kernel.asm	/^ffff80000010a5c7:	48 b8 0c f8 11 00 00 	movabs $0xffff80000011f80c,%rax$/;"	l
ffff80000010a5ce	kernel.asm	/^ffff80000010a5ce:	80 ff ff $/;"	l
ffff80000010a5d1	kernel.asm	/^ffff80000010a5d1:	8b 00                	mov    (%rax),%eax$/;"	l
ffff80000010a5d3	kernel.asm	/^ffff80000010a5d3:	85 c0                	test   %eax,%eax$/;"	l
ffff80000010a5d5	kernel.asm	/^ffff80000010a5d5:	75 07                	jne    ffff80000010a5de <uartgetc+0x1b>$/;"	l
ffff80000010a5d7	kernel.asm	/^ffff80000010a5d7:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff80000010a5dc	kernel.asm	/^ffff80000010a5dc:	eb 36                	jmp    ffff80000010a614 <uartgetc+0x51>$/;"	l
ffff80000010a5de	kernel.asm	/^ffff80000010a5de:	bf fd 03 00 00       	mov    $0x3fd,%edi$/;"	l
ffff80000010a5e3	kernel.asm	/^ffff80000010a5e3:	48 b8 b9 a3 10 00 00 	movabs $0xffff80000010a3b9,%rax$/;"	l
ffff80000010a5ea	kernel.asm	/^ffff80000010a5ea:	80 ff ff $/;"	l
ffff80000010a5ed	kernel.asm	/^ffff80000010a5ed:	ff d0                	callq  *%rax$/;"	l
ffff80000010a5ef	kernel.asm	/^ffff80000010a5ef:	0f b6 c0             	movzbl %al,%eax$/;"	l
ffff80000010a5f2	kernel.asm	/^ffff80000010a5f2:	83 e0 01             	and    $0x1,%eax$/;"	l
ffff80000010a5f5	kernel.asm	/^ffff80000010a5f5:	85 c0                	test   %eax,%eax$/;"	l
ffff80000010a5f7	kernel.asm	/^ffff80000010a5f7:	75 07                	jne    ffff80000010a600 <uartgetc+0x3d>$/;"	l
ffff80000010a5f9	kernel.asm	/^ffff80000010a5f9:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff80000010a5fe	kernel.asm	/^ffff80000010a5fe:	eb 14                	jmp    ffff80000010a614 <uartgetc+0x51>$/;"	l
ffff80000010a600	kernel.asm	/^ffff80000010a600:	bf f8 03 00 00       	mov    $0x3f8,%edi$/;"	l
ffff80000010a605	kernel.asm	/^ffff80000010a605:	48 b8 b9 a3 10 00 00 	movabs $0xffff80000010a3b9,%rax$/;"	l
ffff80000010a60c	kernel.asm	/^ffff80000010a60c:	80 ff ff $/;"	l
ffff80000010a60f	kernel.asm	/^ffff80000010a60f:	ff d0                	callq  *%rax$/;"	l
ffff80000010a611	kernel.asm	/^ffff80000010a611:	0f b6 c0             	movzbl %al,%eax$/;"	l
ffff80000010a614	kernel.asm	/^ffff80000010a614:	5d                   	pop    %rbp$/;"	l
ffff80000010a615	kernel.asm	/^ffff80000010a615:	c3                   	retq   $/;"	l
ffff80000010a616	kernel.asm	/^ffff80000010a616 <uartintr>:$/;"	l
ffff80000010a616	kernel.asm	/^ffff80000010a616:	55                   	push   %rbp$/;"	l
ffff80000010a617	kernel.asm	/^ffff80000010a617:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010a61a	kernel.asm	/^ffff80000010a61a:	48 bf c3 a5 10 00 00 	movabs $0xffff80000010a5c3,%rdi$/;"	l
ffff80000010a621	kernel.asm	/^ffff80000010a621:	80 ff ff $/;"	l
ffff80000010a624	kernel.asm	/^ffff80000010a624:	48 b8 c7 0e 10 00 00 	movabs $0xffff800000100ec7,%rax$/;"	l
ffff80000010a62b	kernel.asm	/^ffff80000010a62b:	80 ff ff $/;"	l
ffff80000010a62e	kernel.asm	/^ffff80000010a62e:	ff d0                	callq  *%rax$/;"	l
ffff80000010a630	kernel.asm	/^ffff80000010a630:	90                   	nop$/;"	l
ffff80000010a631	kernel.asm	/^ffff80000010a631:	5d                   	pop    %rbp$/;"	l
ffff80000010a632	kernel.asm	/^ffff80000010a632:	c3                   	retq   $/;"	l
ffff80000010a633	kernel.asm	/^ffff80000010a633 <vector0>:$/;"	l
ffff80000010a633	kernel.asm	/^ffff80000010a633:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a635	kernel.asm	/^ffff80000010a635:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a637	kernel.asm	/^ffff80000010a637:	e9 59 f6 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010a63c	kernel.asm	/^ffff80000010a63c <vector1>:$/;"	l
ffff80000010a63c	kernel.asm	/^ffff80000010a63c:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a63e	kernel.asm	/^ffff80000010a63e:	6a 01                	pushq  $0x1$/;"	l
ffff80000010a640	kernel.asm	/^ffff80000010a640:	e9 50 f6 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010a645	kernel.asm	/^ffff80000010a645 <vector2>:$/;"	l
ffff80000010a645	kernel.asm	/^ffff80000010a645:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a647	kernel.asm	/^ffff80000010a647:	6a 02                	pushq  $0x2$/;"	l
ffff80000010a649	kernel.asm	/^ffff80000010a649:	e9 47 f6 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010a64e	kernel.asm	/^ffff80000010a64e <vector3>:$/;"	l
ffff80000010a64e	kernel.asm	/^ffff80000010a64e:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a650	kernel.asm	/^ffff80000010a650:	6a 03                	pushq  $0x3$/;"	l
ffff80000010a652	kernel.asm	/^ffff80000010a652:	e9 3e f6 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010a657	kernel.asm	/^ffff80000010a657 <vector4>:$/;"	l
ffff80000010a657	kernel.asm	/^ffff80000010a657:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a659	kernel.asm	/^ffff80000010a659:	6a 04                	pushq  $0x4$/;"	l
ffff80000010a65b	kernel.asm	/^ffff80000010a65b:	e9 35 f6 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010a660	kernel.asm	/^ffff80000010a660 <vector5>:$/;"	l
ffff80000010a660	kernel.asm	/^ffff80000010a660:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a662	kernel.asm	/^ffff80000010a662:	6a 05                	pushq  $0x5$/;"	l
ffff80000010a664	kernel.asm	/^ffff80000010a664:	e9 2c f6 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010a669	kernel.asm	/^ffff80000010a669 <vector6>:$/;"	l
ffff80000010a669	kernel.asm	/^ffff80000010a669:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a66b	kernel.asm	/^ffff80000010a66b:	6a 06                	pushq  $0x6$/;"	l
ffff80000010a66d	kernel.asm	/^ffff80000010a66d:	e9 23 f6 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010a672	kernel.asm	/^ffff80000010a672 <vector7>:$/;"	l
ffff80000010a672	kernel.asm	/^ffff80000010a672:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a674	kernel.asm	/^ffff80000010a674:	6a 07                	pushq  $0x7$/;"	l
ffff80000010a676	kernel.asm	/^ffff80000010a676:	e9 1a f6 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010a67b	kernel.asm	/^ffff80000010a67b <vector8>:$/;"	l
ffff80000010a67b	kernel.asm	/^ffff80000010a67b:	6a 08                	pushq  $0x8$/;"	l
ffff80000010a67d	kernel.asm	/^ffff80000010a67d:	e9 13 f6 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010a682	kernel.asm	/^ffff80000010a682 <vector9>:$/;"	l
ffff80000010a682	kernel.asm	/^ffff80000010a682:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a684	kernel.asm	/^ffff80000010a684:	6a 09                	pushq  $0x9$/;"	l
ffff80000010a686	kernel.asm	/^ffff80000010a686:	e9 0a f6 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010a68b	kernel.asm	/^ffff80000010a68b <vector10>:$/;"	l
ffff80000010a68b	kernel.asm	/^ffff80000010a68b:	6a 0a                	pushq  $0xa$/;"	l
ffff80000010a68d	kernel.asm	/^ffff80000010a68d:	e9 03 f6 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010a692	kernel.asm	/^ffff80000010a692 <vector11>:$/;"	l
ffff80000010a692	kernel.asm	/^ffff80000010a692:	6a 0b                	pushq  $0xb$/;"	l
ffff80000010a694	kernel.asm	/^ffff80000010a694:	e9 fc f5 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010a699	kernel.asm	/^ffff80000010a699 <vector12>:$/;"	l
ffff80000010a699	kernel.asm	/^ffff80000010a699:	6a 0c                	pushq  $0xc$/;"	l
ffff80000010a69b	kernel.asm	/^ffff80000010a69b:	e9 f5 f5 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010a6a0	kernel.asm	/^ffff80000010a6a0 <vector13>:$/;"	l
ffff80000010a6a0	kernel.asm	/^ffff80000010a6a0:	6a 0d                	pushq  $0xd$/;"	l
ffff80000010a6a2	kernel.asm	/^ffff80000010a6a2:	e9 ee f5 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010a6a7	kernel.asm	/^ffff80000010a6a7 <vector14>:$/;"	l
ffff80000010a6a7	kernel.asm	/^ffff80000010a6a7:	6a 0e                	pushq  $0xe$/;"	l
ffff80000010a6a9	kernel.asm	/^ffff80000010a6a9:	e9 e7 f5 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010a6ae	kernel.asm	/^ffff80000010a6ae <vector15>:$/;"	l
ffff80000010a6ae	kernel.asm	/^ffff80000010a6ae:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a6b0	kernel.asm	/^ffff80000010a6b0:	6a 0f                	pushq  $0xf$/;"	l
ffff80000010a6b2	kernel.asm	/^ffff80000010a6b2:	e9 de f5 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010a6b7	kernel.asm	/^ffff80000010a6b7 <vector16>:$/;"	l
ffff80000010a6b7	kernel.asm	/^ffff80000010a6b7:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a6b9	kernel.asm	/^ffff80000010a6b9:	6a 10                	pushq  $0x10$/;"	l
ffff80000010a6bb	kernel.asm	/^ffff80000010a6bb:	e9 d5 f5 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010a6c0	kernel.asm	/^ffff80000010a6c0 <vector17>:$/;"	l
ffff80000010a6c0	kernel.asm	/^ffff80000010a6c0:	6a 11                	pushq  $0x11$/;"	l
ffff80000010a6c2	kernel.asm	/^ffff80000010a6c2:	e9 ce f5 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010a6c7	kernel.asm	/^ffff80000010a6c7 <vector18>:$/;"	l
ffff80000010a6c7	kernel.asm	/^ffff80000010a6c7:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a6c9	kernel.asm	/^ffff80000010a6c9:	6a 12                	pushq  $0x12$/;"	l
ffff80000010a6cb	kernel.asm	/^ffff80000010a6cb:	e9 c5 f5 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010a6d0	kernel.asm	/^ffff80000010a6d0 <vector19>:$/;"	l
ffff80000010a6d0	kernel.asm	/^ffff80000010a6d0:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a6d2	kernel.asm	/^ffff80000010a6d2:	6a 13                	pushq  $0x13$/;"	l
ffff80000010a6d4	kernel.asm	/^ffff80000010a6d4:	e9 bc f5 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010a6d9	kernel.asm	/^ffff80000010a6d9 <vector20>:$/;"	l
ffff80000010a6d9	kernel.asm	/^ffff80000010a6d9:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a6db	kernel.asm	/^ffff80000010a6db:	6a 14                	pushq  $0x14$/;"	l
ffff80000010a6dd	kernel.asm	/^ffff80000010a6dd:	e9 b3 f5 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010a6e2	kernel.asm	/^ffff80000010a6e2 <vector21>:$/;"	l
ffff80000010a6e2	kernel.asm	/^ffff80000010a6e2:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a6e4	kernel.asm	/^ffff80000010a6e4:	6a 15                	pushq  $0x15$/;"	l
ffff80000010a6e6	kernel.asm	/^ffff80000010a6e6:	e9 aa f5 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010a6eb	kernel.asm	/^ffff80000010a6eb <vector22>:$/;"	l
ffff80000010a6eb	kernel.asm	/^ffff80000010a6eb:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a6ed	kernel.asm	/^ffff80000010a6ed:	6a 16                	pushq  $0x16$/;"	l
ffff80000010a6ef	kernel.asm	/^ffff80000010a6ef:	e9 a1 f5 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010a6f4	kernel.asm	/^ffff80000010a6f4 <vector23>:$/;"	l
ffff80000010a6f4	kernel.asm	/^ffff80000010a6f4:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a6f6	kernel.asm	/^ffff80000010a6f6:	6a 17                	pushq  $0x17$/;"	l
ffff80000010a6f8	kernel.asm	/^ffff80000010a6f8:	e9 98 f5 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010a6fd	kernel.asm	/^ffff80000010a6fd <vector24>:$/;"	l
ffff80000010a6fd	kernel.asm	/^ffff80000010a6fd:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a6ff	kernel.asm	/^ffff80000010a6ff:	6a 18                	pushq  $0x18$/;"	l
ffff80000010a701	kernel.asm	/^ffff80000010a701:	e9 8f f5 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010a706	kernel.asm	/^ffff80000010a706 <vector25>:$/;"	l
ffff80000010a706	kernel.asm	/^ffff80000010a706:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a708	kernel.asm	/^ffff80000010a708:	6a 19                	pushq  $0x19$/;"	l
ffff80000010a70a	kernel.asm	/^ffff80000010a70a:	e9 86 f5 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010a70f	kernel.asm	/^ffff80000010a70f <vector26>:$/;"	l
ffff80000010a70f	kernel.asm	/^ffff80000010a70f:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a711	kernel.asm	/^ffff80000010a711:	6a 1a                	pushq  $0x1a$/;"	l
ffff80000010a713	kernel.asm	/^ffff80000010a713:	e9 7d f5 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010a718	kernel.asm	/^ffff80000010a718 <vector27>:$/;"	l
ffff80000010a718	kernel.asm	/^ffff80000010a718:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a71a	kernel.asm	/^ffff80000010a71a:	6a 1b                	pushq  $0x1b$/;"	l
ffff80000010a71c	kernel.asm	/^ffff80000010a71c:	e9 74 f5 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010a721	kernel.asm	/^ffff80000010a721 <vector28>:$/;"	l
ffff80000010a721	kernel.asm	/^ffff80000010a721:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a723	kernel.asm	/^ffff80000010a723:	6a 1c                	pushq  $0x1c$/;"	l
ffff80000010a725	kernel.asm	/^ffff80000010a725:	e9 6b f5 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010a72a	kernel.asm	/^ffff80000010a72a <vector29>:$/;"	l
ffff80000010a72a	kernel.asm	/^ffff80000010a72a:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a72c	kernel.asm	/^ffff80000010a72c:	6a 1d                	pushq  $0x1d$/;"	l
ffff80000010a72e	kernel.asm	/^ffff80000010a72e:	e9 62 f5 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010a733	kernel.asm	/^ffff80000010a733 <vector30>:$/;"	l
ffff80000010a733	kernel.asm	/^ffff80000010a733:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a735	kernel.asm	/^ffff80000010a735:	6a 1e                	pushq  $0x1e$/;"	l
ffff80000010a737	kernel.asm	/^ffff80000010a737:	e9 59 f5 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010a73c	kernel.asm	/^ffff80000010a73c <vector31>:$/;"	l
ffff80000010a73c	kernel.asm	/^ffff80000010a73c:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a73e	kernel.asm	/^ffff80000010a73e:	6a 1f                	pushq  $0x1f$/;"	l
ffff80000010a740	kernel.asm	/^ffff80000010a740:	e9 50 f5 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010a745	kernel.asm	/^ffff80000010a745 <vector32>:$/;"	l
ffff80000010a745	kernel.asm	/^ffff80000010a745:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a747	kernel.asm	/^ffff80000010a747:	6a 20                	pushq  $0x20$/;"	l
ffff80000010a749	kernel.asm	/^ffff80000010a749:	e9 47 f5 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010a74e	kernel.asm	/^ffff80000010a74e <vector33>:$/;"	l
ffff80000010a74e	kernel.asm	/^ffff80000010a74e:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a750	kernel.asm	/^ffff80000010a750:	6a 21                	pushq  $0x21$/;"	l
ffff80000010a752	kernel.asm	/^ffff80000010a752:	e9 3e f5 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010a757	kernel.asm	/^ffff80000010a757 <vector34>:$/;"	l
ffff80000010a757	kernel.asm	/^ffff80000010a757:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a759	kernel.asm	/^ffff80000010a759:	6a 22                	pushq  $0x22$/;"	l
ffff80000010a75b	kernel.asm	/^ffff80000010a75b:	e9 35 f5 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010a760	kernel.asm	/^ffff80000010a760 <vector35>:$/;"	l
ffff80000010a760	kernel.asm	/^ffff80000010a760:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a762	kernel.asm	/^ffff80000010a762:	6a 23                	pushq  $0x23$/;"	l
ffff80000010a764	kernel.asm	/^ffff80000010a764:	e9 2c f5 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010a769	kernel.asm	/^ffff80000010a769 <vector36>:$/;"	l
ffff80000010a769	kernel.asm	/^ffff80000010a769:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a76b	kernel.asm	/^ffff80000010a76b:	6a 24                	pushq  $0x24$/;"	l
ffff80000010a76d	kernel.asm	/^ffff80000010a76d:	e9 23 f5 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010a772	kernel.asm	/^ffff80000010a772 <vector37>:$/;"	l
ffff80000010a772	kernel.asm	/^ffff80000010a772:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a774	kernel.asm	/^ffff80000010a774:	6a 25                	pushq  $0x25$/;"	l
ffff80000010a776	kernel.asm	/^ffff80000010a776:	e9 1a f5 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010a77b	kernel.asm	/^ffff80000010a77b <vector38>:$/;"	l
ffff80000010a77b	kernel.asm	/^ffff80000010a77b:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a77d	kernel.asm	/^ffff80000010a77d:	6a 26                	pushq  $0x26$/;"	l
ffff80000010a77f	kernel.asm	/^ffff80000010a77f:	e9 11 f5 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010a784	kernel.asm	/^ffff80000010a784 <vector39>:$/;"	l
ffff80000010a784	kernel.asm	/^ffff80000010a784:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a786	kernel.asm	/^ffff80000010a786:	6a 27                	pushq  $0x27$/;"	l
ffff80000010a788	kernel.asm	/^ffff80000010a788:	e9 08 f5 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010a78d	kernel.asm	/^ffff80000010a78d <vector40>:$/;"	l
ffff80000010a78d	kernel.asm	/^ffff80000010a78d:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a78f	kernel.asm	/^ffff80000010a78f:	6a 28                	pushq  $0x28$/;"	l
ffff80000010a791	kernel.asm	/^ffff80000010a791:	e9 ff f4 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010a796	kernel.asm	/^ffff80000010a796 <vector41>:$/;"	l
ffff80000010a796	kernel.asm	/^ffff80000010a796:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a798	kernel.asm	/^ffff80000010a798:	6a 29                	pushq  $0x29$/;"	l
ffff80000010a79a	kernel.asm	/^ffff80000010a79a:	e9 f6 f4 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010a79f	kernel.asm	/^ffff80000010a79f <vector42>:$/;"	l
ffff80000010a79f	kernel.asm	/^ffff80000010a79f:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a7a1	kernel.asm	/^ffff80000010a7a1:	6a 2a                	pushq  $0x2a$/;"	l
ffff80000010a7a3	kernel.asm	/^ffff80000010a7a3:	e9 ed f4 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010a7a8	kernel.asm	/^ffff80000010a7a8 <vector43>:$/;"	l
ffff80000010a7a8	kernel.asm	/^ffff80000010a7a8:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a7aa	kernel.asm	/^ffff80000010a7aa:	6a 2b                	pushq  $0x2b$/;"	l
ffff80000010a7ac	kernel.asm	/^ffff80000010a7ac:	e9 e4 f4 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010a7b1	kernel.asm	/^ffff80000010a7b1 <vector44>:$/;"	l
ffff80000010a7b1	kernel.asm	/^ffff80000010a7b1:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a7b3	kernel.asm	/^ffff80000010a7b3:	6a 2c                	pushq  $0x2c$/;"	l
ffff80000010a7b5	kernel.asm	/^ffff80000010a7b5:	e9 db f4 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010a7ba	kernel.asm	/^ffff80000010a7ba <vector45>:$/;"	l
ffff80000010a7ba	kernel.asm	/^ffff80000010a7ba:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a7bc	kernel.asm	/^ffff80000010a7bc:	6a 2d                	pushq  $0x2d$/;"	l
ffff80000010a7be	kernel.asm	/^ffff80000010a7be:	e9 d2 f4 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010a7c3	kernel.asm	/^ffff80000010a7c3 <vector46>:$/;"	l
ffff80000010a7c3	kernel.asm	/^ffff80000010a7c3:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a7c5	kernel.asm	/^ffff80000010a7c5:	6a 2e                	pushq  $0x2e$/;"	l
ffff80000010a7c7	kernel.asm	/^ffff80000010a7c7:	e9 c9 f4 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010a7cc	kernel.asm	/^ffff80000010a7cc <vector47>:$/;"	l
ffff80000010a7cc	kernel.asm	/^ffff80000010a7cc:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a7ce	kernel.asm	/^ffff80000010a7ce:	6a 2f                	pushq  $0x2f$/;"	l
ffff80000010a7d0	kernel.asm	/^ffff80000010a7d0:	e9 c0 f4 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010a7d5	kernel.asm	/^ffff80000010a7d5 <vector48>:$/;"	l
ffff80000010a7d5	kernel.asm	/^ffff80000010a7d5:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a7d7	kernel.asm	/^ffff80000010a7d7:	6a 30                	pushq  $0x30$/;"	l
ffff80000010a7d9	kernel.asm	/^ffff80000010a7d9:	e9 b7 f4 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010a7de	kernel.asm	/^ffff80000010a7de <vector49>:$/;"	l
ffff80000010a7de	kernel.asm	/^ffff80000010a7de:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a7e0	kernel.asm	/^ffff80000010a7e0:	6a 31                	pushq  $0x31$/;"	l
ffff80000010a7e2	kernel.asm	/^ffff80000010a7e2:	e9 ae f4 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010a7e7	kernel.asm	/^ffff80000010a7e7 <vector50>:$/;"	l
ffff80000010a7e7	kernel.asm	/^ffff80000010a7e7:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a7e9	kernel.asm	/^ffff80000010a7e9:	6a 32                	pushq  $0x32$/;"	l
ffff80000010a7eb	kernel.asm	/^ffff80000010a7eb:	e9 a5 f4 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010a7f0	kernel.asm	/^ffff80000010a7f0 <vector51>:$/;"	l
ffff80000010a7f0	kernel.asm	/^ffff80000010a7f0:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a7f2	kernel.asm	/^ffff80000010a7f2:	6a 33                	pushq  $0x33$/;"	l
ffff80000010a7f4	kernel.asm	/^ffff80000010a7f4:	e9 9c f4 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010a7f9	kernel.asm	/^ffff80000010a7f9 <vector52>:$/;"	l
ffff80000010a7f9	kernel.asm	/^ffff80000010a7f9:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a7fb	kernel.asm	/^ffff80000010a7fb:	6a 34                	pushq  $0x34$/;"	l
ffff80000010a7fd	kernel.asm	/^ffff80000010a7fd:	e9 93 f4 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010a802	kernel.asm	/^ffff80000010a802 <vector53>:$/;"	l
ffff80000010a802	kernel.asm	/^ffff80000010a802:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a804	kernel.asm	/^ffff80000010a804:	6a 35                	pushq  $0x35$/;"	l
ffff80000010a806	kernel.asm	/^ffff80000010a806:	e9 8a f4 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010a80b	kernel.asm	/^ffff80000010a80b <vector54>:$/;"	l
ffff80000010a80b	kernel.asm	/^ffff80000010a80b:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a80d	kernel.asm	/^ffff80000010a80d:	6a 36                	pushq  $0x36$/;"	l
ffff80000010a80f	kernel.asm	/^ffff80000010a80f:	e9 81 f4 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010a814	kernel.asm	/^ffff80000010a814 <vector55>:$/;"	l
ffff80000010a814	kernel.asm	/^ffff80000010a814:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a816	kernel.asm	/^ffff80000010a816:	6a 37                	pushq  $0x37$/;"	l
ffff80000010a818	kernel.asm	/^ffff80000010a818:	e9 78 f4 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010a81d	kernel.asm	/^ffff80000010a81d <vector56>:$/;"	l
ffff80000010a81d	kernel.asm	/^ffff80000010a81d:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a81f	kernel.asm	/^ffff80000010a81f:	6a 38                	pushq  $0x38$/;"	l
ffff80000010a821	kernel.asm	/^ffff80000010a821:	e9 6f f4 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010a826	kernel.asm	/^ffff80000010a826 <vector57>:$/;"	l
ffff80000010a826	kernel.asm	/^ffff80000010a826:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a828	kernel.asm	/^ffff80000010a828:	6a 39                	pushq  $0x39$/;"	l
ffff80000010a82a	kernel.asm	/^ffff80000010a82a:	e9 66 f4 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010a82f	kernel.asm	/^ffff80000010a82f <vector58>:$/;"	l
ffff80000010a82f	kernel.asm	/^ffff80000010a82f:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a831	kernel.asm	/^ffff80000010a831:	6a 3a                	pushq  $0x3a$/;"	l
ffff80000010a833	kernel.asm	/^ffff80000010a833:	e9 5d f4 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010a838	kernel.asm	/^ffff80000010a838 <vector59>:$/;"	l
ffff80000010a838	kernel.asm	/^ffff80000010a838:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a83a	kernel.asm	/^ffff80000010a83a:	6a 3b                	pushq  $0x3b$/;"	l
ffff80000010a83c	kernel.asm	/^ffff80000010a83c:	e9 54 f4 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010a841	kernel.asm	/^ffff80000010a841 <vector60>:$/;"	l
ffff80000010a841	kernel.asm	/^ffff80000010a841:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a843	kernel.asm	/^ffff80000010a843:	6a 3c                	pushq  $0x3c$/;"	l
ffff80000010a845	kernel.asm	/^ffff80000010a845:	e9 4b f4 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010a84a	kernel.asm	/^ffff80000010a84a <vector61>:$/;"	l
ffff80000010a84a	kernel.asm	/^ffff80000010a84a:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a84c	kernel.asm	/^ffff80000010a84c:	6a 3d                	pushq  $0x3d$/;"	l
ffff80000010a84e	kernel.asm	/^ffff80000010a84e:	e9 42 f4 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010a853	kernel.asm	/^ffff80000010a853 <vector62>:$/;"	l
ffff80000010a853	kernel.asm	/^ffff80000010a853:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a855	kernel.asm	/^ffff80000010a855:	6a 3e                	pushq  $0x3e$/;"	l
ffff80000010a857	kernel.asm	/^ffff80000010a857:	e9 39 f4 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010a85c	kernel.asm	/^ffff80000010a85c <vector63>:$/;"	l
ffff80000010a85c	kernel.asm	/^ffff80000010a85c:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a85e	kernel.asm	/^ffff80000010a85e:	6a 3f                	pushq  $0x3f$/;"	l
ffff80000010a860	kernel.asm	/^ffff80000010a860:	e9 30 f4 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010a865	kernel.asm	/^ffff80000010a865 <vector64>:$/;"	l
ffff80000010a865	kernel.asm	/^ffff80000010a865:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a867	kernel.asm	/^ffff80000010a867:	6a 40                	pushq  $0x40$/;"	l
ffff80000010a869	kernel.asm	/^ffff80000010a869:	e9 27 f4 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010a86e	kernel.asm	/^ffff80000010a86e <vector65>:$/;"	l
ffff80000010a86e	kernel.asm	/^ffff80000010a86e:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a870	kernel.asm	/^ffff80000010a870:	6a 41                	pushq  $0x41$/;"	l
ffff80000010a872	kernel.asm	/^ffff80000010a872:	e9 1e f4 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010a877	kernel.asm	/^ffff80000010a877 <vector66>:$/;"	l
ffff80000010a877	kernel.asm	/^ffff80000010a877:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a879	kernel.asm	/^ffff80000010a879:	6a 42                	pushq  $0x42$/;"	l
ffff80000010a87b	kernel.asm	/^ffff80000010a87b:	e9 15 f4 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010a880	kernel.asm	/^ffff80000010a880 <vector67>:$/;"	l
ffff80000010a880	kernel.asm	/^ffff80000010a880:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a882	kernel.asm	/^ffff80000010a882:	6a 43                	pushq  $0x43$/;"	l
ffff80000010a884	kernel.asm	/^ffff80000010a884:	e9 0c f4 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010a889	kernel.asm	/^ffff80000010a889 <vector68>:$/;"	l
ffff80000010a889	kernel.asm	/^ffff80000010a889:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a88b	kernel.asm	/^ffff80000010a88b:	6a 44                	pushq  $0x44$/;"	l
ffff80000010a88d	kernel.asm	/^ffff80000010a88d:	e9 03 f4 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010a892	kernel.asm	/^ffff80000010a892 <vector69>:$/;"	l
ffff80000010a892	kernel.asm	/^ffff80000010a892:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a894	kernel.asm	/^ffff80000010a894:	6a 45                	pushq  $0x45$/;"	l
ffff80000010a896	kernel.asm	/^ffff80000010a896:	e9 fa f3 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010a89b	kernel.asm	/^ffff80000010a89b <vector70>:$/;"	l
ffff80000010a89b	kernel.asm	/^ffff80000010a89b:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a89d	kernel.asm	/^ffff80000010a89d:	6a 46                	pushq  $0x46$/;"	l
ffff80000010a89f	kernel.asm	/^ffff80000010a89f:	e9 f1 f3 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010a8a4	kernel.asm	/^ffff80000010a8a4 <vector71>:$/;"	l
ffff80000010a8a4	kernel.asm	/^ffff80000010a8a4:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a8a6	kernel.asm	/^ffff80000010a8a6:	6a 47                	pushq  $0x47$/;"	l
ffff80000010a8a8	kernel.asm	/^ffff80000010a8a8:	e9 e8 f3 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010a8ad	kernel.asm	/^ffff80000010a8ad <vector72>:$/;"	l
ffff80000010a8ad	kernel.asm	/^ffff80000010a8ad:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a8af	kernel.asm	/^ffff80000010a8af:	6a 48                	pushq  $0x48$/;"	l
ffff80000010a8b1	kernel.asm	/^ffff80000010a8b1:	e9 df f3 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010a8b6	kernel.asm	/^ffff80000010a8b6 <vector73>:$/;"	l
ffff80000010a8b6	kernel.asm	/^ffff80000010a8b6:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a8b8	kernel.asm	/^ffff80000010a8b8:	6a 49                	pushq  $0x49$/;"	l
ffff80000010a8ba	kernel.asm	/^ffff80000010a8ba:	e9 d6 f3 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010a8bf	kernel.asm	/^ffff80000010a8bf <vector74>:$/;"	l
ffff80000010a8bf	kernel.asm	/^ffff80000010a8bf:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a8c1	kernel.asm	/^ffff80000010a8c1:	6a 4a                	pushq  $0x4a$/;"	l
ffff80000010a8c3	kernel.asm	/^ffff80000010a8c3:	e9 cd f3 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010a8c8	kernel.asm	/^ffff80000010a8c8 <vector75>:$/;"	l
ffff80000010a8c8	kernel.asm	/^ffff80000010a8c8:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a8ca	kernel.asm	/^ffff80000010a8ca:	6a 4b                	pushq  $0x4b$/;"	l
ffff80000010a8cc	kernel.asm	/^ffff80000010a8cc:	e9 c4 f3 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010a8d1	kernel.asm	/^ffff80000010a8d1 <vector76>:$/;"	l
ffff80000010a8d1	kernel.asm	/^ffff80000010a8d1:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a8d3	kernel.asm	/^ffff80000010a8d3:	6a 4c                	pushq  $0x4c$/;"	l
ffff80000010a8d5	kernel.asm	/^ffff80000010a8d5:	e9 bb f3 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010a8da	kernel.asm	/^ffff80000010a8da <vector77>:$/;"	l
ffff80000010a8da	kernel.asm	/^ffff80000010a8da:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a8dc	kernel.asm	/^ffff80000010a8dc:	6a 4d                	pushq  $0x4d$/;"	l
ffff80000010a8de	kernel.asm	/^ffff80000010a8de:	e9 b2 f3 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010a8e3	kernel.asm	/^ffff80000010a8e3 <vector78>:$/;"	l
ffff80000010a8e3	kernel.asm	/^ffff80000010a8e3:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a8e5	kernel.asm	/^ffff80000010a8e5:	6a 4e                	pushq  $0x4e$/;"	l
ffff80000010a8e7	kernel.asm	/^ffff80000010a8e7:	e9 a9 f3 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010a8ec	kernel.asm	/^ffff80000010a8ec <vector79>:$/;"	l
ffff80000010a8ec	kernel.asm	/^ffff80000010a8ec:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a8ee	kernel.asm	/^ffff80000010a8ee:	6a 4f                	pushq  $0x4f$/;"	l
ffff80000010a8f0	kernel.asm	/^ffff80000010a8f0:	e9 a0 f3 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010a8f5	kernel.asm	/^ffff80000010a8f5 <vector80>:$/;"	l
ffff80000010a8f5	kernel.asm	/^ffff80000010a8f5:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a8f7	kernel.asm	/^ffff80000010a8f7:	6a 50                	pushq  $0x50$/;"	l
ffff80000010a8f9	kernel.asm	/^ffff80000010a8f9:	e9 97 f3 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010a8fe	kernel.asm	/^ffff80000010a8fe <vector81>:$/;"	l
ffff80000010a8fe	kernel.asm	/^ffff80000010a8fe:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a900	kernel.asm	/^ffff80000010a900:	6a 51                	pushq  $0x51$/;"	l
ffff80000010a902	kernel.asm	/^ffff80000010a902:	e9 8e f3 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010a907	kernel.asm	/^ffff80000010a907 <vector82>:$/;"	l
ffff80000010a907	kernel.asm	/^ffff80000010a907:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a909	kernel.asm	/^ffff80000010a909:	6a 52                	pushq  $0x52$/;"	l
ffff80000010a90b	kernel.asm	/^ffff80000010a90b:	e9 85 f3 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010a910	kernel.asm	/^ffff80000010a910 <vector83>:$/;"	l
ffff80000010a910	kernel.asm	/^ffff80000010a910:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a912	kernel.asm	/^ffff80000010a912:	6a 53                	pushq  $0x53$/;"	l
ffff80000010a914	kernel.asm	/^ffff80000010a914:	e9 7c f3 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010a919	kernel.asm	/^ffff80000010a919 <vector84>:$/;"	l
ffff80000010a919	kernel.asm	/^ffff80000010a919:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a91b	kernel.asm	/^ffff80000010a91b:	6a 54                	pushq  $0x54$/;"	l
ffff80000010a91d	kernel.asm	/^ffff80000010a91d:	e9 73 f3 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010a922	kernel.asm	/^ffff80000010a922 <vector85>:$/;"	l
ffff80000010a922	kernel.asm	/^ffff80000010a922:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a924	kernel.asm	/^ffff80000010a924:	6a 55                	pushq  $0x55$/;"	l
ffff80000010a926	kernel.asm	/^ffff80000010a926:	e9 6a f3 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010a92b	kernel.asm	/^ffff80000010a92b <vector86>:$/;"	l
ffff80000010a92b	kernel.asm	/^ffff80000010a92b:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a92d	kernel.asm	/^ffff80000010a92d:	6a 56                	pushq  $0x56$/;"	l
ffff80000010a92f	kernel.asm	/^ffff80000010a92f:	e9 61 f3 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010a934	kernel.asm	/^ffff80000010a934 <vector87>:$/;"	l
ffff80000010a934	kernel.asm	/^ffff80000010a934:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a936	kernel.asm	/^ffff80000010a936:	6a 57                	pushq  $0x57$/;"	l
ffff80000010a938	kernel.asm	/^ffff80000010a938:	e9 58 f3 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010a93d	kernel.asm	/^ffff80000010a93d <vector88>:$/;"	l
ffff80000010a93d	kernel.asm	/^ffff80000010a93d:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a93f	kernel.asm	/^ffff80000010a93f:	6a 58                	pushq  $0x58$/;"	l
ffff80000010a941	kernel.asm	/^ffff80000010a941:	e9 4f f3 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010a946	kernel.asm	/^ffff80000010a946 <vector89>:$/;"	l
ffff80000010a946	kernel.asm	/^ffff80000010a946:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a948	kernel.asm	/^ffff80000010a948:	6a 59                	pushq  $0x59$/;"	l
ffff80000010a94a	kernel.asm	/^ffff80000010a94a:	e9 46 f3 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010a94f	kernel.asm	/^ffff80000010a94f <vector90>:$/;"	l
ffff80000010a94f	kernel.asm	/^ffff80000010a94f:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a951	kernel.asm	/^ffff80000010a951:	6a 5a                	pushq  $0x5a$/;"	l
ffff80000010a953	kernel.asm	/^ffff80000010a953:	e9 3d f3 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010a958	kernel.asm	/^ffff80000010a958 <vector91>:$/;"	l
ffff80000010a958	kernel.asm	/^ffff80000010a958:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a95a	kernel.asm	/^ffff80000010a95a:	6a 5b                	pushq  $0x5b$/;"	l
ffff80000010a95c	kernel.asm	/^ffff80000010a95c:	e9 34 f3 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010a961	kernel.asm	/^ffff80000010a961 <vector92>:$/;"	l
ffff80000010a961	kernel.asm	/^ffff80000010a961:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a963	kernel.asm	/^ffff80000010a963:	6a 5c                	pushq  $0x5c$/;"	l
ffff80000010a965	kernel.asm	/^ffff80000010a965:	e9 2b f3 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010a96a	kernel.asm	/^ffff80000010a96a <vector93>:$/;"	l
ffff80000010a96a	kernel.asm	/^ffff80000010a96a:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a96c	kernel.asm	/^ffff80000010a96c:	6a 5d                	pushq  $0x5d$/;"	l
ffff80000010a96e	kernel.asm	/^ffff80000010a96e:	e9 22 f3 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010a973	kernel.asm	/^ffff80000010a973 <vector94>:$/;"	l
ffff80000010a973	kernel.asm	/^ffff80000010a973:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a975	kernel.asm	/^ffff80000010a975:	6a 5e                	pushq  $0x5e$/;"	l
ffff80000010a977	kernel.asm	/^ffff80000010a977:	e9 19 f3 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010a97c	kernel.asm	/^ffff80000010a97c <vector95>:$/;"	l
ffff80000010a97c	kernel.asm	/^ffff80000010a97c:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a97e	kernel.asm	/^ffff80000010a97e:	6a 5f                	pushq  $0x5f$/;"	l
ffff80000010a980	kernel.asm	/^ffff80000010a980:	e9 10 f3 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010a985	kernel.asm	/^ffff80000010a985 <vector96>:$/;"	l
ffff80000010a985	kernel.asm	/^ffff80000010a985:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a987	kernel.asm	/^ffff80000010a987:	6a 60                	pushq  $0x60$/;"	l
ffff80000010a989	kernel.asm	/^ffff80000010a989:	e9 07 f3 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010a98e	kernel.asm	/^ffff80000010a98e <vector97>:$/;"	l
ffff80000010a98e	kernel.asm	/^ffff80000010a98e:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a990	kernel.asm	/^ffff80000010a990:	6a 61                	pushq  $0x61$/;"	l
ffff80000010a992	kernel.asm	/^ffff80000010a992:	e9 fe f2 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010a997	kernel.asm	/^ffff80000010a997 <vector98>:$/;"	l
ffff80000010a997	kernel.asm	/^ffff80000010a997:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a999	kernel.asm	/^ffff80000010a999:	6a 62                	pushq  $0x62$/;"	l
ffff80000010a99b	kernel.asm	/^ffff80000010a99b:	e9 f5 f2 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010a9a0	kernel.asm	/^ffff80000010a9a0 <vector99>:$/;"	l
ffff80000010a9a0	kernel.asm	/^ffff80000010a9a0:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a9a2	kernel.asm	/^ffff80000010a9a2:	6a 63                	pushq  $0x63$/;"	l
ffff80000010a9a4	kernel.asm	/^ffff80000010a9a4:	e9 ec f2 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010a9a9	kernel.asm	/^ffff80000010a9a9 <vector100>:$/;"	l
ffff80000010a9a9	kernel.asm	/^ffff80000010a9a9:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a9ab	kernel.asm	/^ffff80000010a9ab:	6a 64                	pushq  $0x64$/;"	l
ffff80000010a9ad	kernel.asm	/^ffff80000010a9ad:	e9 e3 f2 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010a9b2	kernel.asm	/^ffff80000010a9b2 <vector101>:$/;"	l
ffff80000010a9b2	kernel.asm	/^ffff80000010a9b2:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a9b4	kernel.asm	/^ffff80000010a9b4:	6a 65                	pushq  $0x65$/;"	l
ffff80000010a9b6	kernel.asm	/^ffff80000010a9b6:	e9 da f2 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010a9bb	kernel.asm	/^ffff80000010a9bb <vector102>:$/;"	l
ffff80000010a9bb	kernel.asm	/^ffff80000010a9bb:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a9bd	kernel.asm	/^ffff80000010a9bd:	6a 66                	pushq  $0x66$/;"	l
ffff80000010a9bf	kernel.asm	/^ffff80000010a9bf:	e9 d1 f2 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010a9c4	kernel.asm	/^ffff80000010a9c4 <vector103>:$/;"	l
ffff80000010a9c4	kernel.asm	/^ffff80000010a9c4:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a9c6	kernel.asm	/^ffff80000010a9c6:	6a 67                	pushq  $0x67$/;"	l
ffff80000010a9c8	kernel.asm	/^ffff80000010a9c8:	e9 c8 f2 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010a9cd	kernel.asm	/^ffff80000010a9cd <vector104>:$/;"	l
ffff80000010a9cd	kernel.asm	/^ffff80000010a9cd:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a9cf	kernel.asm	/^ffff80000010a9cf:	6a 68                	pushq  $0x68$/;"	l
ffff80000010a9d1	kernel.asm	/^ffff80000010a9d1:	e9 bf f2 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010a9d6	kernel.asm	/^ffff80000010a9d6 <vector105>:$/;"	l
ffff80000010a9d6	kernel.asm	/^ffff80000010a9d6:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a9d8	kernel.asm	/^ffff80000010a9d8:	6a 69                	pushq  $0x69$/;"	l
ffff80000010a9da	kernel.asm	/^ffff80000010a9da:	e9 b6 f2 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010a9df	kernel.asm	/^ffff80000010a9df <vector106>:$/;"	l
ffff80000010a9df	kernel.asm	/^ffff80000010a9df:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a9e1	kernel.asm	/^ffff80000010a9e1:	6a 6a                	pushq  $0x6a$/;"	l
ffff80000010a9e3	kernel.asm	/^ffff80000010a9e3:	e9 ad f2 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010a9e8	kernel.asm	/^ffff80000010a9e8 <vector107>:$/;"	l
ffff80000010a9e8	kernel.asm	/^ffff80000010a9e8:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a9ea	kernel.asm	/^ffff80000010a9ea:	6a 6b                	pushq  $0x6b$/;"	l
ffff80000010a9ec	kernel.asm	/^ffff80000010a9ec:	e9 a4 f2 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010a9f1	kernel.asm	/^ffff80000010a9f1 <vector108>:$/;"	l
ffff80000010a9f1	kernel.asm	/^ffff80000010a9f1:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a9f3	kernel.asm	/^ffff80000010a9f3:	6a 6c                	pushq  $0x6c$/;"	l
ffff80000010a9f5	kernel.asm	/^ffff80000010a9f5:	e9 9b f2 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010a9fa	kernel.asm	/^ffff80000010a9fa <vector109>:$/;"	l
ffff80000010a9fa	kernel.asm	/^ffff80000010a9fa:	6a 00                	pushq  $0x0$/;"	l
ffff80000010a9fc	kernel.asm	/^ffff80000010a9fc:	6a 6d                	pushq  $0x6d$/;"	l
ffff80000010a9fe	kernel.asm	/^ffff80000010a9fe:	e9 92 f2 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010aa03	kernel.asm	/^ffff80000010aa03 <vector110>:$/;"	l
ffff80000010aa03	kernel.asm	/^ffff80000010aa03:	6a 00                	pushq  $0x0$/;"	l
ffff80000010aa05	kernel.asm	/^ffff80000010aa05:	6a 6e                	pushq  $0x6e$/;"	l
ffff80000010aa07	kernel.asm	/^ffff80000010aa07:	e9 89 f2 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010aa0c	kernel.asm	/^ffff80000010aa0c <vector111>:$/;"	l
ffff80000010aa0c	kernel.asm	/^ffff80000010aa0c:	6a 00                	pushq  $0x0$/;"	l
ffff80000010aa0e	kernel.asm	/^ffff80000010aa0e:	6a 6f                	pushq  $0x6f$/;"	l
ffff80000010aa10	kernel.asm	/^ffff80000010aa10:	e9 80 f2 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010aa15	kernel.asm	/^ffff80000010aa15 <vector112>:$/;"	l
ffff80000010aa15	kernel.asm	/^ffff80000010aa15:	6a 00                	pushq  $0x0$/;"	l
ffff80000010aa17	kernel.asm	/^ffff80000010aa17:	6a 70                	pushq  $0x70$/;"	l
ffff80000010aa19	kernel.asm	/^ffff80000010aa19:	e9 77 f2 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010aa1e	kernel.asm	/^ffff80000010aa1e <vector113>:$/;"	l
ffff80000010aa1e	kernel.asm	/^ffff80000010aa1e:	6a 00                	pushq  $0x0$/;"	l
ffff80000010aa20	kernel.asm	/^ffff80000010aa20:	6a 71                	pushq  $0x71$/;"	l
ffff80000010aa22	kernel.asm	/^ffff80000010aa22:	e9 6e f2 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010aa27	kernel.asm	/^ffff80000010aa27 <vector114>:$/;"	l
ffff80000010aa27	kernel.asm	/^ffff80000010aa27:	6a 00                	pushq  $0x0$/;"	l
ffff80000010aa29	kernel.asm	/^ffff80000010aa29:	6a 72                	pushq  $0x72$/;"	l
ffff80000010aa2b	kernel.asm	/^ffff80000010aa2b:	e9 65 f2 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010aa30	kernel.asm	/^ffff80000010aa30 <vector115>:$/;"	l
ffff80000010aa30	kernel.asm	/^ffff80000010aa30:	6a 00                	pushq  $0x0$/;"	l
ffff80000010aa32	kernel.asm	/^ffff80000010aa32:	6a 73                	pushq  $0x73$/;"	l
ffff80000010aa34	kernel.asm	/^ffff80000010aa34:	e9 5c f2 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010aa39	kernel.asm	/^ffff80000010aa39 <vector116>:$/;"	l
ffff80000010aa39	kernel.asm	/^ffff80000010aa39:	6a 00                	pushq  $0x0$/;"	l
ffff80000010aa3b	kernel.asm	/^ffff80000010aa3b:	6a 74                	pushq  $0x74$/;"	l
ffff80000010aa3d	kernel.asm	/^ffff80000010aa3d:	e9 53 f2 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010aa42	kernel.asm	/^ffff80000010aa42 <vector117>:$/;"	l
ffff80000010aa42	kernel.asm	/^ffff80000010aa42:	6a 00                	pushq  $0x0$/;"	l
ffff80000010aa44	kernel.asm	/^ffff80000010aa44:	6a 75                	pushq  $0x75$/;"	l
ffff80000010aa46	kernel.asm	/^ffff80000010aa46:	e9 4a f2 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010aa4b	kernel.asm	/^ffff80000010aa4b <vector118>:$/;"	l
ffff80000010aa4b	kernel.asm	/^ffff80000010aa4b:	6a 00                	pushq  $0x0$/;"	l
ffff80000010aa4d	kernel.asm	/^ffff80000010aa4d:	6a 76                	pushq  $0x76$/;"	l
ffff80000010aa4f	kernel.asm	/^ffff80000010aa4f:	e9 41 f2 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010aa54	kernel.asm	/^ffff80000010aa54 <vector119>:$/;"	l
ffff80000010aa54	kernel.asm	/^ffff80000010aa54:	6a 00                	pushq  $0x0$/;"	l
ffff80000010aa56	kernel.asm	/^ffff80000010aa56:	6a 77                	pushq  $0x77$/;"	l
ffff80000010aa58	kernel.asm	/^ffff80000010aa58:	e9 38 f2 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010aa5d	kernel.asm	/^ffff80000010aa5d <vector120>:$/;"	l
ffff80000010aa5d	kernel.asm	/^ffff80000010aa5d:	6a 00                	pushq  $0x0$/;"	l
ffff80000010aa5f	kernel.asm	/^ffff80000010aa5f:	6a 78                	pushq  $0x78$/;"	l
ffff80000010aa61	kernel.asm	/^ffff80000010aa61:	e9 2f f2 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010aa66	kernel.asm	/^ffff80000010aa66 <vector121>:$/;"	l
ffff80000010aa66	kernel.asm	/^ffff80000010aa66:	6a 00                	pushq  $0x0$/;"	l
ffff80000010aa68	kernel.asm	/^ffff80000010aa68:	6a 79                	pushq  $0x79$/;"	l
ffff80000010aa6a	kernel.asm	/^ffff80000010aa6a:	e9 26 f2 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010aa6f	kernel.asm	/^ffff80000010aa6f <vector122>:$/;"	l
ffff80000010aa6f	kernel.asm	/^ffff80000010aa6f:	6a 00                	pushq  $0x0$/;"	l
ffff80000010aa71	kernel.asm	/^ffff80000010aa71:	6a 7a                	pushq  $0x7a$/;"	l
ffff80000010aa73	kernel.asm	/^ffff80000010aa73:	e9 1d f2 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010aa78	kernel.asm	/^ffff80000010aa78 <vector123>:$/;"	l
ffff80000010aa78	kernel.asm	/^ffff80000010aa78:	6a 00                	pushq  $0x0$/;"	l
ffff80000010aa7a	kernel.asm	/^ffff80000010aa7a:	6a 7b                	pushq  $0x7b$/;"	l
ffff80000010aa7c	kernel.asm	/^ffff80000010aa7c:	e9 14 f2 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010aa81	kernel.asm	/^ffff80000010aa81 <vector124>:$/;"	l
ffff80000010aa81	kernel.asm	/^ffff80000010aa81:	6a 00                	pushq  $0x0$/;"	l
ffff80000010aa83	kernel.asm	/^ffff80000010aa83:	6a 7c                	pushq  $0x7c$/;"	l
ffff80000010aa85	kernel.asm	/^ffff80000010aa85:	e9 0b f2 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010aa8a	kernel.asm	/^ffff80000010aa8a <vector125>:$/;"	l
ffff80000010aa8a	kernel.asm	/^ffff80000010aa8a:	6a 00                	pushq  $0x0$/;"	l
ffff80000010aa8c	kernel.asm	/^ffff80000010aa8c:	6a 7d                	pushq  $0x7d$/;"	l
ffff80000010aa8e	kernel.asm	/^ffff80000010aa8e:	e9 02 f2 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010aa93	kernel.asm	/^ffff80000010aa93 <vector126>:$/;"	l
ffff80000010aa93	kernel.asm	/^ffff80000010aa93:	6a 00                	pushq  $0x0$/;"	l
ffff80000010aa95	kernel.asm	/^ffff80000010aa95:	6a 7e                	pushq  $0x7e$/;"	l
ffff80000010aa97	kernel.asm	/^ffff80000010aa97:	e9 f9 f1 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010aa9c	kernel.asm	/^ffff80000010aa9c <vector127>:$/;"	l
ffff80000010aa9c	kernel.asm	/^ffff80000010aa9c:	6a 00                	pushq  $0x0$/;"	l
ffff80000010aa9e	kernel.asm	/^ffff80000010aa9e:	6a 7f                	pushq  $0x7f$/;"	l
ffff80000010aaa0	kernel.asm	/^ffff80000010aaa0:	e9 f0 f1 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010aaa5	kernel.asm	/^ffff80000010aaa5 <vector128>:$/;"	l
ffff80000010aaa5	kernel.asm	/^ffff80000010aaa5:	6a 00                	pushq  $0x0$/;"	l
ffff80000010aaa7	kernel.asm	/^ffff80000010aaa7:	68 80 00 00 00       	pushq  $0x80$/;"	l
ffff80000010aaac	kernel.asm	/^ffff80000010aaac:	e9 e4 f1 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010aab1	kernel.asm	/^ffff80000010aab1 <vector129>:$/;"	l
ffff80000010aab1	kernel.asm	/^ffff80000010aab1:	6a 00                	pushq  $0x0$/;"	l
ffff80000010aab3	kernel.asm	/^ffff80000010aab3:	68 81 00 00 00       	pushq  $0x81$/;"	l
ffff80000010aab8	kernel.asm	/^ffff80000010aab8:	e9 d8 f1 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010aabd	kernel.asm	/^ffff80000010aabd <vector130>:$/;"	l
ffff80000010aabd	kernel.asm	/^ffff80000010aabd:	6a 00                	pushq  $0x0$/;"	l
ffff80000010aabf	kernel.asm	/^ffff80000010aabf:	68 82 00 00 00       	pushq  $0x82$/;"	l
ffff80000010aac4	kernel.asm	/^ffff80000010aac4:	e9 cc f1 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010aac9	kernel.asm	/^ffff80000010aac9 <vector131>:$/;"	l
ffff80000010aac9	kernel.asm	/^ffff80000010aac9:	6a 00                	pushq  $0x0$/;"	l
ffff80000010aacb	kernel.asm	/^ffff80000010aacb:	68 83 00 00 00       	pushq  $0x83$/;"	l
ffff80000010aad0	kernel.asm	/^ffff80000010aad0:	e9 c0 f1 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010aad5	kernel.asm	/^ffff80000010aad5 <vector132>:$/;"	l
ffff80000010aad5	kernel.asm	/^ffff80000010aad5:	6a 00                	pushq  $0x0$/;"	l
ffff80000010aad7	kernel.asm	/^ffff80000010aad7:	68 84 00 00 00       	pushq  $0x84$/;"	l
ffff80000010aadc	kernel.asm	/^ffff80000010aadc:	e9 b4 f1 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010aae1	kernel.asm	/^ffff80000010aae1 <vector133>:$/;"	l
ffff80000010aae1	kernel.asm	/^ffff80000010aae1:	6a 00                	pushq  $0x0$/;"	l
ffff80000010aae3	kernel.asm	/^ffff80000010aae3:	68 85 00 00 00       	pushq  $0x85$/;"	l
ffff80000010aae8	kernel.asm	/^ffff80000010aae8:	e9 a8 f1 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010aaed	kernel.asm	/^ffff80000010aaed <vector134>:$/;"	l
ffff80000010aaed	kernel.asm	/^ffff80000010aaed:	6a 00                	pushq  $0x0$/;"	l
ffff80000010aaef	kernel.asm	/^ffff80000010aaef:	68 86 00 00 00       	pushq  $0x86$/;"	l
ffff80000010aaf4	kernel.asm	/^ffff80000010aaf4:	e9 9c f1 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010aaf9	kernel.asm	/^ffff80000010aaf9 <vector135>:$/;"	l
ffff80000010aaf9	kernel.asm	/^ffff80000010aaf9:	6a 00                	pushq  $0x0$/;"	l
ffff80000010aafb	kernel.asm	/^ffff80000010aafb:	68 87 00 00 00       	pushq  $0x87$/;"	l
ffff80000010ab00	kernel.asm	/^ffff80000010ab00:	e9 90 f1 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010ab05	kernel.asm	/^ffff80000010ab05 <vector136>:$/;"	l
ffff80000010ab05	kernel.asm	/^ffff80000010ab05:	6a 00                	pushq  $0x0$/;"	l
ffff80000010ab07	kernel.asm	/^ffff80000010ab07:	68 88 00 00 00       	pushq  $0x88$/;"	l
ffff80000010ab0c	kernel.asm	/^ffff80000010ab0c:	e9 84 f1 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010ab11	kernel.asm	/^ffff80000010ab11 <vector137>:$/;"	l
ffff80000010ab11	kernel.asm	/^ffff80000010ab11:	6a 00                	pushq  $0x0$/;"	l
ffff80000010ab13	kernel.asm	/^ffff80000010ab13:	68 89 00 00 00       	pushq  $0x89$/;"	l
ffff80000010ab18	kernel.asm	/^ffff80000010ab18:	e9 78 f1 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010ab1d	kernel.asm	/^ffff80000010ab1d <vector138>:$/;"	l
ffff80000010ab1d	kernel.asm	/^ffff80000010ab1d:	6a 00                	pushq  $0x0$/;"	l
ffff80000010ab1f	kernel.asm	/^ffff80000010ab1f:	68 8a 00 00 00       	pushq  $0x8a$/;"	l
ffff80000010ab24	kernel.asm	/^ffff80000010ab24:	e9 6c f1 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010ab29	kernel.asm	/^ffff80000010ab29 <vector139>:$/;"	l
ffff80000010ab29	kernel.asm	/^ffff80000010ab29:	6a 00                	pushq  $0x0$/;"	l
ffff80000010ab2b	kernel.asm	/^ffff80000010ab2b:	68 8b 00 00 00       	pushq  $0x8b$/;"	l
ffff80000010ab30	kernel.asm	/^ffff80000010ab30:	e9 60 f1 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010ab35	kernel.asm	/^ffff80000010ab35 <vector140>:$/;"	l
ffff80000010ab35	kernel.asm	/^ffff80000010ab35:	6a 00                	pushq  $0x0$/;"	l
ffff80000010ab37	kernel.asm	/^ffff80000010ab37:	68 8c 00 00 00       	pushq  $0x8c$/;"	l
ffff80000010ab3c	kernel.asm	/^ffff80000010ab3c:	e9 54 f1 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010ab41	kernel.asm	/^ffff80000010ab41 <vector141>:$/;"	l
ffff80000010ab41	kernel.asm	/^ffff80000010ab41:	6a 00                	pushq  $0x0$/;"	l
ffff80000010ab43	kernel.asm	/^ffff80000010ab43:	68 8d 00 00 00       	pushq  $0x8d$/;"	l
ffff80000010ab48	kernel.asm	/^ffff80000010ab48:	e9 48 f1 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010ab4d	kernel.asm	/^ffff80000010ab4d <vector142>:$/;"	l
ffff80000010ab4d	kernel.asm	/^ffff80000010ab4d:	6a 00                	pushq  $0x0$/;"	l
ffff80000010ab4f	kernel.asm	/^ffff80000010ab4f:	68 8e 00 00 00       	pushq  $0x8e$/;"	l
ffff80000010ab54	kernel.asm	/^ffff80000010ab54:	e9 3c f1 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010ab59	kernel.asm	/^ffff80000010ab59 <vector143>:$/;"	l
ffff80000010ab59	kernel.asm	/^ffff80000010ab59:	6a 00                	pushq  $0x0$/;"	l
ffff80000010ab5b	kernel.asm	/^ffff80000010ab5b:	68 8f 00 00 00       	pushq  $0x8f$/;"	l
ffff80000010ab60	kernel.asm	/^ffff80000010ab60:	e9 30 f1 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010ab65	kernel.asm	/^ffff80000010ab65 <vector144>:$/;"	l
ffff80000010ab65	kernel.asm	/^ffff80000010ab65:	6a 00                	pushq  $0x0$/;"	l
ffff80000010ab67	kernel.asm	/^ffff80000010ab67:	68 90 00 00 00       	pushq  $0x90$/;"	l
ffff80000010ab6c	kernel.asm	/^ffff80000010ab6c:	e9 24 f1 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010ab71	kernel.asm	/^ffff80000010ab71 <vector145>:$/;"	l
ffff80000010ab71	kernel.asm	/^ffff80000010ab71:	6a 00                	pushq  $0x0$/;"	l
ffff80000010ab73	kernel.asm	/^ffff80000010ab73:	68 91 00 00 00       	pushq  $0x91$/;"	l
ffff80000010ab78	kernel.asm	/^ffff80000010ab78:	e9 18 f1 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010ab7d	kernel.asm	/^ffff80000010ab7d <vector146>:$/;"	l
ffff80000010ab7d	kernel.asm	/^ffff80000010ab7d:	6a 00                	pushq  $0x0$/;"	l
ffff80000010ab7f	kernel.asm	/^ffff80000010ab7f:	68 92 00 00 00       	pushq  $0x92$/;"	l
ffff80000010ab84	kernel.asm	/^ffff80000010ab84:	e9 0c f1 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010ab89	kernel.asm	/^ffff80000010ab89 <vector147>:$/;"	l
ffff80000010ab89	kernel.asm	/^ffff80000010ab89:	6a 00                	pushq  $0x0$/;"	l
ffff80000010ab8b	kernel.asm	/^ffff80000010ab8b:	68 93 00 00 00       	pushq  $0x93$/;"	l
ffff80000010ab90	kernel.asm	/^ffff80000010ab90:	e9 00 f1 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010ab95	kernel.asm	/^ffff80000010ab95 <vector148>:$/;"	l
ffff80000010ab95	kernel.asm	/^ffff80000010ab95:	6a 00                	pushq  $0x0$/;"	l
ffff80000010ab97	kernel.asm	/^ffff80000010ab97:	68 94 00 00 00       	pushq  $0x94$/;"	l
ffff80000010ab9c	kernel.asm	/^ffff80000010ab9c:	e9 f4 f0 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010aba1	kernel.asm	/^ffff80000010aba1 <vector149>:$/;"	l
ffff80000010aba1	kernel.asm	/^ffff80000010aba1:	6a 00                	pushq  $0x0$/;"	l
ffff80000010aba3	kernel.asm	/^ffff80000010aba3:	68 95 00 00 00       	pushq  $0x95$/;"	l
ffff80000010aba8	kernel.asm	/^ffff80000010aba8:	e9 e8 f0 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010abad	kernel.asm	/^ffff80000010abad <vector150>:$/;"	l
ffff80000010abad	kernel.asm	/^ffff80000010abad:	6a 00                	pushq  $0x0$/;"	l
ffff80000010abaf	kernel.asm	/^ffff80000010abaf:	68 96 00 00 00       	pushq  $0x96$/;"	l
ffff80000010abb4	kernel.asm	/^ffff80000010abb4:	e9 dc f0 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010abb9	kernel.asm	/^ffff80000010abb9 <vector151>:$/;"	l
ffff80000010abb9	kernel.asm	/^ffff80000010abb9:	6a 00                	pushq  $0x0$/;"	l
ffff80000010abbb	kernel.asm	/^ffff80000010abbb:	68 97 00 00 00       	pushq  $0x97$/;"	l
ffff80000010abc0	kernel.asm	/^ffff80000010abc0:	e9 d0 f0 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010abc5	kernel.asm	/^ffff80000010abc5 <vector152>:$/;"	l
ffff80000010abc5	kernel.asm	/^ffff80000010abc5:	6a 00                	pushq  $0x0$/;"	l
ffff80000010abc7	kernel.asm	/^ffff80000010abc7:	68 98 00 00 00       	pushq  $0x98$/;"	l
ffff80000010abcc	kernel.asm	/^ffff80000010abcc:	e9 c4 f0 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010abd1	kernel.asm	/^ffff80000010abd1 <vector153>:$/;"	l
ffff80000010abd1	kernel.asm	/^ffff80000010abd1:	6a 00                	pushq  $0x0$/;"	l
ffff80000010abd3	kernel.asm	/^ffff80000010abd3:	68 99 00 00 00       	pushq  $0x99$/;"	l
ffff80000010abd8	kernel.asm	/^ffff80000010abd8:	e9 b8 f0 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010abdd	kernel.asm	/^ffff80000010abdd <vector154>:$/;"	l
ffff80000010abdd	kernel.asm	/^ffff80000010abdd:	6a 00                	pushq  $0x0$/;"	l
ffff80000010abdf	kernel.asm	/^ffff80000010abdf:	68 9a 00 00 00       	pushq  $0x9a$/;"	l
ffff80000010abe4	kernel.asm	/^ffff80000010abe4:	e9 ac f0 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010abe9	kernel.asm	/^ffff80000010abe9 <vector155>:$/;"	l
ffff80000010abe9	kernel.asm	/^ffff80000010abe9:	6a 00                	pushq  $0x0$/;"	l
ffff80000010abeb	kernel.asm	/^ffff80000010abeb:	68 9b 00 00 00       	pushq  $0x9b$/;"	l
ffff80000010abf0	kernel.asm	/^ffff80000010abf0:	e9 a0 f0 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010abf5	kernel.asm	/^ffff80000010abf5 <vector156>:$/;"	l
ffff80000010abf5	kernel.asm	/^ffff80000010abf5:	6a 00                	pushq  $0x0$/;"	l
ffff80000010abf7	kernel.asm	/^ffff80000010abf7:	68 9c 00 00 00       	pushq  $0x9c$/;"	l
ffff80000010abfc	kernel.asm	/^ffff80000010abfc:	e9 94 f0 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010ac01	kernel.asm	/^ffff80000010ac01 <vector157>:$/;"	l
ffff80000010ac01	kernel.asm	/^ffff80000010ac01:	6a 00                	pushq  $0x0$/;"	l
ffff80000010ac03	kernel.asm	/^ffff80000010ac03:	68 9d 00 00 00       	pushq  $0x9d$/;"	l
ffff80000010ac08	kernel.asm	/^ffff80000010ac08:	e9 88 f0 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010ac0d	kernel.asm	/^ffff80000010ac0d <vector158>:$/;"	l
ffff80000010ac0d	kernel.asm	/^ffff80000010ac0d:	6a 00                	pushq  $0x0$/;"	l
ffff80000010ac0f	kernel.asm	/^ffff80000010ac0f:	68 9e 00 00 00       	pushq  $0x9e$/;"	l
ffff80000010ac14	kernel.asm	/^ffff80000010ac14:	e9 7c f0 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010ac19	kernel.asm	/^ffff80000010ac19 <vector159>:$/;"	l
ffff80000010ac19	kernel.asm	/^ffff80000010ac19:	6a 00                	pushq  $0x0$/;"	l
ffff80000010ac1b	kernel.asm	/^ffff80000010ac1b:	68 9f 00 00 00       	pushq  $0x9f$/;"	l
ffff80000010ac20	kernel.asm	/^ffff80000010ac20:	e9 70 f0 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010ac25	kernel.asm	/^ffff80000010ac25 <vector160>:$/;"	l
ffff80000010ac25	kernel.asm	/^ffff80000010ac25:	6a 00                	pushq  $0x0$/;"	l
ffff80000010ac27	kernel.asm	/^ffff80000010ac27:	68 a0 00 00 00       	pushq  $0xa0$/;"	l
ffff80000010ac2c	kernel.asm	/^ffff80000010ac2c:	e9 64 f0 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010ac31	kernel.asm	/^ffff80000010ac31 <vector161>:$/;"	l
ffff80000010ac31	kernel.asm	/^ffff80000010ac31:	6a 00                	pushq  $0x0$/;"	l
ffff80000010ac33	kernel.asm	/^ffff80000010ac33:	68 a1 00 00 00       	pushq  $0xa1$/;"	l
ffff80000010ac38	kernel.asm	/^ffff80000010ac38:	e9 58 f0 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010ac3d	kernel.asm	/^ffff80000010ac3d <vector162>:$/;"	l
ffff80000010ac3d	kernel.asm	/^ffff80000010ac3d:	6a 00                	pushq  $0x0$/;"	l
ffff80000010ac3f	kernel.asm	/^ffff80000010ac3f:	68 a2 00 00 00       	pushq  $0xa2$/;"	l
ffff80000010ac44	kernel.asm	/^ffff80000010ac44:	e9 4c f0 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010ac49	kernel.asm	/^ffff80000010ac49 <vector163>:$/;"	l
ffff80000010ac49	kernel.asm	/^ffff80000010ac49:	6a 00                	pushq  $0x0$/;"	l
ffff80000010ac4b	kernel.asm	/^ffff80000010ac4b:	68 a3 00 00 00       	pushq  $0xa3$/;"	l
ffff80000010ac50	kernel.asm	/^ffff80000010ac50:	e9 40 f0 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010ac55	kernel.asm	/^ffff80000010ac55 <vector164>:$/;"	l
ffff80000010ac55	kernel.asm	/^ffff80000010ac55:	6a 00                	pushq  $0x0$/;"	l
ffff80000010ac57	kernel.asm	/^ffff80000010ac57:	68 a4 00 00 00       	pushq  $0xa4$/;"	l
ffff80000010ac5c	kernel.asm	/^ffff80000010ac5c:	e9 34 f0 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010ac61	kernel.asm	/^ffff80000010ac61 <vector165>:$/;"	l
ffff80000010ac61	kernel.asm	/^ffff80000010ac61:	6a 00                	pushq  $0x0$/;"	l
ffff80000010ac63	kernel.asm	/^ffff80000010ac63:	68 a5 00 00 00       	pushq  $0xa5$/;"	l
ffff80000010ac68	kernel.asm	/^ffff80000010ac68:	e9 28 f0 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010ac6d	kernel.asm	/^ffff80000010ac6d <vector166>:$/;"	l
ffff80000010ac6d	kernel.asm	/^ffff80000010ac6d:	6a 00                	pushq  $0x0$/;"	l
ffff80000010ac6f	kernel.asm	/^ffff80000010ac6f:	68 a6 00 00 00       	pushq  $0xa6$/;"	l
ffff80000010ac74	kernel.asm	/^ffff80000010ac74:	e9 1c f0 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010ac79	kernel.asm	/^ffff80000010ac79 <vector167>:$/;"	l
ffff80000010ac79	kernel.asm	/^ffff80000010ac79:	6a 00                	pushq  $0x0$/;"	l
ffff80000010ac7b	kernel.asm	/^ffff80000010ac7b:	68 a7 00 00 00       	pushq  $0xa7$/;"	l
ffff80000010ac80	kernel.asm	/^ffff80000010ac80:	e9 10 f0 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010ac85	kernel.asm	/^ffff80000010ac85 <vector168>:$/;"	l
ffff80000010ac85	kernel.asm	/^ffff80000010ac85:	6a 00                	pushq  $0x0$/;"	l
ffff80000010ac87	kernel.asm	/^ffff80000010ac87:	68 a8 00 00 00       	pushq  $0xa8$/;"	l
ffff80000010ac8c	kernel.asm	/^ffff80000010ac8c:	e9 04 f0 ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010ac91	kernel.asm	/^ffff80000010ac91 <vector169>:$/;"	l
ffff80000010ac91	kernel.asm	/^ffff80000010ac91:	6a 00                	pushq  $0x0$/;"	l
ffff80000010ac93	kernel.asm	/^ffff80000010ac93:	68 a9 00 00 00       	pushq  $0xa9$/;"	l
ffff80000010ac98	kernel.asm	/^ffff80000010ac98:	e9 f8 ef ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010ac9d	kernel.asm	/^ffff80000010ac9d <vector170>:$/;"	l
ffff80000010ac9d	kernel.asm	/^ffff80000010ac9d:	6a 00                	pushq  $0x0$/;"	l
ffff80000010ac9f	kernel.asm	/^ffff80000010ac9f:	68 aa 00 00 00       	pushq  $0xaa$/;"	l
ffff80000010aca4	kernel.asm	/^ffff80000010aca4:	e9 ec ef ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010aca9	kernel.asm	/^ffff80000010aca9 <vector171>:$/;"	l
ffff80000010aca9	kernel.asm	/^ffff80000010aca9:	6a 00                	pushq  $0x0$/;"	l
ffff80000010acab	kernel.asm	/^ffff80000010acab:	68 ab 00 00 00       	pushq  $0xab$/;"	l
ffff80000010acb0	kernel.asm	/^ffff80000010acb0:	e9 e0 ef ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010acb5	kernel.asm	/^ffff80000010acb5 <vector172>:$/;"	l
ffff80000010acb5	kernel.asm	/^ffff80000010acb5:	6a 00                	pushq  $0x0$/;"	l
ffff80000010acb7	kernel.asm	/^ffff80000010acb7:	68 ac 00 00 00       	pushq  $0xac$/;"	l
ffff80000010acbc	kernel.asm	/^ffff80000010acbc:	e9 d4 ef ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010acc1	kernel.asm	/^ffff80000010acc1 <vector173>:$/;"	l
ffff80000010acc1	kernel.asm	/^ffff80000010acc1:	6a 00                	pushq  $0x0$/;"	l
ffff80000010acc3	kernel.asm	/^ffff80000010acc3:	68 ad 00 00 00       	pushq  $0xad$/;"	l
ffff80000010acc8	kernel.asm	/^ffff80000010acc8:	e9 c8 ef ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010accd	kernel.asm	/^ffff80000010accd <vector174>:$/;"	l
ffff80000010accd	kernel.asm	/^ffff80000010accd:	6a 00                	pushq  $0x0$/;"	l
ffff80000010accf	kernel.asm	/^ffff80000010accf:	68 ae 00 00 00       	pushq  $0xae$/;"	l
ffff80000010acd4	kernel.asm	/^ffff80000010acd4:	e9 bc ef ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010acd9	kernel.asm	/^ffff80000010acd9 <vector175>:$/;"	l
ffff80000010acd9	kernel.asm	/^ffff80000010acd9:	6a 00                	pushq  $0x0$/;"	l
ffff80000010acdb	kernel.asm	/^ffff80000010acdb:	68 af 00 00 00       	pushq  $0xaf$/;"	l
ffff80000010ace0	kernel.asm	/^ffff80000010ace0:	e9 b0 ef ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010ace5	kernel.asm	/^ffff80000010ace5 <vector176>:$/;"	l
ffff80000010ace5	kernel.asm	/^ffff80000010ace5:	6a 00                	pushq  $0x0$/;"	l
ffff80000010ace7	kernel.asm	/^ffff80000010ace7:	68 b0 00 00 00       	pushq  $0xb0$/;"	l
ffff80000010acec	kernel.asm	/^ffff80000010acec:	e9 a4 ef ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010acf1	kernel.asm	/^ffff80000010acf1 <vector177>:$/;"	l
ffff80000010acf1	kernel.asm	/^ffff80000010acf1:	6a 00                	pushq  $0x0$/;"	l
ffff80000010acf3	kernel.asm	/^ffff80000010acf3:	68 b1 00 00 00       	pushq  $0xb1$/;"	l
ffff80000010acf8	kernel.asm	/^ffff80000010acf8:	e9 98 ef ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010acfd	kernel.asm	/^ffff80000010acfd <vector178>:$/;"	l
ffff80000010acfd	kernel.asm	/^ffff80000010acfd:	6a 00                	pushq  $0x0$/;"	l
ffff80000010acff	kernel.asm	/^ffff80000010acff:	68 b2 00 00 00       	pushq  $0xb2$/;"	l
ffff80000010ad04	kernel.asm	/^ffff80000010ad04:	e9 8c ef ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010ad09	kernel.asm	/^ffff80000010ad09 <vector179>:$/;"	l
ffff80000010ad09	kernel.asm	/^ffff80000010ad09:	6a 00                	pushq  $0x0$/;"	l
ffff80000010ad0b	kernel.asm	/^ffff80000010ad0b:	68 b3 00 00 00       	pushq  $0xb3$/;"	l
ffff80000010ad10	kernel.asm	/^ffff80000010ad10:	e9 80 ef ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010ad15	kernel.asm	/^ffff80000010ad15 <vector180>:$/;"	l
ffff80000010ad15	kernel.asm	/^ffff80000010ad15:	6a 00                	pushq  $0x0$/;"	l
ffff80000010ad17	kernel.asm	/^ffff80000010ad17:	68 b4 00 00 00       	pushq  $0xb4$/;"	l
ffff80000010ad1c	kernel.asm	/^ffff80000010ad1c:	e9 74 ef ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010ad21	kernel.asm	/^ffff80000010ad21 <vector181>:$/;"	l
ffff80000010ad21	kernel.asm	/^ffff80000010ad21:	6a 00                	pushq  $0x0$/;"	l
ffff80000010ad23	kernel.asm	/^ffff80000010ad23:	68 b5 00 00 00       	pushq  $0xb5$/;"	l
ffff80000010ad28	kernel.asm	/^ffff80000010ad28:	e9 68 ef ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010ad2d	kernel.asm	/^ffff80000010ad2d <vector182>:$/;"	l
ffff80000010ad2d	kernel.asm	/^ffff80000010ad2d:	6a 00                	pushq  $0x0$/;"	l
ffff80000010ad2f	kernel.asm	/^ffff80000010ad2f:	68 b6 00 00 00       	pushq  $0xb6$/;"	l
ffff80000010ad34	kernel.asm	/^ffff80000010ad34:	e9 5c ef ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010ad39	kernel.asm	/^ffff80000010ad39 <vector183>:$/;"	l
ffff80000010ad39	kernel.asm	/^ffff80000010ad39:	6a 00                	pushq  $0x0$/;"	l
ffff80000010ad3b	kernel.asm	/^ffff80000010ad3b:	68 b7 00 00 00       	pushq  $0xb7$/;"	l
ffff80000010ad40	kernel.asm	/^ffff80000010ad40:	e9 50 ef ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010ad45	kernel.asm	/^ffff80000010ad45 <vector184>:$/;"	l
ffff80000010ad45	kernel.asm	/^ffff80000010ad45:	6a 00                	pushq  $0x0$/;"	l
ffff80000010ad47	kernel.asm	/^ffff80000010ad47:	68 b8 00 00 00       	pushq  $0xb8$/;"	l
ffff80000010ad4c	kernel.asm	/^ffff80000010ad4c:	e9 44 ef ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010ad51	kernel.asm	/^ffff80000010ad51 <vector185>:$/;"	l
ffff80000010ad51	kernel.asm	/^ffff80000010ad51:	6a 00                	pushq  $0x0$/;"	l
ffff80000010ad53	kernel.asm	/^ffff80000010ad53:	68 b9 00 00 00       	pushq  $0xb9$/;"	l
ffff80000010ad58	kernel.asm	/^ffff80000010ad58:	e9 38 ef ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010ad5d	kernel.asm	/^ffff80000010ad5d <vector186>:$/;"	l
ffff80000010ad5d	kernel.asm	/^ffff80000010ad5d:	6a 00                	pushq  $0x0$/;"	l
ffff80000010ad5f	kernel.asm	/^ffff80000010ad5f:	68 ba 00 00 00       	pushq  $0xba$/;"	l
ffff80000010ad64	kernel.asm	/^ffff80000010ad64:	e9 2c ef ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010ad69	kernel.asm	/^ffff80000010ad69 <vector187>:$/;"	l
ffff80000010ad69	kernel.asm	/^ffff80000010ad69:	6a 00                	pushq  $0x0$/;"	l
ffff80000010ad6b	kernel.asm	/^ffff80000010ad6b:	68 bb 00 00 00       	pushq  $0xbb$/;"	l
ffff80000010ad70	kernel.asm	/^ffff80000010ad70:	e9 20 ef ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010ad75	kernel.asm	/^ffff80000010ad75 <vector188>:$/;"	l
ffff80000010ad75	kernel.asm	/^ffff80000010ad75:	6a 00                	pushq  $0x0$/;"	l
ffff80000010ad77	kernel.asm	/^ffff80000010ad77:	68 bc 00 00 00       	pushq  $0xbc$/;"	l
ffff80000010ad7c	kernel.asm	/^ffff80000010ad7c:	e9 14 ef ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010ad81	kernel.asm	/^ffff80000010ad81 <vector189>:$/;"	l
ffff80000010ad81	kernel.asm	/^ffff80000010ad81:	6a 00                	pushq  $0x0$/;"	l
ffff80000010ad83	kernel.asm	/^ffff80000010ad83:	68 bd 00 00 00       	pushq  $0xbd$/;"	l
ffff80000010ad88	kernel.asm	/^ffff80000010ad88:	e9 08 ef ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010ad8d	kernel.asm	/^ffff80000010ad8d <vector190>:$/;"	l
ffff80000010ad8d	kernel.asm	/^ffff80000010ad8d:	6a 00                	pushq  $0x0$/;"	l
ffff80000010ad8f	kernel.asm	/^ffff80000010ad8f:	68 be 00 00 00       	pushq  $0xbe$/;"	l
ffff80000010ad94	kernel.asm	/^ffff80000010ad94:	e9 fc ee ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010ad99	kernel.asm	/^ffff80000010ad99 <vector191>:$/;"	l
ffff80000010ad99	kernel.asm	/^ffff80000010ad99:	6a 00                	pushq  $0x0$/;"	l
ffff80000010ad9b	kernel.asm	/^ffff80000010ad9b:	68 bf 00 00 00       	pushq  $0xbf$/;"	l
ffff80000010ada0	kernel.asm	/^ffff80000010ada0:	e9 f0 ee ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010ada5	kernel.asm	/^ffff80000010ada5 <vector192>:$/;"	l
ffff80000010ada5	kernel.asm	/^ffff80000010ada5:	6a 00                	pushq  $0x0$/;"	l
ffff80000010ada7	kernel.asm	/^ffff80000010ada7:	68 c0 00 00 00       	pushq  $0xc0$/;"	l
ffff80000010adac	kernel.asm	/^ffff80000010adac:	e9 e4 ee ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010adb1	kernel.asm	/^ffff80000010adb1 <vector193>:$/;"	l
ffff80000010adb1	kernel.asm	/^ffff80000010adb1:	6a 00                	pushq  $0x0$/;"	l
ffff80000010adb3	kernel.asm	/^ffff80000010adb3:	68 c1 00 00 00       	pushq  $0xc1$/;"	l
ffff80000010adb8	kernel.asm	/^ffff80000010adb8:	e9 d8 ee ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010adbd	kernel.asm	/^ffff80000010adbd <vector194>:$/;"	l
ffff80000010adbd	kernel.asm	/^ffff80000010adbd:	6a 00                	pushq  $0x0$/;"	l
ffff80000010adbf	kernel.asm	/^ffff80000010adbf:	68 c2 00 00 00       	pushq  $0xc2$/;"	l
ffff80000010adc4	kernel.asm	/^ffff80000010adc4:	e9 cc ee ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010adc9	kernel.asm	/^ffff80000010adc9 <vector195>:$/;"	l
ffff80000010adc9	kernel.asm	/^ffff80000010adc9:	6a 00                	pushq  $0x0$/;"	l
ffff80000010adcb	kernel.asm	/^ffff80000010adcb:	68 c3 00 00 00       	pushq  $0xc3$/;"	l
ffff80000010add0	kernel.asm	/^ffff80000010add0:	e9 c0 ee ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010add5	kernel.asm	/^ffff80000010add5 <vector196>:$/;"	l
ffff80000010add5	kernel.asm	/^ffff80000010add5:	6a 00                	pushq  $0x0$/;"	l
ffff80000010add7	kernel.asm	/^ffff80000010add7:	68 c4 00 00 00       	pushq  $0xc4$/;"	l
ffff80000010addc	kernel.asm	/^ffff80000010addc:	e9 b4 ee ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010ade1	kernel.asm	/^ffff80000010ade1 <vector197>:$/;"	l
ffff80000010ade1	kernel.asm	/^ffff80000010ade1:	6a 00                	pushq  $0x0$/;"	l
ffff80000010ade3	kernel.asm	/^ffff80000010ade3:	68 c5 00 00 00       	pushq  $0xc5$/;"	l
ffff80000010ade8	kernel.asm	/^ffff80000010ade8:	e9 a8 ee ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010aded	kernel.asm	/^ffff80000010aded <vector198>:$/;"	l
ffff80000010aded	kernel.asm	/^ffff80000010aded:	6a 00                	pushq  $0x0$/;"	l
ffff80000010adef	kernel.asm	/^ffff80000010adef:	68 c6 00 00 00       	pushq  $0xc6$/;"	l
ffff80000010adf4	kernel.asm	/^ffff80000010adf4:	e9 9c ee ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010adf9	kernel.asm	/^ffff80000010adf9 <vector199>:$/;"	l
ffff80000010adf9	kernel.asm	/^ffff80000010adf9:	6a 00                	pushq  $0x0$/;"	l
ffff80000010adfb	kernel.asm	/^ffff80000010adfb:	68 c7 00 00 00       	pushq  $0xc7$/;"	l
ffff80000010ae00	kernel.asm	/^ffff80000010ae00:	e9 90 ee ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010ae05	kernel.asm	/^ffff80000010ae05 <vector200>:$/;"	l
ffff80000010ae05	kernel.asm	/^ffff80000010ae05:	6a 00                	pushq  $0x0$/;"	l
ffff80000010ae07	kernel.asm	/^ffff80000010ae07:	68 c8 00 00 00       	pushq  $0xc8$/;"	l
ffff80000010ae0c	kernel.asm	/^ffff80000010ae0c:	e9 84 ee ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010ae11	kernel.asm	/^ffff80000010ae11 <vector201>:$/;"	l
ffff80000010ae11	kernel.asm	/^ffff80000010ae11:	6a 00                	pushq  $0x0$/;"	l
ffff80000010ae13	kernel.asm	/^ffff80000010ae13:	68 c9 00 00 00       	pushq  $0xc9$/;"	l
ffff80000010ae18	kernel.asm	/^ffff80000010ae18:	e9 78 ee ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010ae1d	kernel.asm	/^ffff80000010ae1d <vector202>:$/;"	l
ffff80000010ae1d	kernel.asm	/^ffff80000010ae1d:	6a 00                	pushq  $0x0$/;"	l
ffff80000010ae1f	kernel.asm	/^ffff80000010ae1f:	68 ca 00 00 00       	pushq  $0xca$/;"	l
ffff80000010ae24	kernel.asm	/^ffff80000010ae24:	e9 6c ee ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010ae29	kernel.asm	/^ffff80000010ae29 <vector203>:$/;"	l
ffff80000010ae29	kernel.asm	/^ffff80000010ae29:	6a 00                	pushq  $0x0$/;"	l
ffff80000010ae2b	kernel.asm	/^ffff80000010ae2b:	68 cb 00 00 00       	pushq  $0xcb$/;"	l
ffff80000010ae30	kernel.asm	/^ffff80000010ae30:	e9 60 ee ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010ae35	kernel.asm	/^ffff80000010ae35 <vector204>:$/;"	l
ffff80000010ae35	kernel.asm	/^ffff80000010ae35:	6a 00                	pushq  $0x0$/;"	l
ffff80000010ae37	kernel.asm	/^ffff80000010ae37:	68 cc 00 00 00       	pushq  $0xcc$/;"	l
ffff80000010ae3c	kernel.asm	/^ffff80000010ae3c:	e9 54 ee ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010ae41	kernel.asm	/^ffff80000010ae41 <vector205>:$/;"	l
ffff80000010ae41	kernel.asm	/^ffff80000010ae41:	6a 00                	pushq  $0x0$/;"	l
ffff80000010ae43	kernel.asm	/^ffff80000010ae43:	68 cd 00 00 00       	pushq  $0xcd$/;"	l
ffff80000010ae48	kernel.asm	/^ffff80000010ae48:	e9 48 ee ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010ae4d	kernel.asm	/^ffff80000010ae4d <vector206>:$/;"	l
ffff80000010ae4d	kernel.asm	/^ffff80000010ae4d:	6a 00                	pushq  $0x0$/;"	l
ffff80000010ae4f	kernel.asm	/^ffff80000010ae4f:	68 ce 00 00 00       	pushq  $0xce$/;"	l
ffff80000010ae54	kernel.asm	/^ffff80000010ae54:	e9 3c ee ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010ae59	kernel.asm	/^ffff80000010ae59 <vector207>:$/;"	l
ffff80000010ae59	kernel.asm	/^ffff80000010ae59:	6a 00                	pushq  $0x0$/;"	l
ffff80000010ae5b	kernel.asm	/^ffff80000010ae5b:	68 cf 00 00 00       	pushq  $0xcf$/;"	l
ffff80000010ae60	kernel.asm	/^ffff80000010ae60:	e9 30 ee ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010ae65	kernel.asm	/^ffff80000010ae65 <vector208>:$/;"	l
ffff80000010ae65	kernel.asm	/^ffff80000010ae65:	6a 00                	pushq  $0x0$/;"	l
ffff80000010ae67	kernel.asm	/^ffff80000010ae67:	68 d0 00 00 00       	pushq  $0xd0$/;"	l
ffff80000010ae6c	kernel.asm	/^ffff80000010ae6c:	e9 24 ee ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010ae71	kernel.asm	/^ffff80000010ae71 <vector209>:$/;"	l
ffff80000010ae71	kernel.asm	/^ffff80000010ae71:	6a 00                	pushq  $0x0$/;"	l
ffff80000010ae73	kernel.asm	/^ffff80000010ae73:	68 d1 00 00 00       	pushq  $0xd1$/;"	l
ffff80000010ae78	kernel.asm	/^ffff80000010ae78:	e9 18 ee ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010ae7d	kernel.asm	/^ffff80000010ae7d <vector210>:$/;"	l
ffff80000010ae7d	kernel.asm	/^ffff80000010ae7d:	6a 00                	pushq  $0x0$/;"	l
ffff80000010ae7f	kernel.asm	/^ffff80000010ae7f:	68 d2 00 00 00       	pushq  $0xd2$/;"	l
ffff80000010ae84	kernel.asm	/^ffff80000010ae84:	e9 0c ee ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010ae89	kernel.asm	/^ffff80000010ae89 <vector211>:$/;"	l
ffff80000010ae89	kernel.asm	/^ffff80000010ae89:	6a 00                	pushq  $0x0$/;"	l
ffff80000010ae8b	kernel.asm	/^ffff80000010ae8b:	68 d3 00 00 00       	pushq  $0xd3$/;"	l
ffff80000010ae90	kernel.asm	/^ffff80000010ae90:	e9 00 ee ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010ae95	kernel.asm	/^ffff80000010ae95 <vector212>:$/;"	l
ffff80000010ae95	kernel.asm	/^ffff80000010ae95:	6a 00                	pushq  $0x0$/;"	l
ffff80000010ae97	kernel.asm	/^ffff80000010ae97:	68 d4 00 00 00       	pushq  $0xd4$/;"	l
ffff80000010ae9c	kernel.asm	/^ffff80000010ae9c:	e9 f4 ed ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010aea1	kernel.asm	/^ffff80000010aea1 <vector213>:$/;"	l
ffff80000010aea1	kernel.asm	/^ffff80000010aea1:	6a 00                	pushq  $0x0$/;"	l
ffff80000010aea3	kernel.asm	/^ffff80000010aea3:	68 d5 00 00 00       	pushq  $0xd5$/;"	l
ffff80000010aea8	kernel.asm	/^ffff80000010aea8:	e9 e8 ed ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010aead	kernel.asm	/^ffff80000010aead <vector214>:$/;"	l
ffff80000010aead	kernel.asm	/^ffff80000010aead:	6a 00                	pushq  $0x0$/;"	l
ffff80000010aeaf	kernel.asm	/^ffff80000010aeaf:	68 d6 00 00 00       	pushq  $0xd6$/;"	l
ffff80000010aeb4	kernel.asm	/^ffff80000010aeb4:	e9 dc ed ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010aeb9	kernel.asm	/^ffff80000010aeb9 <vector215>:$/;"	l
ffff80000010aeb9	kernel.asm	/^ffff80000010aeb9:	6a 00                	pushq  $0x0$/;"	l
ffff80000010aebb	kernel.asm	/^ffff80000010aebb:	68 d7 00 00 00       	pushq  $0xd7$/;"	l
ffff80000010aec0	kernel.asm	/^ffff80000010aec0:	e9 d0 ed ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010aec5	kernel.asm	/^ffff80000010aec5 <vector216>:$/;"	l
ffff80000010aec5	kernel.asm	/^ffff80000010aec5:	6a 00                	pushq  $0x0$/;"	l
ffff80000010aec7	kernel.asm	/^ffff80000010aec7:	68 d8 00 00 00       	pushq  $0xd8$/;"	l
ffff80000010aecc	kernel.asm	/^ffff80000010aecc:	e9 c4 ed ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010aed1	kernel.asm	/^ffff80000010aed1 <vector217>:$/;"	l
ffff80000010aed1	kernel.asm	/^ffff80000010aed1:	6a 00                	pushq  $0x0$/;"	l
ffff80000010aed3	kernel.asm	/^ffff80000010aed3:	68 d9 00 00 00       	pushq  $0xd9$/;"	l
ffff80000010aed8	kernel.asm	/^ffff80000010aed8:	e9 b8 ed ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010aedd	kernel.asm	/^ffff80000010aedd <vector218>:$/;"	l
ffff80000010aedd	kernel.asm	/^ffff80000010aedd:	6a 00                	pushq  $0x0$/;"	l
ffff80000010aedf	kernel.asm	/^ffff80000010aedf:	68 da 00 00 00       	pushq  $0xda$/;"	l
ffff80000010aee4	kernel.asm	/^ffff80000010aee4:	e9 ac ed ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010aee9	kernel.asm	/^ffff80000010aee9 <vector219>:$/;"	l
ffff80000010aee9	kernel.asm	/^ffff80000010aee9:	6a 00                	pushq  $0x0$/;"	l
ffff80000010aeeb	kernel.asm	/^ffff80000010aeeb:	68 db 00 00 00       	pushq  $0xdb$/;"	l
ffff80000010aef0	kernel.asm	/^ffff80000010aef0:	e9 a0 ed ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010aef5	kernel.asm	/^ffff80000010aef5 <vector220>:$/;"	l
ffff80000010aef5	kernel.asm	/^ffff80000010aef5:	6a 00                	pushq  $0x0$/;"	l
ffff80000010aef7	kernel.asm	/^ffff80000010aef7:	68 dc 00 00 00       	pushq  $0xdc$/;"	l
ffff80000010aefc	kernel.asm	/^ffff80000010aefc:	e9 94 ed ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010af01	kernel.asm	/^ffff80000010af01 <vector221>:$/;"	l
ffff80000010af01	kernel.asm	/^ffff80000010af01:	6a 00                	pushq  $0x0$/;"	l
ffff80000010af03	kernel.asm	/^ffff80000010af03:	68 dd 00 00 00       	pushq  $0xdd$/;"	l
ffff80000010af08	kernel.asm	/^ffff80000010af08:	e9 88 ed ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010af0d	kernel.asm	/^ffff80000010af0d <vector222>:$/;"	l
ffff80000010af0d	kernel.asm	/^ffff80000010af0d:	6a 00                	pushq  $0x0$/;"	l
ffff80000010af0f	kernel.asm	/^ffff80000010af0f:	68 de 00 00 00       	pushq  $0xde$/;"	l
ffff80000010af14	kernel.asm	/^ffff80000010af14:	e9 7c ed ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010af19	kernel.asm	/^ffff80000010af19 <vector223>:$/;"	l
ffff80000010af19	kernel.asm	/^ffff80000010af19:	6a 00                	pushq  $0x0$/;"	l
ffff80000010af1b	kernel.asm	/^ffff80000010af1b:	68 df 00 00 00       	pushq  $0xdf$/;"	l
ffff80000010af20	kernel.asm	/^ffff80000010af20:	e9 70 ed ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010af25	kernel.asm	/^ffff80000010af25 <vector224>:$/;"	l
ffff80000010af25	kernel.asm	/^ffff80000010af25:	6a 00                	pushq  $0x0$/;"	l
ffff80000010af27	kernel.asm	/^ffff80000010af27:	68 e0 00 00 00       	pushq  $0xe0$/;"	l
ffff80000010af2c	kernel.asm	/^ffff80000010af2c:	e9 64 ed ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010af31	kernel.asm	/^ffff80000010af31 <vector225>:$/;"	l
ffff80000010af31	kernel.asm	/^ffff80000010af31:	6a 00                	pushq  $0x0$/;"	l
ffff80000010af33	kernel.asm	/^ffff80000010af33:	68 e1 00 00 00       	pushq  $0xe1$/;"	l
ffff80000010af38	kernel.asm	/^ffff80000010af38:	e9 58 ed ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010af3d	kernel.asm	/^ffff80000010af3d <vector226>:$/;"	l
ffff80000010af3d	kernel.asm	/^ffff80000010af3d:	6a 00                	pushq  $0x0$/;"	l
ffff80000010af3f	kernel.asm	/^ffff80000010af3f:	68 e2 00 00 00       	pushq  $0xe2$/;"	l
ffff80000010af44	kernel.asm	/^ffff80000010af44:	e9 4c ed ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010af49	kernel.asm	/^ffff80000010af49 <vector227>:$/;"	l
ffff80000010af49	kernel.asm	/^ffff80000010af49:	6a 00                	pushq  $0x0$/;"	l
ffff80000010af4b	kernel.asm	/^ffff80000010af4b:	68 e3 00 00 00       	pushq  $0xe3$/;"	l
ffff80000010af50	kernel.asm	/^ffff80000010af50:	e9 40 ed ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010af55	kernel.asm	/^ffff80000010af55 <vector228>:$/;"	l
ffff80000010af55	kernel.asm	/^ffff80000010af55:	6a 00                	pushq  $0x0$/;"	l
ffff80000010af57	kernel.asm	/^ffff80000010af57:	68 e4 00 00 00       	pushq  $0xe4$/;"	l
ffff80000010af5c	kernel.asm	/^ffff80000010af5c:	e9 34 ed ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010af61	kernel.asm	/^ffff80000010af61 <vector229>:$/;"	l
ffff80000010af61	kernel.asm	/^ffff80000010af61:	6a 00                	pushq  $0x0$/;"	l
ffff80000010af63	kernel.asm	/^ffff80000010af63:	68 e5 00 00 00       	pushq  $0xe5$/;"	l
ffff80000010af68	kernel.asm	/^ffff80000010af68:	e9 28 ed ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010af6d	kernel.asm	/^ffff80000010af6d <vector230>:$/;"	l
ffff80000010af6d	kernel.asm	/^ffff80000010af6d:	6a 00                	pushq  $0x0$/;"	l
ffff80000010af6f	kernel.asm	/^ffff80000010af6f:	68 e6 00 00 00       	pushq  $0xe6$/;"	l
ffff80000010af74	kernel.asm	/^ffff80000010af74:	e9 1c ed ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010af79	kernel.asm	/^ffff80000010af79 <vector231>:$/;"	l
ffff80000010af79	kernel.asm	/^ffff80000010af79:	6a 00                	pushq  $0x0$/;"	l
ffff80000010af7b	kernel.asm	/^ffff80000010af7b:	68 e7 00 00 00       	pushq  $0xe7$/;"	l
ffff80000010af80	kernel.asm	/^ffff80000010af80:	e9 10 ed ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010af85	kernel.asm	/^ffff80000010af85 <vector232>:$/;"	l
ffff80000010af85	kernel.asm	/^ffff80000010af85:	6a 00                	pushq  $0x0$/;"	l
ffff80000010af87	kernel.asm	/^ffff80000010af87:	68 e8 00 00 00       	pushq  $0xe8$/;"	l
ffff80000010af8c	kernel.asm	/^ffff80000010af8c:	e9 04 ed ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010af91	kernel.asm	/^ffff80000010af91 <vector233>:$/;"	l
ffff80000010af91	kernel.asm	/^ffff80000010af91:	6a 00                	pushq  $0x0$/;"	l
ffff80000010af93	kernel.asm	/^ffff80000010af93:	68 e9 00 00 00       	pushq  $0xe9$/;"	l
ffff80000010af98	kernel.asm	/^ffff80000010af98:	e9 f8 ec ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010af9d	kernel.asm	/^ffff80000010af9d <vector234>:$/;"	l
ffff80000010af9d	kernel.asm	/^ffff80000010af9d:	6a 00                	pushq  $0x0$/;"	l
ffff80000010af9f	kernel.asm	/^ffff80000010af9f:	68 ea 00 00 00       	pushq  $0xea$/;"	l
ffff80000010afa4	kernel.asm	/^ffff80000010afa4:	e9 ec ec ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010afa9	kernel.asm	/^ffff80000010afa9 <vector235>:$/;"	l
ffff80000010afa9	kernel.asm	/^ffff80000010afa9:	6a 00                	pushq  $0x0$/;"	l
ffff80000010afab	kernel.asm	/^ffff80000010afab:	68 eb 00 00 00       	pushq  $0xeb$/;"	l
ffff80000010afb0	kernel.asm	/^ffff80000010afb0:	e9 e0 ec ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010afb5	kernel.asm	/^ffff80000010afb5 <vector236>:$/;"	l
ffff80000010afb5	kernel.asm	/^ffff80000010afb5:	6a 00                	pushq  $0x0$/;"	l
ffff80000010afb7	kernel.asm	/^ffff80000010afb7:	68 ec 00 00 00       	pushq  $0xec$/;"	l
ffff80000010afbc	kernel.asm	/^ffff80000010afbc:	e9 d4 ec ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010afc1	kernel.asm	/^ffff80000010afc1 <vector237>:$/;"	l
ffff80000010afc1	kernel.asm	/^ffff80000010afc1:	6a 00                	pushq  $0x0$/;"	l
ffff80000010afc3	kernel.asm	/^ffff80000010afc3:	68 ed 00 00 00       	pushq  $0xed$/;"	l
ffff80000010afc8	kernel.asm	/^ffff80000010afc8:	e9 c8 ec ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010afcd	kernel.asm	/^ffff80000010afcd <vector238>:$/;"	l
ffff80000010afcd	kernel.asm	/^ffff80000010afcd:	6a 00                	pushq  $0x0$/;"	l
ffff80000010afcf	kernel.asm	/^ffff80000010afcf:	68 ee 00 00 00       	pushq  $0xee$/;"	l
ffff80000010afd4	kernel.asm	/^ffff80000010afd4:	e9 bc ec ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010afd9	kernel.asm	/^ffff80000010afd9 <vector239>:$/;"	l
ffff80000010afd9	kernel.asm	/^ffff80000010afd9:	6a 00                	pushq  $0x0$/;"	l
ffff80000010afdb	kernel.asm	/^ffff80000010afdb:	68 ef 00 00 00       	pushq  $0xef$/;"	l
ffff80000010afe0	kernel.asm	/^ffff80000010afe0:	e9 b0 ec ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010afe5	kernel.asm	/^ffff80000010afe5 <vector240>:$/;"	l
ffff80000010afe5	kernel.asm	/^ffff80000010afe5:	6a 00                	pushq  $0x0$/;"	l
ffff80000010afe7	kernel.asm	/^ffff80000010afe7:	68 f0 00 00 00       	pushq  $0xf0$/;"	l
ffff80000010afec	kernel.asm	/^ffff80000010afec:	e9 a4 ec ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010aff1	kernel.asm	/^ffff80000010aff1 <vector241>:$/;"	l
ffff80000010aff1	kernel.asm	/^ffff80000010aff1:	6a 00                	pushq  $0x0$/;"	l
ffff80000010aff3	kernel.asm	/^ffff80000010aff3:	68 f1 00 00 00       	pushq  $0xf1$/;"	l
ffff80000010aff8	kernel.asm	/^ffff80000010aff8:	e9 98 ec ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010affd	kernel.asm	/^ffff80000010affd <vector242>:$/;"	l
ffff80000010affd	kernel.asm	/^ffff80000010affd:	6a 00                	pushq  $0x0$/;"	l
ffff80000010afff	kernel.asm	/^ffff80000010afff:	68 f2 00 00 00       	pushq  $0xf2$/;"	l
ffff80000010b004	kernel.asm	/^ffff80000010b004:	e9 8c ec ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010b009	kernel.asm	/^ffff80000010b009 <vector243>:$/;"	l
ffff80000010b009	kernel.asm	/^ffff80000010b009:	6a 00                	pushq  $0x0$/;"	l
ffff80000010b00b	kernel.asm	/^ffff80000010b00b:	68 f3 00 00 00       	pushq  $0xf3$/;"	l
ffff80000010b010	kernel.asm	/^ffff80000010b010:	e9 80 ec ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010b015	kernel.asm	/^ffff80000010b015 <vector244>:$/;"	l
ffff80000010b015	kernel.asm	/^ffff80000010b015:	6a 00                	pushq  $0x0$/;"	l
ffff80000010b017	kernel.asm	/^ffff80000010b017:	68 f4 00 00 00       	pushq  $0xf4$/;"	l
ffff80000010b01c	kernel.asm	/^ffff80000010b01c:	e9 74 ec ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010b021	kernel.asm	/^ffff80000010b021 <vector245>:$/;"	l
ffff80000010b021	kernel.asm	/^ffff80000010b021:	6a 00                	pushq  $0x0$/;"	l
ffff80000010b023	kernel.asm	/^ffff80000010b023:	68 f5 00 00 00       	pushq  $0xf5$/;"	l
ffff80000010b028	kernel.asm	/^ffff80000010b028:	e9 68 ec ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010b02d	kernel.asm	/^ffff80000010b02d <vector246>:$/;"	l
ffff80000010b02d	kernel.asm	/^ffff80000010b02d:	6a 00                	pushq  $0x0$/;"	l
ffff80000010b02f	kernel.asm	/^ffff80000010b02f:	68 f6 00 00 00       	pushq  $0xf6$/;"	l
ffff80000010b034	kernel.asm	/^ffff80000010b034:	e9 5c ec ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010b039	kernel.asm	/^ffff80000010b039 <vector247>:$/;"	l
ffff80000010b039	kernel.asm	/^ffff80000010b039:	6a 00                	pushq  $0x0$/;"	l
ffff80000010b03b	kernel.asm	/^ffff80000010b03b:	68 f7 00 00 00       	pushq  $0xf7$/;"	l
ffff80000010b040	kernel.asm	/^ffff80000010b040:	e9 50 ec ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010b045	kernel.asm	/^ffff80000010b045 <vector248>:$/;"	l
ffff80000010b045	kernel.asm	/^ffff80000010b045:	6a 00                	pushq  $0x0$/;"	l
ffff80000010b047	kernel.asm	/^ffff80000010b047:	68 f8 00 00 00       	pushq  $0xf8$/;"	l
ffff80000010b04c	kernel.asm	/^ffff80000010b04c:	e9 44 ec ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010b051	kernel.asm	/^ffff80000010b051 <vector249>:$/;"	l
ffff80000010b051	kernel.asm	/^ffff80000010b051:	6a 00                	pushq  $0x0$/;"	l
ffff80000010b053	kernel.asm	/^ffff80000010b053:	68 f9 00 00 00       	pushq  $0xf9$/;"	l
ffff80000010b058	kernel.asm	/^ffff80000010b058:	e9 38 ec ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010b05d	kernel.asm	/^ffff80000010b05d <vector250>:$/;"	l
ffff80000010b05d	kernel.asm	/^ffff80000010b05d:	6a 00                	pushq  $0x0$/;"	l
ffff80000010b05f	kernel.asm	/^ffff80000010b05f:	68 fa 00 00 00       	pushq  $0xfa$/;"	l
ffff80000010b064	kernel.asm	/^ffff80000010b064:	e9 2c ec ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010b069	kernel.asm	/^ffff80000010b069 <vector251>:$/;"	l
ffff80000010b069	kernel.asm	/^ffff80000010b069:	6a 00                	pushq  $0x0$/;"	l
ffff80000010b06b	kernel.asm	/^ffff80000010b06b:	68 fb 00 00 00       	pushq  $0xfb$/;"	l
ffff80000010b070	kernel.asm	/^ffff80000010b070:	e9 20 ec ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010b075	kernel.asm	/^ffff80000010b075 <vector252>:$/;"	l
ffff80000010b075	kernel.asm	/^ffff80000010b075:	6a 00                	pushq  $0x0$/;"	l
ffff80000010b077	kernel.asm	/^ffff80000010b077:	68 fc 00 00 00       	pushq  $0xfc$/;"	l
ffff80000010b07c	kernel.asm	/^ffff80000010b07c:	e9 14 ec ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010b081	kernel.asm	/^ffff80000010b081 <vector253>:$/;"	l
ffff80000010b081	kernel.asm	/^ffff80000010b081:	6a 00                	pushq  $0x0$/;"	l
ffff80000010b083	kernel.asm	/^ffff80000010b083:	68 fd 00 00 00       	pushq  $0xfd$/;"	l
ffff80000010b088	kernel.asm	/^ffff80000010b088:	e9 08 ec ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010b08d	kernel.asm	/^ffff80000010b08d <vector254>:$/;"	l
ffff80000010b08d	kernel.asm	/^ffff80000010b08d:	6a 00                	pushq  $0x0$/;"	l
ffff80000010b08f	kernel.asm	/^ffff80000010b08f:	68 fe 00 00 00       	pushq  $0xfe$/;"	l
ffff80000010b094	kernel.asm	/^ffff80000010b094:	e9 fc eb ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010b099	kernel.asm	/^ffff80000010b099 <vector255>:$/;"	l
ffff80000010b099	kernel.asm	/^ffff80000010b099:	6a 00                	pushq  $0x0$/;"	l
ffff80000010b09b	kernel.asm	/^ffff80000010b09b:	68 ff 00 00 00       	pushq  $0xff$/;"	l
ffff80000010b0a0	kernel.asm	/^ffff80000010b0a0:	e9 f0 eb ff ff       	jmpq   ffff800000109c95 <alltraps>$/;"	l
ffff80000010b0a5	kernel.asm	/^ffff80000010b0a5 <lgdt>:$/;"	l
ffff80000010b0a5	kernel.asm	/^ffff80000010b0a5:	55                   	push   %rbp$/;"	l
ffff80000010b0a6	kernel.asm	/^ffff80000010b0a6:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010b0a9	kernel.asm	/^ffff80000010b0a9:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ffff80000010b0ad	kernel.asm	/^ffff80000010b0ad:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
ffff80000010b0b1	kernel.asm	/^ffff80000010b0b1:	89 75 e4             	mov    %esi,-0x1c(%rbp)$/;"	l
ffff80000010b0b4	kernel.asm	/^ffff80000010b0b4:	8b 45 e4             	mov    -0x1c(%rbp),%eax$/;"	l
ffff80000010b0b7	kernel.asm	/^ffff80000010b0b7:	83 e8 01             	sub    $0x1,%eax$/;"	l
ffff80000010b0ba	kernel.asm	/^ffff80000010b0ba:	66 89 45 f0          	mov    %ax,-0x10(%rbp)$/;"	l
ffff80000010b0be	kernel.asm	/^ffff80000010b0be:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010b0c2	kernel.asm	/^ffff80000010b0c2:	66 89 45 f2          	mov    %ax,-0xe(%rbp)$/;"	l
ffff80000010b0c6	kernel.asm	/^ffff80000010b0c6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010b0ca	kernel.asm	/^ffff80000010b0ca:	48 c1 e8 10          	shr    $0x10,%rax$/;"	l
ffff80000010b0ce	kernel.asm	/^ffff80000010b0ce:	66 89 45 f4          	mov    %ax,-0xc(%rbp)$/;"	l
ffff80000010b0d2	kernel.asm	/^ffff80000010b0d2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010b0d6	kernel.asm	/^ffff80000010b0d6:	48 c1 e8 20          	shr    $0x20,%rax$/;"	l
ffff80000010b0da	kernel.asm	/^ffff80000010b0da:	66 89 45 f6          	mov    %ax,-0xa(%rbp)$/;"	l
ffff80000010b0de	kernel.asm	/^ffff80000010b0de:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010b0e2	kernel.asm	/^ffff80000010b0e2:	48 c1 e8 30          	shr    $0x30,%rax$/;"	l
ffff80000010b0e6	kernel.asm	/^ffff80000010b0e6:	66 89 45 f8          	mov    %ax,-0x8(%rbp)$/;"	l
ffff80000010b0ea	kernel.asm	/^ffff80000010b0ea:	48 8d 45 f0          	lea    -0x10(%rbp),%rax$/;"	l
ffff80000010b0ee	kernel.asm	/^ffff80000010b0ee:	0f 01 10             	lgdt   (%rax)$/;"	l
ffff80000010b0f1	kernel.asm	/^ffff80000010b0f1:	90                   	nop$/;"	l
ffff80000010b0f2	kernel.asm	/^ffff80000010b0f2:	c9                   	leaveq $/;"	l
ffff80000010b0f3	kernel.asm	/^ffff80000010b0f3:	c3                   	retq   $/;"	l
ffff80000010b0f4	kernel.asm	/^ffff80000010b0f4 <ltr>:$/;"	l
ffff80000010b0f4	kernel.asm	/^ffff80000010b0f4:	55                   	push   %rbp$/;"	l
ffff80000010b0f5	kernel.asm	/^ffff80000010b0f5:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010b0f8	kernel.asm	/^ffff80000010b0f8:	48 83 ec 08          	sub    $0x8,%rsp$/;"	l
ffff80000010b0fc	kernel.asm	/^ffff80000010b0fc:	89 f8                	mov    %edi,%eax$/;"	l
ffff80000010b0fe	kernel.asm	/^ffff80000010b0fe:	66 89 45 fc          	mov    %ax,-0x4(%rbp)$/;"	l
ffff80000010b102	kernel.asm	/^ffff80000010b102:	0f b7 45 fc          	movzwl -0x4(%rbp),%eax$/;"	l
ffff80000010b106	kernel.asm	/^ffff80000010b106:	0f 00 d8             	ltr    %ax$/;"	l
ffff80000010b109	kernel.asm	/^ffff80000010b109:	90                   	nop$/;"	l
ffff80000010b10a	kernel.asm	/^ffff80000010b10a:	c9                   	leaveq $/;"	l
ffff80000010b10b	kernel.asm	/^ffff80000010b10b:	c3                   	retq   $/;"	l
ffff80000010b10c	kernel.asm	/^ffff80000010b10c <lcr3>:$/;"	l
ffff80000010b10c	kernel.asm	/^ffff80000010b10c:	55                   	push   %rbp$/;"	l
ffff80000010b10d	kernel.asm	/^ffff80000010b10d:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010b110	kernel.asm	/^ffff80000010b110:	48 83 ec 08          	sub    $0x8,%rsp$/;"	l
ffff80000010b114	kernel.asm	/^ffff80000010b114:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)$/;"	l
ffff80000010b118	kernel.asm	/^ffff80000010b118:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010b11c	kernel.asm	/^ffff80000010b11c:	0f 22 d8             	mov    %rax,%cr3$/;"	l
ffff80000010b11f	kernel.asm	/^ffff80000010b11f:	90                   	nop$/;"	l
ffff80000010b120	kernel.asm	/^ffff80000010b120:	c9                   	leaveq $/;"	l
ffff80000010b121	kernel.asm	/^ffff80000010b121:	c3                   	retq   $/;"	l
ffff80000010b122	kernel.asm	/^ffff80000010b122 <v2p>:$/;"	l
ffff80000010b122	kernel.asm	/^ffff80000010b122:	55                   	push   %rbp$/;"	l
ffff80000010b123	kernel.asm	/^ffff80000010b123:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010b126	kernel.asm	/^ffff80000010b126:	48 83 ec 08          	sub    $0x8,%rsp$/;"	l
ffff80000010b12a	kernel.asm	/^ffff80000010b12a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)$/;"	l
ffff80000010b12e	kernel.asm	/^ffff80000010b12e:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx$/;"	l
ffff80000010b132	kernel.asm	/^ffff80000010b132:	48 b8 00 00 00 00 00 	movabs $0x800000000000,%rax$/;"	l
ffff80000010b139	kernel.asm	/^ffff80000010b139:	80 00 00 $/;"	l
ffff80000010b13c	kernel.asm	/^ffff80000010b13c:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff80000010b13f	kernel.asm	/^ffff80000010b13f:	c9                   	leaveq $/;"	l
ffff80000010b140	kernel.asm	/^ffff80000010b140:	c3                   	retq   $/;"	l
ffff80000010b141	kernel.asm	/^ffff80000010b141 <tss_set_rsp>:$/;"	l
ffff80000010b141	kernel.asm	/^ffff80000010b141:	55                   	push   %rbp$/;"	l
ffff80000010b142	kernel.asm	/^ffff80000010b142:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010b145	kernel.asm	/^ffff80000010b145:	48 83 ec 18          	sub    $0x18,%rsp$/;"	l
ffff80000010b149	kernel.asm	/^ffff80000010b149:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)$/;"	l
ffff80000010b14d	kernel.asm	/^ffff80000010b14d:	89 75 f4             	mov    %esi,-0xc(%rbp)$/;"	l
ffff80000010b150	kernel.asm	/^ffff80000010b150:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)$/;"	l
ffff80000010b154	kernel.asm	/^ffff80000010b154:	8b 45 f4             	mov    -0xc(%rbp),%eax$/;"	l
ffff80000010b157	kernel.asm	/^ffff80000010b157:	01 c0                	add    %eax,%eax$/;"	l
ffff80000010b159	kernel.asm	/^ffff80000010b159:	83 c0 01             	add    $0x1,%eax$/;"	l
ffff80000010b15c	kernel.asm	/^ffff80000010b15c:	89 c0                	mov    %eax,%eax$/;"	l
ffff80000010b15e	kernel.asm	/^ffff80000010b15e:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx$/;"	l
ffff80000010b165	kernel.asm	/^ffff80000010b165:	00 $/;"	l
ffff80000010b166	kernel.asm	/^ffff80000010b166:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010b16a	kernel.asm	/^ffff80000010b16a:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff80000010b16d	kernel.asm	/^ffff80000010b16d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx$/;"	l
ffff80000010b171	kernel.asm	/^ffff80000010b171:	89 10                	mov    %edx,(%rax)$/;"	l
ffff80000010b173	kernel.asm	/^ffff80000010b173:	8b 45 f4             	mov    -0xc(%rbp),%eax$/;"	l
ffff80000010b176	kernel.asm	/^ffff80000010b176:	83 c0 01             	add    $0x1,%eax$/;"	l
ffff80000010b179	kernel.asm	/^ffff80000010b179:	01 c0                	add    %eax,%eax$/;"	l
ffff80000010b17b	kernel.asm	/^ffff80000010b17b:	89 c0                	mov    %eax,%eax$/;"	l
ffff80000010b17d	kernel.asm	/^ffff80000010b17d:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx$/;"	l
ffff80000010b184	kernel.asm	/^ffff80000010b184:	00 $/;"	l
ffff80000010b185	kernel.asm	/^ffff80000010b185:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010b189	kernel.asm	/^ffff80000010b189:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff80000010b18c	kernel.asm	/^ffff80000010b18c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx$/;"	l
ffff80000010b190	kernel.asm	/^ffff80000010b190:	48 c1 ea 20          	shr    $0x20,%rdx$/;"	l
ffff80000010b194	kernel.asm	/^ffff80000010b194:	89 10                	mov    %edx,(%rax)$/;"	l
ffff80000010b196	kernel.asm	/^ffff80000010b196:	90                   	nop$/;"	l
ffff80000010b197	kernel.asm	/^ffff80000010b197:	c9                   	leaveq $/;"	l
ffff80000010b198	kernel.asm	/^ffff80000010b198:	c3                   	retq   $/;"	l
ffff80000010b199	kernel.asm	/^ffff80000010b199 <syscallinit>:$/;"	l
ffff80000010b199	kernel.asm	/^ffff80000010b199:	55                   	push   %rbp$/;"	l
ffff80000010b19a	kernel.asm	/^ffff80000010b19a:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010b19d	kernel.asm	/^ffff80000010b19d:	48 be 00 00 00 00 08 	movabs $0x18000800000000,%rsi$/;"	l
ffff80000010b1a4	kernel.asm	/^ffff80000010b1a4:	00 18 00 $/;"	l
ffff80000010b1a7	kernel.asm	/^ffff80000010b1a7:	bf 81 00 00 c0       	mov    $0xc0000081,%edi$/;"	l
ffff80000010b1ac	kernel.asm	/^ffff80000010b1ac:	48 b8 01 01 10 00 00 	movabs $0xffff800000100101,%rax$/;"	l
ffff80000010b1b3	kernel.asm	/^ffff80000010b1b3:	80 ff ff $/;"	l
ffff80000010b1b6	kernel.asm	/^ffff80000010b1b6:	ff d0                	callq  *%rax$/;"	l
ffff80000010b1b8	kernel.asm	/^ffff80000010b1b8:	48 b8 1a 01 10 00 00 	movabs $0xffff80000010011a,%rax$/;"	l
ffff80000010b1bf	kernel.asm	/^ffff80000010b1bf:	80 ff ff $/;"	l
ffff80000010b1c2	kernel.asm	/^ffff80000010b1c2:	48 89 c6             	mov    %rax,%rsi$/;"	l
ffff80000010b1c5	kernel.asm	/^ffff80000010b1c5:	bf 82 00 00 c0       	mov    $0xc0000082,%edi$/;"	l
ffff80000010b1ca	kernel.asm	/^ffff80000010b1ca:	48 b8 01 01 10 00 00 	movabs $0xffff800000100101,%rax$/;"	l
ffff80000010b1d1	kernel.asm	/^ffff80000010b1d1:	80 ff ff $/;"	l
ffff80000010b1d4	kernel.asm	/^ffff80000010b1d4:	ff d0                	callq  *%rax$/;"	l
ffff80000010b1d6	kernel.asm	/^ffff80000010b1d6:	48 b8 11 01 10 00 00 	movabs $0xffff800000100111,%rax$/;"	l
ffff80000010b1dd	kernel.asm	/^ffff80000010b1dd:	80 ff ff $/;"	l
ffff80000010b1e0	kernel.asm	/^ffff80000010b1e0:	48 89 c6             	mov    %rax,%rsi$/;"	l
ffff80000010b1e3	kernel.asm	/^ffff80000010b1e3:	bf 83 00 00 c0       	mov    $0xc0000083,%edi$/;"	l
ffff80000010b1e8	kernel.asm	/^ffff80000010b1e8:	48 b8 01 01 10 00 00 	movabs $0xffff800000100101,%rax$/;"	l
ffff80000010b1ef	kernel.asm	/^ffff80000010b1ef:	80 ff ff $/;"	l
ffff80000010b1f2	kernel.asm	/^ffff80000010b1f2:	ff d0                	callq  *%rax$/;"	l
ffff80000010b1f4	kernel.asm	/^ffff80000010b1f4:	be 00 77 04 00       	mov    $0x47700,%esi$/;"	l
ffff80000010b1f9	kernel.asm	/^ffff80000010b1f9:	bf 84 00 00 c0       	mov    $0xc0000084,%edi$/;"	l
ffff80000010b1fe	kernel.asm	/^ffff80000010b1fe:	48 b8 01 01 10 00 00 	movabs $0xffff800000100101,%rax$/;"	l
ffff80000010b205	kernel.asm	/^ffff80000010b205:	80 ff ff $/;"	l
ffff80000010b208	kernel.asm	/^ffff80000010b208:	ff d0                	callq  *%rax$/;"	l
ffff80000010b20a	kernel.asm	/^ffff80000010b20a:	90                   	nop$/;"	l
ffff80000010b20b	kernel.asm	/^ffff80000010b20b:	5d                   	pop    %rbp$/;"	l
ffff80000010b20c	kernel.asm	/^ffff80000010b20c:	c3                   	retq   $/;"	l
ffff80000010b20d	kernel.asm	/^ffff80000010b20d <seginit>:$/;"	l
ffff80000010b20d	kernel.asm	/^ffff80000010b20d:	55                   	push   %rbp$/;"	l
ffff80000010b20e	kernel.asm	/^ffff80000010b20e:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010b211	kernel.asm	/^ffff80000010b211:	48 83 ec 30          	sub    $0x30,%rsp$/;"	l
ffff80000010b215	kernel.asm	/^ffff80000010b215:	48 b8 d1 45 10 00 00 	movabs $0xffff8000001045d1,%rax$/;"	l
ffff80000010b21c	kernel.asm	/^ffff80000010b21c:	80 ff ff $/;"	l
ffff80000010b21f	kernel.asm	/^ffff80000010b21f:	ff d0                	callq  *%rax$/;"	l
ffff80000010b221	kernel.asm	/^ffff80000010b221:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff80000010b225	kernel.asm	/^ffff80000010b225:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010b229	kernel.asm	/^ffff80000010b229:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
ffff80000010b22e	kernel.asm	/^ffff80000010b22e:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffff80000010b233	kernel.asm	/^ffff80000010b233:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010b236	kernel.asm	/^ffff80000010b236:	48 b8 72 7b 10 00 00 	movabs $0xffff800000107b72,%rax$/;"	l
ffff80000010b23d	kernel.asm	/^ffff80000010b23d:	80 ff ff $/;"	l
ffff80000010b240	kernel.asm	/^ffff80000010b240:	ff d0                	callq  *%rax$/;"	l
ffff80000010b242	kernel.asm	/^ffff80000010b242:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010b246	kernel.asm	/^ffff80000010b246:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ffff80000010b24a	kernel.asm	/^ffff80000010b24a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010b24e	kernel.asm	/^ffff80000010b24e:	48 05 00 04 00 00    	add    $0x400,%rax$/;"	l
ffff80000010b254	kernel.asm	/^ffff80000010b254:	48 89 45 e8          	mov    %rax,-0x18(%rbp)$/;"	l
ffff80000010b258	kernel.asm	/^ffff80000010b258:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010b25c	kernel.asm	/^ffff80000010b25c:	48 83 c0 40          	add    $0x40,%rax$/;"	l
ffff80000010b260	kernel.asm	/^ffff80000010b260:	c7 00 00 00 68 00    	movl   $0x680000,(%rax)$/;"	l
ffff80000010b266	kernel.asm	/^ffff80000010b266:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010b26a	kernel.asm	/^ffff80000010b26a:	48 05 00 08 00 00    	add    $0x800,%rax$/;"	l
ffff80000010b270	kernel.asm	/^ffff80000010b270:	48 89 c6             	mov    %rax,%rsi$/;"	l
ffff80000010b273	kernel.asm	/^ffff80000010b273:	bf 00 01 00 c0       	mov    $0xc0000100,%edi$/;"	l
ffff80000010b278	kernel.asm	/^ffff80000010b278:	48 b8 01 01 10 00 00 	movabs $0xffff800000100101,%rax$/;"	l
ffff80000010b27f	kernel.asm	/^ffff80000010b27f:	80 ff ff $/;"	l
ffff80000010b282	kernel.asm	/^ffff80000010b282:	ff d0                	callq  *%rax$/;"	l
ffff80000010b284	kernel.asm	/^ffff80000010b284:	48 b8 9d 4a 10 00 00 	movabs $0xffff800000104a9d,%rax$/;"	l
ffff80000010b28b	kernel.asm	/^ffff80000010b28b:	80 ff ff $/;"	l
ffff80000010b28e	kernel.asm	/^ffff80000010b28e:	ff d0                	callq  *%rax$/;"	l
ffff80000010b290	kernel.asm	/^ffff80000010b290:	48 98                	cltq   $/;"	l
ffff80000010b292	kernel.asm	/^ffff80000010b292:	48 89 c2             	mov    %rax,%rdx$/;"	l
ffff80000010b295	kernel.asm	/^ffff80000010b295:	48 8d 04 d5 00 00 00 	lea    0x0(,%rdx,8),%rax$/;"	l
ffff80000010b29c	kernel.asm	/^ffff80000010b29c:	00 $/;"	l
ffff80000010b29d	kernel.asm	/^ffff80000010b29d:	48 89 c2             	mov    %rax,%rdx$/;"	l
ffff80000010b2a0	kernel.asm	/^ffff80000010b2a0:	48 89 d0             	mov    %rdx,%rax$/;"	l
ffff80000010b2a3	kernel.asm	/^ffff80000010b2a3:	48 c1 e0 05          	shl    $0x5,%rax$/;"	l
ffff80000010b2a7	kernel.asm	/^ffff80000010b2a7:	48 29 d0             	sub    %rdx,%rax$/;"	l
ffff80000010b2aa	kernel.asm	/^ffff80000010b2aa:	48 ba 20 b3 11 00 00 	movabs $0xffff80000011b320,%rdx$/;"	l
ffff80000010b2b1	kernel.asm	/^ffff80000010b2b1:	80 ff ff $/;"	l
ffff80000010b2b4	kernel.asm	/^ffff80000010b2b4:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff80000010b2b7	kernel.asm	/^ffff80000010b2b7:	48 89 45 e0          	mov    %rax,-0x20(%rbp)$/;"	l
ffff80000010b2bb	kernel.asm	/^ffff80000010b2bb:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff80000010b2bf	kernel.asm	/^ffff80000010b2bf:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx$/;"	l
ffff80000010b2c3	kernel.asm	/^ffff80000010b2c3:	48 89 90 f0 00 00 00 	mov    %rdx,0xf0(%rax)$/;"	l
ffff80000010b2ca	kernel.asm	/^ffff80000010b2ca:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff80000010b2ce	kernel.asm	/^ffff80000010b2ce:	64 48 89 04 25 f0 ff 	mov    %rax,%fs:0xfffffffffffffff0$/;"	l
ffff80000010b2d5	kernel.asm	/^ffff80000010b2d5:	ff ff $/;"	l
ffff80000010b2d7	kernel.asm	/^ffff80000010b2d7:	64 48 c7 04 25 f8 ff 	movq   $0x0,%fs:0xfffffffffffffff8$/;"	l
ffff80000010b2de	kernel.asm	/^ffff80000010b2de:	ff ff 00 00 00 00 $/;"	l
ffff80000010b2e4	kernel.asm	/^ffff80000010b2e4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010b2e8	kernel.asm	/^ffff80000010b2e8:	48 89 45 d8          	mov    %rax,-0x28(%rbp)$/;"	l
ffff80000010b2ec	kernel.asm	/^ffff80000010b2ec:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff80000010b2f0	kernel.asm	/^ffff80000010b2f0:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)$/;"	l
ffff80000010b2f7	kernel.asm	/^ffff80000010b2f7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff80000010b2fb	kernel.asm	/^ffff80000010b2fb:	48 83 c0 08          	add    $0x8,%rax$/;"	l
ffff80000010b2ff	kernel.asm	/^ffff80000010b2ff:	66 c7 00 00 00       	movw   $0x0,(%rax)$/;"	l
ffff80000010b304	kernel.asm	/^ffff80000010b304:	66 c7 40 02 00 00    	movw   $0x0,0x2(%rax)$/;"	l
ffff80000010b30a	kernel.asm	/^ffff80000010b30a:	c6 40 04 00          	movb   $0x0,0x4(%rax)$/;"	l
ffff80000010b30e	kernel.asm	/^ffff80000010b30e:	0f b6 50 05          	movzbl 0x5(%rax),%edx$/;"	l
ffff80000010b312	kernel.asm	/^ffff80000010b312:	83 e2 f0             	and    $0xfffffff0,%edx$/;"	l
ffff80000010b315	kernel.asm	/^ffff80000010b315:	83 ca 0a             	or     $0xa,%edx$/;"	l
ffff80000010b318	kernel.asm	/^ffff80000010b318:	88 50 05             	mov    %dl,0x5(%rax)$/;"	l
ffff80000010b31b	kernel.asm	/^ffff80000010b31b:	0f b6 50 05          	movzbl 0x5(%rax),%edx$/;"	l
ffff80000010b31f	kernel.asm	/^ffff80000010b31f:	83 ca 10             	or     $0x10,%edx$/;"	l
ffff80000010b322	kernel.asm	/^ffff80000010b322:	88 50 05             	mov    %dl,0x5(%rax)$/;"	l
ffff80000010b325	kernel.asm	/^ffff80000010b325:	0f b6 50 05          	movzbl 0x5(%rax),%edx$/;"	l
ffff80000010b329	kernel.asm	/^ffff80000010b329:	83 e2 9f             	and    $0xffffff9f,%edx$/;"	l
ffff80000010b32c	kernel.asm	/^ffff80000010b32c:	88 50 05             	mov    %dl,0x5(%rax)$/;"	l
ffff80000010b32f	kernel.asm	/^ffff80000010b32f:	0f b6 50 05          	movzbl 0x5(%rax),%edx$/;"	l
ffff80000010b333	kernel.asm	/^ffff80000010b333:	83 ca 80             	or     $0xffffff80,%edx$/;"	l
ffff80000010b336	kernel.asm	/^ffff80000010b336:	88 50 05             	mov    %dl,0x5(%rax)$/;"	l
ffff80000010b339	kernel.asm	/^ffff80000010b339:	0f b6 50 06          	movzbl 0x6(%rax),%edx$/;"	l
ffff80000010b33d	kernel.asm	/^ffff80000010b33d:	83 e2 f0             	and    $0xfffffff0,%edx$/;"	l
ffff80000010b340	kernel.asm	/^ffff80000010b340:	88 50 06             	mov    %dl,0x6(%rax)$/;"	l
ffff80000010b343	kernel.asm	/^ffff80000010b343:	0f b6 50 06          	movzbl 0x6(%rax),%edx$/;"	l
ffff80000010b347	kernel.asm	/^ffff80000010b347:	83 e2 ef             	and    $0xffffffef,%edx$/;"	l
ffff80000010b34a	kernel.asm	/^ffff80000010b34a:	88 50 06             	mov    %dl,0x6(%rax)$/;"	l
ffff80000010b34d	kernel.asm	/^ffff80000010b34d:	0f b6 50 06          	movzbl 0x6(%rax),%edx$/;"	l
ffff80000010b351	kernel.asm	/^ffff80000010b351:	83 ca 20             	or     $0x20,%edx$/;"	l
ffff80000010b354	kernel.asm	/^ffff80000010b354:	88 50 06             	mov    %dl,0x6(%rax)$/;"	l
ffff80000010b357	kernel.asm	/^ffff80000010b357:	0f b6 50 06          	movzbl 0x6(%rax),%edx$/;"	l
ffff80000010b35b	kernel.asm	/^ffff80000010b35b:	83 e2 bf             	and    $0xffffffbf,%edx$/;"	l
ffff80000010b35e	kernel.asm	/^ffff80000010b35e:	88 50 06             	mov    %dl,0x6(%rax)$/;"	l
ffff80000010b361	kernel.asm	/^ffff80000010b361:	0f b6 50 06          	movzbl 0x6(%rax),%edx$/;"	l
ffff80000010b365	kernel.asm	/^ffff80000010b365:	83 ca 80             	or     $0xffffff80,%edx$/;"	l
ffff80000010b368	kernel.asm	/^ffff80000010b368:	88 50 06             	mov    %dl,0x6(%rax)$/;"	l
ffff80000010b36b	kernel.asm	/^ffff80000010b36b:	c6 40 07 00          	movb   $0x0,0x7(%rax)$/;"	l
ffff80000010b36f	kernel.asm	/^ffff80000010b36f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff80000010b373	kernel.asm	/^ffff80000010b373:	48 83 c0 28          	add    $0x28,%rax$/;"	l
ffff80000010b377	kernel.asm	/^ffff80000010b377:	66 c7 00 00 00       	movw   $0x0,(%rax)$/;"	l
ffff80000010b37c	kernel.asm	/^ffff80000010b37c:	66 c7 40 02 00 00    	movw   $0x0,0x2(%rax)$/;"	l
ffff80000010b382	kernel.asm	/^ffff80000010b382:	c6 40 04 00          	movb   $0x0,0x4(%rax)$/;"	l
ffff80000010b386	kernel.asm	/^ffff80000010b386:	0f b6 50 05          	movzbl 0x5(%rax),%edx$/;"	l
ffff80000010b38a	kernel.asm	/^ffff80000010b38a:	83 e2 f0             	and    $0xfffffff0,%edx$/;"	l
ffff80000010b38d	kernel.asm	/^ffff80000010b38d:	83 ca 0a             	or     $0xa,%edx$/;"	l
ffff80000010b390	kernel.asm	/^ffff80000010b390:	88 50 05             	mov    %dl,0x5(%rax)$/;"	l
ffff80000010b393	kernel.asm	/^ffff80000010b393:	0f b6 50 05          	movzbl 0x5(%rax),%edx$/;"	l
ffff80000010b397	kernel.asm	/^ffff80000010b397:	83 ca 10             	or     $0x10,%edx$/;"	l
ffff80000010b39a	kernel.asm	/^ffff80000010b39a:	88 50 05             	mov    %dl,0x5(%rax)$/;"	l
ffff80000010b39d	kernel.asm	/^ffff80000010b39d:	0f b6 50 05          	movzbl 0x5(%rax),%edx$/;"	l
ffff80000010b3a1	kernel.asm	/^ffff80000010b3a1:	83 ca 60             	or     $0x60,%edx$/;"	l
ffff80000010b3a4	kernel.asm	/^ffff80000010b3a4:	88 50 05             	mov    %dl,0x5(%rax)$/;"	l
ffff80000010b3a7	kernel.asm	/^ffff80000010b3a7:	0f b6 50 05          	movzbl 0x5(%rax),%edx$/;"	l
ffff80000010b3ab	kernel.asm	/^ffff80000010b3ab:	83 ca 80             	or     $0xffffff80,%edx$/;"	l
ffff80000010b3ae	kernel.asm	/^ffff80000010b3ae:	88 50 05             	mov    %dl,0x5(%rax)$/;"	l
ffff80000010b3b1	kernel.asm	/^ffff80000010b3b1:	0f b6 50 06          	movzbl 0x6(%rax),%edx$/;"	l
ffff80000010b3b5	kernel.asm	/^ffff80000010b3b5:	83 e2 f0             	and    $0xfffffff0,%edx$/;"	l
ffff80000010b3b8	kernel.asm	/^ffff80000010b3b8:	88 50 06             	mov    %dl,0x6(%rax)$/;"	l
ffff80000010b3bb	kernel.asm	/^ffff80000010b3bb:	0f b6 50 06          	movzbl 0x6(%rax),%edx$/;"	l
ffff80000010b3bf	kernel.asm	/^ffff80000010b3bf:	83 e2 ef             	and    $0xffffffef,%edx$/;"	l
ffff80000010b3c2	kernel.asm	/^ffff80000010b3c2:	88 50 06             	mov    %dl,0x6(%rax)$/;"	l
ffff80000010b3c5	kernel.asm	/^ffff80000010b3c5:	0f b6 50 06          	movzbl 0x6(%rax),%edx$/;"	l
ffff80000010b3c9	kernel.asm	/^ffff80000010b3c9:	83 ca 20             	or     $0x20,%edx$/;"	l
ffff80000010b3cc	kernel.asm	/^ffff80000010b3cc:	88 50 06             	mov    %dl,0x6(%rax)$/;"	l
ffff80000010b3cf	kernel.asm	/^ffff80000010b3cf:	0f b6 50 06          	movzbl 0x6(%rax),%edx$/;"	l
ffff80000010b3d3	kernel.asm	/^ffff80000010b3d3:	83 e2 bf             	and    $0xffffffbf,%edx$/;"	l
ffff80000010b3d6	kernel.asm	/^ffff80000010b3d6:	88 50 06             	mov    %dl,0x6(%rax)$/;"	l
ffff80000010b3d9	kernel.asm	/^ffff80000010b3d9:	0f b6 50 06          	movzbl 0x6(%rax),%edx$/;"	l
ffff80000010b3dd	kernel.asm	/^ffff80000010b3dd:	83 ca 80             	or     $0xffffff80,%edx$/;"	l
ffff80000010b3e0	kernel.asm	/^ffff80000010b3e0:	88 50 06             	mov    %dl,0x6(%rax)$/;"	l
ffff80000010b3e3	kernel.asm	/^ffff80000010b3e3:	c6 40 07 00          	movb   $0x0,0x7(%rax)$/;"	l
ffff80000010b3e7	kernel.asm	/^ffff80000010b3e7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff80000010b3eb	kernel.asm	/^ffff80000010b3eb:	48 83 c0 10          	add    $0x10,%rax$/;"	l
ffff80000010b3ef	kernel.asm	/^ffff80000010b3ef:	66 c7 00 00 00       	movw   $0x0,(%rax)$/;"	l
ffff80000010b3f4	kernel.asm	/^ffff80000010b3f4:	66 c7 40 02 00 00    	movw   $0x0,0x2(%rax)$/;"	l
ffff80000010b3fa	kernel.asm	/^ffff80000010b3fa:	c6 40 04 00          	movb   $0x0,0x4(%rax)$/;"	l
ffff80000010b3fe	kernel.asm	/^ffff80000010b3fe:	0f b6 50 05          	movzbl 0x5(%rax),%edx$/;"	l
ffff80000010b402	kernel.asm	/^ffff80000010b402:	83 e2 f0             	and    $0xfffffff0,%edx$/;"	l
ffff80000010b405	kernel.asm	/^ffff80000010b405:	83 ca 02             	or     $0x2,%edx$/;"	l
ffff80000010b408	kernel.asm	/^ffff80000010b408:	88 50 05             	mov    %dl,0x5(%rax)$/;"	l
ffff80000010b40b	kernel.asm	/^ffff80000010b40b:	0f b6 50 05          	movzbl 0x5(%rax),%edx$/;"	l
ffff80000010b40f	kernel.asm	/^ffff80000010b40f:	83 ca 10             	or     $0x10,%edx$/;"	l
ffff80000010b412	kernel.asm	/^ffff80000010b412:	88 50 05             	mov    %dl,0x5(%rax)$/;"	l
ffff80000010b415	kernel.asm	/^ffff80000010b415:	0f b6 50 05          	movzbl 0x5(%rax),%edx$/;"	l
ffff80000010b419	kernel.asm	/^ffff80000010b419:	83 e2 9f             	and    $0xffffff9f,%edx$/;"	l
ffff80000010b41c	kernel.asm	/^ffff80000010b41c:	88 50 05             	mov    %dl,0x5(%rax)$/;"	l
ffff80000010b41f	kernel.asm	/^ffff80000010b41f:	0f b6 50 05          	movzbl 0x5(%rax),%edx$/;"	l
ffff80000010b423	kernel.asm	/^ffff80000010b423:	83 ca 80             	or     $0xffffff80,%edx$/;"	l
ffff80000010b426	kernel.asm	/^ffff80000010b426:	88 50 05             	mov    %dl,0x5(%rax)$/;"	l
ffff80000010b429	kernel.asm	/^ffff80000010b429:	0f b6 50 06          	movzbl 0x6(%rax),%edx$/;"	l
ffff80000010b42d	kernel.asm	/^ffff80000010b42d:	83 e2 f0             	and    $0xfffffff0,%edx$/;"	l
ffff80000010b430	kernel.asm	/^ffff80000010b430:	88 50 06             	mov    %dl,0x6(%rax)$/;"	l
ffff80000010b433	kernel.asm	/^ffff80000010b433:	0f b6 50 06          	movzbl 0x6(%rax),%edx$/;"	l
ffff80000010b437	kernel.asm	/^ffff80000010b437:	83 e2 ef             	and    $0xffffffef,%edx$/;"	l
ffff80000010b43a	kernel.asm	/^ffff80000010b43a:	88 50 06             	mov    %dl,0x6(%rax)$/;"	l
ffff80000010b43d	kernel.asm	/^ffff80000010b43d:	0f b6 50 06          	movzbl 0x6(%rax),%edx$/;"	l
ffff80000010b441	kernel.asm	/^ffff80000010b441:	83 e2 df             	and    $0xffffffdf,%edx$/;"	l
ffff80000010b444	kernel.asm	/^ffff80000010b444:	88 50 06             	mov    %dl,0x6(%rax)$/;"	l
ffff80000010b447	kernel.asm	/^ffff80000010b447:	0f b6 50 06          	movzbl 0x6(%rax),%edx$/;"	l
ffff80000010b44b	kernel.asm	/^ffff80000010b44b:	83 e2 bf             	and    $0xffffffbf,%edx$/;"	l
ffff80000010b44e	kernel.asm	/^ffff80000010b44e:	88 50 06             	mov    %dl,0x6(%rax)$/;"	l
ffff80000010b451	kernel.asm	/^ffff80000010b451:	0f b6 50 06          	movzbl 0x6(%rax),%edx$/;"	l
ffff80000010b455	kernel.asm	/^ffff80000010b455:	83 ca 80             	or     $0xffffff80,%edx$/;"	l
ffff80000010b458	kernel.asm	/^ffff80000010b458:	88 50 06             	mov    %dl,0x6(%rax)$/;"	l
ffff80000010b45b	kernel.asm	/^ffff80000010b45b:	c6 40 07 00          	movb   $0x0,0x7(%rax)$/;"	l
ffff80000010b45f	kernel.asm	/^ffff80000010b45f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff80000010b463	kernel.asm	/^ffff80000010b463:	48 83 c0 30          	add    $0x30,%rax$/;"	l
ffff80000010b467	kernel.asm	/^ffff80000010b467:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)$/;"	l
ffff80000010b46e	kernel.asm	/^ffff80000010b46e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff80000010b472	kernel.asm	/^ffff80000010b472:	48 83 c0 20          	add    $0x20,%rax$/;"	l
ffff80000010b476	kernel.asm	/^ffff80000010b476:	66 c7 00 00 00       	movw   $0x0,(%rax)$/;"	l
ffff80000010b47b	kernel.asm	/^ffff80000010b47b:	66 c7 40 02 00 00    	movw   $0x0,0x2(%rax)$/;"	l
ffff80000010b481	kernel.asm	/^ffff80000010b481:	c6 40 04 00          	movb   $0x0,0x4(%rax)$/;"	l
ffff80000010b485	kernel.asm	/^ffff80000010b485:	0f b6 50 05          	movzbl 0x5(%rax),%edx$/;"	l
ffff80000010b489	kernel.asm	/^ffff80000010b489:	83 e2 f0             	and    $0xfffffff0,%edx$/;"	l
ffff80000010b48c	kernel.asm	/^ffff80000010b48c:	83 ca 02             	or     $0x2,%edx$/;"	l
ffff80000010b48f	kernel.asm	/^ffff80000010b48f:	88 50 05             	mov    %dl,0x5(%rax)$/;"	l
ffff80000010b492	kernel.asm	/^ffff80000010b492:	0f b6 50 05          	movzbl 0x5(%rax),%edx$/;"	l
ffff80000010b496	kernel.asm	/^ffff80000010b496:	83 ca 10             	or     $0x10,%edx$/;"	l
ffff80000010b499	kernel.asm	/^ffff80000010b499:	88 50 05             	mov    %dl,0x5(%rax)$/;"	l
ffff80000010b49c	kernel.asm	/^ffff80000010b49c:	0f b6 50 05          	movzbl 0x5(%rax),%edx$/;"	l
ffff80000010b4a0	kernel.asm	/^ffff80000010b4a0:	83 ca 60             	or     $0x60,%edx$/;"	l
ffff80000010b4a3	kernel.asm	/^ffff80000010b4a3:	88 50 05             	mov    %dl,0x5(%rax)$/;"	l
ffff80000010b4a6	kernel.asm	/^ffff80000010b4a6:	0f b6 50 05          	movzbl 0x5(%rax),%edx$/;"	l
ffff80000010b4aa	kernel.asm	/^ffff80000010b4aa:	83 ca 80             	or     $0xffffff80,%edx$/;"	l
ffff80000010b4ad	kernel.asm	/^ffff80000010b4ad:	88 50 05             	mov    %dl,0x5(%rax)$/;"	l
ffff80000010b4b0	kernel.asm	/^ffff80000010b4b0:	0f b6 50 06          	movzbl 0x6(%rax),%edx$/;"	l
ffff80000010b4b4	kernel.asm	/^ffff80000010b4b4:	83 e2 f0             	and    $0xfffffff0,%edx$/;"	l
ffff80000010b4b7	kernel.asm	/^ffff80000010b4b7:	88 50 06             	mov    %dl,0x6(%rax)$/;"	l
ffff80000010b4ba	kernel.asm	/^ffff80000010b4ba:	0f b6 50 06          	movzbl 0x6(%rax),%edx$/;"	l
ffff80000010b4be	kernel.asm	/^ffff80000010b4be:	83 e2 ef             	and    $0xffffffef,%edx$/;"	l
ffff80000010b4c1	kernel.asm	/^ffff80000010b4c1:	88 50 06             	mov    %dl,0x6(%rax)$/;"	l
ffff80000010b4c4	kernel.asm	/^ffff80000010b4c4:	0f b6 50 06          	movzbl 0x6(%rax),%edx$/;"	l
ffff80000010b4c8	kernel.asm	/^ffff80000010b4c8:	83 e2 df             	and    $0xffffffdf,%edx$/;"	l
ffff80000010b4cb	kernel.asm	/^ffff80000010b4cb:	88 50 06             	mov    %dl,0x6(%rax)$/;"	l
ffff80000010b4ce	kernel.asm	/^ffff80000010b4ce:	0f b6 50 06          	movzbl 0x6(%rax),%edx$/;"	l
ffff80000010b4d2	kernel.asm	/^ffff80000010b4d2:	83 e2 bf             	and    $0xffffffbf,%edx$/;"	l
ffff80000010b4d5	kernel.asm	/^ffff80000010b4d5:	88 50 06             	mov    %dl,0x6(%rax)$/;"	l
ffff80000010b4d8	kernel.asm	/^ffff80000010b4d8:	0f b6 50 06          	movzbl 0x6(%rax),%edx$/;"	l
ffff80000010b4dc	kernel.asm	/^ffff80000010b4dc:	83 ca 80             	or     $0xffffff80,%edx$/;"	l
ffff80000010b4df	kernel.asm	/^ffff80000010b4df:	88 50 06             	mov    %dl,0x6(%rax)$/;"	l
ffff80000010b4e2	kernel.asm	/^ffff80000010b4e2:	c6 40 07 00          	movb   $0x0,0x7(%rax)$/;"	l
ffff80000010b4e6	kernel.asm	/^ffff80000010b4e6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff80000010b4ea	kernel.asm	/^ffff80000010b4ea:	48 83 c0 38          	add    $0x38,%rax$/;"	l
ffff80000010b4ee	kernel.asm	/^ffff80000010b4ee:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx$/;"	l
ffff80000010b4f2	kernel.asm	/^ffff80000010b4f2:	89 d7                	mov    %edx,%edi$/;"	l
ffff80000010b4f4	kernel.asm	/^ffff80000010b4f4:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx$/;"	l
ffff80000010b4f8	kernel.asm	/^ffff80000010b4f8:	48 c1 ea 10          	shr    $0x10,%rdx$/;"	l
ffff80000010b4fc	kernel.asm	/^ffff80000010b4fc:	89 d6                	mov    %edx,%esi$/;"	l
ffff80000010b4fe	kernel.asm	/^ffff80000010b4fe:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx$/;"	l
ffff80000010b502	kernel.asm	/^ffff80000010b502:	48 c1 ea 18          	shr    $0x18,%rdx$/;"	l
ffff80000010b506	kernel.asm	/^ffff80000010b506:	89 d1                	mov    %edx,%ecx$/;"	l
ffff80000010b508	kernel.asm	/^ffff80000010b508:	66 c7 00 0b 00       	movw   $0xb,(%rax)$/;"	l
ffff80000010b50d	kernel.asm	/^ffff80000010b50d:	66 89 78 02          	mov    %di,0x2(%rax)$/;"	l
ffff80000010b511	kernel.asm	/^ffff80000010b511:	40 88 70 04          	mov    %sil,0x4(%rax)$/;"	l
ffff80000010b515	kernel.asm	/^ffff80000010b515:	0f b6 50 05          	movzbl 0x5(%rax),%edx$/;"	l
ffff80000010b519	kernel.asm	/^ffff80000010b519:	83 e2 f0             	and    $0xfffffff0,%edx$/;"	l
ffff80000010b51c	kernel.asm	/^ffff80000010b51c:	83 ca 09             	or     $0x9,%edx$/;"	l
ffff80000010b51f	kernel.asm	/^ffff80000010b51f:	88 50 05             	mov    %dl,0x5(%rax)$/;"	l
ffff80000010b522	kernel.asm	/^ffff80000010b522:	0f b6 50 05          	movzbl 0x5(%rax),%edx$/;"	l
ffff80000010b526	kernel.asm	/^ffff80000010b526:	83 e2 ef             	and    $0xffffffef,%edx$/;"	l
ffff80000010b529	kernel.asm	/^ffff80000010b529:	88 50 05             	mov    %dl,0x5(%rax)$/;"	l
ffff80000010b52c	kernel.asm	/^ffff80000010b52c:	0f b6 50 05          	movzbl 0x5(%rax),%edx$/;"	l
ffff80000010b530	kernel.asm	/^ffff80000010b530:	83 ca 60             	or     $0x60,%edx$/;"	l
ffff80000010b533	kernel.asm	/^ffff80000010b533:	88 50 05             	mov    %dl,0x5(%rax)$/;"	l
ffff80000010b536	kernel.asm	/^ffff80000010b536:	0f b6 50 05          	movzbl 0x5(%rax),%edx$/;"	l
ffff80000010b53a	kernel.asm	/^ffff80000010b53a:	83 ca 80             	or     $0xffffff80,%edx$/;"	l
ffff80000010b53d	kernel.asm	/^ffff80000010b53d:	88 50 05             	mov    %dl,0x5(%rax)$/;"	l
ffff80000010b540	kernel.asm	/^ffff80000010b540:	0f b6 50 06          	movzbl 0x6(%rax),%edx$/;"	l
ffff80000010b544	kernel.asm	/^ffff80000010b544:	83 e2 f0             	and    $0xfffffff0,%edx$/;"	l
ffff80000010b547	kernel.asm	/^ffff80000010b547:	88 50 06             	mov    %dl,0x6(%rax)$/;"	l
ffff80000010b54a	kernel.asm	/^ffff80000010b54a:	0f b6 50 06          	movzbl 0x6(%rax),%edx$/;"	l
ffff80000010b54e	kernel.asm	/^ffff80000010b54e:	83 e2 ef             	and    $0xffffffef,%edx$/;"	l
ffff80000010b551	kernel.asm	/^ffff80000010b551:	88 50 06             	mov    %dl,0x6(%rax)$/;"	l
ffff80000010b554	kernel.asm	/^ffff80000010b554:	0f b6 50 06          	movzbl 0x6(%rax),%edx$/;"	l
ffff80000010b558	kernel.asm	/^ffff80000010b558:	83 e2 df             	and    $0xffffffdf,%edx$/;"	l
ffff80000010b55b	kernel.asm	/^ffff80000010b55b:	88 50 06             	mov    %dl,0x6(%rax)$/;"	l
ffff80000010b55e	kernel.asm	/^ffff80000010b55e:	0f b6 50 06          	movzbl 0x6(%rax),%edx$/;"	l
ffff80000010b562	kernel.asm	/^ffff80000010b562:	83 e2 bf             	and    $0xffffffbf,%edx$/;"	l
ffff80000010b565	kernel.asm	/^ffff80000010b565:	88 50 06             	mov    %dl,0x6(%rax)$/;"	l
ffff80000010b568	kernel.asm	/^ffff80000010b568:	0f b6 50 06          	movzbl 0x6(%rax),%edx$/;"	l
ffff80000010b56c	kernel.asm	/^ffff80000010b56c:	83 ca 80             	or     $0xffffff80,%edx$/;"	l
ffff80000010b56f	kernel.asm	/^ffff80000010b56f:	88 50 06             	mov    %dl,0x6(%rax)$/;"	l
ffff80000010b572	kernel.asm	/^ffff80000010b572:	88 48 07             	mov    %cl,0x7(%rax)$/;"	l
ffff80000010b575	kernel.asm	/^ffff80000010b575:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff80000010b579	kernel.asm	/^ffff80000010b579:	48 83 c0 40          	add    $0x40,%rax$/;"	l
ffff80000010b57d	kernel.asm	/^ffff80000010b57d:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx$/;"	l
ffff80000010b581	kernel.asm	/^ffff80000010b581:	48 c1 ea 20          	shr    $0x20,%rdx$/;"	l
ffff80000010b585	kernel.asm	/^ffff80000010b585:	41 89 d1             	mov    %edx,%r9d$/;"	l
ffff80000010b588	kernel.asm	/^ffff80000010b588:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx$/;"	l
ffff80000010b58c	kernel.asm	/^ffff80000010b58c:	48 c1 ea 30          	shr    $0x30,%rdx$/;"	l
ffff80000010b590	kernel.asm	/^ffff80000010b590:	41 89 d0             	mov    %edx,%r8d$/;"	l
ffff80000010b593	kernel.asm	/^ffff80000010b593:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx$/;"	l
ffff80000010b597	kernel.asm	/^ffff80000010b597:	48 c1 ea 30          	shr    $0x30,%rdx$/;"	l
ffff80000010b59b	kernel.asm	/^ffff80000010b59b:	48 c1 ea 10          	shr    $0x10,%rdx$/;"	l
ffff80000010b59f	kernel.asm	/^ffff80000010b59f:	89 d7                	mov    %edx,%edi$/;"	l
ffff80000010b5a1	kernel.asm	/^ffff80000010b5a1:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx$/;"	l
ffff80000010b5a5	kernel.asm	/^ffff80000010b5a5:	48 c1 ea 20          	shr    $0x20,%rdx$/;"	l
ffff80000010b5a9	kernel.asm	/^ffff80000010b5a9:	48 c1 ea 3c          	shr    $0x3c,%rdx$/;"	l
ffff80000010b5ad	kernel.asm	/^ffff80000010b5ad:	89 d1                	mov    %edx,%ecx$/;"	l
ffff80000010b5af	kernel.asm	/^ffff80000010b5af:	83 e1 0f             	and    $0xf,%ecx$/;"	l
ffff80000010b5b2	kernel.asm	/^ffff80000010b5b2:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx$/;"	l
ffff80000010b5b6	kernel.asm	/^ffff80000010b5b6:	48 c1 ea 30          	shr    $0x30,%rdx$/;"	l
ffff80000010b5ba	kernel.asm	/^ffff80000010b5ba:	48 c1 ea 18          	shr    $0x18,%rdx$/;"	l
ffff80000010b5be	kernel.asm	/^ffff80000010b5be:	89 d6                	mov    %edx,%esi$/;"	l
ffff80000010b5c0	kernel.asm	/^ffff80000010b5c0:	66 44 89 08          	mov    %r9w,(%rax)$/;"	l
ffff80000010b5c4	kernel.asm	/^ffff80000010b5c4:	66 44 89 40 02       	mov    %r8w,0x2(%rax)$/;"	l
ffff80000010b5c9	kernel.asm	/^ffff80000010b5c9:	40 88 78 04          	mov    %dil,0x4(%rax)$/;"	l
ffff80000010b5cd	kernel.asm	/^ffff80000010b5cd:	0f b6 50 05          	movzbl 0x5(%rax),%edx$/;"	l
ffff80000010b5d1	kernel.asm	/^ffff80000010b5d1:	83 e2 f0             	and    $0xfffffff0,%edx$/;"	l
ffff80000010b5d4	kernel.asm	/^ffff80000010b5d4:	88 50 05             	mov    %dl,0x5(%rax)$/;"	l
ffff80000010b5d7	kernel.asm	/^ffff80000010b5d7:	0f b6 50 05          	movzbl 0x5(%rax),%edx$/;"	l
ffff80000010b5db	kernel.asm	/^ffff80000010b5db:	83 e2 ef             	and    $0xffffffef,%edx$/;"	l
ffff80000010b5de	kernel.asm	/^ffff80000010b5de:	88 50 05             	mov    %dl,0x5(%rax)$/;"	l
ffff80000010b5e1	kernel.asm	/^ffff80000010b5e1:	0f b6 50 05          	movzbl 0x5(%rax),%edx$/;"	l
ffff80000010b5e5	kernel.asm	/^ffff80000010b5e5:	83 e2 9f             	and    $0xffffff9f,%edx$/;"	l
ffff80000010b5e8	kernel.asm	/^ffff80000010b5e8:	88 50 05             	mov    %dl,0x5(%rax)$/;"	l
ffff80000010b5eb	kernel.asm	/^ffff80000010b5eb:	0f b6 50 05          	movzbl 0x5(%rax),%edx$/;"	l
ffff80000010b5ef	kernel.asm	/^ffff80000010b5ef:	83 ca 80             	or     $0xffffff80,%edx$/;"	l
ffff80000010b5f2	kernel.asm	/^ffff80000010b5f2:	88 50 05             	mov    %dl,0x5(%rax)$/;"	l
ffff80000010b5f5	kernel.asm	/^ffff80000010b5f5:	83 e1 0f             	and    $0xf,%ecx$/;"	l
ffff80000010b5f8	kernel.asm	/^ffff80000010b5f8:	0f b6 50 06          	movzbl 0x6(%rax),%edx$/;"	l
ffff80000010b5fc	kernel.asm	/^ffff80000010b5fc:	83 e2 f0             	and    $0xfffffff0,%edx$/;"	l
ffff80000010b5ff	kernel.asm	/^ffff80000010b5ff:	09 ca                	or     %ecx,%edx$/;"	l
ffff80000010b601	kernel.asm	/^ffff80000010b601:	88 50 06             	mov    %dl,0x6(%rax)$/;"	l
ffff80000010b604	kernel.asm	/^ffff80000010b604:	0f b6 50 06          	movzbl 0x6(%rax),%edx$/;"	l
ffff80000010b608	kernel.asm	/^ffff80000010b608:	83 e2 ef             	and    $0xffffffef,%edx$/;"	l
ffff80000010b60b	kernel.asm	/^ffff80000010b60b:	88 50 06             	mov    %dl,0x6(%rax)$/;"	l
ffff80000010b60e	kernel.asm	/^ffff80000010b60e:	0f b6 50 06          	movzbl 0x6(%rax),%edx$/;"	l
ffff80000010b612	kernel.asm	/^ffff80000010b612:	83 e2 df             	and    $0xffffffdf,%edx$/;"	l
ffff80000010b615	kernel.asm	/^ffff80000010b615:	88 50 06             	mov    %dl,0x6(%rax)$/;"	l
ffff80000010b618	kernel.asm	/^ffff80000010b618:	0f b6 50 06          	movzbl 0x6(%rax),%edx$/;"	l
ffff80000010b61c	kernel.asm	/^ffff80000010b61c:	83 e2 bf             	and    $0xffffffbf,%edx$/;"	l
ffff80000010b61f	kernel.asm	/^ffff80000010b61f:	88 50 06             	mov    %dl,0x6(%rax)$/;"	l
ffff80000010b622	kernel.asm	/^ffff80000010b622:	0f b6 50 06          	movzbl 0x6(%rax),%edx$/;"	l
ffff80000010b626	kernel.asm	/^ffff80000010b626:	83 ca 80             	or     $0xffffff80,%edx$/;"	l
ffff80000010b629	kernel.asm	/^ffff80000010b629:	88 50 06             	mov    %dl,0x6(%rax)$/;"	l
ffff80000010b62c	kernel.asm	/^ffff80000010b62c:	40 88 70 07          	mov    %sil,0x7(%rax)$/;"	l
ffff80000010b630	kernel.asm	/^ffff80000010b630:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff80000010b634	kernel.asm	/^ffff80000010b634:	be 48 00 00 00       	mov    $0x48,%esi$/;"	l
ffff80000010b639	kernel.asm	/^ffff80000010b639:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010b63c	kernel.asm	/^ffff80000010b63c:	48 b8 a5 b0 10 00 00 	movabs $0xffff80000010b0a5,%rax$/;"	l
ffff80000010b643	kernel.asm	/^ffff80000010b643:	80 ff ff $/;"	l
ffff80000010b646	kernel.asm	/^ffff80000010b646:	ff d0                	callq  *%rax$/;"	l
ffff80000010b648	kernel.asm	/^ffff80000010b648:	bf 38 00 00 00       	mov    $0x38,%edi$/;"	l
ffff80000010b64d	kernel.asm	/^ffff80000010b64d:	48 b8 f4 b0 10 00 00 	movabs $0xffff80000010b0f4,%rax$/;"	l
ffff80000010b654	kernel.asm	/^ffff80000010b654:	80 ff ff $/;"	l
ffff80000010b657	kernel.asm	/^ffff80000010b657:	ff d0                	callq  *%rax$/;"	l
ffff80000010b659	kernel.asm	/^ffff80000010b659:	90                   	nop$/;"	l
ffff80000010b65a	kernel.asm	/^ffff80000010b65a:	c9                   	leaveq $/;"	l
ffff80000010b65b	kernel.asm	/^ffff80000010b65b:	c3                   	retq   $/;"	l
ffff80000010b65c	kernel.asm	/^ffff80000010b65c <setupkvm>:$/;"	l
ffff80000010b65c	kernel.asm	/^ffff80000010b65c:	55                   	push   %rbp$/;"	l
ffff80000010b65d	kernel.asm	/^ffff80000010b65d:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010b660	kernel.asm	/^ffff80000010b660:	53                   	push   %rbx$/;"	l
ffff80000010b661	kernel.asm	/^ffff80000010b661:	48 83 ec 18          	sub    $0x18,%rsp$/;"	l
ffff80000010b665	kernel.asm	/^ffff80000010b665:	48 b8 d1 45 10 00 00 	movabs $0xffff8000001045d1,%rax$/;"	l
ffff80000010b66c	kernel.asm	/^ffff80000010b66c:	80 ff ff $/;"	l
ffff80000010b66f	kernel.asm	/^ffff80000010b66f:	ff d0                	callq  *%rax$/;"	l
ffff80000010b671	kernel.asm	/^ffff80000010b671:	48 89 45 e8          	mov    %rax,-0x18(%rbp)$/;"	l
ffff80000010b675	kernel.asm	/^ffff80000010b675:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010b679	kernel.asm	/^ffff80000010b679:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
ffff80000010b67e	kernel.asm	/^ffff80000010b67e:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffff80000010b683	kernel.asm	/^ffff80000010b683:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010b686	kernel.asm	/^ffff80000010b686:	48 b8 72 7b 10 00 00 	movabs $0xffff800000107b72,%rax$/;"	l
ffff80000010b68d	kernel.asm	/^ffff80000010b68d:	80 ff ff $/;"	l
ffff80000010b690	kernel.asm	/^ffff80000010b690:	ff d0                	callq  *%rax$/;"	l
ffff80000010b692	kernel.asm	/^ffff80000010b692:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010b696	kernel.asm	/^ffff80000010b696:	48 8d 98 00 08 00 00 	lea    0x800(%rax),%rbx$/;"	l
ffff80000010b69d	kernel.asm	/^ffff80000010b69d:	48 b8 20 f8 11 00 00 	movabs $0xffff80000011f820,%rax$/;"	l
ffff80000010b6a4	kernel.asm	/^ffff80000010b6a4:	80 ff ff $/;"	l
ffff80000010b6a7	kernel.asm	/^ffff80000010b6a7:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff80000010b6aa	kernel.asm	/^ffff80000010b6aa:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010b6ad	kernel.asm	/^ffff80000010b6ad:	48 b8 22 b1 10 00 00 	movabs $0xffff80000010b122,%rax$/;"	l
ffff80000010b6b4	kernel.asm	/^ffff80000010b6b4:	80 ff ff $/;"	l
ffff80000010b6b7	kernel.asm	/^ffff80000010b6b7:	ff d0                	callq  *%rax$/;"	l
ffff80000010b6b9	kernel.asm	/^ffff80000010b6b9:	48 83 c8 03          	or     $0x3,%rax$/;"	l
ffff80000010b6bd	kernel.asm	/^ffff80000010b6bd:	48 89 03             	mov    %rax,(%rbx)$/;"	l
ffff80000010b6c0	kernel.asm	/^ffff80000010b6c0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010b6c4	kernel.asm	/^ffff80000010b6c4:	48 83 c4 18          	add    $0x18,%rsp$/;"	l
ffff80000010b6c8	kernel.asm	/^ffff80000010b6c8:	5b                   	pop    %rbx$/;"	l
ffff80000010b6c9	kernel.asm	/^ffff80000010b6c9:	5d                   	pop    %rbp$/;"	l
ffff80000010b6ca	kernel.asm	/^ffff80000010b6ca:	c3                   	retq   $/;"	l
ffff80000010b6cb	kernel.asm	/^ffff80000010b6cb <kvmalloc>:$/;"	l
ffff80000010b6cb	kernel.asm	/^ffff80000010b6cb:	55                   	push   %rbp$/;"	l
ffff80000010b6cc	kernel.asm	/^ffff80000010b6cc:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010b6cf	kernel.asm	/^ffff80000010b6cf:	53                   	push   %rbx$/;"	l
ffff80000010b6d0	kernel.asm	/^ffff80000010b6d0:	48 83 ec 08          	sub    $0x8,%rsp$/;"	l
ffff80000010b6d4	kernel.asm	/^ffff80000010b6d4:	48 b8 d1 45 10 00 00 	movabs $0xffff8000001045d1,%rax$/;"	l
ffff80000010b6db	kernel.asm	/^ffff80000010b6db:	80 ff ff $/;"	l
ffff80000010b6de	kernel.asm	/^ffff80000010b6de:	ff d0                	callq  *%rax$/;"	l
ffff80000010b6e0	kernel.asm	/^ffff80000010b6e0:	48 89 c2             	mov    %rax,%rdx$/;"	l
ffff80000010b6e3	kernel.asm	/^ffff80000010b6e3:	48 b8 18 f8 11 00 00 	movabs $0xffff80000011f818,%rax$/;"	l
ffff80000010b6ea	kernel.asm	/^ffff80000010b6ea:	80 ff ff $/;"	l
ffff80000010b6ed	kernel.asm	/^ffff80000010b6ed:	48 89 10             	mov    %rdx,(%rax)$/;"	l
ffff80000010b6f0	kernel.asm	/^ffff80000010b6f0:	48 b8 18 f8 11 00 00 	movabs $0xffff80000011f818,%rax$/;"	l
ffff80000010b6f7	kernel.asm	/^ffff80000010b6f7:	80 ff ff $/;"	l
ffff80000010b6fa	kernel.asm	/^ffff80000010b6fa:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff80000010b6fd	kernel.asm	/^ffff80000010b6fd:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
ffff80000010b702	kernel.asm	/^ffff80000010b702:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffff80000010b707	kernel.asm	/^ffff80000010b707:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010b70a	kernel.asm	/^ffff80000010b70a:	48 b8 72 7b 10 00 00 	movabs $0xffff800000107b72,%rax$/;"	l
ffff80000010b711	kernel.asm	/^ffff80000010b711:	80 ff ff $/;"	l
ffff80000010b714	kernel.asm	/^ffff80000010b714:	ff d0                	callq  *%rax$/;"	l
ffff80000010b716	kernel.asm	/^ffff80000010b716:	48 b8 d1 45 10 00 00 	movabs $0xffff8000001045d1,%rax$/;"	l
ffff80000010b71d	kernel.asm	/^ffff80000010b71d:	80 ff ff $/;"	l
ffff80000010b720	kernel.asm	/^ffff80000010b720:	ff d0                	callq  *%rax$/;"	l
ffff80000010b722	kernel.asm	/^ffff80000010b722:	48 89 c2             	mov    %rax,%rdx$/;"	l
ffff80000010b725	kernel.asm	/^ffff80000010b725:	48 b8 20 f8 11 00 00 	movabs $0xffff80000011f820,%rax$/;"	l
ffff80000010b72c	kernel.asm	/^ffff80000010b72c:	80 ff ff $/;"	l
ffff80000010b72f	kernel.asm	/^ffff80000010b72f:	48 89 10             	mov    %rdx,(%rax)$/;"	l
ffff80000010b732	kernel.asm	/^ffff80000010b732:	48 b8 20 f8 11 00 00 	movabs $0xffff80000011f820,%rax$/;"	l
ffff80000010b739	kernel.asm	/^ffff80000010b739:	80 ff ff $/;"	l
ffff80000010b73c	kernel.asm	/^ffff80000010b73c:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff80000010b73f	kernel.asm	/^ffff80000010b73f:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
ffff80000010b744	kernel.asm	/^ffff80000010b744:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffff80000010b749	kernel.asm	/^ffff80000010b749:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010b74c	kernel.asm	/^ffff80000010b74c:	48 b8 72 7b 10 00 00 	movabs $0xffff800000107b72,%rax$/;"	l
ffff80000010b753	kernel.asm	/^ffff80000010b753:	80 ff ff $/;"	l
ffff80000010b756	kernel.asm	/^ffff80000010b756:	ff d0                	callq  *%rax$/;"	l
ffff80000010b758	kernel.asm	/^ffff80000010b758:	48 b8 18 f8 11 00 00 	movabs $0xffff80000011f818,%rax$/;"	l
ffff80000010b75f	kernel.asm	/^ffff80000010b75f:	80 ff ff $/;"	l
ffff80000010b762	kernel.asm	/^ffff80000010b762:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff80000010b765	kernel.asm	/^ffff80000010b765:	48 8d 98 00 08 00 00 	lea    0x800(%rax),%rbx$/;"	l
ffff80000010b76c	kernel.asm	/^ffff80000010b76c:	48 b8 20 f8 11 00 00 	movabs $0xffff80000011f820,%rax$/;"	l
ffff80000010b773	kernel.asm	/^ffff80000010b773:	80 ff ff $/;"	l
ffff80000010b776	kernel.asm	/^ffff80000010b776:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff80000010b779	kernel.asm	/^ffff80000010b779:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010b77c	kernel.asm	/^ffff80000010b77c:	48 b8 22 b1 10 00 00 	movabs $0xffff80000010b122,%rax$/;"	l
ffff80000010b783	kernel.asm	/^ffff80000010b783:	80 ff ff $/;"	l
ffff80000010b786	kernel.asm	/^ffff80000010b786:	ff d0                	callq  *%rax$/;"	l
ffff80000010b788	kernel.asm	/^ffff80000010b788:	48 83 c8 03          	or     $0x3,%rax$/;"	l
ffff80000010b78c	kernel.asm	/^ffff80000010b78c:	48 89 03             	mov    %rax,(%rbx)$/;"	l
ffff80000010b78f	kernel.asm	/^ffff80000010b78f:	48 b8 20 f8 11 00 00 	movabs $0xffff80000011f820,%rax$/;"	l
ffff80000010b796	kernel.asm	/^ffff80000010b796:	80 ff ff $/;"	l
ffff80000010b799	kernel.asm	/^ffff80000010b799:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff80000010b79c	kernel.asm	/^ffff80000010b79c:	48 c7 00 83 00 00 00 	movq   $0x83,(%rax)$/;"	l
ffff80000010b7a3	kernel.asm	/^ffff80000010b7a3:	48 b8 20 f8 11 00 00 	movabs $0xffff80000011f820,%rax$/;"	l
ffff80000010b7aa	kernel.asm	/^ffff80000010b7aa:	80 ff ff $/;"	l
ffff80000010b7ad	kernel.asm	/^ffff80000010b7ad:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff80000010b7b0	kernel.asm	/^ffff80000010b7b0:	48 83 c0 18          	add    $0x18,%rax$/;"	l
ffff80000010b7b4	kernel.asm	/^ffff80000010b7b4:	b9 9b 00 00 c0       	mov    $0xc000009b,%ecx$/;"	l
ffff80000010b7b9	kernel.asm	/^ffff80000010b7b9:	48 89 08             	mov    %rcx,(%rax)$/;"	l
ffff80000010b7bc	kernel.asm	/^ffff80000010b7bc:	48 b8 d0 b7 10 00 00 	movabs $0xffff80000010b7d0,%rax$/;"	l
ffff80000010b7c3	kernel.asm	/^ffff80000010b7c3:	80 ff ff $/;"	l
ffff80000010b7c6	kernel.asm	/^ffff80000010b7c6:	ff d0                	callq  *%rax$/;"	l
ffff80000010b7c8	kernel.asm	/^ffff80000010b7c8:	90                   	nop$/;"	l
ffff80000010b7c9	kernel.asm	/^ffff80000010b7c9:	48 83 c4 08          	add    $0x8,%rsp$/;"	l
ffff80000010b7cd	kernel.asm	/^ffff80000010b7cd:	5b                   	pop    %rbx$/;"	l
ffff80000010b7ce	kernel.asm	/^ffff80000010b7ce:	5d                   	pop    %rbp$/;"	l
ffff80000010b7cf	kernel.asm	/^ffff80000010b7cf:	c3                   	retq   $/;"	l
ffff80000010b7d0	kernel.asm	/^ffff80000010b7d0 <switchkvm>:$/;"	l
ffff80000010b7d0	kernel.asm	/^ffff80000010b7d0:	55                   	push   %rbp$/;"	l
ffff80000010b7d1	kernel.asm	/^ffff80000010b7d1:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010b7d4	kernel.asm	/^ffff80000010b7d4:	48 b8 18 f8 11 00 00 	movabs $0xffff80000011f818,%rax$/;"	l
ffff80000010b7db	kernel.asm	/^ffff80000010b7db:	80 ff ff $/;"	l
ffff80000010b7de	kernel.asm	/^ffff80000010b7de:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff80000010b7e1	kernel.asm	/^ffff80000010b7e1:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010b7e4	kernel.asm	/^ffff80000010b7e4:	48 b8 22 b1 10 00 00 	movabs $0xffff80000010b122,%rax$/;"	l
ffff80000010b7eb	kernel.asm	/^ffff80000010b7eb:	80 ff ff $/;"	l
ffff80000010b7ee	kernel.asm	/^ffff80000010b7ee:	ff d0                	callq  *%rax$/;"	l
ffff80000010b7f0	kernel.asm	/^ffff80000010b7f0:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010b7f3	kernel.asm	/^ffff80000010b7f3:	48 b8 0c b1 10 00 00 	movabs $0xffff80000010b10c,%rax$/;"	l
ffff80000010b7fa	kernel.asm	/^ffff80000010b7fa:	80 ff ff $/;"	l
ffff80000010b7fd	kernel.asm	/^ffff80000010b7fd:	ff d0                	callq  *%rax$/;"	l
ffff80000010b7ff	kernel.asm	/^ffff80000010b7ff:	90                   	nop$/;"	l
ffff80000010b800	kernel.asm	/^ffff80000010b800:	5d                   	pop    %rbp$/;"	l
ffff80000010b801	kernel.asm	/^ffff80000010b801:	c3                   	retq   $/;"	l
ffff80000010b802	kernel.asm	/^ffff80000010b802 <switchuvm>:$/;"	l
ffff80000010b802	kernel.asm	/^ffff80000010b802:	55                   	push   %rbp$/;"	l
ffff80000010b803	kernel.asm	/^ffff80000010b803:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010b806	kernel.asm	/^ffff80000010b806:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ffff80000010b80a	kernel.asm	/^ffff80000010b80a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
ffff80000010b80e	kernel.asm	/^ffff80000010b80e:	48 b8 e9 79 10 00 00 	movabs $0xffff8000001079e9,%rax$/;"	l
ffff80000010b815	kernel.asm	/^ffff80000010b815:	80 ff ff $/;"	l
ffff80000010b818	kernel.asm	/^ffff80000010b818:	ff d0                	callq  *%rax$/;"	l
ffff80000010b81a	kernel.asm	/^ffff80000010b81a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010b81e	kernel.asm	/^ffff80000010b81e:	48 8b 40 08          	mov    0x8(%rax),%rax$/;"	l
ffff80000010b822	kernel.asm	/^ffff80000010b822:	48 85 c0             	test   %rax,%rax$/;"	l
ffff80000010b825	kernel.asm	/^ffff80000010b825:	75 16                	jne    ffff80000010b83d <switchuvm+0x3b>$/;"	l
ffff80000010b827	kernel.asm	/^ffff80000010b827:	48 bf a0 dc 10 00 00 	movabs $0xffff80000010dca0,%rdi$/;"	l
ffff80000010b82e	kernel.asm	/^ffff80000010b82e:	80 ff ff $/;"	l
ffff80000010b831	kernel.asm	/^ffff80000010b831:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff80000010b838	kernel.asm	/^ffff80000010b838:	80 ff ff $/;"	l
ffff80000010b83b	kernel.asm	/^ffff80000010b83b:	ff d0                	callq  *%rax$/;"	l
ffff80000010b83d	kernel.asm	/^ffff80000010b83d:	64 48 8b 04 25 f0 ff 	mov    %fs:0xfffffffffffffff0,%rax$/;"	l
ffff80000010b844	kernel.asm	/^ffff80000010b844:	ff ff $/;"	l
ffff80000010b846	kernel.asm	/^ffff80000010b846:	48 8b 80 f0 00 00 00 	mov    0xf0(%rax),%rax$/;"	l
ffff80000010b84d	kernel.asm	/^ffff80000010b84d:	48 05 00 04 00 00    	add    $0x400,%rax$/;"	l
ffff80000010b853	kernel.asm	/^ffff80000010b853:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff80000010b857	kernel.asm	/^ffff80000010b857:	64 48 8b 04 25 f8 ff 	mov    %fs:0xfffffffffffffff8,%rax$/;"	l
ffff80000010b85e	kernel.asm	/^ffff80000010b85e:	ff ff $/;"	l
ffff80000010b860	kernel.asm	/^ffff80000010b860:	48 8b 40 10          	mov    0x10(%rax),%rax$/;"	l
ffff80000010b864	kernel.asm	/^ffff80000010b864:	48 8d 90 00 10 00 00 	lea    0x1000(%rax),%rdx$/;"	l
ffff80000010b86b	kernel.asm	/^ffff80000010b86b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010b86f	kernel.asm	/^ffff80000010b86f:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffff80000010b874	kernel.asm	/^ffff80000010b874:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010b877	kernel.asm	/^ffff80000010b877:	48 b8 41 b1 10 00 00 	movabs $0xffff80000010b141,%rax$/;"	l
ffff80000010b87e	kernel.asm	/^ffff80000010b87e:	80 ff ff $/;"	l
ffff80000010b881	kernel.asm	/^ffff80000010b881:	ff d0                	callq  *%rax$/;"	l
ffff80000010b883	kernel.asm	/^ffff80000010b883:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010b887	kernel.asm	/^ffff80000010b887:	48 8b 40 08          	mov    0x8(%rax),%rax$/;"	l
ffff80000010b88b	kernel.asm	/^ffff80000010b88b:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010b88e	kernel.asm	/^ffff80000010b88e:	48 b8 22 b1 10 00 00 	movabs $0xffff80000010b122,%rax$/;"	l
ffff80000010b895	kernel.asm	/^ffff80000010b895:	80 ff ff $/;"	l
ffff80000010b898	kernel.asm	/^ffff80000010b898:	ff d0                	callq  *%rax$/;"	l
ffff80000010b89a	kernel.asm	/^ffff80000010b89a:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010b89d	kernel.asm	/^ffff80000010b89d:	48 b8 0c b1 10 00 00 	movabs $0xffff80000010b10c,%rax$/;"	l
ffff80000010b8a4	kernel.asm	/^ffff80000010b8a4:	80 ff ff $/;"	l
ffff80000010b8a7	kernel.asm	/^ffff80000010b8a7:	ff d0                	callq  *%rax$/;"	l
ffff80000010b8a9	kernel.asm	/^ffff80000010b8a9:	48 b8 63 7a 10 00 00 	movabs $0xffff800000107a63,%rax$/;"	l
ffff80000010b8b0	kernel.asm	/^ffff80000010b8b0:	80 ff ff $/;"	l
ffff80000010b8b3	kernel.asm	/^ffff80000010b8b3:	ff d0                	callq  *%rax$/;"	l
ffff80000010b8b5	kernel.asm	/^ffff80000010b8b5:	90                   	nop$/;"	l
ffff80000010b8b6	kernel.asm	/^ffff80000010b8b6:	c9                   	leaveq $/;"	l
ffff80000010b8b7	kernel.asm	/^ffff80000010b8b7:	c3                   	retq   $/;"	l
ffff80000010b8b8	kernel.asm	/^ffff80000010b8b8 <walkpgdir>:$/;"	l
ffff80000010b8b8	kernel.asm	/^ffff80000010b8b8:	55                   	push   %rbp$/;"	l
ffff80000010b8b9	kernel.asm	/^ffff80000010b8b9:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010b8bc	kernel.asm	/^ffff80000010b8bc:	48 83 ec 50          	sub    $0x50,%rsp$/;"	l
ffff80000010b8c0	kernel.asm	/^ffff80000010b8c0:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)$/;"	l
ffff80000010b8c4	kernel.asm	/^ffff80000010b8c4:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)$/;"	l
ffff80000010b8c8	kernel.asm	/^ffff80000010b8c8:	89 55 bc             	mov    %edx,-0x44(%rbp)$/;"	l
ffff80000010b8cb	kernel.asm	/^ffff80000010b8cb:	48 8b 45 c0          	mov    -0x40(%rbp),%rax$/;"	l
ffff80000010b8cf	kernel.asm	/^ffff80000010b8cf:	48 c1 e8 27          	shr    $0x27,%rax$/;"	l
ffff80000010b8d3	kernel.asm	/^ffff80000010b8d3:	25 ff 01 00 00       	and    $0x1ff,%eax$/;"	l
ffff80000010b8d8	kernel.asm	/^ffff80000010b8d8:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx$/;"	l
ffff80000010b8df	kernel.asm	/^ffff80000010b8df:	00 $/;"	l
ffff80000010b8e0	kernel.asm	/^ffff80000010b8e0:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
ffff80000010b8e4	kernel.asm	/^ffff80000010b8e4:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff80000010b8e7	kernel.asm	/^ffff80000010b8e7:	48 89 45 e0          	mov    %rax,-0x20(%rbp)$/;"	l
ffff80000010b8eb	kernel.asm	/^ffff80000010b8eb:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff80000010b8ef	kernel.asm	/^ffff80000010b8ef:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff80000010b8f2	kernel.asm	/^ffff80000010b8f2:	83 e0 01             	and    $0x1,%eax$/;"	l
ffff80000010b8f5	kernel.asm	/^ffff80000010b8f5:	48 85 c0             	test   %rax,%rax$/;"	l
ffff80000010b8f8	kernel.asm	/^ffff80000010b8f8:	74 23                	je     ffff80000010b91d <walkpgdir+0x65>$/;"	l
ffff80000010b8fa	kernel.asm	/^ffff80000010b8fa:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff80000010b8fe	kernel.asm	/^ffff80000010b8fe:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff80000010b901	kernel.asm	/^ffff80000010b901:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax$/;"	l
ffff80000010b907	kernel.asm	/^ffff80000010b907:	48 89 c2             	mov    %rax,%rdx$/;"	l
ffff80000010b90a	kernel.asm	/^ffff80000010b90a:	48 b8 00 00 00 00 00 	movabs $0xffff800000000000,%rax$/;"	l
ffff80000010b911	kernel.asm	/^ffff80000010b911:	80 ff ff $/;"	l
ffff80000010b914	kernel.asm	/^ffff80000010b914:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff80000010b917	kernel.asm	/^ffff80000010b917:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff80000010b91b	kernel.asm	/^ffff80000010b91b:	eb 63                	jmp    ffff80000010b980 <walkpgdir+0xc8>$/;"	l
ffff80000010b91d	kernel.asm	/^ffff80000010b91d:	83 7d bc 00          	cmpl   $0x0,-0x44(%rbp)$/;"	l
ffff80000010b921	kernel.asm	/^ffff80000010b921:	74 17                	je     ffff80000010b93a <walkpgdir+0x82>$/;"	l
ffff80000010b923	kernel.asm	/^ffff80000010b923:	48 b8 d1 45 10 00 00 	movabs $0xffff8000001045d1,%rax$/;"	l
ffff80000010b92a	kernel.asm	/^ffff80000010b92a:	80 ff ff $/;"	l
ffff80000010b92d	kernel.asm	/^ffff80000010b92d:	ff d0                	callq  *%rax$/;"	l
ffff80000010b92f	kernel.asm	/^ffff80000010b92f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff80000010b933	kernel.asm	/^ffff80000010b933:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)$/;"	l
ffff80000010b938	kernel.asm	/^ffff80000010b938:	75 0a                	jne    ffff80000010b944 <walkpgdir+0x8c>$/;"	l
ffff80000010b93a	kernel.asm	/^ffff80000010b93a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff80000010b93f	kernel.asm	/^ffff80000010b93f:	e9 bf 01 00 00       	jmpq   ffff80000010bb03 <walkpgdir+0x24b>$/;"	l
ffff80000010b944	kernel.asm	/^ffff80000010b944:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010b948	kernel.asm	/^ffff80000010b948:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
ffff80000010b94d	kernel.asm	/^ffff80000010b94d:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffff80000010b952	kernel.asm	/^ffff80000010b952:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010b955	kernel.asm	/^ffff80000010b955:	48 b8 72 7b 10 00 00 	movabs $0xffff800000107b72,%rax$/;"	l
ffff80000010b95c	kernel.asm	/^ffff80000010b95c:	80 ff ff $/;"	l
ffff80000010b95f	kernel.asm	/^ffff80000010b95f:	ff d0                	callq  *%rax$/;"	l
ffff80000010b961	kernel.asm	/^ffff80000010b961:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx$/;"	l
ffff80000010b965	kernel.asm	/^ffff80000010b965:	48 b8 00 00 00 00 00 	movabs $0x800000000000,%rax$/;"	l
ffff80000010b96c	kernel.asm	/^ffff80000010b96c:	80 00 00 $/;"	l
ffff80000010b96f	kernel.asm	/^ffff80000010b96f:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff80000010b972	kernel.asm	/^ffff80000010b972:	48 83 c8 07          	or     $0x7,%rax$/;"	l
ffff80000010b976	kernel.asm	/^ffff80000010b976:	48 89 c2             	mov    %rax,%rdx$/;"	l
ffff80000010b979	kernel.asm	/^ffff80000010b979:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff80000010b97d	kernel.asm	/^ffff80000010b97d:	48 89 10             	mov    %rdx,(%rax)$/;"	l
ffff80000010b980	kernel.asm	/^ffff80000010b980:	48 8b 45 c0          	mov    -0x40(%rbp),%rax$/;"	l
ffff80000010b984	kernel.asm	/^ffff80000010b984:	48 c1 e8 1e          	shr    $0x1e,%rax$/;"	l
ffff80000010b988	kernel.asm	/^ffff80000010b988:	25 ff 01 00 00       	and    $0x1ff,%eax$/;"	l
ffff80000010b98d	kernel.asm	/^ffff80000010b98d:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx$/;"	l
ffff80000010b994	kernel.asm	/^ffff80000010b994:	00 $/;"	l
ffff80000010b995	kernel.asm	/^ffff80000010b995:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010b999	kernel.asm	/^ffff80000010b999:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff80000010b99c	kernel.asm	/^ffff80000010b99c:	48 89 45 d8          	mov    %rax,-0x28(%rbp)$/;"	l
ffff80000010b9a0	kernel.asm	/^ffff80000010b9a0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff80000010b9a4	kernel.asm	/^ffff80000010b9a4:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff80000010b9a7	kernel.asm	/^ffff80000010b9a7:	83 e0 01             	and    $0x1,%eax$/;"	l
ffff80000010b9aa	kernel.asm	/^ffff80000010b9aa:	48 85 c0             	test   %rax,%rax$/;"	l
ffff80000010b9ad	kernel.asm	/^ffff80000010b9ad:	74 23                	je     ffff80000010b9d2 <walkpgdir+0x11a>$/;"	l
ffff80000010b9af	kernel.asm	/^ffff80000010b9af:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff80000010b9b3	kernel.asm	/^ffff80000010b9b3:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff80000010b9b6	kernel.asm	/^ffff80000010b9b6:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax$/;"	l
ffff80000010b9bc	kernel.asm	/^ffff80000010b9bc:	48 89 c2             	mov    %rax,%rdx$/;"	l
ffff80000010b9bf	kernel.asm	/^ffff80000010b9bf:	48 b8 00 00 00 00 00 	movabs $0xffff800000000000,%rax$/;"	l
ffff80000010b9c6	kernel.asm	/^ffff80000010b9c6:	80 ff ff $/;"	l
ffff80000010b9c9	kernel.asm	/^ffff80000010b9c9:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff80000010b9cc	kernel.asm	/^ffff80000010b9cc:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ffff80000010b9d0	kernel.asm	/^ffff80000010b9d0:	eb 63                	jmp    ffff80000010ba35 <walkpgdir+0x17d>$/;"	l
ffff80000010b9d2	kernel.asm	/^ffff80000010b9d2:	83 7d bc 00          	cmpl   $0x0,-0x44(%rbp)$/;"	l
ffff80000010b9d6	kernel.asm	/^ffff80000010b9d6:	74 17                	je     ffff80000010b9ef <walkpgdir+0x137>$/;"	l
ffff80000010b9d8	kernel.asm	/^ffff80000010b9d8:	48 b8 d1 45 10 00 00 	movabs $0xffff8000001045d1,%rax$/;"	l
ffff80000010b9df	kernel.asm	/^ffff80000010b9df:	80 ff ff $/;"	l
ffff80000010b9e2	kernel.asm	/^ffff80000010b9e2:	ff d0                	callq  *%rax$/;"	l
ffff80000010b9e4	kernel.asm	/^ffff80000010b9e4:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ffff80000010b9e8	kernel.asm	/^ffff80000010b9e8:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)$/;"	l
ffff80000010b9ed	kernel.asm	/^ffff80000010b9ed:	75 0a                	jne    ffff80000010b9f9 <walkpgdir+0x141>$/;"	l
ffff80000010b9ef	kernel.asm	/^ffff80000010b9ef:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff80000010b9f4	kernel.asm	/^ffff80000010b9f4:	e9 0a 01 00 00       	jmpq   ffff80000010bb03 <walkpgdir+0x24b>$/;"	l
ffff80000010b9f9	kernel.asm	/^ffff80000010b9f9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff80000010b9fd	kernel.asm	/^ffff80000010b9fd:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
ffff80000010ba02	kernel.asm	/^ffff80000010ba02:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffff80000010ba07	kernel.asm	/^ffff80000010ba07:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010ba0a	kernel.asm	/^ffff80000010ba0a:	48 b8 72 7b 10 00 00 	movabs $0xffff800000107b72,%rax$/;"	l
ffff80000010ba11	kernel.asm	/^ffff80000010ba11:	80 ff ff $/;"	l
ffff80000010ba14	kernel.asm	/^ffff80000010ba14:	ff d0                	callq  *%rax$/;"	l
ffff80000010ba16	kernel.asm	/^ffff80000010ba16:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
ffff80000010ba1a	kernel.asm	/^ffff80000010ba1a:	48 b8 00 00 00 00 00 	movabs $0x800000000000,%rax$/;"	l
ffff80000010ba21	kernel.asm	/^ffff80000010ba21:	80 00 00 $/;"	l
ffff80000010ba24	kernel.asm	/^ffff80000010ba24:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff80000010ba27	kernel.asm	/^ffff80000010ba27:	48 83 c8 07          	or     $0x7,%rax$/;"	l
ffff80000010ba2b	kernel.asm	/^ffff80000010ba2b:	48 89 c2             	mov    %rax,%rdx$/;"	l
ffff80000010ba2e	kernel.asm	/^ffff80000010ba2e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff80000010ba32	kernel.asm	/^ffff80000010ba32:	48 89 10             	mov    %rdx,(%rax)$/;"	l
ffff80000010ba35	kernel.asm	/^ffff80000010ba35:	48 8b 45 c0          	mov    -0x40(%rbp),%rax$/;"	l
ffff80000010ba39	kernel.asm	/^ffff80000010ba39:	48 c1 e8 15          	shr    $0x15,%rax$/;"	l
ffff80000010ba3d	kernel.asm	/^ffff80000010ba3d:	25 ff 01 00 00       	and    $0x1ff,%eax$/;"	l
ffff80000010ba42	kernel.asm	/^ffff80000010ba42:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx$/;"	l
ffff80000010ba49	kernel.asm	/^ffff80000010ba49:	00 $/;"	l
ffff80000010ba4a	kernel.asm	/^ffff80000010ba4a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff80000010ba4e	kernel.asm	/^ffff80000010ba4e:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff80000010ba51	kernel.asm	/^ffff80000010ba51:	48 89 45 d0          	mov    %rax,-0x30(%rbp)$/;"	l
ffff80000010ba55	kernel.asm	/^ffff80000010ba55:	48 8b 45 d0          	mov    -0x30(%rbp),%rax$/;"	l
ffff80000010ba59	kernel.asm	/^ffff80000010ba59:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff80000010ba5c	kernel.asm	/^ffff80000010ba5c:	83 e0 01             	and    $0x1,%eax$/;"	l
ffff80000010ba5f	kernel.asm	/^ffff80000010ba5f:	48 85 c0             	test   %rax,%rax$/;"	l
ffff80000010ba62	kernel.asm	/^ffff80000010ba62:	74 23                	je     ffff80000010ba87 <walkpgdir+0x1cf>$/;"	l
ffff80000010ba64	kernel.asm	/^ffff80000010ba64:	48 8b 45 d0          	mov    -0x30(%rbp),%rax$/;"	l
ffff80000010ba68	kernel.asm	/^ffff80000010ba68:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff80000010ba6b	kernel.asm	/^ffff80000010ba6b:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax$/;"	l
ffff80000010ba71	kernel.asm	/^ffff80000010ba71:	48 89 c2             	mov    %rax,%rdx$/;"	l
ffff80000010ba74	kernel.asm	/^ffff80000010ba74:	48 b8 00 00 00 00 00 	movabs $0xffff800000000000,%rax$/;"	l
ffff80000010ba7b	kernel.asm	/^ffff80000010ba7b:	80 ff ff $/;"	l
ffff80000010ba7e	kernel.asm	/^ffff80000010ba7e:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff80000010ba81	kernel.asm	/^ffff80000010ba81:	48 89 45 e8          	mov    %rax,-0x18(%rbp)$/;"	l
ffff80000010ba85	kernel.asm	/^ffff80000010ba85:	eb 60                	jmp    ffff80000010bae7 <walkpgdir+0x22f>$/;"	l
ffff80000010ba87	kernel.asm	/^ffff80000010ba87:	83 7d bc 00          	cmpl   $0x0,-0x44(%rbp)$/;"	l
ffff80000010ba8b	kernel.asm	/^ffff80000010ba8b:	74 17                	je     ffff80000010baa4 <walkpgdir+0x1ec>$/;"	l
ffff80000010ba8d	kernel.asm	/^ffff80000010ba8d:	48 b8 d1 45 10 00 00 	movabs $0xffff8000001045d1,%rax$/;"	l
ffff80000010ba94	kernel.asm	/^ffff80000010ba94:	80 ff ff $/;"	l
ffff80000010ba97	kernel.asm	/^ffff80000010ba97:	ff d0                	callq  *%rax$/;"	l
ffff80000010ba99	kernel.asm	/^ffff80000010ba99:	48 89 45 e8          	mov    %rax,-0x18(%rbp)$/;"	l
ffff80000010ba9d	kernel.asm	/^ffff80000010ba9d:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)$/;"	l
ffff80000010baa2	kernel.asm	/^ffff80000010baa2:	75 07                	jne    ffff80000010baab <walkpgdir+0x1f3>$/;"	l
ffff80000010baa4	kernel.asm	/^ffff80000010baa4:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff80000010baa9	kernel.asm	/^ffff80000010baa9:	eb 58                	jmp    ffff80000010bb03 <walkpgdir+0x24b>$/;"	l
ffff80000010baab	kernel.asm	/^ffff80000010baab:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010baaf	kernel.asm	/^ffff80000010baaf:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
ffff80000010bab4	kernel.asm	/^ffff80000010bab4:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffff80000010bab9	kernel.asm	/^ffff80000010bab9:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010babc	kernel.asm	/^ffff80000010babc:	48 b8 72 7b 10 00 00 	movabs $0xffff800000107b72,%rax$/;"	l
ffff80000010bac3	kernel.asm	/^ffff80000010bac3:	80 ff ff $/;"	l
ffff80000010bac6	kernel.asm	/^ffff80000010bac6:	ff d0                	callq  *%rax$/;"	l
ffff80000010bac8	kernel.asm	/^ffff80000010bac8:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx$/;"	l
ffff80000010bacc	kernel.asm	/^ffff80000010bacc:	48 b8 00 00 00 00 00 	movabs $0x800000000000,%rax$/;"	l
ffff80000010bad3	kernel.asm	/^ffff80000010bad3:	80 00 00 $/;"	l
ffff80000010bad6	kernel.asm	/^ffff80000010bad6:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff80000010bad9	kernel.asm	/^ffff80000010bad9:	48 83 c8 07          	or     $0x7,%rax$/;"	l
ffff80000010badd	kernel.asm	/^ffff80000010badd:	48 89 c2             	mov    %rax,%rdx$/;"	l
ffff80000010bae0	kernel.asm	/^ffff80000010bae0:	48 8b 45 d0          	mov    -0x30(%rbp),%rax$/;"	l
ffff80000010bae4	kernel.asm	/^ffff80000010bae4:	48 89 10             	mov    %rdx,(%rax)$/;"	l
ffff80000010bae7	kernel.asm	/^ffff80000010bae7:	48 8b 45 c0          	mov    -0x40(%rbp),%rax$/;"	l
ffff80000010baeb	kernel.asm	/^ffff80000010baeb:	48 c1 e8 0c          	shr    $0xc,%rax$/;"	l
ffff80000010baef	kernel.asm	/^ffff80000010baef:	25 ff 01 00 00       	and    $0x1ff,%eax$/;"	l
ffff80000010baf4	kernel.asm	/^ffff80000010baf4:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx$/;"	l
ffff80000010bafb	kernel.asm	/^ffff80000010bafb:	00 $/;"	l
ffff80000010bafc	kernel.asm	/^ffff80000010bafc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010bb00	kernel.asm	/^ffff80000010bb00:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff80000010bb03	kernel.asm	/^ffff80000010bb03:	c9                   	leaveq $/;"	l
ffff80000010bb04	kernel.asm	/^ffff80000010bb04:	c3                   	retq   $/;"	l
ffff80000010bb05	kernel.asm	/^ffff80000010bb05 <mappages>:$/;"	l
ffff80000010bb05	kernel.asm	/^ffff80000010bb05:	55                   	push   %rbp$/;"	l
ffff80000010bb06	kernel.asm	/^ffff80000010bb06:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010bb09	kernel.asm	/^ffff80000010bb09:	48 83 ec 50          	sub    $0x50,%rsp$/;"	l
ffff80000010bb0d	kernel.asm	/^ffff80000010bb0d:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)$/;"	l
ffff80000010bb11	kernel.asm	/^ffff80000010bb11:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)$/;"	l
ffff80000010bb15	kernel.asm	/^ffff80000010bb15:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)$/;"	l
ffff80000010bb19	kernel.asm	/^ffff80000010bb19:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)$/;"	l
ffff80000010bb1d	kernel.asm	/^ffff80000010bb1d:	44 89 45 bc          	mov    %r8d,-0x44(%rbp)$/;"	l
ffff80000010bb21	kernel.asm	/^ffff80000010bb21:	48 8b 45 d0          	mov    -0x30(%rbp),%rax$/;"	l
ffff80000010bb25	kernel.asm	/^ffff80000010bb25:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax$/;"	l
ffff80000010bb2b	kernel.asm	/^ffff80000010bb2b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff80000010bb2f	kernel.asm	/^ffff80000010bb2f:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx$/;"	l
ffff80000010bb33	kernel.asm	/^ffff80000010bb33:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
ffff80000010bb37	kernel.asm	/^ffff80000010bb37:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff80000010bb3a	kernel.asm	/^ffff80000010bb3a:	48 83 e8 01          	sub    $0x1,%rax$/;"	l
ffff80000010bb3e	kernel.asm	/^ffff80000010bb3e:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax$/;"	l
ffff80000010bb44	kernel.asm	/^ffff80000010bb44:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ffff80000010bb48	kernel.asm	/^ffff80000010bb48:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx$/;"	l
ffff80000010bb4c	kernel.asm	/^ffff80000010bb4c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff80000010bb50	kernel.asm	/^ffff80000010bb50:	ba 01 00 00 00       	mov    $0x1,%edx$/;"	l
ffff80000010bb55	kernel.asm	/^ffff80000010bb55:	48 89 ce             	mov    %rcx,%rsi$/;"	l
ffff80000010bb58	kernel.asm	/^ffff80000010bb58:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010bb5b	kernel.asm	/^ffff80000010bb5b:	48 b8 b8 b8 10 00 00 	movabs $0xffff80000010b8b8,%rax$/;"	l
ffff80000010bb62	kernel.asm	/^ffff80000010bb62:	80 ff ff $/;"	l
ffff80000010bb65	kernel.asm	/^ffff80000010bb65:	ff d0                	callq  *%rax$/;"	l
ffff80000010bb67	kernel.asm	/^ffff80000010bb67:	48 89 45 e8          	mov    %rax,-0x18(%rbp)$/;"	l
ffff80000010bb6b	kernel.asm	/^ffff80000010bb6b:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)$/;"	l
ffff80000010bb70	kernel.asm	/^ffff80000010bb70:	75 07                	jne    ffff80000010bb79 <mappages+0x74>$/;"	l
ffff80000010bb72	kernel.asm	/^ffff80000010bb72:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff80000010bb77	kernel.asm	/^ffff80000010bb77:	eb 61                	jmp    ffff80000010bbda <mappages+0xd5>$/;"	l
ffff80000010bb79	kernel.asm	/^ffff80000010bb79:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010bb7d	kernel.asm	/^ffff80000010bb7d:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff80000010bb80	kernel.asm	/^ffff80000010bb80:	83 e0 01             	and    $0x1,%eax$/;"	l
ffff80000010bb83	kernel.asm	/^ffff80000010bb83:	48 85 c0             	test   %rax,%rax$/;"	l
ffff80000010bb86	kernel.asm	/^ffff80000010bb86:	74 16                	je     ffff80000010bb9e <mappages+0x99>$/;"	l
ffff80000010bb88	kernel.asm	/^ffff80000010bb88:	48 bf b4 dc 10 00 00 	movabs $0xffff80000010dcb4,%rdi$/;"	l
ffff80000010bb8f	kernel.asm	/^ffff80000010bb8f:	80 ff ff $/;"	l
ffff80000010bb92	kernel.asm	/^ffff80000010bb92:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff80000010bb99	kernel.asm	/^ffff80000010bb99:	80 ff ff $/;"	l
ffff80000010bb9c	kernel.asm	/^ffff80000010bb9c:	ff d0                	callq  *%rax$/;"	l
ffff80000010bb9e	kernel.asm	/^ffff80000010bb9e:	8b 45 bc             	mov    -0x44(%rbp),%eax$/;"	l
ffff80000010bba1	kernel.asm	/^ffff80000010bba1:	48 98                	cltq   $/;"	l
ffff80000010bba3	kernel.asm	/^ffff80000010bba3:	48 0b 45 c0          	or     -0x40(%rbp),%rax$/;"	l
ffff80000010bba7	kernel.asm	/^ffff80000010bba7:	48 83 c8 01          	or     $0x1,%rax$/;"	l
ffff80000010bbab	kernel.asm	/^ffff80000010bbab:	48 89 c2             	mov    %rax,%rdx$/;"	l
ffff80000010bbae	kernel.asm	/^ffff80000010bbae:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010bbb2	kernel.asm	/^ffff80000010bbb2:	48 89 10             	mov    %rdx,(%rax)$/;"	l
ffff80000010bbb5	kernel.asm	/^ffff80000010bbb5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010bbb9	kernel.asm	/^ffff80000010bbb9:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax$/;"	l
ffff80000010bbbd	kernel.asm	/^ffff80000010bbbd:	74 15                	je     ffff80000010bbd4 <mappages+0xcf>$/;"	l
ffff80000010bbbf	kernel.asm	/^ffff80000010bbbf:	48 81 45 f8 00 10 00 	addq   $0x1000,-0x8(%rbp)$/;"	l
ffff80000010bbc6	kernel.asm	/^ffff80000010bbc6:	00 $/;"	l
ffff80000010bbc7	kernel.asm	/^ffff80000010bbc7:	48 81 45 c0 00 10 00 	addq   $0x1000,-0x40(%rbp)$/;"	l
ffff80000010bbce	kernel.asm	/^ffff80000010bbce:	00 $/;"	l
ffff80000010bbcf	kernel.asm	/^ffff80000010bbcf:	e9 74 ff ff ff       	jmpq   ffff80000010bb48 <mappages+0x43>$/;"	l
ffff80000010bbd4	kernel.asm	/^ffff80000010bbd4:	90                   	nop$/;"	l
ffff80000010bbd5	kernel.asm	/^ffff80000010bbd5:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff80000010bbda	kernel.asm	/^ffff80000010bbda:	c9                   	leaveq $/;"	l
ffff80000010bbdb	kernel.asm	/^ffff80000010bbdb:	c3                   	retq   $/;"	l
ffff80000010bbdc	kernel.asm	/^ffff80000010bbdc <inituvm>:$/;"	l
ffff80000010bbdc	kernel.asm	/^ffff80000010bbdc:	55                   	push   %rbp$/;"	l
ffff80000010bbdd	kernel.asm	/^ffff80000010bbdd:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010bbe0	kernel.asm	/^ffff80000010bbe0:	48 83 ec 30          	sub    $0x30,%rsp$/;"	l
ffff80000010bbe4	kernel.asm	/^ffff80000010bbe4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
ffff80000010bbe8	kernel.asm	/^ffff80000010bbe8:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)$/;"	l
ffff80000010bbec	kernel.asm	/^ffff80000010bbec:	89 55 dc             	mov    %edx,-0x24(%rbp)$/;"	l
ffff80000010bbef	kernel.asm	/^ffff80000010bbef:	81 7d dc ff 0f 00 00 	cmpl   $0xfff,-0x24(%rbp)$/;"	l
ffff80000010bbf6	kernel.asm	/^ffff80000010bbf6:	76 16                	jbe    ffff80000010bc0e <inituvm+0x32>$/;"	l
ffff80000010bbf8	kernel.asm	/^ffff80000010bbf8:	48 bf ba dc 10 00 00 	movabs $0xffff80000010dcba,%rdi$/;"	l
ffff80000010bbff	kernel.asm	/^ffff80000010bbff:	80 ff ff $/;"	l
ffff80000010bc02	kernel.asm	/^ffff80000010bc02:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff80000010bc09	kernel.asm	/^ffff80000010bc09:	80 ff ff $/;"	l
ffff80000010bc0c	kernel.asm	/^ffff80000010bc0c:	ff d0                	callq  *%rax$/;"	l
ffff80000010bc0e	kernel.asm	/^ffff80000010bc0e:	48 b8 d1 45 10 00 00 	movabs $0xffff8000001045d1,%rax$/;"	l
ffff80000010bc15	kernel.asm	/^ffff80000010bc15:	80 ff ff $/;"	l
ffff80000010bc18	kernel.asm	/^ffff80000010bc18:	ff d0                	callq  *%rax$/;"	l
ffff80000010bc1a	kernel.asm	/^ffff80000010bc1a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff80000010bc1e	kernel.asm	/^ffff80000010bc1e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010bc22	kernel.asm	/^ffff80000010bc22:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
ffff80000010bc27	kernel.asm	/^ffff80000010bc27:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffff80000010bc2c	kernel.asm	/^ffff80000010bc2c:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010bc2f	kernel.asm	/^ffff80000010bc2f:	48 b8 72 7b 10 00 00 	movabs $0xffff800000107b72,%rax$/;"	l
ffff80000010bc36	kernel.asm	/^ffff80000010bc36:	80 ff ff $/;"	l
ffff80000010bc39	kernel.asm	/^ffff80000010bc39:	ff d0                	callq  *%rax$/;"	l
ffff80000010bc3b	kernel.asm	/^ffff80000010bc3b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx$/;"	l
ffff80000010bc3f	kernel.asm	/^ffff80000010bc3f:	48 b8 00 00 00 00 00 	movabs $0x800000000000,%rax$/;"	l
ffff80000010bc46	kernel.asm	/^ffff80000010bc46:	80 00 00 $/;"	l
ffff80000010bc49	kernel.asm	/^ffff80000010bc49:	48 01 c2             	add    %rax,%rdx$/;"	l
ffff80000010bc4c	kernel.asm	/^ffff80000010bc4c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010bc50	kernel.asm	/^ffff80000010bc50:	41 b8 06 00 00 00    	mov    $0x6,%r8d$/;"	l
ffff80000010bc56	kernel.asm	/^ffff80000010bc56:	48 89 d1             	mov    %rdx,%rcx$/;"	l
ffff80000010bc59	kernel.asm	/^ffff80000010bc59:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
ffff80000010bc5e	kernel.asm	/^ffff80000010bc5e:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffff80000010bc63	kernel.asm	/^ffff80000010bc63:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010bc66	kernel.asm	/^ffff80000010bc66:	48 b8 05 bb 10 00 00 	movabs $0xffff80000010bb05,%rax$/;"	l
ffff80000010bc6d	kernel.asm	/^ffff80000010bc6d:	80 ff ff $/;"	l
ffff80000010bc70	kernel.asm	/^ffff80000010bc70:	ff d0                	callq  *%rax$/;"	l
ffff80000010bc72	kernel.asm	/^ffff80000010bc72:	8b 55 dc             	mov    -0x24(%rbp),%edx$/;"	l
ffff80000010bc75	kernel.asm	/^ffff80000010bc75:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx$/;"	l
ffff80000010bc79	kernel.asm	/^ffff80000010bc79:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010bc7d	kernel.asm	/^ffff80000010bc7d:	48 89 ce             	mov    %rcx,%rsi$/;"	l
ffff80000010bc80	kernel.asm	/^ffff80000010bc80:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010bc83	kernel.asm	/^ffff80000010bc83:	48 b8 6f 7c 10 00 00 	movabs $0xffff800000107c6f,%rax$/;"	l
ffff80000010bc8a	kernel.asm	/^ffff80000010bc8a:	80 ff ff $/;"	l
ffff80000010bc8d	kernel.asm	/^ffff80000010bc8d:	ff d0                	callq  *%rax$/;"	l
ffff80000010bc8f	kernel.asm	/^ffff80000010bc8f:	90                   	nop$/;"	l
ffff80000010bc90	kernel.asm	/^ffff80000010bc90:	c9                   	leaveq $/;"	l
ffff80000010bc91	kernel.asm	/^ffff80000010bc91:	c3                   	retq   $/;"	l
ffff80000010bc92	kernel.asm	/^ffff80000010bc92 <loaduvm>:$/;"	l
ffff80000010bc92	kernel.asm	/^ffff80000010bc92:	55                   	push   %rbp$/;"	l
ffff80000010bc93	kernel.asm	/^ffff80000010bc93:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010bc96	kernel.asm	/^ffff80000010bc96:	48 83 ec 40          	sub    $0x40,%rsp$/;"	l
ffff80000010bc9a	kernel.asm	/^ffff80000010bc9a:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)$/;"	l
ffff80000010bc9e	kernel.asm	/^ffff80000010bc9e:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)$/;"	l
ffff80000010bca2	kernel.asm	/^ffff80000010bca2:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)$/;"	l
ffff80000010bca6	kernel.asm	/^ffff80000010bca6:	89 4d c4             	mov    %ecx,-0x3c(%rbp)$/;"	l
ffff80000010bca9	kernel.asm	/^ffff80000010bca9:	44 89 45 c0          	mov    %r8d,-0x40(%rbp)$/;"	l
ffff80000010bcad	kernel.asm	/^ffff80000010bcad:	48 8b 45 d0          	mov    -0x30(%rbp),%rax$/;"	l
ffff80000010bcb1	kernel.asm	/^ffff80000010bcb1:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
ffff80000010bcb6	kernel.asm	/^ffff80000010bcb6:	48 85 c0             	test   %rax,%rax$/;"	l
ffff80000010bcb9	kernel.asm	/^ffff80000010bcb9:	74 16                	je     ffff80000010bcd1 <loaduvm+0x3f>$/;"	l
ffff80000010bcbb	kernel.asm	/^ffff80000010bcbb:	48 bf d8 dc 10 00 00 	movabs $0xffff80000010dcd8,%rdi$/;"	l
ffff80000010bcc2	kernel.asm	/^ffff80000010bcc2:	80 ff ff $/;"	l
ffff80000010bcc5	kernel.asm	/^ffff80000010bcc5:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff80000010bccc	kernel.asm	/^ffff80000010bccc:	80 ff ff $/;"	l
ffff80000010bccf	kernel.asm	/^ffff80000010bccf:	ff d0                	callq  *%rax$/;"	l
ffff80000010bcd1	kernel.asm	/^ffff80000010bcd1:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)$/;"	l
ffff80000010bcd8	kernel.asm	/^ffff80000010bcd8:	e9 c4 00 00 00       	jmpq   ffff80000010bda1 <loaduvm+0x10f>$/;"	l
ffff80000010bcdd	kernel.asm	/^ffff80000010bcdd:	8b 55 fc             	mov    -0x4(%rbp),%edx$/;"	l
ffff80000010bce0	kernel.asm	/^ffff80000010bce0:	48 8b 45 d0          	mov    -0x30(%rbp),%rax$/;"	l
ffff80000010bce4	kernel.asm	/^ffff80000010bce4:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx$/;"	l
ffff80000010bce8	kernel.asm	/^ffff80000010bce8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff80000010bcec	kernel.asm	/^ffff80000010bcec:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
ffff80000010bcf1	kernel.asm	/^ffff80000010bcf1:	48 89 ce             	mov    %rcx,%rsi$/;"	l
ffff80000010bcf4	kernel.asm	/^ffff80000010bcf4:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010bcf7	kernel.asm	/^ffff80000010bcf7:	48 b8 b8 b8 10 00 00 	movabs $0xffff80000010b8b8,%rax$/;"	l
ffff80000010bcfe	kernel.asm	/^ffff80000010bcfe:	80 ff ff $/;"	l
ffff80000010bd01	kernel.asm	/^ffff80000010bd01:	ff d0                	callq  *%rax$/;"	l
ffff80000010bd03	kernel.asm	/^ffff80000010bd03:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ffff80000010bd07	kernel.asm	/^ffff80000010bd07:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)$/;"	l
ffff80000010bd0c	kernel.asm	/^ffff80000010bd0c:	75 16                	jne    ffff80000010bd24 <loaduvm+0x92>$/;"	l
ffff80000010bd0e	kernel.asm	/^ffff80000010bd0e:	48 bf fb dc 10 00 00 	movabs $0xffff80000010dcfb,%rdi$/;"	l
ffff80000010bd15	kernel.asm	/^ffff80000010bd15:	80 ff ff $/;"	l
ffff80000010bd18	kernel.asm	/^ffff80000010bd18:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff80000010bd1f	kernel.asm	/^ffff80000010bd1f:	80 ff ff $/;"	l
ffff80000010bd22	kernel.asm	/^ffff80000010bd22:	ff d0                	callq  *%rax$/;"	l
ffff80000010bd24	kernel.asm	/^ffff80000010bd24:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff80000010bd28	kernel.asm	/^ffff80000010bd28:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff80000010bd2b	kernel.asm	/^ffff80000010bd2b:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax$/;"	l
ffff80000010bd31	kernel.asm	/^ffff80000010bd31:	48 89 45 e8          	mov    %rax,-0x18(%rbp)$/;"	l
ffff80000010bd35	kernel.asm	/^ffff80000010bd35:	8b 45 c0             	mov    -0x40(%rbp),%eax$/;"	l
ffff80000010bd38	kernel.asm	/^ffff80000010bd38:	2b 45 fc             	sub    -0x4(%rbp),%eax$/;"	l
ffff80000010bd3b	kernel.asm	/^ffff80000010bd3b:	3d ff 0f 00 00       	cmp    $0xfff,%eax$/;"	l
ffff80000010bd40	kernel.asm	/^ffff80000010bd40:	77 0b                	ja     ffff80000010bd4d <loaduvm+0xbb>$/;"	l
ffff80000010bd42	kernel.asm	/^ffff80000010bd42:	8b 45 c0             	mov    -0x40(%rbp),%eax$/;"	l
ffff80000010bd45	kernel.asm	/^ffff80000010bd45:	2b 45 fc             	sub    -0x4(%rbp),%eax$/;"	l
ffff80000010bd48	kernel.asm	/^ffff80000010bd48:	89 45 f8             	mov    %eax,-0x8(%rbp)$/;"	l
ffff80000010bd4b	kernel.asm	/^ffff80000010bd4b:	eb 07                	jmp    ffff80000010bd54 <loaduvm+0xc2>$/;"	l
ffff80000010bd4d	kernel.asm	/^ffff80000010bd4d:	c7 45 f8 00 10 00 00 	movl   $0x1000,-0x8(%rbp)$/;"	l
ffff80000010bd54	kernel.asm	/^ffff80000010bd54:	8b 55 c4             	mov    -0x3c(%rbp),%edx$/;"	l
ffff80000010bd57	kernel.asm	/^ffff80000010bd57:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff80000010bd5a	kernel.asm	/^ffff80000010bd5a:	8d 34 02             	lea    (%rdx,%rax,1),%esi$/;"	l
ffff80000010bd5d	kernel.asm	/^ffff80000010bd5d:	48 ba 00 00 00 00 00 	movabs $0xffff800000000000,%rdx$/;"	l
ffff80000010bd64	kernel.asm	/^ffff80000010bd64:	80 ff ff $/;"	l
ffff80000010bd67	kernel.asm	/^ffff80000010bd67:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010bd6b	kernel.asm	/^ffff80000010bd6b:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff80000010bd6e	kernel.asm	/^ffff80000010bd6e:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010bd71	kernel.asm	/^ffff80000010bd71:	8b 55 f8             	mov    -0x8(%rbp),%edx$/;"	l
ffff80000010bd74	kernel.asm	/^ffff80000010bd74:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
ffff80000010bd78	kernel.asm	/^ffff80000010bd78:	89 d1                	mov    %edx,%ecx$/;"	l
ffff80000010bd7a	kernel.asm	/^ffff80000010bd7a:	89 f2                	mov    %esi,%edx$/;"	l
ffff80000010bd7c	kernel.asm	/^ffff80000010bd7c:	48 89 fe             	mov    %rdi,%rsi$/;"	l
ffff80000010bd7f	kernel.asm	/^ffff80000010bd7f:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010bd82	kernel.asm	/^ffff80000010bd82:	48 b8 0d 33 10 00 00 	movabs $0xffff80000010330d,%rax$/;"	l
ffff80000010bd89	kernel.asm	/^ffff80000010bd89:	80 ff ff $/;"	l
ffff80000010bd8c	kernel.asm	/^ffff80000010bd8c:	ff d0                	callq  *%rax$/;"	l
ffff80000010bd8e	kernel.asm	/^ffff80000010bd8e:	3b 45 f8             	cmp    -0x8(%rbp),%eax$/;"	l
ffff80000010bd91	kernel.asm	/^ffff80000010bd91:	74 07                	je     ffff80000010bd9a <loaduvm+0x108>$/;"	l
ffff80000010bd93	kernel.asm	/^ffff80000010bd93:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff80000010bd98	kernel.asm	/^ffff80000010bd98:	eb 18                	jmp    ffff80000010bdb2 <loaduvm+0x120>$/;"	l
ffff80000010bd9a	kernel.asm	/^ffff80000010bd9a:	81 45 fc 00 10 00 00 	addl   $0x1000,-0x4(%rbp)$/;"	l
ffff80000010bda1	kernel.asm	/^ffff80000010bda1:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff80000010bda4	kernel.asm	/^ffff80000010bda4:	3b 45 c0             	cmp    -0x40(%rbp),%eax$/;"	l
ffff80000010bda7	kernel.asm	/^ffff80000010bda7:	0f 82 30 ff ff ff    	jb     ffff80000010bcdd <loaduvm+0x4b>$/;"	l
ffff80000010bdad	kernel.asm	/^ffff80000010bdad:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff80000010bdb2	kernel.asm	/^ffff80000010bdb2:	c9                   	leaveq $/;"	l
ffff80000010bdb3	kernel.asm	/^ffff80000010bdb3:	c3                   	retq   $/;"	l
ffff80000010bdb4	kernel.asm	/^ffff80000010bdb4 <allocuvm>:$/;"	l
ffff80000010bdb4	kernel.asm	/^ffff80000010bdb4:	55                   	push   %rbp$/;"	l
ffff80000010bdb5	kernel.asm	/^ffff80000010bdb5:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010bdb8	kernel.asm	/^ffff80000010bdb8:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ffff80000010bdbc	kernel.asm	/^ffff80000010bdbc:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
ffff80000010bdc0	kernel.asm	/^ffff80000010bdc0:	89 75 e4             	mov    %esi,-0x1c(%rbp)$/;"	l
ffff80000010bdc3	kernel.asm	/^ffff80000010bdc3:	89 55 e0             	mov    %edx,-0x20(%rbp)$/;"	l
ffff80000010bdc6	kernel.asm	/^ffff80000010bdc6:	8b 45 e0             	mov    -0x20(%rbp),%eax$/;"	l
ffff80000010bdc9	kernel.asm	/^ffff80000010bdc9:	3b 45 e4             	cmp    -0x1c(%rbp),%eax$/;"	l
ffff80000010bdcc	kernel.asm	/^ffff80000010bdcc:	73 08                	jae    ffff80000010bdd6 <allocuvm+0x22>$/;"	l
ffff80000010bdce	kernel.asm	/^ffff80000010bdce:	8b 45 e4             	mov    -0x1c(%rbp),%eax$/;"	l
ffff80000010bdd1	kernel.asm	/^ffff80000010bdd1:	e9 30 01 00 00       	jmpq   ffff80000010bf06 <allocuvm+0x152>$/;"	l
ffff80000010bdd6	kernel.asm	/^ffff80000010bdd6:	8b 45 e4             	mov    -0x1c(%rbp),%eax$/;"	l
ffff80000010bdd9	kernel.asm	/^ffff80000010bdd9:	48 05 ff 0f 00 00    	add    $0xfff,%rax$/;"	l
ffff80000010bddf	kernel.asm	/^ffff80000010bddf:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax$/;"	l
ffff80000010bde5	kernel.asm	/^ffff80000010bde5:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff80000010bde9	kernel.asm	/^ffff80000010bde9:	e9 08 01 00 00       	jmpq   ffff80000010bef6 <allocuvm+0x142>$/;"	l
ffff80000010bdee	kernel.asm	/^ffff80000010bdee:	48 b8 d1 45 10 00 00 	movabs $0xffff8000001045d1,%rax$/;"	l
ffff80000010bdf5	kernel.asm	/^ffff80000010bdf5:	80 ff ff $/;"	l
ffff80000010bdf8	kernel.asm	/^ffff80000010bdf8:	ff d0                	callq  *%rax$/;"	l
ffff80000010bdfa	kernel.asm	/^ffff80000010bdfa:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ffff80000010bdfe	kernel.asm	/^ffff80000010bdfe:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)$/;"	l
ffff80000010be03	kernel.asm	/^ffff80000010be03:	75 41                	jne    ffff80000010be46 <allocuvm+0x92>$/;"	l
ffff80000010be05	kernel.asm	/^ffff80000010be05:	48 bf 19 dd 10 00 00 	movabs $0xffff80000010dd19,%rdi$/;"	l
ffff80000010be0c	kernel.asm	/^ffff80000010be0c:	80 ff ff $/;"	l
ffff80000010be0f	kernel.asm	/^ffff80000010be0f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff80000010be14	kernel.asm	/^ffff80000010be14:	48 ba ac 07 10 00 00 	movabs $0xffff8000001007ac,%rdx$/;"	l
ffff80000010be1b	kernel.asm	/^ffff80000010be1b:	80 ff ff $/;"	l
ffff80000010be1e	kernel.asm	/^ffff80000010be1e:	ff d2                	callq  *%rdx$/;"	l
ffff80000010be20	kernel.asm	/^ffff80000010be20:	8b 55 e4             	mov    -0x1c(%rbp),%edx$/;"	l
ffff80000010be23	kernel.asm	/^ffff80000010be23:	8b 4d e0             	mov    -0x20(%rbp),%ecx$/;"	l
ffff80000010be26	kernel.asm	/^ffff80000010be26:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010be2a	kernel.asm	/^ffff80000010be2a:	48 89 ce             	mov    %rcx,%rsi$/;"	l
ffff80000010be2d	kernel.asm	/^ffff80000010be2d:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010be30	kernel.asm	/^ffff80000010be30:	48 b8 08 bf 10 00 00 	movabs $0xffff80000010bf08,%rax$/;"	l
ffff80000010be37	kernel.asm	/^ffff80000010be37:	80 ff ff $/;"	l
ffff80000010be3a	kernel.asm	/^ffff80000010be3a:	ff d0                	callq  *%rax$/;"	l
ffff80000010be3c	kernel.asm	/^ffff80000010be3c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff80000010be41	kernel.asm	/^ffff80000010be41:	e9 c0 00 00 00       	jmpq   ffff80000010bf06 <allocuvm+0x152>$/;"	l
ffff80000010be46	kernel.asm	/^ffff80000010be46:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff80000010be4a	kernel.asm	/^ffff80000010be4a:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
ffff80000010be4f	kernel.asm	/^ffff80000010be4f:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffff80000010be54	kernel.asm	/^ffff80000010be54:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010be57	kernel.asm	/^ffff80000010be57:	48 b8 72 7b 10 00 00 	movabs $0xffff800000107b72,%rax$/;"	l
ffff80000010be5e	kernel.asm	/^ffff80000010be5e:	80 ff ff $/;"	l
ffff80000010be61	kernel.asm	/^ffff80000010be61:	ff d0                	callq  *%rax$/;"	l
ffff80000010be63	kernel.asm	/^ffff80000010be63:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
ffff80000010be67	kernel.asm	/^ffff80000010be67:	48 b8 00 00 00 00 00 	movabs $0x800000000000,%rax$/;"	l
ffff80000010be6e	kernel.asm	/^ffff80000010be6e:	80 00 00 $/;"	l
ffff80000010be71	kernel.asm	/^ffff80000010be71:	48 01 c2             	add    %rax,%rdx$/;"	l
ffff80000010be74	kernel.asm	/^ffff80000010be74:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi$/;"	l
ffff80000010be78	kernel.asm	/^ffff80000010be78:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010be7c	kernel.asm	/^ffff80000010be7c:	41 b8 06 00 00 00    	mov    $0x6,%r8d$/;"	l
ffff80000010be82	kernel.asm	/^ffff80000010be82:	48 89 d1             	mov    %rdx,%rcx$/;"	l
ffff80000010be85	kernel.asm	/^ffff80000010be85:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
ffff80000010be8a	kernel.asm	/^ffff80000010be8a:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010be8d	kernel.asm	/^ffff80000010be8d:	48 b8 05 bb 10 00 00 	movabs $0xffff80000010bb05,%rax$/;"	l
ffff80000010be94	kernel.asm	/^ffff80000010be94:	80 ff ff $/;"	l
ffff80000010be97	kernel.asm	/^ffff80000010be97:	ff d0                	callq  *%rax$/;"	l
ffff80000010be99	kernel.asm	/^ffff80000010be99:	85 c0                	test   %eax,%eax$/;"	l
ffff80000010be9b	kernel.asm	/^ffff80000010be9b:	79 51                	jns    ffff80000010beee <allocuvm+0x13a>$/;"	l
ffff80000010be9d	kernel.asm	/^ffff80000010be9d:	48 bf 31 dd 10 00 00 	movabs $0xffff80000010dd31,%rdi$/;"	l
ffff80000010bea4	kernel.asm	/^ffff80000010bea4:	80 ff ff $/;"	l
ffff80000010bea7	kernel.asm	/^ffff80000010bea7:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff80000010beac	kernel.asm	/^ffff80000010beac:	48 ba ac 07 10 00 00 	movabs $0xffff8000001007ac,%rdx$/;"	l
ffff80000010beb3	kernel.asm	/^ffff80000010beb3:	80 ff ff $/;"	l
ffff80000010beb6	kernel.asm	/^ffff80000010beb6:	ff d2                	callq  *%rdx$/;"	l
ffff80000010beb8	kernel.asm	/^ffff80000010beb8:	8b 55 e4             	mov    -0x1c(%rbp),%edx$/;"	l
ffff80000010bebb	kernel.asm	/^ffff80000010bebb:	8b 4d e0             	mov    -0x20(%rbp),%ecx$/;"	l
ffff80000010bebe	kernel.asm	/^ffff80000010bebe:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010bec2	kernel.asm	/^ffff80000010bec2:	48 89 ce             	mov    %rcx,%rsi$/;"	l
ffff80000010bec5	kernel.asm	/^ffff80000010bec5:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010bec8	kernel.asm	/^ffff80000010bec8:	48 b8 08 bf 10 00 00 	movabs $0xffff80000010bf08,%rax$/;"	l
ffff80000010becf	kernel.asm	/^ffff80000010becf:	80 ff ff $/;"	l
ffff80000010bed2	kernel.asm	/^ffff80000010bed2:	ff d0                	callq  *%rax$/;"	l
ffff80000010bed4	kernel.asm	/^ffff80000010bed4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff80000010bed8	kernel.asm	/^ffff80000010bed8:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010bedb	kernel.asm	/^ffff80000010bedb:	48 b8 db 44 10 00 00 	movabs $0xffff8000001044db,%rax$/;"	l
ffff80000010bee2	kernel.asm	/^ffff80000010bee2:	80 ff ff $/;"	l
ffff80000010bee5	kernel.asm	/^ffff80000010bee5:	ff d0                	callq  *%rax$/;"	l
ffff80000010bee7	kernel.asm	/^ffff80000010bee7:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff80000010beec	kernel.asm	/^ffff80000010beec:	eb 18                	jmp    ffff80000010bf06 <allocuvm+0x152>$/;"	l
ffff80000010beee	kernel.asm	/^ffff80000010beee:	48 81 45 f8 00 10 00 	addq   $0x1000,-0x8(%rbp)$/;"	l
ffff80000010bef5	kernel.asm	/^ffff80000010bef5:	00 $/;"	l
ffff80000010bef6	kernel.asm	/^ffff80000010bef6:	8b 45 e0             	mov    -0x20(%rbp),%eax$/;"	l
ffff80000010bef9	kernel.asm	/^ffff80000010bef9:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax$/;"	l
ffff80000010befd	kernel.asm	/^ffff80000010befd:	0f 87 eb fe ff ff    	ja     ffff80000010bdee <allocuvm+0x3a>$/;"	l
ffff80000010bf03	kernel.asm	/^ffff80000010bf03:	8b 45 e0             	mov    -0x20(%rbp),%eax$/;"	l
ffff80000010bf06	kernel.asm	/^ffff80000010bf06:	c9                   	leaveq $/;"	l
ffff80000010bf07	kernel.asm	/^ffff80000010bf07:	c3                   	retq   $/;"	l
ffff80000010bf08	kernel.asm	/^ffff80000010bf08 <deallocuvm>:$/;"	l
ffff80000010bf08	kernel.asm	/^ffff80000010bf08:	55                   	push   %rbp$/;"	l
ffff80000010bf09	kernel.asm	/^ffff80000010bf09:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010bf0c	kernel.asm	/^ffff80000010bf0c:	48 83 ec 40          	sub    $0x40,%rsp$/;"	l
ffff80000010bf10	kernel.asm	/^ffff80000010bf10:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)$/;"	l
ffff80000010bf14	kernel.asm	/^ffff80000010bf14:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)$/;"	l
ffff80000010bf18	kernel.asm	/^ffff80000010bf18:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)$/;"	l
ffff80000010bf1c	kernel.asm	/^ffff80000010bf1c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
ffff80000010bf20	kernel.asm	/^ffff80000010bf20:	48 3b 45 d0          	cmp    -0x30(%rbp),%rax$/;"	l
ffff80000010bf24	kernel.asm	/^ffff80000010bf24:	72 09                	jb     ffff80000010bf2f <deallocuvm+0x27>$/;"	l
ffff80000010bf26	kernel.asm	/^ffff80000010bf26:	48 8b 45 d0          	mov    -0x30(%rbp),%rax$/;"	l
ffff80000010bf2a	kernel.asm	/^ffff80000010bf2a:	e9 cd 00 00 00       	jmpq   ffff80000010bffc <deallocuvm+0xf4>$/;"	l
ffff80000010bf2f	kernel.asm	/^ffff80000010bf2f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
ffff80000010bf33	kernel.asm	/^ffff80000010bf33:	48 05 ff 0f 00 00    	add    $0xfff,%rax$/;"	l
ffff80000010bf39	kernel.asm	/^ffff80000010bf39:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax$/;"	l
ffff80000010bf3f	kernel.asm	/^ffff80000010bf3f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff80000010bf43	kernel.asm	/^ffff80000010bf43:	e9 a2 00 00 00       	jmpq   ffff80000010bfea <deallocuvm+0xe2>$/;"	l
ffff80000010bf48	kernel.asm	/^ffff80000010bf48:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx$/;"	l
ffff80000010bf4c	kernel.asm	/^ffff80000010bf4c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff80000010bf50	kernel.asm	/^ffff80000010bf50:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
ffff80000010bf55	kernel.asm	/^ffff80000010bf55:	48 89 ce             	mov    %rcx,%rsi$/;"	l
ffff80000010bf58	kernel.asm	/^ffff80000010bf58:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010bf5b	kernel.asm	/^ffff80000010bf5b:	48 b8 b8 b8 10 00 00 	movabs $0xffff80000010b8b8,%rax$/;"	l
ffff80000010bf62	kernel.asm	/^ffff80000010bf62:	80 ff ff $/;"	l
ffff80000010bf65	kernel.asm	/^ffff80000010bf65:	ff d0                	callq  *%rax$/;"	l
ffff80000010bf67	kernel.asm	/^ffff80000010bf67:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ffff80000010bf6b	kernel.asm	/^ffff80000010bf6b:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)$/;"	l
ffff80000010bf70	kernel.asm	/^ffff80000010bf70:	74 70                	je     ffff80000010bfe2 <deallocuvm+0xda>$/;"	l
ffff80000010bf72	kernel.asm	/^ffff80000010bf72:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff80000010bf76	kernel.asm	/^ffff80000010bf76:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff80000010bf79	kernel.asm	/^ffff80000010bf79:	83 e0 01             	and    $0x1,%eax$/;"	l
ffff80000010bf7c	kernel.asm	/^ffff80000010bf7c:	48 85 c0             	test   %rax,%rax$/;"	l
ffff80000010bf7f	kernel.asm	/^ffff80000010bf7f:	74 61                	je     ffff80000010bfe2 <deallocuvm+0xda>$/;"	l
ffff80000010bf81	kernel.asm	/^ffff80000010bf81:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff80000010bf85	kernel.asm	/^ffff80000010bf85:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff80000010bf88	kernel.asm	/^ffff80000010bf88:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax$/;"	l
ffff80000010bf8e	kernel.asm	/^ffff80000010bf8e:	48 89 45 e8          	mov    %rax,-0x18(%rbp)$/;"	l
ffff80000010bf92	kernel.asm	/^ffff80000010bf92:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)$/;"	l
ffff80000010bf97	kernel.asm	/^ffff80000010bf97:	75 16                	jne    ffff80000010bfaf <deallocuvm+0xa7>$/;"	l
ffff80000010bf99	kernel.asm	/^ffff80000010bf99:	48 bf 4d dd 10 00 00 	movabs $0xffff80000010dd4d,%rdi$/;"	l
ffff80000010bfa0	kernel.asm	/^ffff80000010bfa0:	80 ff ff $/;"	l
ffff80000010bfa3	kernel.asm	/^ffff80000010bfa3:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff80000010bfaa	kernel.asm	/^ffff80000010bfaa:	80 ff ff $/;"	l
ffff80000010bfad	kernel.asm	/^ffff80000010bfad:	ff d0                	callq  *%rax$/;"	l
ffff80000010bfaf	kernel.asm	/^ffff80000010bfaf:	48 ba 00 00 00 00 00 	movabs $0xffff800000000000,%rdx$/;"	l
ffff80000010bfb6	kernel.asm	/^ffff80000010bfb6:	80 ff ff $/;"	l
ffff80000010bfb9	kernel.asm	/^ffff80000010bfb9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010bfbd	kernel.asm	/^ffff80000010bfbd:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff80000010bfc0	kernel.asm	/^ffff80000010bfc0:	48 89 45 e0          	mov    %rax,-0x20(%rbp)$/;"	l
ffff80000010bfc4	kernel.asm	/^ffff80000010bfc4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff80000010bfc8	kernel.asm	/^ffff80000010bfc8:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010bfcb	kernel.asm	/^ffff80000010bfcb:	48 b8 db 44 10 00 00 	movabs $0xffff8000001044db,%rax$/;"	l
ffff80000010bfd2	kernel.asm	/^ffff80000010bfd2:	80 ff ff $/;"	l
ffff80000010bfd5	kernel.asm	/^ffff80000010bfd5:	ff d0                	callq  *%rax$/;"	l
ffff80000010bfd7	kernel.asm	/^ffff80000010bfd7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff80000010bfdb	kernel.asm	/^ffff80000010bfdb:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)$/;"	l
ffff80000010bfe2	kernel.asm	/^ffff80000010bfe2:	48 81 45 f8 00 10 00 	addq   $0x1000,-0x8(%rbp)$/;"	l
ffff80000010bfe9	kernel.asm	/^ffff80000010bfe9:	00 $/;"	l
ffff80000010bfea	kernel.asm	/^ffff80000010bfea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010bfee	kernel.asm	/^ffff80000010bfee:	48 3b 45 d0          	cmp    -0x30(%rbp),%rax$/;"	l
ffff80000010bff2	kernel.asm	/^ffff80000010bff2:	0f 82 50 ff ff ff    	jb     ffff80000010bf48 <deallocuvm+0x40>$/;"	l
ffff80000010bff8	kernel.asm	/^ffff80000010bff8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
ffff80000010bffc	kernel.asm	/^ffff80000010bffc:	c9                   	leaveq $/;"	l
ffff80000010bffd	kernel.asm	/^ffff80000010bffd:	c3                   	retq   $/;"	l
ffff80000010bffe	kernel.asm	/^ffff80000010bffe <freevm>:$/;"	l
ffff80000010bffe	kernel.asm	/^ffff80000010bffe:	55                   	push   %rbp$/;"	l
ffff80000010bfff	kernel.asm	/^ffff80000010bfff:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010c002	kernel.asm	/^ffff80000010c002:	48 83 ec 40          	sub    $0x40,%rsp$/;"	l
ffff80000010c006	kernel.asm	/^ffff80000010c006:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)$/;"	l
ffff80000010c00a	kernel.asm	/^ffff80000010c00a:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)$/;"	l
ffff80000010c00f	kernel.asm	/^ffff80000010c00f:	75 16                	jne    ffff80000010c027 <freevm+0x29>$/;"	l
ffff80000010c011	kernel.asm	/^ffff80000010c011:	48 bf 53 dd 10 00 00 	movabs $0xffff80000010dd53,%rdi$/;"	l
ffff80000010c018	kernel.asm	/^ffff80000010c018:	80 ff ff $/;"	l
ffff80000010c01b	kernel.asm	/^ffff80000010c01b:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff80000010c022	kernel.asm	/^ffff80000010c022:	80 ff ff $/;"	l
ffff80000010c025	kernel.asm	/^ffff80000010c025:	ff d0                	callq  *%rax$/;"	l
ffff80000010c027	kernel.asm	/^ffff80000010c027:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)$/;"	l
ffff80000010c02e	kernel.asm	/^ffff80000010c02e:	e9 dc 01 00 00       	jmpq   ffff80000010c20f <freevm+0x211>$/;"	l
ffff80000010c033	kernel.asm	/^ffff80000010c033:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff80000010c036	kernel.asm	/^ffff80000010c036:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx$/;"	l
ffff80000010c03d	kernel.asm	/^ffff80000010c03d:	00 $/;"	l
ffff80000010c03e	kernel.asm	/^ffff80000010c03e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
ffff80000010c042	kernel.asm	/^ffff80000010c042:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff80000010c045	kernel.asm	/^ffff80000010c045:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff80000010c048	kernel.asm	/^ffff80000010c048:	83 e0 01             	and    $0x1,%eax$/;"	l
ffff80000010c04b	kernel.asm	/^ffff80000010c04b:	48 85 c0             	test   %rax,%rax$/;"	l
ffff80000010c04e	kernel.asm	/^ffff80000010c04e:	0f 84 b7 01 00 00    	je     ffff80000010c20b <freevm+0x20d>$/;"	l
ffff80000010c054	kernel.asm	/^ffff80000010c054:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff80000010c057	kernel.asm	/^ffff80000010c057:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx$/;"	l
ffff80000010c05e	kernel.asm	/^ffff80000010c05e:	00 $/;"	l
ffff80000010c05f	kernel.asm	/^ffff80000010c05f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
ffff80000010c063	kernel.asm	/^ffff80000010c063:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff80000010c066	kernel.asm	/^ffff80000010c066:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff80000010c069	kernel.asm	/^ffff80000010c069:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax$/;"	l
ffff80000010c06f	kernel.asm	/^ffff80000010c06f:	48 89 c2             	mov    %rax,%rdx$/;"	l
ffff80000010c072	kernel.asm	/^ffff80000010c072:	48 b8 00 00 00 00 00 	movabs $0xffff800000000000,%rax$/;"	l
ffff80000010c079	kernel.asm	/^ffff80000010c079:	80 ff ff $/;"	l
ffff80000010c07c	kernel.asm	/^ffff80000010c07c:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff80000010c07f	kernel.asm	/^ffff80000010c07f:	48 89 45 e8          	mov    %rax,-0x18(%rbp)$/;"	l
ffff80000010c083	kernel.asm	/^ffff80000010c083:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)$/;"	l
ffff80000010c08a	kernel.asm	/^ffff80000010c08a:	e9 5c 01 00 00       	jmpq   ffff80000010c1eb <freevm+0x1ed>$/;"	l
ffff80000010c08f	kernel.asm	/^ffff80000010c08f:	8b 45 f8             	mov    -0x8(%rbp),%eax$/;"	l
ffff80000010c092	kernel.asm	/^ffff80000010c092:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx$/;"	l
ffff80000010c099	kernel.asm	/^ffff80000010c099:	00 $/;"	l
ffff80000010c09a	kernel.asm	/^ffff80000010c09a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010c09e	kernel.asm	/^ffff80000010c09e:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff80000010c0a1	kernel.asm	/^ffff80000010c0a1:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff80000010c0a4	kernel.asm	/^ffff80000010c0a4:	83 e0 01             	and    $0x1,%eax$/;"	l
ffff80000010c0a7	kernel.asm	/^ffff80000010c0a7:	48 85 c0             	test   %rax,%rax$/;"	l
ffff80000010c0aa	kernel.asm	/^ffff80000010c0aa:	0f 84 37 01 00 00    	je     ffff80000010c1e7 <freevm+0x1e9>$/;"	l
ffff80000010c0b0	kernel.asm	/^ffff80000010c0b0:	8b 45 f8             	mov    -0x8(%rbp),%eax$/;"	l
ffff80000010c0b3	kernel.asm	/^ffff80000010c0b3:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx$/;"	l
ffff80000010c0ba	kernel.asm	/^ffff80000010c0ba:	00 $/;"	l
ffff80000010c0bb	kernel.asm	/^ffff80000010c0bb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010c0bf	kernel.asm	/^ffff80000010c0bf:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff80000010c0c2	kernel.asm	/^ffff80000010c0c2:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff80000010c0c5	kernel.asm	/^ffff80000010c0c5:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax$/;"	l
ffff80000010c0cb	kernel.asm	/^ffff80000010c0cb:	48 89 c2             	mov    %rax,%rdx$/;"	l
ffff80000010c0ce	kernel.asm	/^ffff80000010c0ce:	48 b8 00 00 00 00 00 	movabs $0xffff800000000000,%rax$/;"	l
ffff80000010c0d5	kernel.asm	/^ffff80000010c0d5:	80 ff ff $/;"	l
ffff80000010c0d8	kernel.asm	/^ffff80000010c0d8:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff80000010c0db	kernel.asm	/^ffff80000010c0db:	48 89 45 e0          	mov    %rax,-0x20(%rbp)$/;"	l
ffff80000010c0df	kernel.asm	/^ffff80000010c0df:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)$/;"	l
ffff80000010c0e6	kernel.asm	/^ffff80000010c0e6:	e9 dc 00 00 00       	jmpq   ffff80000010c1c7 <freevm+0x1c9>$/;"	l
ffff80000010c0eb	kernel.asm	/^ffff80000010c0eb:	8b 45 f4             	mov    -0xc(%rbp),%eax$/;"	l
ffff80000010c0ee	kernel.asm	/^ffff80000010c0ee:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx$/;"	l
ffff80000010c0f5	kernel.asm	/^ffff80000010c0f5:	00 $/;"	l
ffff80000010c0f6	kernel.asm	/^ffff80000010c0f6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff80000010c0fa	kernel.asm	/^ffff80000010c0fa:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff80000010c0fd	kernel.asm	/^ffff80000010c0fd:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff80000010c100	kernel.asm	/^ffff80000010c100:	83 e0 01             	and    $0x1,%eax$/;"	l
ffff80000010c103	kernel.asm	/^ffff80000010c103:	48 85 c0             	test   %rax,%rax$/;"	l
ffff80000010c106	kernel.asm	/^ffff80000010c106:	0f 84 b7 00 00 00    	je     ffff80000010c1c3 <freevm+0x1c5>$/;"	l
ffff80000010c10c	kernel.asm	/^ffff80000010c10c:	8b 45 f4             	mov    -0xc(%rbp),%eax$/;"	l
ffff80000010c10f	kernel.asm	/^ffff80000010c10f:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx$/;"	l
ffff80000010c116	kernel.asm	/^ffff80000010c116:	00 $/;"	l
ffff80000010c117	kernel.asm	/^ffff80000010c117:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff80000010c11b	kernel.asm	/^ffff80000010c11b:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff80000010c11e	kernel.asm	/^ffff80000010c11e:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff80000010c121	kernel.asm	/^ffff80000010c121:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax$/;"	l
ffff80000010c127	kernel.asm	/^ffff80000010c127:	48 89 c2             	mov    %rax,%rdx$/;"	l
ffff80000010c12a	kernel.asm	/^ffff80000010c12a:	48 b8 00 00 00 00 00 	movabs $0xffff800000000000,%rax$/;"	l
ffff80000010c131	kernel.asm	/^ffff80000010c131:	80 ff ff $/;"	l
ffff80000010c134	kernel.asm	/^ffff80000010c134:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff80000010c137	kernel.asm	/^ffff80000010c137:	48 89 45 d8          	mov    %rax,-0x28(%rbp)$/;"	l
ffff80000010c13b	kernel.asm	/^ffff80000010c13b:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)$/;"	l
ffff80000010c142	kernel.asm	/^ffff80000010c142:	eb 63                	jmp    ffff80000010c1a7 <freevm+0x1a9>$/;"	l
ffff80000010c144	kernel.asm	/^ffff80000010c144:	8b 45 f0             	mov    -0x10(%rbp),%eax$/;"	l
ffff80000010c147	kernel.asm	/^ffff80000010c147:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx$/;"	l
ffff80000010c14e	kernel.asm	/^ffff80000010c14e:	00 $/;"	l
ffff80000010c14f	kernel.asm	/^ffff80000010c14f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff80000010c153	kernel.asm	/^ffff80000010c153:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff80000010c156	kernel.asm	/^ffff80000010c156:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff80000010c159	kernel.asm	/^ffff80000010c159:	83 e0 01             	and    $0x1,%eax$/;"	l
ffff80000010c15c	kernel.asm	/^ffff80000010c15c:	48 85 c0             	test   %rax,%rax$/;"	l
ffff80000010c15f	kernel.asm	/^ffff80000010c15f:	74 42                	je     ffff80000010c1a3 <freevm+0x1a5>$/;"	l
ffff80000010c161	kernel.asm	/^ffff80000010c161:	8b 45 f0             	mov    -0x10(%rbp),%eax$/;"	l
ffff80000010c164	kernel.asm	/^ffff80000010c164:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx$/;"	l
ffff80000010c16b	kernel.asm	/^ffff80000010c16b:	00 $/;"	l
ffff80000010c16c	kernel.asm	/^ffff80000010c16c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff80000010c170	kernel.asm	/^ffff80000010c170:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff80000010c173	kernel.asm	/^ffff80000010c173:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff80000010c176	kernel.asm	/^ffff80000010c176:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax$/;"	l
ffff80000010c17c	kernel.asm	/^ffff80000010c17c:	48 89 c2             	mov    %rax,%rdx$/;"	l
ffff80000010c17f	kernel.asm	/^ffff80000010c17f:	48 b8 00 00 00 00 00 	movabs $0xffff800000000000,%rax$/;"	l
ffff80000010c186	kernel.asm	/^ffff80000010c186:	80 ff ff $/;"	l
ffff80000010c189	kernel.asm	/^ffff80000010c189:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff80000010c18c	kernel.asm	/^ffff80000010c18c:	48 89 45 d0          	mov    %rax,-0x30(%rbp)$/;"	l
ffff80000010c190	kernel.asm	/^ffff80000010c190:	48 8b 45 d0          	mov    -0x30(%rbp),%rax$/;"	l
ffff80000010c194	kernel.asm	/^ffff80000010c194:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010c197	kernel.asm	/^ffff80000010c197:	48 b8 db 44 10 00 00 	movabs $0xffff8000001044db,%rax$/;"	l
ffff80000010c19e	kernel.asm	/^ffff80000010c19e:	80 ff ff $/;"	l
ffff80000010c1a1	kernel.asm	/^ffff80000010c1a1:	ff d0                	callq  *%rax$/;"	l
ffff80000010c1a3	kernel.asm	/^ffff80000010c1a3:	83 45 f0 01          	addl   $0x1,-0x10(%rbp)$/;"	l
ffff80000010c1a7	kernel.asm	/^ffff80000010c1a7:	81 7d f0 ff 01 00 00 	cmpl   $0x1ff,-0x10(%rbp)$/;"	l
ffff80000010c1ae	kernel.asm	/^ffff80000010c1ae:	76 94                	jbe    ffff80000010c144 <freevm+0x146>$/;"	l
ffff80000010c1b0	kernel.asm	/^ffff80000010c1b0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff80000010c1b4	kernel.asm	/^ffff80000010c1b4:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010c1b7	kernel.asm	/^ffff80000010c1b7:	48 b8 db 44 10 00 00 	movabs $0xffff8000001044db,%rax$/;"	l
ffff80000010c1be	kernel.asm	/^ffff80000010c1be:	80 ff ff $/;"	l
ffff80000010c1c1	kernel.asm	/^ffff80000010c1c1:	ff d0                	callq  *%rax$/;"	l
ffff80000010c1c3	kernel.asm	/^ffff80000010c1c3:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)$/;"	l
ffff80000010c1c7	kernel.asm	/^ffff80000010c1c7:	81 7d f4 ff 01 00 00 	cmpl   $0x1ff,-0xc(%rbp)$/;"	l
ffff80000010c1ce	kernel.asm	/^ffff80000010c1ce:	0f 86 17 ff ff ff    	jbe    ffff80000010c0eb <freevm+0xed>$/;"	l
ffff80000010c1d4	kernel.asm	/^ffff80000010c1d4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff80000010c1d8	kernel.asm	/^ffff80000010c1d8:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010c1db	kernel.asm	/^ffff80000010c1db:	48 b8 db 44 10 00 00 	movabs $0xffff8000001044db,%rax$/;"	l
ffff80000010c1e2	kernel.asm	/^ffff80000010c1e2:	80 ff ff $/;"	l
ffff80000010c1e5	kernel.asm	/^ffff80000010c1e5:	ff d0                	callq  *%rax$/;"	l
ffff80000010c1e7	kernel.asm	/^ffff80000010c1e7:	83 45 f8 01          	addl   $0x1,-0x8(%rbp)$/;"	l
ffff80000010c1eb	kernel.asm	/^ffff80000010c1eb:	81 7d f8 ff 01 00 00 	cmpl   $0x1ff,-0x8(%rbp)$/;"	l
ffff80000010c1f2	kernel.asm	/^ffff80000010c1f2:	0f 86 97 fe ff ff    	jbe    ffff80000010c08f <freevm+0x91>$/;"	l
ffff80000010c1f8	kernel.asm	/^ffff80000010c1f8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010c1fc	kernel.asm	/^ffff80000010c1fc:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010c1ff	kernel.asm	/^ffff80000010c1ff:	48 b8 db 44 10 00 00 	movabs $0xffff8000001044db,%rax$/;"	l
ffff80000010c206	kernel.asm	/^ffff80000010c206:	80 ff ff $/;"	l
ffff80000010c209	kernel.asm	/^ffff80000010c209:	ff d0                	callq  *%rax$/;"	l
ffff80000010c20b	kernel.asm	/^ffff80000010c20b:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)$/;"	l
ffff80000010c20f	kernel.asm	/^ffff80000010c20f:	81 7d fc ff 00 00 00 	cmpl   $0xff,-0x4(%rbp)$/;"	l
ffff80000010c216	kernel.asm	/^ffff80000010c216:	0f 86 17 fe ff ff    	jbe    ffff80000010c033 <freevm+0x35>$/;"	l
ffff80000010c21c	kernel.asm	/^ffff80000010c21c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
ffff80000010c220	kernel.asm	/^ffff80000010c220:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010c223	kernel.asm	/^ffff80000010c223:	48 b8 db 44 10 00 00 	movabs $0xffff8000001044db,%rax$/;"	l
ffff80000010c22a	kernel.asm	/^ffff80000010c22a:	80 ff ff $/;"	l
ffff80000010c22d	kernel.asm	/^ffff80000010c22d:	ff d0                	callq  *%rax$/;"	l
ffff80000010c22f	kernel.asm	/^ffff80000010c22f:	90                   	nop$/;"	l
ffff80000010c230	kernel.asm	/^ffff80000010c230:	c9                   	leaveq $/;"	l
ffff80000010c231	kernel.asm	/^ffff80000010c231:	c3                   	retq   $/;"	l
ffff80000010c232	kernel.asm	/^ffff80000010c232 <clearpteu>:$/;"	l
ffff80000010c232	kernel.asm	/^ffff80000010c232:	55                   	push   %rbp$/;"	l
ffff80000010c233	kernel.asm	/^ffff80000010c233:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010c236	kernel.asm	/^ffff80000010c236:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ffff80000010c23a	kernel.asm	/^ffff80000010c23a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
ffff80000010c23e	kernel.asm	/^ffff80000010c23e:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)$/;"	l
ffff80000010c242	kernel.asm	/^ffff80000010c242:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx$/;"	l
ffff80000010c246	kernel.asm	/^ffff80000010c246:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010c24a	kernel.asm	/^ffff80000010c24a:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
ffff80000010c24f	kernel.asm	/^ffff80000010c24f:	48 89 ce             	mov    %rcx,%rsi$/;"	l
ffff80000010c252	kernel.asm	/^ffff80000010c252:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010c255	kernel.asm	/^ffff80000010c255:	48 b8 b8 b8 10 00 00 	movabs $0xffff80000010b8b8,%rax$/;"	l
ffff80000010c25c	kernel.asm	/^ffff80000010c25c:	80 ff ff $/;"	l
ffff80000010c25f	kernel.asm	/^ffff80000010c25f:	ff d0                	callq  *%rax$/;"	l
ffff80000010c261	kernel.asm	/^ffff80000010c261:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff80000010c265	kernel.asm	/^ffff80000010c265:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)$/;"	l
ffff80000010c26a	kernel.asm	/^ffff80000010c26a:	75 16                	jne    ffff80000010c282 <clearpteu+0x50>$/;"	l
ffff80000010c26c	kernel.asm	/^ffff80000010c26c:	48 bf 64 dd 10 00 00 	movabs $0xffff80000010dd64,%rdi$/;"	l
ffff80000010c273	kernel.asm	/^ffff80000010c273:	80 ff ff $/;"	l
ffff80000010c276	kernel.asm	/^ffff80000010c276:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff80000010c27d	kernel.asm	/^ffff80000010c27d:	80 ff ff $/;"	l
ffff80000010c280	kernel.asm	/^ffff80000010c280:	ff d0                	callq  *%rax$/;"	l
ffff80000010c282	kernel.asm	/^ffff80000010c282:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010c286	kernel.asm	/^ffff80000010c286:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff80000010c289	kernel.asm	/^ffff80000010c289:	48 83 e0 fb          	and    $0xfffffffffffffffb,%rax$/;"	l
ffff80000010c28d	kernel.asm	/^ffff80000010c28d:	48 89 c2             	mov    %rax,%rdx$/;"	l
ffff80000010c290	kernel.asm	/^ffff80000010c290:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010c294	kernel.asm	/^ffff80000010c294:	48 89 10             	mov    %rdx,(%rax)$/;"	l
ffff80000010c297	kernel.asm	/^ffff80000010c297:	90                   	nop$/;"	l
ffff80000010c298	kernel.asm	/^ffff80000010c298:	c9                   	leaveq $/;"	l
ffff80000010c299	kernel.asm	/^ffff80000010c299:	c3                   	retq   $/;"	l
ffff80000010c29a	kernel.asm	/^ffff80000010c29a <copyuvm>:$/;"	l
ffff80000010c29a	kernel.asm	/^ffff80000010c29a:	55                   	push   %rbp$/;"	l
ffff80000010c29b	kernel.asm	/^ffff80000010c29b:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010c29e	kernel.asm	/^ffff80000010c29e:	48 83 ec 40          	sub    $0x40,%rsp$/;"	l
ffff80000010c2a2	kernel.asm	/^ffff80000010c2a2:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)$/;"	l
ffff80000010c2a6	kernel.asm	/^ffff80000010c2a6:	89 75 c4             	mov    %esi,-0x3c(%rbp)$/;"	l
ffff80000010c2a9	kernel.asm	/^ffff80000010c2a9:	48 b8 5c b6 10 00 00 	movabs $0xffff80000010b65c,%rax$/;"	l
ffff80000010c2b0	kernel.asm	/^ffff80000010c2b0:	80 ff ff $/;"	l
ffff80000010c2b3	kernel.asm	/^ffff80000010c2b3:	ff d0                	callq  *%rax$/;"	l
ffff80000010c2b5	kernel.asm	/^ffff80000010c2b5:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ffff80000010c2b9	kernel.asm	/^ffff80000010c2b9:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)$/;"	l
ffff80000010c2be	kernel.asm	/^ffff80000010c2be:	75 0a                	jne    ffff80000010c2ca <copyuvm+0x30>$/;"	l
ffff80000010c2c0	kernel.asm	/^ffff80000010c2c0:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff80000010c2c5	kernel.asm	/^ffff80000010c2c5:	e9 51 01 00 00       	jmpq   ffff80000010c41b <copyuvm+0x181>$/;"	l
ffff80000010c2ca	kernel.asm	/^ffff80000010c2ca:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)$/;"	l
ffff80000010c2d1	kernel.asm	/^ffff80000010c2d1:	00 $/;"	l
ffff80000010c2d2	kernel.asm	/^ffff80000010c2d2:	e9 15 01 00 00       	jmpq   ffff80000010c3ec <copyuvm+0x152>$/;"	l
ffff80000010c2d7	kernel.asm	/^ffff80000010c2d7:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx$/;"	l
ffff80000010c2db	kernel.asm	/^ffff80000010c2db:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
ffff80000010c2df	kernel.asm	/^ffff80000010c2df:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
ffff80000010c2e4	kernel.asm	/^ffff80000010c2e4:	48 89 ce             	mov    %rcx,%rsi$/;"	l
ffff80000010c2e7	kernel.asm	/^ffff80000010c2e7:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010c2ea	kernel.asm	/^ffff80000010c2ea:	48 b8 b8 b8 10 00 00 	movabs $0xffff80000010b8b8,%rax$/;"	l
ffff80000010c2f1	kernel.asm	/^ffff80000010c2f1:	80 ff ff $/;"	l
ffff80000010c2f4	kernel.asm	/^ffff80000010c2f4:	ff d0                	callq  *%rax$/;"	l
ffff80000010c2f6	kernel.asm	/^ffff80000010c2f6:	48 89 45 e8          	mov    %rax,-0x18(%rbp)$/;"	l
ffff80000010c2fa	kernel.asm	/^ffff80000010c2fa:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)$/;"	l
ffff80000010c2ff	kernel.asm	/^ffff80000010c2ff:	75 16                	jne    ffff80000010c317 <copyuvm+0x7d>$/;"	l
ffff80000010c301	kernel.asm	/^ffff80000010c301:	48 bf 6e dd 10 00 00 	movabs $0xffff80000010dd6e,%rdi$/;"	l
ffff80000010c308	kernel.asm	/^ffff80000010c308:	80 ff ff $/;"	l
ffff80000010c30b	kernel.asm	/^ffff80000010c30b:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff80000010c312	kernel.asm	/^ffff80000010c312:	80 ff ff $/;"	l
ffff80000010c315	kernel.asm	/^ffff80000010c315:	ff d0                	callq  *%rax$/;"	l
ffff80000010c317	kernel.asm	/^ffff80000010c317:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010c31b	kernel.asm	/^ffff80000010c31b:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff80000010c31e	kernel.asm	/^ffff80000010c31e:	83 e0 01             	and    $0x1,%eax$/;"	l
ffff80000010c321	kernel.asm	/^ffff80000010c321:	48 85 c0             	test   %rax,%rax$/;"	l
ffff80000010c324	kernel.asm	/^ffff80000010c324:	75 16                	jne    ffff80000010c33c <copyuvm+0xa2>$/;"	l
ffff80000010c326	kernel.asm	/^ffff80000010c326:	48 bf 88 dd 10 00 00 	movabs $0xffff80000010dd88,%rdi$/;"	l
ffff80000010c32d	kernel.asm	/^ffff80000010c32d:	80 ff ff $/;"	l
ffff80000010c330	kernel.asm	/^ffff80000010c330:	48 b8 6c 0b 10 00 00 	movabs $0xffff800000100b6c,%rax$/;"	l
ffff80000010c337	kernel.asm	/^ffff80000010c337:	80 ff ff $/;"	l
ffff80000010c33a	kernel.asm	/^ffff80000010c33a:	ff d0                	callq  *%rax$/;"	l
ffff80000010c33c	kernel.asm	/^ffff80000010c33c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010c340	kernel.asm	/^ffff80000010c340:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff80000010c343	kernel.asm	/^ffff80000010c343:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax$/;"	l
ffff80000010c349	kernel.asm	/^ffff80000010c349:	48 89 45 e0          	mov    %rax,-0x20(%rbp)$/;"	l
ffff80000010c34d	kernel.asm	/^ffff80000010c34d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010c351	kernel.asm	/^ffff80000010c351:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff80000010c354	kernel.asm	/^ffff80000010c354:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
ffff80000010c359	kernel.asm	/^ffff80000010c359:	48 89 45 d8          	mov    %rax,-0x28(%rbp)$/;"	l
ffff80000010c35d	kernel.asm	/^ffff80000010c35d:	48 b8 d1 45 10 00 00 	movabs $0xffff8000001045d1,%rax$/;"	l
ffff80000010c364	kernel.asm	/^ffff80000010c364:	80 ff ff $/;"	l
ffff80000010c367	kernel.asm	/^ffff80000010c367:	ff d0                	callq  *%rax$/;"	l
ffff80000010c369	kernel.asm	/^ffff80000010c369:	48 89 45 d0          	mov    %rax,-0x30(%rbp)$/;"	l
ffff80000010c36d	kernel.asm	/^ffff80000010c36d:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)$/;"	l
ffff80000010c372	kernel.asm	/^ffff80000010c372:	0f 84 87 00 00 00    	je     ffff80000010c3ff <copyuvm+0x165>$/;"	l
ffff80000010c378	kernel.asm	/^ffff80000010c378:	48 ba 00 00 00 00 00 	movabs $0xffff800000000000,%rdx$/;"	l
ffff80000010c37f	kernel.asm	/^ffff80000010c37f:	80 ff ff $/;"	l
ffff80000010c382	kernel.asm	/^ffff80000010c382:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff80000010c386	kernel.asm	/^ffff80000010c386:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff80000010c389	kernel.asm	/^ffff80000010c389:	48 89 c1             	mov    %rax,%rcx$/;"	l
ffff80000010c38c	kernel.asm	/^ffff80000010c38c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax$/;"	l
ffff80000010c390	kernel.asm	/^ffff80000010c390:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
ffff80000010c395	kernel.asm	/^ffff80000010c395:	48 89 ce             	mov    %rcx,%rsi$/;"	l
ffff80000010c398	kernel.asm	/^ffff80000010c398:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010c39b	kernel.asm	/^ffff80000010c39b:	48 b8 6f 7c 10 00 00 	movabs $0xffff800000107c6f,%rax$/;"	l
ffff80000010c3a2	kernel.asm	/^ffff80000010c3a2:	80 ff ff $/;"	l
ffff80000010c3a5	kernel.asm	/^ffff80000010c3a5:	ff d0                	callq  *%rax$/;"	l
ffff80000010c3a7	kernel.asm	/^ffff80000010c3a7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff80000010c3ab	kernel.asm	/^ffff80000010c3ab:	89 c1                	mov    %eax,%ecx$/;"	l
ffff80000010c3ad	kernel.asm	/^ffff80000010c3ad:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx$/;"	l
ffff80000010c3b1	kernel.asm	/^ffff80000010c3b1:	48 b8 00 00 00 00 00 	movabs $0x800000000000,%rax$/;"	l
ffff80000010c3b8	kernel.asm	/^ffff80000010c3b8:	80 00 00 $/;"	l
ffff80000010c3bb	kernel.asm	/^ffff80000010c3bb:	48 01 c2             	add    %rax,%rdx$/;"	l
ffff80000010c3be	kernel.asm	/^ffff80000010c3be:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi$/;"	l
ffff80000010c3c2	kernel.asm	/^ffff80000010c3c2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff80000010c3c6	kernel.asm	/^ffff80000010c3c6:	41 89 c8             	mov    %ecx,%r8d$/;"	l
ffff80000010c3c9	kernel.asm	/^ffff80000010c3c9:	48 89 d1             	mov    %rdx,%rcx$/;"	l
ffff80000010c3cc	kernel.asm	/^ffff80000010c3cc:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
ffff80000010c3d1	kernel.asm	/^ffff80000010c3d1:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010c3d4	kernel.asm	/^ffff80000010c3d4:	48 b8 05 bb 10 00 00 	movabs $0xffff80000010bb05,%rax$/;"	l
ffff80000010c3db	kernel.asm	/^ffff80000010c3db:	80 ff ff $/;"	l
ffff80000010c3de	kernel.asm	/^ffff80000010c3de:	ff d0                	callq  *%rax$/;"	l
ffff80000010c3e0	kernel.asm	/^ffff80000010c3e0:	85 c0                	test   %eax,%eax$/;"	l
ffff80000010c3e2	kernel.asm	/^ffff80000010c3e2:	78 1e                	js     ffff80000010c402 <copyuvm+0x168>$/;"	l
ffff80000010c3e4	kernel.asm	/^ffff80000010c3e4:	48 81 45 f8 00 10 00 	addq   $0x1000,-0x8(%rbp)$/;"	l
ffff80000010c3eb	kernel.asm	/^ffff80000010c3eb:	00 $/;"	l
ffff80000010c3ec	kernel.asm	/^ffff80000010c3ec:	8b 45 c4             	mov    -0x3c(%rbp),%eax$/;"	l
ffff80000010c3ef	kernel.asm	/^ffff80000010c3ef:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax$/;"	l
ffff80000010c3f3	kernel.asm	/^ffff80000010c3f3:	0f 87 de fe ff ff    	ja     ffff80000010c2d7 <copyuvm+0x3d>$/;"	l
ffff80000010c3f9	kernel.asm	/^ffff80000010c3f9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff80000010c3fd	kernel.asm	/^ffff80000010c3fd:	eb 1c                	jmp    ffff80000010c41b <copyuvm+0x181>$/;"	l
ffff80000010c3ff	kernel.asm	/^ffff80000010c3ff:	90                   	nop$/;"	l
ffff80000010c400	kernel.asm	/^ffff80000010c400:	eb 01                	jmp    ffff80000010c403 <copyuvm+0x169>$/;"	l
ffff80000010c402	kernel.asm	/^ffff80000010c402:	90                   	nop$/;"	l
ffff80000010c403	kernel.asm	/^ffff80000010c403:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff80000010c407	kernel.asm	/^ffff80000010c407:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010c40a	kernel.asm	/^ffff80000010c40a:	48 b8 fe bf 10 00 00 	movabs $0xffff80000010bffe,%rax$/;"	l
ffff80000010c411	kernel.asm	/^ffff80000010c411:	80 ff ff $/;"	l
ffff80000010c414	kernel.asm	/^ffff80000010c414:	ff d0                	callq  *%rax$/;"	l
ffff80000010c416	kernel.asm	/^ffff80000010c416:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff80000010c41b	kernel.asm	/^ffff80000010c41b:	c9                   	leaveq $/;"	l
ffff80000010c41c	kernel.asm	/^ffff80000010c41c:	c3                   	retq   $/;"	l
ffff80000010c41d	kernel.asm	/^ffff80000010c41d <uva2ka>:$/;"	l
ffff80000010c41d	kernel.asm	/^ffff80000010c41d:	55                   	push   %rbp$/;"	l
ffff80000010c41e	kernel.asm	/^ffff80000010c41e:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010c421	kernel.asm	/^ffff80000010c421:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
ffff80000010c425	kernel.asm	/^ffff80000010c425:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
ffff80000010c429	kernel.asm	/^ffff80000010c429:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)$/;"	l
ffff80000010c42d	kernel.asm	/^ffff80000010c42d:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx$/;"	l
ffff80000010c431	kernel.asm	/^ffff80000010c431:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010c435	kernel.asm	/^ffff80000010c435:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
ffff80000010c43a	kernel.asm	/^ffff80000010c43a:	48 89 ce             	mov    %rcx,%rsi$/;"	l
ffff80000010c43d	kernel.asm	/^ffff80000010c43d:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010c440	kernel.asm	/^ffff80000010c440:	48 b8 b8 b8 10 00 00 	movabs $0xffff80000010b8b8,%rax$/;"	l
ffff80000010c447	kernel.asm	/^ffff80000010c447:	80 ff ff $/;"	l
ffff80000010c44a	kernel.asm	/^ffff80000010c44a:	ff d0                	callq  *%rax$/;"	l
ffff80000010c44c	kernel.asm	/^ffff80000010c44c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff80000010c450	kernel.asm	/^ffff80000010c450:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010c454	kernel.asm	/^ffff80000010c454:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff80000010c457	kernel.asm	/^ffff80000010c457:	83 e0 01             	and    $0x1,%eax$/;"	l
ffff80000010c45a	kernel.asm	/^ffff80000010c45a:	48 85 c0             	test   %rax,%rax$/;"	l
ffff80000010c45d	kernel.asm	/^ffff80000010c45d:	75 07                	jne    ffff80000010c466 <uva2ka+0x49>$/;"	l
ffff80000010c45f	kernel.asm	/^ffff80000010c45f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff80000010c464	kernel.asm	/^ffff80000010c464:	eb 33                	jmp    ffff80000010c499 <uva2ka+0x7c>$/;"	l
ffff80000010c466	kernel.asm	/^ffff80000010c466:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010c46a	kernel.asm	/^ffff80000010c46a:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff80000010c46d	kernel.asm	/^ffff80000010c46d:	83 e0 04             	and    $0x4,%eax$/;"	l
ffff80000010c470	kernel.asm	/^ffff80000010c470:	48 85 c0             	test   %rax,%rax$/;"	l
ffff80000010c473	kernel.asm	/^ffff80000010c473:	75 07                	jne    ffff80000010c47c <uva2ka+0x5f>$/;"	l
ffff80000010c475	kernel.asm	/^ffff80000010c475:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff80000010c47a	kernel.asm	/^ffff80000010c47a:	eb 1d                	jmp    ffff80000010c499 <uva2ka+0x7c>$/;"	l
ffff80000010c47c	kernel.asm	/^ffff80000010c47c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010c480	kernel.asm	/^ffff80000010c480:	48 8b 00             	mov    (%rax),%rax$/;"	l
ffff80000010c483	kernel.asm	/^ffff80000010c483:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax$/;"	l
ffff80000010c489	kernel.asm	/^ffff80000010c489:	48 89 c2             	mov    %rax,%rdx$/;"	l
ffff80000010c48c	kernel.asm	/^ffff80000010c48c:	48 b8 00 00 00 00 00 	movabs $0xffff800000000000,%rax$/;"	l
ffff80000010c493	kernel.asm	/^ffff80000010c493:	80 ff ff $/;"	l
ffff80000010c496	kernel.asm	/^ffff80000010c496:	48 01 d0             	add    %rdx,%rax$/;"	l
ffff80000010c499	kernel.asm	/^ffff80000010c499:	c9                   	leaveq $/;"	l
ffff80000010c49a	kernel.asm	/^ffff80000010c49a:	c3                   	retq   $/;"	l
ffff80000010c49b	kernel.asm	/^ffff80000010c49b <copyout>:$/;"	l
ffff80000010c49b	kernel.asm	/^ffff80000010c49b:	55                   	push   %rbp$/;"	l
ffff80000010c49c	kernel.asm	/^ffff80000010c49c:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010c49f	kernel.asm	/^ffff80000010c49f:	48 83 ec 40          	sub    $0x40,%rsp$/;"	l
ffff80000010c4a3	kernel.asm	/^ffff80000010c4a3:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)$/;"	l
ffff80000010c4a7	kernel.asm	/^ffff80000010c4a7:	89 75 d4             	mov    %esi,-0x2c(%rbp)$/;"	l
ffff80000010c4aa	kernel.asm	/^ffff80000010c4aa:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)$/;"	l
ffff80000010c4ae	kernel.asm	/^ffff80000010c4ae:	89 4d d0             	mov    %ecx,-0x30(%rbp)$/;"	l
ffff80000010c4b1	kernel.asm	/^ffff80000010c4b1:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
ffff80000010c4b5	kernel.asm	/^ffff80000010c4b5:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
ffff80000010c4b9	kernel.asm	/^ffff80000010c4b9:	e9 ad 00 00 00       	jmpq   ffff80000010c56b <copyout+0xd0>$/;"	l
ffff80000010c4be	kernel.asm	/^ffff80000010c4be:	8b 45 d4             	mov    -0x2c(%rbp),%eax$/;"	l
ffff80000010c4c1	kernel.asm	/^ffff80000010c4c1:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
ffff80000010c4c6	kernel.asm	/^ffff80000010c4c6:	48 89 45 e8          	mov    %rax,-0x18(%rbp)$/;"	l
ffff80000010c4ca	kernel.asm	/^ffff80000010c4ca:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx$/;"	l
ffff80000010c4ce	kernel.asm	/^ffff80000010c4ce:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
ffff80000010c4d2	kernel.asm	/^ffff80000010c4d2:	48 89 d6             	mov    %rdx,%rsi$/;"	l
ffff80000010c4d5	kernel.asm	/^ffff80000010c4d5:	48 89 c7             	mov    %rax,%rdi$/;"	l
ffff80000010c4d8	kernel.asm	/^ffff80000010c4d8:	48 b8 1d c4 10 00 00 	movabs $0xffff80000010c41d,%rax$/;"	l
ffff80000010c4df	kernel.asm	/^ffff80000010c4df:	80 ff ff $/;"	l
ffff80000010c4e2	kernel.asm	/^ffff80000010c4e2:	ff d0                	callq  *%rax$/;"	l
ffff80000010c4e4	kernel.asm	/^ffff80000010c4e4:	48 89 45 e0          	mov    %rax,-0x20(%rbp)$/;"	l
ffff80000010c4e8	kernel.asm	/^ffff80000010c4e8:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)$/;"	l
ffff80000010c4ed	kernel.asm	/^ffff80000010c4ed:	75 0a                	jne    ffff80000010c4f9 <copyout+0x5e>$/;"	l
ffff80000010c4ef	kernel.asm	/^ffff80000010c4ef:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
ffff80000010c4f4	kernel.asm	/^ffff80000010c4f4:	e9 81 00 00 00       	jmpq   ffff80000010c57a <copyout+0xdf>$/;"	l
ffff80000010c4f9	kernel.asm	/^ffff80000010c4f9:	8b 45 d4             	mov    -0x2c(%rbp),%eax$/;"	l
ffff80000010c4fc	kernel.asm	/^ffff80000010c4fc:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx$/;"	l
ffff80000010c500	kernel.asm	/^ffff80000010c500:	48 29 c2             	sub    %rax,%rdx$/;"	l
ffff80000010c503	kernel.asm	/^ffff80000010c503:	48 89 d0             	mov    %rdx,%rax$/;"	l
ffff80000010c506	kernel.asm	/^ffff80000010c506:	48 05 00 10 00 00    	add    $0x1000,%rax$/;"	l
ffff80000010c50c	kernel.asm	/^ffff80000010c50c:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ffff80000010c510	kernel.asm	/^ffff80000010c510:	8b 45 d0             	mov    -0x30(%rbp),%eax$/;"	l
ffff80000010c513	kernel.asm	/^ffff80000010c513:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax$/;"	l
ffff80000010c517	kernel.asm	/^ffff80000010c517:	73 07                	jae    ffff80000010c520 <copyout+0x85>$/;"	l
ffff80000010c519	kernel.asm	/^ffff80000010c519:	8b 45 d0             	mov    -0x30(%rbp),%eax$/;"	l
ffff80000010c51c	kernel.asm	/^ffff80000010c51c:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
ffff80000010c520	kernel.asm	/^ffff80000010c520:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff80000010c524	kernel.asm	/^ffff80000010c524:	89 c6                	mov    %eax,%esi$/;"	l
ffff80000010c526	kernel.asm	/^ffff80000010c526:	8b 45 d4             	mov    -0x2c(%rbp),%eax$/;"	l
ffff80000010c529	kernel.asm	/^ffff80000010c529:	48 2b 45 e8          	sub    -0x18(%rbp),%rax$/;"	l
ffff80000010c52d	kernel.asm	/^ffff80000010c52d:	48 89 c2             	mov    %rax,%rdx$/;"	l
ffff80000010c530	kernel.asm	/^ffff80000010c530:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
ffff80000010c534	kernel.asm	/^ffff80000010c534:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx$/;"	l
ffff80000010c538	kernel.asm	/^ffff80000010c538:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
ffff80000010c53c	kernel.asm	/^ffff80000010c53c:	89 f2                	mov    %esi,%edx$/;"	l
ffff80000010c53e	kernel.asm	/^ffff80000010c53e:	48 89 c6             	mov    %rax,%rsi$/;"	l
ffff80000010c541	kernel.asm	/^ffff80000010c541:	48 89 cf             	mov    %rcx,%rdi$/;"	l
ffff80000010c544	kernel.asm	/^ffff80000010c544:	48 b8 6f 7c 10 00 00 	movabs $0xffff800000107c6f,%rax$/;"	l
ffff80000010c54b	kernel.asm	/^ffff80000010c54b:	80 ff ff $/;"	l
ffff80000010c54e	kernel.asm	/^ffff80000010c54e:	ff d0                	callq  *%rax$/;"	l
ffff80000010c550	kernel.asm	/^ffff80000010c550:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff80000010c554	kernel.asm	/^ffff80000010c554:	29 45 d0             	sub    %eax,-0x30(%rbp)$/;"	l
ffff80000010c557	kernel.asm	/^ffff80000010c557:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
ffff80000010c55b	kernel.asm	/^ffff80000010c55b:	48 01 45 f8          	add    %rax,-0x8(%rbp)$/;"	l
ffff80000010c55f	kernel.asm	/^ffff80000010c55f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
ffff80000010c563	kernel.asm	/^ffff80000010c563:	05 00 10 00 00       	add    $0x1000,%eax$/;"	l
ffff80000010c568	kernel.asm	/^ffff80000010c568:	89 45 d4             	mov    %eax,-0x2c(%rbp)$/;"	l
ffff80000010c56b	kernel.asm	/^ffff80000010c56b:	83 7d d0 00          	cmpl   $0x0,-0x30(%rbp)$/;"	l
ffff80000010c56f	kernel.asm	/^ffff80000010c56f:	0f 85 49 ff ff ff    	jne    ffff80000010c4be <copyout+0x23>$/;"	l
ffff80000010c575	kernel.asm	/^ffff80000010c575:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff80000010c57a	kernel.asm	/^ffff80000010c57a:	c9                   	leaveq $/;"	l
ffff80000010c57b	kernel.asm	/^ffff80000010c57b:	c3                   	retq   $/;"	l
ffff80000010c57c	kernel.asm	/^ffff80000010c57c <inb>:$/;"	l
ffff80000010c57c	kernel.asm	/^ffff80000010c57c:	55                   	push   %rbp$/;"	l
ffff80000010c57d	kernel.asm	/^ffff80000010c57d:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010c580	kernel.asm	/^ffff80000010c580:	48 83 ec 18          	sub    $0x18,%rsp$/;"	l
ffff80000010c584	kernel.asm	/^ffff80000010c584:	89 f8                	mov    %edi,%eax$/;"	l
ffff80000010c586	kernel.asm	/^ffff80000010c586:	66 89 45 ec          	mov    %ax,-0x14(%rbp)$/;"	l
ffff80000010c58a	kernel.asm	/^ffff80000010c58a:	0f b7 45 ec          	movzwl -0x14(%rbp),%eax$/;"	l
ffff80000010c58e	kernel.asm	/^ffff80000010c58e:	89 c2                	mov    %eax,%edx$/;"	l
ffff80000010c590	kernel.asm	/^ffff80000010c590:	ec                   	in     (%dx),%al$/;"	l
ffff80000010c591	kernel.asm	/^ffff80000010c591:	88 45 ff             	mov    %al,-0x1(%rbp)$/;"	l
ffff80000010c594	kernel.asm	/^ffff80000010c594:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax$/;"	l
ffff80000010c598	kernel.asm	/^ffff80000010c598:	c9                   	leaveq $/;"	l
ffff80000010c599	kernel.asm	/^ffff80000010c599:	c3                   	retq   $/;"	l
ffff80000010c59a	kernel.asm	/^ffff80000010c59a <outb>:$/;"	l
ffff80000010c59a	kernel.asm	/^ffff80000010c59a:	55                   	push   %rbp$/;"	l
ffff80000010c59b	kernel.asm	/^ffff80000010c59b:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010c59e	kernel.asm	/^ffff80000010c59e:	48 83 ec 08          	sub    $0x8,%rsp$/;"	l
ffff80000010c5a2	kernel.asm	/^ffff80000010c5a2:	89 fa                	mov    %edi,%edx$/;"	l
ffff80000010c5a4	kernel.asm	/^ffff80000010c5a4:	89 f0                	mov    %esi,%eax$/;"	l
ffff80000010c5a6	kernel.asm	/^ffff80000010c5a6:	66 89 55 fc          	mov    %dx,-0x4(%rbp)$/;"	l
ffff80000010c5aa	kernel.asm	/^ffff80000010c5aa:	88 45 f8             	mov    %al,-0x8(%rbp)$/;"	l
ffff80000010c5ad	kernel.asm	/^ffff80000010c5ad:	0f b6 45 f8          	movzbl -0x8(%rbp),%eax$/;"	l
ffff80000010c5b1	kernel.asm	/^ffff80000010c5b1:	0f b7 55 fc          	movzwl -0x4(%rbp),%edx$/;"	l
ffff80000010c5b5	kernel.asm	/^ffff80000010c5b5:	ee                   	out    %al,(%dx)$/;"	l
ffff80000010c5b6	kernel.asm	/^ffff80000010c5b6:	90                   	nop$/;"	l
ffff80000010c5b7	kernel.asm	/^ffff80000010c5b7:	c9                   	leaveq $/;"	l
ffff80000010c5b8	kernel.asm	/^ffff80000010c5b8:	c3                   	retq   $/;"	l
ffff80000010c5b9	kernel.asm	/^ffff80000010c5b9 <write3C0>:$/;"	l
ffff80000010c5b9	kernel.asm	/^ffff80000010c5b9:	55                   	push   %rbp$/;"	l
ffff80000010c5ba	kernel.asm	/^ffff80000010c5ba:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010c5bd	kernel.asm	/^ffff80000010c5bd:	48 83 ec 08          	sub    $0x8,%rsp$/;"	l
ffff80000010c5c1	kernel.asm	/^ffff80000010c5c1:	89 fa                	mov    %edi,%edx$/;"	l
ffff80000010c5c3	kernel.asm	/^ffff80000010c5c3:	89 f0                	mov    %esi,%eax$/;"	l
ffff80000010c5c5	kernel.asm	/^ffff80000010c5c5:	88 55 fc             	mov    %dl,-0x4(%rbp)$/;"	l
ffff80000010c5c8	kernel.asm	/^ffff80000010c5c8:	88 45 f8             	mov    %al,-0x8(%rbp)$/;"	l
ffff80000010c5cb	kernel.asm	/^ffff80000010c5cb:	bf da 03 00 00       	mov    $0x3da,%edi$/;"	l
ffff80000010c5d0	kernel.asm	/^ffff80000010c5d0:	48 b8 7c c5 10 00 00 	movabs $0xffff80000010c57c,%rax$/;"	l
ffff80000010c5d7	kernel.asm	/^ffff80000010c5d7:	80 ff ff $/;"	l
ffff80000010c5da	kernel.asm	/^ffff80000010c5da:	ff d0                	callq  *%rax$/;"	l
ffff80000010c5dc	kernel.asm	/^ffff80000010c5dc:	0f b6 45 fc          	movzbl -0x4(%rbp),%eax$/;"	l
ffff80000010c5e0	kernel.asm	/^ffff80000010c5e0:	89 c6                	mov    %eax,%esi$/;"	l
ffff80000010c5e2	kernel.asm	/^ffff80000010c5e2:	bf c0 03 00 00       	mov    $0x3c0,%edi$/;"	l
ffff80000010c5e7	kernel.asm	/^ffff80000010c5e7:	48 b8 9a c5 10 00 00 	movabs $0xffff80000010c59a,%rax$/;"	l
ffff80000010c5ee	kernel.asm	/^ffff80000010c5ee:	80 ff ff $/;"	l
ffff80000010c5f1	kernel.asm	/^ffff80000010c5f1:	ff d0                	callq  *%rax$/;"	l
ffff80000010c5f3	kernel.asm	/^ffff80000010c5f3:	0f b6 45 f8          	movzbl -0x8(%rbp),%eax$/;"	l
ffff80000010c5f7	kernel.asm	/^ffff80000010c5f7:	89 c6                	mov    %eax,%esi$/;"	l
ffff80000010c5f9	kernel.asm	/^ffff80000010c5f9:	bf c0 03 00 00       	mov    $0x3c0,%edi$/;"	l
ffff80000010c5fe	kernel.asm	/^ffff80000010c5fe:	48 b8 9a c5 10 00 00 	movabs $0xffff80000010c59a,%rax$/;"	l
ffff80000010c605	kernel.asm	/^ffff80000010c605:	80 ff ff $/;"	l
ffff80000010c608	kernel.asm	/^ffff80000010c608:	ff d0                	callq  *%rax$/;"	l
ffff80000010c60a	kernel.asm	/^ffff80000010c60a:	90                   	nop$/;"	l
ffff80000010c60b	kernel.asm	/^ffff80000010c60b:	c9                   	leaveq $/;"	l
ffff80000010c60c	kernel.asm	/^ffff80000010c60c:	c3                   	retq   $/;"	l
ffff80000010c60d	kernel.asm	/^ffff80000010c60d <write3C2>:$/;"	l
ffff80000010c60d	kernel.asm	/^ffff80000010c60d:	55                   	push   %rbp$/;"	l
ffff80000010c60e	kernel.asm	/^ffff80000010c60e:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010c611	kernel.asm	/^ffff80000010c611:	48 83 ec 08          	sub    $0x8,%rsp$/;"	l
ffff80000010c615	kernel.asm	/^ffff80000010c615:	89 f8                	mov    %edi,%eax$/;"	l
ffff80000010c617	kernel.asm	/^ffff80000010c617:	88 45 fc             	mov    %al,-0x4(%rbp)$/;"	l
ffff80000010c61a	kernel.asm	/^ffff80000010c61a:	0f b6 45 fc          	movzbl -0x4(%rbp),%eax$/;"	l
ffff80000010c61e	kernel.asm	/^ffff80000010c61e:	89 c6                	mov    %eax,%esi$/;"	l
ffff80000010c620	kernel.asm	/^ffff80000010c620:	bf c2 03 00 00       	mov    $0x3c2,%edi$/;"	l
ffff80000010c625	kernel.asm	/^ffff80000010c625:	48 b8 9a c5 10 00 00 	movabs $0xffff80000010c59a,%rax$/;"	l
ffff80000010c62c	kernel.asm	/^ffff80000010c62c:	80 ff ff $/;"	l
ffff80000010c62f	kernel.asm	/^ffff80000010c62f:	ff d0                	callq  *%rax$/;"	l
ffff80000010c631	kernel.asm	/^ffff80000010c631:	90                   	nop$/;"	l
ffff80000010c632	kernel.asm	/^ffff80000010c632:	c9                   	leaveq $/;"	l
ffff80000010c633	kernel.asm	/^ffff80000010c633:	c3                   	retq   $/;"	l
ffff80000010c634	kernel.asm	/^ffff80000010c634 <write3C4>:$/;"	l
ffff80000010c634	kernel.asm	/^ffff80000010c634:	55                   	push   %rbp$/;"	l
ffff80000010c635	kernel.asm	/^ffff80000010c635:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010c638	kernel.asm	/^ffff80000010c638:	48 83 ec 08          	sub    $0x8,%rsp$/;"	l
ffff80000010c63c	kernel.asm	/^ffff80000010c63c:	89 fa                	mov    %edi,%edx$/;"	l
ffff80000010c63e	kernel.asm	/^ffff80000010c63e:	89 f0                	mov    %esi,%eax$/;"	l
ffff80000010c640	kernel.asm	/^ffff80000010c640:	88 55 fc             	mov    %dl,-0x4(%rbp)$/;"	l
ffff80000010c643	kernel.asm	/^ffff80000010c643:	88 45 f8             	mov    %al,-0x8(%rbp)$/;"	l
ffff80000010c646	kernel.asm	/^ffff80000010c646:	0f b6 45 fc          	movzbl -0x4(%rbp),%eax$/;"	l
ffff80000010c64a	kernel.asm	/^ffff80000010c64a:	89 c6                	mov    %eax,%esi$/;"	l
ffff80000010c64c	kernel.asm	/^ffff80000010c64c:	bf c4 03 00 00       	mov    $0x3c4,%edi$/;"	l
ffff80000010c651	kernel.asm	/^ffff80000010c651:	48 b8 9a c5 10 00 00 	movabs $0xffff80000010c59a,%rax$/;"	l
ffff80000010c658	kernel.asm	/^ffff80000010c658:	80 ff ff $/;"	l
ffff80000010c65b	kernel.asm	/^ffff80000010c65b:	ff d0                	callq  *%rax$/;"	l
ffff80000010c65d	kernel.asm	/^ffff80000010c65d:	0f b6 45 f8          	movzbl -0x8(%rbp),%eax$/;"	l
ffff80000010c661	kernel.asm	/^ffff80000010c661:	89 c6                	mov    %eax,%esi$/;"	l
ffff80000010c663	kernel.asm	/^ffff80000010c663:	bf c5 03 00 00       	mov    $0x3c5,%edi$/;"	l
ffff80000010c668	kernel.asm	/^ffff80000010c668:	48 b8 9a c5 10 00 00 	movabs $0xffff80000010c59a,%rax$/;"	l
ffff80000010c66f	kernel.asm	/^ffff80000010c66f:	80 ff ff $/;"	l
ffff80000010c672	kernel.asm	/^ffff80000010c672:	ff d0                	callq  *%rax$/;"	l
ffff80000010c674	kernel.asm	/^ffff80000010c674:	90                   	nop$/;"	l
ffff80000010c675	kernel.asm	/^ffff80000010c675:	c9                   	leaveq $/;"	l
ffff80000010c676	kernel.asm	/^ffff80000010c676:	c3                   	retq   $/;"	l
ffff80000010c677	kernel.asm	/^ffff80000010c677 <write3CE>:$/;"	l
ffff80000010c677	kernel.asm	/^ffff80000010c677:	55                   	push   %rbp$/;"	l
ffff80000010c678	kernel.asm	/^ffff80000010c678:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010c67b	kernel.asm	/^ffff80000010c67b:	48 83 ec 08          	sub    $0x8,%rsp$/;"	l
ffff80000010c67f	kernel.asm	/^ffff80000010c67f:	89 fa                	mov    %edi,%edx$/;"	l
ffff80000010c681	kernel.asm	/^ffff80000010c681:	89 f0                	mov    %esi,%eax$/;"	l
ffff80000010c683	kernel.asm	/^ffff80000010c683:	88 55 fc             	mov    %dl,-0x4(%rbp)$/;"	l
ffff80000010c686	kernel.asm	/^ffff80000010c686:	88 45 f8             	mov    %al,-0x8(%rbp)$/;"	l
ffff80000010c689	kernel.asm	/^ffff80000010c689:	0f b6 45 fc          	movzbl -0x4(%rbp),%eax$/;"	l
ffff80000010c68d	kernel.asm	/^ffff80000010c68d:	89 c6                	mov    %eax,%esi$/;"	l
ffff80000010c68f	kernel.asm	/^ffff80000010c68f:	bf ce 03 00 00       	mov    $0x3ce,%edi$/;"	l
ffff80000010c694	kernel.asm	/^ffff80000010c694:	48 b8 9a c5 10 00 00 	movabs $0xffff80000010c59a,%rax$/;"	l
ffff80000010c69b	kernel.asm	/^ffff80000010c69b:	80 ff ff $/;"	l
ffff80000010c69e	kernel.asm	/^ffff80000010c69e:	ff d0                	callq  *%rax$/;"	l
ffff80000010c6a0	kernel.asm	/^ffff80000010c6a0:	0f b6 45 f8          	movzbl -0x8(%rbp),%eax$/;"	l
ffff80000010c6a4	kernel.asm	/^ffff80000010c6a4:	89 c6                	mov    %eax,%esi$/;"	l
ffff80000010c6a6	kernel.asm	/^ffff80000010c6a6:	bf cf 03 00 00       	mov    $0x3cf,%edi$/;"	l
ffff80000010c6ab	kernel.asm	/^ffff80000010c6ab:	48 b8 9a c5 10 00 00 	movabs $0xffff80000010c59a,%rax$/;"	l
ffff80000010c6b2	kernel.asm	/^ffff80000010c6b2:	80 ff ff $/;"	l
ffff80000010c6b5	kernel.asm	/^ffff80000010c6b5:	ff d0                	callq  *%rax$/;"	l
ffff80000010c6b7	kernel.asm	/^ffff80000010c6b7:	90                   	nop$/;"	l
ffff80000010c6b8	kernel.asm	/^ffff80000010c6b8:	c9                   	leaveq $/;"	l
ffff80000010c6b9	kernel.asm	/^ffff80000010c6b9:	c3                   	retq   $/;"	l
ffff80000010c6ba	kernel.asm	/^ffff80000010c6ba <write3D4>:$/;"	l
ffff80000010c6ba	kernel.asm	/^ffff80000010c6ba:	55                   	push   %rbp$/;"	l
ffff80000010c6bb	kernel.asm	/^ffff80000010c6bb:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010c6be	kernel.asm	/^ffff80000010c6be:	48 83 ec 08          	sub    $0x8,%rsp$/;"	l
ffff80000010c6c2	kernel.asm	/^ffff80000010c6c2:	89 fa                	mov    %edi,%edx$/;"	l
ffff80000010c6c4	kernel.asm	/^ffff80000010c6c4:	89 f0                	mov    %esi,%eax$/;"	l
ffff80000010c6c6	kernel.asm	/^ffff80000010c6c6:	88 55 fc             	mov    %dl,-0x4(%rbp)$/;"	l
ffff80000010c6c9	kernel.asm	/^ffff80000010c6c9:	88 45 f8             	mov    %al,-0x8(%rbp)$/;"	l
ffff80000010c6cc	kernel.asm	/^ffff80000010c6cc:	0f b6 45 fc          	movzbl -0x4(%rbp),%eax$/;"	l
ffff80000010c6d0	kernel.asm	/^ffff80000010c6d0:	89 c6                	mov    %eax,%esi$/;"	l
ffff80000010c6d2	kernel.asm	/^ffff80000010c6d2:	bf d4 03 00 00       	mov    $0x3d4,%edi$/;"	l
ffff80000010c6d7	kernel.asm	/^ffff80000010c6d7:	48 b8 9a c5 10 00 00 	movabs $0xffff80000010c59a,%rax$/;"	l
ffff80000010c6de	kernel.asm	/^ffff80000010c6de:	80 ff ff $/;"	l
ffff80000010c6e1	kernel.asm	/^ffff80000010c6e1:	ff d0                	callq  *%rax$/;"	l
ffff80000010c6e3	kernel.asm	/^ffff80000010c6e3:	0f b6 45 f8          	movzbl -0x8(%rbp),%eax$/;"	l
ffff80000010c6e7	kernel.asm	/^ffff80000010c6e7:	89 c6                	mov    %eax,%esi$/;"	l
ffff80000010c6e9	kernel.asm	/^ffff80000010c6e9:	bf d5 03 00 00       	mov    $0x3d5,%edi$/;"	l
ffff80000010c6ee	kernel.asm	/^ffff80000010c6ee:	48 b8 9a c5 10 00 00 	movabs $0xffff80000010c59a,%rax$/;"	l
ffff80000010c6f5	kernel.asm	/^ffff80000010c6f5:	80 ff ff $/;"	l
ffff80000010c6f8	kernel.asm	/^ffff80000010c6f8:	ff d0                	callq  *%rax$/;"	l
ffff80000010c6fa	kernel.asm	/^ffff80000010c6fa:	90                   	nop$/;"	l
ffff80000010c6fb	kernel.asm	/^ffff80000010c6fb:	c9                   	leaveq $/;"	l
ffff80000010c6fc	kernel.asm	/^ffff80000010c6fc:	c3                   	retq   $/;"	l
ffff80000010c6fd	kernel.asm	/^ffff80000010c6fd <write3C6>:$/;"	l
ffff80000010c6fd	kernel.asm	/^ffff80000010c6fd:	55                   	push   %rbp$/;"	l
ffff80000010c6fe	kernel.asm	/^ffff80000010c6fe:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010c701	kernel.asm	/^ffff80000010c701:	48 83 ec 08          	sub    $0x8,%rsp$/;"	l
ffff80000010c705	kernel.asm	/^ffff80000010c705:	89 f8                	mov    %edi,%eax$/;"	l
ffff80000010c707	kernel.asm	/^ffff80000010c707:	88 45 fc             	mov    %al,-0x4(%rbp)$/;"	l
ffff80000010c70a	kernel.asm	/^ffff80000010c70a:	0f b6 45 fc          	movzbl -0x4(%rbp),%eax$/;"	l
ffff80000010c70e	kernel.asm	/^ffff80000010c70e:	89 c6                	mov    %eax,%esi$/;"	l
ffff80000010c710	kernel.asm	/^ffff80000010c710:	bf c6 03 00 00       	mov    $0x3c6,%edi$/;"	l
ffff80000010c715	kernel.asm	/^ffff80000010c715:	48 b8 9a c5 10 00 00 	movabs $0xffff80000010c59a,%rax$/;"	l
ffff80000010c71c	kernel.asm	/^ffff80000010c71c:	80 ff ff $/;"	l
ffff80000010c71f	kernel.asm	/^ffff80000010c71f:	ff d0                	callq  *%rax$/;"	l
ffff80000010c721	kernel.asm	/^ffff80000010c721:	90                   	nop$/;"	l
ffff80000010c722	kernel.asm	/^ffff80000010c722:	c9                   	leaveq $/;"	l
ffff80000010c723	kernel.asm	/^ffff80000010c723:	c3                   	retq   $/;"	l
ffff80000010c724	kernel.asm	/^ffff80000010c724 <vgaSetPalette>:$/;"	l
ffff80000010c724	kernel.asm	/^ffff80000010c724:	55                   	push   %rbp$/;"	l
ffff80000010c725	kernel.asm	/^ffff80000010c725:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010c728	kernel.asm	/^ffff80000010c728:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff80000010c72c	kernel.asm	/^ffff80000010c72c:	89 7d fc             	mov    %edi,-0x4(%rbp)$/;"	l
ffff80000010c72f	kernel.asm	/^ffff80000010c72f:	89 75 f8             	mov    %esi,-0x8(%rbp)$/;"	l
ffff80000010c732	kernel.asm	/^ffff80000010c732:	89 55 f4             	mov    %edx,-0xc(%rbp)$/;"	l
ffff80000010c735	kernel.asm	/^ffff80000010c735:	89 4d f0             	mov    %ecx,-0x10(%rbp)$/;"	l
ffff80000010c738	kernel.asm	/^ffff80000010c738:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff80000010c73b	kernel.asm	/^ffff80000010c73b:	0f b6 c0             	movzbl %al,%eax$/;"	l
ffff80000010c73e	kernel.asm	/^ffff80000010c73e:	89 c6                	mov    %eax,%esi$/;"	l
ffff80000010c740	kernel.asm	/^ffff80000010c740:	bf c8 03 00 00       	mov    $0x3c8,%edi$/;"	l
ffff80000010c745	kernel.asm	/^ffff80000010c745:	48 b8 9a c5 10 00 00 	movabs $0xffff80000010c59a,%rax$/;"	l
ffff80000010c74c	kernel.asm	/^ffff80000010c74c:	80 ff ff $/;"	l
ffff80000010c74f	kernel.asm	/^ffff80000010c74f:	ff d0                	callq  *%rax$/;"	l
ffff80000010c751	kernel.asm	/^ffff80000010c751:	8b 45 f8             	mov    -0x8(%rbp),%eax$/;"	l
ffff80000010c754	kernel.asm	/^ffff80000010c754:	0f b6 c0             	movzbl %al,%eax$/;"	l
ffff80000010c757	kernel.asm	/^ffff80000010c757:	89 c6                	mov    %eax,%esi$/;"	l
ffff80000010c759	kernel.asm	/^ffff80000010c759:	bf c9 03 00 00       	mov    $0x3c9,%edi$/;"	l
ffff80000010c75e	kernel.asm	/^ffff80000010c75e:	48 b8 9a c5 10 00 00 	movabs $0xffff80000010c59a,%rax$/;"	l
ffff80000010c765	kernel.asm	/^ffff80000010c765:	80 ff ff $/;"	l
ffff80000010c768	kernel.asm	/^ffff80000010c768:	ff d0                	callq  *%rax$/;"	l
ffff80000010c76a	kernel.asm	/^ffff80000010c76a:	8b 45 f4             	mov    -0xc(%rbp),%eax$/;"	l
ffff80000010c76d	kernel.asm	/^ffff80000010c76d:	0f b6 c0             	movzbl %al,%eax$/;"	l
ffff80000010c770	kernel.asm	/^ffff80000010c770:	89 c6                	mov    %eax,%esi$/;"	l
ffff80000010c772	kernel.asm	/^ffff80000010c772:	bf c9 03 00 00       	mov    $0x3c9,%edi$/;"	l
ffff80000010c777	kernel.asm	/^ffff80000010c777:	48 b8 9a c5 10 00 00 	movabs $0xffff80000010c59a,%rax$/;"	l
ffff80000010c77e	kernel.asm	/^ffff80000010c77e:	80 ff ff $/;"	l
ffff80000010c781	kernel.asm	/^ffff80000010c781:	ff d0                	callq  *%rax$/;"	l
ffff80000010c783	kernel.asm	/^ffff80000010c783:	8b 45 f0             	mov    -0x10(%rbp),%eax$/;"	l
ffff80000010c786	kernel.asm	/^ffff80000010c786:	0f b6 c0             	movzbl %al,%eax$/;"	l
ffff80000010c789	kernel.asm	/^ffff80000010c789:	89 c6                	mov    %eax,%esi$/;"	l
ffff80000010c78b	kernel.asm	/^ffff80000010c78b:	bf c9 03 00 00       	mov    $0x3c9,%edi$/;"	l
ffff80000010c790	kernel.asm	/^ffff80000010c790:	48 b8 9a c5 10 00 00 	movabs $0xffff80000010c59a,%rax$/;"	l
ffff80000010c797	kernel.asm	/^ffff80000010c797:	80 ff ff $/;"	l
ffff80000010c79a	kernel.asm	/^ffff80000010c79a:	ff d0                	callq  *%rax$/;"	l
ffff80000010c79c	kernel.asm	/^ffff80000010c79c:	90                   	nop$/;"	l
ffff80000010c79d	kernel.asm	/^ffff80000010c79d:	c9                   	leaveq $/;"	l
ffff80000010c79e	kernel.asm	/^ffff80000010c79e:	c3                   	retq   $/;"	l
ffff80000010c79f	kernel.asm	/^ffff80000010c79f <setdefaultVGApalette>:$/;"	l
ffff80000010c79f	kernel.asm	/^ffff80000010c79f:	55                   	push   %rbp$/;"	l
ffff80000010c7a0	kernel.asm	/^ffff80000010c7a0:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010c7a3	kernel.asm	/^ffff80000010c7a3:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff80000010c7a7	kernel.asm	/^ffff80000010c7a7:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)$/;"	l
ffff80000010c7ae	kernel.asm	/^ffff80000010c7ae:	eb 4c                	jmp    ffff80000010c7fc <setdefaultVGApalette+0x5d>$/;"	l
ffff80000010c7b0	kernel.asm	/^ffff80000010c7b0:	48 b8 80 ee 10 00 00 	movabs $0xffff80000010ee80,%rax$/;"	l
ffff80000010c7b7	kernel.asm	/^ffff80000010c7b7:	80 ff ff $/;"	l
ffff80000010c7ba	kernel.asm	/^ffff80000010c7ba:	8b 55 fc             	mov    -0x4(%rbp),%edx$/;"	l
ffff80000010c7bd	kernel.asm	/^ffff80000010c7bd:	48 63 d2             	movslq %edx,%rdx$/;"	l
ffff80000010c7c0	kernel.asm	/^ffff80000010c7c0:	8b 04 90             	mov    (%rax,%rdx,4),%eax$/;"	l
ffff80000010c7c3	kernel.asm	/^ffff80000010c7c3:	89 45 f8             	mov    %eax,-0x8(%rbp)$/;"	l
ffff80000010c7c6	kernel.asm	/^ffff80000010c7c6:	8b 45 f8             	mov    -0x8(%rbp),%eax$/;"	l
ffff80000010c7c9	kernel.asm	/^ffff80000010c7c9:	c1 f8 02             	sar    $0x2,%eax$/;"	l
ffff80000010c7cc	kernel.asm	/^ffff80000010c7cc:	83 e0 3f             	and    $0x3f,%eax$/;"	l
ffff80000010c7cf	kernel.asm	/^ffff80000010c7cf:	89 c1                	mov    %eax,%ecx$/;"	l
ffff80000010c7d1	kernel.asm	/^ffff80000010c7d1:	8b 45 f8             	mov    -0x8(%rbp),%eax$/;"	l
ffff80000010c7d4	kernel.asm	/^ffff80000010c7d4:	c1 f8 0a             	sar    $0xa,%eax$/;"	l
ffff80000010c7d7	kernel.asm	/^ffff80000010c7d7:	83 e0 3f             	and    $0x3f,%eax$/;"	l
ffff80000010c7da	kernel.asm	/^ffff80000010c7da:	89 c2                	mov    %eax,%edx$/;"	l
ffff80000010c7dc	kernel.asm	/^ffff80000010c7dc:	8b 45 f8             	mov    -0x8(%rbp),%eax$/;"	l
ffff80000010c7df	kernel.asm	/^ffff80000010c7df:	c1 f8 12             	sar    $0x12,%eax$/;"	l
ffff80000010c7e2	kernel.asm	/^ffff80000010c7e2:	83 e0 3f             	and    $0x3f,%eax$/;"	l
ffff80000010c7e5	kernel.asm	/^ffff80000010c7e5:	89 c6                	mov    %eax,%esi$/;"	l
ffff80000010c7e7	kernel.asm	/^ffff80000010c7e7:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff80000010c7ea	kernel.asm	/^ffff80000010c7ea:	89 c7                	mov    %eax,%edi$/;"	l
ffff80000010c7ec	kernel.asm	/^ffff80000010c7ec:	48 b8 24 c7 10 00 00 	movabs $0xffff80000010c724,%rax$/;"	l
ffff80000010c7f3	kernel.asm	/^ffff80000010c7f3:	80 ff ff $/;"	l
ffff80000010c7f6	kernel.asm	/^ffff80000010c7f6:	ff d0                	callq  *%rax$/;"	l
ffff80000010c7f8	kernel.asm	/^ffff80000010c7f8:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)$/;"	l
ffff80000010c7fc	kernel.asm	/^ffff80000010c7fc:	81 7d fc ff 00 00 00 	cmpl   $0xff,-0x4(%rbp)$/;"	l
ffff80000010c803	kernel.asm	/^ffff80000010c803:	7e ab                	jle    ffff80000010c7b0 <setdefaultVGApalette+0x11>$/;"	l
ffff80000010c805	kernel.asm	/^ffff80000010c805:	90                   	nop$/;"	l
ffff80000010c806	kernel.asm	/^ffff80000010c806:	c9                   	leaveq $/;"	l
ffff80000010c807	kernel.asm	/^ffff80000010c807:	c3                   	retq   $/;"	l
ffff80000010c808	kernel.asm	/^ffff80000010c808 <vgaMode13>:$/;"	l
ffff80000010c808	kernel.asm	/^ffff80000010c808:	55                   	push   %rbp$/;"	l
ffff80000010c809	kernel.asm	/^ffff80000010c809:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010c80c	kernel.asm	/^ffff80000010c80c:	bf 63 00 00 00       	mov    $0x63,%edi$/;"	l
ffff80000010c811	kernel.asm	/^ffff80000010c811:	48 b8 0d c6 10 00 00 	movabs $0xffff80000010c60d,%rax$/;"	l
ffff80000010c818	kernel.asm	/^ffff80000010c818:	80 ff ff $/;"	l
ffff80000010c81b	kernel.asm	/^ffff80000010c81b:	ff d0                	callq  *%rax$/;"	l
ffff80000010c81d	kernel.asm	/^ffff80000010c81d:	be 03 00 00 00       	mov    $0x3,%esi$/;"	l
ffff80000010c822	kernel.asm	/^ffff80000010c822:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
ffff80000010c827	kernel.asm	/^ffff80000010c827:	48 b8 34 c6 10 00 00 	movabs $0xffff80000010c634,%rax$/;"	l
ffff80000010c82e	kernel.asm	/^ffff80000010c82e:	80 ff ff $/;"	l
ffff80000010c831	kernel.asm	/^ffff80000010c831:	ff d0                	callq  *%rax$/;"	l
ffff80000010c833	kernel.asm	/^ffff80000010c833:	be 01 00 00 00       	mov    $0x1,%esi$/;"	l
ffff80000010c838	kernel.asm	/^ffff80000010c838:	bf 01 00 00 00       	mov    $0x1,%edi$/;"	l
ffff80000010c83d	kernel.asm	/^ffff80000010c83d:	48 b8 34 c6 10 00 00 	movabs $0xffff80000010c634,%rax$/;"	l
ffff80000010c844	kernel.asm	/^ffff80000010c844:	80 ff ff $/;"	l
ffff80000010c847	kernel.asm	/^ffff80000010c847:	ff d0                	callq  *%rax$/;"	l
ffff80000010c849	kernel.asm	/^ffff80000010c849:	be 0f 00 00 00       	mov    $0xf,%esi$/;"	l
ffff80000010c84e	kernel.asm	/^ffff80000010c84e:	bf 02 00 00 00       	mov    $0x2,%edi$/;"	l
ffff80000010c853	kernel.asm	/^ffff80000010c853:	48 b8 34 c6 10 00 00 	movabs $0xffff80000010c634,%rax$/;"	l
ffff80000010c85a	kernel.asm	/^ffff80000010c85a:	80 ff ff $/;"	l
ffff80000010c85d	kernel.asm	/^ffff80000010c85d:	ff d0                	callq  *%rax$/;"	l
ffff80000010c85f	kernel.asm	/^ffff80000010c85f:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffff80000010c864	kernel.asm	/^ffff80000010c864:	bf 03 00 00 00       	mov    $0x3,%edi$/;"	l
ffff80000010c869	kernel.asm	/^ffff80000010c869:	48 b8 34 c6 10 00 00 	movabs $0xffff80000010c634,%rax$/;"	l
ffff80000010c870	kernel.asm	/^ffff80000010c870:	80 ff ff $/;"	l
ffff80000010c873	kernel.asm	/^ffff80000010c873:	ff d0                	callq  *%rax$/;"	l
ffff80000010c875	kernel.asm	/^ffff80000010c875:	be 0e 00 00 00       	mov    $0xe,%esi$/;"	l
ffff80000010c87a	kernel.asm	/^ffff80000010c87a:	bf 04 00 00 00       	mov    $0x4,%edi$/;"	l
ffff80000010c87f	kernel.asm	/^ffff80000010c87f:	48 b8 34 c6 10 00 00 	movabs $0xffff80000010c634,%rax$/;"	l
ffff80000010c886	kernel.asm	/^ffff80000010c886:	80 ff ff $/;"	l
ffff80000010c889	kernel.asm	/^ffff80000010c889:	ff d0                	callq  *%rax$/;"	l
ffff80000010c88b	kernel.asm	/^ffff80000010c88b:	be 0e 00 00 00       	mov    $0xe,%esi$/;"	l
ffff80000010c890	kernel.asm	/^ffff80000010c890:	bf 11 00 00 00       	mov    $0x11,%edi$/;"	l
ffff80000010c895	kernel.asm	/^ffff80000010c895:	48 b8 ba c6 10 00 00 	movabs $0xffff80000010c6ba,%rax$/;"	l
ffff80000010c89c	kernel.asm	/^ffff80000010c89c:	80 ff ff $/;"	l
ffff80000010c89f	kernel.asm	/^ffff80000010c89f:	ff d0                	callq  *%rax$/;"	l
ffff80000010c8a1	kernel.asm	/^ffff80000010c8a1:	be 5f 00 00 00       	mov    $0x5f,%esi$/;"	l
ffff80000010c8a6	kernel.asm	/^ffff80000010c8a6:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
ffff80000010c8ab	kernel.asm	/^ffff80000010c8ab:	48 b8 ba c6 10 00 00 	movabs $0xffff80000010c6ba,%rax$/;"	l
ffff80000010c8b2	kernel.asm	/^ffff80000010c8b2:	80 ff ff $/;"	l
ffff80000010c8b5	kernel.asm	/^ffff80000010c8b5:	ff d0                	callq  *%rax$/;"	l
ffff80000010c8b7	kernel.asm	/^ffff80000010c8b7:	be 4f 00 00 00       	mov    $0x4f,%esi$/;"	l
ffff80000010c8bc	kernel.asm	/^ffff80000010c8bc:	bf 01 00 00 00       	mov    $0x1,%edi$/;"	l
ffff80000010c8c1	kernel.asm	/^ffff80000010c8c1:	48 b8 ba c6 10 00 00 	movabs $0xffff80000010c6ba,%rax$/;"	l
ffff80000010c8c8	kernel.asm	/^ffff80000010c8c8:	80 ff ff $/;"	l
ffff80000010c8cb	kernel.asm	/^ffff80000010c8cb:	ff d0                	callq  *%rax$/;"	l
ffff80000010c8cd	kernel.asm	/^ffff80000010c8cd:	be 50 00 00 00       	mov    $0x50,%esi$/;"	l
ffff80000010c8d2	kernel.asm	/^ffff80000010c8d2:	bf 02 00 00 00       	mov    $0x2,%edi$/;"	l
ffff80000010c8d7	kernel.asm	/^ffff80000010c8d7:	48 b8 ba c6 10 00 00 	movabs $0xffff80000010c6ba,%rax$/;"	l
ffff80000010c8de	kernel.asm	/^ffff80000010c8de:	80 ff ff $/;"	l
ffff80000010c8e1	kernel.asm	/^ffff80000010c8e1:	ff d0                	callq  *%rax$/;"	l
ffff80000010c8e3	kernel.asm	/^ffff80000010c8e3:	be 82 00 00 00       	mov    $0x82,%esi$/;"	l
ffff80000010c8e8	kernel.asm	/^ffff80000010c8e8:	bf 03 00 00 00       	mov    $0x3,%edi$/;"	l
ffff80000010c8ed	kernel.asm	/^ffff80000010c8ed:	48 b8 ba c6 10 00 00 	movabs $0xffff80000010c6ba,%rax$/;"	l
ffff80000010c8f4	kernel.asm	/^ffff80000010c8f4:	80 ff ff $/;"	l
ffff80000010c8f7	kernel.asm	/^ffff80000010c8f7:	ff d0                	callq  *%rax$/;"	l
ffff80000010c8f9	kernel.asm	/^ffff80000010c8f9:	be 54 00 00 00       	mov    $0x54,%esi$/;"	l
ffff80000010c8fe	kernel.asm	/^ffff80000010c8fe:	bf 04 00 00 00       	mov    $0x4,%edi$/;"	l
ffff80000010c903	kernel.asm	/^ffff80000010c903:	48 b8 ba c6 10 00 00 	movabs $0xffff80000010c6ba,%rax$/;"	l
ffff80000010c90a	kernel.asm	/^ffff80000010c90a:	80 ff ff $/;"	l
ffff80000010c90d	kernel.asm	/^ffff80000010c90d:	ff d0                	callq  *%rax$/;"	l
ffff80000010c90f	kernel.asm	/^ffff80000010c90f:	be 80 00 00 00       	mov    $0x80,%esi$/;"	l
ffff80000010c914	kernel.asm	/^ffff80000010c914:	bf 05 00 00 00       	mov    $0x5,%edi$/;"	l
ffff80000010c919	kernel.asm	/^ffff80000010c919:	48 b8 ba c6 10 00 00 	movabs $0xffff80000010c6ba,%rax$/;"	l
ffff80000010c920	kernel.asm	/^ffff80000010c920:	80 ff ff $/;"	l
ffff80000010c923	kernel.asm	/^ffff80000010c923:	ff d0                	callq  *%rax$/;"	l
ffff80000010c925	kernel.asm	/^ffff80000010c925:	be bf 00 00 00       	mov    $0xbf,%esi$/;"	l
ffff80000010c92a	kernel.asm	/^ffff80000010c92a:	bf 06 00 00 00       	mov    $0x6,%edi$/;"	l
ffff80000010c92f	kernel.asm	/^ffff80000010c92f:	48 b8 ba c6 10 00 00 	movabs $0xffff80000010c6ba,%rax$/;"	l
ffff80000010c936	kernel.asm	/^ffff80000010c936:	80 ff ff $/;"	l
ffff80000010c939	kernel.asm	/^ffff80000010c939:	ff d0                	callq  *%rax$/;"	l
ffff80000010c93b	kernel.asm	/^ffff80000010c93b:	be 1f 00 00 00       	mov    $0x1f,%esi$/;"	l
ffff80000010c940	kernel.asm	/^ffff80000010c940:	bf 07 00 00 00       	mov    $0x7,%edi$/;"	l
ffff80000010c945	kernel.asm	/^ffff80000010c945:	48 b8 ba c6 10 00 00 	movabs $0xffff80000010c6ba,%rax$/;"	l
ffff80000010c94c	kernel.asm	/^ffff80000010c94c:	80 ff ff $/;"	l
ffff80000010c94f	kernel.asm	/^ffff80000010c94f:	ff d0                	callq  *%rax$/;"	l
ffff80000010c951	kernel.asm	/^ffff80000010c951:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffff80000010c956	kernel.asm	/^ffff80000010c956:	bf 08 00 00 00       	mov    $0x8,%edi$/;"	l
ffff80000010c95b	kernel.asm	/^ffff80000010c95b:	48 b8 ba c6 10 00 00 	movabs $0xffff80000010c6ba,%rax$/;"	l
ffff80000010c962	kernel.asm	/^ffff80000010c962:	80 ff ff $/;"	l
ffff80000010c965	kernel.asm	/^ffff80000010c965:	ff d0                	callq  *%rax$/;"	l
ffff80000010c967	kernel.asm	/^ffff80000010c967:	be 41 00 00 00       	mov    $0x41,%esi$/;"	l
ffff80000010c96c	kernel.asm	/^ffff80000010c96c:	bf 09 00 00 00       	mov    $0x9,%edi$/;"	l
ffff80000010c971	kernel.asm	/^ffff80000010c971:	48 b8 ba c6 10 00 00 	movabs $0xffff80000010c6ba,%rax$/;"	l
ffff80000010c978	kernel.asm	/^ffff80000010c978:	80 ff ff $/;"	l
ffff80000010c97b	kernel.asm	/^ffff80000010c97b:	ff d0                	callq  *%rax$/;"	l
ffff80000010c97d	kernel.asm	/^ffff80000010c97d:	be 9c 00 00 00       	mov    $0x9c,%esi$/;"	l
ffff80000010c982	kernel.asm	/^ffff80000010c982:	bf 10 00 00 00       	mov    $0x10,%edi$/;"	l
ffff80000010c987	kernel.asm	/^ffff80000010c987:	48 b8 ba c6 10 00 00 	movabs $0xffff80000010c6ba,%rax$/;"	l
ffff80000010c98e	kernel.asm	/^ffff80000010c98e:	80 ff ff $/;"	l
ffff80000010c991	kernel.asm	/^ffff80000010c991:	ff d0                	callq  *%rax$/;"	l
ffff80000010c993	kernel.asm	/^ffff80000010c993:	be 8f 00 00 00       	mov    $0x8f,%esi$/;"	l
ffff80000010c998	kernel.asm	/^ffff80000010c998:	bf 12 00 00 00       	mov    $0x12,%edi$/;"	l
ffff80000010c99d	kernel.asm	/^ffff80000010c99d:	48 b8 ba c6 10 00 00 	movabs $0xffff80000010c6ba,%rax$/;"	l
ffff80000010c9a4	kernel.asm	/^ffff80000010c9a4:	80 ff ff $/;"	l
ffff80000010c9a7	kernel.asm	/^ffff80000010c9a7:	ff d0                	callq  *%rax$/;"	l
ffff80000010c9a9	kernel.asm	/^ffff80000010c9a9:	be 28 00 00 00       	mov    $0x28,%esi$/;"	l
ffff80000010c9ae	kernel.asm	/^ffff80000010c9ae:	bf 13 00 00 00       	mov    $0x13,%edi$/;"	l
ffff80000010c9b3	kernel.asm	/^ffff80000010c9b3:	48 b8 ba c6 10 00 00 	movabs $0xffff80000010c6ba,%rax$/;"	l
ffff80000010c9ba	kernel.asm	/^ffff80000010c9ba:	80 ff ff $/;"	l
ffff80000010c9bd	kernel.asm	/^ffff80000010c9bd:	ff d0                	callq  *%rax$/;"	l
ffff80000010c9bf	kernel.asm	/^ffff80000010c9bf:	be 40 00 00 00       	mov    $0x40,%esi$/;"	l
ffff80000010c9c4	kernel.asm	/^ffff80000010c9c4:	bf 14 00 00 00       	mov    $0x14,%edi$/;"	l
ffff80000010c9c9	kernel.asm	/^ffff80000010c9c9:	48 b8 ba c6 10 00 00 	movabs $0xffff80000010c6ba,%rax$/;"	l
ffff80000010c9d0	kernel.asm	/^ffff80000010c9d0:	80 ff ff $/;"	l
ffff80000010c9d3	kernel.asm	/^ffff80000010c9d3:	ff d0                	callq  *%rax$/;"	l
ffff80000010c9d5	kernel.asm	/^ffff80000010c9d5:	be 96 00 00 00       	mov    $0x96,%esi$/;"	l
ffff80000010c9da	kernel.asm	/^ffff80000010c9da:	bf 15 00 00 00       	mov    $0x15,%edi$/;"	l
ffff80000010c9df	kernel.asm	/^ffff80000010c9df:	48 b8 ba c6 10 00 00 	movabs $0xffff80000010c6ba,%rax$/;"	l
ffff80000010c9e6	kernel.asm	/^ffff80000010c9e6:	80 ff ff $/;"	l
ffff80000010c9e9	kernel.asm	/^ffff80000010c9e9:	ff d0                	callq  *%rax$/;"	l
ffff80000010c9eb	kernel.asm	/^ffff80000010c9eb:	be b9 00 00 00       	mov    $0xb9,%esi$/;"	l
ffff80000010c9f0	kernel.asm	/^ffff80000010c9f0:	bf 16 00 00 00       	mov    $0x16,%edi$/;"	l
ffff80000010c9f5	kernel.asm	/^ffff80000010c9f5:	48 b8 ba c6 10 00 00 	movabs $0xffff80000010c6ba,%rax$/;"	l
ffff80000010c9fc	kernel.asm	/^ffff80000010c9fc:	80 ff ff $/;"	l
ffff80000010c9ff	kernel.asm	/^ffff80000010c9ff:	ff d0                	callq  *%rax$/;"	l
ffff80000010ca01	kernel.asm	/^ffff80000010ca01:	be a3 00 00 00       	mov    $0xa3,%esi$/;"	l
ffff80000010ca06	kernel.asm	/^ffff80000010ca06:	bf 17 00 00 00       	mov    $0x17,%edi$/;"	l
ffff80000010ca0b	kernel.asm	/^ffff80000010ca0b:	48 b8 ba c6 10 00 00 	movabs $0xffff80000010c6ba,%rax$/;"	l
ffff80000010ca12	kernel.asm	/^ffff80000010ca12:	80 ff ff $/;"	l
ffff80000010ca15	kernel.asm	/^ffff80000010ca15:	ff d0                	callq  *%rax$/;"	l
ffff80000010ca17	kernel.asm	/^ffff80000010ca17:	be ff 00 00 00       	mov    $0xff,%esi$/;"	l
ffff80000010ca1c	kernel.asm	/^ffff80000010ca1c:	bf 18 00 00 00       	mov    $0x18,%edi$/;"	l
ffff80000010ca21	kernel.asm	/^ffff80000010ca21:	48 b8 ba c6 10 00 00 	movabs $0xffff80000010c6ba,%rax$/;"	l
ffff80000010ca28	kernel.asm	/^ffff80000010ca28:	80 ff ff $/;"	l
ffff80000010ca2b	kernel.asm	/^ffff80000010ca2b:	ff d0                	callq  *%rax$/;"	l
ffff80000010ca2d	kernel.asm	/^ffff80000010ca2d:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffff80000010ca32	kernel.asm	/^ffff80000010ca32:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
ffff80000010ca37	kernel.asm	/^ffff80000010ca37:	48 b8 77 c6 10 00 00 	movabs $0xffff80000010c677,%rax$/;"	l
ffff80000010ca3e	kernel.asm	/^ffff80000010ca3e:	80 ff ff $/;"	l
ffff80000010ca41	kernel.asm	/^ffff80000010ca41:	ff d0                	callq  *%rax$/;"	l
ffff80000010ca43	kernel.asm	/^ffff80000010ca43:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffff80000010ca48	kernel.asm	/^ffff80000010ca48:	bf 01 00 00 00       	mov    $0x1,%edi$/;"	l
ffff80000010ca4d	kernel.asm	/^ffff80000010ca4d:	48 b8 77 c6 10 00 00 	movabs $0xffff80000010c677,%rax$/;"	l
ffff80000010ca54	kernel.asm	/^ffff80000010ca54:	80 ff ff $/;"	l
ffff80000010ca57	kernel.asm	/^ffff80000010ca57:	ff d0                	callq  *%rax$/;"	l
ffff80000010ca59	kernel.asm	/^ffff80000010ca59:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffff80000010ca5e	kernel.asm	/^ffff80000010ca5e:	bf 02 00 00 00       	mov    $0x2,%edi$/;"	l
ffff80000010ca63	kernel.asm	/^ffff80000010ca63:	48 b8 77 c6 10 00 00 	movabs $0xffff80000010c677,%rax$/;"	l
ffff80000010ca6a	kernel.asm	/^ffff80000010ca6a:	80 ff ff $/;"	l
ffff80000010ca6d	kernel.asm	/^ffff80000010ca6d:	ff d0                	callq  *%rax$/;"	l
ffff80000010ca6f	kernel.asm	/^ffff80000010ca6f:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffff80000010ca74	kernel.asm	/^ffff80000010ca74:	bf 03 00 00 00       	mov    $0x3,%edi$/;"	l
ffff80000010ca79	kernel.asm	/^ffff80000010ca79:	48 b8 77 c6 10 00 00 	movabs $0xffff80000010c677,%rax$/;"	l
ffff80000010ca80	kernel.asm	/^ffff80000010ca80:	80 ff ff $/;"	l
ffff80000010ca83	kernel.asm	/^ffff80000010ca83:	ff d0                	callq  *%rax$/;"	l
ffff80000010ca85	kernel.asm	/^ffff80000010ca85:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffff80000010ca8a	kernel.asm	/^ffff80000010ca8a:	bf 04 00 00 00       	mov    $0x4,%edi$/;"	l
ffff80000010ca8f	kernel.asm	/^ffff80000010ca8f:	48 b8 77 c6 10 00 00 	movabs $0xffff80000010c677,%rax$/;"	l
ffff80000010ca96	kernel.asm	/^ffff80000010ca96:	80 ff ff $/;"	l
ffff80000010ca99	kernel.asm	/^ffff80000010ca99:	ff d0                	callq  *%rax$/;"	l
ffff80000010ca9b	kernel.asm	/^ffff80000010ca9b:	be 40 00 00 00       	mov    $0x40,%esi$/;"	l
ffff80000010caa0	kernel.asm	/^ffff80000010caa0:	bf 05 00 00 00       	mov    $0x5,%edi$/;"	l
ffff80000010caa5	kernel.asm	/^ffff80000010caa5:	48 b8 77 c6 10 00 00 	movabs $0xffff80000010c677,%rax$/;"	l
ffff80000010caac	kernel.asm	/^ffff80000010caac:	80 ff ff $/;"	l
ffff80000010caaf	kernel.asm	/^ffff80000010caaf:	ff d0                	callq  *%rax$/;"	l
ffff80000010cab1	kernel.asm	/^ffff80000010cab1:	be 05 00 00 00       	mov    $0x5,%esi$/;"	l
ffff80000010cab6	kernel.asm	/^ffff80000010cab6:	bf 06 00 00 00       	mov    $0x6,%edi$/;"	l
ffff80000010cabb	kernel.asm	/^ffff80000010cabb:	48 b8 77 c6 10 00 00 	movabs $0xffff80000010c677,%rax$/;"	l
ffff80000010cac2	kernel.asm	/^ffff80000010cac2:	80 ff ff $/;"	l
ffff80000010cac5	kernel.asm	/^ffff80000010cac5:	ff d0                	callq  *%rax$/;"	l
ffff80000010cac7	kernel.asm	/^ffff80000010cac7:	be 0f 00 00 00       	mov    $0xf,%esi$/;"	l
ffff80000010cacc	kernel.asm	/^ffff80000010cacc:	bf 07 00 00 00       	mov    $0x7,%edi$/;"	l
ffff80000010cad1	kernel.asm	/^ffff80000010cad1:	48 b8 77 c6 10 00 00 	movabs $0xffff80000010c677,%rax$/;"	l
ffff80000010cad8	kernel.asm	/^ffff80000010cad8:	80 ff ff $/;"	l
ffff80000010cadb	kernel.asm	/^ffff80000010cadb:	ff d0                	callq  *%rax$/;"	l
ffff80000010cadd	kernel.asm	/^ffff80000010cadd:	be ff 00 00 00       	mov    $0xff,%esi$/;"	l
ffff80000010cae2	kernel.asm	/^ffff80000010cae2:	bf 08 00 00 00       	mov    $0x8,%edi$/;"	l
ffff80000010cae7	kernel.asm	/^ffff80000010cae7:	48 b8 77 c6 10 00 00 	movabs $0xffff80000010c677,%rax$/;"	l
ffff80000010caee	kernel.asm	/^ffff80000010caee:	80 ff ff $/;"	l
ffff80000010caf1	kernel.asm	/^ffff80000010caf1:	ff d0                	callq  *%rax$/;"	l
ffff80000010caf3	kernel.asm	/^ffff80000010caf3:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffff80000010caf8	kernel.asm	/^ffff80000010caf8:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
ffff80000010cafd	kernel.asm	/^ffff80000010cafd:	48 b8 b9 c5 10 00 00 	movabs $0xffff80000010c5b9,%rax$/;"	l
ffff80000010cb04	kernel.asm	/^ffff80000010cb04:	80 ff ff $/;"	l
ffff80000010cb07	kernel.asm	/^ffff80000010cb07:	ff d0                	callq  *%rax$/;"	l
ffff80000010cb09	kernel.asm	/^ffff80000010cb09:	be 01 00 00 00       	mov    $0x1,%esi$/;"	l
ffff80000010cb0e	kernel.asm	/^ffff80000010cb0e:	bf 01 00 00 00       	mov    $0x1,%edi$/;"	l
ffff80000010cb13	kernel.asm	/^ffff80000010cb13:	48 b8 b9 c5 10 00 00 	movabs $0xffff80000010c5b9,%rax$/;"	l
ffff80000010cb1a	kernel.asm	/^ffff80000010cb1a:	80 ff ff $/;"	l
ffff80000010cb1d	kernel.asm	/^ffff80000010cb1d:	ff d0                	callq  *%rax$/;"	l
ffff80000010cb1f	kernel.asm	/^ffff80000010cb1f:	be 02 00 00 00       	mov    $0x2,%esi$/;"	l
ffff80000010cb24	kernel.asm	/^ffff80000010cb24:	bf 02 00 00 00       	mov    $0x2,%edi$/;"	l
ffff80000010cb29	kernel.asm	/^ffff80000010cb29:	48 b8 b9 c5 10 00 00 	movabs $0xffff80000010c5b9,%rax$/;"	l
ffff80000010cb30	kernel.asm	/^ffff80000010cb30:	80 ff ff $/;"	l
ffff80000010cb33	kernel.asm	/^ffff80000010cb33:	ff d0                	callq  *%rax$/;"	l
ffff80000010cb35	kernel.asm	/^ffff80000010cb35:	be 03 00 00 00       	mov    $0x3,%esi$/;"	l
ffff80000010cb3a	kernel.asm	/^ffff80000010cb3a:	bf 03 00 00 00       	mov    $0x3,%edi$/;"	l
ffff80000010cb3f	kernel.asm	/^ffff80000010cb3f:	48 b8 b9 c5 10 00 00 	movabs $0xffff80000010c5b9,%rax$/;"	l
ffff80000010cb46	kernel.asm	/^ffff80000010cb46:	80 ff ff $/;"	l
ffff80000010cb49	kernel.asm	/^ffff80000010cb49:	ff d0                	callq  *%rax$/;"	l
ffff80000010cb4b	kernel.asm	/^ffff80000010cb4b:	be 04 00 00 00       	mov    $0x4,%esi$/;"	l
ffff80000010cb50	kernel.asm	/^ffff80000010cb50:	bf 04 00 00 00       	mov    $0x4,%edi$/;"	l
ffff80000010cb55	kernel.asm	/^ffff80000010cb55:	48 b8 b9 c5 10 00 00 	movabs $0xffff80000010c5b9,%rax$/;"	l
ffff80000010cb5c	kernel.asm	/^ffff80000010cb5c:	80 ff ff $/;"	l
ffff80000010cb5f	kernel.asm	/^ffff80000010cb5f:	ff d0                	callq  *%rax$/;"	l
ffff80000010cb61	kernel.asm	/^ffff80000010cb61:	be 05 00 00 00       	mov    $0x5,%esi$/;"	l
ffff80000010cb66	kernel.asm	/^ffff80000010cb66:	bf 05 00 00 00       	mov    $0x5,%edi$/;"	l
ffff80000010cb6b	kernel.asm	/^ffff80000010cb6b:	48 b8 b9 c5 10 00 00 	movabs $0xffff80000010c5b9,%rax$/;"	l
ffff80000010cb72	kernel.asm	/^ffff80000010cb72:	80 ff ff $/;"	l
ffff80000010cb75	kernel.asm	/^ffff80000010cb75:	ff d0                	callq  *%rax$/;"	l
ffff80000010cb77	kernel.asm	/^ffff80000010cb77:	be 06 00 00 00       	mov    $0x6,%esi$/;"	l
ffff80000010cb7c	kernel.asm	/^ffff80000010cb7c:	bf 06 00 00 00       	mov    $0x6,%edi$/;"	l
ffff80000010cb81	kernel.asm	/^ffff80000010cb81:	48 b8 b9 c5 10 00 00 	movabs $0xffff80000010c5b9,%rax$/;"	l
ffff80000010cb88	kernel.asm	/^ffff80000010cb88:	80 ff ff $/;"	l
ffff80000010cb8b	kernel.asm	/^ffff80000010cb8b:	ff d0                	callq  *%rax$/;"	l
ffff80000010cb8d	kernel.asm	/^ffff80000010cb8d:	be 07 00 00 00       	mov    $0x7,%esi$/;"	l
ffff80000010cb92	kernel.asm	/^ffff80000010cb92:	bf 07 00 00 00       	mov    $0x7,%edi$/;"	l
ffff80000010cb97	kernel.asm	/^ffff80000010cb97:	48 b8 b9 c5 10 00 00 	movabs $0xffff80000010c5b9,%rax$/;"	l
ffff80000010cb9e	kernel.asm	/^ffff80000010cb9e:	80 ff ff $/;"	l
ffff80000010cba1	kernel.asm	/^ffff80000010cba1:	ff d0                	callq  *%rax$/;"	l
ffff80000010cba3	kernel.asm	/^ffff80000010cba3:	be 08 00 00 00       	mov    $0x8,%esi$/;"	l
ffff80000010cba8	kernel.asm	/^ffff80000010cba8:	bf 08 00 00 00       	mov    $0x8,%edi$/;"	l
ffff80000010cbad	kernel.asm	/^ffff80000010cbad:	48 b8 b9 c5 10 00 00 	movabs $0xffff80000010c5b9,%rax$/;"	l
ffff80000010cbb4	kernel.asm	/^ffff80000010cbb4:	80 ff ff $/;"	l
ffff80000010cbb7	kernel.asm	/^ffff80000010cbb7:	ff d0                	callq  *%rax$/;"	l
ffff80000010cbb9	kernel.asm	/^ffff80000010cbb9:	be 09 00 00 00       	mov    $0x9,%esi$/;"	l
ffff80000010cbbe	kernel.asm	/^ffff80000010cbbe:	bf 09 00 00 00       	mov    $0x9,%edi$/;"	l
ffff80000010cbc3	kernel.asm	/^ffff80000010cbc3:	48 b8 b9 c5 10 00 00 	movabs $0xffff80000010c5b9,%rax$/;"	l
ffff80000010cbca	kernel.asm	/^ffff80000010cbca:	80 ff ff $/;"	l
ffff80000010cbcd	kernel.asm	/^ffff80000010cbcd:	ff d0                	callq  *%rax$/;"	l
ffff80000010cbcf	kernel.asm	/^ffff80000010cbcf:	be 0a 00 00 00       	mov    $0xa,%esi$/;"	l
ffff80000010cbd4	kernel.asm	/^ffff80000010cbd4:	bf 0a 00 00 00       	mov    $0xa,%edi$/;"	l
ffff80000010cbd9	kernel.asm	/^ffff80000010cbd9:	48 b8 b9 c5 10 00 00 	movabs $0xffff80000010c5b9,%rax$/;"	l
ffff80000010cbe0	kernel.asm	/^ffff80000010cbe0:	80 ff ff $/;"	l
ffff80000010cbe3	kernel.asm	/^ffff80000010cbe3:	ff d0                	callq  *%rax$/;"	l
ffff80000010cbe5	kernel.asm	/^ffff80000010cbe5:	be 0b 00 00 00       	mov    $0xb,%esi$/;"	l
ffff80000010cbea	kernel.asm	/^ffff80000010cbea:	bf 0b 00 00 00       	mov    $0xb,%edi$/;"	l
ffff80000010cbef	kernel.asm	/^ffff80000010cbef:	48 b8 b9 c5 10 00 00 	movabs $0xffff80000010c5b9,%rax$/;"	l
ffff80000010cbf6	kernel.asm	/^ffff80000010cbf6:	80 ff ff $/;"	l
ffff80000010cbf9	kernel.asm	/^ffff80000010cbf9:	ff d0                	callq  *%rax$/;"	l
ffff80000010cbfb	kernel.asm	/^ffff80000010cbfb:	be 0c 00 00 00       	mov    $0xc,%esi$/;"	l
ffff80000010cc00	kernel.asm	/^ffff80000010cc00:	bf 0c 00 00 00       	mov    $0xc,%edi$/;"	l
ffff80000010cc05	kernel.asm	/^ffff80000010cc05:	48 b8 b9 c5 10 00 00 	movabs $0xffff80000010c5b9,%rax$/;"	l
ffff80000010cc0c	kernel.asm	/^ffff80000010cc0c:	80 ff ff $/;"	l
ffff80000010cc0f	kernel.asm	/^ffff80000010cc0f:	ff d0                	callq  *%rax$/;"	l
ffff80000010cc11	kernel.asm	/^ffff80000010cc11:	be 0d 00 00 00       	mov    $0xd,%esi$/;"	l
ffff80000010cc16	kernel.asm	/^ffff80000010cc16:	bf 0d 00 00 00       	mov    $0xd,%edi$/;"	l
ffff80000010cc1b	kernel.asm	/^ffff80000010cc1b:	48 b8 b9 c5 10 00 00 	movabs $0xffff80000010c5b9,%rax$/;"	l
ffff80000010cc22	kernel.asm	/^ffff80000010cc22:	80 ff ff $/;"	l
ffff80000010cc25	kernel.asm	/^ffff80000010cc25:	ff d0                	callq  *%rax$/;"	l
ffff80000010cc27	kernel.asm	/^ffff80000010cc27:	be 0e 00 00 00       	mov    $0xe,%esi$/;"	l
ffff80000010cc2c	kernel.asm	/^ffff80000010cc2c:	bf 0e 00 00 00       	mov    $0xe,%edi$/;"	l
ffff80000010cc31	kernel.asm	/^ffff80000010cc31:	48 b8 b9 c5 10 00 00 	movabs $0xffff80000010c5b9,%rax$/;"	l
ffff80000010cc38	kernel.asm	/^ffff80000010cc38:	80 ff ff $/;"	l
ffff80000010cc3b	kernel.asm	/^ffff80000010cc3b:	ff d0                	callq  *%rax$/;"	l
ffff80000010cc3d	kernel.asm	/^ffff80000010cc3d:	be 0f 00 00 00       	mov    $0xf,%esi$/;"	l
ffff80000010cc42	kernel.asm	/^ffff80000010cc42:	bf 0f 00 00 00       	mov    $0xf,%edi$/;"	l
ffff80000010cc47	kernel.asm	/^ffff80000010cc47:	48 b8 b9 c5 10 00 00 	movabs $0xffff80000010c5b9,%rax$/;"	l
ffff80000010cc4e	kernel.asm	/^ffff80000010cc4e:	80 ff ff $/;"	l
ffff80000010cc51	kernel.asm	/^ffff80000010cc51:	ff d0                	callq  *%rax$/;"	l
ffff80000010cc53	kernel.asm	/^ffff80000010cc53:	be 41 00 00 00       	mov    $0x41,%esi$/;"	l
ffff80000010cc58	kernel.asm	/^ffff80000010cc58:	bf 10 00 00 00       	mov    $0x10,%edi$/;"	l
ffff80000010cc5d	kernel.asm	/^ffff80000010cc5d:	48 b8 b9 c5 10 00 00 	movabs $0xffff80000010c5b9,%rax$/;"	l
ffff80000010cc64	kernel.asm	/^ffff80000010cc64:	80 ff ff $/;"	l
ffff80000010cc67	kernel.asm	/^ffff80000010cc67:	ff d0                	callq  *%rax$/;"	l
ffff80000010cc69	kernel.asm	/^ffff80000010cc69:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffff80000010cc6e	kernel.asm	/^ffff80000010cc6e:	bf 11 00 00 00       	mov    $0x11,%edi$/;"	l
ffff80000010cc73	kernel.asm	/^ffff80000010cc73:	48 b8 b9 c5 10 00 00 	movabs $0xffff80000010c5b9,%rax$/;"	l
ffff80000010cc7a	kernel.asm	/^ffff80000010cc7a:	80 ff ff $/;"	l
ffff80000010cc7d	kernel.asm	/^ffff80000010cc7d:	ff d0                	callq  *%rax$/;"	l
ffff80000010cc7f	kernel.asm	/^ffff80000010cc7f:	be 0f 00 00 00       	mov    $0xf,%esi$/;"	l
ffff80000010cc84	kernel.asm	/^ffff80000010cc84:	bf 12 00 00 00       	mov    $0x12,%edi$/;"	l
ffff80000010cc89	kernel.asm	/^ffff80000010cc89:	48 b8 b9 c5 10 00 00 	movabs $0xffff80000010c5b9,%rax$/;"	l
ffff80000010cc90	kernel.asm	/^ffff80000010cc90:	80 ff ff $/;"	l
ffff80000010cc93	kernel.asm	/^ffff80000010cc93:	ff d0                	callq  *%rax$/;"	l
ffff80000010cc95	kernel.asm	/^ffff80000010cc95:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffff80000010cc9a	kernel.asm	/^ffff80000010cc9a:	bf 13 00 00 00       	mov    $0x13,%edi$/;"	l
ffff80000010cc9f	kernel.asm	/^ffff80000010cc9f:	48 b8 b9 c5 10 00 00 	movabs $0xffff80000010c5b9,%rax$/;"	l
ffff80000010cca6	kernel.asm	/^ffff80000010cca6:	80 ff ff $/;"	l
ffff80000010cca9	kernel.asm	/^ffff80000010cca9:	ff d0                	callq  *%rax$/;"	l
ffff80000010ccab	kernel.asm	/^ffff80000010ccab:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffff80000010ccb0	kernel.asm	/^ffff80000010ccb0:	bf 14 00 00 00       	mov    $0x14,%edi$/;"	l
ffff80000010ccb5	kernel.asm	/^ffff80000010ccb5:	48 b8 b9 c5 10 00 00 	movabs $0xffff80000010c5b9,%rax$/;"	l
ffff80000010ccbc	kernel.asm	/^ffff80000010ccbc:	80 ff ff $/;"	l
ffff80000010ccbf	kernel.asm	/^ffff80000010ccbf:	ff d0                	callq  *%rax$/;"	l
ffff80000010ccc1	kernel.asm	/^ffff80000010ccc1:	bf da 03 00 00       	mov    $0x3da,%edi$/;"	l
ffff80000010ccc6	kernel.asm	/^ffff80000010ccc6:	48 b8 7c c5 10 00 00 	movabs $0xffff80000010c57c,%rax$/;"	l
ffff80000010cccd	kernel.asm	/^ffff80000010cccd:	80 ff ff $/;"	l
ffff80000010ccd0	kernel.asm	/^ffff80000010ccd0:	ff d0                	callq  *%rax$/;"	l
ffff80000010ccd2	kernel.asm	/^ffff80000010ccd2:	be 20 00 00 00       	mov    $0x20,%esi$/;"	l
ffff80000010ccd7	kernel.asm	/^ffff80000010ccd7:	bf c0 03 00 00       	mov    $0x3c0,%edi$/;"	l
ffff80000010ccdc	kernel.asm	/^ffff80000010ccdc:	48 b8 9a c5 10 00 00 	movabs $0xffff80000010c59a,%rax$/;"	l
ffff80000010cce3	kernel.asm	/^ffff80000010cce3:	80 ff ff $/;"	l
ffff80000010cce6	kernel.asm	/^ffff80000010cce6:	ff d0                	callq  *%rax$/;"	l
ffff80000010cce8	kernel.asm	/^ffff80000010cce8:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
ffff80000010cced	kernel.asm	/^ffff80000010cced:	48 ba 9f c7 10 00 00 	movabs $0xffff80000010c79f,%rdx$/;"	l
ffff80000010ccf4	kernel.asm	/^ffff80000010ccf4:	80 ff ff $/;"	l
ffff80000010ccf7	kernel.asm	/^ffff80000010ccf7:	ff d2                	callq  *%rdx$/;"	l
ffff80000010ccf9	kernel.asm	/^ffff80000010ccf9:	90                   	nop$/;"	l
ffff80000010ccfa	kernel.asm	/^ffff80000010ccfa:	5d                   	pop    %rbp$/;"	l
ffff80000010ccfb	kernel.asm	/^ffff80000010ccfb:	c3                   	retq   $/;"	l
ffff80000010ccfc	kernel.asm	/^ffff80000010ccfc <vgaMode3>:$/;"	l
ffff80000010ccfc	kernel.asm	/^ffff80000010ccfc:	55                   	push   %rbp$/;"	l
ffff80000010ccfd	kernel.asm	/^ffff80000010ccfd:	48 89 e5             	mov    %rsp,%rbp$/;"	l
ffff80000010cd00	kernel.asm	/^ffff80000010cd00:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
ffff80000010cd04	kernel.asm	/^ffff80000010cd04:	bf 67 00 00 00       	mov    $0x67,%edi$/;"	l
ffff80000010cd09	kernel.asm	/^ffff80000010cd09:	48 b8 0d c6 10 00 00 	movabs $0xffff80000010c60d,%rax$/;"	l
ffff80000010cd10	kernel.asm	/^ffff80000010cd10:	80 ff ff $/;"	l
ffff80000010cd13	kernel.asm	/^ffff80000010cd13:	ff d0                	callq  *%rax$/;"	l
ffff80000010cd15	kernel.asm	/^ffff80000010cd15:	be 03 00 00 00       	mov    $0x3,%esi$/;"	l
ffff80000010cd1a	kernel.asm	/^ffff80000010cd1a:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
ffff80000010cd1f	kernel.asm	/^ffff80000010cd1f:	48 b8 34 c6 10 00 00 	movabs $0xffff80000010c634,%rax$/;"	l
ffff80000010cd26	kernel.asm	/^ffff80000010cd26:	80 ff ff $/;"	l
ffff80000010cd29	kernel.asm	/^ffff80000010cd29:	ff d0                	callq  *%rax$/;"	l
ffff80000010cd2b	kernel.asm	/^ffff80000010cd2b:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffff80000010cd30	kernel.asm	/^ffff80000010cd30:	bf 01 00 00 00       	mov    $0x1,%edi$/;"	l
ffff80000010cd35	kernel.asm	/^ffff80000010cd35:	48 b8 34 c6 10 00 00 	movabs $0xffff80000010c634,%rax$/;"	l
ffff80000010cd3c	kernel.asm	/^ffff80000010cd3c:	80 ff ff $/;"	l
ffff80000010cd3f	kernel.asm	/^ffff80000010cd3f:	ff d0                	callq  *%rax$/;"	l
ffff80000010cd41	kernel.asm	/^ffff80000010cd41:	be 03 00 00 00       	mov    $0x3,%esi$/;"	l
ffff80000010cd46	kernel.asm	/^ffff80000010cd46:	bf 02 00 00 00       	mov    $0x2,%edi$/;"	l
ffff80000010cd4b	kernel.asm	/^ffff80000010cd4b:	48 b8 34 c6 10 00 00 	movabs $0xffff80000010c634,%rax$/;"	l
ffff80000010cd52	kernel.asm	/^ffff80000010cd52:	80 ff ff $/;"	l
ffff80000010cd55	kernel.asm	/^ffff80000010cd55:	ff d0                	callq  *%rax$/;"	l
ffff80000010cd57	kernel.asm	/^ffff80000010cd57:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffff80000010cd5c	kernel.asm	/^ffff80000010cd5c:	bf 03 00 00 00       	mov    $0x3,%edi$/;"	l
ffff80000010cd61	kernel.asm	/^ffff80000010cd61:	48 b8 34 c6 10 00 00 	movabs $0xffff80000010c634,%rax$/;"	l
ffff80000010cd68	kernel.asm	/^ffff80000010cd68:	80 ff ff $/;"	l
ffff80000010cd6b	kernel.asm	/^ffff80000010cd6b:	ff d0                	callq  *%rax$/;"	l
ffff80000010cd6d	kernel.asm	/^ffff80000010cd6d:	be 02 00 00 00       	mov    $0x2,%esi$/;"	l
ffff80000010cd72	kernel.asm	/^ffff80000010cd72:	bf 04 00 00 00       	mov    $0x4,%edi$/;"	l
ffff80000010cd77	kernel.asm	/^ffff80000010cd77:	48 b8 34 c6 10 00 00 	movabs $0xffff80000010c634,%rax$/;"	l
ffff80000010cd7e	kernel.asm	/^ffff80000010cd7e:	80 ff ff $/;"	l
ffff80000010cd81	kernel.asm	/^ffff80000010cd81:	ff d0                	callq  *%rax$/;"	l
ffff80000010cd83	kernel.asm	/^ffff80000010cd83:	be 0e 00 00 00       	mov    $0xe,%esi$/;"	l
ffff80000010cd88	kernel.asm	/^ffff80000010cd88:	bf 11 00 00 00       	mov    $0x11,%edi$/;"	l
ffff80000010cd8d	kernel.asm	/^ffff80000010cd8d:	48 b8 ba c6 10 00 00 	movabs $0xffff80000010c6ba,%rax$/;"	l
ffff80000010cd94	kernel.asm	/^ffff80000010cd94:	80 ff ff $/;"	l
ffff80000010cd97	kernel.asm	/^ffff80000010cd97:	ff d0                	callq  *%rax$/;"	l
ffff80000010cd99	kernel.asm	/^ffff80000010cd99:	be 5f 00 00 00       	mov    $0x5f,%esi$/;"	l
ffff80000010cd9e	kernel.asm	/^ffff80000010cd9e:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
ffff80000010cda3	kernel.asm	/^ffff80000010cda3:	48 b8 ba c6 10 00 00 	movabs $0xffff80000010c6ba,%rax$/;"	l
ffff80000010cdaa	kernel.asm	/^ffff80000010cdaa:	80 ff ff $/;"	l
ffff80000010cdad	kernel.asm	/^ffff80000010cdad:	ff d0                	callq  *%rax$/;"	l
ffff80000010cdaf	kernel.asm	/^ffff80000010cdaf:	be 4f 00 00 00       	mov    $0x4f,%esi$/;"	l
ffff80000010cdb4	kernel.asm	/^ffff80000010cdb4:	bf 01 00 00 00       	mov    $0x1,%edi$/;"	l
ffff80000010cdb9	kernel.asm	/^ffff80000010cdb9:	48 b8 ba c6 10 00 00 	movabs $0xffff80000010c6ba,%rax$/;"	l
ffff80000010cdc0	kernel.asm	/^ffff80000010cdc0:	80 ff ff $/;"	l
ffff80000010cdc3	kernel.asm	/^ffff80000010cdc3:	ff d0                	callq  *%rax$/;"	l
ffff80000010cdc5	kernel.asm	/^ffff80000010cdc5:	be 50 00 00 00       	mov    $0x50,%esi$/;"	l
ffff80000010cdca	kernel.asm	/^ffff80000010cdca:	bf 02 00 00 00       	mov    $0x2,%edi$/;"	l
ffff80000010cdcf	kernel.asm	/^ffff80000010cdcf:	48 b8 ba c6 10 00 00 	movabs $0xffff80000010c6ba,%rax$/;"	l
ffff80000010cdd6	kernel.asm	/^ffff80000010cdd6:	80 ff ff $/;"	l
ffff80000010cdd9	kernel.asm	/^ffff80000010cdd9:	ff d0                	callq  *%rax$/;"	l
ffff80000010cddb	kernel.asm	/^ffff80000010cddb:	be 82 00 00 00       	mov    $0x82,%esi$/;"	l
ffff80000010cde0	kernel.asm	/^ffff80000010cde0:	bf 03 00 00 00       	mov    $0x3,%edi$/;"	l
ffff80000010cde5	kernel.asm	/^ffff80000010cde5:	48 b8 ba c6 10 00 00 	movabs $0xffff80000010c6ba,%rax$/;"	l
ffff80000010cdec	kernel.asm	/^ffff80000010cdec:	80 ff ff $/;"	l
ffff80000010cdef	kernel.asm	/^ffff80000010cdef:	ff d0                	callq  *%rax$/;"	l
ffff80000010cdf1	kernel.asm	/^ffff80000010cdf1:	be 55 00 00 00       	mov    $0x55,%esi$/;"	l
ffff80000010cdf6	kernel.asm	/^ffff80000010cdf6:	bf 04 00 00 00       	mov    $0x4,%edi$/;"	l
ffff80000010cdfb	kernel.asm	/^ffff80000010cdfb:	48 b8 ba c6 10 00 00 	movabs $0xffff80000010c6ba,%rax$/;"	l
ffff80000010ce02	kernel.asm	/^ffff80000010ce02:	80 ff ff $/;"	l
ffff80000010ce05	kernel.asm	/^ffff80000010ce05:	ff d0                	callq  *%rax$/;"	l
ffff80000010ce07	kernel.asm	/^ffff80000010ce07:	be 81 00 00 00       	mov    $0x81,%esi$/;"	l
ffff80000010ce0c	kernel.asm	/^ffff80000010ce0c:	bf 05 00 00 00       	mov    $0x5,%edi$/;"	l
ffff80000010ce11	kernel.asm	/^ffff80000010ce11:	48 b8 ba c6 10 00 00 	movabs $0xffff80000010c6ba,%rax$/;"	l
ffff80000010ce18	kernel.asm	/^ffff80000010ce18:	80 ff ff $/;"	l
ffff80000010ce1b	kernel.asm	/^ffff80000010ce1b:	ff d0                	callq  *%rax$/;"	l
ffff80000010ce1d	kernel.asm	/^ffff80000010ce1d:	be bf 00 00 00       	mov    $0xbf,%esi$/;"	l
ffff80000010ce22	kernel.asm	/^ffff80000010ce22:	bf 06 00 00 00       	mov    $0x6,%edi$/;"	l
ffff80000010ce27	kernel.asm	/^ffff80000010ce27:	48 b8 ba c6 10 00 00 	movabs $0xffff80000010c6ba,%rax$/;"	l
ffff80000010ce2e	kernel.asm	/^ffff80000010ce2e:	80 ff ff $/;"	l
ffff80000010ce31	kernel.asm	/^ffff80000010ce31:	ff d0                	callq  *%rax$/;"	l
ffff80000010ce33	kernel.asm	/^ffff80000010ce33:	be 1f 00 00 00       	mov    $0x1f,%esi$/;"	l
ffff80000010ce38	kernel.asm	/^ffff80000010ce38:	bf 07 00 00 00       	mov    $0x7,%edi$/;"	l
ffff80000010ce3d	kernel.asm	/^ffff80000010ce3d:	48 b8 ba c6 10 00 00 	movabs $0xffff80000010c6ba,%rax$/;"	l
ffff80000010ce44	kernel.asm	/^ffff80000010ce44:	80 ff ff $/;"	l
ffff80000010ce47	kernel.asm	/^ffff80000010ce47:	ff d0                	callq  *%rax$/;"	l
ffff80000010ce49	kernel.asm	/^ffff80000010ce49:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffff80000010ce4e	kernel.asm	/^ffff80000010ce4e:	bf 08 00 00 00       	mov    $0x8,%edi$/;"	l
ffff80000010ce53	kernel.asm	/^ffff80000010ce53:	48 b8 ba c6 10 00 00 	movabs $0xffff80000010c6ba,%rax$/;"	l
ffff80000010ce5a	kernel.asm	/^ffff80000010ce5a:	80 ff ff $/;"	l
ffff80000010ce5d	kernel.asm	/^ffff80000010ce5d:	ff d0                	callq  *%rax$/;"	l
ffff80000010ce5f	kernel.asm	/^ffff80000010ce5f:	be 4f 00 00 00       	mov    $0x4f,%esi$/;"	l
ffff80000010ce64	kernel.asm	/^ffff80000010ce64:	bf 09 00 00 00       	mov    $0x9,%edi$/;"	l
ffff80000010ce69	kernel.asm	/^ffff80000010ce69:	48 b8 ba c6 10 00 00 	movabs $0xffff80000010c6ba,%rax$/;"	l
ffff80000010ce70	kernel.asm	/^ffff80000010ce70:	80 ff ff $/;"	l
ffff80000010ce73	kernel.asm	/^ffff80000010ce73:	ff d0                	callq  *%rax$/;"	l
ffff80000010ce75	kernel.asm	/^ffff80000010ce75:	be 20 00 00 00       	mov    $0x20,%esi$/;"	l
ffff80000010ce7a	kernel.asm	/^ffff80000010ce7a:	bf 0a 00 00 00       	mov    $0xa,%edi$/;"	l
ffff80000010ce7f	kernel.asm	/^ffff80000010ce7f:	48 b8 ba c6 10 00 00 	movabs $0xffff80000010c6ba,%rax$/;"	l
ffff80000010ce86	kernel.asm	/^ffff80000010ce86:	80 ff ff $/;"	l
ffff80000010ce89	kernel.asm	/^ffff80000010ce89:	ff d0                	callq  *%rax$/;"	l
ffff80000010ce8b	kernel.asm	/^ffff80000010ce8b:	be 0e 00 00 00       	mov    $0xe,%esi$/;"	l
ffff80000010ce90	kernel.asm	/^ffff80000010ce90:	bf 0b 00 00 00       	mov    $0xb,%edi$/;"	l
ffff80000010ce95	kernel.asm	/^ffff80000010ce95:	48 b8 ba c6 10 00 00 	movabs $0xffff80000010c6ba,%rax$/;"	l
ffff80000010ce9c	kernel.asm	/^ffff80000010ce9c:	80 ff ff $/;"	l
ffff80000010ce9f	kernel.asm	/^ffff80000010ce9f:	ff d0                	callq  *%rax$/;"	l
ffff80000010cea1	kernel.asm	/^ffff80000010cea1:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffff80000010cea6	kernel.asm	/^ffff80000010cea6:	bf 0c 00 00 00       	mov    $0xc,%edi$/;"	l
ffff80000010ceab	kernel.asm	/^ffff80000010ceab:	48 b8 ba c6 10 00 00 	movabs $0xffff80000010c6ba,%rax$/;"	l
ffff80000010ceb2	kernel.asm	/^ffff80000010ceb2:	80 ff ff $/;"	l
ffff80000010ceb5	kernel.asm	/^ffff80000010ceb5:	ff d0                	callq  *%rax$/;"	l
ffff80000010ceb7	kernel.asm	/^ffff80000010ceb7:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffff80000010cebc	kernel.asm	/^ffff80000010cebc:	bf 0d 00 00 00       	mov    $0xd,%edi$/;"	l
ffff80000010cec1	kernel.asm	/^ffff80000010cec1:	48 b8 ba c6 10 00 00 	movabs $0xffff80000010c6ba,%rax$/;"	l
ffff80000010cec8	kernel.asm	/^ffff80000010cec8:	80 ff ff $/;"	l
ffff80000010cecb	kernel.asm	/^ffff80000010cecb:	ff d0                	callq  *%rax$/;"	l
ffff80000010cecd	kernel.asm	/^ffff80000010cecd:	be 01 00 00 00       	mov    $0x1,%esi$/;"	l
ffff80000010ced2	kernel.asm	/^ffff80000010ced2:	bf 0e 00 00 00       	mov    $0xe,%edi$/;"	l
ffff80000010ced7	kernel.asm	/^ffff80000010ced7:	48 b8 ba c6 10 00 00 	movabs $0xffff80000010c6ba,%rax$/;"	l
ffff80000010cede	kernel.asm	/^ffff80000010cede:	80 ff ff $/;"	l
ffff80000010cee1	kernel.asm	/^ffff80000010cee1:	ff d0                	callq  *%rax$/;"	l
ffff80000010cee3	kernel.asm	/^ffff80000010cee3:	be e0 00 00 00       	mov    $0xe0,%esi$/;"	l
ffff80000010cee8	kernel.asm	/^ffff80000010cee8:	bf 0f 00 00 00       	mov    $0xf,%edi$/;"	l
ffff80000010ceed	kernel.asm	/^ffff80000010ceed:	48 b8 ba c6 10 00 00 	movabs $0xffff80000010c6ba,%rax$/;"	l
ffff80000010cef4	kernel.asm	/^ffff80000010cef4:	80 ff ff $/;"	l
ffff80000010cef7	kernel.asm	/^ffff80000010cef7:	ff d0                	callq  *%rax$/;"	l
ffff80000010cef9	kernel.asm	/^ffff80000010cef9:	be 9c 00 00 00       	mov    $0x9c,%esi$/;"	l
ffff80000010cefe	kernel.asm	/^ffff80000010cefe:	bf 10 00 00 00       	mov    $0x10,%edi$/;"	l
ffff80000010cf03	kernel.asm	/^ffff80000010cf03:	48 b8 ba c6 10 00 00 	movabs $0xffff80000010c6ba,%rax$/;"	l
ffff80000010cf0a	kernel.asm	/^ffff80000010cf0a:	80 ff ff $/;"	l
ffff80000010cf0d	kernel.asm	/^ffff80000010cf0d:	ff d0                	callq  *%rax$/;"	l
ffff80000010cf0f	kernel.asm	/^ffff80000010cf0f:	be 8e 00 00 00       	mov    $0x8e,%esi$/;"	l
ffff80000010cf14	kernel.asm	/^ffff80000010cf14:	bf 11 00 00 00       	mov    $0x11,%edi$/;"	l
ffff80000010cf19	kernel.asm	/^ffff80000010cf19:	48 b8 ba c6 10 00 00 	movabs $0xffff80000010c6ba,%rax$/;"	l
ffff80000010cf20	kernel.asm	/^ffff80000010cf20:	80 ff ff $/;"	l
ffff80000010cf23	kernel.asm	/^ffff80000010cf23:	ff d0                	callq  *%rax$/;"	l
ffff80000010cf25	kernel.asm	/^ffff80000010cf25:	be 8f 00 00 00       	mov    $0x8f,%esi$/;"	l
ffff80000010cf2a	kernel.asm	/^ffff80000010cf2a:	bf 12 00 00 00       	mov    $0x12,%edi$/;"	l
ffff80000010cf2f	kernel.asm	/^ffff80000010cf2f:	48 b8 ba c6 10 00 00 	movabs $0xffff80000010c6ba,%rax$/;"	l
ffff80000010cf36	kernel.asm	/^ffff80000010cf36:	80 ff ff $/;"	l
ffff80000010cf39	kernel.asm	/^ffff80000010cf39:	ff d0                	callq  *%rax$/;"	l
ffff80000010cf3b	kernel.asm	/^ffff80000010cf3b:	be 28 00 00 00       	mov    $0x28,%esi$/;"	l
ffff80000010cf40	kernel.asm	/^ffff80000010cf40:	bf 13 00 00 00       	mov    $0x13,%edi$/;"	l
ffff80000010cf45	kernel.asm	/^ffff80000010cf45:	48 b8 ba c6 10 00 00 	movabs $0xffff80000010c6ba,%rax$/;"	l
ffff80000010cf4c	kernel.asm	/^ffff80000010cf4c:	80 ff ff $/;"	l
ffff80000010cf4f	kernel.asm	/^ffff80000010cf4f:	ff d0                	callq  *%rax$/;"	l
ffff80000010cf51	kernel.asm	/^ffff80000010cf51:	be 1f 00 00 00       	mov    $0x1f,%esi$/;"	l
ffff80000010cf56	kernel.asm	/^ffff80000010cf56:	bf 14 00 00 00       	mov    $0x14,%edi$/;"	l
ffff80000010cf5b	kernel.asm	/^ffff80000010cf5b:	48 b8 ba c6 10 00 00 	movabs $0xffff80000010c6ba,%rax$/;"	l
ffff80000010cf62	kernel.asm	/^ffff80000010cf62:	80 ff ff $/;"	l
ffff80000010cf65	kernel.asm	/^ffff80000010cf65:	ff d0                	callq  *%rax$/;"	l
ffff80000010cf67	kernel.asm	/^ffff80000010cf67:	be 96 00 00 00       	mov    $0x96,%esi$/;"	l
ffff80000010cf6c	kernel.asm	/^ffff80000010cf6c:	bf 15 00 00 00       	mov    $0x15,%edi$/;"	l
ffff80000010cf71	kernel.asm	/^ffff80000010cf71:	48 b8 ba c6 10 00 00 	movabs $0xffff80000010c6ba,%rax$/;"	l
ffff80000010cf78	kernel.asm	/^ffff80000010cf78:	80 ff ff $/;"	l
ffff80000010cf7b	kernel.asm	/^ffff80000010cf7b:	ff d0                	callq  *%rax$/;"	l
ffff80000010cf7d	kernel.asm	/^ffff80000010cf7d:	be b9 00 00 00       	mov    $0xb9,%esi$/;"	l
ffff80000010cf82	kernel.asm	/^ffff80000010cf82:	bf 16 00 00 00       	mov    $0x16,%edi$/;"	l
ffff80000010cf87	kernel.asm	/^ffff80000010cf87:	48 b8 ba c6 10 00 00 	movabs $0xffff80000010c6ba,%rax$/;"	l
ffff80000010cf8e	kernel.asm	/^ffff80000010cf8e:	80 ff ff $/;"	l
ffff80000010cf91	kernel.asm	/^ffff80000010cf91:	ff d0                	callq  *%rax$/;"	l
ffff80000010cf93	kernel.asm	/^ffff80000010cf93:	be a3 00 00 00       	mov    $0xa3,%esi$/;"	l
ffff80000010cf98	kernel.asm	/^ffff80000010cf98:	bf 17 00 00 00       	mov    $0x17,%edi$/;"	l
ffff80000010cf9d	kernel.asm	/^ffff80000010cf9d:	48 b8 ba c6 10 00 00 	movabs $0xffff80000010c6ba,%rax$/;"	l
ffff80000010cfa4	kernel.asm	/^ffff80000010cfa4:	80 ff ff $/;"	l
ffff80000010cfa7	kernel.asm	/^ffff80000010cfa7:	ff d0                	callq  *%rax$/;"	l
ffff80000010cfa9	kernel.asm	/^ffff80000010cfa9:	be ff 00 00 00       	mov    $0xff,%esi$/;"	l
ffff80000010cfae	kernel.asm	/^ffff80000010cfae:	bf 18 00 00 00       	mov    $0x18,%edi$/;"	l
ffff80000010cfb3	kernel.asm	/^ffff80000010cfb3:	48 b8 ba c6 10 00 00 	movabs $0xffff80000010c6ba,%rax$/;"	l
ffff80000010cfba	kernel.asm	/^ffff80000010cfba:	80 ff ff $/;"	l
ffff80000010cfbd	kernel.asm	/^ffff80000010cfbd:	ff d0                	callq  *%rax$/;"	l
ffff80000010cfbf	kernel.asm	/^ffff80000010cfbf:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffff80000010cfc4	kernel.asm	/^ffff80000010cfc4:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
ffff80000010cfc9	kernel.asm	/^ffff80000010cfc9:	48 b8 77 c6 10 00 00 	movabs $0xffff80000010c677,%rax$/;"	l
ffff80000010cfd0	kernel.asm	/^ffff80000010cfd0:	80 ff ff $/;"	l
ffff80000010cfd3	kernel.asm	/^ffff80000010cfd3:	ff d0                	callq  *%rax$/;"	l
ffff80000010cfd5	kernel.asm	/^ffff80000010cfd5:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffff80000010cfda	kernel.asm	/^ffff80000010cfda:	bf 01 00 00 00       	mov    $0x1,%edi$/;"	l
ffff80000010cfdf	kernel.asm	/^ffff80000010cfdf:	48 b8 77 c6 10 00 00 	movabs $0xffff80000010c677,%rax$/;"	l
ffff80000010cfe6	kernel.asm	/^ffff80000010cfe6:	80 ff ff $/;"	l
ffff80000010cfe9	kernel.asm	/^ffff80000010cfe9:	ff d0                	callq  *%rax$/;"	l
ffff80000010cfeb	kernel.asm	/^ffff80000010cfeb:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffff80000010cff0	kernel.asm	/^ffff80000010cff0:	bf 02 00 00 00       	mov    $0x2,%edi$/;"	l
ffff80000010cff5	kernel.asm	/^ffff80000010cff5:	48 b8 77 c6 10 00 00 	movabs $0xffff80000010c677,%rax$/;"	l
ffff80000010cffc	kernel.asm	/^ffff80000010cffc:	80 ff ff $/;"	l
ffff80000010cfff	kernel.asm	/^ffff80000010cfff:	ff d0                	callq  *%rax$/;"	l
ffff80000010d001	kernel.asm	/^ffff80000010d001:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffff80000010d006	kernel.asm	/^ffff80000010d006:	bf 03 00 00 00       	mov    $0x3,%edi$/;"	l
ffff80000010d00b	kernel.asm	/^ffff80000010d00b:	48 b8 77 c6 10 00 00 	movabs $0xffff80000010c677,%rax$/;"	l
ffff80000010d012	kernel.asm	/^ffff80000010d012:	80 ff ff $/;"	l
ffff80000010d015	kernel.asm	/^ffff80000010d015:	ff d0                	callq  *%rax$/;"	l
ffff80000010d017	kernel.asm	/^ffff80000010d017:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffff80000010d01c	kernel.asm	/^ffff80000010d01c:	bf 04 00 00 00       	mov    $0x4,%edi$/;"	l
ffff80000010d021	kernel.asm	/^ffff80000010d021:	48 b8 77 c6 10 00 00 	movabs $0xffff80000010c677,%rax$/;"	l
ffff80000010d028	kernel.asm	/^ffff80000010d028:	80 ff ff $/;"	l
ffff80000010d02b	kernel.asm	/^ffff80000010d02b:	ff d0                	callq  *%rax$/;"	l
ffff80000010d02d	kernel.asm	/^ffff80000010d02d:	be 10 00 00 00       	mov    $0x10,%esi$/;"	l
ffff80000010d032	kernel.asm	/^ffff80000010d032:	bf 05 00 00 00       	mov    $0x5,%edi$/;"	l
ffff80000010d037	kernel.asm	/^ffff80000010d037:	48 b8 77 c6 10 00 00 	movabs $0xffff80000010c677,%rax$/;"	l
ffff80000010d03e	kernel.asm	/^ffff80000010d03e:	80 ff ff $/;"	l
ffff80000010d041	kernel.asm	/^ffff80000010d041:	ff d0                	callq  *%rax$/;"	l
ffff80000010d043	kernel.asm	/^ffff80000010d043:	be 0e 00 00 00       	mov    $0xe,%esi$/;"	l
ffff80000010d048	kernel.asm	/^ffff80000010d048:	bf 06 00 00 00       	mov    $0x6,%edi$/;"	l
ffff80000010d04d	kernel.asm	/^ffff80000010d04d:	48 b8 77 c6 10 00 00 	movabs $0xffff80000010c677,%rax$/;"	l
ffff80000010d054	kernel.asm	/^ffff80000010d054:	80 ff ff $/;"	l
ffff80000010d057	kernel.asm	/^ffff80000010d057:	ff d0                	callq  *%rax$/;"	l
ffff80000010d059	kernel.asm	/^ffff80000010d059:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffff80000010d05e	kernel.asm	/^ffff80000010d05e:	bf 07 00 00 00       	mov    $0x7,%edi$/;"	l
ffff80000010d063	kernel.asm	/^ffff80000010d063:	48 b8 77 c6 10 00 00 	movabs $0xffff80000010c677,%rax$/;"	l
ffff80000010d06a	kernel.asm	/^ffff80000010d06a:	80 ff ff $/;"	l
ffff80000010d06d	kernel.asm	/^ffff80000010d06d:	ff d0                	callq  *%rax$/;"	l
ffff80000010d06f	kernel.asm	/^ffff80000010d06f:	be ff 00 00 00       	mov    $0xff,%esi$/;"	l
ffff80000010d074	kernel.asm	/^ffff80000010d074:	bf 08 00 00 00       	mov    $0x8,%edi$/;"	l
ffff80000010d079	kernel.asm	/^ffff80000010d079:	48 b8 77 c6 10 00 00 	movabs $0xffff80000010c677,%rax$/;"	l
ffff80000010d080	kernel.asm	/^ffff80000010d080:	80 ff ff $/;"	l
ffff80000010d083	kernel.asm	/^ffff80000010d083:	ff d0                	callq  *%rax$/;"	l
ffff80000010d085	kernel.asm	/^ffff80000010d085:	bf da 03 00 00       	mov    $0x3da,%edi$/;"	l
ffff80000010d08a	kernel.asm	/^ffff80000010d08a:	48 b8 7c c5 10 00 00 	movabs $0xffff80000010c57c,%rax$/;"	l
ffff80000010d091	kernel.asm	/^ffff80000010d091:	80 ff ff $/;"	l
ffff80000010d094	kernel.asm	/^ffff80000010d094:	ff d0                	callq  *%rax$/;"	l
ffff80000010d096	kernel.asm	/^ffff80000010d096:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffff80000010d09b	kernel.asm	/^ffff80000010d09b:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
ffff80000010d0a0	kernel.asm	/^ffff80000010d0a0:	48 b8 b9 c5 10 00 00 	movabs $0xffff80000010c5b9,%rax$/;"	l
ffff80000010d0a7	kernel.asm	/^ffff80000010d0a7:	80 ff ff $/;"	l
ffff80000010d0aa	kernel.asm	/^ffff80000010d0aa:	ff d0                	callq  *%rax$/;"	l
ffff80000010d0ac	kernel.asm	/^ffff80000010d0ac:	be 01 00 00 00       	mov    $0x1,%esi$/;"	l
ffff80000010d0b1	kernel.asm	/^ffff80000010d0b1:	bf 01 00 00 00       	mov    $0x1,%edi$/;"	l
ffff80000010d0b6	kernel.asm	/^ffff80000010d0b6:	48 b8 b9 c5 10 00 00 	movabs $0xffff80000010c5b9,%rax$/;"	l
ffff80000010d0bd	kernel.asm	/^ffff80000010d0bd:	80 ff ff $/;"	l
ffff80000010d0c0	kernel.asm	/^ffff80000010d0c0:	ff d0                	callq  *%rax$/;"	l
ffff80000010d0c2	kernel.asm	/^ffff80000010d0c2:	be 02 00 00 00       	mov    $0x2,%esi$/;"	l
ffff80000010d0c7	kernel.asm	/^ffff80000010d0c7:	bf 02 00 00 00       	mov    $0x2,%edi$/;"	l
ffff80000010d0cc	kernel.asm	/^ffff80000010d0cc:	48 b8 b9 c5 10 00 00 	movabs $0xffff80000010c5b9,%rax$/;"	l
ffff80000010d0d3	kernel.asm	/^ffff80000010d0d3:	80 ff ff $/;"	l
ffff80000010d0d6	kernel.asm	/^ffff80000010d0d6:	ff d0                	callq  *%rax$/;"	l
ffff80000010d0d8	kernel.asm	/^ffff80000010d0d8:	be 03 00 00 00       	mov    $0x3,%esi$/;"	l
ffff80000010d0dd	kernel.asm	/^ffff80000010d0dd:	bf 03 00 00 00       	mov    $0x3,%edi$/;"	l
ffff80000010d0e2	kernel.asm	/^ffff80000010d0e2:	48 b8 b9 c5 10 00 00 	movabs $0xffff80000010c5b9,%rax$/;"	l
ffff80000010d0e9	kernel.asm	/^ffff80000010d0e9:	80 ff ff $/;"	l
ffff80000010d0ec	kernel.asm	/^ffff80000010d0ec:	ff d0                	callq  *%rax$/;"	l
ffff80000010d0ee	kernel.asm	/^ffff80000010d0ee:	be 04 00 00 00       	mov    $0x4,%esi$/;"	l
ffff80000010d0f3	kernel.asm	/^ffff80000010d0f3:	bf 04 00 00 00       	mov    $0x4,%edi$/;"	l
ffff80000010d0f8	kernel.asm	/^ffff80000010d0f8:	48 b8 b9 c5 10 00 00 	movabs $0xffff80000010c5b9,%rax$/;"	l
ffff80000010d0ff	kernel.asm	/^ffff80000010d0ff:	80 ff ff $/;"	l
ffff80000010d102	kernel.asm	/^ffff80000010d102:	ff d0                	callq  *%rax$/;"	l
ffff80000010d104	kernel.asm	/^ffff80000010d104:	be 05 00 00 00       	mov    $0x5,%esi$/;"	l
ffff80000010d109	kernel.asm	/^ffff80000010d109:	bf 05 00 00 00       	mov    $0x5,%edi$/;"	l
ffff80000010d10e	kernel.asm	/^ffff80000010d10e:	48 b8 b9 c5 10 00 00 	movabs $0xffff80000010c5b9,%rax$/;"	l
ffff80000010d115	kernel.asm	/^ffff80000010d115:	80 ff ff $/;"	l
ffff80000010d118	kernel.asm	/^ffff80000010d118:	ff d0                	callq  *%rax$/;"	l
ffff80000010d11a	kernel.asm	/^ffff80000010d11a:	be 14 00 00 00       	mov    $0x14,%esi$/;"	l
ffff80000010d11f	kernel.asm	/^ffff80000010d11f:	bf 06 00 00 00       	mov    $0x6,%edi$/;"	l
ffff80000010d124	kernel.asm	/^ffff80000010d124:	48 b8 b9 c5 10 00 00 	movabs $0xffff80000010c5b9,%rax$/;"	l
ffff80000010d12b	kernel.asm	/^ffff80000010d12b:	80 ff ff $/;"	l
ffff80000010d12e	kernel.asm	/^ffff80000010d12e:	ff d0                	callq  *%rax$/;"	l
ffff80000010d130	kernel.asm	/^ffff80000010d130:	be 07 00 00 00       	mov    $0x7,%esi$/;"	l
ffff80000010d135	kernel.asm	/^ffff80000010d135:	bf 07 00 00 00       	mov    $0x7,%edi$/;"	l
ffff80000010d13a	kernel.asm	/^ffff80000010d13a:	48 b8 b9 c5 10 00 00 	movabs $0xffff80000010c5b9,%rax$/;"	l
ffff80000010d141	kernel.asm	/^ffff80000010d141:	80 ff ff $/;"	l
ffff80000010d144	kernel.asm	/^ffff80000010d144:	ff d0                	callq  *%rax$/;"	l
ffff80000010d146	kernel.asm	/^ffff80000010d146:	be 38 00 00 00       	mov    $0x38,%esi$/;"	l
ffff80000010d14b	kernel.asm	/^ffff80000010d14b:	bf 08 00 00 00       	mov    $0x8,%edi$/;"	l
ffff80000010d150	kernel.asm	/^ffff80000010d150:	48 b8 b9 c5 10 00 00 	movabs $0xffff80000010c5b9,%rax$/;"	l
ffff80000010d157	kernel.asm	/^ffff80000010d157:	80 ff ff $/;"	l
ffff80000010d15a	kernel.asm	/^ffff80000010d15a:	ff d0                	callq  *%rax$/;"	l
ffff80000010d15c	kernel.asm	/^ffff80000010d15c:	be 39 00 00 00       	mov    $0x39,%esi$/;"	l
ffff80000010d161	kernel.asm	/^ffff80000010d161:	bf 09 00 00 00       	mov    $0x9,%edi$/;"	l
ffff80000010d166	kernel.asm	/^ffff80000010d166:	48 b8 b9 c5 10 00 00 	movabs $0xffff80000010c5b9,%rax$/;"	l
ffff80000010d16d	kernel.asm	/^ffff80000010d16d:	80 ff ff $/;"	l
ffff80000010d170	kernel.asm	/^ffff80000010d170:	ff d0                	callq  *%rax$/;"	l
ffff80000010d172	kernel.asm	/^ffff80000010d172:	be 3a 00 00 00       	mov    $0x3a,%esi$/;"	l
ffff80000010d177	kernel.asm	/^ffff80000010d177:	bf 0a 00 00 00       	mov    $0xa,%edi$/;"	l
ffff80000010d17c	kernel.asm	/^ffff80000010d17c:	48 b8 b9 c5 10 00 00 	movabs $0xffff80000010c5b9,%rax$/;"	l
ffff80000010d183	kernel.asm	/^ffff80000010d183:	80 ff ff $/;"	l
ffff80000010d186	kernel.asm	/^ffff80000010d186:	ff d0                	callq  *%rax$/;"	l
ffff80000010d188	kernel.asm	/^ffff80000010d188:	be 3b 00 00 00       	mov    $0x3b,%esi$/;"	l
ffff80000010d18d	kernel.asm	/^ffff80000010d18d:	bf 0b 00 00 00       	mov    $0xb,%edi$/;"	l
ffff80000010d192	kernel.asm	/^ffff80000010d192:	48 b8 b9 c5 10 00 00 	movabs $0xffff80000010c5b9,%rax$/;"	l
ffff80000010d199	kernel.asm	/^ffff80000010d199:	80 ff ff $/;"	l
ffff80000010d19c	kernel.asm	/^ffff80000010d19c:	ff d0                	callq  *%rax$/;"	l
ffff80000010d19e	kernel.asm	/^ffff80000010d19e:	be 3c 00 00 00       	mov    $0x3c,%esi$/;"	l
ffff80000010d1a3	kernel.asm	/^ffff80000010d1a3:	bf 0c 00 00 00       	mov    $0xc,%edi$/;"	l
ffff80000010d1a8	kernel.asm	/^ffff80000010d1a8:	48 b8 b9 c5 10 00 00 	movabs $0xffff80000010c5b9,%rax$/;"	l
ffff80000010d1af	kernel.asm	/^ffff80000010d1af:	80 ff ff $/;"	l
ffff80000010d1b2	kernel.asm	/^ffff80000010d1b2:	ff d0                	callq  *%rax$/;"	l
ffff80000010d1b4	kernel.asm	/^ffff80000010d1b4:	be 3d 00 00 00       	mov    $0x3d,%esi$/;"	l
ffff80000010d1b9	kernel.asm	/^ffff80000010d1b9:	bf 0d 00 00 00       	mov    $0xd,%edi$/;"	l
ffff80000010d1be	kernel.asm	/^ffff80000010d1be:	48 b8 b9 c5 10 00 00 	movabs $0xffff80000010c5b9,%rax$/;"	l
ffff80000010d1c5	kernel.asm	/^ffff80000010d1c5:	80 ff ff $/;"	l
ffff80000010d1c8	kernel.asm	/^ffff80000010d1c8:	ff d0                	callq  *%rax$/;"	l
ffff80000010d1ca	kernel.asm	/^ffff80000010d1ca:	be 3e 00 00 00       	mov    $0x3e,%esi$/;"	l
ffff80000010d1cf	kernel.asm	/^ffff80000010d1cf:	bf 0e 00 00 00       	mov    $0xe,%edi$/;"	l
ffff80000010d1d4	kernel.asm	/^ffff80000010d1d4:	48 b8 b9 c5 10 00 00 	movabs $0xffff80000010c5b9,%rax$/;"	l
ffff80000010d1db	kernel.asm	/^ffff80000010d1db:	80 ff ff $/;"	l
ffff80000010d1de	kernel.asm	/^ffff80000010d1de:	ff d0                	callq  *%rax$/;"	l
ffff80000010d1e0	kernel.asm	/^ffff80000010d1e0:	be 3f 00 00 00       	mov    $0x3f,%esi$/;"	l
ffff80000010d1e5	kernel.asm	/^ffff80000010d1e5:	bf 0f 00 00 00       	mov    $0xf,%edi$/;"	l
ffff80000010d1ea	kernel.asm	/^ffff80000010d1ea:	48 b8 b9 c5 10 00 00 	movabs $0xffff80000010c5b9,%rax$/;"	l
ffff80000010d1f1	kernel.asm	/^ffff80000010d1f1:	80 ff ff $/;"	l
ffff80000010d1f4	kernel.asm	/^ffff80000010d1f4:	ff d0                	callq  *%rax$/;"	l
ffff80000010d1f6	kernel.asm	/^ffff80000010d1f6:	be 0c 00 00 00       	mov    $0xc,%esi$/;"	l
ffff80000010d1fb	kernel.asm	/^ffff80000010d1fb:	bf 10 00 00 00       	mov    $0x10,%edi$/;"	l
ffff80000010d200	kernel.asm	/^ffff80000010d200:	48 b8 b9 c5 10 00 00 	movabs $0xffff80000010c5b9,%rax$/;"	l
ffff80000010d207	kernel.asm	/^ffff80000010d207:	80 ff ff $/;"	l
ffff80000010d20a	kernel.asm	/^ffff80000010d20a:	ff d0                	callq  *%rax$/;"	l
ffff80000010d20c	kernel.asm	/^ffff80000010d20c:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffff80000010d211	kernel.asm	/^ffff80000010d211:	bf 11 00 00 00       	mov    $0x11,%edi$/;"	l
ffff80000010d216	kernel.asm	/^ffff80000010d216:	48 b8 b9 c5 10 00 00 	movabs $0xffff80000010c5b9,%rax$/;"	l
ffff80000010d21d	kernel.asm	/^ffff80000010d21d:	80 ff ff $/;"	l
ffff80000010d220	kernel.asm	/^ffff80000010d220:	ff d0                	callq  *%rax$/;"	l
ffff80000010d222	kernel.asm	/^ffff80000010d222:	be 0f 00 00 00       	mov    $0xf,%esi$/;"	l
ffff80000010d227	kernel.asm	/^ffff80000010d227:	bf 12 00 00 00       	mov    $0x12,%edi$/;"	l
ffff80000010d22c	kernel.asm	/^ffff80000010d22c:	48 b8 b9 c5 10 00 00 	movabs $0xffff80000010c5b9,%rax$/;"	l
ffff80000010d233	kernel.asm	/^ffff80000010d233:	80 ff ff $/;"	l
ffff80000010d236	kernel.asm	/^ffff80000010d236:	ff d0                	callq  *%rax$/;"	l
ffff80000010d238	kernel.asm	/^ffff80000010d238:	be 08 00 00 00       	mov    $0x8,%esi$/;"	l
ffff80000010d23d	kernel.asm	/^ffff80000010d23d:	bf 13 00 00 00       	mov    $0x13,%edi$/;"	l
ffff80000010d242	kernel.asm	/^ffff80000010d242:	48 b8 b9 c5 10 00 00 	movabs $0xffff80000010c5b9,%rax$/;"	l
ffff80000010d249	kernel.asm	/^ffff80000010d249:	80 ff ff $/;"	l
ffff80000010d24c	kernel.asm	/^ffff80000010d24c:	ff d0                	callq  *%rax$/;"	l
ffff80000010d24e	kernel.asm	/^ffff80000010d24e:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffff80000010d253	kernel.asm	/^ffff80000010d253:	bf 14 00 00 00       	mov    $0x14,%edi$/;"	l
ffff80000010d258	kernel.asm	/^ffff80000010d258:	48 b8 b9 c5 10 00 00 	movabs $0xffff80000010c5b9,%rax$/;"	l
ffff80000010d25f	kernel.asm	/^ffff80000010d25f:	80 ff ff $/;"	l
ffff80000010d262	kernel.asm	/^ffff80000010d262:	ff d0                	callq  *%rax$/;"	l
ffff80000010d264	kernel.asm	/^ffff80000010d264:	be 01 00 00 00       	mov    $0x1,%esi$/;"	l
ffff80000010d269	kernel.asm	/^ffff80000010d269:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
ffff80000010d26e	kernel.asm	/^ffff80000010d26e:	48 b8 34 c6 10 00 00 	movabs $0xffff80000010c634,%rax$/;"	l
ffff80000010d275	kernel.asm	/^ffff80000010d275:	80 ff ff $/;"	l
ffff80000010d278	kernel.asm	/^ffff80000010d278:	ff d0                	callq  *%rax$/;"	l
ffff80000010d27a	kernel.asm	/^ffff80000010d27a:	be 04 00 00 00       	mov    $0x4,%esi$/;"	l
ffff80000010d27f	kernel.asm	/^ffff80000010d27f:	bf 02 00 00 00       	mov    $0x2,%edi$/;"	l
ffff80000010d284	kernel.asm	/^ffff80000010d284:	48 b8 34 c6 10 00 00 	movabs $0xffff80000010c634,%rax$/;"	l
ffff80000010d28b	kernel.asm	/^ffff80000010d28b:	80 ff ff $/;"	l
ffff80000010d28e	kernel.asm	/^ffff80000010d28e:	ff d0                	callq  *%rax$/;"	l
ffff80000010d290	kernel.asm	/^ffff80000010d290:	be 07 00 00 00       	mov    $0x7,%esi$/;"	l
ffff80000010d295	kernel.asm	/^ffff80000010d295:	bf 04 00 00 00       	mov    $0x4,%edi$/;"	l
ffff80000010d29a	kernel.asm	/^ffff80000010d29a:	48 b8 34 c6 10 00 00 	movabs $0xffff80000010c634,%rax$/;"	l
ffff80000010d2a1	kernel.asm	/^ffff80000010d2a1:	80 ff ff $/;"	l
ffff80000010d2a4	kernel.asm	/^ffff80000010d2a4:	ff d0                	callq  *%rax$/;"	l
ffff80000010d2a6	kernel.asm	/^ffff80000010d2a6:	be 03 00 00 00       	mov    $0x3,%esi$/;"	l
ffff80000010d2ab	kernel.asm	/^ffff80000010d2ab:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
ffff80000010d2b0	kernel.asm	/^ffff80000010d2b0:	48 b8 34 c6 10 00 00 	movabs $0xffff80000010c634,%rax$/;"	l
ffff80000010d2b7	kernel.asm	/^ffff80000010d2b7:	80 ff ff $/;"	l
ffff80000010d2ba	kernel.asm	/^ffff80000010d2ba:	ff d0                	callq  *%rax$/;"	l
ffff80000010d2bc	kernel.asm	/^ffff80000010d2bc:	be 02 00 00 00       	mov    $0x2,%esi$/;"	l
ffff80000010d2c1	kernel.asm	/^ffff80000010d2c1:	bf 04 00 00 00       	mov    $0x4,%edi$/;"	l
ffff80000010d2c6	kernel.asm	/^ffff80000010d2c6:	48 b8 77 c6 10 00 00 	movabs $0xffff80000010c677,%rax$/;"	l
ffff80000010d2cd	kernel.asm	/^ffff80000010d2cd:	80 ff ff $/;"	l
ffff80000010d2d0	kernel.asm	/^ffff80000010d2d0:	ff d0                	callq  *%rax$/;"	l
ffff80000010d2d2	kernel.asm	/^ffff80000010d2d2:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffff80000010d2d7	kernel.asm	/^ffff80000010d2d7:	bf 05 00 00 00       	mov    $0x5,%edi$/;"	l
ffff80000010d2dc	kernel.asm	/^ffff80000010d2dc:	48 b8 77 c6 10 00 00 	movabs $0xffff80000010c677,%rax$/;"	l
ffff80000010d2e3	kernel.asm	/^ffff80000010d2e3:	80 ff ff $/;"	l
ffff80000010d2e6	kernel.asm	/^ffff80000010d2e6:	ff d0                	callq  *%rax$/;"	l
ffff80000010d2e8	kernel.asm	/^ffff80000010d2e8:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffff80000010d2ed	kernel.asm	/^ffff80000010d2ed:	bf 06 00 00 00       	mov    $0x6,%edi$/;"	l
ffff80000010d2f2	kernel.asm	/^ffff80000010d2f2:	48 b8 77 c6 10 00 00 	movabs $0xffff80000010c677,%rax$/;"	l
ffff80000010d2f9	kernel.asm	/^ffff80000010d2f9:	80 ff ff $/;"	l
ffff80000010d2fc	kernel.asm	/^ffff80000010d2fc:	ff d0                	callq  *%rax$/;"	l
ffff80000010d2fe	kernel.asm	/^ffff80000010d2fe:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)$/;"	l
ffff80000010d305	kernel.asm	/^ffff80000010d305:	eb 4d                	jmp    ffff80000010d354 <vgaMode3+0x658>$/;"	l
ffff80000010d307	kernel.asm	/^ffff80000010d307:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)$/;"	l
ffff80000010d30e	kernel.asm	/^ffff80000010d30e:	eb 3a                	jmp    ffff80000010d34a <vgaMode3+0x64e>$/;"	l
ffff80000010d310	kernel.asm	/^ffff80000010d310:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
ffff80000010d313	kernel.asm	/^ffff80000010d313:	8d 14 00             	lea    (%rax,%rax,1),%edx$/;"	l
ffff80000010d316	kernel.asm	/^ffff80000010d316:	8b 45 f8             	mov    -0x8(%rbp),%eax$/;"	l
ffff80000010d319	kernel.asm	/^ffff80000010d319:	01 d0                	add    %edx,%eax$/;"	l
ffff80000010d31b	kernel.asm	/^ffff80000010d31b:	48 63 d0             	movslq %eax,%rdx$/;"	l
ffff80000010d31e	kernel.asm	/^ffff80000010d31e:	48 b8 00 00 0a 00 00 	movabs $0xffff8000000a0000,%rax$/;"	l
ffff80000010d325	kernel.asm	/^ffff80000010d325:	80 ff ff $/;"	l
ffff80000010d328	kernel.asm	/^ffff80000010d328:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx$/;"	l
ffff80000010d32c	kernel.asm	/^ffff80000010d32c:	8b 55 fc             	mov    -0x4(%rbp),%edx$/;"	l
ffff80000010d32f	kernel.asm	/^ffff80000010d32f:	8b 45 f8             	mov    -0x8(%rbp),%eax$/;"	l
ffff80000010d332	kernel.asm	/^ffff80000010d332:	01 d0                	add    %edx,%eax$/;"	l
ffff80000010d334	kernel.asm	/^ffff80000010d334:	48 ba 80 f2 10 00 00 	movabs $0xffff80000010f280,%rdx$/;"	l
ffff80000010d33b	kernel.asm	/^ffff80000010d33b:	80 ff ff $/;"	l
ffff80000010d33e	kernel.asm	/^ffff80000010d33e:	48 98                	cltq   $/;"	l
ffff80000010d340	kernel.asm	/^ffff80000010d340:	0f b6 04 02          	movzbl (%rdx,%rax,1),%eax$/;"	l
ffff80000010d344	kernel.asm	/^ffff80000010d344:	88 01                	mov    %al,(%rcx)$/;"	l
ffff80000010d346	kernel.asm	/^ffff80000010d346:	83 45 f8 01          	addl   $0x1,-0x8(%rbp)$/;"	l
ffff80000010d34a	kernel.asm	/^ffff80000010d34a:	83 7d f8 0f          	cmpl   $0xf,-0x8(%rbp)$/;"	l
ffff80000010d34e	kernel.asm	/^ffff80000010d34e:	7e c0                	jle    ffff80000010d310 <vgaMode3+0x614>$/;"	l
ffff80000010d350	kernel.asm	/^ffff80000010d350:	83 45 fc 10          	addl   $0x10,-0x4(%rbp)$/;"	l
ffff80000010d354	kernel.asm	/^ffff80000010d354:	81 7d fc ff 0f 00 00 	cmpl   $0xfff,-0x4(%rbp)$/;"	l
ffff80000010d35b	kernel.asm	/^ffff80000010d35b:	7e aa                	jle    ffff80000010d307 <vgaMode3+0x60b>$/;"	l
ffff80000010d35d	kernel.asm	/^ffff80000010d35d:	be 01 00 00 00       	mov    $0x1,%esi$/;"	l
ffff80000010d362	kernel.asm	/^ffff80000010d362:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
ffff80000010d367	kernel.asm	/^ffff80000010d367:	48 b8 34 c6 10 00 00 	movabs $0xffff80000010c634,%rax$/;"	l
ffff80000010d36e	kernel.asm	/^ffff80000010d36e:	80 ff ff $/;"	l
ffff80000010d371	kernel.asm	/^ffff80000010d371:	ff d0                	callq  *%rax$/;"	l
ffff80000010d373	kernel.asm	/^ffff80000010d373:	be 03 00 00 00       	mov    $0x3,%esi$/;"	l
ffff80000010d378	kernel.asm	/^ffff80000010d378:	bf 02 00 00 00       	mov    $0x2,%edi$/;"	l
ffff80000010d37d	kernel.asm	/^ffff80000010d37d:	48 b8 34 c6 10 00 00 	movabs $0xffff80000010c634,%rax$/;"	l
ffff80000010d384	kernel.asm	/^ffff80000010d384:	80 ff ff $/;"	l
ffff80000010d387	kernel.asm	/^ffff80000010d387:	ff d0                	callq  *%rax$/;"	l
ffff80000010d389	kernel.asm	/^ffff80000010d389:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffff80000010d38e	kernel.asm	/^ffff80000010d38e:	bf 03 00 00 00       	mov    $0x3,%edi$/;"	l
ffff80000010d393	kernel.asm	/^ffff80000010d393:	48 b8 34 c6 10 00 00 	movabs $0xffff80000010c634,%rax$/;"	l
ffff80000010d39a	kernel.asm	/^ffff80000010d39a:	80 ff ff $/;"	l
ffff80000010d39d	kernel.asm	/^ffff80000010d39d:	ff d0                	callq  *%rax$/;"	l
ffff80000010d39f	kernel.asm	/^ffff80000010d39f:	be 02 00 00 00       	mov    $0x2,%esi$/;"	l
ffff80000010d3a4	kernel.asm	/^ffff80000010d3a4:	bf 04 00 00 00       	mov    $0x4,%edi$/;"	l
ffff80000010d3a9	kernel.asm	/^ffff80000010d3a9:	48 b8 34 c6 10 00 00 	movabs $0xffff80000010c634,%rax$/;"	l
ffff80000010d3b0	kernel.asm	/^ffff80000010d3b0:	80 ff ff $/;"	l
ffff80000010d3b3	kernel.asm	/^ffff80000010d3b3:	ff d0                	callq  *%rax$/;"	l
ffff80000010d3b5	kernel.asm	/^ffff80000010d3b5:	be 03 00 00 00       	mov    $0x3,%esi$/;"	l
ffff80000010d3ba	kernel.asm	/^ffff80000010d3ba:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
ffff80000010d3bf	kernel.asm	/^ffff80000010d3bf:	48 b8 34 c6 10 00 00 	movabs $0xffff80000010c634,%rax$/;"	l
ffff80000010d3c6	kernel.asm	/^ffff80000010d3c6:	80 ff ff $/;"	l
ffff80000010d3c9	kernel.asm	/^ffff80000010d3c9:	ff d0                	callq  *%rax$/;"	l
ffff80000010d3cb	kernel.asm	/^ffff80000010d3cb:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffff80000010d3d0	kernel.asm	/^ffff80000010d3d0:	bf 02 00 00 00       	mov    $0x2,%edi$/;"	l
ffff80000010d3d5	kernel.asm	/^ffff80000010d3d5:	48 b8 77 c6 10 00 00 	movabs $0xffff80000010c677,%rax$/;"	l
ffff80000010d3dc	kernel.asm	/^ffff80000010d3dc:	80 ff ff $/;"	l
ffff80000010d3df	kernel.asm	/^ffff80000010d3df:	ff d0                	callq  *%rax$/;"	l
ffff80000010d3e1	kernel.asm	/^ffff80000010d3e1:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffff80000010d3e6	kernel.asm	/^ffff80000010d3e6:	bf 03 00 00 00       	mov    $0x3,%edi$/;"	l
ffff80000010d3eb	kernel.asm	/^ffff80000010d3eb:	48 b8 77 c6 10 00 00 	movabs $0xffff80000010c677,%rax$/;"	l
ffff80000010d3f2	kernel.asm	/^ffff80000010d3f2:	80 ff ff $/;"	l
ffff80000010d3f5	kernel.asm	/^ffff80000010d3f5:	ff d0                	callq  *%rax$/;"	l
ffff80000010d3f7	kernel.asm	/^ffff80000010d3f7:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
ffff80000010d3fc	kernel.asm	/^ffff80000010d3fc:	bf 04 00 00 00       	mov    $0x4,%edi$/;"	l
ffff80000010d401	kernel.asm	/^ffff80000010d401:	48 b8 77 c6 10 00 00 	movabs $0xffff80000010c677,%rax$/;"	l
ffff80000010d408	kernel.asm	/^ffff80000010d408:	80 ff ff $/;"	l
ffff80000010d40b	kernel.asm	/^ffff80000010d40b:	ff d0                	callq  *%rax$/;"	l
ffff80000010d40d	kernel.asm	/^ffff80000010d40d:	be 10 00 00 00       	mov    $0x10,%esi$/;"	l
ffff80000010d412	kernel.asm	/^ffff80000010d412:	bf 05 00 00 00       	mov    $0x5,%edi$/;"	l
ffff80000010d417	kernel.asm	/^ffff80000010d417:	48 b8 77 c6 10 00 00 	movabs $0xffff80000010c677,%rax$/;"	l
ffff80000010d41e	kernel.asm	/^ffff80000010d41e:	80 ff ff $/;"	l
ffff80000010d421	kernel.asm	/^ffff80000010d421:	ff d0                	callq  *%rax$/;"	l
ffff80000010d423	kernel.asm	/^ffff80000010d423:	be 0e 00 00 00       	mov    $0xe,%esi$/;"	l
ffff80000010d428	kernel.asm	/^ffff80000010d428:	bf 06 00 00 00       	mov    $0x6,%edi$/;"	l
ffff80000010d42d	kernel.asm	/^ffff80000010d42d:	48 b8 77 c6 10 00 00 	movabs $0xffff80000010c677,%rax$/;"	l
ffff80000010d434	kernel.asm	/^ffff80000010d434:	80 ff ff $/;"	l
ffff80000010d437	kernel.asm	/^ffff80000010d437:	ff d0                	callq  *%rax$/;"	l
ffff80000010d439	kernel.asm	/^ffff80000010d439:	bf da 03 00 00       	mov    $0x3da,%edi$/;"	l
ffff80000010d43e	kernel.asm	/^ffff80000010d43e:	48 b8 7c c5 10 00 00 	movabs $0xffff80000010c57c,%rax$/;"	l
ffff80000010d445	kernel.asm	/^ffff80000010d445:	80 ff ff $/;"	l
ffff80000010d448	kernel.asm	/^ffff80000010d448:	ff d0                	callq  *%rax$/;"	l
ffff80000010d44a	kernel.asm	/^ffff80000010d44a:	be 20 00 00 00       	mov    $0x20,%esi$/;"	l
ffff80000010d44f	kernel.asm	/^ffff80000010d44f:	bf c0 03 00 00       	mov    $0x3c0,%edi$/;"	l
ffff80000010d454	kernel.asm	/^ffff80000010d454:	48 b8 9a c5 10 00 00 	movabs $0xffff80000010c59a,%rax$/;"	l
ffff80000010d45b	kernel.asm	/^ffff80000010d45b:	80 ff ff $/;"	l
ffff80000010d45e	kernel.asm	/^ffff80000010d45e:	ff d0                	callq  *%rax$/;"	l
ffff80000010d460	kernel.asm	/^ffff80000010d460:	90                   	nop$/;"	l
ffff80000010d461	kernel.asm	/^ffff80000010d461:	c9                   	leaveq $/;"	l
ffff80000010d462	kernel.asm	/^ffff80000010d462:	c3                   	retq   $/;"	l
file	file.c	/^  struct file file[NFILE];$/;"	m	struct:__anon5	typeref:struct:__anon5::file	file:
file	file.h	/^struct file {$/;"	s
file	sh.c	/^  char *file;$/;"	m	struct:redircmd	file:
filealloc	file.c	/^filealloc(void)$/;"	f
fileclose	file.c	/^fileclose(struct file *f)$/;"	f
filedup	file.c	/^filedup(struct file *f)$/;"	f
fileinit	file.c	/^fileinit(void)$/;"	f
fileioctl	file.c	/^fileioctl(struct file *f, int param, int value) {$/;"	f
fileread	file.c	/^fileread(struct file *f, char *addr, int n)$/;"	f
filestat	file.c	/^filestat(struct file *f, struct stat *st)$/;"	f
filesz	elf.h	/^  uint64 filesz;$/;"	m	struct:proghdr
filewrite	file.c	/^filewrite(struct file *f, char *addr, int n)$/;"	f
fill_rtcdate	lapic.c	/^static void fill_rtcdate(struct rtcdate *r)$/;"	f	file:
first	kernel.asm	/^    first = 0;$/;"	d
flags	bootmain.c	/^  uint64 flags;$/;"	m	struct:mbheader	file:
flags	buf.h	/^  int flags;$/;"	m	struct:buf
flags	elf.h	/^  uint flags;$/;"	m	struct:elfhdr
flags	elf.h	/^  uint32 flags;$/;"	m	struct:proghdr
flags	file.h	/^  int flags;          \/\/ I_VALID$/;"	m	struct:inode
flags	kernel.asm	/^    flags = PTE_FLAGS(*pte);$/;"	d
flags	mp.h	/^  uchar flags;                  \/\/ CPU flags$/;"	m	struct:mpproc
flags	mp.h	/^  uchar flags;                  \/\/ I\/O APIC flags$/;"	m	struct:mpioapic
fmtname	ls.c	/^fmtname(char *path)$/;"	f
fname	usertests.asm	/^    fname = names[i];$/;"	d
fname	usertests.asm	/^    fname = names[pi];$/;"	d
fork	proc.c	/^fork(void)$/;"	f
fork1	sh.c	/^fork1(void)$/;"	f
forkret	proc.c	/^forkret(void)$/;"	f
forktest	forktest.c	/^forktest(void)$/;"	f
forktest	usertests.c	/^forktest(void)$/;"	f
found	kernel.asm	/^found:$/;"	l
fourfiles	usertests.c	/^fourfiles(void)$/;"	f
fourteen	usertests.c	/^fourteen(void)$/;"	f
free	umalloc.c	/^free(void *ap)$/;"	f
freeblock	mkfs.c	/^uint freeblock;$/;"	v
freeinode	mkfs.c	/^uint freeinode = 1;$/;"	v
freelist	kalloc.c	/^  struct run *freelist;$/;"	m	struct:__anon6	typeref:struct:__anon6::run	file:
freep	bad_mmap.asm	/^      freep = prevp;$/;"	d
freep	bad_mmap.asm	/^  freep = p;$/;"	d
freep	cat.asm	/^      freep = prevp;$/;"	d
freep	cat.asm	/^  freep = p;$/;"	d
freep	eager_mmap.asm	/^      freep = prevp;$/;"	d
freep	eager_mmap.asm	/^  freep = p;$/;"	d
freep	echo.asm	/^      freep = prevp;$/;"	d
freep	echo.asm	/^  freep = p;$/;"	d
freep	grep.asm	/^      freep = prevp;$/;"	d
freep	grep.asm	/^  freep = p;$/;"	d
freep	imshow.asm	/^      freep = prevp;$/;"	d
freep	imshow.asm	/^  freep = p;$/;"	d
freep	init.asm	/^      freep = prevp;$/;"	d
freep	init.asm	/^  freep = p;$/;"	d
freep	kill.asm	/^      freep = prevp;$/;"	d
freep	kill.asm	/^  freep = p;$/;"	d
freep	lazy_mmap.asm	/^      freep = prevp;$/;"	d
freep	lazy_mmap.asm	/^  freep = p;$/;"	d
freep	ln.asm	/^      freep = prevp;$/;"	d
freep	ln.asm	/^  freep = p;$/;"	d
freep	ls.asm	/^      freep = prevp;$/;"	d
freep	ls.asm	/^  freep = p;$/;"	d
freep	mkdir.asm	/^      freep = prevp;$/;"	d
freep	mkdir.asm	/^  freep = p;$/;"	d
freep	rm.asm	/^      freep = prevp;$/;"	d
freep	rm.asm	/^  freep = p;$/;"	d
freep	sh.asm	/^      freep = prevp;$/;"	d
freep	sh.asm	/^  freep = p;$/;"	d
freep	stressfs.asm	/^      freep = prevp;$/;"	d
freep	stressfs.asm	/^  freep = p;$/;"	d
freep	umalloc.c	/^static Header *freep;$/;"	v	file:
freep	usertests.asm	/^      freep = prevp;$/;"	d
freep	usertests.asm	/^  freep = p;$/;"	d
freep	wc.asm	/^      freep = prevp;$/;"	d
freep	wc.asm	/^  freep = p;$/;"	d
freep	zombie.asm	/^      freep = prevp;$/;"	d
freep	zombie.asm	/^  freep = p;$/;"	d
freerange	kalloc.c	/^freerange(void *vstart, void *vend)$/;"	f
freevm	vm.c	/^freevm(pde_t *pml4)$/;"	f
fs	mmu.h	/^  ushort fs;$/;"	m	struct:taskstate
fsfd	mkfs.c	/^int fsfd;$/;"	v
fsfull	usertests.c	/^fsfull()$/;"	f
fsz	kernel.asm	/^	  fsz = f->ip->size;$/;"	d
ftable	file.c	/^} ftable;$/;"	v	typeref:struct:__anon5
g	mmu.h	/^  uint g : 1;          \/\/ Granularity: limit scaled by 4K when set$/;"	m	struct:segdesc
g_8x16_font	vga.c	/^static unsigned char g_8x16_font[4096] =$/;"	v	file:
gatedesc	mmu.h	/^struct gatedesc {$/;"	s
gdt	bootasm.S	/^gdt:$/;"	l
gdt	entryother.S	/^gdt:$/;"	l
gdt	kernel.asm	/^  gdt = (struct segdesc*) local;$/;"	d
gdt	proc.h	/^  struct segdesc gdt[NSEGS];   \/\/ x86 global descriptor table$/;"	m	struct:cpu	typeref:struct:cpu::segdesc
gdt64_begin	entry.S	/^gdt64_begin:$/;"	l
gdt64_end	entry.S	/^gdt64_end:$/;"	l
gdt64_end	kernel.asm	/^gdt64_end:$/;"	l
gdtdesc	bootasm.S	/^gdtdesc:$/;"	l
gdtdesc	entryother.S	/^gdtdesc:$/;"	l
gdtr64	entry.S	/^gdtr64:$/;"	l
getContent	display.c	/^void getContent()$/;"	f
getCurPosition	display.c	/^void getCurPosition()$/;"	f
getcallerpcs	spinlock.c	/^getcallerpcs(void *v, addr_t pcs[])$/;"	f
getcmd	sh.c	/^getcmd(char *buf, int nbuf)$/;"	f
gets	ulib.c	/^gets(char *buf, int max)$/;"	f
getstackpcs	spinlock.c	/^getstackpcs(addr_t *ebp, addr_t pcs[])$/;"	f
gettoken	sh.c	/^gettoken(char **ps, char *es, char **q, char **eq)$/;"	f
grep	grep.c	/^grep(char *pattern, int fd)$/;"	f
growproc	proc.c	/^growproc(int n)$/;"	f
gs	mmu.h	/^  ushort gs;$/;"	m	struct:taskstate
havedisk1	ide.c	/^static int havedisk1;$/;"	v	file:
havedisk1	kernel.asm	/^      havedisk1 = 1;$/;"	d
havekids	kernel.asm	/^      havekids = 1;$/;"	d
havekids	kernel.asm	/^    havekids = 0;$/;"	d
head	bio.c	/^  struct buf head;$/;"	m	struct:__anon4	typeref:struct:__anon4::buf	file:
header	umalloc.c	/^union header {$/;"	u	file:
header_addr	bootmain.c	/^  uint64 header_addr;$/;"	m	struct:mbheader	file:
hi	usertests.asm	/^  hi = 1100*1024;$/;"	d
hlt	x86.h	/^hlt(void)$/;"	f
holding	spinlock.c	/^holding(struct spinlock *lock)$/;"	f
holdingsleep	sleeplock.c	/^holdingsleep(struct sleeplock *lk)$/;"	f
hour	date.h	/^  uint hour;$/;"	m	struct:rtcdate
hp	bad_mmap.asm	/^  hp = (Header*)p;$/;"	d
hp	cat.asm	/^  hp = (Header*)p;$/;"	d
hp	eager_mmap.asm	/^  hp = (Header*)p;$/;"	d
hp	echo.asm	/^  hp = (Header*)p;$/;"	d
hp	grep.asm	/^  hp = (Header*)p;$/;"	d
hp	imshow.asm	/^  hp = (Header*)p;$/;"	d
hp	init.asm	/^  hp = (Header*)p;$/;"	d
hp	kill.asm	/^  hp = (Header*)p;$/;"	d
hp	lazy_mmap.asm	/^  hp = (Header*)p;$/;"	d
hp	ln.asm	/^  hp = (Header*)p;$/;"	d
hp	ls.asm	/^  hp = (Header*)p;$/;"	d
hp	mkdir.asm	/^  hp = (Header*)p;$/;"	d
hp	rm.asm	/^  hp = (Header*)p;$/;"	d
hp	sh.asm	/^  hp = (Header*)p;$/;"	d
hp	stressfs.asm	/^  hp = (Header*)p;$/;"	d
hp	usertests.asm	/^  hp = (Header*)p;$/;"	d
hp	wc.asm	/^  hp = (Header*)p;$/;"	d
hp	zombie.asm	/^  hp = (Header*)p;$/;"	d
i	bad_mmap.asm	/^  i = 0;$/;"	d
i	cat.asm	/^  i = 0;$/;"	d
i	eager_mmap.asm	/^  i = 0;$/;"	d
i	echo.asm	/^  i = 0;$/;"	d
i	grep.asm	/^  i = 0;$/;"	d
i	imshow.asm	/^  i = 0;$/;"	d
i	init.asm	/^  i = 0;$/;"	d
i	kernel.asm	/^  i = 0;$/;"	d
i	kill.asm	/^  i = 0;$/;"	d
i	lazy_mmap.asm	/^  i = 0;$/;"	d
i	ln.asm	/^  i = 0;$/;"	d
i	ls.asm	/^  i = 0;$/;"	d
i	mkdir.asm	/^  i = 0;$/;"	d
i	rm.asm	/^  i = 0;$/;"	d
i	sh.asm	/^  i = 0;$/;"	d
i	stressfs.asm	/^  i = 0;$/;"	d
i	usertests.asm	/^      i = de.name[1] - '0';$/;"	d
i	usertests.asm	/^    i = read(fd, buf, 512);$/;"	d
i	usertests.asm	/^  i = 0;$/;"	d
i	usertests.asm	/^  i = read(fd, buf, 2000);$/;"	d
i	wc.asm	/^  i = 0;$/;"	d
i	zombie.asm	/^  i = 0;$/;"	d
ialloc	fs.c	/^ialloc(uint dev, short type)$/;"	f
ialloc	mkfs.c	/^ialloc(ushort type)$/;"	f
iappend	mkfs.c	/^iappend(uint inum, void *xp, int n)$/;"	f
icache	fs.c	/^} icache;$/;"	v	typeref:struct:__anon2
id	kernel.asm	/^  id = ioapicread(REG_ID) >> 24;$/;"	d
id	proc.h	/^  uchar id;$/;"	m	struct:cpu
ideinit	ide.c	/^ideinit(void)$/;"	f
ideinit	memide.c	/^ideinit(void)$/;"	f
ideintr	ide.c	/^ideintr(void)$/;"	f
ideintr	memide.c	/^ideintr(void)$/;"	f
idelock	ide.c	/^static struct spinlock idelock;$/;"	v	typeref:struct:spinlock	file:
idequeue	ide.c	/^static struct buf *idequeue;$/;"	v	typeref:struct:buf	file:
idequeue	kernel.asm	/^  idequeue = b->qnext;$/;"	d
iderw	ide.c	/^iderw(struct buf *b)$/;"	f
iderw	memide.c	/^iderw(struct buf *b)$/;"	f
idestart	ide.c	/^idestart(struct buf *b)$/;"	f	file:
idewait	ide.c	/^idewait(int checkerr)$/;"	f	file:
idt	kernel.asm	/^  idt = (uint*) kalloc();$/;"	d
idt	trap.c	/^uint *idt;$/;"	v
idtinit	trap.c	/^void idtinit(void) {$/;"	f
idup	fs.c	/^idup(struct inode *ip)$/;"	f
iget	fs.c	/^iget(uint dev, uint inum)$/;"	f	file:
ignore_sysret	entry.S	/^ignore_sysret:$/;"	l
ignore_sysret	kernel.asm	/^ignore_sysret:$/;"	l
iinit	fs.c	/^iinit(int dev)$/;"	f
ilock	fs.c	/^ilock(struct inode *ip)$/;"	f
imcrp	mp.h	/^  uchar imcrp;$/;"	m	struct:mp
inb	x86.h	/^inb(ushort port)$/;"	f
init	initcode.S	/^init:$/;"	l
initlock	spinlock.c	/^initlock(struct spinlock *lk, char *name)$/;"	f
initlog	log.c	/^initlog(int dev)$/;"	f
initproc	kernel.asm	/^  initproc = p;$/;"	d
initproc	proc.c	/^static struct proc *initproc;$/;"	v	typeref:struct:proc	file:
initsleeplock	sleeplock.c	/^initsleeplock(struct sleeplock *lk, char *name)$/;"	f
inituvm	vm.c	/^inituvm(pde_t *pgdir, char *init, uint sz)$/;"	f
ino	stat.h	/^  uint ino;    \/\/ Inode number$/;"	m	struct:stat
inode	file.h	/^struct inode {$/;"	s
inode	fs.c	/^  struct inode inode[NINODE];$/;"	m	struct:__anon2	typeref:struct:__anon2::inode	file:
inodestart	fs.h	/^  uint inodestart;   \/\/ Block number of first inode block$/;"	m	struct:superblock
input	console.c	/^} input;$/;"	v	typeref:struct:__anon8
insl	x86.h	/^insl(int port, void *addr, int cnt)$/;"	f
install_trans	log.c	/^install_trans(void)$/;"	f	file:
int	bad_mmap.asm	/^int main(int argc, char** argv) {$/;"	l
int	bad_mmap.asm	/^int$/;"	l
int	cat.asm	/^int$/;"	l
int	eager_mmap.asm	/^int main(int argc, char** argv) {$/;"	l
int	eager_mmap.asm	/^int$/;"	l
int	echo.asm	/^int$/;"	l
int	forktest.asm	/^int$/;"	l
int	grep.asm	/^int match(char*, char*);$/;"	l
int	grep.asm	/^int matchhere(char *re, char *text)$/;"	l
int	grep.asm	/^int matchhere(char*, char*);$/;"	l
int	grep.asm	/^int matchstar(int c, char *re, char *text)$/;"	l
int	grep.asm	/^int matchstar(int, char*, char*);$/;"	l
int	grep.asm	/^int$/;"	l
int	imshow.asm	/^int main(int argc, char** argv) {$/;"	l
int	imshow.asm	/^int$/;"	l
int	init.asm	/^int$/;"	l
int	kernel.asm	/^int argfd(int n, int *pfd, struct file **pf)$/;"	l
int	kernel.asm	/^int curPosition = 0;$/;"	l
int	kernel.asm	/^int displayioctl(struct file * f,int param,int value)$/;"	l
int	kernel.asm	/^int kfreepagecount() {$/;"	l
int	kernel.asm	/^int ncpu;$/;"	l
int	kernel.asm	/^int$/;"	l
int	kill.asm	/^int$/;"	l
int	lazy_mmap.asm	/^int main(int argc, char** argv) {$/;"	l
int	lazy_mmap.asm	/^int$/;"	l
int	ln.asm	/^int$/;"	l
int	ls.asm	/^int$/;"	l
int	mkdir.asm	/^int$/;"	l
int	rm.asm	/^int$/;"	l
int	sh.asm	/^int$/;"	l
int	stressfs.asm	/^int$/;"	l
int	usertests.asm	/^int stdout = 1;$/;"	l
int	usertests.asm	/^int$/;"	l
int	wc.asm	/^int$/;"	l
int	zombie.asm	/^int$/;"	l
intena	kernel.asm	/^  intena = cpu->intena;$/;"	d
intena	proc.h	/^  int intena;                  \/\/ Were interrupts enabled before pushcli?$/;"	m	struct:cpu
inum	file.h	/^  uint inum;          \/\/ Inode number$/;"	m	struct:inode
inum	fs.h	/^  ushort inum;$/;"	m	struct:dirent
inum	kernel.asm	/^      inum = de.inum;$/;"	d
inword	wc.asm	/^        inword = 0;$/;"	d
inword	wc.asm	/^        inword = 1;$/;"	d
inword	wc.asm	/^  inword = 0;$/;"	d
ioapic	ioapic.c	/^struct ioapic {$/;"	s	file:
ioapic	ioapic.c	/^volatile struct ioapic *ioapic;$/;"	v	typeref:struct:ioapic
ioapic	kernel.asm	/^      ioapic = (struct mpioapic*)p;$/;"	d
ioapic	kernel.asm	/^  ioapic = P2V((volatile struct ioapic*)IOAPIC);$/;"	d
ioapicenable	ioapic.c	/^ioapicenable(int irq, int cpunum)$/;"	f
ioapicid	kernel.asm	/^      ioapicid = ioapic->apicno;$/;"	d
ioapicid	mp.c	/^uchar ioapicid;$/;"	v
ioapicinit	ioapic.c	/^ioapicinit(void)$/;"	f
ioapicread	ioapic.c	/^ioapicread(int reg)$/;"	f	file:
ioapicwrite	ioapic.c	/^ioapicwrite(int reg, uint data)$/;"	f	file:
iomb	mmu.h	/^  ushort iomb;       \/\/ I\/O map base address$/;"	m	struct:taskstate
ip	file.h	/^  struct inode *ip;$/;"	m	struct:file	typeref:struct:file::inode
ip	kernel.asm	/^    ip = create(path, T_FILE, 0, 0);$/;"	d
ip	kernel.asm	/^    ip = idup(proc->cwd);$/;"	d
ip	kernel.asm	/^    ip = iget(ROOTDEV, ROOTINO);$/;"	d
ip	kernel.asm	/^    ip = next;$/;"	d
ip	kernel.asm	/^  ip = 0;$/;"	d
ip	kernel.asm	/^  ip = empty;$/;"	d
iput	fs.c	/^iput(struct inode *ip)$/;"	f
iputtest	usertests.c	/^iputtest(void)$/;"	f
iref	usertests.c	/^iref(void)$/;"	f
isdirempty	sysfile.c	/^isdirempty(struct inode *dp)$/;"	f	file:
itrunc	fs.c	/^itrunc(struct inode *ip)$/;"	f	file:
iunlock	fs.c	/^iunlock(struct inode *ip)$/;"	f
iunlockput	fs.c	/^iunlockput(struct inode *ip)$/;"	f
iupdate	fs.c	/^iupdate(struct inode *ip)$/;"	f
kalloc	kalloc.c	/^kalloc(void)$/;"	f
kbdgetc	kbd.c	/^kbdgetc(void)$/;"	f
kbdintr	kbd.c	/^kbdintr(void)$/;"	f
kernel	kernel.asm	/^kernel:     file format elf64-x86-64$/;"	l
kfree	kalloc.c	/^kfree(char *v)$/;"	f
kfreepagecount	kalloc.c	/^int kfreepagecount() {$/;"	f
kill	proc.c	/^kill(int pid)$/;"	f
killed	proc.h	/^  int killed;                  \/\/ If non-zero, have been killed$/;"	m	struct:proc
kinit1	kalloc.c	/^kinit1(void *vstart, void *vend)$/;"	f
kinit2	kalloc.c	/^kinit2(void *vstart, void *vend)$/;"	f
kmem	kalloc.c	/^} kmem;$/;"	v	typeref:struct:__anon6
kpdpt	kernel.asm	/^  kpdpt = (pde_t*) kalloc();$/;"	d
kpdpt	vm.c	/^static pde_t *kpdpt;$/;"	v	file:
kpgdir	vm.c	/^pde_t *kpgdir;  \/\/ for use in scheduler()$/;"	v
kpml4	kernel.asm	/^  kpml4 = (pde_t*) kalloc();$/;"	d
kpml4	vm.c	/^static pde_t *kpml4;$/;"	v	file:
kstack	proc.h	/^  char *kstack;                \/\/ Bottom of kernel stack for this process$/;"	m	struct:proc
kvmalloc	vm.c	/^kvmalloc(void)$/;"	f
l	wc.asm	/^  l = w = c = 0;$/;"	d
lapic	kernel.asm	/^  lapic = P2V((addr_t)conf->lapicaddr_p);$/;"	d
lapic	lapic.c	/^volatile uint *lapic;  \/\/ Initialized in mp.c$/;"	v
lapicaddr_p	mp.h	/^  uint32 lapicaddr_p;              \/\/ address of local APIC$/;"	m	struct:mpconf
lapiceoi	lapic.c	/^lapiceoi(void)$/;"	f
lapicinit	lapic.c	/^lapicinit(void)$/;"	f
lapicstartap	lapic.c	/^lapicstartap(uchar apicid, uint addr)$/;"	f
lapicw	lapic.c	/^lapicw(int index, int value)$/;"	f	file:
last	kernel.asm	/^      last = s+1;$/;"	d
last	kernel.asm	/^  last = (char*)PGROUNDDOWN(((addr_t)va) + size - 1);$/;"	d
lastaddr	usertests.asm	/^  lastaddr = (char*) (BIG-1);$/;"	d
lazy_mmap_loaded	proc.h	/^  addr_t lazy_mmap_loaded;$/;"	m	struct:proc
lcmd	sh.asm	/^    lcmd = (struct listcmd*)cmd;$/;"	d
lcr3	x86.h	/^lcr3(addr_t val)$/;"	f
ldt	mmu.h	/^  ushort ldt;$/;"	m	struct:taskstate
left	sh.c	/^  struct cmd *left;$/;"	m	struct:listcmd	typeref:struct:listcmd::cmd	file:
left	sh.c	/^  struct cmd *left;$/;"	m	struct:pipecmd	typeref:struct:pipecmd::cmd	file:
len	kernel.asm	/^  len = path - s;$/;"	d
length	mp.h	/^  uchar length;                 \/\/ 1$/;"	m	struct:mp
length	mp.h	/^  ushort length;                \/\/ total table length$/;"	m	struct:mpconf
lgdt	x86.h	/^lgdt(struct segdesc *p, int size)$/;"	f
lh	log.c	/^  struct logheader lh;$/;"	m	struct:log	typeref:struct:log::logheader	file:
lidt	x86.h	/^lidt(struct gatedesc *p, int size)$/;"	f
lim_15_0	mmu.h	/^  uint lim_15_0 : 16;  \/\/ Low bits of segment limit$/;"	m	struct:segdesc
lim_19_16	mmu.h	/^  uint lim_19_16 : 4;  \/\/ High bits of segment limit$/;"	m	struct:segdesc
link	mmu.h	/^  uint link;         \/\/ Old ts selector$/;"	m	struct:taskstate
linktest	usertests.c	/^linktest(void)$/;"	f
linkunlink	usertests.c	/^linkunlink()$/;"	f
listcmd	sh.c	/^listcmd(struct cmd *left, struct cmd *right)$/;"	f
listcmd	sh.c	/^struct listcmd {$/;"	s	file:
lk	sleeplock.h	/^  struct spinlock lk; \/\/ spinlock protecting this sleep lock$/;"	m	struct:sleeplock	typeref:struct:sleeplock::spinlock
load_addr	bootmain.c	/^  uint64 load_addr;$/;"	m	struct:mbheader	file:
load_end_addr	bootmain.c	/^  uint64 load_end_addr;$/;"	m	struct:mbheader	file:
loadgs	x86.h	/^loadgs(ushort v)$/;"	f
loaduvm	vm.c	/^loaduvm(pde_t *pgdir, char *addr, struct inode *ip, uint offset, uint sz)$/;"	f
local	kernel.asm	/^  local = kalloc();$/;"	d
local	proc.h	/^  void *local;$/;"	m	struct:cpu
lock	bio.c	/^  struct spinlock lock;$/;"	m	struct:__anon4	typeref:struct:__anon4::spinlock	file:
lock	buf.h	/^  struct sleeplock lock;$/;"	m	struct:buf	typeref:struct:buf::sleeplock
lock	console.c	/^  struct spinlock lock;$/;"	m	struct:__anon7	typeref:struct:__anon7::spinlock	file:
lock	console.c	/^  struct spinlock lock;$/;"	m	struct:__anon8	typeref:struct:__anon8::spinlock	file:
lock	display.c	/^  struct spinlock lock;$/;"	m	struct:__anon10	typeref:struct:__anon10::spinlock	file:
lock	file.c	/^  struct spinlock lock;$/;"	m	struct:__anon5	typeref:struct:__anon5::spinlock	file:
lock	file.h	/^  struct sleeplock lock;$/;"	m	struct:inode	typeref:struct:inode::sleeplock
lock	fs.c	/^  struct spinlock lock;$/;"	m	struct:__anon2	typeref:struct:__anon2::spinlock	file:
lock	kalloc.c	/^  struct spinlock lock;$/;"	m	struct:__anon6	typeref:struct:__anon6::spinlock	file:
lock	log.c	/^  struct spinlock lock;$/;"	m	struct:log	typeref:struct:log::spinlock	file:
lock	pipe.c	/^  struct spinlock lock;$/;"	m	struct:pipe	typeref:struct:pipe::spinlock	file:
lock	proc.c	/^  struct spinlock lock;$/;"	m	struct:__anon1	typeref:struct:__anon1::spinlock	file:
locked	sleeplock.h	/^  uint locked;       \/\/ Is the lock held?$/;"	m	struct:sleeplock
locked	spinlock.h	/^  uint locked;       \/\/ Is the lock held?$/;"	m	struct:spinlock
locking	console.c	/^  int locking;$/;"	m	struct:__anon7	file:
locking	display.c	/^  int locking;$/;"	m	struct:__anon10	file:
locking	kernel.asm	/^  locking = cons.locking;$/;"	d
log	log.c	/^struct log log;$/;"	v	typeref:struct:log
log	log.c	/^struct log {$/;"	s	file:
log_write	log.c	/^log_write(struct buf *b)$/;"	f
logheader	log.c	/^struct logheader {$/;"	s	file:
logstart	fs.h	/^  uint logstart;     \/\/ Block number of first log block$/;"	m	struct:superblock
ls	ls.c	/^ls(char *path)$/;"	f
ltr	x86.h	/^ltr(ushort sel)$/;"	f
m	grep.asm	/^      m = 0;$/;"	d
m	grep.asm	/^  m = 0;$/;"	d
m	kernel.asm	/^      m = 1 << (bi % 8);$/;"	d
m	kernel.asm	/^    m = min(n - tot, BSIZE - off%BSIZE);$/;"	d
m	kernel.asm	/^  m = 1 << (bi % 8);$/;"	d
m1	usertests.asm	/^      m1 = m2;$/;"	d
m1	usertests.asm	/^    m1 = 0;$/;"	d
m1	usertests.asm	/^    m1 = malloc(1024*20);$/;"	d
m2	usertests.asm	/^      m2 = *(char**)m1;$/;"	d
machine	elf.h	/^  ushort machine;$/;"	m	struct:elfhdr
magic	bootmain.c	/^  uint64 magic;$/;"	m	struct:mbheader	file:
magic	elf.h	/^  uint magic;  \/\/ must equal ELF_MAGIC$/;"	m	struct:elfhdr
main	bad_mmap.c	/^int main(int argc, char** argv) {$/;"	f
main	cat.c	/^main(int argc, char *argv[])$/;"	f
main	eager_mmap.c	/^int main(int argc, char** argv) {$/;"	f
main	echo.c	/^main(int argc, char *argv[])$/;"	f
main	forktest.c	/^main(void)$/;"	f
main	grep.c	/^main(int argc, char *argv[])$/;"	f
main	imshow.c	/^int main(int argc, char** argv) {$/;"	f
main	init.c	/^main(void)$/;"	f
main	kill.c	/^main(int argc, char **argv)$/;"	f
main	lazy_mmap.c	/^int main(int argc, char** argv) {$/;"	f
main	ln.c	/^main(int argc, char *argv[])$/;"	f
main	ls.c	/^main(int argc, char *argv[])$/;"	f
main	main.c	/^main(void)$/;"	f
main	mkdir.c	/^main(int argc, char *argv[])$/;"	f
main	mkfs.c	/^main(int argc, char *argv[])$/;"	f
main	mmaptest.c	/^int main(int argc, char** argv) {$/;"	f
main	rm.c	/^main(int argc, char *argv[])$/;"	f
main	sh.c	/^main(void)$/;"	f
main	stressfs.c	/^main(int argc, char *argv[])$/;"	f
main	usertests.c	/^main(int argc, char *argv[])$/;"	f
main	wc.c	/^main(int argc, char *argv[])$/;"	f
main	zombie.c	/^main(void)$/;"	f
major	file.h	/^  short major;$/;"	m	struct:inode
major	fs.h	/^  short major;          \/\/ Major device number (T_DEV only)$/;"	m	struct:dinode
malloc	umalloc.c	/^malloc(uint nbytes)$/;"	f
mappages	vm.c	/^mappages(pde_t *pgdir, void *va, addr_t size, addr_t pa, int perm)$/;"	f
match	grep.c	/^match(char *re, char *text)$/;"	f
matchhere	grep.c	/^int matchhere(char *re, char *text)$/;"	f
matchstar	grep.c	/^int matchstar(int c, char *re, char *text)$/;"	f
maxintr	kernel.asm	/^  maxintr = (ioapicread(REG_VER) >> 16) & 0xFF;$/;"	d
mbheader	bootmain.c	/^struct mbheader {$/;"	s	file:
mboot_entry	entry.S	/^mboot_entry:$/;"	l
mboot_entry	kernel.asm	/^mboot_entry:$/;"	l
mboot_flags	entry.S	/^#define mboot_flags 0x00010000$/;"	d
mboot_header	entry.S	/^mboot_header:$/;"	l
mboot_magic	entry.S	/^#define mboot_magic 0x1badb002$/;"	d
mem	kernel.asm	/^		  mem = kalloc();$/;"	d
mem	kernel.asm	/^    mem = kalloc();$/;"	d
mem	kernel.asm	/^  mem = kalloc();$/;"	d
mem	usertests.c	/^mem(void)$/;"	f
memcmp	string.c	/^memcmp(const void *v1, const void *v2, uint n)$/;"	f
memcpy	string.c	/^memcpy(void *dst, const void *src, uint n)$/;"	f
memdisk	memide.c	/^static uchar *memdisk;$/;"	v	file:
memmove	string.c	/^memmove(void *dst, const void *src, uint n)$/;"	f
memmove	ulib.c	/^memmove(void *vdst, void *vsrc, int n)$/;"	f
memset	string.c	/^memset(void *dst, int c, uint n)$/;"	f
memset	ulib.c	/^memset(void *dst, int c, uint n)$/;"	f
memsz	elf.h	/^  uint64 memsz;$/;"	m	struct:proghdr
microdelay	lapic.c	/^microdelay(int us)$/;"	f
min	fs.c	24;"	d	file:
min	mkfs.c	253;"	d	file:
minor	file.h	/^  short minor;$/;"	m	struct:inode
minor	fs.h	/^  short minor;          \/\/ Minor device number (T_DEV only)$/;"	m	struct:dinode
minute	date.h	/^  uint minute;$/;"	m	struct:rtcdate
mkgate	trap.c	/^mkgate(uint *idt, uint n, void *kva, uint pl, uint trap) {$/;"	f	file:
mmapsz	proc.h	/^  addr_t mmapsz;$/;"	m	struct:proc
mode	sh.c	/^  int mode;$/;"	m	struct:redircmd	file:
month	date.h	/^  uint month;$/;"	m	struct:rtcdate
morecore	umalloc.c	/^morecore(uint nu)$/;"	f	file:
mp	mp.h	/^struct mp {             \/\/ floating pointer$/;"	s
mpconf	mp.h	/^struct mpconf {         \/\/ configuration table header$/;"	s
mpconfig	mp.c	/^mpconfig(struct mp **pmp)$/;"	f	file:
mpenter	main.c	/^mpenter(void)$/;"	f
mpinit	mp.c	/^mpinit(void)$/;"	f
mpioapic	mp.h	/^struct mpioapic {       \/\/ I\/O APIC table entry$/;"	s
mpmain	main.c	/^mpmain(void)$/;"	f	file:
mpproc	mp.h	/^struct mpproc {         \/\/ processor table entry$/;"	s
mpsearch	mp.c	/^mpsearch(void)$/;"	f	file:
mpsearch1	mp.c	/^mpsearch1(addr_t a, int len)$/;"	f	file:
n	bad_mmap.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	bad_mmap.asm	/^  n = 0;$/;"	d
n	cat.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	cat.asm	/^  n = 0;$/;"	d
n	eager_mmap.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	eager_mmap.asm	/^  n = 0;$/;"	d
n	echo.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	echo.asm	/^  n = 0;$/;"	d
n	forktest.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	forktest.asm	/^  n = 0;$/;"	d
n	grep.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	grep.asm	/^  n = 0;$/;"	d
n	imshow.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	imshow.asm	/^  n = 0;$/;"	d
n	init.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	init.asm	/^  n = 0;$/;"	d
n	kernel.asm	/^      n = PGSIZE;$/;"	d
n	kernel.asm	/^      n = len;$/;"	d
n	kernel.asm	/^      n = sz - i;$/;"	d
n	kernel.asm	/^    n = PGSIZE - (va - va0);$/;"	d
n	kernel.asm	/^    n = ip->size - off;$/;"	d
n	kill.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	kill.asm	/^  n = 0;$/;"	d
n	lazy_mmap.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	lazy_mmap.asm	/^  n = 0;$/;"	d
n	ln.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	ln.asm	/^  n = 0;$/;"	d
n	log.c	/^  int n;$/;"	m	struct:logheader	file:
n	ls.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	ls.asm	/^  n = 0;$/;"	d
n	mkdir.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	mkdir.asm	/^  n = 0;$/;"	d
n	rm.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	rm.asm	/^  n = 0;$/;"	d
n	sh.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	sh.asm	/^  n = 0;$/;"	d
n	stressfs.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	stressfs.asm	/^  n = 0;$/;"	d
n	usertests.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	usertests.asm	/^  n = 0;$/;"	d
n	wc.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	wc.asm	/^  n = 0;$/;"	d
n	zombie.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	zombie.asm	/^  n = 0;$/;"	d
n1	kernel.asm	/^        n1 = max;$/;"	d
name	bad_mmap.asm	/^  name: \\$/;"	l
name	cat.asm	/^  name: \\$/;"	l
name	eager_mmap.asm	/^  name: \\$/;"	l
name	echo.asm	/^  name: \\$/;"	l
name	forktest.asm	/^  name: \\$/;"	l
name	fs.h	/^  char name[DIRSIZ];$/;"	m	struct:dirent
name	grep.asm	/^  name: \\$/;"	l
name	imshow.asm	/^  name: \\$/;"	l
name	init.asm	/^  name: \\$/;"	l
name	kill.asm	/^  name: \\$/;"	l
name	lazy_mmap.asm	/^  name: \\$/;"	l
name	ln.asm	/^  name: \\$/;"	l
name	ls.asm	/^  name: \\$/;"	l
name	mkdir.asm	/^  name: \\$/;"	l
name	proc.h	/^  char name[16];               \/\/ Process name (debugging)$/;"	m	struct:proc
name	rm.asm	/^  name: \\$/;"	l
name	sh.asm	/^  name: \\$/;"	l
name	sleeplock.h	/^  char *name;        \/\/ Name of lock.$/;"	m	struct:sleeplock
name	spinlock.h	/^  char *name;        \/\/ Name of lock.$/;"	m	struct:spinlock
name	stressfs.asm	/^  name: \\$/;"	l
name	usertests.asm	/^  name: \\$/;"	l
name	usertests.c	/^char name[3];$/;"	v
name	usys.S	/^  name: \\$/;"	l
name	wc.asm	/^  name: \\$/;"	l
name	zombie.asm	/^  name: \\$/;"	l
namecmp	fs.c	/^namecmp(const char *s, const char *t)$/;"	f
namei	fs.c	/^namei(char *path)$/;"	f
nameiparent	fs.c	/^nameiparent(char *path, char *name)$/;"	f
namex	fs.c	/^namex(char *path, int nameiparent, char *name)$/;"	f	file:
nbitmap	mkfs.c	/^int nbitmap = FSSIZE\/(BSIZE*8) + 1;$/;"	v
nblocks	fs.h	/^  uint nblocks;      \/\/ Number of data blocks$/;"	m	struct:superblock
nblocks	mkfs.c	/^int nblocks;  \/\/ Number of data blocks$/;"	v
nc	usertests.asm	/^  nc = np = 0;$/;"	d
ncli	proc.h	/^  int ncli;                    \/\/ Depth of pushcli nesting.$/;"	m	struct:cpu
ncpu	mp.c	/^int ncpu;$/;"	v
neg	bad_mmap.asm	/^    neg = 1;$/;"	d
neg	bad_mmap.asm	/^  neg = 0;$/;"	d
neg	cat.asm	/^    neg = 1;$/;"	d
neg	cat.asm	/^  neg = 0;$/;"	d
neg	eager_mmap.asm	/^    neg = 1;$/;"	d
neg	eager_mmap.asm	/^  neg = 0;$/;"	d
neg	echo.asm	/^    neg = 1;$/;"	d
neg	echo.asm	/^  neg = 0;$/;"	d
neg	grep.asm	/^    neg = 1;$/;"	d
neg	grep.asm	/^  neg = 0;$/;"	d
neg	imshow.asm	/^    neg = 1;$/;"	d
neg	imshow.asm	/^  neg = 0;$/;"	d
neg	init.asm	/^    neg = 1;$/;"	d
neg	init.asm	/^  neg = 0;$/;"	d
neg	kill.asm	/^    neg = 1;$/;"	d
neg	kill.asm	/^  neg = 0;$/;"	d
neg	lazy_mmap.asm	/^    neg = 1;$/;"	d
neg	lazy_mmap.asm	/^  neg = 0;$/;"	d
neg	ln.asm	/^    neg = 1;$/;"	d
neg	ln.asm	/^  neg = 0;$/;"	d
neg	ls.asm	/^    neg = 1;$/;"	d
neg	ls.asm	/^  neg = 0;$/;"	d
neg	mkdir.asm	/^    neg = 1;$/;"	d
neg	mkdir.asm	/^  neg = 0;$/;"	d
neg	rm.asm	/^    neg = 1;$/;"	d
neg	rm.asm	/^  neg = 0;$/;"	d
neg	sh.asm	/^    neg = 1;$/;"	d
neg	sh.asm	/^  neg = 0;$/;"	d
neg	stressfs.asm	/^    neg = 1;$/;"	d
neg	stressfs.asm	/^  neg = 0;$/;"	d
neg	usertests.asm	/^    neg = 1;$/;"	d
neg	usertests.asm	/^  neg = 0;$/;"	d
neg	wc.asm	/^    neg = 1;$/;"	d
neg	wc.asm	/^  neg = 0;$/;"	d
neg	zombie.asm	/^    neg = 1;$/;"	d
neg	zombie.asm	/^  neg = 0;$/;"	d
newsz	kernel.asm	/^	  newsz = PGROUNDUP(oldsz + fsz);$/;"	d
newsz	kernel.asm	/^  newsz = PGROUNDUP(oldsz + PGSIZE);$/;"	d
next	buf.h	/^  struct buf *next;$/;"	m	struct:buf	typeref:struct:buf::buf
next	kalloc.c	/^  struct run *next;$/;"	m	struct:run	typeref:struct:run::run	file:
nextpid	proc.c	/^int nextpid = 1;$/;"	v
ninodeblocks	mkfs.c	/^int ninodeblocks = NINODES \/ IPB + 1;$/;"	v
ninodes	fs.h	/^  uint ninodes;      \/\/ Number of inodes.$/;"	m	struct:superblock
nlink	file.h	/^  short nlink;$/;"	m	struct:inode
nlink	fs.h	/^  short nlink;          \/\/ Number of links to inode in file system$/;"	m	struct:dinode
nlink	stat.h	/^  short nlink; \/\/ Number of links to file$/;"	m	struct:stat
nlog	fs.h	/^  uint nlog;         \/\/ Number of log blocks$/;"	m	struct:superblock
nlog	mkfs.c	/^int nlog = LOGSIZE;$/;"	v
nmeta	mkfs.c	/^int nmeta;    \/\/ Number of meta blocks (boot, sb, nlog, inode, bitmap)$/;"	v
normalmap	kbd.h	/^static uchar normalmap[256] =$/;"	v
nread	pipe.c	/^  uint nread;     \/\/ number of bytes read$/;"	m	struct:pipe	file:
nu	bad_mmap.asm	/^    nu = 4096;$/;"	d
nu	cat.asm	/^    nu = 4096;$/;"	d
nu	eager_mmap.asm	/^    nu = 4096;$/;"	d
nu	echo.asm	/^    nu = 4096;$/;"	d
nu	grep.asm	/^    nu = 4096;$/;"	d
nu	imshow.asm	/^    nu = 4096;$/;"	d
nu	init.asm	/^    nu = 4096;$/;"	d
nu	kill.asm	/^    nu = 4096;$/;"	d
nu	lazy_mmap.asm	/^    nu = 4096;$/;"	d
nu	ln.asm	/^    nu = 4096;$/;"	d
nu	ls.asm	/^    nu = 4096;$/;"	d
nu	mkdir.asm	/^    nu = 4096;$/;"	d
nu	rm.asm	/^    nu = 4096;$/;"	d
nu	sh.asm	/^    nu = 4096;$/;"	d
nu	stressfs.asm	/^    nu = 4096;$/;"	d
nu	usertests.asm	/^    nu = 4096;$/;"	d
nu	wc.asm	/^    nu = 4096;$/;"	d
nu	zombie.asm	/^    nu = 4096;$/;"	d
nulterminate	sh.c	/^nulterminate(struct cmd *cmd)$/;"	f
num	kernel.asm	/^  num = proc->tf->rax;$/;"	d
nunits	bad_mmap.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	cat.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	eager_mmap.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	echo.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	grep.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	imshow.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	init.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	kill.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	lazy_mmap.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	ln.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	ls.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	mkdir.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	rm.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	sh.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	stressfs.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	usertests.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	wc.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	zombie.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nwrite	pipe.c	/^  uint nwrite;    \/\/ number of bytes written$/;"	m	struct:pipe	file:
oemlength	mp.h	/^  ushort oemlength;             \/\/ OEM table length$/;"	m	struct:mpconf
oemtable_p	mp.h	/^  uint32 oemtable_p;               \/\/ OEM table pointer$/;"	m	struct:mpconf
off	elf.h	/^  uint64 off;$/;"	m	struct:proghdr
off	file.h	/^  uint off;$/;"	m	struct:file
off_15_0	mmu.h	/^  uint off_15_0 : 16;   \/\/ low 16 bits of offset in segment$/;"	m	struct:gatedesc
off_31_16	mmu.h	/^  uint off_31_16 : 16;  \/\/ high bits of offset in segment$/;"	m	struct:gatedesc
off_63_32	mmu.h	/^  uint32 off_63_32;$/;"	m	struct:gatedesc
ofile	proc.h	/^  struct file *ofile[NOFILE];  \/\/ Open files$/;"	m	struct:proc	typeref:struct:proc::file
oldbrk	usertests.asm	/^  oldbrk = sbrk(0);$/;"	d
oldpgdir	kernel.asm	/^  oldpgdir = proc->pgdir;$/;"	d
oldsz	kernel.asm	/^	  oldsz = proc->mmapsz + MMAPBASE;$/;"	d
oldsz	kernel.asm	/^  oldsz = proc->mmapsz + MMAPBASE;$/;"	d
openiputtest	usertests.c	/^openiputtest(void)$/;"	f
opentest	usertests.c	/^opentest(void)$/;"	f
os	bad_mmap.asm	/^  os = s;$/;"	d
os	cat.asm	/^  os = s;$/;"	d
os	eager_mmap.asm	/^  os = s;$/;"	d
os	echo.asm	/^  os = s;$/;"	d
os	forktest.asm	/^  os = s;$/;"	d
os	grep.asm	/^  os = s;$/;"	d
os	imshow.asm	/^  os = s;$/;"	d
os	init.asm	/^  os = s;$/;"	d
os	kernel.asm	/^  os = s;$/;"	d
os	kill.asm	/^  os = s;$/;"	d
os	lazy_mmap.asm	/^  os = s;$/;"	d
os	ln.asm	/^  os = s;$/;"	d
os	ls.asm	/^  os = s;$/;"	d
os	mkdir.asm	/^  os = s;$/;"	d
os	rm.asm	/^  os = s;$/;"	d
os	sh.asm	/^  os = s;$/;"	d
os	stressfs.asm	/^  os = s;$/;"	d
os	usertests.asm	/^  os = s;$/;"	d
os	wc.asm	/^  os = s;$/;"	d
os	zombie.asm	/^  os = s;$/;"	d
outb	x86.h	/^outb(ushort port, uchar data)$/;"	f
outsl	x86.h	/^outsl(int port, const void *addr, int cnt)$/;"	f
outstanding	log.c	/^  int outstanding; \/\/ how many FS sys calls are executing.$/;"	m	struct:log	file:
outw	x86.h	/^outw(ushort port, ushort data)$/;"	f
p	bad_mmap.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	cat.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	eager_mmap.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	echo.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	grep.asm	/^      p = q+1;$/;"	d
p	grep.asm	/^    p = buf;$/;"	d
p	grep.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	imshow.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	init.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	kernel.asm	/^    p = ((bda[0x14]<<8)|bda[0x13])*1024;$/;"	d
p	kernel.asm	/^  p = (char*)PGROUNDUP((addr_t)vstart);$/;"	d
p	kernel.asm	/^  p = 0;$/;"	d
p	kernel.asm	/^  p = allocproc();$/;"	d
p	kill.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	lazy_mmap.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	ln.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	ls.asm	/^    p = buf+strlen(buf);$/;"	d
p	ls.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	mkdir.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	mmu.h	/^  uint p : 1;           \/\/ Present$/;"	m	struct:gatedesc
p	mmu.h	/^  uint p : 1;          \/\/ Present$/;"	m	struct:segdesc
p	rm.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	sh.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	stressfs.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	usertests.asm	/^  p = sbrk(amt);$/;"	d
p	usertests.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	wc.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	zombie.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p2v	memlayout.h	/^static inline void *p2v(addr_t a) {$/;"	f
pa	kernel.asm	/^      pa = PTE_ADDR(*pte);$/;"	d
pa	kernel.asm	/^    pa = PTE_ADDR(*pte);$/;"	d
pa0	kernel.asm	/^    pa0 = uva2ka(pgdir, (char*)va0);$/;"	d
pad	ioapic.c	/^  uint pad[3];$/;"	m	struct:ioapic	file:
pad	runoff	/^pad()$/;"	f
padding1	mmu.h	/^  ushort padding1;$/;"	m	struct:taskstate
padding10	mmu.h	/^  ushort padding10;$/;"	m	struct:taskstate
padding2	mmu.h	/^  ushort padding2;$/;"	m	struct:taskstate
padding3	mmu.h	/^  ushort padding3;$/;"	m	struct:taskstate
padding4	mmu.h	/^  ushort padding4;$/;"	m	struct:taskstate
padding5	mmu.h	/^  ushort padding5;$/;"	m	struct:taskstate
padding6	mmu.h	/^  ushort padding6;$/;"	m	struct:taskstate
padding7	mmu.h	/^  ushort padding7;$/;"	m	struct:taskstate
padding8	mmu.h	/^  ushort padding8;$/;"	m	struct:taskstate
padding9	mmu.h	/^  ushort padding9;$/;"	m	struct:taskstate
paddr	elf.h	/^  uint64 paddr;$/;"	m	struct:proghdr
pageintr	sysproc.c	/^void pageintr(addr_t a){$/;"	f
panic	console.c	/^panic(char *s)$/;"	f
panic	sh.c	/^panic(char *s)$/;"	f
panicked	console.c	/^static int panicked = 0;$/;"	v	file:
panicked	kernel.asm	/^  panicked = 1; \/\/ freeze other CPU$/;"	d
parent	proc.h	/^  struct proc *parent;         \/\/ Parent process$/;"	m	struct:proc	typeref:struct:proc::proc
parseblock	sh.c	/^parseblock(char **ps, char *es)$/;"	f
parsecmd	sh.c	/^parsecmd(char *s)$/;"	f
parseexec	sh.c	/^parseexec(char **ps, char *es)$/;"	f
parseline	sh.c	/^parseline(char **ps, char *es)$/;"	f
parsepipe	sh.c	/^parsepipe(char **ps, char *es)$/;"	f
parseredirs	sh.c	/^parseredirs(struct cmd *cmd, char **ps, char *es)$/;"	f
pattern	grep.asm	/^  pattern = argv[1];$/;"	d
pcmd	sh.asm	/^    pcmd = (struct pipecmd*)cmd;$/;"	d
pcs	spinlock.h	/^  addr_t pcs[10];      \/\/ The call stack (an array of program counters)$/;"	m	struct:spinlock
pd	kernel.asm	/^          pd = (pde_t*)P2V(PTE_ADDR(pdp[j]));$/;"	d
pd	kernel.asm	/^    pd = (pde_t*)P2V(PTE_ADDR(*pdpe));$/;"	d
pde	kernel.asm	/^  pde = &pd[PDX(va)]; $/;"	d
pde_t	types.h	/^typedef addr_t pde_t;$/;"	t
pdp	kernel.asm	/^      pdp = (pdpe_t*)P2V(PTE_ADDR(pml4[i])); $/;"	d
pdp	kernel.asm	/^    pdp = (pdpe_t*)P2V(PTE_ADDR(*pml4e));  $/;"	d
pdpe	kernel.asm	/^  pdpe = &pdp[PDPX(va)];  $/;"	d
pdpe_t	types.h	/^typedef addr_t pdpe_t;$/;"	t
peek	sh.c	/^peek(char **ps, char *es, char *toks)$/;"	f
pgdir	kernel.asm	/^  pgdir = 0;$/;"	d
pgdir	proc.h	/^  pde_t* pgdir;                \/\/ Page table$/;"	m	struct:proc
pgtab	kernel.asm	/^    pgtab = (pte_t*)P2V(PTE_ADDR(*pde));$/;"	d
phentsize	elf.h	/^  ushort phentsize;$/;"	m	struct:elfhdr
phnum	elf.h	/^  ushort phnum;$/;"	m	struct:elfhdr
phoff	elf.h	/^  addr_t phoff;$/;"	m	struct:elfhdr
physaddr	mp.h	/^  uint32 physaddr;               \/\/ 32-bit phys addr of MP config table$/;"	m	struct:mp
pid	forktest.asm	/^    pid = fork();$/;"	d
pid	init.asm	/^    pid = fork();$/;"	d
pid	kernel.asm	/^        pid = p->pid;$/;"	d
pid	kernel.asm	/^  pid = np->pid;$/;"	d
pid	proc.h	/^  int pid;                     \/\/ Process ID$/;"	m	struct:proc
pid	sh.asm	/^  pid = fork();$/;"	d
pid	sleeplock.h	/^  int pid;           \/\/ Process holding lock$/;"	m	struct:sleeplock
pid	usertests.asm	/^    pid = fork();$/;"	d
pid	usertests.asm	/^  pid = fork();$/;"	d
pid1	usertests.asm	/^  pid1 = fork();$/;"	d
pid2	usertests.asm	/^  pid2 = fork();$/;"	d
pid3	usertests.asm	/^  pid3 = fork();$/;"	d
pinit	proc.c	/^pinit(void)$/;"	f
pipe	file.h	/^  struct pipe *pipe;$/;"	m	struct:file	typeref:struct:file::pipe
pipe	pipe.c	/^struct pipe {$/;"	s	file:
pipe1	usertests.c	/^pipe1(void)$/;"	f
pipealloc	pipe.c	/^pipealloc(struct file **f0, struct file **f1)$/;"	f
pipeclose	pipe.c	/^pipeclose(struct pipe *p, int writable)$/;"	f
pipecmd	sh.c	/^pipecmd(struct cmd *left, struct cmd *right)$/;"	f
pipecmd	sh.c	/^struct pipecmd {$/;"	s	file:
piperead	pipe.c	/^piperead(struct pipe *p, char *addr, int n)$/;"	f
pipewrite	pipe.c	/^pipewrite(struct pipe *p, char *addr, int n)$/;"	f
pixel	display.c	/^unsigned int pixel = 0;$/;"	v
pml4e	kernel.asm	/^  pml4e = &pml4[PMX(va)];$/;"	d
pml4e_t	types.h	/^typedef addr_t pml4e_t;$/;"	t
popcli	spinlock.c	/^popcli(void)$/;"	f
port	usertests.asm	/^    port = RTC_ADDR;$/;"	d
port	usertests.asm	/^    port = RTC_DATA;$/;"	d
pos	kernel.asm	/^  pos = inb(CRTPORT+1) << 8;$/;"	d
ppid	usertests.asm	/^    ppid = getpid();$/;"	d
ppid	usertests.asm	/^  ppid = getpid();$/;"	d
preempt	usertests.c	/^preempt(void)$/;"	f
prev	buf.h	/^  struct buf *prev; \/\/ LRU cache list$/;"	m	struct:buf	typeref:struct:buf::buf
printf	forktest.c	/^printf(int fd, char *s, ...)$/;"	f
printf	printf.c	/^printf(int fd, char *fmt, ...)$/;"	f
printint	console.c	/^printint(int xx, int base, int sign)$/;"	f	file:
printint	printf.c	/^printint(int fd, int xx, int base, int sgn)$/;"	f	file:
printptr	console.c	/^printptr(addr_t x) {$/;"	f	file:
proc	kernel.asm	/^      proc = (struct mpproc*)p;$/;"	d
proc	kernel.asm	/^      proc = 0;$/;"	d
proc	kernel.asm	/^      proc = p;$/;"	d
proc	kernel.asm	/^  proc = 0;$/;"	d
proc	proc.c	/^  struct proc proc[NPROC];$/;"	m	struct:__anon1	typeref:struct:__anon1::proc	file:
proc	proc.h	/^struct proc {$/;"	s
proc	vm.c	/^__thread struct proc *proc;$/;"	v	typeref:struct:proc
procdump	proc.c	/^procdump(void)$/;"	f
procstate	proc.h	/^enum procstate { UNUSED, EMBRYO, SLEEPING, RUNNABLE, RUNNING, ZOMBIE };$/;"	g
product	mp.h	/^  uchar product[20];            \/\/ product id$/;"	m	struct:mpconf
proghdr	elf.h	/^struct proghdr {$/;"	s
pt	kernel.asm	/^              pt = (pde_t*)P2V(PTE_ADDR(pd[k]));$/;"	d
ptable	proc.c	/^} ptable;$/;"	v	typeref:struct:__anon1
pte	kernel.asm	/^    pte = walkpgdir(pgdir, (char*)a, 0);$/;"	d
pte	kernel.asm	/^  pte = walkpgdir(pgdir, uva, 0);$/;"	d
pte_t	mmu.h	/^typedef addr_t pte_t;$/;"	t
ptr	umalloc.c	/^    union header *ptr;$/;"	m	struct:header::__anon9	typeref:union:header::__anon9::header	file:
pushcli	spinlock.c	/^pushcli(void)$/;"	f
putc	printf.c	/^putc(int fd, char c)$/;"	f	file:
qnext	buf.h	/^  struct buf *qnext; \/\/ disk queue$/;"	m	struct:buf	typeref:struct:buf::buf
r	bad_mmap.asm	/^  r = fstat(fd, st);$/;"	d
r	cat.asm	/^  r = fstat(fd, st);$/;"	d
r	console.c	/^  uint r;  \/\/ Read index$/;"	m	struct:__anon8	file:
r	eager_mmap.asm	/^  r = fstat(fd, st);$/;"	d
r	echo.asm	/^  r = fstat(fd, st);$/;"	d
r	forktest.asm	/^  r = fstat(fd, st);$/;"	d
r	grep.asm	/^  r = fstat(fd, st);$/;"	d
r	imshow.asm	/^  r = fstat(fd, st);$/;"	d
r	init.asm	/^  r = fstat(fd, st);$/;"	d
r	kernel.asm	/^  r = (struct run*)v;$/;"	d
r	kernel.asm	/^  r = kmem.freelist;$/;"	d
r	kernel.asm	/^  r = lk->locked;$/;"	d
r	kill.asm	/^  r = fstat(fd, st);$/;"	d
r	lazy_mmap.asm	/^  r = fstat(fd, st);$/;"	d
r	ln.asm	/^  r = fstat(fd, st);$/;"	d
r	ls.asm	/^  r = fstat(fd, st);$/;"	d
r	mkdir.asm	/^  r = fstat(fd, st);$/;"	d
r	rm.asm	/^  r = fstat(fd, st);$/;"	d
r	sh.asm	/^  r = fstat(fd, st);$/;"	d
r	stressfs.asm	/^  r = fstat(fd, st);$/;"	d
r	usertests.asm	/^  r = fstat(fd, st);$/;"	d
r	wc.asm	/^  r = fstat(fd, st);$/;"	d
r	zombie.asm	/^  r = fstat(fd, st);$/;"	d
r10	x86.h	/^   uint64 r10;$/;"	m	struct:trapframe
r11	proc.h	/^  addr_t r11;$/;"	m	struct:context
r11	x86.h	/^   uint64 r11;$/;"	m	struct:trapframe
r12	proc.h	/^  addr_t r12;$/;"	m	struct:context
r12	x86.h	/^   uint64 r12;$/;"	m	struct:trapframe
r13	proc.h	/^  addr_t r13;$/;"	m	struct:context
r13	x86.h	/^   uint64 r13;$/;"	m	struct:trapframe
r14	proc.h	/^  addr_t r14;$/;"	m	struct:context
r14	x86.h	/^   uint64 r14;$/;"	m	struct:trapframe
r15	proc.h	/^  addr_t r15;$/;"	m	struct:context
r15	x86.h	/^   uint64 r15;$/;"	m	struct:trapframe
r8	x86.h	/^   uint64 r8;$/;"	m	struct:trapframe
r9	x86.h	/^   uint64 r9;$/;"	m	struct:trapframe
rand	usertests.c	/^rand()$/;"	f
randstate	usertests.asm	/^  randstate = randstate * 1664525 + 1013904223;$/;"	d
randstate	usertests.c	/^unsigned long randstate = 1;$/;"	v
rax	x86.h	/^   uint64 rax;      $/;"	m	struct:trapframe
rbp	x86.h	/^   uint64 rbp;$/;"	m	struct:trapframe
rbx	proc.h	/^  addr_t rbx;$/;"	m	struct:context
rbx	x86.h	/^   uint64 rbx;$/;"	m	struct:trapframe
rcmd	sh.asm	/^    rcmd = (struct redircmd*)cmd;$/;"	d
rcr2	x86.h	/^rcr2(void)$/;"	f
rcx	x86.h	/^   uint64 rcx;$/;"	m	struct:trapframe
rdi	x86.h	/^   uint64 rdi;$/;"	m	struct:trapframe
rdx	x86.h	/^   uint64 rdx;$/;"	m	struct:trapframe
read	file.h	/^  int (*read)(struct inode*, char*, int);$/;"	m	struct:devsw
read_head	log.c	/^read_head(void)$/;"	f	file:
readable	file.h	/^  char readable;$/;"	m	struct:file
readeflags	x86.h	/^readeflags(void)$/;"	f
readi	fs.c	/^readi(struct inode *ip, char *dst, uint off, uint n)$/;"	f
readopen	pipe.c	/^  int readopen;   \/\/ read fd is still open$/;"	m	struct:pipe	file:
readsb	fs.c	/^readsb(int dev, struct superblock *sb)$/;"	f
readsect	bootmain.c	/^readsect(void *dst, uint offset)$/;"	f
readseg	bootmain.c	/^readseg(uchar* pa, uint count, uint offset)$/;"	f
recover_from_log	log.c	/^recover_from_log(void)$/;"	f	file:
redircmd	sh.c	/^redircmd(struct cmd *subcmd, char *file, char *efile, int mode, int fd)$/;"	f
redircmd	sh.c	/^struct redircmd {$/;"	s	file:
ref	file.h	/^  int ref;            \/\/ Reference count$/;"	m	struct:inode
ref	file.h	/^  int ref; \/\/ reference count$/;"	m	struct:file
refcnt	buf.h	/^  uint refcnt;$/;"	m	struct:buf
reg	ioapic.c	/^  uint reg;$/;"	m	struct:ioapic	file:
release	spinlock.c	/^release(struct spinlock *lk)$/;"	f
releasesleep	sleeplock.c	/^releasesleep(struct sleeplock *lk)$/;"	f
reserved	mp.h	/^  uchar reserved;$/;"	m	struct:mpconf
reserved	mp.h	/^  uchar reserved[3];$/;"	m	struct:mp
reserved	mp.h	/^  uchar reserved[8];$/;"	m	struct:mpproc
ret	sh.asm	/^      ret = '+';$/;"	d
ret	sh.asm	/^    ret = 'a';$/;"	d
ret	sh.asm	/^    ret = parseredirs(ret, ps, es);$/;"	d
ret	sh.asm	/^  ret = *s;$/;"	d
ret	sh.asm	/^  ret = execcmd();$/;"	d
ret	sh.asm	/^  ret = parseredirs(ret, ps, es);$/;"	d
return	kernel.asm	/^  return d;$/;"	d
rflags	x86.h	/^   uint64 rflags;  $/;"	m	struct:trapframe
right	sh.c	/^  struct cmd *right;$/;"	m	struct:listcmd	typeref:struct:listcmd::cmd	file:
right	sh.c	/^  struct cmd *right;$/;"	m	struct:pipecmd	typeref:struct:pipecmd::cmd	file:
rinode	mkfs.c	/^rinode(uint inum, struct dinode *ip)$/;"	f
rip	x86.h	/^   uint64 rip;     $/;"	m	struct:trapframe
rmdot	usertests.c	/^rmdot(void)$/;"	f
rsect	mkfs.c	/^rsect(uint sec, void *buf)$/;"	f
rsi	x86.h	/^   uint64 rsi;$/;"	m	struct:trapframe
rsp	x86.h	/^   uint64 rsp;     $/;"	m	struct:trapframe
rsv1	mmu.h	/^  uint rsv1 : 1;       \/\/ 64-bit segment$/;"	m	struct:segdesc
rsv1	mmu.h	/^  uint rsv1 : 3;        \/\/ reserved(should be zero I guess)$/;"	m	struct:gatedesc
rsv2	mmu.h	/^  uint32 rsv2;$/;"	m	struct:gatedesc
rtcdate	date.h	/^struct rtcdate {$/;"	s
run	kalloc.c	/^struct run {$/;"	s	file:
runcmd	sh.c	/^runcmd(struct cmd *cmd)$/;"	f
s	bad_mmap.asm	/^          s = "(null)";$/;"	d
s	bad_mmap.asm	/^        s = va_arg(ap, char*);$/;"	d
s	cat.asm	/^          s = "(null)";$/;"	d
s	cat.asm	/^        s = va_arg(ap, char*);$/;"	d
s	eager_mmap.asm	/^          s = "(null)";$/;"	d
s	eager_mmap.asm	/^        s = va_arg(ap, char*);$/;"	d
s	echo.asm	/^          s = "(null)";$/;"	d
s	echo.asm	/^        s = va_arg(ap, char*);$/;"	d
s	grep.asm	/^          s = "(null)";$/;"	d
s	grep.asm	/^        s = va_arg(ap, char*);$/;"	d
s	imshow.asm	/^          s = "(null)";$/;"	d
s	imshow.asm	/^        s = va_arg(ap, char*);$/;"	d
s	init.asm	/^          s = "(null)";$/;"	d
s	init.asm	/^        s = va_arg(ap, char*);$/;"	d
s	kernel.asm	/^        s = "(null)";$/;"	d
s	kernel.asm	/^  s = path;$/;"	d
s	kernel.asm	/^  s = src;$/;"	d
s	kill.asm	/^          s = "(null)";$/;"	d
s	kill.asm	/^        s = va_arg(ap, char*);$/;"	d
s	lazy_mmap.asm	/^          s = "(null)";$/;"	d
s	lazy_mmap.asm	/^        s = va_arg(ap, char*);$/;"	d
s	ln.asm	/^          s = "(null)";$/;"	d
s	ln.asm	/^        s = va_arg(ap, char*);$/;"	d
s	ls.asm	/^          s = "(null)";$/;"	d
s	ls.asm	/^        s = va_arg(ap, char*);$/;"	d
s	mkdir.asm	/^          s = "(null)";$/;"	d
s	mkdir.asm	/^        s = va_arg(ap, char*);$/;"	d
s	mmu.h	/^  uint s : 1;           \/\/ must be 0 (system)$/;"	m	struct:gatedesc
s	mmu.h	/^  uint s : 1;          \/\/ 0 = system, 1 = application$/;"	m	struct:segdesc
s	rm.asm	/^          s = "(null)";$/;"	d
s	rm.asm	/^        s = va_arg(ap, char*);$/;"	d
s	sh.asm	/^          s = "(null)";$/;"	d
s	sh.asm	/^        s = va_arg(ap, char*);$/;"	d
s	sh.asm	/^  s = *ps;$/;"	d
s	stressfs.asm	/^          s = "(null)";$/;"	d
s	stressfs.asm	/^        s = va_arg(ap, char*);$/;"	d
s	umalloc.c	/^  } s;$/;"	m	union:header	typeref:struct:header::__anon9	file:
s	usertests.asm	/^          s = "(null)";$/;"	d
s	usertests.asm	/^        s = va_arg(ap, char*);$/;"	d
s	wc.asm	/^          s = "(null)";$/;"	d
s	wc.asm	/^        s = va_arg(ap, char*);$/;"	d
s	zombie.asm	/^          s = "(null)";$/;"	d
s	zombie.asm	/^        s = va_arg(ap, char*);$/;"	d
s1	kernel.asm	/^  s1 = v1;$/;"	d
s2	kernel.asm	/^  s2 = v2;$/;"	d
safestrcpy	string.c	/^safestrcpy(char *s, const char *t, int n)$/;"	f
sb	fs.c	/^struct superblock sb; $/;"	v	typeref:struct:superblock
sb	kernel.asm	/^  sb = cmos_read(CMOS_STATB);$/;"	d
sb	mkfs.c	/^struct superblock sb;$/;"	v	typeref:struct:superblock
sbrktest	usertests.c	/^sbrktest(void)$/;"	f
sched	proc.c	/^sched(void)$/;"	f
scheduler	proc.c	/^scheduler(void)$/;"	f
scheduler	proc.h	/^  struct context *scheduler;   \/\/ swtch() here to enter scheduler$/;"	m	struct:cpu	typeref:struct:cpu::context
second	date.h	/^  uint second;$/;"	m	struct:rtcdate
segdesc	mmu.h	/^struct segdesc {$/;"	s
seginit	vm.c	/^seginit(void)$/;"	f
seq	usertests.asm	/^  seq = 0;$/;"	d
setContent	display.c	/^void setContent()$/;"	f
setCurPosition	display.c	/^void setCurPosition()$/;"	f
setdefaultVGApalette	vga.c	/^void setdefaultVGApalette() {$/;"	f
setupkvm	vm.c	/^setupkvm(void)$/;"	f
sharedfd	usertests.c	/^sharedfd(void)$/;"	f
shentsize	elf.h	/^  ushort shentsize;$/;"	m	struct:elfhdr
shiftcode	kbd.h	/^static uchar shiftcode[256] =$/;"	v
shiftmap	kbd.h	/^static uchar shiftmap[256] =$/;"	v
shnum	elf.h	/^  ushort shnum;$/;"	m	struct:elfhdr
shoff	elf.h	/^  addr_t shoff;$/;"	m	struct:elfhdr
shstrndx	elf.h	/^  ushort shstrndx;$/;"	m	struct:elfhdr
signature	mp.h	/^  uchar signature[4];           \/\/ "PCMP"$/;"	m	struct:mpconf
signature	mp.h	/^  uchar signature[4];           \/\/ "_MP_"$/;"	m	struct:mp
signature	mp.h	/^  uchar signature[4];           \/\/ CPU signature$/;"	m	struct:mpproc
size	file.h	/^  uint size;$/;"	m	struct:inode
size	fs.h	/^  uint size;            \/\/ Size of file (bytes)$/;"	m	struct:dinode
size	fs.h	/^  uint size;         \/\/ Size of file system image (blocks)$/;"	m	struct:superblock
size	log.c	/^  int size;$/;"	m	struct:log	file:
size	stat.h	/^  uint size;   \/\/ Size of file in bytes$/;"	m	struct:stat
size	umalloc.c	/^    uint size;$/;"	m	struct:header::__anon9	file:
skipelem	fs.c	/^skipelem(char *path, char *name)$/;"	f	file:
sleep	proc.c	/^sleep(void *chan, struct spinlock *lk)$/;"	f
sleeplock	sleeplock.h	/^struct sleeplock {$/;"	s
sp	kernel.asm	/^    sp = (sp - (strlen(argv[argc]) + 1)) & ~(sizeof(addr_t)-1);$/;"	d
sp	kernel.asm	/^  sp = p->kstack + KSTACKSIZE;$/;"	d
sp	kernel.asm	/^  sp = sz;$/;"	d
specrev	mp.h	/^  uchar specrev;                \/\/ [14]$/;"	m	struct:mp
spin	bootasm.S	/^spin:$/;"	l
spin	entryother.S	/^spin:$/;"	l
spin	entryother.asm	/^spin:$/;"	l
spinlock	spinlock.h	/^struct spinlock {$/;"	s
src	bad_mmap.asm	/^  src = vsrc;$/;"	d
src	cat.asm	/^  src = vsrc;$/;"	d
src	eager_mmap.asm	/^  src = vsrc;$/;"	d
src	echo.asm	/^  src = vsrc;$/;"	d
src	forktest.asm	/^  src = vsrc;$/;"	d
src	grep.asm	/^  src = vsrc;$/;"	d
src	imshow.asm	/^  src = vsrc;$/;"	d
src	init.asm	/^  src = vsrc;$/;"	d
src	kill.asm	/^  src = vsrc;$/;"	d
src	lazy_mmap.asm	/^  src = vsrc;$/;"	d
src	ln.asm	/^  src = vsrc;$/;"	d
src	ls.asm	/^  src = vsrc;$/;"	d
src	mkdir.asm	/^  src = vsrc;$/;"	d
src	rm.asm	/^  src = vsrc;$/;"	d
src	sh.asm	/^  src = vsrc;$/;"	d
src	stressfs.asm	/^  src = vsrc;$/;"	d
src	usertests.asm	/^  src = vsrc;$/;"	d
src	wc.asm	/^  src = vsrc;$/;"	d
src	zombie.asm	/^  src = vsrc;$/;"	d
ss	mmu.h	/^  ushort ss;$/;"	m	struct:taskstate
ss	x86.h	/^   uint64 ss;      $/;"	m	struct:trapframe
ss0	mmu.h	/^  ushort ss0;        \/\/   after an increase in privilege level$/;"	m	struct:taskstate
ss1	mmu.h	/^  ushort ss1;$/;"	m	struct:taskstate
ss2	mmu.h	/^  ushort ss2;$/;"	m	struct:taskstate
st	kernel.asm	/^  st = inb(KBSTATP);$/;"	d
stack	kernel.asm	/^    stack = kalloc();$/;"	d
start	bootasm.S	/^start:$/;"	l
start	entryother.S	/^start:$/;"	l
start	entryother.asm	/^start:$/;"	l
start	initcode.S	/^start:$/;"	l
start	initcode.asm	/^start:$/;"	l
start	log.c	/^  int start;$/;"	m	struct:log	file:
start32	bootasm.S	/^start32:$/;"	l
start32	entryother.S	/^start32:$/;"	l
start32	entryother.asm	/^start32:$/;"	l
started	proc.h	/^  volatile uint started;       \/\/ Has the CPU started?$/;"	m	struct:cpu
startothers	main.c	/^startothers(void)$/;"	f	file:
stat	mkfs.c	8;"	d	file:
stat	stat.h	/^struct stat {$/;"	s
stat	ulib.c	/^stat(char *n, struct stat *st)$/;"	f
state	bad_mmap.asm	/^        state = '%';$/;"	d
state	bad_mmap.asm	/^      state = 0;$/;"	d
state	bad_mmap.asm	/^  state = 0;$/;"	d
state	cat.asm	/^        state = '%';$/;"	d
state	cat.asm	/^      state = 0;$/;"	d
state	cat.asm	/^  state = 0;$/;"	d
state	eager_mmap.asm	/^        state = '%';$/;"	d
state	eager_mmap.asm	/^      state = 0;$/;"	d
state	eager_mmap.asm	/^  state = 0;$/;"	d
state	echo.asm	/^        state = '%';$/;"	d
state	echo.asm	/^      state = 0;$/;"	d
state	echo.asm	/^  state = 0;$/;"	d
state	grep.asm	/^        state = '%';$/;"	d
state	grep.asm	/^      state = 0;$/;"	d
state	grep.asm	/^  state = 0;$/;"	d
state	imshow.asm	/^        state = '%';$/;"	d
state	imshow.asm	/^      state = 0;$/;"	d
state	imshow.asm	/^  state = 0;$/;"	d
state	init.asm	/^        state = '%';$/;"	d
state	init.asm	/^      state = 0;$/;"	d
state	init.asm	/^  state = 0;$/;"	d
state	kernel.asm	/^      state = "???";$/;"	d
state	kernel.asm	/^      state = states[p->state];$/;"	d
state	kill.asm	/^        state = '%';$/;"	d
state	kill.asm	/^      state = 0;$/;"	d
state	kill.asm	/^  state = 0;$/;"	d
state	lazy_mmap.asm	/^        state = '%';$/;"	d
state	lazy_mmap.asm	/^      state = 0;$/;"	d
state	lazy_mmap.asm	/^  state = 0;$/;"	d
state	ln.asm	/^        state = '%';$/;"	d
state	ln.asm	/^      state = 0;$/;"	d
state	ln.asm	/^  state = 0;$/;"	d
state	ls.asm	/^        state = '%';$/;"	d
state	ls.asm	/^      state = 0;$/;"	d
state	ls.asm	/^  state = 0;$/;"	d
state	mkdir.asm	/^        state = '%';$/;"	d
state	mkdir.asm	/^      state = 0;$/;"	d
state	mkdir.asm	/^  state = 0;$/;"	d
state	proc.h	/^  enum procstate state;        \/\/ Process state$/;"	m	struct:proc	typeref:enum:proc::procstate
state	rm.asm	/^        state = '%';$/;"	d
state	rm.asm	/^      state = 0;$/;"	d
state	rm.asm	/^  state = 0;$/;"	d
state	sh.asm	/^        state = '%';$/;"	d
state	sh.asm	/^      state = 0;$/;"	d
state	sh.asm	/^  state = 0;$/;"	d
state	stressfs.asm	/^        state = '%';$/;"	d
state	stressfs.asm	/^      state = 0;$/;"	d
state	stressfs.asm	/^  state = 0;$/;"	d
state	usertests.asm	/^        state = '%';$/;"	d
state	usertests.asm	/^      state = 0;$/;"	d
state	usertests.asm	/^  state = 0;$/;"	d
state	wc.asm	/^        state = '%';$/;"	d
state	wc.asm	/^      state = 0;$/;"	d
state	wc.asm	/^  state = 0;$/;"	d
state	zombie.asm	/^        state = '%';$/;"	d
state	zombie.asm	/^      state = 0;$/;"	d
state	zombie.asm	/^  state = 0;$/;"	d
stati	fs.c	/^stati(struct inode *ip, struct stat *st)$/;"	f
static	bad_mmap.asm	/^static Header *freep;$/;"	l
static	bad_mmap.asm	/^static Header base;$/;"	l
static	bad_mmap.asm	/^static Header*$/;"	l
static	bad_mmap.asm	/^static inline void$/;"	l
static	bad_mmap.asm	/^static void$/;"	l
static	cat.asm	/^static Header *freep;$/;"	l
static	cat.asm	/^static Header base;$/;"	l
static	cat.asm	/^static Header*$/;"	l
static	cat.asm	/^static inline void$/;"	l
static	cat.asm	/^static void$/;"	l
static	eager_mmap.asm	/^static Header *freep;$/;"	l
static	eager_mmap.asm	/^static Header base;$/;"	l
static	eager_mmap.asm	/^static Header*$/;"	l
static	eager_mmap.asm	/^static inline void$/;"	l
static	eager_mmap.asm	/^static void$/;"	l
static	echo.asm	/^static Header *freep;$/;"	l
static	echo.asm	/^static Header base;$/;"	l
static	echo.asm	/^static Header*$/;"	l
static	echo.asm	/^static inline void$/;"	l
static	echo.asm	/^static void$/;"	l
static	forktest.asm	/^static inline void$/;"	l
static	grep.asm	/^static Header *freep;$/;"	l
static	grep.asm	/^static Header base;$/;"	l
static	grep.asm	/^static Header*$/;"	l
static	grep.asm	/^static inline void$/;"	l
static	grep.asm	/^static void$/;"	l
static	imshow.asm	/^static Header *freep;$/;"	l
static	imshow.asm	/^static Header base;$/;"	l
static	imshow.asm	/^static Header*$/;"	l
static	imshow.asm	/^static inline void$/;"	l
static	imshow.asm	/^static void$/;"	l
static	init.asm	/^static Header *freep;$/;"	l
static	init.asm	/^static Header base;$/;"	l
static	init.asm	/^static Header*$/;"	l
static	init.asm	/^static inline void$/;"	l
static	init.asm	/^static void$/;"	l
static	kernel.asm	/^static addr_t$/;"	l
static	kernel.asm	/^static char digits[] = "0123456789abcdef";$/;"	l
static	kernel.asm	/^static char*$/;"	l
static	kernel.asm	/^static inline addr_t v2p(void *a) {$/;"	l
static	kernel.asm	/^static inline addr_t$/;"	l
static	kernel.asm	/^static inline uchar$/;"	l
static	kernel.asm	/^static inline uint$/;"	l
static	kernel.asm	/^static inline void$/;"	l
static	kernel.asm	/^static int uart;    \/\/ is there a uart?$/;"	l
static	kernel.asm	/^static int$/;"	l
static	kernel.asm	/^static pde_t *kpdpt;$/;"	l
static	kernel.asm	/^static pde_t *kpml4;$/;"	l
static	kernel.asm	/^static pte_t *$/;"	l
static	kernel.asm	/^static struct buf*$/;"	t
static	kernel.asm	/^static struct inode*$/;"	t
static	kernel.asm	/^static struct mp*$/;"	t
static	kernel.asm	/^static struct mpconf*$/;"	t
static	kernel.asm	/^static struct proc*$/;"	t
static	kernel.asm	/^static uchar$/;"	l
static	kernel.asm	/^static uint cmos_read(uint reg)$/;"	l
static	kernel.asm	/^static uint$/;"	l
static	kernel.asm	/^static ushort *crt = (ushort*)P2V(0xb8000);  \/\/ CGA memory$/;"	l
static	kernel.asm	/^static void $/;"	l
static	kernel.asm	/^static void commit();$/;"	l
static	kernel.asm	/^static void fill_rtcdate(struct rtcdate *r)$/;"	l
static	kernel.asm	/^static void idestart(struct buf*);$/;"	l
static	kernel.asm	/^static void recover_from_log(void);$/;"	l
static	kernel.asm	/^static void$/;"	l
static	kill.asm	/^static Header *freep;$/;"	l
static	kill.asm	/^static Header base;$/;"	l
static	kill.asm	/^static Header*$/;"	l
static	kill.asm	/^static inline void$/;"	l
static	kill.asm	/^static void$/;"	l
static	lazy_mmap.asm	/^static Header *freep;$/;"	l
static	lazy_mmap.asm	/^static Header base;$/;"	l
static	lazy_mmap.asm	/^static Header*$/;"	l
static	lazy_mmap.asm	/^static inline void$/;"	l
static	lazy_mmap.asm	/^static void$/;"	l
static	ln.asm	/^static Header *freep;$/;"	l
static	ln.asm	/^static Header base;$/;"	l
static	ln.asm	/^static Header*$/;"	l
static	ln.asm	/^static inline void$/;"	l
static	ln.asm	/^static void$/;"	l
static	ls.asm	/^static Header *freep;$/;"	l
static	ls.asm	/^static Header base;$/;"	l
static	ls.asm	/^static Header*$/;"	l
static	ls.asm	/^static inline void$/;"	l
static	ls.asm	/^static void$/;"	l
static	mkdir.asm	/^static Header *freep;$/;"	l
static	mkdir.asm	/^static Header base;$/;"	l
static	mkdir.asm	/^static Header*$/;"	l
static	mkdir.asm	/^static inline void$/;"	l
static	mkdir.asm	/^static void$/;"	l
static	rm.asm	/^static Header *freep;$/;"	l
static	rm.asm	/^static Header base;$/;"	l
static	rm.asm	/^static Header*$/;"	l
static	rm.asm	/^static inline void$/;"	l
static	rm.asm	/^static void$/;"	l
static	sh.asm	/^static Header *freep;$/;"	l
static	sh.asm	/^static Header base;$/;"	l
static	sh.asm	/^static Header*$/;"	l
static	sh.asm	/^static inline void$/;"	l
static	sh.asm	/^static void$/;"	l
static	stressfs.asm	/^static Header *freep;$/;"	l
static	stressfs.asm	/^static Header base;$/;"	l
static	stressfs.asm	/^static Header*$/;"	l
static	stressfs.asm	/^static inline void$/;"	l
static	stressfs.asm	/^static void$/;"	l
static	usertests.asm	/^static Header *freep;$/;"	l
static	usertests.asm	/^static Header base;$/;"	l
static	usertests.asm	/^static Header*$/;"	l
static	usertests.asm	/^static inline void$/;"	l
static	usertests.asm	/^static void$/;"	l
static	wc.asm	/^static Header *freep;$/;"	l
static	wc.asm	/^static Header base;$/;"	l
static	wc.asm	/^static Header*$/;"	l
static	wc.asm	/^static inline void$/;"	l
static	wc.asm	/^static void$/;"	l
static	zombie.asm	/^static Header *freep;$/;"	l
static	zombie.asm	/^static Header base;$/;"	l
static	zombie.asm	/^static Header*$/;"	l
static	zombie.asm	/^static inline void$/;"	l
static	zombie.asm	/^static void$/;"	l
static_assert	mkfs.c	15;"	d	file:
stdout	usertests.c	/^int stdout = 1;$/;"	v
sti	x86.h	/^sti(void)$/;"	f
stosb	x86.h	/^stosb(void *addr, int data, int cnt)$/;"	f
stosl	x86.h	/^stosl(void *addr, int data, int cnt)$/;"	f
strchr	ulib.c	/^strchr(const char *s, char c)$/;"	f
strcmp	ulib.c	/^strcmp(const char *p, const char *q)$/;"	f
strcpy	ulib.c	/^strcpy(char *s, char *t)$/;"	f
strlen	string.c	/^strlen(const char *s)$/;"	f
strlen	ulib.c	/^strlen(char *s)$/;"	f
strncmp	string.c	/^strncmp(const char *p, const char *q, uint n)$/;"	f
strncpy	string.c	/^strncpy(char *s, const char *t, int n)$/;"	f
struct	kernel.asm	/^    struct proc *p = proc;$/;"	l
struct	kernel.asm	/^  struct proc *np;$/;"	l
struct	kernel.asm	/^  struct proc *p = proc;$/;"	l
struct	kernel.asm	/^  struct proc *p;$/;"	l
subdir	usertests.c	/^subdir(void)$/;"	f
sum	kernel.asm	/^  sum = 0;$/;"	d
sum	mp.c	/^sum(uchar *addr, int len)$/;"	f	file:
superblock	fs.h	/^struct superblock {$/;"	s
switchkvm	vm.c	/^switchkvm(void)$/;"	f
switchuvm	vm.c	/^switchuvm(struct proc *p)$/;"	f
swtch	kernel.asm	/^swtch:$/;"	l
swtch	swtch.S	/^swtch:$/;"	l
symbols	sh.c	/^char symbols[] = "<|>&;()";$/;"	v
sys_chdir	sysfile.c	/^sys_chdir(void)$/;"	f
sys_close	sysfile.c	/^sys_close(void)$/;"	f
sys_dup	sysfile.c	/^sys_dup(void)$/;"	f
sys_exec	sysfile.c	/^sys_exec(void)$/;"	f
sys_exit	sysproc.c	/^sys_exit(void)$/;"	f
sys_fork	sysproc.c	/^sys_fork(void)$/;"	f
sys_fstat	sysfile.c	/^sys_fstat(void)$/;"	f
sys_getpid	sysproc.c	/^sys_getpid(void)$/;"	f
sys_ioctl	sysfile.c	/^sys_ioctl(void) $/;"	f
sys_kill	sysproc.c	/^sys_kill(void)$/;"	f
sys_link	sysfile.c	/^sys_link(void)$/;"	f
sys_mkdir	sysfile.c	/^sys_mkdir(void)$/;"	f
sys_mknod	sysfile.c	/^sys_mknod(void)$/;"	f
sys_mmap	sysproc.c	/^addr_t sys_mmap() {$/;"	f
sys_open	sysfile.c	/^sys_open(void)$/;"	f
sys_pipe	sysfile.c	/^sys_pipe(void)$/;"	f
sys_read	sysfile.c	/^sys_read(void)$/;"	f
sys_sbrk	sysproc.c	/^sys_sbrk(void)$/;"	f
sys_sleep	sysproc.c	/^sys_sleep(void)$/;"	f
sys_unlink	sysfile.c	/^sys_unlink(void)$/;"	f
sys_uptime	sysproc.c	/^sys_uptime(void)$/;"	f
sys_wait	sysproc.c	/^sys_wait(void)$/;"	f
sys_write	sysfile.c	/^sys_write(void)$/;"	f
syscall	syscall.c	/^syscall(void)$/;"	f
syscall_entry	entry.S	/^syscall_entry:$/;"	l
syscall_trap	kernel.asm	/^syscall_trap:$/;"	l
syscall_trap	trapasm.S	/^syscall_trap:$/;"	l
syscall_trapret	kernel.asm	/^syscall_trapret:$/;"	l
syscall_trapret	trapasm.S	/^syscall_trapret:$/;"	l
syscallinit	vm.c	/^syscallinit(void)$/;"	f
syscalls	syscall.c	/^static addr_t (*syscalls[])(void) = {$/;"	v	file:
sz	kernel.asm	/^  sz = 0;$/;"	d
sz	kernel.asm	/^  sz = PGROUNDUP(sz);$/;"	d
sz	kernel.asm	/^  sz = proc->sz;$/;"	d
sz	proc.h	/^  addr_t sz;                     \/\/ Size of process memory (bytes)$/;"	m	struct:proc
t	mmu.h	/^  ushort t;          \/\/ Trap on task switch$/;"	m	struct:taskstate
target	kernel.asm	/^  target = n;$/;"	d
taskstate	mmu.h	/^struct taskstate {$/;"	s
tf	proc.h	/^  struct trapframe *tf;        \/\/ Trap frame for current syscall$/;"	m	struct:proc	typeref:struct:proc::trapframe
ticks	trap.c	/^uint ticks;$/;"	v
ticks0	kernel.asm	/^  ticks0 = ticks;$/;"	d
tickslock	trap.c	/^struct spinlock tickslock;$/;"	v	typeref:struct:spinlock
togglecode	kbd.h	/^static uchar togglecode[256] =$/;"	v
tok	sh.asm	/^    tok = gettoken(ps, es, 0, 0);$/;"	d
total	usertests.asm	/^    total = 0;$/;"	d
total	usertests.asm	/^  total = 0;$/;"	d
trap	trap.c	/^trap(struct trapframe *tf)$/;"	f
trapframe	x86.h	/^struct trapframe {$/;"	s
trapno	x86.h	/^   uint64 trapno;$/;"	m	struct:trapframe
trapret	kernel.asm	/^trapret:$/;"	l
trapret	trapasm.S	/^trapret:$/;"	l
ts	proc.h	/^  struct taskstate ts;         \/\/ Used by x86 to find stack for interrupt$/;"	m	struct:cpu	typeref:struct:cpu::taskstate
tss	kernel.asm	/^  tss = (uint*) (((char*) cpu->local) + 1024);$/;"	d
tss	kernel.asm	/^  tss = (uint*) (((char*) local) + 1024);$/;"	d
tss_set_rsp	vm.c	/^tss_set_rsp(uint *tss, uint n, uint64 rsp) {$/;"	f	file:
tvinit	trap.c	/^void tvinit(void) {$/;"	f
type	elf.h	/^  uint32 type;$/;"	m	struct:proghdr
type	elf.h	/^  ushort type;$/;"	m	struct:elfhdr
type	file.h	/^  enum { FD_NONE, FD_PIPE, FD_INODE } type;$/;"	m	struct:file	typeref:enum:file::__anon3
type	file.h	/^  short type;         \/\/ copy of disk inode$/;"	m	struct:inode
type	fs.h	/^  short type;           \/\/ File type$/;"	m	struct:dinode
type	mmu.h	/^  uint type : 4;        \/\/ type(STS_{TG,IG32,TG32})$/;"	m	struct:gatedesc
type	mmu.h	/^  uint type : 4;       \/\/ Segment type (see STS_ constants)$/;"	m	struct:segdesc
type	mp.h	/^  uchar type;                   \/\/ MP system config type$/;"	m	struct:mp
type	mp.h	/^  uchar type;                   \/\/ entry type (0)$/;"	m	struct:mpproc
type	mp.h	/^  uchar type;                   \/\/ entry type (2)$/;"	m	struct:mpioapic
type	sh.c	/^  int type;$/;"	m	struct:backcmd	file:
type	sh.c	/^  int type;$/;"	m	struct:cmd	file:
type	sh.c	/^  int type;$/;"	m	struct:execcmd	file:
type	sh.c	/^  int type;$/;"	m	struct:listcmd	file:
type	sh.c	/^  int type;$/;"	m	struct:pipecmd	file:
type	sh.c	/^  int type;$/;"	m	struct:redircmd	file:
type	stat.h	/^  short type;  \/\/ Type of file$/;"	m	struct:stat
uart	kernel.asm	/^  uart = 1;$/;"	d
uart	uart.c	/^static int uart;    \/\/ is there a uart?$/;"	v	file:
uartearlyinit	uart.c	/^uartearlyinit(void)$/;"	f
uartgetc	uart.c	/^uartgetc(void)$/;"	f	file:
uartinit	uart.c	/^uartinit(void)$/;"	f
uartintr	uart.c	/^uartintr(void)$/;"	f
uartputc	uart.c	/^uartputc(int c)$/;"	f
uchar	kernel.asm	/^uchar ioapicid;$/;"	l
uchar	types.h	/^typedef unsigned char  uchar;$/;"	t
uint	bad_mmap.asm	/^uint$/;"	l
uint	cat.asm	/^uint$/;"	l
uint	eager_mmap.asm	/^uint$/;"	l
uint	echo.asm	/^uint$/;"	l
uint	forktest.asm	/^uint$/;"	l
uint	grep.asm	/^uint$/;"	l
uint	imshow.asm	/^uint$/;"	l
uint	init.asm	/^uint$/;"	l
uint	kernel.asm	/^uint ticks;$/;"	l
uint	kill.asm	/^uint$/;"	l
uint	lazy_mmap.asm	/^uint$/;"	l
uint	ln.asm	/^uint$/;"	l
uint	ls.asm	/^uint$/;"	l
uint	mkdir.asm	/^uint$/;"	l
uint	rm.asm	/^uint$/;"	l
uint	sh.asm	/^uint$/;"	l
uint	stressfs.asm	/^uint$/;"	l
uint	types.h	/^typedef unsigned int   uint;$/;"	t
uint	usertests.asm	/^uint$/;"	l
uint	wc.asm	/^uint$/;"	l
uint	zombie.asm	/^uint$/;"	l
uint32	types.h	/^typedef unsigned int  uint32;$/;"	t
uint64	types.h	/^typedef unsigned long uint64;$/;"	t
uio	usertests.c	/^uio()$/;"	f
uninit	usertests.c	/^char uninit[10000];$/;"	v
unlinkread	usertests.c	/^unlinkread(void)$/;"	f
unsigned	kernel.asm	/^unsigned int pixel = 0;$/;"	l
unsigned	usertests.asm	/^unsigned int$/;"	l
unsigned	usertests.asm	/^unsigned long randstate = 1;$/;"	l
use_lock	kalloc.c	/^  int use_lock;$/;"	m	struct:__anon6	file:
userinit	proc.c	/^userinit(void)$/;"	f
ushort	types.h	/^typedef unsigned short ushort;$/;"	t
uva2ka	vm.c	/^uva2ka(pde_t *pgdir, char *uva)$/;"	f
v2p	memlayout.h	/^static inline addr_t v2p(void *a) {$/;"	f
va	kernel.asm	/^    va = va0 + PGSIZE;$/;"	d
va0	kernel.asm	/^    va0 = (uint)PGROUNDDOWN(va);$/;"	d
vaddr	elf.h	/^  uint64 vaddr;$/;"	m	struct:proghdr
val	usertests.asm	/^    val = 0x09;  \/* year *\/$/;"	d
validateint	usertests.c	/^validateint(int *p)$/;"	f
validatetest	usertests.c	/^validatetest(void)$/;"	f
vector0	kernel.asm	/^vector0:$/;"	l
vector0	vectors.S	/^vector0:$/;"	l
vector1	kernel.asm	/^vector1:$/;"	l
vector1	vectors.S	/^vector1:$/;"	l
vector10	kernel.asm	/^vector10:$/;"	l
vector10	vectors.S	/^vector10:$/;"	l
vector100	kernel.asm	/^vector100:$/;"	l
vector100	vectors.S	/^vector100:$/;"	l
vector101	kernel.asm	/^vector101:$/;"	l
vector101	vectors.S	/^vector101:$/;"	l
vector102	kernel.asm	/^vector102:$/;"	l
vector102	vectors.S	/^vector102:$/;"	l
vector103	kernel.asm	/^vector103:$/;"	l
vector103	vectors.S	/^vector103:$/;"	l
vector104	kernel.asm	/^vector104:$/;"	l
vector104	vectors.S	/^vector104:$/;"	l
vector105	kernel.asm	/^vector105:$/;"	l
vector105	vectors.S	/^vector105:$/;"	l
vector106	kernel.asm	/^vector106:$/;"	l
vector106	vectors.S	/^vector106:$/;"	l
vector107	kernel.asm	/^vector107:$/;"	l
vector107	vectors.S	/^vector107:$/;"	l
vector108	kernel.asm	/^vector108:$/;"	l
vector108	vectors.S	/^vector108:$/;"	l
vector109	kernel.asm	/^vector109:$/;"	l
vector109	vectors.S	/^vector109:$/;"	l
vector11	kernel.asm	/^vector11:$/;"	l
vector11	vectors.S	/^vector11:$/;"	l
vector110	kernel.asm	/^vector110:$/;"	l
vector110	vectors.S	/^vector110:$/;"	l
vector111	kernel.asm	/^vector111:$/;"	l
vector111	vectors.S	/^vector111:$/;"	l
vector112	kernel.asm	/^vector112:$/;"	l
vector112	vectors.S	/^vector112:$/;"	l
vector113	kernel.asm	/^vector113:$/;"	l
vector113	vectors.S	/^vector113:$/;"	l
vector114	kernel.asm	/^vector114:$/;"	l
vector114	vectors.S	/^vector114:$/;"	l
vector115	kernel.asm	/^vector115:$/;"	l
vector115	vectors.S	/^vector115:$/;"	l
vector116	kernel.asm	/^vector116:$/;"	l
vector116	vectors.S	/^vector116:$/;"	l
vector117	kernel.asm	/^vector117:$/;"	l
vector117	vectors.S	/^vector117:$/;"	l
vector118	kernel.asm	/^vector118:$/;"	l
vector118	vectors.S	/^vector118:$/;"	l
vector119	kernel.asm	/^vector119:$/;"	l
vector119	vectors.S	/^vector119:$/;"	l
vector12	kernel.asm	/^vector12:$/;"	l
vector12	vectors.S	/^vector12:$/;"	l
vector120	kernel.asm	/^vector120:$/;"	l
vector120	vectors.S	/^vector120:$/;"	l
vector121	kernel.asm	/^vector121:$/;"	l
vector121	vectors.S	/^vector121:$/;"	l
vector122	kernel.asm	/^vector122:$/;"	l
vector122	vectors.S	/^vector122:$/;"	l
vector123	kernel.asm	/^vector123:$/;"	l
vector123	vectors.S	/^vector123:$/;"	l
vector124	kernel.asm	/^vector124:$/;"	l
vector124	vectors.S	/^vector124:$/;"	l
vector125	kernel.asm	/^vector125:$/;"	l
vector125	vectors.S	/^vector125:$/;"	l
vector126	kernel.asm	/^vector126:$/;"	l
vector126	vectors.S	/^vector126:$/;"	l
vector127	kernel.asm	/^vector127:$/;"	l
vector127	vectors.S	/^vector127:$/;"	l
vector128	kernel.asm	/^vector128:$/;"	l
vector128	vectors.S	/^vector128:$/;"	l
vector129	kernel.asm	/^vector129:$/;"	l
vector129	vectors.S	/^vector129:$/;"	l
vector13	kernel.asm	/^vector13:$/;"	l
vector13	vectors.S	/^vector13:$/;"	l
vector130	kernel.asm	/^vector130:$/;"	l
vector130	vectors.S	/^vector130:$/;"	l
vector131	kernel.asm	/^vector131:$/;"	l
vector131	vectors.S	/^vector131:$/;"	l
vector132	kernel.asm	/^vector132:$/;"	l
vector132	vectors.S	/^vector132:$/;"	l
vector133	kernel.asm	/^vector133:$/;"	l
vector133	vectors.S	/^vector133:$/;"	l
vector134	kernel.asm	/^vector134:$/;"	l
vector134	vectors.S	/^vector134:$/;"	l
vector135	kernel.asm	/^vector135:$/;"	l
vector135	vectors.S	/^vector135:$/;"	l
vector136	kernel.asm	/^vector136:$/;"	l
vector136	vectors.S	/^vector136:$/;"	l
vector137	kernel.asm	/^vector137:$/;"	l
vector137	vectors.S	/^vector137:$/;"	l
vector138	kernel.asm	/^vector138:$/;"	l
vector138	vectors.S	/^vector138:$/;"	l
vector139	kernel.asm	/^vector139:$/;"	l
vector139	vectors.S	/^vector139:$/;"	l
vector14	kernel.asm	/^vector14:$/;"	l
vector14	vectors.S	/^vector14:$/;"	l
vector140	kernel.asm	/^vector140:$/;"	l
vector140	vectors.S	/^vector140:$/;"	l
vector141	kernel.asm	/^vector141:$/;"	l
vector141	vectors.S	/^vector141:$/;"	l
vector142	kernel.asm	/^vector142:$/;"	l
vector142	vectors.S	/^vector142:$/;"	l
vector143	kernel.asm	/^vector143:$/;"	l
vector143	vectors.S	/^vector143:$/;"	l
vector144	kernel.asm	/^vector144:$/;"	l
vector144	vectors.S	/^vector144:$/;"	l
vector145	kernel.asm	/^vector145:$/;"	l
vector145	vectors.S	/^vector145:$/;"	l
vector146	kernel.asm	/^vector146:$/;"	l
vector146	vectors.S	/^vector146:$/;"	l
vector147	kernel.asm	/^vector147:$/;"	l
vector147	vectors.S	/^vector147:$/;"	l
vector148	kernel.asm	/^vector148:$/;"	l
vector148	vectors.S	/^vector148:$/;"	l
vector149	kernel.asm	/^vector149:$/;"	l
vector149	vectors.S	/^vector149:$/;"	l
vector15	kernel.asm	/^vector15:$/;"	l
vector15	vectors.S	/^vector15:$/;"	l
vector150	kernel.asm	/^vector150:$/;"	l
vector150	vectors.S	/^vector150:$/;"	l
vector151	kernel.asm	/^vector151:$/;"	l
vector151	vectors.S	/^vector151:$/;"	l
vector152	kernel.asm	/^vector152:$/;"	l
vector152	vectors.S	/^vector152:$/;"	l
vector153	kernel.asm	/^vector153:$/;"	l
vector153	vectors.S	/^vector153:$/;"	l
vector154	kernel.asm	/^vector154:$/;"	l
vector154	vectors.S	/^vector154:$/;"	l
vector155	kernel.asm	/^vector155:$/;"	l
vector155	vectors.S	/^vector155:$/;"	l
vector156	kernel.asm	/^vector156:$/;"	l
vector156	vectors.S	/^vector156:$/;"	l
vector157	kernel.asm	/^vector157:$/;"	l
vector157	vectors.S	/^vector157:$/;"	l
vector158	kernel.asm	/^vector158:$/;"	l
vector158	vectors.S	/^vector158:$/;"	l
vector159	kernel.asm	/^vector159:$/;"	l
vector159	vectors.S	/^vector159:$/;"	l
vector16	kernel.asm	/^vector16:$/;"	l
vector16	vectors.S	/^vector16:$/;"	l
vector160	kernel.asm	/^vector160:$/;"	l
vector160	vectors.S	/^vector160:$/;"	l
vector161	kernel.asm	/^vector161:$/;"	l
vector161	vectors.S	/^vector161:$/;"	l
vector162	kernel.asm	/^vector162:$/;"	l
vector162	vectors.S	/^vector162:$/;"	l
vector163	kernel.asm	/^vector163:$/;"	l
vector163	vectors.S	/^vector163:$/;"	l
vector164	kernel.asm	/^vector164:$/;"	l
vector164	vectors.S	/^vector164:$/;"	l
vector165	kernel.asm	/^vector165:$/;"	l
vector165	vectors.S	/^vector165:$/;"	l
vector166	kernel.asm	/^vector166:$/;"	l
vector166	vectors.S	/^vector166:$/;"	l
vector167	kernel.asm	/^vector167:$/;"	l
vector167	vectors.S	/^vector167:$/;"	l
vector168	kernel.asm	/^vector168:$/;"	l
vector168	vectors.S	/^vector168:$/;"	l
vector169	kernel.asm	/^vector169:$/;"	l
vector169	vectors.S	/^vector169:$/;"	l
vector17	kernel.asm	/^vector17:$/;"	l
vector17	vectors.S	/^vector17:$/;"	l
vector170	kernel.asm	/^vector170:$/;"	l
vector170	vectors.S	/^vector170:$/;"	l
vector171	kernel.asm	/^vector171:$/;"	l
vector171	vectors.S	/^vector171:$/;"	l
vector172	kernel.asm	/^vector172:$/;"	l
vector172	vectors.S	/^vector172:$/;"	l
vector173	kernel.asm	/^vector173:$/;"	l
vector173	vectors.S	/^vector173:$/;"	l
vector174	kernel.asm	/^vector174:$/;"	l
vector174	vectors.S	/^vector174:$/;"	l
vector175	kernel.asm	/^vector175:$/;"	l
vector175	vectors.S	/^vector175:$/;"	l
vector176	kernel.asm	/^vector176:$/;"	l
vector176	vectors.S	/^vector176:$/;"	l
vector177	kernel.asm	/^vector177:$/;"	l
vector177	vectors.S	/^vector177:$/;"	l
vector178	kernel.asm	/^vector178:$/;"	l
vector178	vectors.S	/^vector178:$/;"	l
vector179	kernel.asm	/^vector179:$/;"	l
vector179	vectors.S	/^vector179:$/;"	l
vector18	kernel.asm	/^vector18:$/;"	l
vector18	vectors.S	/^vector18:$/;"	l
vector180	kernel.asm	/^vector180:$/;"	l
vector180	vectors.S	/^vector180:$/;"	l
vector181	kernel.asm	/^vector181:$/;"	l
vector181	vectors.S	/^vector181:$/;"	l
vector182	kernel.asm	/^vector182:$/;"	l
vector182	vectors.S	/^vector182:$/;"	l
vector183	kernel.asm	/^vector183:$/;"	l
vector183	vectors.S	/^vector183:$/;"	l
vector184	kernel.asm	/^vector184:$/;"	l
vector184	vectors.S	/^vector184:$/;"	l
vector185	kernel.asm	/^vector185:$/;"	l
vector185	vectors.S	/^vector185:$/;"	l
vector186	kernel.asm	/^vector186:$/;"	l
vector186	vectors.S	/^vector186:$/;"	l
vector187	kernel.asm	/^vector187:$/;"	l
vector187	vectors.S	/^vector187:$/;"	l
vector188	kernel.asm	/^vector188:$/;"	l
vector188	vectors.S	/^vector188:$/;"	l
vector189	kernel.asm	/^vector189:$/;"	l
vector189	vectors.S	/^vector189:$/;"	l
vector19	kernel.asm	/^vector19:$/;"	l
vector19	vectors.S	/^vector19:$/;"	l
vector190	kernel.asm	/^vector190:$/;"	l
vector190	vectors.S	/^vector190:$/;"	l
vector191	kernel.asm	/^vector191:$/;"	l
vector191	vectors.S	/^vector191:$/;"	l
vector192	kernel.asm	/^vector192:$/;"	l
vector192	vectors.S	/^vector192:$/;"	l
vector193	kernel.asm	/^vector193:$/;"	l
vector193	vectors.S	/^vector193:$/;"	l
vector194	kernel.asm	/^vector194:$/;"	l
vector194	vectors.S	/^vector194:$/;"	l
vector195	kernel.asm	/^vector195:$/;"	l
vector195	vectors.S	/^vector195:$/;"	l
vector196	kernel.asm	/^vector196:$/;"	l
vector196	vectors.S	/^vector196:$/;"	l
vector197	kernel.asm	/^vector197:$/;"	l
vector197	vectors.S	/^vector197:$/;"	l
vector198	kernel.asm	/^vector198:$/;"	l
vector198	vectors.S	/^vector198:$/;"	l
vector199	kernel.asm	/^vector199:$/;"	l
vector199	vectors.S	/^vector199:$/;"	l
vector2	kernel.asm	/^vector2:$/;"	l
vector2	vectors.S	/^vector2:$/;"	l
vector20	kernel.asm	/^vector20:$/;"	l
vector20	vectors.S	/^vector20:$/;"	l
vector200	kernel.asm	/^vector200:$/;"	l
vector200	vectors.S	/^vector200:$/;"	l
vector201	kernel.asm	/^vector201:$/;"	l
vector201	vectors.S	/^vector201:$/;"	l
vector202	kernel.asm	/^vector202:$/;"	l
vector202	vectors.S	/^vector202:$/;"	l
vector203	kernel.asm	/^vector203:$/;"	l
vector203	vectors.S	/^vector203:$/;"	l
vector204	kernel.asm	/^vector204:$/;"	l
vector204	vectors.S	/^vector204:$/;"	l
vector205	kernel.asm	/^vector205:$/;"	l
vector205	vectors.S	/^vector205:$/;"	l
vector206	kernel.asm	/^vector206:$/;"	l
vector206	vectors.S	/^vector206:$/;"	l
vector207	kernel.asm	/^vector207:$/;"	l
vector207	vectors.S	/^vector207:$/;"	l
vector208	kernel.asm	/^vector208:$/;"	l
vector208	vectors.S	/^vector208:$/;"	l
vector209	kernel.asm	/^vector209:$/;"	l
vector209	vectors.S	/^vector209:$/;"	l
vector21	kernel.asm	/^vector21:$/;"	l
vector21	vectors.S	/^vector21:$/;"	l
vector210	kernel.asm	/^vector210:$/;"	l
vector210	vectors.S	/^vector210:$/;"	l
vector211	kernel.asm	/^vector211:$/;"	l
vector211	vectors.S	/^vector211:$/;"	l
vector212	kernel.asm	/^vector212:$/;"	l
vector212	vectors.S	/^vector212:$/;"	l
vector213	kernel.asm	/^vector213:$/;"	l
vector213	vectors.S	/^vector213:$/;"	l
vector214	kernel.asm	/^vector214:$/;"	l
vector214	vectors.S	/^vector214:$/;"	l
vector215	kernel.asm	/^vector215:$/;"	l
vector215	vectors.S	/^vector215:$/;"	l
vector216	kernel.asm	/^vector216:$/;"	l
vector216	vectors.S	/^vector216:$/;"	l
vector217	kernel.asm	/^vector217:$/;"	l
vector217	vectors.S	/^vector217:$/;"	l
vector218	kernel.asm	/^vector218:$/;"	l
vector218	vectors.S	/^vector218:$/;"	l
vector219	kernel.asm	/^vector219:$/;"	l
vector219	vectors.S	/^vector219:$/;"	l
vector22	kernel.asm	/^vector22:$/;"	l
vector22	vectors.S	/^vector22:$/;"	l
vector220	kernel.asm	/^vector220:$/;"	l
vector220	vectors.S	/^vector220:$/;"	l
vector221	kernel.asm	/^vector221:$/;"	l
vector221	vectors.S	/^vector221:$/;"	l
vector222	kernel.asm	/^vector222:$/;"	l
vector222	vectors.S	/^vector222:$/;"	l
vector223	kernel.asm	/^vector223:$/;"	l
vector223	vectors.S	/^vector223:$/;"	l
vector224	kernel.asm	/^vector224:$/;"	l
vector224	vectors.S	/^vector224:$/;"	l
vector225	kernel.asm	/^vector225:$/;"	l
vector225	vectors.S	/^vector225:$/;"	l
vector226	kernel.asm	/^vector226:$/;"	l
vector226	vectors.S	/^vector226:$/;"	l
vector227	kernel.asm	/^vector227:$/;"	l
vector227	vectors.S	/^vector227:$/;"	l
vector228	kernel.asm	/^vector228:$/;"	l
vector228	vectors.S	/^vector228:$/;"	l
vector229	kernel.asm	/^vector229:$/;"	l
vector229	vectors.S	/^vector229:$/;"	l
vector23	kernel.asm	/^vector23:$/;"	l
vector23	vectors.S	/^vector23:$/;"	l
vector230	kernel.asm	/^vector230:$/;"	l
vector230	vectors.S	/^vector230:$/;"	l
vector231	kernel.asm	/^vector231:$/;"	l
vector231	vectors.S	/^vector231:$/;"	l
vector232	kernel.asm	/^vector232:$/;"	l
vector232	vectors.S	/^vector232:$/;"	l
vector233	kernel.asm	/^vector233:$/;"	l
vector233	vectors.S	/^vector233:$/;"	l
vector234	kernel.asm	/^vector234:$/;"	l
vector234	vectors.S	/^vector234:$/;"	l
vector235	kernel.asm	/^vector235:$/;"	l
vector235	vectors.S	/^vector235:$/;"	l
vector236	kernel.asm	/^vector236:$/;"	l
vector236	vectors.S	/^vector236:$/;"	l
vector237	kernel.asm	/^vector237:$/;"	l
vector237	vectors.S	/^vector237:$/;"	l
vector238	kernel.asm	/^vector238:$/;"	l
vector238	vectors.S	/^vector238:$/;"	l
vector239	kernel.asm	/^vector239:$/;"	l
vector239	vectors.S	/^vector239:$/;"	l
vector24	kernel.asm	/^vector24:$/;"	l
vector24	vectors.S	/^vector24:$/;"	l
vector240	kernel.asm	/^vector240:$/;"	l
vector240	vectors.S	/^vector240:$/;"	l
vector241	kernel.asm	/^vector241:$/;"	l
vector241	vectors.S	/^vector241:$/;"	l
vector242	kernel.asm	/^vector242:$/;"	l
vector242	vectors.S	/^vector242:$/;"	l
vector243	kernel.asm	/^vector243:$/;"	l
vector243	vectors.S	/^vector243:$/;"	l
vector244	kernel.asm	/^vector244:$/;"	l
vector244	vectors.S	/^vector244:$/;"	l
vector245	kernel.asm	/^vector245:$/;"	l
vector245	vectors.S	/^vector245:$/;"	l
vector246	kernel.asm	/^vector246:$/;"	l
vector246	vectors.S	/^vector246:$/;"	l
vector247	kernel.asm	/^vector247:$/;"	l
vector247	vectors.S	/^vector247:$/;"	l
vector248	kernel.asm	/^vector248:$/;"	l
vector248	vectors.S	/^vector248:$/;"	l
vector249	kernel.asm	/^vector249:$/;"	l
vector249	vectors.S	/^vector249:$/;"	l
vector25	kernel.asm	/^vector25:$/;"	l
vector25	vectors.S	/^vector25:$/;"	l
vector250	kernel.asm	/^vector250:$/;"	l
vector250	vectors.S	/^vector250:$/;"	l
vector251	kernel.asm	/^vector251:$/;"	l
vector251	vectors.S	/^vector251:$/;"	l
vector252	kernel.asm	/^vector252:$/;"	l
vector252	vectors.S	/^vector252:$/;"	l
vector253	kernel.asm	/^vector253:$/;"	l
vector253	vectors.S	/^vector253:$/;"	l
vector254	kernel.asm	/^vector254:$/;"	l
vector254	vectors.S	/^vector254:$/;"	l
vector255	kernel.asm	/^vector255:$/;"	l
vector255	vectors.S	/^vector255:$/;"	l
vector26	kernel.asm	/^vector26:$/;"	l
vector26	vectors.S	/^vector26:$/;"	l
vector27	kernel.asm	/^vector27:$/;"	l
vector27	vectors.S	/^vector27:$/;"	l
vector28	kernel.asm	/^vector28:$/;"	l
vector28	vectors.S	/^vector28:$/;"	l
vector29	kernel.asm	/^vector29:$/;"	l
vector29	vectors.S	/^vector29:$/;"	l
vector3	kernel.asm	/^vector3:$/;"	l
vector3	vectors.S	/^vector3:$/;"	l
vector30	kernel.asm	/^vector30:$/;"	l
vector30	vectors.S	/^vector30:$/;"	l
vector31	kernel.asm	/^vector31:$/;"	l
vector31	vectors.S	/^vector31:$/;"	l
vector32	kernel.asm	/^vector32:$/;"	l
vector32	vectors.S	/^vector32:$/;"	l
vector33	kernel.asm	/^vector33:$/;"	l
vector33	vectors.S	/^vector33:$/;"	l
vector34	kernel.asm	/^vector34:$/;"	l
vector34	vectors.S	/^vector34:$/;"	l
vector35	kernel.asm	/^vector35:$/;"	l
vector35	vectors.S	/^vector35:$/;"	l
vector36	kernel.asm	/^vector36:$/;"	l
vector36	vectors.S	/^vector36:$/;"	l
vector37	kernel.asm	/^vector37:$/;"	l
vector37	vectors.S	/^vector37:$/;"	l
vector38	kernel.asm	/^vector38:$/;"	l
vector38	vectors.S	/^vector38:$/;"	l
vector39	kernel.asm	/^vector39:$/;"	l
vector39	vectors.S	/^vector39:$/;"	l
vector4	kernel.asm	/^vector4:$/;"	l
vector4	vectors.S	/^vector4:$/;"	l
vector40	kernel.asm	/^vector40:$/;"	l
vector40	vectors.S	/^vector40:$/;"	l
vector41	kernel.asm	/^vector41:$/;"	l
vector41	vectors.S	/^vector41:$/;"	l
vector42	kernel.asm	/^vector42:$/;"	l
vector42	vectors.S	/^vector42:$/;"	l
vector43	kernel.asm	/^vector43:$/;"	l
vector43	vectors.S	/^vector43:$/;"	l
vector44	kernel.asm	/^vector44:$/;"	l
vector44	vectors.S	/^vector44:$/;"	l
vector45	kernel.asm	/^vector45:$/;"	l
vector45	vectors.S	/^vector45:$/;"	l
vector46	kernel.asm	/^vector46:$/;"	l
vector46	vectors.S	/^vector46:$/;"	l
vector47	kernel.asm	/^vector47:$/;"	l
vector47	vectors.S	/^vector47:$/;"	l
vector48	kernel.asm	/^vector48:$/;"	l
vector48	vectors.S	/^vector48:$/;"	l
vector49	kernel.asm	/^vector49:$/;"	l
vector49	vectors.S	/^vector49:$/;"	l
vector5	kernel.asm	/^vector5:$/;"	l
vector5	vectors.S	/^vector5:$/;"	l
vector50	kernel.asm	/^vector50:$/;"	l
vector50	vectors.S	/^vector50:$/;"	l
vector51	kernel.asm	/^vector51:$/;"	l
vector51	vectors.S	/^vector51:$/;"	l
vector52	kernel.asm	/^vector52:$/;"	l
vector52	vectors.S	/^vector52:$/;"	l
vector53	kernel.asm	/^vector53:$/;"	l
vector53	vectors.S	/^vector53:$/;"	l
vector54	kernel.asm	/^vector54:$/;"	l
vector54	vectors.S	/^vector54:$/;"	l
vector55	kernel.asm	/^vector55:$/;"	l
vector55	vectors.S	/^vector55:$/;"	l
vector56	kernel.asm	/^vector56:$/;"	l
vector56	vectors.S	/^vector56:$/;"	l
vector57	kernel.asm	/^vector57:$/;"	l
vector57	vectors.S	/^vector57:$/;"	l
vector58	kernel.asm	/^vector58:$/;"	l
vector58	vectors.S	/^vector58:$/;"	l
vector59	kernel.asm	/^vector59:$/;"	l
vector59	vectors.S	/^vector59:$/;"	l
vector6	kernel.asm	/^vector6:$/;"	l
vector6	vectors.S	/^vector6:$/;"	l
vector60	kernel.asm	/^vector60:$/;"	l
vector60	vectors.S	/^vector60:$/;"	l
vector61	kernel.asm	/^vector61:$/;"	l
vector61	vectors.S	/^vector61:$/;"	l
vector62	kernel.asm	/^vector62:$/;"	l
vector62	vectors.S	/^vector62:$/;"	l
vector63	kernel.asm	/^vector63:$/;"	l
vector63	vectors.S	/^vector63:$/;"	l
vector64	kernel.asm	/^vector64:$/;"	l
vector64	vectors.S	/^vector64:$/;"	l
vector65	kernel.asm	/^vector65:$/;"	l
vector65	vectors.S	/^vector65:$/;"	l
vector66	kernel.asm	/^vector66:$/;"	l
vector66	vectors.S	/^vector66:$/;"	l
vector67	kernel.asm	/^vector67:$/;"	l
vector67	vectors.S	/^vector67:$/;"	l
vector68	kernel.asm	/^vector68:$/;"	l
vector68	vectors.S	/^vector68:$/;"	l
vector69	kernel.asm	/^vector69:$/;"	l
vector69	vectors.S	/^vector69:$/;"	l
vector7	kernel.asm	/^vector7:$/;"	l
vector7	vectors.S	/^vector7:$/;"	l
vector70	kernel.asm	/^vector70:$/;"	l
vector70	vectors.S	/^vector70:$/;"	l
vector71	kernel.asm	/^vector71:$/;"	l
vector71	vectors.S	/^vector71:$/;"	l
vector72	kernel.asm	/^vector72:$/;"	l
vector72	vectors.S	/^vector72:$/;"	l
vector73	kernel.asm	/^vector73:$/;"	l
vector73	vectors.S	/^vector73:$/;"	l
vector74	kernel.asm	/^vector74:$/;"	l
vector74	vectors.S	/^vector74:$/;"	l
vector75	kernel.asm	/^vector75:$/;"	l
vector75	vectors.S	/^vector75:$/;"	l
vector76	kernel.asm	/^vector76:$/;"	l
vector76	vectors.S	/^vector76:$/;"	l
vector77	kernel.asm	/^vector77:$/;"	l
vector77	vectors.S	/^vector77:$/;"	l
vector78	kernel.asm	/^vector78:$/;"	l
vector78	vectors.S	/^vector78:$/;"	l
vector79	kernel.asm	/^vector79:$/;"	l
vector79	vectors.S	/^vector79:$/;"	l
vector8	kernel.asm	/^vector8:$/;"	l
vector8	vectors.S	/^vector8:$/;"	l
vector80	kernel.asm	/^vector80:$/;"	l
vector80	vectors.S	/^vector80:$/;"	l
vector81	kernel.asm	/^vector81:$/;"	l
vector81	vectors.S	/^vector81:$/;"	l
vector82	kernel.asm	/^vector82:$/;"	l
vector82	vectors.S	/^vector82:$/;"	l
vector83	kernel.asm	/^vector83:$/;"	l
vector83	vectors.S	/^vector83:$/;"	l
vector84	kernel.asm	/^vector84:$/;"	l
vector84	vectors.S	/^vector84:$/;"	l
vector85	kernel.asm	/^vector85:$/;"	l
vector85	vectors.S	/^vector85:$/;"	l
vector86	kernel.asm	/^vector86:$/;"	l
vector86	vectors.S	/^vector86:$/;"	l
vector87	kernel.asm	/^vector87:$/;"	l
vector87	vectors.S	/^vector87:$/;"	l
vector88	kernel.asm	/^vector88:$/;"	l
vector88	vectors.S	/^vector88:$/;"	l
vector89	kernel.asm	/^vector89:$/;"	l
vector89	vectors.S	/^vector89:$/;"	l
vector9	kernel.asm	/^vector9:$/;"	l
vector9	vectors.S	/^vector9:$/;"	l
vector90	kernel.asm	/^vector90:$/;"	l
vector90	vectors.S	/^vector90:$/;"	l
vector91	kernel.asm	/^vector91:$/;"	l
vector91	vectors.S	/^vector91:$/;"	l
vector92	kernel.asm	/^vector92:$/;"	l
vector92	vectors.S	/^vector92:$/;"	l
vector93	kernel.asm	/^vector93:$/;"	l
vector93	vectors.S	/^vector93:$/;"	l
vector94	kernel.asm	/^vector94:$/;"	l
vector94	vectors.S	/^vector94:$/;"	l
vector95	kernel.asm	/^vector95:$/;"	l
vector95	vectors.S	/^vector95:$/;"	l
vector96	kernel.asm	/^vector96:$/;"	l
vector96	vectors.S	/^vector96:$/;"	l
vector97	kernel.asm	/^vector97:$/;"	l
vector97	vectors.S	/^vector97:$/;"	l
vector98	kernel.asm	/^vector98:$/;"	l
vector98	vectors.S	/^vector98:$/;"	l
vector99	kernel.asm	/^vector99:$/;"	l
vector99	vectors.S	/^vector99:$/;"	l
vectors	vectors.S	/^vectors:$/;"	l
version	elf.h	/^  uint version;$/;"	m	struct:elfhdr
version	mp.h	/^  uchar version;                \/\/ I\/O APIC version$/;"	m	struct:mpioapic
version	mp.h	/^  uchar version;                \/\/ [14]$/;"	m	struct:mpconf
version	mp.h	/^  uchar version;                \/\/ local APIC verison$/;"	m	struct:mpproc
vga256_24bit	vga.c	/^int vga256_24bit[256] = { 0x000000, 0x0000a8, 0x00a800, 0x00a8a8, 0xa80000, 0xa800a8, 0xa85400, 0xa8a8a8, 0x545454, 0x5454fc, 0x54fc54, 0x54fcfc, 0xfc5454, 0xfc54fc, 0xfcfc54, 0xfcfcfc, 0x000000, 0x141414, 0x202020, 0x2c2c2c, 0x383838, 0x444444, 0x505050, 0x606060, 0x707070, 0x808080, 0x909090, 0xa0a0a0, 0xb4b4b4, 0xc8c8c8, 0xe0e0e0, 0xfcfcfc, 0x0000fc, 0x4000fc, 0x7c00fc, 0xbc00fc, 0xfc00fc, 0xfc00bc, 0xfc007c, 0xfc0040, 0xfc0000, 0xfc4000, 0xfc7c00, 0xfcbc00, 0xfcfc00, 0xbcfc00, 0x7cfc00, 0x40fc00, 0x00fc00, 0x00fc40, 0x00fc7c, 0x00fcbc, 0x00fcfc, 0x00bcfc, 0x007cfc, 0x0040fc, 0x7c7cfc, 0x9c7cfc, 0xbc7cfc, 0xdc7cfc, 0xfc7cfc, 0xfc7cdc, 0xfc7cbc, 0xfc7c9c, 0xfc7c7c, 0xfc9c7c, 0xfcbc7c, 0xfcdc7c, 0xfcfc7c, 0xdcfc7c, 0xbcfc7c, 0x9cfc7c, 0x7cfc7c, 0x7cfc9c, 0x7cfcbc, 0x7cfcdc, 0x7cfcfc, 0x7cdcfc, 0x7cbcfc, 0x7c9cfc, 0xb4b4fc, 0xc4b4fc, 0xd8b4fc, 0xe8b4fc, 0xfcb4fc, 0xfcb4e8, 0xfcb4d8, 0xfcb4c4, 0xfcb4b4, 0xfcc4b4, 0xfcd8b4, 0xfce8b4, 0xfcfcb4, 0xe8fcb4, 0xd8fcb4, 0xc4fcb4, 0xb4fcb4, 0xb4fcc4, 0xb4fcd8, 0xb4fce8, 0xb4fcfc, 0xb4e8fc, 0xb4d8fc, 0xb4c4fc, 0x000070, 0x1c0070, 0x380070, 0x540070, 0x700070, 0x700054, 0x700038, 0x70001c, 0x700000, 0x701c00, 0x703800, 0x705400, 0x707000, 0x547000, 0x387000, 0x1c7000, 0x007000, 0x00701c, 0x007038, 0x007054, 0x007070, 0x005470, 0x003870, 0x001c70, 0x383870, 0x443870, 0x543870, 0x603870, 0x703870, 0x703860, 0x703854, 0x703844, 0x703838, 0x704438, 0x705438, 0x706038, 0x707038, 0x607038, 0x547038, 0x447038, 0x387038, 0x387044, 0x387054, 0x387060, 0x387070, 0x386070, 0x385470, 0x384470, 0x505070, 0x585070, 0x605070, 0x685070, 0x705070, 0x705068, 0x705060, 0x705058, 0x705050, 0x705850, 0x706050, 0x706850, 0x707050, 0x687050, 0x607050, 0x587050, 0x507050, 0x507058, 0x507060, 0x507068, 0x507070, 0x506870, 0x506070, 0x505870, 0x000040, 0x100040, 0x200040, 0x300040, 0x400040, 0x400030, 0x400020, 0x400010, 0x400000, 0x401000, 0x402000, 0x403000, 0x404000, 0x304000, 0x204000, 0x104000, 0x004000, 0x004010, 0x004020, 0x004030, 0x004040, 0x003040, 0x002040, 0x001040, 0x202040, 0x282040, 0x302040, 0x382040, 0x402040, 0x402038, 0x402030, 0x402028, 0x402020, 0x402820, 0x403020, 0x403820, 0x404020, 0x384020, 0x304020, 0x284020, 0x204020, 0x204028, 0x204030, 0x204038, 0x204040, 0x203840, 0x203040, 0x202840, 0x2c2c40, 0x302c40, 0x342c40, 0x3c2c40, 0x402c40, 0x402c3c, 0x402c34, 0x402c30, 0x402c2c, 0x40302c, 0x40342c, 0x403c2c, 0x40402c, 0x3c402c, 0x34402c, 0x30402c, 0x2c402c, 0x2c4030, 0x2c4034, 0x2c403c, 0x2c4040, 0x2c3c40, 0x2c3440, 0x2c3040, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000 };$/;"	v
vgaMode13	vga.c	/^void vgaMode13() {$/;"	f
vgaMode3	vga.c	/^void vgaMode3() {$/;"	f
vgaSetPalette	vga.c	/^void vgaSetPalette(int index, int r, int g, int b) {$/;"	f
void	bad_mmap.asm	/^void$/;"	l
void	cat.asm	/^void$/;"	l
void	eager_mmap.asm	/^void$/;"	l
void	echo.asm	/^void$/;"	l
void	forktest.asm	/^void$/;"	l
void	grep.asm	/^void$/;"	l
void	imshow.asm	/^void$/;"	l
void	init.asm	/^void$/;"	l
void	kernel.asm	/^void cmostime(struct rtcdate *r)$/;"	l
void	kernel.asm	/^void displayinit(void)$/;"	l
void	kernel.asm	/^void entry32mp(void);$/;"	l
void	kernel.asm	/^void getContent()$/;"	l
void	kernel.asm	/^void getCurPosition()$/;"	l
void	kernel.asm	/^void idtinit(void) {$/;"	l
void	kernel.asm	/^void pageintr(addr_t a){$/;"	l
void	kernel.asm	/^void setContent()$/;"	l
void	kernel.asm	/^void setCurPosition()$/;"	l
void	kernel.asm	/^void setdefaultVGApalette() {$/;"	l
void	kernel.asm	/^void tvinit(void) {$/;"	l
void	kernel.asm	/^void vgaMode13() {$/;"	l
void	kernel.asm	/^void vgaMode3() {$/;"	l
void	kernel.asm	/^void vgaSetPalette(int index, int r, int g, int b) {$/;"	l
void	kernel.asm	/^void write3C0(unsigned char index, unsigned char value) {$/;"	l
void	kernel.asm	/^void write3C2(unsigned char value) {$/;"	l
void	kernel.asm	/^void write3C4(unsigned char index, unsigned char value) {$/;"	l
void	kernel.asm	/^void write3C6(unsigned char value) {$/;"	l
void	kernel.asm	/^void write3CE(unsigned char index, unsigned char value) {$/;"	l
void	kernel.asm	/^void write3D4(unsigned char index, unsigned char value) {$/;"	l
void	kernel.asm	/^void$/;"	l
void	kill.asm	/^void$/;"	l
void	lazy_mmap.asm	/^void$/;"	l
void	ln.asm	/^void$/;"	l
void	ls.asm	/^void$/;"	l
void	mkdir.asm	/^void$/;"	l
void	rm.asm	/^void$/;"	l
void	sh.asm	/^void$/;"	l
void	stressfs.asm	/^void$/;"	l
void	usertests.asm	/^void argptest()$/;"	l
void	usertests.asm	/^void dirtest(void)$/;"	l
void	usertests.asm	/^void$/;"	l
void	wc.asm	/^void$/;"	l
void	zombie.asm	/^void$/;"	l
volatile	kernel.asm	/^volatile uint *lapic;  \/\/ Initialized in mp.c$/;"	l
w	console.c	/^  uint w;  \/\/ Write index$/;"	m	struct:__anon8	file:
wait	proc.c	/^wait(void)$/;"	f
waitdisk	bootmain.c	/^waitdisk(void)$/;"	f
wakeup	proc.c	/^wakeup(void *chan)$/;"	f
wakeup1	proc.c	/^wakeup1(void *chan)$/;"	f	file:
walkpgdir	vm.c	/^walkpgdir(pde_t *pml4, const void *va, int alloc)$/;"	f	file:
wc	wc.c	/^wc(int fd, char *name)$/;"	f
whitespace	sh.c	/^char whitespace[] = " \\t\\r\\n\\v";$/;"	v
winode	mkfs.c	/^winode(uint inum, struct dinode *ip)$/;"	f
writable	file.h	/^  char writable;$/;"	m	struct:file
write	file.h	/^  int (*write)(struct inode*, char*, int);$/;"	m	struct:devsw
write3C0	vga.c	/^void write3C0(unsigned char index, unsigned char value) {$/;"	f
write3C2	vga.c	/^void write3C2(unsigned char value) {$/;"	f
write3C4	vga.c	/^void write3C4(unsigned char index, unsigned char value) {$/;"	f
write3C6	vga.c	/^void write3C6(unsigned char value) {$/;"	f
write3CE	vga.c	/^void write3CE(unsigned char index, unsigned char value) {$/;"	f
write3D4	vga.c	/^void write3D4(unsigned char index, unsigned char value) {$/;"	f
write_head	log.c	/^write_head(void)$/;"	f	file:
write_log	log.c	/^write_log(void)$/;"	f	file:
writefile	cuth	/^sub writefile($@){$/;"	s
writei	fs.c	/^writei(struct inode *ip, char *src, uint off, uint n)$/;"	f
writeopen	pipe.c	/^  int writeopen;  \/\/ write fd is still open$/;"	m	struct:pipe	file:
writetest	usertests.c	/^writetest(void)$/;"	f
writetest1	usertests.c	/^writetest1(void)$/;"	f
wrmsr	entry.S	/^wrmsr:$/;"	l
wrmsr	kernel.asm	/^wrmsr:$/;"	l
wrv	kernel.asm	/^  wrv = (ushort*)P2V((0x40<<4 | 0x67));  \/\/ Warm reset vector$/;"	d
wsect	mkfs.c	/^wsect(uint sec, void *buf)$/;"	f
x	bad_mmap.asm	/^    x = -xx;$/;"	d
x	bad_mmap.asm	/^    x = xx;$/;"	d
x	cat.asm	/^    x = -xx;$/;"	d
x	cat.asm	/^    x = xx;$/;"	d
x	eager_mmap.asm	/^    x = -xx;$/;"	d
x	eager_mmap.asm	/^    x = xx;$/;"	d
x	echo.asm	/^    x = -xx;$/;"	d
x	echo.asm	/^    x = xx;$/;"	d
x	grep.asm	/^    x = -xx;$/;"	d
x	grep.asm	/^    x = xx;$/;"	d
x	imshow.asm	/^    x = -xx;$/;"	d
x	imshow.asm	/^    x = xx;$/;"	d
x	init.asm	/^    x = -xx;$/;"	d
x	init.asm	/^    x = xx;$/;"	d
x	kernel.asm	/^    x = -xx;$/;"	d
x	kernel.asm	/^    x = xx;$/;"	d
x	kill.asm	/^    x = -xx;$/;"	d
x	kill.asm	/^    x = xx;$/;"	d
x	lazy_mmap.asm	/^    x = -xx;$/;"	d
x	lazy_mmap.asm	/^    x = xx;$/;"	d
x	ln.asm	/^    x = -xx;$/;"	d
x	ln.asm	/^    x = xx;$/;"	d
x	ls.asm	/^    x = -xx;$/;"	d
x	ls.asm	/^    x = xx;$/;"	d
x	mkdir.asm	/^    x = -xx;$/;"	d
x	mkdir.asm	/^    x = xx;$/;"	d
x	rm.asm	/^    x = -xx;$/;"	d
x	rm.asm	/^    x = xx;$/;"	d
x	sh.asm	/^    x = -xx;$/;"	d
x	sh.asm	/^    x = xx;$/;"	d
x	stressfs.asm	/^    x = -xx;$/;"	d
x	stressfs.asm	/^    x = xx;$/;"	d
x	umalloc.c	/^  Align x;$/;"	m	union:header	file:
x	usertests.asm	/^    x = -xx;$/;"	d
x	usertests.asm	/^    x = x * 1103515245 + 12345;$/;"	d
x	usertests.asm	/^    x = xx;$/;"	d
x	wc.asm	/^    x = -xx;$/;"	d
x	wc.asm	/^    x = xx;$/;"	d
x	zombie.asm	/^    x = -xx;$/;"	d
x	zombie.asm	/^    x = xx;$/;"	d
xchecksum	mp.h	/^  uchar xchecksum;              \/\/ extended table checksum$/;"	m	struct:mpconf
xchg	x86.h	/^xchg(volatile uint *addr, addr_t newval)$/;"	f
xint	mkfs.c	/^xint(uint x)$/;"	f
xlength	mp.h	/^  ushort xlength;               \/\/ extended table length$/;"	m	struct:mpconf
xshort	mkfs.c	/^xshort(ushort x)$/;"	f
xticks	kernel.asm	/^  xticks = ticks;$/;"	d
year	date.h	/^  uint year;$/;"	m	struct:rtcdate
yield	proc.c	/^yield(void)$/;"	f
zeroes	mkfs.c	/^char zeroes[BSIZE];$/;"	v
